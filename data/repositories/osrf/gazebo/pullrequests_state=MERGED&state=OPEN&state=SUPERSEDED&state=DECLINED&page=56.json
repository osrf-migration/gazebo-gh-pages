{"next": "data/repositories/osrf/gazebo/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=57.json", "values": [{"description": "See pull request #2730 for original.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2752/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:3959bbcc1b72%0D43d89f69c63d?from_pullrequest_id=2752"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2752/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2752.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2752/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2752/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2752"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2752/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3959bbcc1b72%0D43d89f69c63d?from_pullrequest_id=2752"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2752/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2752/statuses_page=1.json"}}, "title": "Joint control widget changes from gazebo8 to default", "close_source_branch": false, "type": "pullrequest", "id": 2752, "destination": {"commit": {"hash": "43d89f69c63d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43d89f69c63d.json"}, "html": {"href": "#!/osrf/gazebo/commits/43d89f69c63d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-07-19T01:26:25.906560+00:00", "summary": {"raw": "See pull request #2730 for original.", "markup": "markdown", "html": "<p>See <a href=\"#!/osrf/gazebo/pull-requests/2730/joint-control-menu-read-current-values\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2730</a> for original.</p>", "type": "rendered"}, "source": {"commit": {"hash": "862d9bdc8d26", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/862d9bdc8d26"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/862d9bdc8d26"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_widget2default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-19T04:45:32.700680+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": {"hash": "3959bbcc1b72", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3959bbcc1b72.json"}, "html": {"href": "#!/osrf/gazebo/commits/3959bbcc1b72"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This pull request fixes issue #1011 and cleans up large parts of the physics/dart implementation. I apologize for the large size of the diff, but most of it is just wiping away redundant function implementations and centralizing them into DARTJoint.\r\n\r\nThe actual problem that caused issue #1011 was only tangentially related to the Universal Joint. The ``UniversalJointForce`` test runs through a set of loops where each loop aims to test the internal consistency of the Universal Joint behavior with a model that contains two universal joints in sequence. The very last test was failing because the loop before it assumed that the joint positions of the two universal joints were being driven to all zero position and velocity, because it clamped the lower and upper position limits to zero. However, DART does not behave like this (by design). In DART, when a position limit is violated, it simply prevents the joint from moving any further in that direction (and computes the joint forces necessary to ensure this); it does not drive the joint position back to the limit value. Therefore, since the initial joint position was outside of the limits, DART did not drive it down to zero as the test was expecting.\r\n\r\nOn another note, the final test loop was a little bit ill-conceived. It assumed that the sum of the universal joint angles for each component could be summed to get the Euler angles of the final link's world-frame rotation. This would only be true if each joint has only one non-zero position component and the axes of those non-zero position components are parallel to each other. I tweaked the test to reflect these conditions.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2753/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:bb8abcd6ee11%0D6dd3ea7938b7?from_pullrequest_id=2753"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2753/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2753.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2753/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2753/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2753"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2753/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:bb8abcd6ee11%0D6dd3ea7938b7?from_pullrequest_id=2753"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2753/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2753/statuses_page=1.json"}}, "title": "Fix Issue 1011 -- DARTUniversalJoint", "close_source_branch": false, "type": "pullrequest", "id": 2753, "destination": {"commit": {"hash": "6dd3ea7938b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6dd3ea7938b7.json"}, "html": {"href": "#!/osrf/gazebo/commits/6dd3ea7938b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-07-19T19:24:28.764098+00:00", "summary": {"raw": "This pull request fixes issue #1011 and cleans up large parts of the physics/dart implementation. I apologize for the large size of the diff, but most of it is just wiping away redundant function implementations and centralizing them into DARTJoint.\r\n\r\nThe actual problem that caused issue #1011 was only tangentially related to the Universal Joint. The ``UniversalJointForce`` test runs through a set of loops where each loop aims to test the internal consistency of the Universal Joint behavior with a model that contains two universal joints in sequence. The very last test was failing because the loop before it assumed that the joint positions of the two universal joints were being driven to all zero position and velocity, because it clamped the lower and upper position limits to zero. However, DART does not behave like this (by design). In DART, when a position limit is violated, it simply prevents the joint from moving any further in that direction (and computes the joint forces necessary to ensure this); it does not drive the joint position back to the limit value. Therefore, since the initial joint position was outside of the limits, DART did not drive it down to zero as the test was expecting.\r\n\r\nOn another note, the final test loop was a little bit ill-conceived. It assumed that the sum of the universal joint angles for each component could be summed to get the Euler angles of the final link's world-frame rotation. This would only be true if each joint has only one non-zero position component and the axes of those non-zero position components are parallel to each other. I tweaked the test to reflect these conditions.", "markup": "markdown", "html": "<p>This pull request fixes issue <a href=\"#!/osrf/gazebo/issues/1011/dartuniversaljoint-has-failing-tests\" rel=\"nofollow\" title=\"DARTUniversalJoint has failing tests\" class=\"ap-connect-link\"><s>#1011</s></a> and cleans up large parts of the physics/dart implementation. I apologize for the large size of the diff, but most of it is just wiping away redundant function implementations and centralizing them into DARTJoint.</p>\n<p>The actual problem that caused issue <a href=\"#!/osrf/gazebo/issues/1011/dartuniversaljoint-has-failing-tests\" rel=\"nofollow\" title=\"DARTUniversalJoint has failing tests\" class=\"ap-connect-link\"><s>#1011</s></a> was only tangentially related to the Universal Joint. The <code>UniversalJointForce</code> test runs through a set of loops where each loop aims to test the internal consistency of the Universal Joint behavior with a model that contains two universal joints in sequence. The very last test was failing because the loop before it assumed that the joint positions of the two universal joints were being driven to all zero position and velocity, because it clamped the lower and upper position limits to zero. However, DART does not behave like this (by design). In DART, when a position limit is violated, it simply prevents the joint from moving any further in that direction (and computes the joint forces necessary to ensure this); it does not drive the joint position back to the limit value. Therefore, since the initial joint position was outside of the limits, DART did not drive it down to zero as the test was expecting.</p>\n<p>On another note, the final test loop was a little bit ill-conceived. It assumed that the sum of the universal joint angles for each component could be summed to get the Euler angles of the final link's world-frame rotation. This would only be true if each joint has only one non-zero position component and the axes of those non-zero position components are parallel to each other. I tweaked the test to reflect these conditions.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c46b196e84ba", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mxgrey/gazebo/commit/c46b196e84ba"}, "html": {"href": "https://bitbucket.org/mxgrey/gazebo/commits/c46b196e84ba"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mxgrey/gazebo"}, "html": {"href": "https://bitbucket.org/mxgrey/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{db441b9a-5483-4728-b3af-1135ccc99e42}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "mxgrey/gazebo", "uuid": "{db441b9a-5483-4728-b3af-1135ccc99e42}"}, "branch": {"name": "Issue_1011_DARTUniversalJoint"}}, "comment_count": 45, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-18T00:54:37.742879+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "bb8abcd6ee11", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bb8abcd6ee11.json"}, "html": {"href": "#!/osrf/gazebo/commits/bb8abcd6ee11"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This would allow using the 3D Mouse as a user interface for a robot without interfering with the GUI\r\n\r\nThis is a version of pull request #2739 that targets branch `gazebo7`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2754/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:fc29f3e4a64a%0Dbf4de63a381b?from_pullrequest_id=2754"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2754/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2754.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2754/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2754/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2754"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2754/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:fc29f3e4a64a%0Dbf4de63a381b?from_pullrequest_id=2754"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2754/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2754/statuses_page=1.json"}}, "title": "Add option in gui.ini to disable the use of spacenav (gazebo 7)", "close_source_branch": false, "type": "pullrequest", "id": 2754, "destination": {"commit": {"hash": "bf4de63a381b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf4de63a381b.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf4de63a381b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-07-20T17:15:52.142091+00:00", "summary": {"raw": "This would allow using the 3D Mouse as a user interface for a robot without interfering with the GUI\r\n\r\nThis is a version of pull request #2739 that targets branch `gazebo7`", "markup": "markdown", "html": "<p>This would allow using the 3D Mouse as a user interface for a robot without interfering with the GUI</p>\n<p>This is a version of <a href=\"#!/osrf/gazebo/pull-requests/2739/add-option-in-guiini-to-disable-the-use-of\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2739</a> that targets branch <code>gazebo7</code></p>", "type": "rendered"}, "source": {"commit": {"hash": "ac9869e2bca9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/azeey/gazebo/commit/ac9869e2bca9"}, "html": {"href": "https://bitbucket.org/azeey/gazebo/commits/ac9869e2bca9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/azeey/gazebo"}, "html": {"href": "https://bitbucket.org/azeey/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{772fa79f-a615-4db2-8173-9a31a4764a89}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "azeey/gazebo", "uuid": "{772fa79f-a615-4db2-8173-9a31a4764a89}"}, "branch": {"name": "spacenav_optional_gazebo7_b"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-25T21:56:10.274755+00:00", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "merge_commit": {"hash": "fc29f3e4a64a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fc29f3e4a64a.json"}, "html": {"href": "#!/osrf/gazebo/commits/fc29f3e4a64a"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "By default DART uses ODE's Dantzig LCP solver to handle constraints. However, the solver returns nan values in some situations ([DART issue #892](https://github.com/dartsim/dart/issues/892)). Kinematic loops with revolute joints are one of the problematic situations.\r\n\r\n~~b3cc07d has DART use a Projected Gauss-Seidel (PGS) solver instead. Doing so makes it possible to simulate kinematic loops with revolute joints among other things. There is some precedence for choosing the PGS solver since , when using ODE, Gazebo [defaults](https://bitbucket.org/osrf/sdformat/src/654ab4c930e1abe28208df47d4a49d8cf7515e08/sdf/1.6/physics.sdf?at=default&fileviewer=file-view-default#physics.sdf-165) to [ its PGS solver](http://wiki.ros.org/physics_ode/ODE#SOR_PGS_LCP). However, switching to DART's PGS solver causes some tests to fail.~~\r\n\r\n~~Failing tests:~~\r\n\r\nINTEGRATION_joint_force_torque\r\n\r\n* In `GetForceTorqueWithAppliedForce` and `GetForceTorqueWithAppliedForceReset` the base jitters a little bit, which causes some of the elements of the joint wrench that should be `0.0` to deviate (e.g. wrench_01.body1Force.Y()). The test failure can be eliminated by adding a fixed joint between the world and the first link.\r\n\r\nINTEGRATION_physics\r\n\r\n* In the `SpawnDrop` test, one of the objects is sliding just a little bit too much after the drop.\r\n~~~\r\n/home/osrf/default/test/integration/physics.cc:285: Failure\r\nThe difference between vel1.Y() and 0 is 0.021639389744573603, which exceeds 1e-2, where\r\nvel1.Y() evaluates to 0.021639389744573603,\r\n0 evaluates to 0, and\r\n1e-2 evaluates to 0.01.\r\n~~~\r\n\r\nINTEGRATION_factory\r\n\r\n* In the `Box` test (but not the `Sphere` test), the program has  a segmentation fault while cleaning up. It may have to do with the comment [here](#!/osrf/gazebo/src/801eaafce237e0858670e9354ff9113fe2527f32/gazebo/physics/dart/DARTModel.cc?at=default&fileviewer=file-view-default#DARTModel.cc-297).\r\n\r\nUpdate: 6a4c6f9 in conjunction with [PR #369](https://bitbucket.org/osrf/sdformat/pull-requests/369) makes the DART LCP solver a parameter that can be set as suggested by @scpeters. So, the tests should now pass.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2755/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:70ba305ea96b%0Dc1c50dc2390e?from_pullrequest_id=2755"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2755/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2755.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2755/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2755/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2755"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2755/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:70ba305ea96b%0Dc1c50dc2390e?from_pullrequest_id=2755"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2755/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2755/statuses_page=1.json"}}, "title": "DART LCP Solver", "close_source_branch": false, "type": "pullrequest", "id": 2755, "destination": {"commit": {"hash": "c1c50dc2390e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c1c50dc2390e.json"}, "html": {"href": "#!/osrf/gazebo/commits/c1c50dc2390e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-07-21T01:41:35.854848+00:00", "summary": {"raw": "By default DART uses ODE's Dantzig LCP solver to handle constraints. However, the solver returns nan values in some situations ([DART issue #892](https://github.com/dartsim/dart/issues/892)). Kinematic loops with revolute joints are one of the problematic situations.\r\n\r\n~~b3cc07d has DART use a Projected Gauss-Seidel (PGS) solver instead. Doing so makes it possible to simulate kinematic loops with revolute joints among other things. There is some precedence for choosing the PGS solver since , when using ODE, Gazebo [defaults](https://bitbucket.org/osrf/sdformat/src/654ab4c930e1abe28208df47d4a49d8cf7515e08/sdf/1.6/physics.sdf?at=default&fileviewer=file-view-default#physics.sdf-165) to [ its PGS solver](http://wiki.ros.org/physics_ode/ODE#SOR_PGS_LCP). However, switching to DART's PGS solver causes some tests to fail.~~\r\n\r\n~~Failing tests:~~\r\n\r\nINTEGRATION_joint_force_torque\r\n\r\n* In `GetForceTorqueWithAppliedForce` and `GetForceTorqueWithAppliedForceReset` the base jitters a little bit, which causes some of the elements of the joint wrench that should be `0.0` to deviate (e.g. wrench_01.body1Force.Y()). The test failure can be eliminated by adding a fixed joint between the world and the first link.\r\n\r\nINTEGRATION_physics\r\n\r\n* In the `SpawnDrop` test, one of the objects is sliding just a little bit too much after the drop.\r\n~~~\r\n/home/osrf/default/test/integration/physics.cc:285: Failure\r\nThe difference between vel1.Y() and 0 is 0.021639389744573603, which exceeds 1e-2, where\r\nvel1.Y() evaluates to 0.021639389744573603,\r\n0 evaluates to 0, and\r\n1e-2 evaluates to 0.01.\r\n~~~\r\n\r\nINTEGRATION_factory\r\n\r\n* In the `Box` test (but not the `Sphere` test), the program has  a segmentation fault while cleaning up. It may have to do with the comment [here](#!/osrf/gazebo/src/801eaafce237e0858670e9354ff9113fe2527f32/gazebo/physics/dart/DARTModel.cc?at=default&fileviewer=file-view-default#DARTModel.cc-297).\r\n\r\nUpdate: 6a4c6f9 in conjunction with [PR #369](https://bitbucket.org/osrf/sdformat/pull-requests/369) makes the DART LCP solver a parameter that can be set as suggested by @scpeters. So, the tests should now pass.", "markup": "markdown", "html": "<p>By default DART uses ODE's Dantzig LCP solver to handle constraints. However, the solver returns nan values in some situations (<a data-is-external-link=\"true\" href=\"https://github.com/dartsim/dart/issues/892\" rel=\"nofollow\">DART issue #892</a>). Kinematic loops with revolute joints are one of the problematic situations.</p>\n<p><del><a href=\"#!/osrf/gazebo/commits/b3cc07d\" rel=\"nofollow\" class=\"ap-connect-link\">b3cc07d</a> has DART use a Projected Gauss-Seidel (PGS) solver instead. Doing so makes it possible to simulate kinematic loops with revolute joints among other things. There is some precedence for choosing the PGS solver since , when using ODE, Gazebo <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/src/654ab4c930e1abe28208df47d4a49d8cf7515e08/sdf/1.6/physics.sdf?at=default&amp;fileviewer=file-view-default#physics.sdf-165\" rel=\"nofollow\">defaults</a> to <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/physics_ode/ODE#SOR_PGS_LCP\" rel=\"nofollow\"> its PGS solver</a>. However, switching to DART's PGS solver causes some tests to fail.</del></p>\n<p><del>Failing tests:</del></p>\n<p>INTEGRATION_joint_force_torque</p>\n<ul>\n<li>In <code>GetForceTorqueWithAppliedForce</code> and <code>GetForceTorqueWithAppliedForceReset</code> the base jitters a little bit, which causes some of the elements of the joint wrench that should be <code>0.0</code> to deviate (e.g. wrench_01.body1Force.Y()). The test failure can be eliminated by adding a fixed joint between the world and the first link.</li>\n</ul>\n<p>INTEGRATION_physics</p>\n<ul>\n<li>In the <code>SpawnDrop</code> test, one of the objects is sliding just a little bit too much after the drop.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>/home/osrf/default/test/integration/physics.cc:285: Failure\nThe difference between vel1.Y() and 0 is 0.021639389744573603, which exceeds 1e-2, where\nvel1.Y() evaluates to 0.021639389744573603,\n0 evaluates to 0, and\n1e-2 evaluates to 0.01.\n</pre></div>\n\n\n<p>INTEGRATION_factory</p>\n<ul>\n<li>In the <code>Box</code> test (but not the <code>Sphere</code> test), the program has  a segmentation fault while cleaning up. It may have to do with the comment <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/801eaafce237e0858670e9354ff9113fe2527f32/gazebo/physics/dart/DARTModel.cc?at=default&amp;fileviewer=file-view-default#DARTModel.cc-297\" rel=\"nofollow\">here</a>.</li>\n</ul>\n<p>Update: <a href=\"#!/osrf/gazebo/commits/6a4c6f9\" rel=\"nofollow\" class=\"ap-connect-link\">6a4c6f9</a> in conjunction with <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-requests/369\" rel=\"nofollow\">PR #369</a> makes the DART LCP solver a parameter that can be set as suggested by @scpeters. So, the tests should now pass.</p>", "type": "rendered"}, "source": {"commit": {"hash": "478d5d3fae76", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/478d5d3fae76"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/478d5d3fae76"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "dart_use_pgs_solver"}}, "comment_count": 21, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-16T01:10:10.901617+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": {"hash": "70ba305ea96b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/70ba305ea96b.json"}, "html": {"href": "#!/osrf/gazebo/commits/70ba305ea96b"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This PR makes it possible to load models containing kinematic loops while using DART physics. The approach is loosely inspired by Simbody's `MultibodyGraphMaker`. The main changes are to `DARTModel.cc` and `DARTModelPrivate.hh`. `DARTModel::Init` creates the DART joints and body nodes (links) corresponding to the loaded model. It breaks the model into trees using breadth-first-search starting from links with the world as their parent or no parents, although it may start from arbitrary links (with parents) if they are the only uninitialized links remaining. In a second step, it loops through any remaining uninitialized (loop) joints and creates them. Since DART does not support multiple parent joints for one body node, the loop joints are  paired with slave body nodes, which are attached to the child body nodes with weld constraints. To avoid issues with massless body nodes, the mass of the link is split across the slave body nodes (80364e6).\r\n\r\n`kinematic_loop.cc` tests two types of kinematic loops. One is a 3-link loop anchored to the world so that one link has two parents (world and preceding link). The other is a 4-link free loop where every link has one child and one parent. The tests let the loops move under gravity and make sure they end up in reasonable configurations.\r\n\r\nThe kinematic loops tested caused DART's Dantzig LCP solver to fail. This PR has changes from pull request #2755 (e.g. 6a4c6f9), which make it possible to specify different LCP solvers for DART (Dantzig or PGS).\r\n\r\nI am aware of at least one issue with this PR (see below) that would be good to address before considering merging it.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2756/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:6dd3ea7938b7%0D2c58f1f33766?from_pullrequest_id=2756"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2756/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2756.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2756/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2756/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2756"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2756/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:6dd3ea7938b7%0D2c58f1f33766?from_pullrequest_id=2756"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2756/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2756/statuses_page=1.json"}}, "title": "Dart kinematic loops", "close_source_branch": false, "type": "pullrequest", "id": 2756, "destination": {"commit": {"hash": "2c58f1f33766", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c58f1f33766.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c58f1f33766"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-07-21T23:48:13.716154+00:00", "summary": {"raw": "This PR makes it possible to load models containing kinematic loops while using DART physics. The approach is loosely inspired by Simbody's `MultibodyGraphMaker`. The main changes are to `DARTModel.cc` and `DARTModelPrivate.hh`. `DARTModel::Init` creates the DART joints and body nodes (links) corresponding to the loaded model. It breaks the model into trees using breadth-first-search starting from links with the world as their parent or no parents, although it may start from arbitrary links (with parents) if they are the only uninitialized links remaining. In a second step, it loops through any remaining uninitialized (loop) joints and creates them. Since DART does not support multiple parent joints for one body node, the loop joints are  paired with slave body nodes, which are attached to the child body nodes with weld constraints. To avoid issues with massless body nodes, the mass of the link is split across the slave body nodes (80364e6).\r\n\r\n`kinematic_loop.cc` tests two types of kinematic loops. One is a 3-link loop anchored to the world so that one link has two parents (world and preceding link). The other is a 4-link free loop where every link has one child and one parent. The tests let the loops move under gravity and make sure they end up in reasonable configurations.\r\n\r\nThe kinematic loops tested caused DART's Dantzig LCP solver to fail. This PR has changes from pull request #2755 (e.g. 6a4c6f9), which make it possible to specify different LCP solvers for DART (Dantzig or PGS).\r\n\r\nI am aware of at least one issue with this PR (see below) that would be good to address before considering merging it.", "markup": "markdown", "html": "<p>This PR makes it possible to load models containing kinematic loops while using DART physics. The approach is loosely inspired by Simbody's <code>MultibodyGraphMaker</code>. The main changes are to <code>DARTModel.cc</code> and <code>DARTModelPrivate.hh</code>. <code>DARTModel::Init</code> creates the DART joints and body nodes (links) corresponding to the loaded model. It breaks the model into trees using breadth-first-search starting from links with the world as their parent or no parents, although it may start from arbitrary links (with parents) if they are the only uninitialized links remaining. In a second step, it loops through any remaining uninitialized (loop) joints and creates them. Since DART does not support multiple parent joints for one body node, the loop joints are  paired with slave body nodes, which are attached to the child body nodes with weld constraints. To avoid issues with massless body nodes, the mass of the link is split across the slave body nodes (<a href=\"#!/osrf/gazebo/commits/80364e6\" rel=\"nofollow\" class=\"ap-connect-link\">80364e6</a>).</p>\n<p><code>kinematic_loop.cc</code> tests two types of kinematic loops. One is a 3-link loop anchored to the world so that one link has two parents (world and preceding link). The other is a 4-link free loop where every link has one child and one parent. The tests let the loops move under gravity and make sure they end up in reasonable configurations.</p>\n<p>The kinematic loops tested caused DART's Dantzig LCP solver to fail. This PR has changes from <a href=\"#!/osrf/gazebo/pull-requests/2755/dart-lcp-solver\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2755</a> (e.g. <a href=\"#!/osrf/gazebo/commits/6a4c6f9\" rel=\"nofollow\" class=\"ap-connect-link\">6a4c6f9</a>), which make it possible to specify different LCP solvers for DART (Dantzig or PGS).</p>\n<p>I am aware of at least one issue with this PR (see below) that would be good to address before considering merging it.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1a204f00ed16", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/1a204f00ed16"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/1a204f00ed16"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "dart_kinematic_loops"}}, "comment_count": 52, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-18T00:53:46.934457+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": {"hash": "6dd3ea7938b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6dd3ea7938b7.json"}, "html": {"href": "#!/osrf/gazebo/commits/6dd3ea7938b7"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This PR revives and extends pull request #2396, which was declined. The main focus of the PR is to support inertia tensors with off-diagonal terms with Bullet. Bullet only accepts diagonal inertia terms so that a rigid body's frame coincides with it principal axes.\r\n\r\n[f00c768](https://bitbucket.org/pchorak/gazebo/commits/f00c768) diagonalizes the given inertia tensor, passes the principal moments to Bullet, and adjusts the relative poses of the collision shapes accordingly ([aaa38dd](https://bitbucket.org/pchorak/gazebo/commits/aaa38dd) corrects the relative pose calculations). [c527a76](https://bitbucket.org/pchorak/gazebo/commits/c527a76) adjusts the joint axes accordingly.\r\n\r\n[67f74c7](https://bitbucket.org/pchorak/gazebo/commits/67f74c7) fixes the computation of the child and parent coordinate frames for prismatic and screw joints, so that they are initially aligned. The problem was that [btPlaneSpace1](https://github.com/bulletphysics/bullet3/blob/master/src/LinearMath/btVector3.h#L1283) generates a coordinate system aligned with the given joint axis using rotations about different planes depending on the value of the z component of the axis. Thus, the generated parent and child frames sometimes differ by 90 degrees in their initial poses, which can cause flying behavior. Although the problem was identified in the context of off-diagonal inertia terms, it is a more general bug and can be illustrated with the world file in the comments below.\r\n\r\nSince the principal axes of the inertia tensor determine the Bullet rigid body frame, properly updating the inertia of a link would entail adjusting the relative poses of the collision shapes and joints. I began adding these changes to `BulletLink::UpdateMass` but decided to print an error message instead for now ([7377dfe](https://bitbucket.org/pchorak/gazebo/commits/7377dfe)). What do you think? The joint axis and anchor calculations in `Bullet*Joint::Init` currently rely on the links being in their [initial world poses](https://bitbucket.org/pchorak/gazebo/src/c99abfb7522a97fa432981205ea8b2475f12c757/gazebo/physics/bullet/BulletScrewJoint.cc?at=bullet_off_diagonal_inertia2&fileviewer=file-view-default#BulletScrewJoint.cc-157).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2757/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:da598aa8472c%0D0e536b1ea0b2?from_pullrequest_id=2757"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2757/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2757.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2757/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2757/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2757"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2757/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:da598aa8472c%0D0e536b1ea0b2?from_pullrequest_id=2757"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2757/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2757/statuses_page=1.json"}}, "title": "Support off-diagonal inertia terms in bullet", "close_source_branch": false, "type": "pullrequest", "id": 2757, "destination": {"commit": {"hash": "0e536b1ea0b2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0e536b1ea0b2.json"}, "html": {"href": "#!/osrf/gazebo/commits/0e536b1ea0b2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-07-27T23:08:12.355338+00:00", "summary": {"raw": "This PR revives and extends pull request #2396, which was declined. The main focus of the PR is to support inertia tensors with off-diagonal terms with Bullet. Bullet only accepts diagonal inertia terms so that a rigid body's frame coincides with it principal axes.\r\n\r\n[f00c768](https://bitbucket.org/pchorak/gazebo/commits/f00c768) diagonalizes the given inertia tensor, passes the principal moments to Bullet, and adjusts the relative poses of the collision shapes accordingly ([aaa38dd](https://bitbucket.org/pchorak/gazebo/commits/aaa38dd) corrects the relative pose calculations). [c527a76](https://bitbucket.org/pchorak/gazebo/commits/c527a76) adjusts the joint axes accordingly.\r\n\r\n[67f74c7](https://bitbucket.org/pchorak/gazebo/commits/67f74c7) fixes the computation of the child and parent coordinate frames for prismatic and screw joints, so that they are initially aligned. The problem was that [btPlaneSpace1](https://github.com/bulletphysics/bullet3/blob/master/src/LinearMath/btVector3.h#L1283) generates a coordinate system aligned with the given joint axis using rotations about different planes depending on the value of the z component of the axis. Thus, the generated parent and child frames sometimes differ by 90 degrees in their initial poses, which can cause flying behavior. Although the problem was identified in the context of off-diagonal inertia terms, it is a more general bug and can be illustrated with the world file in the comments below.\r\n\r\nSince the principal axes of the inertia tensor determine the Bullet rigid body frame, properly updating the inertia of a link would entail adjusting the relative poses of the collision shapes and joints. I began adding these changes to `BulletLink::UpdateMass` but decided to print an error message instead for now ([7377dfe](https://bitbucket.org/pchorak/gazebo/commits/7377dfe)). What do you think? The joint axis and anchor calculations in `Bullet*Joint::Init` currently rely on the links being in their [initial world poses](https://bitbucket.org/pchorak/gazebo/src/c99abfb7522a97fa432981205ea8b2475f12c757/gazebo/physics/bullet/BulletScrewJoint.cc?at=bullet_off_diagonal_inertia2&fileviewer=file-view-default#BulletScrewJoint.cc-157).", "markup": "markdown", "html": "<p>This PR revives and extends <a href=\"#!/osrf/gazebo/pull-requests/2396/support-off-diagonal-inertia-terms-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2396</a>, which was declined. The main focus of the PR is to support inertia tensors with off-diagonal terms with Bullet. Bullet only accepts diagonal inertia terms so that a rigid body's frame coincides with it principal axes.</p>\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/f00c768\" rel=\"nofollow\">f00c768</a> diagonalizes the given inertia tensor, passes the principal moments to Bullet, and adjusts the relative poses of the collision shapes accordingly (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/aaa38dd\" rel=\"nofollow\">aaa38dd</a> corrects the relative pose calculations). <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/c527a76\" rel=\"nofollow\">c527a76</a> adjusts the joint axes accordingly.</p>\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/67f74c7\" rel=\"nofollow\">67f74c7</a> fixes the computation of the child and parent coordinate frames for prismatic and screw joints, so that they are initially aligned. The problem was that <a data-is-external-link=\"true\" href=\"https://github.com/bulletphysics/bullet3/blob/master/src/LinearMath/btVector3.h#L1283\" rel=\"nofollow\">btPlaneSpace1</a> generates a coordinate system aligned with the given joint axis using rotations about different planes depending on the value of the z component of the axis. Thus, the generated parent and child frames sometimes differ by 90 degrees in their initial poses, which can cause flying behavior. Although the problem was identified in the context of off-diagonal inertia terms, it is a more general bug and can be illustrated with the world file in the comments below.</p>\n<p>Since the principal axes of the inertia tensor determine the Bullet rigid body frame, properly updating the inertia of a link would entail adjusting the relative poses of the collision shapes and joints. I began adding these changes to <code>BulletLink::UpdateMass</code> but decided to print an error message instead for now (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/7377dfe\" rel=\"nofollow\">7377dfe</a>). What do you think? The joint axis and anchor calculations in <code>Bullet*Joint::Init</code> currently rely on the links being in their <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/src/c99abfb7522a97fa432981205ea8b2475f12c757/gazebo/physics/bullet/BulletScrewJoint.cc?at=bullet_off_diagonal_inertia2&amp;fileviewer=file-view-default#BulletScrewJoint.cc-157\" rel=\"nofollow\">initial world poses</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "bf9987f6b601", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/bf9987f6b601"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/bf9987f6b601"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "bullet_off_diagonal_inertia2"}}, "comment_count": 19, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-26T19:00:34.699132+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": {"hash": "da598aa8472c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/da598aa8472c.json"}, "html": {"href": "#!/osrf/gazebo/commits/da598aa8472c"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Because of some differences in workflow between ODE and DART, the collision reporting that was being done for DART was a little bit nonsensical. It would report the collisions encountered on the simulation step *before* the last one, producing out-of-date information.\r\n\r\nBut even more of a problem was that this opened us up to segfaulting if an object was removed between the last time step and the current one. The solution that was put into place to resolve this was to perform a simulation step each time an object is removed from the DART world. This is also problematic since it means the whole world will be taking a forward time step each time a single object is removed, with no way for the user to control it.\r\n\r\nThis pull request shuffles some of the workflow around for DART so that collision reporting occurs immediately after the collision detection is performed. We also no longer perform forward time steps when removing objects from the simulation, so the forward simulation is entirely under the control of the user once again.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2758/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5e024b2ac9c0%0Da2e24ead6b45?from_pullrequest_id=2758"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2758/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2758.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2758/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2758/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2758"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2758/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5e024b2ac9c0%0Da2e24ead6b45?from_pullrequest_id=2758"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2758/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2758/statuses_page=1.json"}}, "title": "Fixing the collision reporting for DART", "close_source_branch": false, "type": "pullrequest", "id": 2758, "destination": {"commit": {"hash": "a2e24ead6b45", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a2e24ead6b45.json"}, "html": {"href": "#!/osrf/gazebo/commits/a2e24ead6b45"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-07-31T17:39:41.958527+00:00", "summary": {"raw": "Because of some differences in workflow between ODE and DART, the collision reporting that was being done for DART was a little bit nonsensical. It would report the collisions encountered on the simulation step *before* the last one, producing out-of-date information.\r\n\r\nBut even more of a problem was that this opened us up to segfaulting if an object was removed between the last time step and the current one. The solution that was put into place to resolve this was to perform a simulation step each time an object is removed from the DART world. This is also problematic since it means the whole world will be taking a forward time step each time a single object is removed, with no way for the user to control it.\r\n\r\nThis pull request shuffles some of the workflow around for DART so that collision reporting occurs immediately after the collision detection is performed. We also no longer perform forward time steps when removing objects from the simulation, so the forward simulation is entirely under the control of the user once again.", "markup": "markdown", "html": "<p>Because of some differences in workflow between ODE and DART, the collision reporting that was being done for DART was a little bit nonsensical. It would report the collisions encountered on the simulation step <em>before</em> the last one, producing out-of-date information.</p>\n<p>But even more of a problem was that this opened us up to segfaulting if an object was removed between the last time step and the current one. The solution that was put into place to resolve this was to perform a simulation step each time an object is removed from the DART world. This is also problematic since it means the whole world will be taking a forward time step each time a single object is removed, with no way for the user to control it.</p>\n<p>This pull request shuffles some of the workflow around for DART so that collision reporting occurs immediately after the collision detection is performed. We also no longer perform forward time steps when removing objects from the simulation, so the forward simulation is entirely under the control of the user once again.</p>", "type": "rendered"}, "source": {"commit": {"hash": "14429deb5733", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mxgrey/gazebo/commit/14429deb5733"}, "html": {"href": "https://bitbucket.org/mxgrey/gazebo/commits/14429deb5733"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mxgrey/gazebo"}, "html": {"href": "https://bitbucket.org/mxgrey/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{db441b9a-5483-4728-b3af-1135ccc99e42}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "mxgrey/gazebo", "uuid": "{db441b9a-5483-4728-b3af-1135ccc99e42}"}, "branch": {"name": "FixCollisionReportingForDart"}}, "comment_count": 18, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-02T18:51:01.396758+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "5e024b2ac9c0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5e024b2ac9c0.json"}, "html": {"href": "#!/osrf/gazebo/commits/5e024b2ac9c0"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2759/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:7d94cae086e0%0D57d0c4c7b52a?from_pullrequest_id=2759"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2759/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2759.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2759/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2759/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2759"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2759/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:7d94cae086e0%0D57d0c4c7b52a?from_pullrequest_id=2759"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2759/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2759/statuses_page=1.json"}}, "title": "Merge gazebo7 forward to gazebo8", "close_source_branch": true, "type": "pullrequest", "id": 2759, "destination": {"commit": {"hash": "57d0c4c7b52a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57d0c4c7b52a.json"}, "html": {"href": "#!/osrf/gazebo/commits/57d0c4c7b52a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-08-03T01:42:14.862981+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "91bb928754d5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/91bb928754d5.json"}, "html": {"href": "#!/osrf/gazebo/commits/91bb928754d5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "merge_78_8"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-10T04:38:10.844288+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "7d94cae086e0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7d94cae086e0.json"}, "html": {"href": "#!/osrf/gazebo/commits/7d94cae086e0"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Include HDF5 dirs when compiling with HDF5 support", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2760/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d06c7d377dc3%0Df9d84fa63ffb?from_pullrequest_id=2760"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2760/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2760.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2760/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2760/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2760"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2760/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d06c7d377dc3%0Df9d84fa63ffb?from_pullrequest_id=2760"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2760/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2760/statuses_page=1.json"}}, "title": "Include HDF5 dirs when compiling with HDF5 support", "close_source_branch": false, "type": "pullrequest", "id": 2760, "destination": {"commit": {"hash": "f9d84fa63ffb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f9d84fa63ffb.json"}, "html": {"href": "#!/osrf/gazebo/commits/f9d84fa63ffb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-08-04T10:36:57.203321+00:00", "summary": {"raw": "Include HDF5 dirs when compiling with HDF5 support", "markup": "markdown", "html": "<p>Include HDF5 dirs when compiling with HDF5 support</p>", "type": "rendered"}, "source": {"commit": {"hash": "5e6178016607", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-13/commit/5e6178016607"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-13/commits/5e6178016607"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-13"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-13"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6f648bb8-4a9d-4a21-b019-bf56e4815f6d}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-13", "full_name": "traversaro/gazebo-13", "uuid": "{6f648bb8-4a9d-4a21-b019-bf56e4815f6d}"}, "branch": {"name": "traversaro/include-hdf5-dirs-when-compiling-with-hd-1501842966790"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-31T22:23:56.836831+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "d06c7d377dc3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d06c7d377dc3.json"}, "html": {"href": "#!/osrf/gazebo/commits/d06c7d377dc3"}}}, "closed_by": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}}, {"description": "Ogre::Root::shutdown followed by Ogre::Root::~Root leads to a\r\nsegmentation fault. Since ~Root calls shutdown anyhow, the shutdown call\r\nin RenderEngine::Fini can be removed.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2761/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:57d0c4c7b52a%0D26197752f98d?from_pullrequest_id=2761"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2761/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2761.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2761/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2761/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2761"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2761/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:57d0c4c7b52a%0D26197752f98d?from_pullrequest_id=2761"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2761/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2761/statuses_page=1.json"}}, "title": "Fixed issue #2324", "close_source_branch": false, "type": "pullrequest", "id": 2761, "destination": {"commit": {"hash": "26197752f98d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/26197752f98d.json"}, "html": {"href": "#!/osrf/gazebo/commits/26197752f98d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-08-07T20:58:24.144219+00:00", "summary": {"raw": "Ogre::Root::shutdown followed by Ogre::Root::~Root leads to a\r\nsegmentation fault. Since ~Root calls shutdown anyhow, the shutdown call\r\nin RenderEngine::Fini can be removed.", "markup": "markdown", "html": "<p>Ogre::Root::shutdown followed by Ogre::Root::~Root leads to a\nsegmentation fault. Since ~Root calls shutdown anyhow, the shutdown call\nin RenderEngine::Fini can be removed.</p>", "type": "rendered"}, "source": {"commit": {"hash": "58a92967c76f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo/commit/58a92967c76f"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo/commits/58a92967c76f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "tim_rakowski/gazebo", "uuid": "{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}"}, "branch": {"name": "gazebo8_ogre_1.10_shutdown_segfault_fix"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-08T20:55:08.420671+00:00", "author": {"display_name": "Tim Rakowski", "uuid": "{568e53a4-2b97-42ea-929e-038af8b7825e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D"}, "html": {"href": "https://bitbucket.org/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/83d3799cfee56e3c3195419ca9fd5d06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTR-2.png"}}, "nickname": "Tim Rakowski", "type": "user", "account_id": "557058:34f593f6-84fc-4797-8028-c8e3412b0993"}, "merge_commit": {"hash": "57d0c4c7b52a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57d0c4c7b52a.json"}, "html": {"href": "#!/osrf/gazebo/commits/57d0c4c7b52a"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "This pull request adds the ability to create joints with `Model::CreateJoint` while using DART physics (see issue #903). It implements joint creation using \"loop\" joints since DART does not support multiple parent joints for a single BodyNode. More specifically, when `CreateJoint` is called a new DART joint *and* BodyNode are added to the skeleton and the BodyNode is then welded to the child link as a slave body. Thus the child link behaves as if it were attached to the new joint. The pull request also supports removing loop joints though not other joints.\r\n\r\nThe added functionality is sufficient to use the harness plugin with DART, so the `harness.cc` integration tests are enabled for DART. Some of the tests in `joint_test.cc` are also enabled although `JointCreationDestructionTest` tends to fail.\r\n\r\n* b3ebe59 makes `Model::CreateJoint` and `Model::RemoveJoint` virtual and overrides them in the `DARTModel` class. 578f1ea actually adds the logic for the `DARTModel` versions of the functions and modifies the `DARTLink` class to keep track of the weld constraints for loop joints as well as slave BodyNodes so that they can be removed later if desired. The code to create loop joints already exists from pull request #2756. However, since `CreateJoint` may be called after the model, joints, etc. have been initialized, it may need to redistribute the mass of the child link with the new slave BodyNode (5496129) and initialize the new joint to achieve the correct weld pose (926045c).\r\n\r\n* 9241cb6 changes how DART joint positions are reset to handle changing numbers of joints after model initialization. Formerly `DARTModel` assumed a fixed number of DOF. Now the joint positions are reset individually within `DARTJoint::Reset`.\r\n\r\n* 8e89ccb moves the allocations of DART joint properties to the joint class constructors since `DARTJoint::Load` is not called if `CreateJoint(name, type, parent, child)` is used to create a joint instead of `CreateJoint(sdf_elem)`. The former call caused segfaults without this change.\r\n\r\n* bb2147b and fd8e271 basically cancel each other out.\r\n\r\nNote: I tested this pull request with pull request #2697, which supports harness re-attaching, and the harness integration tests worked.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2762/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:8234fc47cfbd%0D562cf6ef3995?from_pullrequest_id=2762"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2762/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2762.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2762/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2762/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2762"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2762/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8234fc47cfbd%0D562cf6ef3995?from_pullrequest_id=2762"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2762/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2762/statuses_page=1.json"}}, "title": "Dart harness", "close_source_branch": true, "type": "pullrequest", "id": 2762, "destination": {"commit": {"hash": "562cf6ef3995", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/562cf6ef3995.json"}, "html": {"href": "#!/osrf/gazebo/commits/562cf6ef3995"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-08-08T21:04:58.305608+00:00", "summary": {"raw": "This pull request adds the ability to create joints with `Model::CreateJoint` while using DART physics (see issue #903). It implements joint creation using \"loop\" joints since DART does not support multiple parent joints for a single BodyNode. More specifically, when `CreateJoint` is called a new DART joint *and* BodyNode are added to the skeleton and the BodyNode is then welded to the child link as a slave body. Thus the child link behaves as if it were attached to the new joint. The pull request also supports removing loop joints though not other joints.\r\n\r\nThe added functionality is sufficient to use the harness plugin with DART, so the `harness.cc` integration tests are enabled for DART. Some of the tests in `joint_test.cc` are also enabled although `JointCreationDestructionTest` tends to fail.\r\n\r\n* b3ebe59 makes `Model::CreateJoint` and `Model::RemoveJoint` virtual and overrides them in the `DARTModel` class. 578f1ea actually adds the logic for the `DARTModel` versions of the functions and modifies the `DARTLink` class to keep track of the weld constraints for loop joints as well as slave BodyNodes so that they can be removed later if desired. The code to create loop joints already exists from pull request #2756. However, since `CreateJoint` may be called after the model, joints, etc. have been initialized, it may need to redistribute the mass of the child link with the new slave BodyNode (5496129) and initialize the new joint to achieve the correct weld pose (926045c).\r\n\r\n* 9241cb6 changes how DART joint positions are reset to handle changing numbers of joints after model initialization. Formerly `DARTModel` assumed a fixed number of DOF. Now the joint positions are reset individually within `DARTJoint::Reset`.\r\n\r\n* 8e89ccb moves the allocations of DART joint properties to the joint class constructors since `DARTJoint::Load` is not called if `CreateJoint(name, type, parent, child)` is used to create a joint instead of `CreateJoint(sdf_elem)`. The former call caused segfaults without this change.\r\n\r\n* bb2147b and fd8e271 basically cancel each other out.\r\n\r\nNote: I tested this pull request with pull request #2697, which supports harness re-attaching, and the harness integration tests worked.", "markup": "markdown", "html": "<p>This pull request adds the ability to create joints with <code>Model::CreateJoint</code> while using DART physics (see issue <a href=\"#!/osrf/gazebo/issues/903/dart-doesnt-support-dynamic-creation\" rel=\"nofollow\" title=\"DART doesn&#39;t support dynamic creation/destruction of joints\" class=\"ap-connect-link\">#903</a>). It implements joint creation using \"loop\" joints since DART does not support multiple parent joints for a single BodyNode. More specifically, when <code>CreateJoint</code> is called a new DART joint <em>and</em> BodyNode are added to the skeleton and the BodyNode is then welded to the child link as a slave body. Thus the child link behaves as if it were attached to the new joint. The pull request also supports removing loop joints though not other joints.</p>\n<p>The added functionality is sufficient to use the harness plugin with DART, so the <code>harness.cc</code> integration tests are enabled for DART. Some of the tests in <code>joint_test.cc</code> are also enabled although <code>JointCreationDestructionTest</code> tends to fail.</p>\n<ul>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/b3ebe59\" rel=\"nofollow\" class=\"ap-connect-link\">b3ebe59</a> makes <code>Model::CreateJoint</code> and <code>Model::RemoveJoint</code> virtual and overrides them in the <code>DARTModel</code> class. <a href=\"#!/osrf/gazebo/commits/578f1ea\" rel=\"nofollow\" class=\"ap-connect-link\">578f1ea</a> actually adds the logic for the <code>DARTModel</code> versions of the functions and modifies the <code>DARTLink</code> class to keep track of the weld constraints for loop joints as well as slave BodyNodes so that they can be removed later if desired. The code to create loop joints already exists from <a href=\"#!/osrf/gazebo/pull-requests/2756/dart-kinematic-loops\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2756</a>. However, since <code>CreateJoint</code> may be called after the model, joints, etc. have been initialized, it may need to redistribute the mass of the child link with the new slave BodyNode (<a href=\"#!/osrf/gazebo/commits/5496129\" rel=\"nofollow\" class=\"ap-connect-link\">5496129</a>) and initialize the new joint to achieve the correct weld pose (<a href=\"#!/osrf/gazebo/commits/926045c\" rel=\"nofollow\" class=\"ap-connect-link\">926045c</a>).</p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/9241cb6\" rel=\"nofollow\" class=\"ap-connect-link\">9241cb6</a> changes how DART joint positions are reset to handle changing numbers of joints after model initialization. Formerly <code>DARTModel</code> assumed a fixed number of DOF. Now the joint positions are reset individually within <code>DARTJoint::Reset</code>.</p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/8e89ccb\" rel=\"nofollow\" class=\"ap-connect-link\">8e89ccb</a> moves the allocations of DART joint properties to the joint class constructors since <code>DARTJoint::Load</code> is not called if <code>CreateJoint(name, type, parent, child)</code> is used to create a joint instead of <code>CreateJoint(sdf_elem)</code>. The former call caused segfaults without this change.</p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/bb2147b\" rel=\"nofollow\" class=\"ap-connect-link\">bb2147b</a> and <a href=\"#!/osrf/gazebo/commits/fd8e271\" rel=\"nofollow\" class=\"ap-connect-link\">fd8e271</a> basically cancel each other out.</p>\n</li>\n</ul>\n<p>Note: I tested this pull request with <a href=\"#!/osrf/gazebo/pull-requests/2697/harnessplugin-pimpl-and-allow-re-attaching\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2697</a>, which supports harness re-attaching, and the harness integration tests worked.</p>", "type": "rendered"}, "source": {"commit": {"hash": "5ff7641e9fef", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5ff7641e9fef.json"}, "html": {"href": "#!/osrf/gazebo/commits/5ff7641e9fef"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "dart_harness"}}, "comment_count": 46, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-07T07:55:38.858995+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": {"hash": "8234fc47cfbd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8234fc47cfbd.json"}, "html": {"href": "#!/osrf/gazebo/commits/8234fc47cfbd"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "When sending a message to multiple subscribers sharing the same connection, the master manager was sending the same message multiple times. This pull request makes sure that the same message is sent only once per connection.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2763/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5c2e50d85912%0D5f41b719c1fe?from_pullrequest_id=2763"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2763/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2763.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2763/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2763/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2763"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2763/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5c2e50d85912%0D5f41b719c1fe?from_pullrequest_id=2763"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2763/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2763/statuses_page=1.json"}}, "title": "Send message to subscribers only once per connection", "close_source_branch": false, "type": "pullrequest", "id": 2763, "destination": {"commit": {"hash": "5f41b719c1fe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f41b719c1fe.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f41b719c1fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-08-10T16:48:28.174419+00:00", "summary": {"raw": "When sending a message to multiple subscribers sharing the same connection, the master manager was sending the same message multiple times. This pull request makes sure that the same message is sent only once per connection.", "markup": "markdown", "html": "<p>When sending a message to multiple subscribers sharing the same connection, the master manager was sending the same message multiple times. This pull request makes sure that the same message is sent only once per connection.</p>", "type": "rendered"}, "source": {"commit": {"hash": "07b3e78b3baa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/07b3e78b3baa"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/07b3e78b3baa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "send_once_gazebo7"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-18T00:54:06.809537+00:00", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "merge_commit": {"hash": "5c2e50d85912", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5c2e50d85912.json"}, "html": {"href": "#!/osrf/gazebo/commits/5c2e50d85912"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "* Fix issues with OGRE 1.10.7\r\n\r\n    Changes: \r\n\r\n\r\n\r\n    * Recent versions of OGRE don't have a different prefix for OGRE plugin libraries on macOS than on other systems. \r\n    * OGRE does not like redundant resources\r\n    * Must not pass null \"externalWindowHandle\" to OGRE's createRenderWindow(). Also fixed missing initialization of RenderEngine::dummyWindowId.\r\n    * Missing headers during debug builds.\r\n    * Changes with HardwareVertexBufferSharedPtr et al. (no longer a subclass of SharedPtr). Changes should still work with older versions of OGRE.\r\n    \r\n* Fix GUI plugins on macOS\r\n\r\n    GUI plugins never worked on macOS because the OpenGL layer was always drawn on top of the window. With this commit, the OpenGL layer is now drawn below the window, and instead the GLWidget's area is \"carved out\" making the underlying OpenGL layer visible. Any GUI plugin then obviously also is on top of the OpenGL layer.\r\n\r\n\r\n\r\n    See also: https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/OpenGL-MacProgGuide/opengl\\_contexts/opengl\\_contexts.html#//apple\\_ref/doc/uid/TP40001987-CH216-SW21 (In short, the fix is the Apple-recommended way of drawing UI elements on top of OpenGL.)\r\n\r\n\r\n\r\n    Only caveat: This fix requires an upstream change in OGRE. This version works: https://github.com/fschopp/ogre/releases/tag/v1.10.7-fschopp-1", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2764/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/fschopp/gazebo:637395b5f145%0D0eaf948fbff0?from_pullrequest_id=2764"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2764/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2764.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2764/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2764/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2764"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2764/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/fschopp/gazebo:637395b5f145%0D0eaf948fbff0?from_pullrequest_id=2764"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2764/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2764/statuses_page=1.json"}}, "title": "GUI Plugins on macOS", "close_source_branch": false, "type": "pullrequest", "id": 2764, "destination": {"commit": {"hash": "0eaf948fbff0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0eaf948fbff0.json"}, "html": {"href": "#!/osrf/gazebo/commits/0eaf948fbff0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-08-14T07:47:09.111504+00:00", "summary": {"raw": "* Fix issues with OGRE 1.10.7\r\n\r\n    Changes: \r\n\r\n\r\n\r\n    * Recent versions of OGRE don't have a different prefix for OGRE plugin libraries on macOS than on other systems. \r\n    * OGRE does not like redundant resources\r\n    * Must not pass null \"externalWindowHandle\" to OGRE's createRenderWindow(). Also fixed missing initialization of RenderEngine::dummyWindowId.\r\n    * Missing headers during debug builds.\r\n    * Changes with HardwareVertexBufferSharedPtr et al. (no longer a subclass of SharedPtr). Changes should still work with older versions of OGRE.\r\n    \r\n* Fix GUI plugins on macOS\r\n\r\n    GUI plugins never worked on macOS because the OpenGL layer was always drawn on top of the window. With this commit, the OpenGL layer is now drawn below the window, and instead the GLWidget's area is \"carved out\" making the underlying OpenGL layer visible. Any GUI plugin then obviously also is on top of the OpenGL layer.\r\n\r\n\r\n\r\n    See also: https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/OpenGL-MacProgGuide/opengl\\_contexts/opengl\\_contexts.html#//apple\\_ref/doc/uid/TP40001987-CH216-SW21 (In short, the fix is the Apple-recommended way of drawing UI elements on top of OpenGL.)\r\n\r\n\r\n\r\n    Only caveat: This fix requires an upstream change in OGRE. This version works: https://github.com/fschopp/ogre/releases/tag/v1.10.7-fschopp-1", "markup": "markdown", "html": "<ul>\n<li>\n<p>Fix issues with OGRE 1.10.7</p>\n<p>Changes: </p>\n<ul>\n<li>Recent versions of OGRE don't have a different prefix for OGRE plugin libraries on macOS than on other systems. </li>\n<li>OGRE does not like redundant resources</li>\n<li>Must not pass null \"externalWindowHandle\" to OGRE's createRenderWindow(). Also fixed missing initialization of RenderEngine::dummyWindowId.</li>\n<li>Missing headers during debug builds.</li>\n<li>Changes with HardwareVertexBufferSharedPtr et al. (no longer a subclass of SharedPtr). Changes should still work with older versions of OGRE.</li>\n</ul>\n</li>\n<li>\n<p>Fix GUI plugins on macOS</p>\n<p>GUI plugins never worked on macOS because the OpenGL layer was always drawn on top of the window. With this commit, the OpenGL layer is now drawn below the window, and instead the GLWidget's area is \"carved out\" making the underlying OpenGL layer visible. Any GUI plugin then obviously also is on top of the OpenGL layer.</p>\n<p>See also: <a href=\"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/OpenGL-MacProgGuide/opengl_contexts/opengl_contexts.html#//apple_ref/doc/uid/TP40001987-CH216-SW21\" rel=\"nofollow\" class=\"ap-connect-link\">https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/OpenGL-MacProgGuide/opengl_contexts/opengl_contexts.html#//apple_ref/doc/uid/TP40001987-CH216-SW21</a> (In short, the fix is the Apple-recommended way of drawing UI elements on top of OpenGL.)</p>\n<p>Only caveat: This fix requires an upstream change in OGRE. This version works: <a href=\"https://github.com/fschopp/ogre/releases/tag/v1.10.7-fschopp-1\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/fschopp/ogre/releases/tag/v1.10.7-fschopp-1</a></p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "637395b5f145", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/fschopp/gazebo/commit/637395b5f145"}, "html": {"href": "https://bitbucket.org/fschopp/gazebo/commits/637395b5f145"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/fschopp/gazebo"}, "html": {"href": "https://bitbucket.org/fschopp/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{08b1b636-bad2-46e2-8081-0fb04b3835fa}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "fschopp/gazebo", "uuid": "{08b1b636-bad2-46e2-8081-0fb04b3835fa}"}, "branch": {"name": "macos_guiplugin"}}, "comment_count": 6, "state": "DECLINED", "task_count": 0, "reason": "Thanks again for the contribution. This pull request is about one year old, and its time to triage this. Please update and resubmit if this pull request is important.", "updated_on": "2018-09-21T13:06:17.519626+00:00", "author": {"display_name": "Florian Schoppmann", "uuid": "{f317d46e-b942-4a60-afe2-ff858378d934}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf317d46e-b942-4a60-afe2-ff858378d934%7D"}, "html": {"href": "https://bitbucket.org/%7Bf317d46e-b942-4a60-afe2-ff858378d934%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:5088e322-4ce5-44ac-afaa-cc6a4c2199bf/2fd310aa-c773-4cb6-aa44-3c1aec78e221/128"}}, "nickname": "Florian Schoppmann", "type": "user", "account_id": "557058:5088e322-4ce5-44ac-afaa-cc6a4c2199bf"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "Issue #1981 notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252)). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.\r\n\r\nThe ODE function `dMassSetParameters` allows one to specify an offset for the CoG, so theoretically the changes [here](https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4) would solve the issue. However, ODE does not support setting the CoG offset to anything but zero ([see here](http://ode.org/ode-latest-userguide.html#sec_13_0_0)).\r\n\r\nThis pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when `ODELink::UpdateMass` is called. The collision meshes must also be updated, but this is already handled in `ODELink::UpdateCollisionOffsets`. This pull request includes the tests from pull request #2341, which now succeeds with the changes.\r\n\r\nNote: there are a few reasons it may be better to not support moving link CoGs after initialization:\r\n\r\n1. Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. [Here](https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3) is an example/test illustrating how the joint limits are broken. I made changes [here](https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff) which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).\r\n\r\n1. Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.\r\n\r\n1. Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&fileviewer=file-view-default#Visual.cc-3093)).\r\n\r\n1. If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2765/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d20d6d0c989a%0D5f41b719c1fe?from_pullrequest_id=2765"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2765.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2765/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2765"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d20d6d0c989a%0D5f41b719c1fe?from_pullrequest_id=2765"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2765/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/statuses_page=1.json"}}, "title": "Moving the center of gravity of a link with joints in ODE", "close_source_branch": false, "type": "pullrequest", "id": 2765, "destination": {"commit": {"hash": "5f41b719c1fe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f41b719c1fe.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f41b719c1fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-08-14T19:34:20.707724+00:00", "summary": {"raw": "Issue #1981 notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252)). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.\r\n\r\nThe ODE function `dMassSetParameters` allows one to specify an offset for the CoG, so theoretically the changes [here](https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4) would solve the issue. However, ODE does not support setting the CoG offset to anything but zero ([see here](http://ode.org/ode-latest-userguide.html#sec_13_0_0)).\r\n\r\nThis pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when `ODELink::UpdateMass` is called. The collision meshes must also be updated, but this is already handled in `ODELink::UpdateCollisionOffsets`. This pull request includes the tests from pull request #2341, which now succeeds with the changes.\r\n\r\nNote: there are a few reasons it may be better to not support moving link CoGs after initialization:\r\n\r\n1. Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. [Here](https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3) is an example/test illustrating how the joint limits are broken. I made changes [here](https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff) which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).\r\n\r\n1. Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.\r\n\r\n1. Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&fileviewer=file-view-default#Visual.cc-3093)).\r\n\r\n1. If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.", "markup": "markdown", "html": "<p>Issue <a href=\"#!/osrf/gazebo/issues/1981/moving-the-center-of-gravity-of-a-link\" rel=\"nofollow\" title=\"Moving the center of gravity of a link with joints results in false forces (ODE).\" class=\"ap-connect-link\">#1981</a> notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252\" rel=\"nofollow\">see here</a>). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.</p>\n<p>The ODE function <code>dMassSetParameters</code> allows one to specify an offset for the CoG, so theoretically the changes <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4\" rel=\"nofollow\">here</a> would solve the issue. However, ODE does not support setting the CoG offset to anything but zero (<a data-is-external-link=\"true\" href=\"http://ode.org/ode-latest-userguide.html#sec_13_0_0\" rel=\"nofollow\">see here</a>).</p>\n<p>This pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when <code>ODELink::UpdateMass</code> is called. The collision meshes must also be updated, but this is already handled in <code>ODELink::UpdateCollisionOffsets</code>. This pull request includes the tests from <a href=\"#!/osrf/gazebo/pull-requests/2341/added-a-so-far-failing-test-for-moving-cog\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2341</a>, which now succeeds with the changes.</p>\n<p>Note: there are a few reasons it may be better to not support moving link CoGs after initialization:</p>\n<ol>\n<li>\n<p>Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3\" rel=\"nofollow\">Here</a> is an example/test illustrating how the joint limits are broken. I made changes <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff\" rel=\"nofollow\">here</a> which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).</p>\n</li>\n<li>\n<p>Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.</p>\n</li>\n<li>\n<p>Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&amp;fileviewer=file-view-default#Visual.cc-3093\" rel=\"nofollow\">see here</a>).</p>\n</li>\n<li>\n<p>If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.</p>\n</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "d20d6d0c989a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d20d6d0c989a.json"}, "html": {"href": "#!/osrf/gazebo/commits/d20d6d0c989a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ode_move_cog_abi"}}, "comment_count": 3, "state": "DECLINED", "task_count": 0, "reason": "See comments.", "updated_on": "2017-08-14T22:10:33.739432+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": null, "closed_by": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}}, {"description": "The [quaternion constructor](https://bitbucket.org/ignitionrobotics/ign-math/src/722ccd6a67b70b14ac49b2909698d32219da638f/include/ignition/math/Quaternion.hh?at=ign-math2&fileviewer=file-view-default#Quaternion.hh-78) became [explicit](https://bitbucket.org/ignitionrobotics/ign-math/src/14518dfda0f06a002e97555ada6f8c86571067c2/include/ignition/math/Quaternion.hh?at=ign-math3&fileviewer=file-view-default#Quaternion.hh-78) in `ign-math3` so this bit of code causes a compiler error. Why not change the constructor to one that works with either ignition math 2 or 3?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2766/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/pchorak/gazebo:63fe625180b6%0D5f41b719c1fe?from_pullrequest_id=2766"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2766/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2766.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2766/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2766/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2766"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2766/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/pchorak/gazebo:63fe625180b6%0D5f41b719c1fe?from_pullrequest_id=2766"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2766/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2766/statuses_page=1.json"}}, "title": "Ignition math compatibility", "close_source_branch": false, "type": "pullrequest", "id": 2766, "destination": {"commit": {"hash": "5f41b719c1fe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f41b719c1fe.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f41b719c1fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-08-14T22:33:53.170695+00:00", "summary": {"raw": "The [quaternion constructor](https://bitbucket.org/ignitionrobotics/ign-math/src/722ccd6a67b70b14ac49b2909698d32219da638f/include/ignition/math/Quaternion.hh?at=ign-math2&fileviewer=file-view-default#Quaternion.hh-78) became [explicit](https://bitbucket.org/ignitionrobotics/ign-math/src/14518dfda0f06a002e97555ada6f8c86571067c2/include/ignition/math/Quaternion.hh?at=ign-math3&fileviewer=file-view-default#Quaternion.hh-78) in `ign-math3` so this bit of code causes a compiler error. Why not change the constructor to one that works with either ignition math 2 or 3?", "markup": "markdown", "html": "<p>The <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-math/src/722ccd6a67b70b14ac49b2909698d32219da638f/include/ignition/math/Quaternion.hh?at=ign-math2&amp;fileviewer=file-view-default#Quaternion.hh-78\" rel=\"nofollow\">quaternion constructor</a> became <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-math/src/14518dfda0f06a002e97555ada6f8c86571067c2/include/ignition/math/Quaternion.hh?at=ign-math3&amp;fileviewer=file-view-default#Quaternion.hh-78\" rel=\"nofollow\">explicit</a> in <code>ign-math3</code> so this bit of code causes a compiler error. Why not change the constructor to one that works with either ignition math 2 or 3?</p>", "type": "rendered"}, "source": {"commit": {"hash": "63fe625180b6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/63fe625180b6"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/63fe625180b6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "fix_compile_ign_math"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "reason": "See comments", "updated_on": "2017-08-15T17:44:33.064416+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": null, "closed_by": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}}, {"description": "Fixes issue #2323. Point cloud XYZ values should now be correct in vmware.  It's also quite possible that depth camera point clouds were not previously not working on OSX as it uses glsl 130. \r\n\r\nThe newly added test passes on [jenkins homebrew build](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1178/#showFailuresLink).\r\n\r\nNote issue #1865 still exists; the point cloud RGB values are not correct.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2767/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:0e536b1ea0b2%0D5c2e50d85912?from_pullrequest_id=2767"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2767/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2767.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2767/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2767/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2767"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2767/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:0e536b1ea0b2%0D5c2e50d85912?from_pullrequest_id=2767"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2767/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2767/statuses_page=1.json"}}, "title": "Update depth camera shaders version", "close_source_branch": true, "type": "pullrequest", "id": 2767, "destination": {"commit": {"hash": "5c2e50d85912", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5c2e50d85912.json"}, "html": {"href": "#!/osrf/gazebo/commits/5c2e50d85912"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-08-15T20:54:43.616858+00:00", "summary": {"raw": "Fixes issue #2323. Point cloud XYZ values should now be correct in vmware.  It's also quite possible that depth camera point clouds were not previously not working on OSX as it uses glsl 130. \r\n\r\nThe newly added test passes on [jenkins homebrew build](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1178/#showFailuresLink).\r\n\r\nNote issue #1865 still exists; the point cloud RGB values are not correct.", "markup": "markdown", "html": "<p>Fixes issue <a href=\"#!/osrf/gazebo/issues/2323/depthcamera-connectnewrgbpointcloud\" rel=\"nofollow\" title=\"DepthCamera::ConnectNewRGBPointCloud() produces malformed point clouds\" class=\"ap-connect-link\"><s>#2323</s></a>. Point cloud XYZ values should now be correct in vmware.  It's also quite possible that depth camera point clouds were not previously not working on OSX as it uses glsl 130. </p>\n<p>The newly added test passes on <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1178/#showFailuresLink\" rel=\"nofollow\">jenkins homebrew build</a>.</p>\n<p>Note issue <a href=\"#!/osrf/gazebo/issues/1865/rendering-depthcamera-does-not-output\" rel=\"nofollow\" title=\"rendering::DepthCamera does not output colors properly for an RGB PointCloud.\" class=\"ap-connect-link\">#1865</a> still exists; the point cloud RGB values are not correct.</p>", "type": "rendered"}, "source": {"commit": {"hash": "96da56e85fa4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/96da56e85fa4.json"}, "html": {"href": "#!/osrf/gazebo/commits/96da56e85fa4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "depth_camera_points_7"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-30T01:51:40.327916+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "0e536b1ea0b2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0e536b1ea0b2.json"}, "html": {"href": "#!/osrf/gazebo/commits/0e536b1ea0b2"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "Issue #1981 notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG ([see here](#!/osrf/gazebo/src/c1c50dc2390e9b1fc168ca41a501db5b57119212/gazebo/physics/ode/ODELink.cc?at=default&fileviewer=file-view-default#ODELink.cc-253)). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.\r\n\r\nThe ODE function `dMassSetParameters` allows one to specify an offset for the CoG, so theoretically the changes in 479d04db6f74c12f0ba745abc2dda83f88ac50e4 would solve the issue. However, ODE does not support setting the CoG offset to anything but zero ([see here](http://ode.org/ode-latest-userguide.html#sec_13_0_0)).\r\n\r\n* ff62c8a allows link CoGs to be moved after initialization by reattaching the ODE joints when `ODELink::UpdateMass` is called. The collision meshes must also be updated, but this is already handled in `ODELink::UpdateCollisionOffsets`.\r\n\r\n* Reattaching the ODE joints resets the joint angles to zero for the current model configuration. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. 2b3b1f6 maintains the joint limits and angles by keeping track of the angles of joints when they are reattached to the same parent and child links.\r\n\r\n* b7d3497 adds a test of the joint limits and angles when moving the CoG (i.e. the fix above).\r\n\r\n* 14c8f74 adds code to update the corresponding visuals when a link CoG is moved. It uses the `~/visual` topic, which may not be intended for CoG and inertia visuals but seemed the least intrusive avenue.  Commit 586ab8cd2976599a957c8c48b4acbe4049ed2bf4 (branch ode_move_cog2_test) has a plugin to check that the CoG visual is updated.\r\n\r\n* 59b776a merges the tests from pull request #2341, which now succeed.\r\n\r\n* 827c807 removes the logic that only reattaches the joints if the CoG has moved more than `1e-3` units since the CoG may move in small increments (e.g. internal actuator or liquid shifting within the link).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2768/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:119119e6e94b%0D5f48d294547f?from_pullrequest_id=2768"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2768/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2768.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2768/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2768/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2768"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2768/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:119119e6e94b%0D5f48d294547f?from_pullrequest_id=2768"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2768/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2768/statuses_page=1.json"}}, "title": "Moving the center of gravity of a link with joints in ODE", "close_source_branch": false, "type": "pullrequest", "id": 2768, "destination": {"commit": {"hash": "5f48d294547f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f48d294547f.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f48d294547f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo11"}}, "created_on": "2017-08-15T23:59:38.156868+00:00", "summary": {"raw": "Issue #1981 notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG ([see here](#!/osrf/gazebo/src/c1c50dc2390e9b1fc168ca41a501db5b57119212/gazebo/physics/ode/ODELink.cc?at=default&fileviewer=file-view-default#ODELink.cc-253)). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.\r\n\r\nThe ODE function `dMassSetParameters` allows one to specify an offset for the CoG, so theoretically the changes in 479d04db6f74c12f0ba745abc2dda83f88ac50e4 would solve the issue. However, ODE does not support setting the CoG offset to anything but zero ([see here](http://ode.org/ode-latest-userguide.html#sec_13_0_0)).\r\n\r\n* ff62c8a allows link CoGs to be moved after initialization by reattaching the ODE joints when `ODELink::UpdateMass` is called. The collision meshes must also be updated, but this is already handled in `ODELink::UpdateCollisionOffsets`.\r\n\r\n* Reattaching the ODE joints resets the joint angles to zero for the current model configuration. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. 2b3b1f6 maintains the joint limits and angles by keeping track of the angles of joints when they are reattached to the same parent and child links.\r\n\r\n* b7d3497 adds a test of the joint limits and angles when moving the CoG (i.e. the fix above).\r\n\r\n* 14c8f74 adds code to update the corresponding visuals when a link CoG is moved. It uses the `~/visual` topic, which may not be intended for CoG and inertia visuals but seemed the least intrusive avenue.  Commit 586ab8cd2976599a957c8c48b4acbe4049ed2bf4 (branch ode_move_cog2_test) has a plugin to check that the CoG visual is updated.\r\n\r\n* 59b776a merges the tests from pull request #2341, which now succeed.\r\n\r\n* 827c807 removes the logic that only reattaches the joints if the CoG has moved more than `1e-3` units since the CoG may move in small increments (e.g. internal actuator or liquid shifting within the link).", "markup": "markdown", "html": "<p>Issue <a href=\"#!/osrf/gazebo/issues/1981/moving-the-center-of-gravity-of-a-link\" rel=\"nofollow\" title=\"Moving the center of gravity of a link with joints results in false forces (ODE).\" class=\"ap-connect-link\">#1981</a> notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/c1c50dc2390e9b1fc168ca41a501db5b57119212/gazebo/physics/ode/ODELink.cc?at=default&amp;fileviewer=file-view-default#ODELink.cc-253\" rel=\"nofollow\">see here</a>). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.</p>\n<p>The ODE function <code>dMassSetParameters</code> allows one to specify an offset for the CoG, so theoretically the changes in <a href=\"#!/osrf/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4\" rel=\"nofollow\" class=\"ap-connect-link\">479d04db6f74c12f0ba745abc2dda83f88ac50e4</a> would solve the issue. However, ODE does not support setting the CoG offset to anything but zero (<a data-is-external-link=\"true\" href=\"http://ode.org/ode-latest-userguide.html#sec_13_0_0\" rel=\"nofollow\">see here</a>).</p>\n<ul>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/ff62c8a\" rel=\"nofollow\" class=\"ap-connect-link\">ff62c8a</a> allows link CoGs to be moved after initialization by reattaching the ODE joints when <code>ODELink::UpdateMass</code> is called. The collision meshes must also be updated, but this is already handled in <code>ODELink::UpdateCollisionOffsets</code>.</p>\n</li>\n<li>\n<p>Reattaching the ODE joints resets the joint angles to zero for the current model configuration. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. <a href=\"#!/osrf/gazebo/commits/2b3b1f6\" rel=\"nofollow\" class=\"ap-connect-link\">2b3b1f6</a> maintains the joint limits and angles by keeping track of the angles of joints when they are reattached to the same parent and child links.</p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/b7d3497\" rel=\"nofollow\" class=\"ap-connect-link\">b7d3497</a> adds a test of the joint limits and angles when moving the CoG (i.e. the fix above).</p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/14c8f74\" rel=\"nofollow\" class=\"ap-connect-link\">14c8f74</a> adds code to update the corresponding visuals when a link CoG is moved. It uses the <code>~/visual</code> topic, which may not be intended for CoG and inertia visuals but seemed the least intrusive avenue.  Commit <a href=\"#!/osrf/gazebo/commits/586ab8cd2976599a957c8c48b4acbe4049ed2bf4\" rel=\"nofollow\" class=\"ap-connect-link\">586ab8cd2976599a957c8c48b4acbe4049ed2bf4</a> (branch ode_move_cog2_test) has a plugin to check that the CoG visual is updated.</p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/59b776a\" rel=\"nofollow\" class=\"ap-connect-link\">59b776a</a> merges the tests from <a href=\"#!/osrf/gazebo/pull-requests/2341/added-a-so-far-failing-test-for-moving-cog\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2341</a>, which now succeed.</p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/827c807\" rel=\"nofollow\" class=\"ap-connect-link\">827c807</a> removes the logic that only reattaches the joints if the CoG has moved more than <code>1e-3</code> units since the CoG may move in small increments (e.g. internal actuator or liquid shifting within the link).</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "119119e6e94b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/119119e6e94b.json"}, "html": {"href": "#!/osrf/gazebo/commits/119119e6e94b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ode_move_cog2"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "reason": "", "updated_on": "2020-04-17T20:08:14.110000+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": null, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "checking CI", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2769/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:1054201b80f7%0D1a85a1105d08?from_pullrequest_id=2769"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2769/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2769.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2769/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2769/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2769"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2769/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:1054201b80f7%0D1a85a1105d08?from_pullrequest_id=2769"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2769/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2769/statuses_page=1.json"}}, "title": "Merge gazebo8 -> default", "close_source_branch": true, "type": "pullrequest", "id": 2769, "destination": {"commit": {"hash": "1a85a1105d08", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1a85a1105d08.json"}, "html": {"href": "#!/osrf/gazebo/commits/1a85a1105d08"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-08-18T05:12:05.590132+00:00", "summary": {"raw": "checking CI", "markup": "markdown", "html": "<p>checking CI</p>", "type": "rendered"}, "source": {"commit": {"hash": "845d9ad6dd19", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/845d9ad6dd19.json"}, "html": {"href": "#!/osrf/gazebo/commits/845d9ad6dd19"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "merge8default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-18T17:53:20.977776+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "1054201b80f7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1054201b80f7.json"}, "html": {"href": "#!/osrf/gazebo/commits/1054201b80f7"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "The DART include directories are not properly added for the gravity compensation plugin (pull request #2733), which causes it to fail to compile when building DART from source. This PR adds the DART include directories.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2770/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:f9d84fa63ffb%0D1054201b80f7?from_pullrequest_id=2770"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2770/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2770.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2770/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2770/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2770"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2770/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:f9d84fa63ffb%0D1054201b80f7?from_pullrequest_id=2770"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2770/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2770/statuses_page=1.json"}}, "title": "Gravity compensation DART from source", "close_source_branch": false, "type": "pullrequest", "id": 2770, "destination": {"commit": {"hash": "1054201b80f7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1054201b80f7.json"}, "html": {"href": "#!/osrf/gazebo/commits/1054201b80f7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-08-24T18:09:55.085924+00:00", "summary": {"raw": "The DART include directories are not properly added for the gravity compensation plugin (pull request #2733), which causes it to fail to compile when building DART from source. This PR adds the DART include directories.", "markup": "markdown", "html": "<p>The DART include directories are not properly added for the gravity compensation plugin (<a href=\"#!/osrf/gazebo/pull-requests/2733/gravity-compensation-plugin\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2733</a>), which causes it to fail to compile when building DART from source. This PR adds the DART include directories.</p>", "type": "rendered"}, "source": {"commit": {"hash": "37f368ccb721", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/37f368ccb721"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/37f368ccb721"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "gravity_comp_cmake"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-29T23:46:42.540400+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": {"hash": "f9d84fa63ffb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f9d84fa63ffb.json"}, "html": {"href": "#!/osrf/gazebo/commits/f9d84fa63ffb"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "There are some tests that are already fixed or disabled on the default branch (which uses dart6) but that fail on the gazebo8 branch with dart5. I propose to disable them here.\r\n\r\nHere is a build of the gazebo8 branch with dart5 installed that shows these two failures:\r\n\r\n* https://build.osrfoundation.org/job/gazebo-ci-gazebo8-xenial-amd64-gpu-nvidia/43/\r\n\r\nAn ubuntu build of this branch with dart5 installed shows no test failures:\r\n\r\n* https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/609/\r\n\r\nThe CI builds that will be triggered automatically won't have dart5 installed because release-tools needs to be updated. That's actually the impetus for this pull request, which is to prepare to have dart included in gazebo's CI builds.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2771/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:bedd0bc81b6d%0D3dab9ef73ad0?from_pullrequest_id=2771"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2771/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2771.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2771/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2771/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2771"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2771/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:bedd0bc81b6d%0D3dab9ef73ad0?from_pullrequest_id=2771"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2771/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2771/statuses_page=1.json"}}, "title": "disable broken dart5 tests on gazebo8 branch", "close_source_branch": true, "type": "pullrequest", "id": 2771, "destination": {"commit": {"hash": "3dab9ef73ad0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3dab9ef73ad0.json"}, "html": {"href": "#!/osrf/gazebo/commits/3dab9ef73ad0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-08-25T19:35:44.423625+00:00", "summary": {"raw": "There are some tests that are already fixed or disabled on the default branch (which uses dart6) but that fail on the gazebo8 branch with dart5. I propose to disable them here.\r\n\r\nHere is a build of the gazebo8 branch with dart5 installed that shows these two failures:\r\n\r\n* https://build.osrfoundation.org/job/gazebo-ci-gazebo8-xenial-amd64-gpu-nvidia/43/\r\n\r\nAn ubuntu build of this branch with dart5 installed shows no test failures:\r\n\r\n* https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/609/\r\n\r\nThe CI builds that will be triggered automatically won't have dart5 installed because release-tools needs to be updated. That's actually the impetus for this pull request, which is to prepare to have dart included in gazebo's CI builds.", "markup": "markdown", "html": "<p>There are some tests that are already fixed or disabled on the default branch (which uses dart6) but that fail on the gazebo8 branch with dart5. I propose to disable them here.</p>\n<p>Here is a build of the gazebo8 branch with dart5 installed that shows these two failures:</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/job/gazebo-ci-gazebo8-xenial-amd64-gpu-nvidia/43/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo-ci-gazebo8-xenial-amd64-gpu-nvidia/43/</a></li>\n</ul>\n<p>An ubuntu build of this branch with dart5 installed shows no test failures:</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/609/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/609/</a></li>\n</ul>\n<p>The CI builds that will be triggered automatically won't have dart5 installed because release-tools needs to be updated. That's actually the impetus for this pull request, which is to prepare to have dart included in gazebo's CI builds.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7a588db53bd9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7a588db53bd9.json"}, "html": {"href": "#!/osrf/gazebo/commits/7a588db53bd9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "disable_dart5_broken_tests"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-16T23:02:34.452664+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "bedd0bc81b6d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bedd0bc81b6d.json"}, "html": {"href": "#!/osrf/gazebo/commits/bedd0bc81b6d"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Using the \"SharedPtr() : pRep(0), pInfo(0) {}\" constructor instead prevents\r\n\"Error: no matching function for call to Ogre::SharedPtr<...>::SharedPtr(int)\".", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2772/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:fd9c9f06105d%0D0e85cc8a564d?from_pullrequest_id=2772"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2772/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2772.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2772/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2772/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2772"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2772/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:fd9c9f06105d%0D0e85cc8a564d?from_pullrequest_id=2772"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2772/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2772/statuses_page=1.json"}}, "title": "Replaced Ogre::SharedPtr constructor calls with 0 arguments", "close_source_branch": false, "type": "pullrequest", "id": 2772, "destination": {"commit": {"hash": "0e85cc8a564d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0e85cc8a564d.json"}, "html": {"href": "#!/osrf/gazebo/commits/0e85cc8a564d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-08-26T10:03:32.069576+00:00", "summary": {"raw": "Using the \"SharedPtr() : pRep(0), pInfo(0) {}\" constructor instead prevents\r\n\"Error: no matching function for call to Ogre::SharedPtr<...>::SharedPtr(int)\".", "markup": "markdown", "html": "<p>Using the \"SharedPtr() : pRep(0), pInfo(0) {}\" constructor instead prevents\n\"Error: no matching function for call to Ogre::SharedPtr&lt;...&gt;::SharedPtr(int)\".</p>", "type": "rendered"}, "source": {"commit": {"hash": "acbea37266d1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo/commit/acbea37266d1"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo/commits/acbea37266d1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "tim_rakowski/gazebo", "uuid": "{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}"}, "branch": {"name": "gazebo8_ogre_1.10_sharedptr_fix"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-28T20:26:39.372421+00:00", "author": {"display_name": "Tim Rakowski", "uuid": "{568e53a4-2b97-42ea-929e-038af8b7825e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D"}, "html": {"href": "https://bitbucket.org/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/83d3799cfee56e3c3195419ca9fd5d06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTR-2.png"}}, "nickname": "Tim Rakowski", "type": "user", "account_id": "557058:34f593f6-84fc-4797-8028-c8e3412b0993"}, "merge_commit": {"hash": "fd9c9f06105d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fd9c9f06105d.json"}, "html": {"href": "#!/osrf/gazebo/commits/fd9c9f06105d"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "Includes pull request #2757 and pull request #2767. Made a PR to check CI.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2773/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:01ac9ab0c44e%0Dfd9c9f06105d?from_pullrequest_id=2773"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2773/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2773.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2773/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2773/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2773"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2773/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:01ac9ab0c44e%0Dfd9c9f06105d?from_pullrequest_id=2773"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2773/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2773/statuses_page=1.json"}}, "title": "Merge 7 -> 8", "close_source_branch": true, "type": "pullrequest", "id": 2773, "destination": {"commit": {"hash": "fd9c9f06105d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fd9c9f06105d.json"}, "html": {"href": "#!/osrf/gazebo/commits/fd9c9f06105d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-09-08T19:32:51.642053+00:00", "summary": {"raw": "Includes pull request #2757 and pull request #2767. Made a PR to check CI.", "markup": "markdown", "html": "<p>Includes <a href=\"#!/osrf/gazebo/pull-requests/2757/support-off-diagonal-inertia-terms-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2757</a> and <a href=\"#!/osrf/gazebo/pull-requests/2767/update-depth-camera-shaders-version\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2767</a>. Made a PR to check CI.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f0ca9509eb41", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f0ca9509eb41.json"}, "html": {"href": "#!/osrf/gazebo/commits/f0ca9509eb41"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "merge_78_pr2757"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-09-12T17:18:40.037083+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "01ac9ab0c44e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/01ac9ab0c44e.json"}, "html": {"href": "#!/osrf/gazebo/commits/01ac9ab0c44e"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Checking CI\r\n\r\n* pull request #2757\r\n* pull request #2767\r\n* pull request #2772", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2774/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:58fbe39d9e90%0D3ca3431cfe5a?from_pullrequest_id=2774"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2774/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2774.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2774/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2774/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2774"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2774/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:58fbe39d9e90%0D3ca3431cfe5a?from_pullrequest_id=2774"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2774/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2774/statuses_page=1.json"}}, "title": "Merge 8 -> default", "close_source_branch": true, "type": "pullrequest", "id": 2774, "destination": {"commit": {"hash": "3ca3431cfe5a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ca3431cfe5a.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ca3431cfe5a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-09-12T18:10:21.184132+00:00", "summary": {"raw": "Checking CI\r\n\r\n* pull request #2757\r\n* pull request #2767\r\n* pull request #2772", "markup": "markdown", "html": "<p>Checking CI</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/pull-requests/2757/support-off-diagonal-inertia-terms-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2757</a></li>\n<li><a href=\"#!/osrf/gazebo/pull-requests/2767/update-depth-camera-shaders-version\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2767</a></li>\n<li><a href=\"#!/osrf/gazebo/pull-requests/2772/replaced-ogre-sharedptr-constructor-calls\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2772</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "e628c902dccb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e628c902dccb.json"}, "html": {"href": "#!/osrf/gazebo/commits/e628c902dccb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "merge_8_default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-09-13T00:09:35.561225+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "58fbe39d9e90", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/58fbe39d9e90.json"}, "html": {"href": "#!/osrf/gazebo/commits/58fbe39d9e90"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "ODE uses the term \"island\" to refer to a group of interacting bodies, such that there is no interaction between bodies on different islands (ie. no joints between islands). This offers an opportunity for parallelization, but simulating each island in its own thread. This was implemented in our fork of ODE quite a while ago (though upstream now has a [different implementation](https://bitbucket.org/odedevs/ode/commits/740a0ab9eda20059eeacc89f870132e47dab1882)); this PR just exposes the functionality via `ODEPhysics::SetParam`. It can speed up simulation, but it can also slow things down, so it is off by default. There is a test that uses the circle of 8 double pendulums with island sizes of 0 and 2, and expects it to run faster with 2 islands.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2775/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:bd4bb1110e9f%0D1dabe7812b09?from_pullrequest_id=2775"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2775/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2775.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2775/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2775/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2775"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2775/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:bd4bb1110e9f%0D1dabe7812b09?from_pullrequest_id=2775"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2775/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2775/statuses_page=1.json"}}, "title": "Parallelize ODE physics with threaded islands parameter", "close_source_branch": true, "type": "pullrequest", "id": 2775, "destination": {"commit": {"hash": "1dabe7812b09", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1dabe7812b09.json"}, "html": {"href": "#!/osrf/gazebo/commits/1dabe7812b09"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-09-18T22:55:36.284686+00:00", "summary": {"raw": "ODE uses the term \"island\" to refer to a group of interacting bodies, such that there is no interaction between bodies on different islands (ie. no joints between islands). This offers an opportunity for parallelization, but simulating each island in its own thread. This was implemented in our fork of ODE quite a while ago (though upstream now has a [different implementation](https://bitbucket.org/odedevs/ode/commits/740a0ab9eda20059eeacc89f870132e47dab1882)); this PR just exposes the functionality via `ODEPhysics::SetParam`. It can speed up simulation, but it can also slow things down, so it is off by default. There is a test that uses the circle of 8 double pendulums with island sizes of 0 and 2, and expects it to run faster with 2 islands.", "markup": "markdown", "html": "<p>ODE uses the term \"island\" to refer to a group of interacting bodies, such that there is no interaction between bodies on different islands (ie. no joints between islands). This offers an opportunity for parallelization, but simulating each island in its own thread. This was implemented in our fork of ODE quite a while ago (though upstream now has a <a data-is-external-link=\"true\" href=\"https://bitbucket.org/odedevs/ode/commits/740a0ab9eda20059eeacc89f870132e47dab1882\" rel=\"nofollow\">different implementation</a>); this PR just exposes the functionality via <code>ODEPhysics::SetParam</code>. It can speed up simulation, but it can also slow things down, so it is off by default. There is a test that uses the circle of 8 double pendulums with island sizes of 0 and 2, and expects it to run faster with 2 islands.</p>", "type": "rendered"}, "source": {"commit": {"hash": "822d1cfc141e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/822d1cfc141e.json"}, "html": {"href": "#!/osrf/gazebo/commits/822d1cfc141e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "thread_islands_ode"}}, "comment_count": 40, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-23T23:14:51.154577+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "bd4bb1110e9f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bd4bb1110e9f.json"}, "html": {"href": "#!/osrf/gazebo/commits/bd4bb1110e9f"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Fixes #2342. It enables the logical camera to see nested models and adds an integration test.\r\n\r\nThe logical camera uses the scoped name (not including the world name) of nested models in its output.\r\nA nested model named `hand` inside a model named `human` would be reported as `human::hand`.\r\nIf a nested model is inside the frustum but the remainder of the parent model is not then only the nested model will be in the output.\r\n\r\nThe logical camera never includes the model it is attached to in its output.\r\nHowever, it may include any nested or parent models of the model it is attached to.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2776/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:68d94d3cce38%0Dca423c5356c3?from_pullrequest_id=2776"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2776/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2776.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2776/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2776/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2776"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2776/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:68d94d3cce38%0Dca423c5356c3?from_pullrequest_id=2776"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2776/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2776/statuses_page=1.json"}}, "title": "Logical camera now reports nested models", "close_source_branch": true, "type": "pullrequest", "id": 2776, "destination": {"commit": {"hash": "ca423c5356c3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ca423c5356c3.json"}, "html": {"href": "#!/osrf/gazebo/commits/ca423c5356c3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-09-19T19:12:29.492629+00:00", "summary": {"raw": "Fixes #2342. It enables the logical camera to see nested models and adds an integration test.\r\n\r\nThe logical camera uses the scoped name (not including the world name) of nested models in its output.\r\nA nested model named `hand` inside a model named `human` would be reported as `human::hand`.\r\nIf a nested model is inside the frustum but the remainder of the parent model is not then only the nested model will be in the output.\r\n\r\nThe logical camera never includes the model it is attached to in its output.\r\nHowever, it may include any nested or parent models of the model it is attached to.", "markup": "markdown", "html": "<p>Fixes <a href=\"#!/osrf/gazebo/issues/2342/logical-camera-does-not-detect-nested\" rel=\"nofollow\" title=\"Logical camera does not detect nested models\" class=\"ap-connect-link\"><s>#2342</s></a>. It enables the logical camera to see nested models and adds an integration test.</p>\n<p>The logical camera uses the scoped name (not including the world name) of nested models in its output.\nA nested model named <code>hand</code> inside a model named <code>human</code> would be reported as <code>human::hand</code>.\nIf a nested model is inside the frustum but the remainder of the parent model is not then only the nested model will be in the output.</p>\n<p>The logical camera never includes the model it is attached to in its output.\nHowever, it may include any nested or parent models of the model it is attached to.</p>", "type": "rendered"}, "source": {"commit": {"hash": "eb2c9a78d51a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/eb2c9a78d51a.json"}, "html": {"href": "#!/osrf/gazebo/commits/eb2c9a78d51a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logical_camera_nested_models"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-03T20:50:18.500816+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "68d94d3cce38", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/68d94d3cce38.json"}, "html": {"href": "#!/osrf/gazebo/commits/68d94d3cce38"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This pull request makes the logical camera use `<topic>` if it is given. Currently the logical camera ignores this sdf element and generates it's own topic.\r\n\r\nIt is possible a user has specified `<topic>` on a logical camera, but subscribed to the generated topic name. This user's code would be broken after updating to a version of gazebo 7 with this fix. I think this  is acceptable because `<topic>` is an optional tag. The user must have explicitly added it.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2777/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:ca423c5356c3%0D2c4ce8c3a38a?from_pullrequest_id=2777"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2777/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2777.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2777/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2777/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2777"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2777/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:ca423c5356c3%0D2c4ce8c3a38a?from_pullrequest_id=2777"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2777/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2777/statuses_page=1.json"}}, "title": "Logical camera obey's <topic>", "close_source_branch": true, "type": "pullrequest", "id": 2777, "destination": {"commit": {"hash": "2c4ce8c3a38a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c4ce8c3a38a.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c4ce8c3a38a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-09-19T20:15:36.422835+00:00", "summary": {"raw": "This pull request makes the logical camera use `<topic>` if it is given. Currently the logical camera ignores this sdf element and generates it's own topic.\r\n\r\nIt is possible a user has specified `<topic>` on a logical camera, but subscribed to the generated topic name. This user's code would be broken after updating to a version of gazebo 7 with this fix. I think this  is acceptable because `<topic>` is an optional tag. The user must have explicitly added it.", "markup": "markdown", "html": "<p>This pull request makes the logical camera use <code>&lt;topic&gt;</code> if it is given. Currently the logical camera ignores this sdf element and generates it's own topic.</p>\n<p>It is possible a user has specified <code>&lt;topic&gt;</code> on a logical camera, but subscribed to the generated topic name. This user's code would be broken after updating to a version of gazebo 7 with this fix. I think this  is acceptable because <code>&lt;topic&gt;</code> is an optional tag. The user must have explicitly added it.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4285c1c87404", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4285c1c87404.json"}, "html": {"href": "#!/osrf/gazebo/commits/4285c1c87404"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logical_camera_obey_sdf_topic"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-09-29T18:01:35.990478+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "ca423c5356c3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ca423c5356c3.json"}, "html": {"href": "#!/osrf/gazebo/commits/ca423c5356c3"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "* The messages are logged via the LogManager as well.\r\n* Since <iostream> is not included, the code does not compile with g++7.2", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2778/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/tim_rakowski/gazebo:e3b5b1cbfd0c%0D01ac9ab0c44e?from_pullrequest_id=2778"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2778/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2778.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2778/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2778/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2778"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2778/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/tim_rakowski/gazebo:e3b5b1cbfd0c%0D01ac9ab0c44e?from_pullrequest_id=2778"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2778/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2778/statuses_page=1.json"}}, "title": "Removed std::cout logging output", "close_source_branch": false, "type": "pullrequest", "id": 2778, "destination": {"commit": {"hash": "01ac9ab0c44e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/01ac9ab0c44e.json"}, "html": {"href": "#!/osrf/gazebo/commits/01ac9ab0c44e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-09-22T17:33:34.981568+00:00", "summary": {"raw": "* The messages are logged via the LogManager as well.\r\n* Since <iostream> is not included, the code does not compile with g++7.2", "markup": "markdown", "html": "<ul>\n<li>The messages are logged via the LogManager as well.</li>\n<li>Since &lt;iostream&gt; is not included, the code does not compile with g++7.2</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "e3b5b1cbfd0c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo/commit/e3b5b1cbfd0c"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo/commits/e3b5b1cbfd0c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "tim_rakowski/gazebo", "uuid": "{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}"}, "branch": {"name": "gazebo8_g++7.2_cout_fix"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "Wrong branch", "updated_on": "2017-09-22T17:50:02.280659+00:00", "author": {"display_name": "Tim Rakowski", "uuid": "{568e53a4-2b97-42ea-929e-038af8b7825e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D"}, "html": {"href": "https://bitbucket.org/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/83d3799cfee56e3c3195419ca9fd5d06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTR-2.png"}}, "nickname": "Tim Rakowski", "type": "user", "account_id": "557058:34f593f6-84fc-4797-8028-c8e3412b0993"}, "merge_commit": null, "closed_by": {"display_name": "Tim Rakowski", "uuid": "{568e53a4-2b97-42ea-929e-038af8b7825e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D"}, "html": {"href": "https://bitbucket.org/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/83d3799cfee56e3c3195419ca9fd5d06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTR-2.png"}}, "nickname": "Tim Rakowski", "type": "user", "account_id": "557058:34f593f6-84fc-4797-8028-c8e3412b0993"}}, {"description": "* The messages are logged via the LogManager as well.\r\n* Since <iostream> is not included, the code does not compile with g++7.2", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2779/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:3dab9ef73ad0%0D01ac9ab0c44e?from_pullrequest_id=2779"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2779/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2779.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2779/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2779/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2779"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2779/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3dab9ef73ad0%0D01ac9ab0c44e?from_pullrequest_id=2779"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2779/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2779/statuses_page=1.json"}}, "title": "Removed std::cout logging output", "close_source_branch": false, "type": "pullrequest", "id": 2779, "destination": {"commit": {"hash": "01ac9ab0c44e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/01ac9ab0c44e.json"}, "html": {"href": "#!/osrf/gazebo/commits/01ac9ab0c44e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-09-22T17:53:36.000308+00:00", "summary": {"raw": "* The messages are logged via the LogManager as well.\r\n* Since <iostream> is not included, the code does not compile with g++7.2", "markup": "markdown", "html": "<ul>\n<li>The messages are logged via the LogManager as well.</li>\n<li>Since &lt;iostream&gt; is not included, the code does not compile with g++7.2</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "97d1dae5f3fc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo/commit/97d1dae5f3fc"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo/commits/97d1dae5f3fc"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "tim_rakowski/gazebo", "uuid": "{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}"}, "branch": {"name": "gazebo8_g++7.2_cout_fix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-09-26T21:05:10.751837+00:00", "author": {"display_name": "Tim Rakowski", "uuid": "{568e53a4-2b97-42ea-929e-038af8b7825e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D"}, "html": {"href": "https://bitbucket.org/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/83d3799cfee56e3c3195419ca9fd5d06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTR-2.png"}}, "nickname": "Tim Rakowski", "type": "user", "account_id": "557058:34f593f6-84fc-4797-8028-c8e3412b0993"}, "merge_commit": {"hash": "3dab9ef73ad0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3dab9ef73ad0.json"}, "html": {"href": "#!/osrf/gazebo/commits/3dab9ef73ad0"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Hopefully the documentation in the header is enough description of the new functionality.\r\n\r\nAn earlier version of this plugin used an Ignition Transport service, but to work with Gazebo 7, this version uses a Gazebo Transport topic for the \"enable service\". This is the same approach taken for the `TouchPlugin`.\r\n\r\nIt's worth mentioning that this plugin offers functionality similar to `SimEventsPlugin` with an `OccupiedEventSource`, but that only supports world-aligned boxes. At the time when I implemented the new plugin for SRCSim, I looked into extending SimEvents to also support oriented boxes, but I think that would break ABI since that plugin is not using the PIMPL pattern, so I went with a custom approach. I believe the new plugin has a few new features, such as the enabling functionality and a custom topic, so I think it's worth it adding it to Gazebo alongside SimEvents. Please speak up if you think otherwise.\r\n\r\n## Try it out\r\n\r\n1. Open demo world: `gazebo worlds/box_contains_plugin_demo.world`\r\n\r\n1. On a new terminal echo the contains topic: `gz topic -e /gazebo/default/drill/box/contains`\r\n\r\n1. Drag the drill into the box\r\n\r\n![boxcontains.gif](data/bitbucket.org/repo/jgXqbo/images/2802660915-boxcontains.gif)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2780/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:f72e39d0e41d%0Dc66f581158d7?from_pullrequest_id=2780"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2780/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2780.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2780/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2780/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2780"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2780/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:f72e39d0e41d%0Dc66f581158d7?from_pullrequest_id=2780"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2780/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2780/statuses_page=1.json"}}, "title": "Port Box Contains plugin from SRCSim", "close_source_branch": true, "type": "pullrequest", "id": 2780, "destination": {"commit": {"hash": "c66f581158d7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c66f581158d7.json"}, "html": {"href": "#!/osrf/gazebo/commits/c66f581158d7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-09-25T19:55:25.557063+00:00", "summary": {"raw": "Hopefully the documentation in the header is enough description of the new functionality.\r\n\r\nAn earlier version of this plugin used an Ignition Transport service, but to work with Gazebo 7, this version uses a Gazebo Transport topic for the \"enable service\". This is the same approach taken for the `TouchPlugin`.\r\n\r\nIt's worth mentioning that this plugin offers functionality similar to `SimEventsPlugin` with an `OccupiedEventSource`, but that only supports world-aligned boxes. At the time when I implemented the new plugin for SRCSim, I looked into extending SimEvents to also support oriented boxes, but I think that would break ABI since that plugin is not using the PIMPL pattern, so I went with a custom approach. I believe the new plugin has a few new features, such as the enabling functionality and a custom topic, so I think it's worth it adding it to Gazebo alongside SimEvents. Please speak up if you think otherwise.\r\n\r\n## Try it out\r\n\r\n1. Open demo world: `gazebo worlds/box_contains_plugin_demo.world`\r\n\r\n1. On a new terminal echo the contains topic: `gz topic -e /gazebo/default/drill/box/contains`\r\n\r\n1. Drag the drill into the box\r\n\r\n![boxcontains.gif](data/bitbucket.org/repo/jgXqbo/images/2802660915-boxcontains.gif)", "markup": "markdown", "html": "<p>Hopefully the documentation in the header is enough description of the new functionality.</p>\n<p>An earlier version of this plugin used an Ignition Transport service, but to work with Gazebo 7, this version uses a Gazebo Transport topic for the \"enable service\". This is the same approach taken for the <code>TouchPlugin</code>.</p>\n<p>It's worth mentioning that this plugin offers functionality similar to <code>SimEventsPlugin</code> with an <code>OccupiedEventSource</code>, but that only supports world-aligned boxes. At the time when I implemented the new plugin for SRCSim, I looked into extending SimEvents to also support oriented boxes, but I think that would break ABI since that plugin is not using the PIMPL pattern, so I went with a custom approach. I believe the new plugin has a few new features, such as the enabling functionality and a custom topic, so I think it's worth it adding it to Gazebo alongside SimEvents. Please speak up if you think otherwise.</p>\n<h2 id=\"markdown-header-try-it-out\">Try it out</h2>\n<ol>\n<li>\n<p>Open demo world: <code>gazebo worlds/box_contains_plugin_demo.world</code></p>\n</li>\n<li>\n<p>On a new terminal echo the contains topic: <code>gz topic -e /gazebo/default/drill/box/contains</code></p>\n</li>\n<li>\n<p>Drag the drill into the box</p>\n</li>\n</ol>\n<p><img alt=\"boxcontains.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/2802660915-boxcontains.gif\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "011b974f673d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/011b974f673d.json"}, "html": {"href": "#!/osrf/gazebo/commits/011b974f673d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "box_contains_plugin"}}, "comment_count": 30, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-06T17:44:06.947214+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "f72e39d0e41d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f72e39d0e41d.json"}, "html": {"href": "#!/osrf/gazebo/commits/f72e39d0e41d"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Message was removed in upstream [ign-msgs pull request #33](https://bitbucket.org/ignitionrobotics/ign-msgs/pull-requests/33/remove-stamped-messages-and-time-fields/diff)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2781/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d87e713829ea%0D3ac47b35d646?from_pullrequest_id=2781"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2781/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2781.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2781/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2781/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2781"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2781/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d87e713829ea%0D3ac47b35d646?from_pullrequest_id=2781"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2781/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2781/statuses_page=1.json"}}, "title": "Replace ignition::msgs::ImageStamped with ignition::msgs::Image", "close_source_branch": true, "type": "pullrequest", "id": 2781, "destination": {"commit": {"hash": "3ac47b35d646", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ac47b35d646.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ac47b35d646"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-09-28T22:52:56.515813+00:00", "summary": {"raw": "Message was removed in upstream [ign-msgs pull request #33](https://bitbucket.org/ignitionrobotics/ign-msgs/pull-requests/33/remove-stamped-messages-and-time-fields/diff)", "markup": "markdown", "html": "<p>Message was removed in upstream <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-msgs/pull-requests/33/remove-stamped-messages-and-time-fields/diff\" rel=\"nofollow\">ign-msgs pull request #33</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "7b4102ca781a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7b4102ca781a.json"}, "html": {"href": "#!/osrf/gazebo/commits/7b4102ca781a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "remove_ign_image_stamped"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-27T17:33:23.274719+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "d87e713829ea", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d87e713829ea.json"}, "html": {"href": "#!/osrf/gazebo/commits/d87e713829ea"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This allows building gazebo default branch against sdformat default branch.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2782/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:edadd25d08f3%0D58fbe39d9e90?from_pullrequest_id=2782"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2782/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2782.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2782/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2782/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2782"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2782/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:edadd25d08f3%0D58fbe39d9e90?from_pullrequest_id=2782"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2782/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2782/statuses_page=1.json"}}, "title": "Bump minimum version of sdformat to 6", "close_source_branch": false, "type": "pullrequest", "id": 2782, "destination": {"commit": {"hash": "58fbe39d9e90", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/58fbe39d9e90.json"}, "html": {"href": "#!/osrf/gazebo/commits/58fbe39d9e90"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-09-28T22:58:36.167086+00:00", "summary": {"raw": "This allows building gazebo default branch against sdformat default branch.", "markup": "markdown", "html": "<p>This allows building gazebo default branch against sdformat default branch.</p>", "type": "rendered"}, "source": {"commit": {"hash": "edadd25d08f3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/edadd25d08f3.json"}, "html": {"href": "#!/osrf/gazebo/commits/edadd25d08f3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "bump_libsdf_ver6"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "reason": "Declining in favor of pull request #2750", "updated_on": "2017-09-29T14:44:57.943156+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "~~Bump the required version of ignition math to 4.~~ Find ignition math 4 if 3 is not available. This is necessary to build gazebo default branch against ignition-math 4 default branch", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2783/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:85a2417b8ffc%0D2a6cf0df21f1?from_pullrequest_id=2783"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2783/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2783.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2783/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2783/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2783"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2783/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:85a2417b8ffc%0D2a6cf0df21f1?from_pullrequest_id=2783"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2783/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2783/statuses_page=1.json"}}, "title": "Depend on ignition math 3 or 4", "close_source_branch": true, "type": "pullrequest", "id": 2783, "destination": {"commit": {"hash": "2a6cf0df21f1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2a6cf0df21f1.json"}, "html": {"href": "#!/osrf/gazebo/commits/2a6cf0df21f1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-09-29T17:35:18.596394+00:00", "summary": {"raw": "~~Bump the required version of ignition math to 4.~~ Find ignition math 4 if 3 is not available. This is necessary to build gazebo default branch against ignition-math 4 default branch", "markup": "markdown", "html": "<p><del>Bump the required version of ignition math to 4.</del> Find ignition math 4 if 3 is not available. This is necessary to build gazebo default branch against ignition-math 4 default branch</p>", "type": "rendered"}, "source": {"commit": {"hash": "65db9a3f8142", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/65db9a3f8142.json"}, "html": {"href": "#!/osrf/gazebo/commits/65db9a3f8142"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "depend_ign_math_4"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-12T22:37:18.201387+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "85a2417b8ffc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/85a2417b8ffc.json"}, "html": {"href": "#!/osrf/gazebo/commits/85a2417b8ffc"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "These files use boost lexical_cast but don't include the header.\r\n\r\nI discovered this while trying to build all default branches of ignition/sdformat/gazebo together. I suspect sdformat used to include it in one of it's headers, but no longer does so.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2784/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:3ac47b35d646%0Dddcc0efb596b?from_pullrequest_id=2784"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2784/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2784.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2784/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2784/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2784"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2784/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3ac47b35d646%0Dddcc0efb596b?from_pullrequest_id=2784"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2784/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2784/statuses_page=1.json"}}, "title": "Add missing include boost/lexical_cast.hpp", "close_source_branch": true, "type": "pullrequest", "id": 2784, "destination": {"commit": {"hash": "ddcc0efb596b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ddcc0efb596b.json"}, "html": {"href": "#!/osrf/gazebo/commits/ddcc0efb596b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-09-29T17:40:31.248858+00:00", "summary": {"raw": "These files use boost lexical_cast but don't include the header.\r\n\r\nI discovered this while trying to build all default branches of ignition/sdformat/gazebo together. I suspect sdformat used to include it in one of it's headers, but no longer does so.", "markup": "markdown", "html": "<p>These files use boost lexical_cast but don't include the header.</p>\n<p>I discovered this while trying to build all default branches of ignition/sdformat/gazebo together. I suspect sdformat used to include it in one of it's headers, but no longer does so.</p>", "type": "rendered"}, "source": {"commit": {"hash": "109ef658bc32", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/109ef658bc32.json"}, "html": {"href": "#!/osrf/gazebo/commits/109ef658bc32"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "boost_lexical_cast_include"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-09-29T18:44:18.753342+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "3ac47b35d646", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ac47b35d646.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ac47b35d646"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This fixes a compile error when building against sdformat default. The variant does not contain `gazebo::common::Time`, so a `Param::Get()` cannot succeed. This gets an `sdf::Time` and converts it to `gazebo::common::Time` instead.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2785/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:2a6cf0df21f1%0Dd87e713829ea?from_pullrequest_id=2785"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2785/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2785.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2785/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2785/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2785"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2785/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:2a6cf0df21f1%0Dd87e713829ea?from_pullrequest_id=2785"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2785/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2785/statuses_page=1.json"}}, "title": "Fix compiler error due to common::Time and sdformat", "close_source_branch": true, "type": "pullrequest", "id": 2785, "destination": {"commit": {"hash": "d87e713829ea", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d87e713829ea.json"}, "html": {"href": "#!/osrf/gazebo/commits/d87e713829ea"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-09-29T17:45:24.012241+00:00", "summary": {"raw": "This fixes a compile error when building against sdformat default. The variant does not contain `gazebo::common::Time`, so a `Param::Get()` cannot succeed. This gets an `sdf::Time` and converts it to `gazebo::common::Time` instead.", "markup": "markdown", "html": "<p>This fixes a compile error when building against sdformat default. The variant does not contain <code>gazebo::common::Time</code>, so a <code>Param::Get()</code> cannot succeed. This gets an <code>sdf::Time</code> and converts it to <code>gazebo::common::Time</code> instead.</p>", "type": "rendered"}, "source": {"commit": {"hash": "583e02eb2d0d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/583e02eb2d0d.json"}, "html": {"href": "#!/osrf/gazebo/commits/583e02eb2d0d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "variant_does_not_contain_time"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-12T22:33:24.191144+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "2a6cf0df21f1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2a6cf0df21f1.json"}, "html": {"href": "#!/osrf/gazebo/commits/2a6cf0df21f1"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This fixes a compile error when building against sdformat default. The variant does not contain `gazebo::common::Color`, so a `Param::Get()` cannot succeed.\r\n\r\nSince `gazebo::common::Color` is deprecated this PR also deprecates and adds alternatives to some methods that use `common::Color` in their signature. It doesn't replace all uses of `common::Color`, just enough to get the build complete plus a tiny bit more so that `common::Color` functions are deprecated in the files that had compile errors.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2786/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:75b7d15c6c2a%0D72a532821519?from_pullrequest_id=2786"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2786/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2786.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2786/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2786/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2786"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2786/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:75b7d15c6c2a%0D72a532821519?from_pullrequest_id=2786"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2786/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2786/statuses_page=1.json"}}, "title": "Fix compile error due gazebo::common::Color and sdformat", "close_source_branch": true, "type": "pullrequest", "id": 2786, "destination": {"commit": {"hash": "72a532821519", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/72a532821519.json"}, "html": {"href": "#!/osrf/gazebo/commits/72a532821519"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-09-29T17:54:27.391834+00:00", "summary": {"raw": "This fixes a compile error when building against sdformat default. The variant does not contain `gazebo::common::Color`, so a `Param::Get()` cannot succeed.\r\n\r\nSince `gazebo::common::Color` is deprecated this PR also deprecates and adds alternatives to some methods that use `common::Color` in their signature. It doesn't replace all uses of `common::Color`, just enough to get the build complete plus a tiny bit more so that `common::Color` functions are deprecated in the files that had compile errors.", "markup": "markdown", "html": "<p>This fixes a compile error when building against sdformat default. The variant does not contain <code>gazebo::common::Color</code>, so a <code>Param::Get()</code> cannot succeed.</p>\n<p>Since <code>gazebo::common::Color</code> is deprecated this PR also deprecates and adds alternatives to some methods that use <code>common::Color</code> in their signature. It doesn't replace all uses of <code>common::Color</code>, just enough to get the build complete plus a tiny bit more so that <code>common::Color</code> functions are deprecated in the files that had compile errors.</p>", "type": "rendered"}, "source": {"commit": {"hash": "97677e15d4fb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/97677e15d4fb.json"}, "html": {"href": "#!/osrf/gazebo/commits/97677e15d4fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "variant_does_not_contain_color"}}, "comment_count": 49, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-10T22:49:16.347844+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "75b7d15c6c2a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/75b7d15c6c2a.json"}, "html": {"href": "#!/osrf/gazebo/commits/75b7d15c6c2a"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2787/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/peci1/gazebo:c72fd5bcf7a1%0D782da195da5d?from_pullrequest_id=2787"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2787/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2787.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2787/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2787/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2787"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2787/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/peci1/gazebo:c72fd5bcf7a1%0D782da195da5d?from_pullrequest_id=2787"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2787/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2787/statuses_page=1.json"}}, "title": "win_addpath.bat updated to work with gazebo 8", "close_source_branch": false, "type": "pullrequest", "id": 2787, "destination": {"commit": {"hash": "782da195da5d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/782da195da5d.json"}, "html": {"href": "#!/osrf/gazebo/commits/782da195da5d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-10-12T23:35:23.696211+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "c72fd5bcf7a1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/c72fd5bcf7a1"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/c72fd5bcf7a1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "peci1/win_addpathbat-updated-to-work-with-gaze-1507849631042"}}, "comment_count": 11, "state": "DECLINED", "task_count": 0, "reason": "", "updated_on": "2020-01-11T01:54:26.257225+00:00", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "merge_commit": null, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "fix #!/osrf/gazebo/issues/2356/build-with-boost-1580-error", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2788/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:1dabe7812b09%0D68d94d3cce38?from_pullrequest_id=2788"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2788/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2788.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2788/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2788/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2788"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2788/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:1dabe7812b09%0D68d94d3cce38?from_pullrequest_id=2788"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2788/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2788/statuses_page=1.json"}}, "title": "fix gazebo7 compile error with boost 1.58 for oculus support", "close_source_branch": false, "type": "pullrequest", "id": 2788, "destination": {"commit": {"hash": "68d94d3cce38", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/68d94d3cce38.json"}, "html": {"href": "#!/osrf/gazebo/commits/68d94d3cce38"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-10-13T09:24:21.586413+00:00", "summary": {"raw": "fix #!/osrf/gazebo/issues/2356/build-with-boost-1580-error", "markup": "markdown", "html": "<p>fix <a href=\"#!/osrf/gazebo/issues/2356/build-with-boost-1580-error\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issues/2356/build-with-boost-1580-error</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "fc73d414b6bb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jacknlliu/gazebo/commit/fc73d414b6bb"}, "html": {"href": "https://bitbucket.org/jacknlliu/gazebo/commits/fc73d414b6bb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jacknlliu/gazebo"}, "html": {"href": "https://bitbucket.org/jacknlliu/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{603fbe5d-dd22-4d48-8a08-426ae21c6d5a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "jacknlliu/gazebo", "uuid": "{603fbe5d-dd22-4d48-8a08-426ae21c6d5a}"}, "branch": {"name": "gazebo7-fix-boost-compile-error"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-14T23:52:41.309414+00:00", "author": {"display_name": "Jack Liu", "uuid": "{81945f98-d7ff-46f8-a856-bcfe6bcce018}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B81945f98-d7ff-46f8-a856-bcfe6bcce018%7D"}, "html": {"href": "https://bitbucket.org/%7B81945f98-d7ff-46f8-a856-bcfe6bcce018%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17e5b42085cfb1e0593692b4e30e9ed6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jacknlliu", "type": "user", "account_id": "557058:4ff52431-cce6-42f3-bf55-fefe6d5678ce"}, "merge_commit": {"hash": "1dabe7812b09", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1dabe7812b09.json"}, "html": {"href": "#!/osrf/gazebo/commits/1dabe7812b09"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Checking CI", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2789/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:fd216277b973%0Dbedd0bc81b6d?from_pullrequest_id=2789"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2789/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2789.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2789/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2789/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2789"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2789/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:fd216277b973%0Dbedd0bc81b6d?from_pullrequest_id=2789"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2789/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2789/statuses_page=1.json"}}, "title": "Merge 7 -> 8 (logical camera improvements)", "close_source_branch": true, "type": "pullrequest", "id": 2789, "destination": {"commit": {"hash": "bedd0bc81b6d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bedd0bc81b6d.json"}, "html": {"href": "#!/osrf/gazebo/commits/bedd0bc81b6d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-10-16T20:33:22.525654+00:00", "summary": {"raw": "Checking CI", "markup": "markdown", "html": "<p>Checking CI</p>", "type": "rendered"}, "source": {"commit": {"hash": "70370e9f70c2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/70370e9f70c2.json"}, "html": {"href": "#!/osrf/gazebo/commits/70370e9f70c2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "merge_78_logical_camera"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-26T03:31:37.444171+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "fd216277b973", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fd216277b973.json"}, "html": {"href": "#!/osrf/gazebo/commits/fd216277b973"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit ` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit `, except for `EditorMaterialSwitcher.hh` which needed some lines to be wrapped to stay under 80 characters.\r\n\r\n~~~\r\n$ hg up explicit_constructors_gui\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AlignWidget(QWidget *_parent = 0);\r\n      2       public: ApplyWrenchDialog(QWidget *_parent = 0);\r\n      2       public: CloneWindow(QWidget *_parent = 0);\r\n      2       public: DataLogger(QWidget *_parent = 0);\r\n      2       public: Editor(MainWindow *_mainWindow);\r\n      2       public: GLWidget(QWidget *_parent = 0);\r\n      2       public: InsertModelWidget(QWidget *_parent = 0);\r\n      2       public: JointControlWidget(QWidget *_parent = 0);\r\n      2       public: LayersWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayView(LogPlayWidget *_parent = 0);\r\n      2       public: ModelListWidget(QWidget *_parent = 0);\r\n      2       public: RenderWidget(QWidget *_parent = 0);\r\n      2       public: TimePanel(QWidget *_parent = 0);\r\n      2       public: TimeWidget(QWidget *_parent = 0);\r\n      2       public: ToolsWidget(QWidget *_parent = 0);\r\n      2       public: TopToolbar(QWidget *_parent = 0);\r\n      2       public: TopicSelector(QWidget *_parent = 0);\r\n      2       public: VideoRecorder(QWidget *_parent = 0);\r\n      2       public: ViewAngleWidget(QWidget *_parent = 0);\r\n      2       public: BaseInspectorDialog(QWidget *_parent);\r\n      2       public: BuildingEditor(MainWindow *_mainWindow);\r\n      2       public: BuildingEditorPalette(QWidget *_parent = 0);\r\n      2       public: BuildingEditorWidget(QWidget *_parent = 0);\r\n      2       public: EditorView(QWidget *_parent = 0);\r\n      2       public: ImportImageDialog(QWidget *_parent = 0);\r\n      2       public: ImportImageView(ImportImageDialog *_parent = 0);\r\n      2       public: LevelInspectorDialog(QWidget *_parent = 0);\r\n      2       public: LevelWidget(QWidget *_parent = 0);\r\n      2       public: RotateHandle(QGraphicsItem *_parent = 0);\r\n      2       public: ScaleWidget(QWidget *_parent = 0);\r\n      2       public: SegmentItem(QGraphicsItem *_parent = 0);\r\n      2       public: StairsInspectorDialog(QWidget *_parent = 0);\r\n      2       public: WallInspectorDialog(QWidget *_parent = 0);\r\n      1       public: EditorMaterialSwitcher(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialSwitcher(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: EditorRenderTargetListener(\r\n      1       public: EditorMaterialListener(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialListener(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: GraphScene(QWidget *_parent = 0);\r\n      2       public: GraphView(QWidget *_parent = 0);\r\n      2       public: ImportDialog(QWidget *_parent = 0);\r\n      2       public: LinkInspector(QWidget *_parent = 0);\r\n      2       public: ModelCreator(QObject *_parent = NULL);\r\n      2       public: ModelEditor(MainWindow *_mainWindow);\r\n      2       public: ModelEditorPalette(QWidget *_parent = 0);\r\n      2       public: ModelPluginInspector(QWidget *_parent = 0);\r\n      2       public: ModelTreeWidget(QWidget *_parent = 0);\r\n      2       public: SchematicViewWidget(QWidget *_parent = 0);\r\n      2       public: PlotMagnifier(QwtPlotCanvas *_canvas)\r\n      2       public: PlotMagnifier(QWidget *_canvas)\r\n      2       public: IncrementalPlot(QWidget *_parent = nullptr);\r\n      2       public: Palette(QWidget *_parent);\r\n      2       public: PlotCanvas(QWidget *_parent);\r\n      2       public: PlotCurve(const std::string &_label);\r\n      2       public: PlotTracker(QwtPlotCanvas *_canvas);\r\n      2       public: PlotTracker(QWidget *_canvas);\r\n      2   public: DragableListWidget(QWidget *_parent)\r\n      2       public: PlotWindow(QWidget *_parent = nullptr);\r\n      2       public: TopicCurve(const std::string &_topic);\r\n      2       public: VariablePill(QWidget *_parent = nullptr);\r\n      2       public: VariablePillContainer(QWidget *_parent = nullptr);\r\n      2       public: TerrainEditor(MainWindow *_mainWindow);\r\n      2       public: TerrainEditorPalette(QWidget *_parent = 0);\r\n      2       public: ImageFrame(QWidget *_parent);\r\n      2       public: ImageView(QWidget *_parent = NULL);\r\n      2       public: ImagesView(QWidget *_parent = nullptr);\r\n      2       public: LaserView(QWidget *_parent = NULL);\r\n      2                  public: CustomView(QWidget *_parent)\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2790/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:a3eb517b0fa5%0Df8f238d19f91?from_pullrequest_id=2790"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2790.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2790/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2790"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:a3eb517b0fa5%0Df8f238d19f91?from_pullrequest_id=2790"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2790/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/statuses_page=1.json"}}, "title": "Mark many gui constructors as explicit", "close_source_branch": true, "type": "pullrequest", "id": 2790, "destination": {"commit": {"hash": "f8f238d19f91", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f8f238d19f91.json"}, "html": {"href": "#!/osrf/gazebo/commits/f8f238d19f91"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-10-19T17:58:06.140173+00:00", "summary": {"raw": "We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit ` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit `, except for `EditorMaterialSwitcher.hh` which needed some lines to be wrapped to stay under 80 characters.\r\n\r\n~~~\r\n$ hg up explicit_constructors_gui\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AlignWidget(QWidget *_parent = 0);\r\n      2       public: ApplyWrenchDialog(QWidget *_parent = 0);\r\n      2       public: CloneWindow(QWidget *_parent = 0);\r\n      2       public: DataLogger(QWidget *_parent = 0);\r\n      2       public: Editor(MainWindow *_mainWindow);\r\n      2       public: GLWidget(QWidget *_parent = 0);\r\n      2       public: InsertModelWidget(QWidget *_parent = 0);\r\n      2       public: JointControlWidget(QWidget *_parent = 0);\r\n      2       public: LayersWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayView(LogPlayWidget *_parent = 0);\r\n      2       public: ModelListWidget(QWidget *_parent = 0);\r\n      2       public: RenderWidget(QWidget *_parent = 0);\r\n      2       public: TimePanel(QWidget *_parent = 0);\r\n      2       public: TimeWidget(QWidget *_parent = 0);\r\n      2       public: ToolsWidget(QWidget *_parent = 0);\r\n      2       public: TopToolbar(QWidget *_parent = 0);\r\n      2       public: TopicSelector(QWidget *_parent = 0);\r\n      2       public: VideoRecorder(QWidget *_parent = 0);\r\n      2       public: ViewAngleWidget(QWidget *_parent = 0);\r\n      2       public: BaseInspectorDialog(QWidget *_parent);\r\n      2       public: BuildingEditor(MainWindow *_mainWindow);\r\n      2       public: BuildingEditorPalette(QWidget *_parent = 0);\r\n      2       public: BuildingEditorWidget(QWidget *_parent = 0);\r\n      2       public: EditorView(QWidget *_parent = 0);\r\n      2       public: ImportImageDialog(QWidget *_parent = 0);\r\n      2       public: ImportImageView(ImportImageDialog *_parent = 0);\r\n      2       public: LevelInspectorDialog(QWidget *_parent = 0);\r\n      2       public: LevelWidget(QWidget *_parent = 0);\r\n      2       public: RotateHandle(QGraphicsItem *_parent = 0);\r\n      2       public: ScaleWidget(QWidget *_parent = 0);\r\n      2       public: SegmentItem(QGraphicsItem *_parent = 0);\r\n      2       public: StairsInspectorDialog(QWidget *_parent = 0);\r\n      2       public: WallInspectorDialog(QWidget *_parent = 0);\r\n      1       public: EditorMaterialSwitcher(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialSwitcher(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: EditorRenderTargetListener(\r\n      1       public: EditorMaterialListener(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialListener(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: GraphScene(QWidget *_parent = 0);\r\n      2       public: GraphView(QWidget *_parent = 0);\r\n      2       public: ImportDialog(QWidget *_parent = 0);\r\n      2       public: LinkInspector(QWidget *_parent = 0);\r\n      2       public: ModelCreator(QObject *_parent = NULL);\r\n      2       public: ModelEditor(MainWindow *_mainWindow);\r\n      2       public: ModelEditorPalette(QWidget *_parent = 0);\r\n      2       public: ModelPluginInspector(QWidget *_parent = 0);\r\n      2       public: ModelTreeWidget(QWidget *_parent = 0);\r\n      2       public: SchematicViewWidget(QWidget *_parent = 0);\r\n      2       public: PlotMagnifier(QwtPlotCanvas *_canvas)\r\n      2       public: PlotMagnifier(QWidget *_canvas)\r\n      2       public: IncrementalPlot(QWidget *_parent = nullptr);\r\n      2       public: Palette(QWidget *_parent);\r\n      2       public: PlotCanvas(QWidget *_parent);\r\n      2       public: PlotCurve(const std::string &_label);\r\n      2       public: PlotTracker(QwtPlotCanvas *_canvas);\r\n      2       public: PlotTracker(QWidget *_canvas);\r\n      2   public: DragableListWidget(QWidget *_parent)\r\n      2       public: PlotWindow(QWidget *_parent = nullptr);\r\n      2       public: TopicCurve(const std::string &_topic);\r\n      2       public: VariablePill(QWidget *_parent = nullptr);\r\n      2       public: VariablePillContainer(QWidget *_parent = nullptr);\r\n      2       public: TerrainEditor(MainWindow *_mainWindow);\r\n      2       public: TerrainEditorPalette(QWidget *_parent = 0);\r\n      2       public: ImageFrame(QWidget *_parent);\r\n      2       public: ImageView(QWidget *_parent = NULL);\r\n      2       public: ImagesView(QWidget *_parent = nullptr);\r\n      2       public: LaserView(QWidget *_parent = NULL);\r\n      2                  public: CustomView(QWidget *_parent)\r\n~~~", "markup": "markdown", "html": "<p>We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.</p>\n<p>This is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes <code>explicit</code> and the first character (<code>-</code> or <code>+</code>), then counts unique adjacent lines. Everything that starts with a <code>2</code> was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of <code>explicit</code>, except for <code>EditorMaterialSwitcher.hh</code> which needed some lines to be wrapped to stay under 80 characters.</p>\n<div class=\"codehilite\"><pre><span></span>$ hg up explicit_constructors_gui\n$ hg diff -r default <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> grep <span class=\"s1\">&#39;^[-+] &#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s@explicit @@&#39;</span> -e <span class=\"s1\">&#39;s@^.@@&#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> uniq -c\n      <span class=\"m\">2</span>       public: AlignWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ApplyWrenchDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: CloneWindow<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DataLogger<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: Editor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GLWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: InsertModelWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: JointControlWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LayersWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LogPlayWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LogPlayView<span class=\"o\">(</span>LogPlayWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelListWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: RenderWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TimePanel<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TimeWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ToolsWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopToolbar<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopicSelector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VideoRecorder<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ViewAngleWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BaseInspectorDialog<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditorWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: EditorView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportImageDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportImageView<span class=\"o\">(</span>ImportImageDialog *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LevelInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LevelWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: RotateHandle<span class=\"o\">(</span>QGraphicsItem *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ScaleWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SegmentItem<span class=\"o\">(</span>QGraphicsItem *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: StairsInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: WallInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialSwitcher<span class=\"o\">(</span>const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialSwitcher<span class=\"o\">(</span>\n      <span class=\"m\">1</span>                   const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: EditorRenderTargetListener<span class=\"o\">(</span>\n      <span class=\"m\">1</span>       public: EditorMaterialListener<span class=\"o\">(</span>const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialListener<span class=\"o\">(</span>\n      <span class=\"m\">1</span>                   const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GraphScene<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GraphView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LinkInspector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelCreator<span class=\"o\">(</span>QObject *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelPluginInspector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelTreeWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SchematicViewWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotMagnifier<span class=\"o\">(</span>QwtPlotCanvas *_canvas<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: PlotMagnifier<span class=\"o\">(</span>QWidget *_canvas<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: IncrementalPlot<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: Palette<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotCanvas<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotCurve<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_label<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotTracker<span class=\"o\">(</span>QwtPlotCanvas *_canvas<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotTracker<span class=\"o\">(</span>QWidget *_canvas<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>   public: DragableListWidget<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: PlotWindow<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopicCurve<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_topic<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VariablePill<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VariablePillContainer<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TerrainEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TerrainEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImageFrame<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImageView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImagesView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LaserView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>                  public: CustomView<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "d54132fbc649", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d54132fbc649.json"}, "html": {"href": "#!/osrf/gazebo/commits/d54132fbc649"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_gui"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-02T18:22:15.343875+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Improves camera following, adds rain.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2791/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:241430367677%0D031a409bc3a1?from_pullrequest_id=2791"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2791/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2791.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2791/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2791/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2791"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2791/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:241430367677%0D031a409bc3a1?from_pullrequest_id=2791"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2791/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2791/statuses_page=1.json"}}, "title": "Updates", "close_source_branch": true, "type": "pullrequest", "id": 2791, "destination": {"commit": {"hash": "031a409bc3a1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/031a409bc3a1.json"}, "html": {"href": "#!/osrf/gazebo/commits/031a409bc3a1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "citysim"}}, "created_on": "2017-10-20T19:41:08.429352+00:00", "summary": {"raw": "Improves camera following, adds rain.", "markup": "markdown", "html": "<p>Improves camera following, adds rain.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f41b9df21c3e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f41b9df21c3e.json"}, "html": {"href": "#!/osrf/gazebo/commits/f41b9df21c3e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "fbx"}}, "comment_count": 20, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-21T03:26:17.773911+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": {"hash": "241430367677", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/241430367677.json"}, "html": {"href": "#!/osrf/gazebo/commits/241430367677"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2792/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:9840e93de641%0De7b5cde33db1?from_pullrequest_id=2792"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2792/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:9840e93de641%0De7b5cde33db1?from_pullrequest_id=2792"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2792/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/statuses_page=1.json"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "close_source_branch": true, "type": "pullrequest", "id": 2792, "destination": {"commit": {"hash": "e7b5cde33db1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e7b5cde33db1.json"}, "html": {"href": "#!/osrf/gazebo/commits/e7b5cde33db1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-10-24T20:06:49.057988+00:00", "summary": {"raw": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "markup": "markdown", "html": "<p>Similar to <a href=\"#!/osrf/gazebo/pull-requests/2790/mark-many-gui-constructors-as-explicit\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2790</a>. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for <code>gazebo::physics::Inertial(const ignition::math::Inertiald &amp;)</code> since I think it could be useful to convert easily between these types.</p>\n<p>This is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes <code>explicit</code> and the first character (<code>-</code> or <code>+</code>), then counts unique adjacent lines. Everything that starts with a <code>2</code> was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of <code>explicit</code>, except for <code>GearboxJoint.hh</code>, <code>BulletBoxShape.hh</code>, <code>BulletPlaneShape.hh</code>, <code>BulletSphereShape.hh</code>, <code>SimbodyBoxShape.hh</code>, and <code>SimbodySphereShape.hh</code>, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to <code>Inertial.hh</code>, and <code>DARTJointPrivate.hh</code> in which I renamed a parameter to meet the 80 character limit without wrapping any lines.</p>\n<div class=\"codehilite\"><pre><span></span>$ hg up explicit_constructors_physics\n$ hg diff -r default <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> grep <span class=\"s1\">&#39;^[-+] &#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s@explicit @@&#39;</span> -e <span class=\"s1\">&#39;s@^.@@&#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> uniq -c\n      <span class=\"m\">2</span>       public: AdiabaticAtmosphere<span class=\"o\">(</span>physics::World <span class=\"p\">&amp;</span>_world<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: AtmospherePrivate<span class=\"o\">(</span>physics::World <span class=\"p\">&amp;</span>_world<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: FixedJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span> : T<span class=\"o\">(</span>_parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>       public: GearboxJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span> : T<span class=\"o\">(</span>_parent<span class=\"o\">)</span>, gearRatio<span class=\"o\">(</span><span class=\"m\">1</span>.0<span class=\"o\">)</span>\n      <span class=\"m\">1</span>       public: GearboxJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>               : T<span class=\"o\">(</span>_parent<span class=\"o\">)</span>, gearRatio<span class=\"o\">(</span><span class=\"m\">1</span>.0<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: HingeJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span> : T<span class=\"o\">(</span>_parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>       // cppcheck-suppress noExplicitConstructor\n      <span class=\"m\">2</span>   public: FakeJoint<span class=\"o\">(</span>physics::ModelPtr _model<span class=\"o\">)</span> : physics::Joint<span class=\"o\">(</span>_model<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: Light<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: QuadNode<span class=\"o\">(</span>QuadNode *_parent<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: Preset<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span> _name<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PresetPrivate<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span><span class=\"nv\">_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;default name&quot;</span><span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: UserCmdManager<span class=\"o\">(</span>const WorldPtr _world<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: WindPrivate<span class=\"o\">(</span>physics::World <span class=\"p\">&amp;</span>_world<span class=\"o\">)</span>\n      <span class=\"m\">1</span>       public: BulletBoxShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span> : BoxShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>       public: BulletBoxShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>               : BoxShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">2</span>       public: BulletCollision<span class=\"o\">(</span>LinkPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletCylinderShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: BulletHeightmapShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletLink<span class=\"o\">(</span>EntityPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletMeshShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletMotionState<span class=\"o\">(</span>LinkPtr _link<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletMultiRayShape<span class=\"o\">(</span>CollisionPtr parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletPhysics<span class=\"o\">(</span>WorldPtr _world<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: BulletPlaneShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span> : PlaneShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>       public: BulletPlaneShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>               : PlaneShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">2</span>       public: BulletRayShape<span class=\"o\">(</span>PhysicsEnginePtr _physicsEngine<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BulletRayShape<span class=\"o\">(</span>CollisionPtr _collision<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: BulletSphereShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span> : SphereShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>       public: BulletSphereShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>               : SphereShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">2</span>       public: DARTBallJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTFixedJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTHeightmapShape<span class=\"o\">(</span>DARTCollisionPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTHinge2Joint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTHingeJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: DARTJointPrivate<span class=\"o\">(</span>const DARTPhysicsPtr <span class=\"p\">&amp;</span>_dartPhysicsEngine<span class=\"o\">)</span>\n      <span class=\"m\">1</span>       public: DARTJointPrivate<span class=\"o\">(</span>const DARTPhysicsPtr <span class=\"p\">&amp;</span>_engine<span class=\"o\">)</span>\n      <span class=\"m\">1</span>           dartPhysicsEngine<span class=\"o\">(</span>_dartPhysicsEngine<span class=\"o\">)</span>,\n      <span class=\"m\">1</span>           dartPhysicsEngine<span class=\"o\">(</span>_engine<span class=\"o\">)</span>,\n      <span class=\"m\">2</span>       public: DARTPhysics<span class=\"o\">(</span>WorldPtr _world<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTScrewJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTSliderJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DARTUniversalJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ODEHeightmapShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ODEJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ODEPhysics<span class=\"o\">(</span>WorldPtr _world<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: SimbodyBoxShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span> : BoxShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>       public: SimbodyBoxShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>               : BoxShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">2</span>       public: SimbodyCollision<span class=\"o\">(</span>LinkPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyCylinderShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: SimbodyHeightmapShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyJoint<span class=\"o\">(</span>BasePtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyLink<span class=\"o\">(</span>EntityPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyMeshShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyMultiRayShape<span class=\"o\">(</span>CollisionPtr parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyPhysics<span class=\"o\">(</span>WorldPtr _world<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyPlaneShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyRayShape<span class=\"o\">(</span>PhysicsEnginePtr _physicsEngine<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SimbodyRayShape<span class=\"o\">(</span>CollisionPtr _collision<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: SimbodySphereShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span> : SphereShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>       public: SimbodySphereShape<span class=\"o\">(</span>CollisionPtr _parent<span class=\"o\">)</span>\n      <span class=\"m\">1</span>               : SphereShape<span class=\"o\">(</span>_parent<span class=\"o\">)</span> <span class=\"o\">{}</span>\n</pre></div>\n\n\n<p>UPDATE: all the jenkins builds failed to compile, so reverted the <code>explicit</code> keyword for the <code>Preset(string)</code> constructor and suppressed the warning instead in <a href=\"#!/osrf/gazebo/commits/6ea1844\" rel=\"nofollow\" class=\"ap-connect-link\">6ea1844</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "dc4dd1ab6368", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dc4dd1ab6368.json"}, "html": {"href": "#!/osrf/gazebo/commits/dc4dd1ab6368"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "comment_count": 22, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-12-09T01:06:19.509091+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "9840e93de641", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9840e93de641.json"}, "html": {"href": "#!/osrf/gazebo/commits/9840e93de641"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "our jenkins gazebo homebrew build was recently updated to use ogre 1.9 but resulted in several [gui and rendering test failures](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-gazebo7-homebrew-amd64/177/testReport/)\r\n\r\nThis PR fixes most of these test failures by backporting changes from different pull requests back when we're migrating gazebo8 to use ogre 1.9 (pull request #2572, pull request #2475, pull request #2493)\r\n\r\njenkins:\r\n\r\n[Homebrew build](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1225/testReport/) -  2 test failures. The `MainWindow_TEST` should be fixed by 65573cd and d0256bc. The `VisualProperty.CastShow` may take some time to investigate resource paths setup on jenkins so I'll leave that one there for now. There could still be tests that are flaky so we'll need to keep an eye on them.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2793/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:4ec26fcd8987%0Dbd4bb1110e9f?from_pullrequest_id=2793"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2793/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2793.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2793/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2793/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2793"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2793/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:4ec26fcd8987%0Dbd4bb1110e9f?from_pullrequest_id=2793"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2793/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2793/statuses_page=1.json"}}, "title": "Fix gui and rendering tests for gazebo7 + ogre1.9 on OSX", "close_source_branch": true, "type": "pullrequest", "id": 2793, "destination": {"commit": {"hash": "bd4bb1110e9f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bd4bb1110e9f.json"}, "html": {"href": "#!/osrf/gazebo/commits/bd4bb1110e9f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-10-26T00:30:00.108883+00:00", "summary": {"raw": "our jenkins gazebo homebrew build was recently updated to use ogre 1.9 but resulted in several [gui and rendering test failures](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-gazebo7-homebrew-amd64/177/testReport/)\r\n\r\nThis PR fixes most of these test failures by backporting changes from different pull requests back when we're migrating gazebo8 to use ogre 1.9 (pull request #2572, pull request #2475, pull request #2493)\r\n\r\njenkins:\r\n\r\n[Homebrew build](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1225/testReport/) -  2 test failures. The `MainWindow_TEST` should be fixed by 65573cd and d0256bc. The `VisualProperty.CastShow` may take some time to investigate resource paths setup on jenkins so I'll leave that one there for now. There could still be tests that are flaky so we'll need to keep an eye on them.", "markup": "markdown", "html": "<p>our jenkins gazebo homebrew build was recently updated to use ogre 1.9 but resulted in several <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-gazebo7-homebrew-amd64/177/testReport/\" rel=\"nofollow\">gui and rendering test failures</a></p>\n<p>This PR fixes most of these test failures by backporting changes from different pull requests back when we're migrating gazebo8 to use ogre 1.9 (<a href=\"#!/osrf/gazebo/pull-requests/2572/qt5\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2572</a>, <a href=\"#!/osrf/gazebo/pull-requests/2475/prepare-for-qt5-on-osx\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2475</a>, <a href=\"#!/osrf/gazebo/pull-requests/2493/cleanup-qtest-warnings-and-ogre-exceptions\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2493</a>)</p>\n<p>jenkins:</p>\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1225/testReport/\" rel=\"nofollow\">Homebrew build</a> -  2 test failures. The <code>MainWindow_TEST</code> should be fixed by <a href=\"#!/osrf/gazebo/commits/65573cd\" rel=\"nofollow\" class=\"ap-connect-link\">65573cd</a> and <a href=\"#!/osrf/gazebo/commits/d0256bc\" rel=\"nofollow\" class=\"ap-connect-link\">d0256bc</a>. The <code>VisualProperty.CastShow</code> may take some time to investigate resource paths setup on jenkins so I'll leave that one there for now. There could still be tests that are flaky so we'll need to keep an eye on them.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3251a7a4a49a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3251a7a4a49a.json"}, "html": {"href": "#!/osrf/gazebo/commits/3251a7a4a49a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "osx_ogre19_7"}}, "comment_count": 16, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-07T20:54:48.739273+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "4ec26fcd8987", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4ec26fcd8987.json"}, "html": {"href": "#!/osrf/gazebo/commits/4ec26fcd8987"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Checking CI", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2794/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:897c5d948f63%0De26144434b93?from_pullrequest_id=2794"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2794/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2794.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2794/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2794/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2794"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2794/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:897c5d948f63%0De26144434b93?from_pullrequest_id=2794"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2794/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2794/statuses_page=1.json"}}, "title": "Merge gazebo8 -> default", "close_source_branch": true, "type": "pullrequest", "id": 2794, "destination": {"commit": {"hash": "e26144434b93", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e26144434b93.json"}, "html": {"href": "#!/osrf/gazebo/commits/e26144434b93"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-10-26T03:43:06.770499+00:00", "summary": {"raw": "Checking CI", "markup": "markdown", "html": "<p>Checking CI</p>", "type": "rendered"}, "source": {"commit": {"hash": "0a7e1dba42e5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a7e1dba42e5.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a7e1dba42e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "merge_8default"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-27T17:25:46.068378+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "897c5d948f63", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/897c5d948f63.json"}, "html": {"href": "#!/osrf/gazebo/commits/897c5d948f63"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "See also pull request #2790 and pull request #2792. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked some from rendering, transport, msgs, util, and plugins explicit in this pull request.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `TopicManager.cc` and `SimEventsException.hh`, which needed some lines to be wrapped to stay under 80 characters.\r\n\r\n~~~\r\n$ hg up explicit_constructors_rendering\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2   public: GazeboGenerator(const std::string &_name);\r\n      2       public: TerrainMaterial(const std::string &_materialName);\r\n      2     AtmosphereManager(SkyX *s);\r\n      2       BasicController(const bool& deleteBySkyX = true);\r\n      2     CloudLayer(SkyX *s);\r\n      2     CloudsManager(SkyX *h);\r\n      2     GPUManager(SkyX *s);\r\n      2     MeshManager(SkyX *s);\r\n      2     MoonManager(SkyX *s);\r\n      2       DataManager(VClouds *vc);\r\n      2     GeometryManager(VClouds* vc);\r\n      2     VClouds(Ogre::SceneManager *sm);\r\n      2     VCloudsManager(SkyX *s);\r\n      2       public: CallbackHelper(bool _latching = false);\r\n      2   public: TopicManagerConnectionTask(msgs::Publish _pub) : pub(_pub) {}\r\n      1   public: NodeProcess_TBB(std::vector<NodePtr> *_nodes) : nodes(_nodes) {}\r\n      1   public: NodeProcess_TBB(std::vector<NodePtr> *_nodes)\r\n      1           : nodes(_nodes) {}\r\n      2       public: DiagnosticTimer(const std::string &_name);\r\n      2       public: DoorController(physics::JointPtr _doorJoint);\r\n      2       public: CloseState(ElevatorPluginPrivate::DoorController *_ctrl);\r\n      2       public: OpenState(ElevatorPluginPrivate::DoorController *_ctrl);\r\n      2       public: WaitState(const common::Time &_waitTime);\r\n      1     public: SimEventsException(const char* m) : std::runtime_error(m) {}\r\n      1     public: SimEventsException(const char* m)\r\n      1         : std::runtime_error(m) {}\r\n      2     public: RestException(const char *_m):std::runtime_error(_m) {}\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2795/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:f8f238d19f91%0D897c5d948f63?from_pullrequest_id=2795"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2795/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2795.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2795/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2795/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2795"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2795/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:f8f238d19f91%0D897c5d948f63?from_pullrequest_id=2795"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2795/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2795/statuses_page=1.json"}}, "title": "Explicit constructors in rendering, transport, msgs, util, plugins", "close_source_branch": true, "type": "pullrequest", "id": 2795, "destination": {"commit": {"hash": "897c5d948f63", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/897c5d948f63.json"}, "html": {"href": "#!/osrf/gazebo/commits/897c5d948f63"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-10-27T17:03:14.084521+00:00", "summary": {"raw": "See also pull request #2790 and pull request #2792. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked some from rendering, transport, msgs, util, and plugins explicit in this pull request.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `TopicManager.cc` and `SimEventsException.hh`, which needed some lines to be wrapped to stay under 80 characters.\r\n\r\n~~~\r\n$ hg up explicit_constructors_rendering\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2   public: GazeboGenerator(const std::string &_name);\r\n      2       public: TerrainMaterial(const std::string &_materialName);\r\n      2     AtmosphereManager(SkyX *s);\r\n      2       BasicController(const bool& deleteBySkyX = true);\r\n      2     CloudLayer(SkyX *s);\r\n      2     CloudsManager(SkyX *h);\r\n      2     GPUManager(SkyX *s);\r\n      2     MeshManager(SkyX *s);\r\n      2     MoonManager(SkyX *s);\r\n      2       DataManager(VClouds *vc);\r\n      2     GeometryManager(VClouds* vc);\r\n      2     VClouds(Ogre::SceneManager *sm);\r\n      2     VCloudsManager(SkyX *s);\r\n      2       public: CallbackHelper(bool _latching = false);\r\n      2   public: TopicManagerConnectionTask(msgs::Publish _pub) : pub(_pub) {}\r\n      1   public: NodeProcess_TBB(std::vector<NodePtr> *_nodes) : nodes(_nodes) {}\r\n      1   public: NodeProcess_TBB(std::vector<NodePtr> *_nodes)\r\n      1           : nodes(_nodes) {}\r\n      2       public: DiagnosticTimer(const std::string &_name);\r\n      2       public: DoorController(physics::JointPtr _doorJoint);\r\n      2       public: CloseState(ElevatorPluginPrivate::DoorController *_ctrl);\r\n      2       public: OpenState(ElevatorPluginPrivate::DoorController *_ctrl);\r\n      2       public: WaitState(const common::Time &_waitTime);\r\n      1     public: SimEventsException(const char* m) : std::runtime_error(m) {}\r\n      1     public: SimEventsException(const char* m)\r\n      1         : std::runtime_error(m) {}\r\n      2     public: RestException(const char *_m):std::runtime_error(_m) {}\r\n~~~", "markup": "markdown", "html": "<p>See also <a href=\"#!/osrf/gazebo/pull-requests/2790/mark-many-gui-constructors-as-explicit\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2790</a> and <a href=\"#!/osrf/gazebo/pull-requests/2792/mark-many-physics-constructors-as-explicit\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2792</a>. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked some from rendering, transport, msgs, util, and plugins explicit in this pull request.</p>\n<p>This is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes <code>explicit</code> and the first character (<code>-</code> or <code>+</code>), then counts unique adjacent lines. Everything that starts with a <code>2</code> was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of <code>explicit</code>, except for <code>TopicManager.cc</code> and <code>SimEventsException.hh</code>, which needed some lines to be wrapped to stay under 80 characters.</p>\n<div class=\"codehilite\"><pre><span></span>$ hg up explicit_constructors_rendering\n$ hg diff -r default <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> grep <span class=\"s1\">&#39;^[-+] &#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s@explicit @@&#39;</span> -e <span class=\"s1\">&#39;s@^.@@&#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> uniq -c\n      <span class=\"m\">2</span>   public: GazeboGenerator<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_name<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TerrainMaterial<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_materialName<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     AtmosphereManager<span class=\"o\">(</span>SkyX *s<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       BasicController<span class=\"o\">(</span>const bool<span class=\"p\">&amp;</span> <span class=\"nv\">deleteBySkyX</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     CloudLayer<span class=\"o\">(</span>SkyX *s<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     CloudsManager<span class=\"o\">(</span>SkyX *h<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     GPUManager<span class=\"o\">(</span>SkyX *s<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     MeshManager<span class=\"o\">(</span>SkyX *s<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     MoonManager<span class=\"o\">(</span>SkyX *s<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       DataManager<span class=\"o\">(</span>VClouds *vc<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     GeometryManager<span class=\"o\">(</span>VClouds* vc<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     VClouds<span class=\"o\">(</span>Ogre::SceneManager *sm<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>     VCloudsManager<span class=\"o\">(</span>SkyX *s<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: CallbackHelper<span class=\"o\">(</span>bool <span class=\"nv\">_latching</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>   public: TopicManagerConnectionTask<span class=\"o\">(</span>msgs::Publish _pub<span class=\"o\">)</span> : pub<span class=\"o\">(</span>_pub<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>   public: NodeProcess_TBB<span class=\"o\">(</span>std::vector&lt;NodePtr&gt; *_nodes<span class=\"o\">)</span> : nodes<span class=\"o\">(</span>_nodes<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>   public: NodeProcess_TBB<span class=\"o\">(</span>std::vector&lt;NodePtr&gt; *_nodes<span class=\"o\">)</span>\n      <span class=\"m\">1</span>           : nodes<span class=\"o\">(</span>_nodes<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">2</span>       public: DiagnosticTimer<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_name<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DoorController<span class=\"o\">(</span>physics::JointPtr _doorJoint<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: CloseState<span class=\"o\">(</span>ElevatorPluginPrivate::DoorController *_ctrl<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: OpenState<span class=\"o\">(</span>ElevatorPluginPrivate::DoorController *_ctrl<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: WaitState<span class=\"o\">(</span>const common::Time <span class=\"p\">&amp;</span>_waitTime<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>     public: SimEventsException<span class=\"o\">(</span>const char* m<span class=\"o\">)</span> : std::runtime_error<span class=\"o\">(</span>m<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">1</span>     public: SimEventsException<span class=\"o\">(</span>const char* m<span class=\"o\">)</span>\n      <span class=\"m\">1</span>         : std::runtime_error<span class=\"o\">(</span>m<span class=\"o\">)</span> <span class=\"o\">{}</span>\n      <span class=\"m\">2</span>     public: RestException<span class=\"o\">(</span>const char *_m<span class=\"o\">)</span>:std::runtime_error<span class=\"o\">(</span>_m<span class=\"o\">)</span> <span class=\"o\">{}</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "c50a6a7d96b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c50a6a7d96b3.json"}, "html": {"href": "#!/osrf/gazebo/commits/c50a6a7d96b3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_rendering"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-31T17:41:29.221676+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "f8f238d19f91", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f8f238d19f91.json"}, "html": {"href": "#!/osrf/gazebo/commits/f8f238d19f91"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This pull request adds the ability to connect Gazebo with multiple Ignition Fuel servers and list the models available in each sensor. \r\n\r\nIt's not possible to download models yet, only listing them.\r\n\r\n~~It requires [this pull request](https://bitbucket.org/ignitionrobotics/ign-fuel-tools/pull-requests/24) from Ignition Fuel Tools.~~\r\n\r\nI've made the dependency on Ignition Fuel Tools optional for not disrupting CI until we have a released version ready.\r\n\r\n![gazebo_fuel_list.png](data/bitbucket.org/repo/jgXqbo/images/838125610-gazebo_fuel_list.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2796/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:6d85d25ba4bb%0Db27e852937ee?from_pullrequest_id=2796"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2796/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2796.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2796/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2796/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2796"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2796/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:6d85d25ba4bb%0Db27e852937ee?from_pullrequest_id=2796"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2796/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2796/statuses_page=1.json"}}, "title": "Ignition Fuel support - model list", "close_source_branch": true, "type": "pullrequest", "id": 2796, "destination": {"commit": {"hash": "b27e852937ee", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b27e852937ee.json"}, "html": {"href": "#!/osrf/gazebo/commits/b27e852937ee"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-10-28T00:12:04.005257+00:00", "summary": {"raw": "This pull request adds the ability to connect Gazebo with multiple Ignition Fuel servers and list the models available in each sensor. \r\n\r\nIt's not possible to download models yet, only listing them.\r\n\r\n~~It requires [this pull request](https://bitbucket.org/ignitionrobotics/ign-fuel-tools/pull-requests/24) from Ignition Fuel Tools.~~\r\n\r\nI've made the dependency on Ignition Fuel Tools optional for not disrupting CI until we have a released version ready.\r\n\r\n![gazebo_fuel_list.png](data/bitbucket.org/repo/jgXqbo/images/838125610-gazebo_fuel_list.png)", "markup": "markdown", "html": "<p>This pull request adds the ability to connect Gazebo with multiple Ignition Fuel servers and list the models available in each sensor. </p>\n<p>It's not possible to download models yet, only listing them.</p>\n<p><del>It requires <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-fuel-tools/pull-requests/24\" rel=\"nofollow\">this pull request</a> from Ignition Fuel Tools.</del></p>\n<p>I've made the dependency on Ignition Fuel Tools optional for not disrupting CI until we have a released version ready.</p>\n<p><img alt=\"gazebo_fuel_list.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/838125610-gazebo_fuel_list.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "908447cb0445", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/908447cb0445.json"}, "html": {"href": "#!/osrf/gazebo/commits/908447cb0445"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "fuel"}}, "comment_count": 27, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-12-05T17:28:26.574632+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "6d85d25ba4bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6d85d25ba4bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/6d85d25ba4bb"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now\r\n\r\nupdate by @scpeters: I've merged forward pull request #2811 from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2797/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:584d6bc91ad3%0D4d8123aafcc5?from_pullrequest_id=2797"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2797/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:584d6bc91ad3%0D4d8123aafcc5?from_pullrequest_id=2797"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2797/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/statuses_page=1.json"}}, "title": "Save models' material and meshes when logging", "close_source_branch": true, "type": "pullrequest", "id": 2797, "destination": {"commit": {"hash": "4d8123aafcc5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4d8123aafcc5.json"}, "html": {"href": "#!/osrf/gazebo/commits/4d8123aafcc5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-11-03T00:30:37.072351+00:00", "summary": {"raw": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now\r\n\r\nupdate by @scpeters: I've merged forward pull request #2811 from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR", "markup": "markdown", "html": "<p>This PR adds <code>save model</code> logic to logging process, such that when we replay logs, the models' <code>material</code> and <code>meshes</code> definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  </p>\n<ol>\n<li>\n<p>The first approach I tried is to encode those <code>.png</code> and <code>.dae</code> files into the same <code>state.log</code> file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with <code>state.log</code> and model definitions in the same directory, it would be straightforward to open the model dir and find <code>material</code> and <code>meshes</code> dirs, with <code>.sdf</code> files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. </p>\n</li>\n<li>\n<p>The <code>SaveModels</code> logic is: search through the <code>GAZEBO_MODEL_PATH</code>, when we find the model definition, copy it to the <code>.gazebo/log/XXX/gzserver</code> directory and stop searching.</p>\n</li>\n<li>\n<p>When replay, first export the <code>GAZEBO_MODEL_PATH</code> with\n<code>export GAZEBO_MODEL_PATH=&lt;parent directory of state.log&gt;</code>, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of <code>2017-11-02T16:11:53.458437</code>. The <code>:</code> is a delimiter of the <code>GAZEBO_MODEL_PATH</code> as defined <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&amp;fileviewer=file-view-default#SystemPaths.cc-47\" rel=\"nofollow\">here</a>. As for now, we have to rename the directory to something without the delimiter character. </p>\n</li>\n<li>Tested with models in <code>.gazebo/models</code> removed and export the <code>GAZEBO_MODEL_PATH</code>, replay runs well with the stored models in the log directory</li>\n<li><code>copyDir</code> function falls best in the <code>filesystem</code> class in <code>ign-common</code>, but we are not porting in <code>ign-common</code> to <code>gazebo</code> and it resides in <code>CommonIface</code> now</li>\n</ol>\n<p>update by @scpeters: I've merged forward <a href=\"#!/osrf/gazebo/pull-requests/2811/save-models-material-and-meshes-when\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2811</a> from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR</p>", "type": "rendered"}, "source": {"commit": {"hash": "78ac1cb9a6d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/78ac1cb9a6d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/78ac1cb9a6d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-08-10T22:22:16.032091+00:00", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "merge_commit": {"hash": "584d6bc91ad3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/584d6bc91ad3.json"}, "html": {"href": "#!/osrf/gazebo/commits/584d6bc91ad3"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.\r\n\r\nFor some background on diagnostics, there are some macros defined in [Diagnostics.hh](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&fileviewer=file-view-default#Diagnostics.hh-47) that are used to insert diagnostic timers into various parts of gazebo (such as [physics::World::Update](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&fileviewer=file-view-default#World.cc-739)). If the symbol `ENABLE_DIAGNOSTICS` is not defined, these macros are no-ops; otherwise, they correspond to API calls to the `DiagnosticManager` class.\r\n\r\n* The Diagnostics has been effectively disabled unless the `ENABLE_DIAGNOSTICS` macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in 4e38fc4 and fixed some deprecation warnings.\r\n* Use a pointer reset() instead of Disconnect function for an event connection in fb6c32d\r\n* An empty time-stamped folder has been created in `~/.gazebo/diagnostics` for every time you launch gazebo, even if diagnostics are disabled. In d8a59f6, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running `UNIT_Diagnostics_TEST` should still create a folder created with a file called `test.log`.\r\n\r\nUPDATE:\r\n\r\n* I added an standalone example that uses the diagnostic macros in 3025537", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2798/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5d175791f71e%0D4ec26fcd8987?from_pullrequest_id=2798"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2798.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2798/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2798"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5d175791f71e%0D4ec26fcd8987?from_pullrequest_id=2798"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2798/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/statuses_page=1.json"}}, "title": "Diagnostics: enable test and don't create so many empty folders", "close_source_branch": true, "type": "pullrequest", "id": 2798, "destination": {"commit": {"hash": "4ec26fcd8987", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4ec26fcd8987.json"}, "html": {"href": "#!/osrf/gazebo/commits/4ec26fcd8987"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-11-03T20:03:21.326301+00:00", "summary": {"raw": "These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.\r\n\r\nFor some background on diagnostics, there are some macros defined in [Diagnostics.hh](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&fileviewer=file-view-default#Diagnostics.hh-47) that are used to insert diagnostic timers into various parts of gazebo (such as [physics::World::Update](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&fileviewer=file-view-default#World.cc-739)). If the symbol `ENABLE_DIAGNOSTICS` is not defined, these macros are no-ops; otherwise, they correspond to API calls to the `DiagnosticManager` class.\r\n\r\n* The Diagnostics has been effectively disabled unless the `ENABLE_DIAGNOSTICS` macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in 4e38fc4 and fixed some deprecation warnings.\r\n* Use a pointer reset() instead of Disconnect function for an event connection in fb6c32d\r\n* An empty time-stamped folder has been created in `~/.gazebo/diagnostics` for every time you launch gazebo, even if diagnostics are disabled. In d8a59f6, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running `UNIT_Diagnostics_TEST` should still create a folder created with a file called `test.log`.\r\n\r\nUPDATE:\r\n\r\n* I added an standalone example that uses the diagnostic macros in 3025537", "markup": "markdown", "html": "<p>These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.</p>\n<p>For some background on diagnostics, there are some macros defined in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&amp;fileviewer=file-view-default#Diagnostics.hh-47\" rel=\"nofollow\">Diagnostics.hh</a> that are used to insert diagnostic timers into various parts of gazebo (such as <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&amp;fileviewer=file-view-default#World.cc-739\" rel=\"nofollow\">physics::World::Update</a>). If the symbol <code>ENABLE_DIAGNOSTICS</code> is not defined, these macros are no-ops; otherwise, they correspond to API calls to the <code>DiagnosticManager</code> class.</p>\n<ul>\n<li>The Diagnostics has been effectively disabled unless the <code>ENABLE_DIAGNOSTICS</code> macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in <a href=\"#!/osrf/gazebo/commits/4e38fc4\" rel=\"nofollow\" class=\"ap-connect-link\">4e38fc4</a> and fixed some deprecation warnings.</li>\n<li>Use a pointer reset() instead of Disconnect function for an event connection in <a href=\"#!/osrf/gazebo/commits/fb6c32d\" rel=\"nofollow\" class=\"ap-connect-link\">fb6c32d</a></li>\n<li>An empty time-stamped folder has been created in <code>~/.gazebo/diagnostics</code> for every time you launch gazebo, even if diagnostics are disabled. In <a href=\"#!/osrf/gazebo/commits/d8a59f6\" rel=\"nofollow\" class=\"ap-connect-link\">d8a59f6</a>, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running <code>UNIT_Diagnostics_TEST</code> should still create a folder created with a file called <code>test.log</code>.</li>\n</ul>\n<p>UPDATE:</p>\n<ul>\n<li>I added an standalone example that uses the diagnostic macros in <a href=\"#!/osrf/gazebo/commits/3025537\" rel=\"nofollow\" class=\"ap-connect-link\">3025537</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "9f23806cae43", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9f23806cae43.json"}, "html": {"href": "#!/osrf/gazebo/commits/9f23806cae43"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_part1"}}, "comment_count": 15, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-10T23:49:55.259656+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "5d175791f71e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5d175791f71e.json"}, "html": {"href": "#!/osrf/gazebo/commits/5d175791f71e"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "I came across how we parse the `pause` params from the command line and it is over-complexified itself, since this is a flag with NO argument value. We first store the value as \"true\" or \"false\", and then start parsing the string using `lexical_cast` to a bool value.  In fact, the command line does not accept any argument value.  This small fix will simplify the parsing. \r\n\r\nIt could also be possible this was intentionally written for some special case that I didn't think of, please feel free to point out and I will see whether this fix apply \r\n\r\nTested the following behaviors:\r\n```\r\ngazebo -u XXX.world   \r\ngazebo  XXX.world \r\ngazebo -u -p  state.log\r\ngazebo -p state.log\r\n```\r\npassed code style checker", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2799/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:72a532821519%0Da3eb517b0fa5?from_pullrequest_id=2799"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2799/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2799.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2799/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2799/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2799"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2799/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:72a532821519%0Da3eb517b0fa5?from_pullrequest_id=2799"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2799/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2799/statuses_page=1.json"}}, "title": "[EASY] Simplify parsing pause parameter from console", "close_source_branch": true, "type": "pullrequest", "id": 2799, "destination": {"commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-11-03T22:11:33.509949+00:00", "summary": {"raw": "I came across how we parse the `pause` params from the command line and it is over-complexified itself, since this is a flag with NO argument value. We first store the value as \"true\" or \"false\", and then start parsing the string using `lexical_cast` to a bool value.  In fact, the command line does not accept any argument value.  This small fix will simplify the parsing. \r\n\r\nIt could also be possible this was intentionally written for some special case that I didn't think of, please feel free to point out and I will see whether this fix apply \r\n\r\nTested the following behaviors:\r\n```\r\ngazebo -u XXX.world   \r\ngazebo  XXX.world \r\ngazebo -u -p  state.log\r\ngazebo -p state.log\r\n```\r\npassed code style checker", "markup": "markdown", "html": "<p>I came across how we parse the <code>pause</code> params from the command line and it is over-complexified itself, since this is a flag with NO argument value. We first store the value as \"true\" or \"false\", and then start parsing the string using <code>lexical_cast</code> to a bool value.  In fact, the command line does not accept any argument value.  This small fix will simplify the parsing. </p>\n<p>It could also be possible this was intentionally written for some special case that I didn't think of, please feel free to point out and I will see whether this fix apply </p>\n<p>Tested the following behaviors:</p>\n<div class=\"codehilite\"><pre><span></span>gazebo -u XXX.world   \ngazebo  XXX.world \ngazebo -u -p  state.log\ngazebo -p state.log\n</pre></div>\n\n\n<p>passed code style checker</p>", "type": "rendered"}, "source": {"commit": {"hash": "dfeb152da0de", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dfeb152da0de.json"}, "html": {"href": "#!/osrf/gazebo/commits/dfeb152da0de"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "parse_pause_param"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-07T18:10:20.910296+00:00", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "merge_commit": {"hash": "72a532821519", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/72a532821519.json"}, "html": {"href": "#!/osrf/gazebo/commits/72a532821519"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "With this pull request the GUI should be able to download models hosted in an Ignition Fuel server. We can only download simple models, not models that contain references to other models.\r\n\r\n![fuel_insert_model.gif](data/bitbucket.org/repo/jgXqbo/images/3626697554-fuel_insert_model.gif)\r\n\r\nHow do I test it? \r\n\r\n* You need to point `GAZEBO_MODEL_PATH` to the directory where the model is going to be downloaded. This is far from ideal but we need to think a more sophisticated mechanism and is beyond the scope of this pull request. E.g.: \r\n\r\n```\r\n#!c++\r\n\r\n     export GAZEBO_MODEL_PATH=/home/caguero/.ignition/fuel/models/caguero\r\n```\r\n* Launch Gazebo, go to the `Insert` column, expand `https://api.ignitionfuel.org`, select `hammer` and insert it into the scene.\r\n\r\n~~*Note: this PR is built atop pull request #2796, which should be merged first. [Here's](#!/osrf/gazebo/branches/compare/fuel_download%0Dfuel#diff) a better diff.*~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2800/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:75dabcd2b786%0D61e742f4758e?from_pullrequest_id=2800"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2800/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2800.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2800/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2800/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2800"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2800/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:75dabcd2b786%0D61e742f4758e?from_pullrequest_id=2800"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2800/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2800/statuses_page=1.json"}}, "title": "Download a model from Ignition Fuel", "close_source_branch": true, "type": "pullrequest", "id": 2800, "destination": {"commit": {"hash": "61e742f4758e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/61e742f4758e.json"}, "html": {"href": "#!/osrf/gazebo/commits/61e742f4758e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "created_on": "2017-11-04T00:09:52.961978+00:00", "summary": {"raw": "With this pull request the GUI should be able to download models hosted in an Ignition Fuel server. We can only download simple models, not models that contain references to other models.\r\n\r\n![fuel_insert_model.gif](data/bitbucket.org/repo/jgXqbo/images/3626697554-fuel_insert_model.gif)\r\n\r\nHow do I test it? \r\n\r\n* You need to point `GAZEBO_MODEL_PATH` to the directory where the model is going to be downloaded. This is far from ideal but we need to think a more sophisticated mechanism and is beyond the scope of this pull request. E.g.: \r\n\r\n```\r\n#!c++\r\n\r\n     export GAZEBO_MODEL_PATH=/home/caguero/.ignition/fuel/models/caguero\r\n```\r\n* Launch Gazebo, go to the `Insert` column, expand `https://api.ignitionfuel.org`, select `hammer` and insert it into the scene.\r\n\r\n~~*Note: this PR is built atop pull request #2796, which should be merged first. [Here's](#!/osrf/gazebo/branches/compare/fuel_download%0Dfuel#diff) a better diff.*~~", "markup": "markdown", "html": "<p>With this pull request the GUI should be able to download models hosted in an Ignition Fuel server. We can only download simple models, not models that contain references to other models.</p>\n<p><img alt=\"fuel_insert_model.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/3626697554-fuel_insert_model.gif\" /></p>\n<p>How do I test it? </p>\n<ul>\n<li>You need to point <code>GAZEBO_MODEL_PATH</code> to the directory where the model is going to be downloaded. This is far from ideal but we need to think a more sophisticated mechanism and is beyond the scope of this pull request. E.g.: </li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span>     <span class=\"k\">export</span> <span class=\"n\">GAZEBO_MODEL_PATH</span><span class=\"o\">=/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">caguero</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">fuel</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">/</span><span class=\"n\">caguero</span>\n</pre></div>\n\n\n<ul>\n<li>Launch Gazebo, go to the <code>Insert</code> column, expand <code>https://api.ignitionfuel.org</code>, select <code>hammer</code> and insert it into the scene.</li>\n</ul>\n<p><del><em>Note: this PR is built atop <a href=\"#!/osrf/gazebo/pull-requests/2796/ignition-fuel-support-model-list\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2796</a>, which should be merged first. <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/fuel_download%0Dfuel#diff\" rel=\"nofollow\">Here's</a> a better diff.</em></del></p>", "type": "rendered"}, "source": {"commit": {"hash": "0fd68913eb3e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0fd68913eb3e.json"}, "html": {"href": "#!/osrf/gazebo/commits/0fd68913eb3e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "fuel_download"}}, "comment_count": 91, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-21T19:07:28.808885+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "75dabcd2b786", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/75dabcd2b786.json"}, "html": {"href": "#!/osrf/gazebo/commits/75dabcd2b786"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"description": "Without clearing, entries added to archNames will be given to Ogre::ResourceGroupManager::getSingleton().addResourceLocation in all following iterations again and again.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2801/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:40aafd51fd66%0Dfd216277b973?from_pullrequest_id=2801"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2801/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2801.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2801/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2801/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2801"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2801/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:40aafd51fd66%0Dfd216277b973?from_pullrequest_id=2801"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2801/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2801/statuses_page=1.json"}}, "title": "RenderEngine::SetupResources(): Fix resource locations being added multiple times", "close_source_branch": false, "type": "pullrequest", "id": 2801, "destination": {"commit": {"hash": "fd216277b973", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fd216277b973.json"}, "html": {"href": "#!/osrf/gazebo/commits/fd216277b973"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-11-04T11:59:54.278453+00:00", "summary": {"raw": "Without clearing, entries added to archNames will be given to Ogre::ResourceGroupManager::getSingleton().addResourceLocation in all following iterations again and again.", "markup": "markdown", "html": "<p>Without clearing, entries added to archNames will be given to Ogre::ResourceGroupManager::getSingleton().addResourceLocation in all following iterations again and again.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9a042ba3dd13", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo/commit/9a042ba3dd13"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo/commits/9a042ba3dd13"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/tim_rakowski/gazebo"}, "html": {"href": "https://bitbucket.org/tim_rakowski/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "tim_rakowski/gazebo", "uuid": "{e07005d9-8dd9-4d31-ab05-60a32cf52b5b}"}, "branch": {"name": "gazebo8_addresource_fix"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-10T18:23:42.786162+00:00", "author": {"display_name": "Tim Rakowski", "uuid": "{568e53a4-2b97-42ea-929e-038af8b7825e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D"}, "html": {"href": "https://bitbucket.org/%7B568e53a4-2b97-42ea-929e-038af8b7825e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/83d3799cfee56e3c3195419ca9fd5d06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTR-2.png"}}, "nickname": "Tim Rakowski", "type": "user", "account_id": "557058:34f593f6-84fc-4797-8028-c8e3412b0993"}, "merge_commit": {"hash": "40aafd51fd66", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/40aafd51fd66.json"}, "html": {"href": "#!/osrf/gazebo/commits/40aafd51fd66"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "pagelen": 50, "size": 3211, "page": 56, "previous": "data/repositories/osrf/gazebo/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=55.json"}