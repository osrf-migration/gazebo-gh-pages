{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1936/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1936.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1936/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1936/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1936/maybe-improper-usage-of-std-map-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1936/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Maybe improper usage of std::map[] in Master.cc", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When checking whether connections exist and are open in the `MasterPrivate::connections` map, the following code is used:\r\n\r\n~~~\r\nif (!this->dataPtr->connections[_connectionIndex] ||\r\n    !this->dataPtr->connections[_connectionIndex]->IsOpen())\r\n~~~\r\n\r\nThe first statement will insert a new `ConnectionPtr` into the map if it doesn't already exist. Perhaps it should be:\r\n\r\n~~~\r\nif (this->dataPtr->connections.find(_connectionIndex) == this->dataPtr->connections.end() ||\r\n    !this->dataPtr->connections[_connectionIndex] ||\r\n    !this->dataPtr->connections[_connectionIndex]->IsOpen())\r\n~~~\r\n\r\nI found this while puzzling over the following backtrace from a gzserver running the simple_arm_test world as part of `UNIT_gz_TEST`:\r\n\r\n~~~\r\n#0  0x00002aca27319cc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n#1  0x00002aca2731d0d8 in __GI_abort () at abort.c:89\r\n#2  0x00002aca27312b86 in __assert_fail_base (fmt=0x2aca27463830 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x2aca25ab1b61 \"px != 0\", file=file@entry=0x2aca25ab23e8 \"/usr/include/boost/smart_ptr/shared_ptr.hpp\", line=line@entry=653, function=function@entry=0x2aca25ab4ec0 <boost::shared_ptr<gazebo::transport::Connection>::operator->() const::__PRETTY_FUNCTION__> \"typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::transport::Connection; typename boost::detail::sp_member_access<T>::type = gazebo::transpor\"...) at assert.c:92\r\n#3  0x00002aca27312c32 in __GI___assert_fail (assertion=0x2aca25ab1b61 \"px != 0\", file=0x2aca25ab23e8 \"/usr/include/boost/smart_ptr/shared_ptr.hpp\", line=653, function=0x2aca25ab4ec0 <boost::shared_ptr<gazebo::transport::Connection>::operator->() const::__PRETTY_FUNCTION__> \"typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::transport::Connection; typename boost::detail::sp_member_access<T>::type = gazebo::transpor\"...) at assert.c:101\r\n#4  0x00002aca25aa83b3 in boost::shared_ptr<gazebo::transport::Connection>::operator-> (this=<optimized out>) at /usr/include/boost/smart_ptr/shared_ptr.hpp:653\r\n#5  0x00002aca25aaa64b in operator-> (this=<optimized out>) at gazebo/Master.cc:373\r\n#6  gazebo::Master::ProcessMessage (this=this@entry=0x17fc530, _connectionIndex=3, _data=...) at gazebo/Master.cc:181\r\n#7  0x00002aca25aab0ff in gazebo::Master::RunOnce (this=this@entry=0x17fc530) at gazebo/Master.cc:403\r\n#8  0x00002aca25aab248 in gazebo::Master::Run (this=0x17fc530) at gazebo/Master.cc:381\r\n#9  0x00002aca26b74a60 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#10 0x00002aca287ba182 in start_thread (arg=0x2aca49560700) at pthread_create.c:312\r\n#11 0x00002aca273dd47d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n~~~", "markup": "markdown", "html": "<p>When checking whether connections exist and are open in the <code>MasterPrivate::connections</code> map, the following code is used:</p>\n<div class=\"codehilite\"><pre><span></span>if (!this-&gt;dataPtr-&gt;connections[_connectionIndex] ||\n    !this-&gt;dataPtr-&gt;connections[_connectionIndex]-&gt;IsOpen())\n</pre></div>\n\n\n<p>The first statement will insert a new <code>ConnectionPtr</code> into the map if it doesn't already exist. Perhaps it should be:</p>\n<div class=\"codehilite\"><pre><span></span>if (this-&gt;dataPtr-&gt;connections.find(_connectionIndex) == this-&gt;dataPtr-&gt;connections.end() ||\n    !this-&gt;dataPtr-&gt;connections[_connectionIndex] ||\n    !this-&gt;dataPtr-&gt;connections[_connectionIndex]-&gt;IsOpen())\n</pre></div>\n\n\n<p>I found this while puzzling over the following backtrace from a gzserver running the simple_arm_test world as part of <code>UNIT_gz_TEST</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">#</span><span class=\"nn\">0</span>  <span class=\"nt\">0x00002aca27319cc9</span> <span class=\"nt\">in</span> <span class=\"nt\">__GI_raise</span> <span class=\"o\">(</span><span class=\"nt\">sig</span><span class=\"o\">=</span><span class=\"nt\">sig</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">6</span><span class=\"o\">)</span> <span class=\"nt\">at</span> <span class=\"o\">../</span><span class=\"nt\">nptl</span><span class=\"o\">/</span><span class=\"nt\">sysdeps</span><span class=\"o\">/</span><span class=\"nt\">unix</span><span class=\"o\">/</span><span class=\"nt\">sysv</span><span class=\"o\">/</span><span class=\"nt\">linux</span><span class=\"o\">/</span><span class=\"nt\">raise</span><span class=\"p\">.</span><span class=\"nc\">c</span><span class=\"p\">:</span><span class=\"nd\">56</span>\n<span class=\"p\">#</span><span class=\"nn\">1</span>  <span class=\"nt\">0x00002aca2731d0d8</span> <span class=\"nt\">in</span> <span class=\"nt\">__GI_abort</span> <span class=\"o\">()</span> <span class=\"nt\">at</span> <span class=\"nt\">abort</span><span class=\"p\">.</span><span class=\"nc\">c</span><span class=\"p\">:</span><span class=\"nd\">89</span>\n<span class=\"p\">#</span><span class=\"nn\">2</span>  <span class=\"nt\">0x00002aca27312b86</span> <span class=\"nt\">in</span> <span class=\"nt\">__assert_fail_base</span> <span class=\"o\">(</span><span class=\"nt\">fmt</span><span class=\"o\">=</span><span class=\"nt\">0x2aca27463830</span> <span class=\"s2\">&quot;%s%s%s:%u: %s%sAssertion `%s&#39; failed.\\n%n&quot;</span><span class=\"o\">,</span> <span class=\"nt\">assertion</span><span class=\"o\">=</span><span class=\"nt\">assertion</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">0x2aca25ab1b61</span> <span class=\"s2\">&quot;px != 0&quot;</span><span class=\"o\">,</span> <span class=\"nt\">file</span><span class=\"o\">=</span><span class=\"nt\">file</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">0x2aca25ab23e8</span> <span class=\"s2\">&quot;/usr/include/boost/smart_ptr/shared_ptr.hpp&quot;</span><span class=\"o\">,</span> <span class=\"nt\">line</span><span class=\"o\">=</span><span class=\"nt\">line</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">653</span><span class=\"o\">,</span> <span class=\"nt\">function</span><span class=\"o\">=</span><span class=\"nt\">function</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">0x2aca25ab4ec0</span> <span class=\"o\">&lt;</span><span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">transport</span><span class=\"p\">::</span><span class=\"nd\">Connection</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">&gt;()</span> <span class=\"nt\">const</span><span class=\"p\">::</span><span class=\"nd\">__PRETTY_FUNCTION__</span><span class=\"o\">&gt;</span> <span class=\"err\">&quot;</span><span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">detail</span><span class=\"p\">::</span><span class=\"nd\">sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">&gt;()</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::transport::Connection</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::transpor</span><span class=\"s2\">&quot;...) at assert.c:92</span>\n<span class=\"s2\">#3  0x00002aca27312c32 in __GI___assert_fail (assertion=0x2aca25ab1b61 &quot;</span><span class=\"nx\">px</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"s2\">&quot;, file=0x2aca25ab23e8 &quot;</span><span class=\"p\">/</span><span class=\"nx\">usr</span><span class=\"p\">/</span><span class=\"nb\">include</span><span class=\"p\">/</span><span class=\"nx\">boost</span><span class=\"p\">/</span><span class=\"nx\">smart_ptr</span><span class=\"p\">/</span><span class=\"nx\">shared_ptr.hpp</span><span class=\"s2\">&quot;, line=653, function=0x2aca25ab4ec0 &lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt;::operator-&gt;() const::__PRETTY_FUNCTION__&gt; &quot;</span><span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"nx\">boost</span><span class=\"nl\">::shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::operator</span><span class=\"o\">-&gt;</span><span class=\"p\">()</span> <span class=\"nx\">const</span> <span class=\"err\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::transport::Connection</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::transpor</span><span class=\"s2\">&quot;...) at assert.c:101</span>\n<span class=\"s2\">#4  0x00002aca25aa83b3 in boost::shared_ptr&lt;gazebo::transport::Connection&gt;::operator-&gt; (this=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/shared_ptr.hpp:653</span>\n<span class=\"s2\">#5  0x00002aca25aaa64b in operator-&gt; (this=&lt;optimized out&gt;) at gazebo/Master.cc:373</span>\n<span class=\"s2\">#6  gazebo::Master::ProcessMessage (this=this@entry=0x17fc530, _connectionIndex=3, _data=...) at gazebo/Master.cc:181</span>\n<span class=\"s2\">#7  0x00002aca25aab0ff in gazebo::Master::RunOnce (this=this@entry=0x17fc530) at gazebo/Master.cc:403</span>\n<span class=\"s2\">#8  0x00002aca25aab248 in gazebo::Master::Run (this=0x17fc530) at gazebo/Master.cc:381</span>\n<span class=\"s2\">#9  0x00002aca26b74a60 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6</span>\n<span class=\"s2\">#10 0x00002aca287ba182 in start_thread (arg=0x2aca49560700) at pthread_create.c:312</span>\n<span class=\"s2\">#11 0x00002aca273dd47d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-04-22T18:57:48.333288+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:22.647170+00:00", "type": "issue", "id": 1936}