{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2650/comments/53388716.json"}, "html": {"href": "#!/osrf/gazebo/issues/2650#comment-53388716"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2650.json"}}, "type": "issue", "id": 2650, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "catkin build - cannot find `tinyxml2::tinyxml2` target"}, "content": {"raw": "Ah, I see, there are more places where the `tinyxml2` prefix needs to be changed to `gztinyxml2`. Basically every instance of `tinyxml2_` throughout the Gazebo cmake should be changed to `gztinyxml2_`.\n\nAt a minimum that would include `tinyxml2_LIBRARIES` \u2192 `gztinyxml2_LIBRARIES` and `tinyxml2_INCLUDE_DIRS` \u2192 `gztinyxml_INCLUDE_DIRS`. Here\u2019s what I find from doing a recursive grep:\n\n```\n./gazebo/CMakeLists.txt:10:  ${tinyxml2_INCLUDE_DIRS}\n./gazebo/util/CMakeLists.txt:9:                    ${tinyxml2_INCLUDE_DIRS}\n./gazebo/util/CMakeLists.txt:12:link_directories(${tinyxml2_LIBRARY_DIRS} ${IGNITION-MSGS_LIBRARY_DIRS})\n./gazebo/util/CMakeLists.txt:84:  ${tinyxml2_LIBRARIES}\n./gazebo/util/CMakeLists.txt:91:if (NOT tinyxml2_VERSION VERSION_LESS \"6.0.0\")\n./gazebo/util/CMakeLists.txt:92:  message(STATUS \"tinyxml2_VERSION ${tinyxml2_VERSION} >= 6.0.0\")\n./tools/CMakeLists.txt:5:  ${tinyxml2_INCLUDE_DIRS}\n./cmake/SearchForStuff.cmake:243:    if (NOT tinyxml2_FOUND)\n./cmake/SearchForStuff.cmake:244:        find_path (tinyxml2_INCLUDE_DIRS tinyxml2.h ${tinyxml2_INCLUDE_DIRS} ENV CPATH)\n./cmake/SearchForStuff.cmake:245:        find_library(tinyxml2_LIBRARIES NAMES tinyxml2)\n./cmake/SearchForStuff.cmake:246:        set (tinyxml2_FAIL False)\n./cmake/SearchForStuff.cmake:247:        if (NOT tinyxml2_INCLUDE_DIRS)\n./cmake/SearchForStuff.cmake:249:          set (tinyxml2_FAIL True)\n./cmake/SearchForStuff.cmake:251:        if (NOT tinyxml2_LIBRARIES)\n./cmake/SearchForStuff.cmake:253:          set (tinyxml2_FAIL True)\n./cmake/SearchForStuff.cmake:255:        if (NOT tinyxml2_LIBRARY_DIRS)\n./cmake/SearchForStuff.cmake:257:          set (tinyxml2_FAIL True)\n./cmake/SearchForStuff.cmake:261:    if (tinyxml2_FAIL)\n./cmake/SearchForStuff.cmake:265:      include_directories(${tinyxml2_INCLUDE_DIRS})\n./cmake/SearchForStuff.cmake:266:      link_directories(${tinyxml2_LIBRARY_DIRS})\n./cmake/SearchForStuff.cmake:271:    set (tinyxml2_INCLUDE_DIRS \"${CMAKE_SOURCE_DIR}/deps/tinyxml2\")\n./cmake/SearchForStuff.cmake:272:    set (tinyxml2_LIBRARIES \"\")\n./cmake/SearchForStuff.cmake:273:    set (tinyxml2_LIBRARY_DIRS \"\")\n```", "markup": "markdown", "html": "<p>Ah, I see, there are more places where the <code>tinyxml2</code> prefix needs to be changed to <code>gztinyxml2</code>. Basically every instance of <code>tinyxml2_</code> throughout the Gazebo cmake should be changed to <code>gztinyxml2_</code>.</p>\n<p>At a minimum that would include <code>tinyxml2_LIBRARIES</code> \u2192 <code>gztinyxml2_LIBRARIES</code> and <code>tinyxml2_INCLUDE_DIRS</code> \u2192 <code>gztinyxml_INCLUDE_DIRS</code>. Here\u2019s what I find from doing a recursive grep:</p>\n<div class=\"codehilite\"><pre><span></span>./gazebo/CMakeLists.txt:10:  <span class=\"cp\">${</span><span class=\"n\">tinyxml2_INCLUDE_DIRS</span><span class=\"cp\">}</span>\n./gazebo/util/CMakeLists.txt:9:                    <span class=\"cp\">${</span><span class=\"n\">tinyxml2_INCLUDE_DIRS</span><span class=\"cp\">}</span>\n./gazebo/util/CMakeLists.txt:12:link_directories(<span class=\"cp\">${</span><span class=\"n\">tinyxml2_LIBRARY_DIRS</span><span class=\"cp\">}</span> <span class=\"cp\">${</span><span class=\"n\">IGNITION</span><span class=\"o\">-</span><span class=\"n\">MSGS_LIBRARY_DIRS</span><span class=\"cp\">}</span>)\n./gazebo/util/CMakeLists.txt:84:  <span class=\"cp\">${</span><span class=\"n\">tinyxml2_LIBRARIES</span><span class=\"cp\">}</span>\n./gazebo/util/CMakeLists.txt:91:if (NOT tinyxml2_VERSION VERSION_LESS &quot;6.0.0&quot;)\n./gazebo/util/CMakeLists.txt:92:  message(STATUS &quot;tinyxml2_VERSION <span class=\"cp\">${</span><span class=\"n\">tinyxml2_VERSION</span><span class=\"cp\">}</span> &gt;= 6.0.0&quot;)\n./tools/CMakeLists.txt:5:  <span class=\"cp\">${</span><span class=\"n\">tinyxml2_INCLUDE_DIRS</span><span class=\"cp\">}</span>\n./cmake/SearchForStuff.cmake:243:    if (NOT tinyxml2_FOUND)\n./cmake/SearchForStuff.cmake:244:        find_path (tinyxml2_INCLUDE_DIRS tinyxml2.h <span class=\"cp\">${</span><span class=\"n\">tinyxml2_INCLUDE_DIRS</span><span class=\"cp\">}</span> ENV CPATH)\n./cmake/SearchForStuff.cmake:245:        find_library(tinyxml2_LIBRARIES NAMES tinyxml2)\n./cmake/SearchForStuff.cmake:246:        set (tinyxml2_FAIL False)\n./cmake/SearchForStuff.cmake:247:        if (NOT tinyxml2_INCLUDE_DIRS)\n./cmake/SearchForStuff.cmake:249:          set (tinyxml2_FAIL True)\n./cmake/SearchForStuff.cmake:251:        if (NOT tinyxml2_LIBRARIES)\n./cmake/SearchForStuff.cmake:253:          set (tinyxml2_FAIL True)\n./cmake/SearchForStuff.cmake:255:        if (NOT tinyxml2_LIBRARY_DIRS)\n./cmake/SearchForStuff.cmake:257:          set (tinyxml2_FAIL True)\n./cmake/SearchForStuff.cmake:261:    if (tinyxml2_FAIL)\n./cmake/SearchForStuff.cmake:265:      include_directories(<span class=\"cp\">${</span><span class=\"n\">tinyxml2_INCLUDE_DIRS</span><span class=\"cp\">}</span>)\n./cmake/SearchForStuff.cmake:266:      link_directories(<span class=\"cp\">${</span><span class=\"n\">tinyxml2_LIBRARY_DIRS</span><span class=\"cp\">}</span>)\n./cmake/SearchForStuff.cmake:271:    set (tinyxml2_INCLUDE_DIRS &quot;<span class=\"cp\">${</span><span class=\"n\">CMAKE_SOURCE_DIR</span><span class=\"cp\">}</span>/deps/tinyxml2&quot;)\n./cmake/SearchForStuff.cmake:272:    set (tinyxml2_LIBRARIES &quot;&quot;)\n./cmake/SearchForStuff.cmake:273:    set (tinyxml2_LIBRARY_DIRS &quot;&quot;)\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-13T07:41:46.816770+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 53388716}