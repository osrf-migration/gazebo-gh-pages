{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/2801216.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-2801216"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": "Updated [ros-pkg ticket](https://code.ros.org/trac/ros-pkg/ticket/5573).\n\nProposing making sure `Link::SetForce`, `Link::SetTorque`, `Link::AddForce` and `Link::AddTorque`) sets/accumulates force/torque at `Link` origins, I agree that seem to be more intuitive.  Objections?\n\nWhen settled, I'll update doxygen comment to be more clear on what's going on as well.\n\nThanks,\nJohn", "markup": "markdown", "html": "<p>Updated <a data-is-external-link=\"true\" href=\"https://code.ros.org/trac/ros-pkg/ticket/5573\" rel=\"nofollow\">ros-pkg ticket</a>.</p>\n<p>Proposing making sure <code>Link::SetForce</code>, <code>Link::SetTorque</code>, <code>Link::AddForce</code> and <code>Link::AddTorque</code>) sets/accumulates force/torque at <code>Link</code> origins, I agree that seem to be more intuitive.  Objections?</p>\n<p>When settled, I'll update doxygen comment to be more clear on what's going on as well.</p>\n<p>Thanks,\nJohn</p>", "type": "rendered"}, "created_on": "2013-01-09T23:42:12.136626+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 2801216}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/3212569.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-3212569"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": "Until 2.0", "markup": "markdown", "html": "<p>Until 2.0</p>", "type": "rendered"}, "created_on": "2013-02-22T15:51:31.175636+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 3212569}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/5115305.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-5115305"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2013-07-08T22:32:30.280595+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 5115305}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/15431665.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-15431665"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": "After trying out all the functions, I think their documentation should be something like this:\n\n~~~\n      /// \\brief Apply a force at the link's CoG for one time step.\n      /// \\param[in] _force Force expressed in the world frame.\n      public: virtual void AddForce(const math::Vector3 &_force) = 0;\n\n      /// \\brief Apply a force at the link's CoG for one time step.\n      /// \\param[in] _force Force expressed in the link's frame (not its\n      /// inertial frame).\n      public: virtual void AddRelativeForce(const math::Vector3 &_force) = 0;\n\n      /// \\brief Apply a force at a given position for one time step.\n      /// \\param[in] _force Force expressed in the world frame.\n      /// \\param[in] _pos Position expressed in the world frame.\n      public: virtual void AddForceAtWorldPosition(const math::Vector3 &_force,\n                  const math::Vector3 &_pos) = 0;\n\n      /// \\brief Apply a force at a given position for one time step.\n      /// Note that force and position are expressed in different frames.\n      /// \\param[in] _force Force expressed in the world frame.\n      /// \\param[in] _pos Position expressed in the link's frame (not its\n      /// inertial frame).\n      public: virtual void AddForceAtRelativePosition(\n                  const math::Vector3 &_force,\n                  const math::Vector3 &_relPos) = 0;\n~~~", "markup": "markdown", "html": "<p>After trying out all the functions, I think their documentation should be something like this:</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Apply</span> <span class=\"nt\">a</span> <span class=\"nt\">force</span> <span class=\"nt\">at</span> <span class=\"nt\">the</span> <span class=\"nt\">link</span><span class=\"s1\">&#39;s CoG for one time step.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _force Force expressed in the world frame.</span>\n<span class=\"s1\">      public: virtual void AddForce(const math::Vector3 &amp;_force) = 0;</span>\n\n<span class=\"s1\">      /// \\brief Apply a force at the link&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">CoG</span> <span class=\"nt\">for</span> <span class=\"nt\">one</span> <span class=\"nt\">time</span> <span class=\"nt\">step</span><span class=\"o\">.</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span> <span class=\"nt\">_force</span> <span class=\"nt\">Force</span> <span class=\"nt\">expressed</span> <span class=\"nt\">in</span> <span class=\"nt\">the</span> <span class=\"nt\">link</span><span class=\"s1\">&#39;s frame (not its</span>\n<span class=\"s1\">      /// inertial frame).</span>\n<span class=\"s1\">      public: virtual void AddRelativeForce(const math::Vector3 &amp;_force) = 0;</span>\n\n<span class=\"s1\">      /// \\brief Apply a force at a given position for one time step.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _force Force expressed in the world frame.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _pos Position expressed in the world frame.</span>\n<span class=\"s1\">      public: virtual void AddForceAtWorldPosition(const math::Vector3 &amp;_force,</span>\n<span class=\"s1\">                  const math::Vector3 &amp;_pos) = 0;</span>\n\n<span class=\"s1\">      /// \\brief Apply a force at a given position for one time step.</span>\n<span class=\"s1\">      /// Note that force and position are expressed in different frames.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _force Force expressed in the world frame.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _pos Position expressed in the link&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">frame</span> <span class=\"o\">(</span><span class=\"nt\">not</span> <span class=\"nt\">its</span>\n      <span class=\"o\">///</span> <span class=\"nt\">inertial</span> <span class=\"nt\">frame</span><span class=\"o\">).</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">virtual</span> <span class=\"nt\">void</span> <span class=\"nt\">AddForceAtRelativePosition</span><span class=\"o\">(</span>\n                  <span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"nt\">_force</span><span class=\"o\">,</span>\n                  <span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"nt\">_relPos</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-02-03T02:20:36.941309+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2015-02-24T01:42:20.499539+00:00", "type": "issue_comment", "id": 15431665}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/15505131.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-15505131"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": "If I may add a couple of functions which would be nice to have for the force/torque GUI, something like:\n\n~~~\n      /// \\brief Apply an impulse to the body.\n      /// \\param[in] _force Force value in N.\n      /// \\param[in] _time Time interval in s.\n      public: virtual void ApplyImpulse(const math::Vector3 &_force, const double &_time) = 0;\n~~~\n\n* I think the name is pretty clear. Maybe it could take only an impulse argument in `Ns`, but I think separating force and time is friendlier.\n\n~~~\n      /// \\brief Add a persistent force to the body.\n      /// \\param[in] _force Force value in N.\n      public: virtual void AddPersistentForce(const math::Vector3 &_force) = 0;\n~~~\n\n* This would be a force that gets added at every time-step indefinitely, perhaps only cancelled by `SetForce(0)`", "markup": "markdown", "html": "<p>If I may add a couple of functions which would be nice to have for the force/torque GUI, something like:</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Apply</span> <span class=\"nt\">an</span> <span class=\"nt\">impulse</span> <span class=\"nt\">to</span> <span class=\"nt\">the</span> <span class=\"nt\">body</span><span class=\"o\">.</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span> <span class=\"nt\">_force</span> <span class=\"nt\">Force</span> <span class=\"nt\">value</span> <span class=\"nt\">in</span> <span class=\"nt\">N</span><span class=\"o\">.</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span> <span class=\"nt\">_time</span> <span class=\"nt\">Time</span> <span class=\"nt\">interval</span> <span class=\"nt\">in</span> <span class=\"nt\">s</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">virtual</span> <span class=\"nt\">void</span> <span class=\"nt\">ApplyImpulse</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"nt\">_force</span><span class=\"o\">,</span> <span class=\"nt\">const</span> <span class=\"nt\">double</span> <span class=\"o\">&amp;</span><span class=\"nt\">_time</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<ul>\n<li>I think the name is pretty clear. Maybe it could take only an impulse argument in <code>Ns</code>, but I think separating force and time is friendlier.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Add</span> <span class=\"nt\">a</span> <span class=\"nt\">persistent</span> <span class=\"nt\">force</span> <span class=\"nt\">to</span> <span class=\"nt\">the</span> <span class=\"nt\">body</span><span class=\"o\">.</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span> <span class=\"nt\">_force</span> <span class=\"nt\">Force</span> <span class=\"nt\">value</span> <span class=\"nt\">in</span> <span class=\"nt\">N</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">virtual</span> <span class=\"nt\">void</span> <span class=\"nt\">AddPersistentForce</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"nt\">_force</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<ul>\n<li>This would be a force that gets added at every time-step indefinitely, perhaps only cancelled by <code>SetForce(0)</code></li>\n</ul>", "type": "rendered"}, "created_on": "2015-02-05T19:50:18.774962+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 15505131}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/15939971.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-15939971"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-02-26T01:34:31.603613+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 15939971}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/30609450.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-30609450"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:20:03.967183+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30609450}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/30611706.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-30611706"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:39:16.672787+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30611706}], "page": 1, "size": 8}