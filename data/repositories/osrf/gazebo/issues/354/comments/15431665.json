{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354/comments/15431665.json"}, "html": {"href": "#!/osrf/gazebo/issues/354#comment-15431665"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}}, "type": "issue", "id": 354, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques"}, "content": {"raw": "After trying out all the functions, I think their documentation should be something like this:\n\n~~~\n      /// \\brief Apply a force at the link's CoG for one time step.\n      /// \\param[in] _force Force expressed in the world frame.\n      public: virtual void AddForce(const math::Vector3 &_force) = 0;\n\n      /// \\brief Apply a force at the link's CoG for one time step.\n      /// \\param[in] _force Force expressed in the link's frame (not its\n      /// inertial frame).\n      public: virtual void AddRelativeForce(const math::Vector3 &_force) = 0;\n\n      /// \\brief Apply a force at a given position for one time step.\n      /// \\param[in] _force Force expressed in the world frame.\n      /// \\param[in] _pos Position expressed in the world frame.\n      public: virtual void AddForceAtWorldPosition(const math::Vector3 &_force,\n                  const math::Vector3 &_pos) = 0;\n\n      /// \\brief Apply a force at a given position for one time step.\n      /// Note that force and position are expressed in different frames.\n      /// \\param[in] _force Force expressed in the world frame.\n      /// \\param[in] _pos Position expressed in the link's frame (not its\n      /// inertial frame).\n      public: virtual void AddForceAtRelativePosition(\n                  const math::Vector3 &_force,\n                  const math::Vector3 &_relPos) = 0;\n~~~", "markup": "markdown", "html": "<p>After trying out all the functions, I think their documentation should be something like this:</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Apply</span> <span class=\"nt\">a</span> <span class=\"nt\">force</span> <span class=\"nt\">at</span> <span class=\"nt\">the</span> <span class=\"nt\">link</span><span class=\"s1\">&#39;s CoG for one time step.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _force Force expressed in the world frame.</span>\n<span class=\"s1\">      public: virtual void AddForce(const math::Vector3 &amp;_force) = 0;</span>\n\n<span class=\"s1\">      /// \\brief Apply a force at the link&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">CoG</span> <span class=\"nt\">for</span> <span class=\"nt\">one</span> <span class=\"nt\">time</span> <span class=\"nt\">step</span><span class=\"o\">.</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span> <span class=\"nt\">_force</span> <span class=\"nt\">Force</span> <span class=\"nt\">expressed</span> <span class=\"nt\">in</span> <span class=\"nt\">the</span> <span class=\"nt\">link</span><span class=\"s1\">&#39;s frame (not its</span>\n<span class=\"s1\">      /// inertial frame).</span>\n<span class=\"s1\">      public: virtual void AddRelativeForce(const math::Vector3 &amp;_force) = 0;</span>\n\n<span class=\"s1\">      /// \\brief Apply a force at a given position for one time step.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _force Force expressed in the world frame.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _pos Position expressed in the world frame.</span>\n<span class=\"s1\">      public: virtual void AddForceAtWorldPosition(const math::Vector3 &amp;_force,</span>\n<span class=\"s1\">                  const math::Vector3 &amp;_pos) = 0;</span>\n\n<span class=\"s1\">      /// \\brief Apply a force at a given position for one time step.</span>\n<span class=\"s1\">      /// Note that force and position are expressed in different frames.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _force Force expressed in the world frame.</span>\n<span class=\"s1\">      /// \\param</span><span class=\"cp\">[</span><span class=\"k\">in</span><span class=\"cp\">]</span><span class=\"s1\"> _pos Position expressed in the link&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">frame</span> <span class=\"o\">(</span><span class=\"nt\">not</span> <span class=\"nt\">its</span>\n      <span class=\"o\">///</span> <span class=\"nt\">inertial</span> <span class=\"nt\">frame</span><span class=\"o\">).</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">virtual</span> <span class=\"nt\">void</span> <span class=\"nt\">AddForceAtRelativePosition</span><span class=\"o\">(</span>\n                  <span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"nt\">_force</span><span class=\"o\">,</span>\n                  <span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"nt\">_relPos</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-02-03T02:20:36.941309+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2015-02-24T01:42:20.499539+00:00", "type": "issue_comment", "id": 15431665}