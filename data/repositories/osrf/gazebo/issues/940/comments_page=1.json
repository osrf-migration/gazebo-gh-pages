{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9451361.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9451361"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "Just to articulate more on this issue: the SDF format documentation states that a ForceTorque sensor is described in SDF by a <force_torque> tag [1], that has an optional <frame> tag. This <frame> tag has \"parent\" as a default value (so it is reasonable to suppose that the other possible value for it is \"child\"). \n\nApparently this frame tag is not taken into account in the ForceTorqueSensor [2], that simply returns the body2force/torque elements of the JointWrench object returned by GetForceTorque(). From the JointWrench [3] documentation apparently  this body2force/torque is expressed in the joint Frame, while in GetForceTorque() documentation [4]  it appears that it is the ForceTorque applied by the body2 on body1 expressed in the child Frame. It is also not clear to me the point with respect to which the torque is expressed, but I assume that this point is the joint origin.\n\nI can commit time to fix this issue (and prepare a regression test) as soon as the semantics of the <force_torque> tag (and relative <frame>) and of GetForceTorque() method are clarified. \n\n[1] : http://gazebosim.org/sdf/dev.html#force_torque354 \n\n[2] : #!/osrf/gazebo/src/default/gazebo/sensors/ForceTorqueSensor.cc\n\n[3] : http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1JointWrench.html\n\n[4] : http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1Joint.html#a924807d32ef42bd741911ff33e7f3d53", "markup": "markdown", "html": "<p>Just to articulate more on this issue: the SDF format documentation states that a ForceTorque sensor is described in SDF by a &lt;force_torque&gt; tag [1], that has an optional &lt;frame&gt; tag. This &lt;frame&gt; tag has \"parent\" as a default value (so it is reasonable to suppose that the other possible value for it is \"child\"). </p>\n<p>Apparently this frame tag is not taken into account in the ForceTorqueSensor [2], that simply returns the body2force/torque elements of the JointWrench object returned by GetForceTorque(). From the JointWrench [3] documentation apparently  this body2force/torque is expressed in the joint Frame, while in GetForceTorque() documentation [4]  it appears that it is the ForceTorque applied by the body2 on body1 expressed in the child Frame. It is also not clear to me the point with respect to which the torque is expressed, but I assume that this point is the joint origin.</p>\n<p>I can commit time to fix this issue (and prepare a regression test) as soon as the semantics of the &lt;force_torque&gt; tag (and relative &lt;frame&gt;) and of GetForceTorque() method are clarified. </p>\n<p>[1] : <a href=\"http://gazebosim.org/sdf/dev.html#force_torque354\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/sdf/dev.html#force_torque354</a> </p>\n<p>[2] : <a href=\"#!/osrf/gazebo/src/default/gazebo/sensors/ForceTorqueSensor.cc\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/default/gazebo/sensors/ForceTorqueSensor.cc</a></p>\n<p>[3] : <a href=\"http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1JointWrench.html\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1JointWrench.html</a></p>\n<p>[4] : <a href=\"http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1Joint.html#a924807d32ef42bd741911ff33e7f3d53\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1Joint.html#a924807d32ef42bd741911ff33e7f3d53</a></p>", "type": "rendered"}, "created_on": "2014-04-02T14:53:48.605360+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2014-04-02T22:52:46.701292+00:00", "type": "issue_comment", "id": 9451361}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9455310.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9455310"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "Indeed, the `<frame>` tag is not used.\n\nThe `<force_torque>` is used to instantiate a `ForceTorqueSensor`. The `<frame>` tag should indicate the frame in which the force is reported. The frame should the name of a link. If blank, the frame should be the link that contains the sensor.", "markup": "markdown", "html": "<p>Indeed, the <code>&lt;frame&gt;</code> tag is not used.</p>\n<p>The <code>&lt;force_torque&gt;</code> is used to instantiate a <code>ForceTorqueSensor</code>. The <code>&lt;frame&gt;</code> tag should indicate the frame in which the force is reported. The frame should the name of a link. If blank, the frame should be the link that contains the sensor.</p>", "type": "rendered"}, "created_on": "2014-04-02T18:42:47.303878+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 9455310}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9463459.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9463459"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "Thanks for the reply.\n\nGiven that the `ForceTorqueSensor` belongs to a `Joint`, I guess that by \"link that contains the sensor\" you mean the parent link of the joint that contains the sensor. This  would be coherent with the current `<frame>` SDF documentation, reading \"Default: parent\" as \"Default: the name of the parent link\".  \n\nTo completely define a real 6-axis Force Torque sensor, assuming that a link frame is appropriately placed to match the sensor orientation, two additional information are needed:\n\n* The point with respect to which the torque is expressed. I assume that this point can be hardcoded to be the joint origin, considering how real sensor works and that they can be simulated in Gazebo with a \"fake\" fixed joint (a revolute joint with zero max and min limits).\n\n* The direction of the wrench, i.e. if it is the one applied by the first body on the second body or the one applied by the second body on the first body. To ensure complete flexibility this would be ideally defined by an additional SDF tag, but I guess that this would require a modification on the SDF format and so it would complicate things. ", "markup": "markdown", "html": "<p>Thanks for the reply.</p>\n<p>Given that the <code>ForceTorqueSensor</code> belongs to a <code>Joint</code>, I guess that by \"link that contains the sensor\" you mean the parent link of the joint that contains the sensor. This  would be coherent with the current <code>&lt;frame&gt;</code> SDF documentation, reading \"Default: parent\" as \"Default: the name of the parent link\".  </p>\n<p>To completely define a real 6-axis Force Torque sensor, assuming that a link frame is appropriately placed to match the sensor orientation, two additional information are needed:</p>\n<ul>\n<li>\n<p>The point with respect to which the torque is expressed. I assume that this point can be hardcoded to be the joint origin, considering how real sensor works and that they can be simulated in Gazebo with a \"fake\" fixed joint (a revolute joint with zero max and min limits).</p>\n</li>\n<li>\n<p>The direction of the wrench, i.e. if it is the one applied by the first body on the second body or the one applied by the second body on the first body. To ensure complete flexibility this would be ideally defined by an additional SDF tag, but I guess that this would require a modification on the SDF format and so it would complicate things. </p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2014-04-03T08:05:06.667109+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": null, "type": "issue_comment", "id": 9463459}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9473056.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9473056"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "Thanks for the correction, the ForceTorque sensor is a child of `Joint`, and `frame` should be the frame (child or parent) in which the wrench values are reported. \n\nYou are also correct about the point about which the torque is expressed. The joint origin is the assumed point. \n\nYour last bullet point would require another SDF tag. It's easy to add a tag. Do you have a suggestion for a name?\n\nTo recap, we have:\n\n1. `<force_torque>` : Creates a force-torque sensor located at the origin of the joint to which the sensor is attached.\n\n1. `<frame>` : The frame in which the wrench values should be reported. Currently we are sending back values in the child-link frame.\n\n1. `<applied_link>` : This is my placeholder for the new SDF tag which specifies which link the wrench values are referring to.", "markup": "markdown", "html": "<p>Thanks for the correction, the ForceTorque sensor is a child of <code>Joint</code>, and <code>frame</code> should be the frame (child or parent) in which the wrench values are reported. </p>\n<p>You are also correct about the point about which the torque is expressed. The joint origin is the assumed point. </p>\n<p>Your last bullet point would require another SDF tag. It's easy to add a tag. Do you have a suggestion for a name?</p>\n<p>To recap, we have:</p>\n<ol>\n<li>\n<p><code>&lt;force_torque&gt;</code> : Creates a force-torque sensor located at the origin of the joint to which the sensor is attached.</p>\n</li>\n<li>\n<p><code>&lt;frame&gt;</code> : The frame in which the wrench values should be reported. Currently we are sending back values in the child-link frame.</p>\n</li>\n<li>\n<p><code>&lt;applied_link&gt;</code> : This is my placeholder for the new SDF tag which specifies which link the wrench values are referring to.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2014-04-03T15:20:23.341839+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 9473056}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9477411.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9477411"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "To me, it makes the most sense to use the `<sensor><pose>` tag as an offset and rotation relative to the joint frame (which is relative to the child link). That wouldn't require any custom tags, though it's less flexible. By default it could return the values applied to to the child.", "markup": "markdown", "html": "<p>To me, it makes the most sense to use the <code>&lt;sensor&gt;&lt;pose&gt;</code> tag as an offset and rotation relative to the joint frame (which is relative to the child link). That wouldn't require any custom tags, though it's less flexible. By default it could return the values applied to to the child.</p>", "type": "rendered"}, "created_on": "2014-04-03T18:07:58.099300+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 9477411}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9479720.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9479720"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "Could you explain the use of `<sensor><pose>` in this context more. We need a way to specify which link the wrench value refers to and in what frame they should be reported. ", "markup": "markdown", "html": "<p>Could you explain the use of <code>&lt;sensor&gt;&lt;pose&gt;</code> in this context more. We need a way to specify which link the wrench value refers to and in what frame they should be reported. </p>", "type": "rendered"}, "created_on": "2014-04-03T20:48:27.546101+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 9479720}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9480980.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9480980"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "Typically the `<sensor><pose>` is interpreted as a pose offset from the parent, which in this case is the joint. Here's a summary of the hierarchy of pose offsets to define this frame:\n~~~\n<model ...><pose>...</pose>\n  <link name='child'><pose>...</pose>\n  <joint ...><pose>...</pose>\n    <sensor type='force_torque'><pose>\u2026</pose>\nmodel -> child link -> joint -> sensor\n~~~\nAs an initial implementation, I would say we should express the wrench on the child link and in a frame offset from the joint frame.\n\nI think that's the simplest and most consistent approach that doesn't involve any new parameters. I would try implementing that first and see if it's sufficient, and add new parameters if there's a compelling reason to do so.", "markup": "markdown", "html": "<p>Typically the <code>&lt;sensor&gt;&lt;pose&gt;</code> is interpreted as a pose offset from the parent, which in this case is the joint. Here's a summary of the hierarchy of pose offsets to define this frame:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"err\">...</span><span class=\"nt\">&gt;&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&#39;child&#39;</span><span class=\"nt\">&gt;&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"err\">...</span><span class=\"nt\">&gt;&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;sensor</span> <span class=\"na\">type=</span><span class=\"s\">&#39;force_torque&#39;</span><span class=\"nt\">&gt;&lt;pose&gt;</span>\u2026<span class=\"nt\">&lt;/pose&gt;</span>\nmodel -&gt; child link -&gt; joint -&gt; sensor\n</pre></div>\n\n\n<p>As an initial implementation, I would say we should express the wrench on the child link and in a frame offset from the joint frame.</p>\n<p>I think that's the simplest and most consistent approach that doesn't involve any new parameters. I would try implementing that first and see if it's sufficient, and add new parameters if there's a compelling reason to do so.</p>", "type": "rendered"}, "created_on": "2014-04-03T22:39:47.163941+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 9480980}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9481158.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9481158"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "I think I like the `<pose>` tag suggested by @scpeters. Normally, a strain gauge is mounted with some pose offset from actual joint location, which should map well to this notation.  As @nkoenig mentioned, we can then offer some options (or specify them in our documentation):\n\n  - `<applied_link>`: Which link is the force torque sensor physically mounted on? (parent or child link of the joint?)\n  - specify what sign convention to use.  We could simply mention this in doxygen (e.g. if compression force is measured along the x-axis of the sensor frame, is the x-force component sensor readout positive or negative?).\n\n~~~\n<model ...><pose>...</pose>\n  <link name='child'><pose>...</pose>\n  <joint ...><pose>...</pose>\n    <sensor type='force_torque'><pose>\u2026</pose><attached_link>[parent|child]</attached_link>\nmodel -> child link -> joint -> sensor\n~~~", "markup": "markdown", "html": "<p>I think I like the <code>&lt;pose&gt;</code> tag suggested by @scpeters. Normally, a strain gauge is mounted with some pose offset from actual joint location, which should map well to this notation.  As @nkoenig mentioned, we can then offer some options (or specify them in our documentation):</p>\n<ul>\n<li><code>&lt;applied_link&gt;</code>: Which link is the force torque sensor physically mounted on? (parent or child link of the joint?)</li>\n<li>specify what sign convention to use.  We could simply mention this in doxygen (e.g. if compression force is measured along the x-axis of the sensor frame, is the x-force component sensor readout positive or negative?).</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"err\">...</span><span class=\"nt\">&gt;&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&#39;child&#39;</span><span class=\"nt\">&gt;&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"err\">...</span><span class=\"nt\">&gt;&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;sensor</span> <span class=\"na\">type=</span><span class=\"s\">&#39;force_torque&#39;</span><span class=\"nt\">&gt;&lt;pose&gt;</span>\u2026<span class=\"nt\">&lt;/pose&gt;&lt;attached_link&gt;</span>[parent|child]<span class=\"nt\">&lt;/attached_link&gt;</span>\nmodel -&gt; child link -&gt; joint -&gt; sensor\n</pre></div>", "type": "rendered"}, "created_on": "2014-04-03T23:02:14.042108+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 9481158}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9485945.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9485945"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "I'll try to argue why having a parameter describing the direction of the force/torque is really handy in real use cases. \n\nThe use case I was thinking of is not the simulation of Joint Torque sensors (i.e. strain gauges mounted on a link near to a joint), but simulation of 6-axis Force/Torque (FT) sensors mounted in the middle of a link.\n\nConsider for example the case of this FT sensor mounted in the middle of the end/effector link of an industrial robot (a typical setup for force control):\n![Comau Smart S2_02.jpg](data/bitbucket.org/repo/jgXqbo/images/3691870360-Comau_Smart_S2_02.jpg)\n\nTo properly simulate this setup, we have to describe the 6-axis F/T sensor as a fixed joint (i.e. in gazebo a revolute joint with 0 max and min limits). The direction of the measured force/torque depends on internal F/T sensor configuration and on how the F/T sensor is mounted on the robot, but it is safe to assume that this cannot be changed on the real robot (for example for backward compatibility with existing software).\n\nIf is not possible to specify Force/Torque direction in the SDF sensor description, it is then necessary to account for this real/simulation mismatch in the middleware interface (if any) or user software. This is not convenient because it is then impossible to test exactly the same software in simulation and on the real robot. \n\nFurthermore this will make the SDF an incomplete description of the robot, that requires additional information to properly describe the real world robot. ", "markup": "markdown", "html": "<p>I'll try to argue why having a parameter describing the direction of the force/torque is really handy in real use cases. </p>\n<p>The use case I was thinking of is not the simulation of Joint Torque sensors (i.e. strain gauges mounted on a link near to a joint), but simulation of 6-axis Force/Torque (FT) sensors mounted in the middle of a link.</p>\n<p>Consider for example the case of this FT sensor mounted in the middle of the end/effector link of an industrial robot (a typical setup for force control):\n<img alt=\"Comau Smart S2_02.jpg\" src=\"data/bitbucket.org/repo/jgXqbo/images/3691870360-Comau_Smart_S2_02.jpg\" /></p>\n<p>To properly simulate this setup, we have to describe the 6-axis F/T sensor as a fixed joint (i.e. in gazebo a revolute joint with 0 max and min limits). The direction of the measured force/torque depends on internal F/T sensor configuration and on how the F/T sensor is mounted on the robot, but it is safe to assume that this cannot be changed on the real robot (for example for backward compatibility with existing software).</p>\n<p>If is not possible to specify Force/Torque direction in the SDF sensor description, it is then necessary to account for this real/simulation mismatch in the middleware interface (if any) or user software. This is not convenient because it is then impossible to test exactly the same software in simulation and on the real robot. </p>\n<p>Furthermore this will make the SDF an incomplete description of the robot, that requires additional information to properly describe the real world robot. </p>", "type": "rendered"}, "created_on": "2014-04-04T08:09:06.830020+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2014-04-04T08:18:14.211931+00:00", "type": "issue_comment", "id": 9485945}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9491425.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9491425"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "@scpeters Your suggestion would only move the frame of the force-torque sensor, it would not specify the `applied_link` which is necessary for a complete description.\n\n@traversaro , can you suggest SDF tags that you'd like to add or remove?", "markup": "markdown", "html": "<p>@scpeters Your suggestion would only move the frame of the force-torque sensor, it would not specify the <code>applied_link</code> which is necessary for a complete description.</p>\n<p>@traversaro , can you suggest SDF tags that you'd like to add or remove?</p>", "type": "rendered"}, "created_on": "2014-04-04T13:39:56.056076+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 9491425}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9491760.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9491760"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "I suggest to name the additional child tag `<direction>` instead of `<applied_link>`.\n\n A more verbose alternative could be `<measure_direction>`.\n\nIts value must be one of the following: \n   \n `parent_to_child` if the measured force torque is the one applied by parent on the child ,\n  \n `child_to_parent` if the measured force torque is the one applied by the child on the parent  .", "markup": "markdown", "html": "<p>I suggest to name the additional child tag <code>&lt;direction&gt;</code> instead of <code>&lt;applied_link&gt;</code>.</p>\n<p>A more verbose alternative could be <code>&lt;measure_direction&gt;</code>.</p>\n<p>Its value must be one of the following: </p>\n<p><code>parent_to_child</code> if the measured force torque is the one applied by parent on the child ,</p>\n<p><code>child_to_parent</code> if the measured force torque is the one applied by the child on the parent  .</p>", "type": "rendered"}, "created_on": "2014-04-04T13:59:34.999487+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": null, "type": "issue_comment", "id": 9491760}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9495519.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9495519"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "@traversaro Thanks for the detailed explanation. I had been thinking that you could switch the parent/child relationship of the joint to change the directionality of the sensor, but that's not a good idea now that I think about it.\n\nI like `parent_to_child` and `child_to_parent`.", "markup": "markdown", "html": "<p>@traversaro Thanks for the detailed explanation. I had been thinking that you could switch the parent/child relationship of the joint to change the directionality of the sensor, but that's not a good idea now that I think about it.</p>\n<p>I like <code>parent_to_child</code> and <code>child_to_parent</code>.</p>", "type": "rendered"}, "created_on": "2014-04-04T17:59:19.770888+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 9495519}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9598419.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9598419"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "@scpeters yes, requiring to invert the joint to change the direction of the sensor would be quite tedious to do if you import the model from urdf (that is a requirement for us because our inertial parameter identification software outputs its results in a urdf model). \n\nI did a first try on solving this issue in my branch issue_940: https://bitbucket.org/traversaro/gazebo/commits/branch/issue_940 (measure_direction support is commented out because it need a change in sdformat).\n\nI prepared a test under `test/regression/940_force_torque_sensor_frame` that checks the returned values for various f/t sensors placed between two (fixed) stacked cylinders (and also between the cylinders and the torques as an additional test), and compare the obtained measure against analytically obtained values.  \nThe only physics engine that consistently pass the test is `ode`. All the other engines have issues:\n\n* `bullet` normally passes the test, but randomly it measures some crazy torque when it is expected to measure zero torque (this behavior is apparently independent from the number of simulation steps I do before checking the measure).  Could be related to #!/osrf/gazebo/issue/619 ?\n* `simbody` measure is simply broken. \n* `dart` report the correct measure, but It fails because it expresses some of the wrenches returned by method GetForceTorque in the wrong frame. \n\nThe output of a test run when bullet fails : http://pastebin.com/raw.php?i=dZNZT2Fs\n\nThe output of a test run when bullet succeeds : http://pastebin.com/raw.php?i=bNvpy14s ", "markup": "markdown", "html": "<p>@scpeters yes, requiring to invert the joint to change the direction of the sensor would be quite tedious to do if you import the model from urdf (that is a requirement for us because our inertial parameter identification software outputs its results in a urdf model). </p>\n<p>I did a first try on solving this issue in my branch issue_940: <a href=\"https://bitbucket.org/traversaro/gazebo/commits/branch/issue_940\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/traversaro/gazebo/commits/branch/issue_940</a> (measure_direction support is commented out because it need a change in sdformat).</p>\n<p>I prepared a test under <code>test/regression/940_force_torque_sensor_frame</code> that checks the returned values for various f/t sensors placed between two (fixed) stacked cylinders (and also between the cylinders and the torques as an additional test), and compare the obtained measure against analytically obtained values.<br />\nThe only physics engine that consistently pass the test is <code>ode</code>. All the other engines have issues:</p>\n<ul>\n<li><code>bullet</code> normally passes the test, but randomly it measures some crazy torque when it is expected to measure zero torque (this behavior is apparently independent from the number of simulation steps I do before checking the measure).  Could be related to <a href=\"#!/osrf/gazebo/issue/619\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issue/619</a> ?</li>\n<li><code>simbody</code> measure is simply broken. </li>\n<li><code>dart</code> report the correct measure, but It fails because it expresses some of the wrenches returned by method GetForceTorque in the wrong frame. </li>\n</ul>\n<p>The output of a test run when bullet fails : <a href=\"http://pastebin.com/raw.php?i=dZNZT2Fs\" rel=\"nofollow\" class=\"ap-connect-link\">http://pastebin.com/raw.php?i=dZNZT2Fs</a></p>\n<p>The output of a test run when bullet succeeds : <a href=\"http://pastebin.com/raw.php?i=bNvpy14s\" rel=\"nofollow\" class=\"ap-connect-link\">http://pastebin.com/raw.php?i=bNvpy14s</a> </p>", "type": "rendered"}, "created_on": "2014-04-10T10:45:45.322243+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2014-04-11T11:46:12.603737+00:00", "type": "issue_comment", "id": 9598419}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9751894.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9751894"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "I have created an initial couple of PRs both for [sdformat](https://bitbucket.org/osrf/sdformat/pull-request/98/add-new-tag-measure_direction-to/diff) and [gazebo](https://bitbucket.org/osrf/sdformat/pull-request/98/add-new-tag-measure_direction-to/diff). \nThere are still a couple of issues:\n\n* The test fails for `bullet`, `simbody` and `dart`. This is related to a bug in `GetForceTorque()` implementation in this physics engines, so I guess I can open different issues for tracking this different problems. In the meanwhile I can disable tests for this physics engines. \n* The sensor `pose` tag is completely ignored, and this may be counterintuitive compared with the behavior of other sensors. A possible solution could be to add a `sensor` option to the `frame` tag, but in this case only the rotational part of the `pose` tag would be considered. ", "markup": "markdown", "html": "<p>I have created an initial couple of PRs both for <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-request/98/add-new-tag-measure_direction-to/diff\" rel=\"nofollow\">sdformat</a> and <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-request/98/add-new-tag-measure_direction-to/diff\" rel=\"nofollow\">gazebo</a>. \nThere are still a couple of issues:</p>\n<ul>\n<li>The test fails for <code>bullet</code>, <code>simbody</code> and <code>dart</code>. This is related to a bug in <code>GetForceTorque()</code> implementation in this physics engines, so I guess I can open different issues for tracking this different problems. In the meanwhile I can disable tests for this physics engines. </li>\n<li>The sensor <code>pose</code> tag is completely ignored, and this may be counterintuitive compared with the behavior of other sensors. A possible solution could be to add a <code>sensor</code> option to the <code>frame</code> tag, but in this case only the rotational part of the <code>pose</code> tag would be considered. </li>\n</ul>", "type": "rendered"}, "created_on": "2014-04-20T20:54:28.452318+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2014-05-02T23:11:20.748474+00:00", "type": "issue_comment", "id": 9751894}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9961574.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9961574"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "There seems to be a race condition in bullet that causes it to pass / fail different parts of the test randomly. The simbody and dart failures appear consistent, probably related to incorrect reference frames.\n\n~~I think we should use the sensor `pose` tag as an offset from whichever frame is specified in the `frame` tag.~~ Actually, instead of having an option to use the `joint` frame, it could be called the `sensor` frame, and use the joint frame plus the sensor pose offset. I can write a patch for what this suggestion would look like.", "markup": "markdown", "html": "<p>There seems to be a race condition in bullet that causes it to pass / fail different parts of the test randomly. The simbody and dart failures appear consistent, probably related to incorrect reference frames.</p>\n<p><del>I think we should use the sensor <code>pose</code> tag as an offset from whichever frame is specified in the <code>frame</code> tag.</del> Actually, instead of having an option to use the <code>joint</code> frame, it could be called the <code>sensor</code> frame, and use the joint frame plus the sensor pose offset. I can write a patch for what this suggestion would look like.</p>", "type": "rendered"}, "created_on": "2014-05-03T08:54:13.555505+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-05-03T10:16:38.227539+00:00", "type": "issue_comment", "id": 9961574}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/9962055.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-9962055"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "In this case we have to update also the semantics of `pose` tag for a `sensor`: \nhttps://bitbucket.org/osrf/sdformat/src/049841be931a197717837930295102d33f8896a0/sdf/1.5/sensor.sdf?at=default#cl-26 \n\nApparently it is considering only link sensor, not joint sensors as the `force_torque`.\n\nWe have to mention that for joint sensors the sensor pose is relative to the joint frame, not to the parent link frame.", "markup": "markdown", "html": "<p>In this case we have to update also the semantics of <code>pose</code> tag for a <code>sensor</code>: \n<a href=\"https://bitbucket.org/osrf/sdformat/src/049841be931a197717837930295102d33f8896a0/sdf/1.5/sensor.sdf?at=default#cl-26\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/sdformat/src/049841be931a197717837930295102d33f8896a0/sdf/1.5/sensor.sdf?at=default#cl-26</a> </p>\n<p>Apparently it is considering only link sensor, not joint sensors as the <code>force_torque</code>.</p>\n<p>We have to mention that for joint sensors the sensor pose is relative to the joint frame, not to the parent link frame.</p>", "type": "rendered"}, "created_on": "2014-05-03T10:26:56.718074+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2014-05-03T10:28:34.842499+00:00", "type": "issue_comment", "id": 9962055}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/10088553.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-10088553"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": "Given that the two pull requests  (https://bitbucket.org/osrf/sdformat/pull-request/98/add-new-tag-measure_direction-to/diff and #!/osrf/gazebo/pull-request/1076/add-proper-flexibility-to-force_torque) to solve this issue have been merged I guess we can close this issue. \n\nIn the next days I will open new issues to track the bugs in `bullet`, `dart` and `simbody` GetForceTorque() implementation.\n\nI forgot I was not the original author of the issue. @arocchi the issue was solved, can you close it? ", "markup": "markdown", "html": "<p>Given that the two pull requests  (<a href=\"https://bitbucket.org/osrf/sdformat/pull-request/98/add-new-tag-measure_direction-to/diff\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/sdformat/pull-request/98/add-new-tag-measure_direction-to/diff</a> and <a href=\"#!/osrf/gazebo/pull-request/1076/add-proper-flexibility-to-force_torque\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-request/1076/add-proper-flexibility-to-force_torque</a>) to solve this issue have been merged I guess we can close this issue. </p>\n<p>In the next days I will open new issues to track the bugs in <code>bullet</code>, <code>dart</code> and <code>simbody</code> GetForceTorque() implementation.</p>\n<p>I forgot I was not the original author of the issue. @arocchi the issue was solved, can you close it? </p>", "type": "rendered"}, "created_on": "2014-05-11T10:50:25.586234+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2014-05-11T10:51:56.638214+00:00", "type": "issue_comment", "id": 10088553}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/10393889.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-10393889"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2014-05-27T14:13:16.173734+00:00", "user": {"display_name": "Alessio Rocchi", "uuid": "{d597d726-c2d2-487d-bc60-06813662c9d5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd597d726-c2d2-487d-bc60-06813662c9d5%7D"}, "html": {"href": "https://bitbucket.org/%7Bd597d726-c2d2-487d-bc60-06813662c9d5%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dfd926e0367cc369c7ba2fb83e64c5f9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAR-0.png"}}, "nickname": "arocchi", "type": "user", "account_id": "557058:3d4f7312-dfac-4061-90d0-d367a522a3d4"}, "updated_on": null, "type": "issue_comment", "id": 10393889}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940/comments/30611918.json"}, "html": {"href": "#!/osrf/gazebo/issues/940#comment-30611918"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/940.json"}}, "type": "issue", "id": 940, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Force Torque sensor (ForceTorqueSensor.cc) does not take into account sensor pose"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:43:22.764972+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30611918}], "page": 1, "size": 19}