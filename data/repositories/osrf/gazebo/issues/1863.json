{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1863/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1863.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1863/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1863/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1863/flaky-unit_camerasensor_test-seg-fault"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1863/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Flaky UNIT_CameraSensor_TEST seg-fault", "component": {"name": "sensors", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122877.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I've seen some flakiness in `UNIT_CameraSensor_TEST` in overnight testing of the default branch and have gotten repeatable backtraces. The flakiness may be present in the `gazebo7` branch as well.\r\n\r\nConsole output:\r\n\r\n~~~\r\n$ gazebo/sensors/UNIT_CameraSensor_TEST \r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from CameraSensor_TEST\r\n[ RUN      ] CameraSensor_TEST.CreateCamera\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 172.23.2.91\r\n[Err] [Scene.cc:2927] Light [sun] not found. Use topic ~/factory/light to spawn a new light.\r\n[Dbg] [ServerFixture.cc:200] ServerFixture load in 1 seconds, timeout after 600 seconds\r\nSegmentation fault (core dumped)\r\n~~~\r\n\r\nThe backtrace show the seg-fault occuring at [SensorManager.cc:697](#!/osrf/gazebo/src/9569d26d280c2b01ff670497211fee28211b161e/gazebo/sensors/SensorManager.cc?at=default&fileviewer=file-view-default#SensorManager.cc-697) when it calls `event::Events::render();`.\r\n\r\n~~~\r\n(gdb) bt\r\n#0  0x0000000000000000 in ?? ()\r\n#1  0x00007f7d52341195 in operator() (this=<optimized out>) at /usr/include/boost/function/function_template.hpp:767\r\n#2  gazebo::event::EventT<void ()>::Signal() (this=0x7f7d512bc7e0 <gazebo::event::Events::render>)\r\n    at gazebo/common/Event.hh:365\r\n#3  0x00007f7d523459d3 in operator() (this=<optimized out>) at gazebo/common/Event.hh:209\r\n#4  gazebo::sensors::SensorManager::ImageSensorContainer::Update (this=0x7f7d282f4c30, _force=<optimized out>)\r\n    at gazebo/sensors/SensorManager.cc:697\r\n#5  0x00007f7d523461cf in gazebo::sensors::SensorManager::Update (this=0x672da0 <SingletonT<gazebo::sensors::SensorManager>::GetInstance()::t>, \r\n    _force=<optimized out>) at gazebo/sensors/SensorManager.cc:171\r\n#6  0x00007f7d525b60a7 in gazebo::Server::Run (this=0x7f7d28000920) at gazebo/Server.cc:562\r\n#7  0x0000000000414ec6 in gazebo::ServerFixture::RunServer (this=0x15f9230, _args=...)\r\n    at gazebo/test/ServerFixture.cc:270\r\n#8  0x00007f7d505c3a4a in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\r\n#9  0x00007f7d51b5b182 in start_thread (arg=0x7f7d2ed28700) at pthread_create.c:312\r\n#10 0x00007f7d4f6b347d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n(gdb)\r\n~~~\r\n\r\nIn two cases, the seg-fault occurs when the main testing thread is at [CameraSensor_TEST.cc:40](#!/osrf/gazebo/src/9569d26d280c2b01ff670497211fee28211b161e/gazebo/sensors/CameraSensor_TEST.cc?at=default&fileviewer=file-view-default#CameraSensor_TEST.cc-40). The strange thing is that this line is calling `GetSensor` and then casting it to a `CameraSensor`, but the backtrace shows a `~CameraSensor` destructor being called. That doesn't make sense to me.\r\n\r\n~~~\r\nThread 18 (Thread 0x7f7d52974880 (LWP 18077)):\r\n#0  boost::detail::sp_counted_impl_p<gazebo::transport::Publisher>::dispose (this=0x7f7d28e6ed40)\r\n    at /usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78\r\n#1  0x00007f7d516ee90e in boost::detail::sp_counted_base::release (this=0x7f7d28e6ed40)\r\n    at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\r\n#2  0x00007f7d5170ea0c in ~shared_count (this=0x7f7d28e6e948, __in_chrg=<optimized out>) at /usr/include/boost/smart_ptr/detail/shared_count.hpp:371\r\n#3  ~shared_ptr (this=0x7f7d28e6e940, __in_chrg=<optimized out>) at /usr/include/boost/smart_ptr/shared_ptr.hpp:328\r\n#4  _Destroy<boost::shared_ptr<gazebo::transport::Publisher> > (__pointer=0x7f7d28e6e940) at /usr/include/c++/4.8/bits/stl_construct.h:93\r\n#5  __destroy<boost::shared_ptr<gazebo::transport::Publisher>*> (__last=<optimized out>, __first=0x7f7d28e6e940)\r\n    at /usr/include/c++/4.8/bits/stl_construct.h:103\r\n#6  _Destroy<boost::shared_ptr<gazebo::transport::Publisher>*> (__last=<optimized out>, __first=<optimized out>)\r\n    at /usr/include/c++/4.8/bits/stl_construct.h:126\r\n#7  _Destroy<boost::shared_ptr<gazebo::transport::Publisher>*, boost::shared_ptr<gazebo::transport::Publisher> > (__last=0x7f7d28e6e950, \r\n    __first=0x7f7d28e6e930) at /usr/include/c++/4.8/bits/stl_construct.h:151\r\n#8  _M_erase_at_end (this=<optimized out>, __pos=0x7f7d28e6e930) at /usr/include/c++/4.8/bits/stl_vector.h:1352\r\n#9  clear (this=0x7f7d28dce9f0) at /usr/include/c++/4.8/bits/stl_vector.h:1126\r\n#10 gazebo::transport::Node::Fini (this=0x7f7d28dce9d0) at gazebo/transport/Node.cc:70\r\n#11 0x00007f7d5233f46e in gazebo::sensors::Sensor::~Sensor (this=0x7f7d28eb68c0, __in_chrg=<optimized out>)\r\n    at gazebo/sensors/Sensor.cc:78\r\n#12 0x00007f7d5230b419 in gazebo::sensors::CameraSensor::~CameraSensor (this=0x7f7d28eb68c0, __in_chrg=<optimized out>)\r\n    at gazebo/sensors/CameraSensor.cc:64\r\n#13 0x00000000004135b9 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x7f7d28e37fe0)\r\n    at /usr/include/c++/4.8/bits/shared_ptr_base.h:144\r\n#14 0x0000000000411b84 in ~__shared_count (this=<synthetic pointer>, __in_chrg=<optimized out>) at /usr/include/c++/4.8/bits/shared_ptr_base.h:546\r\n#15 ~__shared_ptr (this=<synthetic pointer>, __in_chrg=<optimized out>) at /usr/include/c++/4.8/bits/shared_ptr_base.h:781\r\n#16 ~shared_ptr (this=<synthetic pointer>, __in_chrg=<optimized out>) at /usr/include/c++/4.8/bits/shared_ptr.h:93\r\n#17 CameraSensor_TEST_CreateCamera_Test::TestBody (this=<optimized out>)\r\n    at gazebo/sensors/CameraSensor_TEST.cc:40\r\n#18 0x0000000000450963 in HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x45904f \"the test body\", method=<optimized out>, \r\n    object=<optimized out>) at test/gtest/src/gtest.cc:2079\r\n#19 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object@entry=0x15f9230, method=<optimized out>, \r\n    location=location@entry=0x45904f \"the test body\") at test/gtest/src/gtest.cc:2115\r\n#20 0x0000000000443577 in testing::Test::Run (this=this@entry=0x15f9230)\r\n    at test/gtest/src/gtest.cc:2152\r\n#21 0x0000000000443616 in testing::TestInfo::Run (this=0x15f7e60) at test/gtest/src/gtest.cc:2327\r\n#22 0x000000000044371d in testing::TestCase::Run (this=0x15f82b0) at test/gtest/src/gtest.cc:2445\r\n#23 0x00000000004439ad in testing::internal::UnitTestImpl::RunAllTests (this=0x15f7f20)\r\n    at test/gtest/src/gtest.cc:4316\r\n#24 0x0000000000443cae in HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=<optimized out>, \r\n    method=<optimized out>, object=<optimized out>) at test/gtest/src/gtest.cc:2079\r\n#25 HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (\r\n    location=0x45a598 \"auxiliary test code (environments or event listeners)\", \r\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x443790 <testing::internal::UnitTestImpl::RunAllTests()>, object=0x15f7f20) at test/gtest/src/gtest.cc:2115\r\n#26 testing::UnitTest::Run (this=<optimized out>) at test/gtest/src/gtest.cc:3930\r\n#27 0x000000000040f9df in RUN_ALL_TESTS () at test/gtest/include/gtest/gtest.h:2288\r\n#28 main (argc=1, argv=<optimized out>) at gazebo/sensors/CameraSensor_TEST.cc:85\r\n~~~", "markup": "markdown", "html": "<p>I've seen some flakiness in <code>UNIT_CameraSensor_TEST</code> in overnight testing of the default branch and have gotten repeatable backtraces. The flakiness may be present in the <code>gazebo7</code> branch as well.</p>\n<p>Console output:</p>\n<div class=\"codehilite\"><pre><span></span>$ gazebo/sensors/UNIT_CameraSensor_TEST \n<span class=\"o\">[==========]</span> Running <span class=\"m\">1</span> <span class=\"nb\">test</span> from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">1</span> <span class=\"nb\">test</span> from CameraSensor_TEST\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> CameraSensor_TEST.CreateCamera\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">172</span>.23.2.91\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>Scene.cc:2927<span class=\"o\">]</span> Light <span class=\"o\">[</span>sun<span class=\"o\">]</span> not found. Use topic ~/factory/light to spawn a new light.\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:200<span class=\"o\">]</span> ServerFixture load in <span class=\"m\">1</span> seconds, timeout after <span class=\"m\">600</span> seconds\nSegmentation fault <span class=\"o\">(</span>core dumped<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>The backtrace show the seg-fault occuring at <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/9569d26d280c2b01ff670497211fee28211b161e/gazebo/sensors/SensorManager.cc?at=default&amp;fileviewer=file-view-default#SensorManager.cc-697\" rel=\"nofollow\">SensorManager.cc:697</a> when it calls <code>event::Events::render();</code>.</p>\n<div class=\"codehilite\"><pre><span></span>(gdb) bt\n#0  0x0000000000000000 in ?? ()\n#1  0x00007f7d52341195 in operator() (this=&lt;optimized out&gt;) at /usr/include/boost/function/function_template.hpp:767\n#2  gazebo::event::EventT&lt;void ()&gt;::Signal() (this=0x7f7d512bc7e0 &lt;gazebo::event::Events::render&gt;)\n    at gazebo/common/Event.hh:365\n#3  0x00007f7d523459d3 in operator() (this=&lt;optimized out&gt;) at gazebo/common/Event.hh:209\n#4  gazebo::sensors::SensorManager::ImageSensorContainer::Update (this=0x7f7d282f4c30, _force=&lt;optimized out&gt;)\n    at gazebo/sensors/SensorManager.cc:697\n#5  0x00007f7d523461cf in gazebo::sensors::SensorManager::Update (this=0x672da0 &lt;SingletonT&lt;gazebo::sensors::SensorManager&gt;::GetInstance()::t&gt;, \n    _force=&lt;optimized out&gt;) at gazebo/sensors/SensorManager.cc:171\n#6  0x00007f7d525b60a7 in gazebo::Server::Run (this=0x7f7d28000920) at gazebo/Server.cc:562\n#7  0x0000000000414ec6 in gazebo::ServerFixture::RunServer (this=0x15f9230, _args=...)\n    at gazebo/test/ServerFixture.cc:270\n#8  0x00007f7d505c3a4a in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#9  0x00007f7d51b5b182 in start_thread (arg=0x7f7d2ed28700) at pthread_create.c:312\n#10 0x00007f7d4f6b347d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n(gdb)\n</pre></div>\n\n\n<p>In two cases, the seg-fault occurs when the main testing thread is at <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/9569d26d280c2b01ff670497211fee28211b161e/gazebo/sensors/CameraSensor_TEST.cc?at=default&amp;fileviewer=file-view-default#CameraSensor_TEST.cc-40\" rel=\"nofollow\">CameraSensor_TEST.cc:40</a>. The strange thing is that this line is calling <code>GetSensor</code> and then casting it to a <code>CameraSensor</code>, but the backtrace shows a <code>~CameraSensor</code> destructor being called. That doesn't make sense to me.</p>\n<div class=\"codehilite\"><pre><span></span>Thread 18 (Thread 0x7f7d52974880 (LWP 18077)):\n#0  boost::detail::sp_counted_impl_p&lt;gazebo::transport::Publisher&gt;::dispose (this=0x7f7d28e6ed40)\n    at /usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78\n#1  0x00007f7d516ee90e in boost::detail::sp_counted_base::release (this=0x7f7d28e6ed40)\n    at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\n#2  0x00007f7d5170ea0c in ~shared_count (this=0x7f7d28e6e948, __in_chrg=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/detail/shared_count.hpp:371\n#3  ~shared_ptr (this=0x7f7d28e6e940, __in_chrg=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/shared_ptr.hpp:328\n#4  _Destroy&lt;boost::shared_ptr&lt;gazebo::transport::Publisher&gt; &gt; (__pointer=0x7f7d28e6e940) at /usr/include/c++/4.8/bits/stl_construct.h:93\n#5  __destroy&lt;boost::shared_ptr&lt;gazebo::transport::Publisher&gt;*&gt; (__last=&lt;optimized out&gt;, __first=0x7f7d28e6e940)\n    at /usr/include/c++/4.8/bits/stl_construct.h:103\n#6  _Destroy&lt;boost::shared_ptr&lt;gazebo::transport::Publisher&gt;*&gt; (__last=&lt;optimized out&gt;, __first=&lt;optimized out&gt;)\n    at /usr/include/c++/4.8/bits/stl_construct.h:126\n#7  _Destroy&lt;boost::shared_ptr&lt;gazebo::transport::Publisher&gt;*, boost::shared_ptr&lt;gazebo::transport::Publisher&gt; &gt; (__last=0x7f7d28e6e950, \n    __first=0x7f7d28e6e930) at /usr/include/c++/4.8/bits/stl_construct.h:151\n#8  _M_erase_at_end (this=&lt;optimized out&gt;, __pos=0x7f7d28e6e930) at /usr/include/c++/4.8/bits/stl_vector.h:1352\n#9  clear (this=0x7f7d28dce9f0) at /usr/include/c++/4.8/bits/stl_vector.h:1126\n#10 gazebo::transport::Node::Fini (this=0x7f7d28dce9d0) at gazebo/transport/Node.cc:70\n#11 0x00007f7d5233f46e in gazebo::sensors::Sensor::~Sensor (this=0x7f7d28eb68c0, __in_chrg=&lt;optimized out&gt;)\n    at gazebo/sensors/Sensor.cc:78\n#12 0x00007f7d5230b419 in gazebo::sensors::CameraSensor::~CameraSensor (this=0x7f7d28eb68c0, __in_chrg=&lt;optimized out&gt;)\n    at gazebo/sensors/CameraSensor.cc:64\n#13 0x00000000004135b9 in std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (this=0x7f7d28e37fe0)\n    at /usr/include/c++/4.8/bits/shared_ptr_base.h:144\n#14 0x0000000000411b84 in ~__shared_count (this=&lt;synthetic pointer&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/4.8/bits/shared_ptr_base.h:546\n#15 ~__shared_ptr (this=&lt;synthetic pointer&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/4.8/bits/shared_ptr_base.h:781\n#16 ~shared_ptr (this=&lt;synthetic pointer&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/4.8/bits/shared_ptr.h:93\n#17 CameraSensor_TEST_CreateCamera_Test::TestBody (this=&lt;optimized out&gt;)\n    at gazebo/sensors/CameraSensor_TEST.cc:40\n#18 0x0000000000450963 in HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (location=0x45904f &quot;the test body&quot;, method=&lt;optimized out&gt;, \n    object=&lt;optimized out&gt;) at test/gtest/src/gtest.cc:2079\n#19 testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (object=object@entry=0x15f9230, method=&lt;optimized out&gt;, \n    location=location@entry=0x45904f &quot;the test body&quot;) at test/gtest/src/gtest.cc:2115\n#20 0x0000000000443577 in testing::Test::Run (this=this@entry=0x15f9230)\n    at test/gtest/src/gtest.cc:2152\n#21 0x0000000000443616 in testing::TestInfo::Run (this=0x15f7e60) at test/gtest/src/gtest.cc:2327\n#22 0x000000000044371d in testing::TestCase::Run (this=0x15f82b0) at test/gtest/src/gtest.cc:2445\n#23 0x00000000004439ad in testing::internal::UnitTestImpl::RunAllTests (this=0x15f7f20)\n    at test/gtest/src/gtest.cc:4316\n#24 0x0000000000443cae in HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (location=&lt;optimized out&gt;, \n    method=&lt;optimized out&gt;, object=&lt;optimized out&gt;) at test/gtest/src/gtest.cc:2079\n#25 HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (\n    location=0x45a598 &quot;auxiliary test code (environments or event listeners)&quot;, \n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x443790 &lt;testing::internal::UnitTestImpl::RunAllTests()&gt;, object=0x15f7f20) at test/gtest/src/gtest.cc:2115\n#26 testing::UnitTest::Run (this=&lt;optimized out&gt;) at test/gtest/src/gtest.cc:3930\n#27 0x000000000040f9df in RUN_ALL_TESTS () at test/gtest/include/gtest/gtest.h:2288\n#28 main (argc=1, argv=&lt;optimized out&gt;) at gazebo/sensors/CameraSensor_TEST.cc:85\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-02-26T18:57:49.795206+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:46.541876+00:00", "type": "issue", "id": 1863}