{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2306/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2306.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2306/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2306/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2306/model-physics-is-incollect-with-calling"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2306/vote"}}, "reporter": null, "title": "Model physics is incollect with calling SetPosition from plugin.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When you call Joint :: SetPosition () from the Model plugin, the model behaves as if the gravity became smaller.\r\n\r\nIn fact, if I drop the model with the controller on and the other from the same height at the same time, the model without the controller will land quickly.\r\n\r\nThis looks like a strange phenomenon.\r\nI tried with the same code, but it works normally with Gazebo 2.0.\r\n\r\nBelow is a minimal plugin and model file I used to reproduce this phenomenon.\r\n                                     \r\nplugin\r\n```\r\n#!c++\r\n\r\n#include <string>\r\n#include <gazebo/gazebo.hh>\r\n#include <gazebo/physics/physics.hh>\r\n#include <ros/ros.h>\r\n\r\nnamespace gazebo {\r\nclass DummyPlugin : public ModelPlugin {\r\n private:\r\n    event::ConnectionPtr update_connection_;\r\n    physics::JointPtr joint_;\r\n    physics::ModelPtr model_;\r\n    std::string joint_name_;\r\n public:\r\n  DummyPlugin() {\r\n\r\n  }\r\n\r\n  ~DummyPlugin() {\r\n    event::Events::DisconnectWorldUpdateBegin(update_connection_);\r\n  }\r\n\r\n  void Load(physics::ModelPtr _parent, sdf::ElementPtr _sdf ) {\r\n    model_ = _parent;\r\n    joint_name_ = \"joint\";\r\n    if (_sdf->HasElement(\"joint\"))\r\n      joint_name_ = _sdf->GetElement(\"joint\")->Get<std::string>();\r\n    joint_ = model_->GetJoint(joint_name_);\r\n    update_connection_ = event::Events::ConnectWorldUpdateBegin(\r\n                                                                boost::bind(&ga\\\r\nzebo::DummyPlugin::UpdateChild, this));\r\n  }\r\n\r\n  void UpdateChild() {\r\n#if GAZEBO_MAJOR_VERSION >= 4\r\n    joint_->SetPosition(0, 0.1);\r\n#else\r\n    joint_->SetAngle(0, 0.3);\r\n#endif\r\n  }\r\n};\r\nGZ_REGISTER_MODEL_PLUGIN(DummyPlugin);\r\n}  // namespace gazebo          \r\n```\r\n                                                \r\nmodel:\r\n\r\n```\r\n#!XML\r\n\r\n<?xml version=\"1.0\"?>\r\n<robot name=\"minimum_robot\">\r\n\r\n  <link name=\"base_link\">\r\n    <inertial>\r\n      <origin xyz=\"2 0 0\" />\r\n      <mass value=\"1.0\" />\r\n      <inertia  ixx=\"1.0\" ixy=\"0.0\"  ixz=\"0.0\"  iyy=\"100.0\"  iyz=\"0.0\"  izz=\"1.\\\r\n0\" />\r\n    </inertial>\r\n    <visual>\r\n      <geometry>\r\n        <sphere radius=\"0.3\"/>\r\n      </geometry>\r\n      <material name=\"green\">\r\n        <color rgba=\"0 1 0 1\"/>\r\n      </material>\r\n    </visual>\r\n    <collision>\r\n      <geometry>\r\n        <sphere radius=\"0.3\"/>\r\n      </geometry>\r\n    </collision>\r\n  </link>\r\n  <joint name=\"dummy_joint\" type=\"continuous\">\r\n    <parent link=\"base_link\"/>\r\n    <child link=\"dummy_link\"/>\r\n  </joint>\r\n  <link name=\"dummy_link\">\r\n      <inertial>\r\n      <origin xyz=\"2 0 0\" />\r\n      <mass value=\"1.0\" />\r\n      <inertia  ixx=\"1.0\" ixy=\"0.0\"  ixz=\"0.0\"  iyy=\"100.0\"  iyz=\"0.0\"  izz=\"1.\\\r\n0\" />\r\n    </inertial>\r\n  </link>\r\n  <gazebo>\r\n    <plugin name=\"ball_dummy_plugin\" filename=\"libtmc_gazebo_dummy_plugin.so\">\r\n      <joint>dummy_joint</joint>\r\n    </plugin>\r\n  </gazebo>\r\n</robot>\r\n```\r\n\r\n\r\n\r\n\r\n\r\nAlso, the environment I use is as follows.\r\nOS: Ubuntu 16.04\r\nGazebo: 7.0.0\r\nROS: kinetic\r\n\r\nThanks.", "markup": "markdown", "html": "<p>When you call Joint :: SetPosition () from the Model plugin, the model behaves as if the gravity became smaller.</p>\n<p>In fact, if I drop the model with the controller on and the other from the same height at the same time, the model without the controller will land quickly.</p>\n<p>This looks like a strange phenomenon.\nI tried with the same code, but it works normally with Gazebo 2.0.</p>\n<p>Below is a minimal plugin and model file I used to reproduce this phenomenon.</p>\n<p>plugin</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;string&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gazebo/gazebo.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gazebo/physics/physics.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;ros/ros.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"k\">namespace</span> <span class=\"n\">gazebo</span> <span class=\"p\">{</span>\n<span class=\"k\">class</span> <span class=\"nc\">DummyPlugin</span> <span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">ModelPlugin</span> <span class=\"p\">{</span>\n <span class=\"k\">private</span><span class=\"o\">:</span>\n    <span class=\"n\">event</span><span class=\"o\">::</span><span class=\"n\">ConnectionPtr</span> <span class=\"n\">update_connection_</span><span class=\"p\">;</span>\n    <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">JointPtr</span> <span class=\"n\">joint_</span><span class=\"p\">;</span>\n    <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ModelPtr</span> <span class=\"n\">model_</span><span class=\"p\">;</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">joint_name_</span><span class=\"p\">;</span>\n <span class=\"k\">public</span><span class=\"o\">:</span>\n  <span class=\"n\">DummyPlugin</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n  <span class=\"p\">}</span>\n\n  <span class=\"o\">~</span><span class=\"n\">DummyPlugin</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">event</span><span class=\"o\">::</span><span class=\"n\">Events</span><span class=\"o\">::</span><span class=\"n\">DisconnectWorldUpdateBegin</span><span class=\"p\">(</span><span class=\"n\">update_connection_</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kt\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ModelPtr</span> <span class=\"n\">_parent</span><span class=\"p\">,</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">_sdf</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">model_</span> <span class=\"o\">=</span> <span class=\"n\">_parent</span><span class=\"p\">;</span>\n    <span class=\"n\">joint_name_</span> <span class=\"o\">=</span> <span class=\"s\">&quot;joint&quot;</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;joint&quot;</span><span class=\"p\">))</span>\n      <span class=\"n\">joint_name_</span> <span class=\"o\">=</span> <span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;joint&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">();</span>\n    <span class=\"n\">joint_</span> <span class=\"o\">=</span> <span class=\"n\">model_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetJoint</span><span class=\"p\">(</span><span class=\"n\">joint_name_</span><span class=\"p\">);</span>\n    <span class=\"n\">update_connection_</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">::</span><span class=\"n\">Events</span><span class=\"o\">::</span><span class=\"n\">ConnectWorldUpdateBegin</span><span class=\"p\">(</span>\n                                                                <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">ga</span>\\\n<span class=\"n\">zebo</span><span class=\"o\">::</span><span class=\"n\">DummyPlugin</span><span class=\"o\">::</span><span class=\"n\">UpdateChild</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">));</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kt\">void</span> <span class=\"n\">UpdateChild</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n<span class=\"cp\">#if GAZEBO_MAJOR_VERSION &gt;= 4</span>\n    <span class=\"n\">joint_</span><span class=\"o\">-&gt;</span><span class=\"n\">SetPosition</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">);</span>\n<span class=\"cp\">#else</span>\n    <span class=\"n\">joint_</span><span class=\"o\">-&gt;</span><span class=\"n\">SetAngle</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">);</span>\n<span class=\"cp\">#endif</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n<span class=\"n\">GZ_REGISTER_MODEL_PLUGIN</span><span class=\"p\">(</span><span class=\"n\">DummyPlugin</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>  <span class=\"c1\">// namespace gazebo          </span>\n</pre></div>\n\n\n<p>model:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot;?&gt;</span>\n<span class=\"nt\">&lt;robot</span> <span class=\"na\">name=</span><span class=\"s\">&quot;minimum_robot&quot;</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_link&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;inertial&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;2 0 0&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.0&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;inertia</span>  <span class=\"na\">ixx=</span><span class=\"s\">&quot;1.0&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0.0&quot;</span>  <span class=\"na\">ixz=</span><span class=\"s\">&quot;0.0&quot;</span>  <span class=\"na\">iyy=</span><span class=\"s\">&quot;100.0&quot;</span>  <span class=\"na\">iyz=</span><span class=\"s\">&quot;0.0&quot;</span>  <span class=\"na\">izz=</span><span class=\"s\">&quot;1.\\</span>\n<span class=\"s\">0&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;visual&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;sphere</span> <span class=\"na\">radius=</span><span class=\"s\">&quot;0.3&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n      <span class=\"nt\">&lt;material</span> <span class=\"na\">name=</span><span class=\"s\">&quot;green&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;color</span> <span class=\"na\">rgba=</span><span class=\"s\">&quot;0 1 0 1&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/material&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;collision&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;sphere</span> <span class=\"na\">radius=</span><span class=\"s\">&quot;0.3&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;dummy_joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;continuous&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;parent</span> <span class=\"na\">link=</span><span class=\"s\">&quot;base_link&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;child</span> <span class=\"na\">link=</span><span class=\"s\">&quot;dummy_link&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/joint&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;dummy_link&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;inertial&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;2 0 0&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.0&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;inertia</span>  <span class=\"na\">ixx=</span><span class=\"s\">&quot;1.0&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0.0&quot;</span>  <span class=\"na\">ixz=</span><span class=\"s\">&quot;0.0&quot;</span>  <span class=\"na\">iyy=</span><span class=\"s\">&quot;100.0&quot;</span>  <span class=\"na\">iyz=</span><span class=\"s\">&quot;0.0&quot;</span>  <span class=\"na\">izz=</span><span class=\"s\">&quot;1.\\</span>\n<span class=\"s\">0&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/inertial&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;gazebo&gt;</span>\n    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ball_dummy_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libtmc_gazebo_dummy_plugin.so&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;joint&gt;</span>dummy_joint<span class=\"nt\">&lt;/joint&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n  <span class=\"nt\">&lt;/gazebo&gt;</span>\n<span class=\"nt\">&lt;/robot&gt;</span>\n</pre></div>\n\n\n<p>Also, the environment I use is as follows.\nOS: Ubuntu 16.04\nGazebo: 7.0.0\nROS: kinetic</p>\n<p>Thanks.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-28T01:34:16.815660+00:00", "milestone": null, "updated_on": "2018-02-22T01:14:19.968912+00:00", "type": "issue", "id": 2306}