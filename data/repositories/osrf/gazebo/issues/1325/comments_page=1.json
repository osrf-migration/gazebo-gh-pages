{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325/comments/13461640.json"}, "html": {"href": "#!/osrf/gazebo/issues/1325#comment-13461640"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325.json"}}, "type": "issue", "id": 1325, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "GetBoundingBox returns the models' last collisions bb"}, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2014-11-06T11:32:17.918404+00:00", "user": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "updated_on": null, "type": "issue_comment", "id": 13461640}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325/comments/13462145.json"}, "html": {"href": "#!/osrf/gazebo/issues/1325#comment-13462145"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325.json"}}, "type": "issue", "id": 1325, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "GetBoundingBox returns the models' last collisions bb"}, "content": {"raw": "similar to #!/osrf/gazebo/issue/1205/incorrect-model-boundingbox", "markup": "markdown", "html": "<p>similar to <a href=\"#!/osrf/gazebo/issue/1205/incorrect-model-boundingbox\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issue/1205/incorrect-model-boundingbox</a></p>", "type": "rendered"}, "created_on": "2014-11-06T11:51:58.692455+00:00", "user": {"display_name": "Z F", "uuid": "{b80eaad3-70d5-4dd0-a406-2795a840dba8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb80eaad3-70d5-4dd0-a406-2795a840dba8%7D"}, "html": {"href": "https://bitbucket.org/%7Bb80eaad3-70d5-4dd0-a406-2795a840dba8%7D/"}, "avatar": {"href": "https://bitbucket.org/account/yzfang/avatar/"}}, "nickname": "yzfang", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 13462145}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325/comments/16051980.json"}, "html": {"href": "#!/osrf/gazebo/issues/1325#comment-16051980"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325.json"}}, "type": "issue", "id": 1325, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "GetBoundingBox returns the models' last collisions bb"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-03-03T09:29:40.220250+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 16051980}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325/comments/18317670.json"}, "html": {"href": "#!/osrf/gazebo/issues/1325#comment-18317670"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325.json"}}, "type": "issue", "id": 1325, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "GetBoundingBox returns the models' last collisions bb"}, "content": {"raw": "I just ran into this issue after getting incorrect bounding boxes for `Model::GetCollisionBoundingBox()`, after some digging I found out why that happens so I figured I'd report it here; it applies to `Model::GetBoundingBox()` as well.\n\nThe issue is that the bounding boxes returned by the collision implementations (`BulletCollision::GetBoundingBox()` and `ODECollision::GetBoundingBox()`) have an extent of `EXTENT_NULL`, because they are created with their argument-less constructors. Looking at `Box::operator+()` / `Box::operator+=()`, we see that if the extent of a box is `EXTENT_NULL`, it simply inherits the min/max values of the box it is being summed with. Since all of the boxes in the bounding box sum have `EXTENT_NULL`, the result is practically the same as taking the last box in the sum.\n\nThere is an additional issue with `Entity::GetCollisionBoundingBox()` (which is what `Model` and all other `Entity`'s use) which occurs when there is at least one child which does not contain collision elements (e.g. a joint in the case of a model). In this case the default argument-less constructed box will be returned for this item, which will have min/max vectors of `(0, 0, 0)`. Depending on the situation, these might actually be out of the range of the current min/max vectors, extending the bounding box. Combined with the previous issue it gets even worse: if the last child of a model is a joint, `Model::GetCollisionBoundingBox()` will return that last value, i.e. a box of size 0 in all dimensions.\n\nSo to fix all of this:\n\n- The collision implementations (`BulletCollision::GetBoundingBox()` and `ODECollision::GetBoundingBox()`, I don't think the other engines support bounding boxes at all) should return `Box`es instantiated with the min/max constructor so they have an extent of `EXTENT_FINITE`.\n- `Box::operator+()` / `Box::operator+=()` should noop on sums where the *other* box has `EXTENT_NULL`, which would prevent having to...\n- ... set min/max in `Entity::GetCollisionBoundingBox()` to positive/negative infinity, like `Link::GetBoundingBox()` is doing by the way, so it doesn't affect the sum.", "markup": "markdown", "html": "<p>I just ran into this issue after getting incorrect bounding boxes for <code>Model::GetCollisionBoundingBox()</code>, after some digging I found out why that happens so I figured I'd report it here; it applies to <code>Model::GetBoundingBox()</code> as well.</p>\n<p>The issue is that the bounding boxes returned by the collision implementations (<code>BulletCollision::GetBoundingBox()</code> and <code>ODECollision::GetBoundingBox()</code>) have an extent of <code>EXTENT_NULL</code>, because they are created with their argument-less constructors. Looking at <code>Box::operator+()</code> / <code>Box::operator+=()</code>, we see that if the extent of a box is <code>EXTENT_NULL</code>, it simply inherits the min/max values of the box it is being summed with. Since all of the boxes in the bounding box sum have <code>EXTENT_NULL</code>, the result is practically the same as taking the last box in the sum.</p>\n<p>There is an additional issue with <code>Entity::GetCollisionBoundingBox()</code> (which is what <code>Model</code> and all other <code>Entity</code>'s use) which occurs when there is at least one child which does not contain collision elements (e.g. a joint in the case of a model). In this case the default argument-less constructed box will be returned for this item, which will have min/max vectors of <code>(0, 0, 0)</code>. Depending on the situation, these might actually be out of the range of the current min/max vectors, extending the bounding box. Combined with the previous issue it gets even worse: if the last child of a model is a joint, <code>Model::GetCollisionBoundingBox()</code> will return that last value, i.e. a box of size 0 in all dimensions.</p>\n<p>So to fix all of this:</p>\n<ul>\n<li>The collision implementations (<code>BulletCollision::GetBoundingBox()</code> and <code>ODECollision::GetBoundingBox()</code>, I don't think the other engines support bounding boxes at all) should return <code>Box</code>es instantiated with the min/max constructor so they have an extent of <code>EXTENT_FINITE</code>.</li>\n<li><code>Box::operator+()</code> / <code>Box::operator+=()</code> should noop on sums where the <em>other</em> box has <code>EXTENT_NULL</code>, which would prevent having to...</li>\n<li>... set min/max in <code>Entity::GetCollisionBoundingBox()</code> to positive/negative infinity, like <code>Link::GetBoundingBox()</code> is doing by the way, so it doesn't affect the sum.</li>\n</ul>", "type": "rendered"}, "created_on": "2015-05-24T11:10:31.848924+00:00", "user": {"display_name": "Elte Hupkes", "uuid": "{f23aa1a9-ae57-493f-8169-fbb59b3eae43}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D"}, "html": {"href": "https://bitbucket.org/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8560ee94d50ba277c411499a45b3d732d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEH-5.png"}}, "nickname": "ElteHupkes", "type": "user", "account_id": "557058:b758f523-bdaa-4718-964c-03b825bdea8d"}, "updated_on": "2015-05-24T11:11:53.807553+00:00", "type": "issue_comment", "id": 18317670}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325/comments/18322159.json"}, "html": {"href": "#!/osrf/gazebo/issues/1325#comment-18322159"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325.json"}}, "type": "issue", "id": 1325, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "GetBoundingBox returns the models' last collisions bb"}, "content": {"raw": "Okay, apparently my previous comment only solves part of the problem. The returned bounding boxes also seem to depend on the underlying physics engine in a non-compatible manner. `ODECollision::GetBoundingBox()` shows an attempt to return the bounding boxes in world coordinates (which is what you want for AABB's) but depending on the rotation of the object this value is either a little bit or completely wrong - and I'm clueless why. `BulletCollision::GetBoundingBox()` on the other hand returns the bounding box in the collision's (or link's, not sure) reference frame, which makes it completely useless for summing it with the other bounding boxes (a bounding box of a rotated object is not equal to the rotated bounding box of the original object).\n\nUnfortunately I've no time to delve into this deeper now, there's a master's thesis involving simulated robots I have to work on which will just have to do without bounding boxes for now ;).", "markup": "markdown", "html": "<p>Okay, apparently my previous comment only solves part of the problem. The returned bounding boxes also seem to depend on the underlying physics engine in a non-compatible manner. <code>ODECollision::GetBoundingBox()</code> shows an attempt to return the bounding boxes in world coordinates (which is what you want for AABB's) but depending on the rotation of the object this value is either a little bit or completely wrong - and I'm clueless why. <code>BulletCollision::GetBoundingBox()</code> on the other hand returns the bounding box in the collision's (or link's, not sure) reference frame, which makes it completely useless for summing it with the other bounding boxes (a bounding box of a rotated object is not equal to the rotated bounding box of the original object).</p>\n<p>Unfortunately I've no time to delve into this deeper now, there's a master's thesis involving simulated robots I have to work on which will just have to do without bounding boxes for now ;).</p>", "type": "rendered"}, "created_on": "2015-05-24T20:38:51.338601+00:00", "user": {"display_name": "Elte Hupkes", "uuid": "{f23aa1a9-ae57-493f-8169-fbb59b3eae43}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D"}, "html": {"href": "https://bitbucket.org/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8560ee94d50ba277c411499a45b3d732d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEH-5.png"}}, "nickname": "ElteHupkes", "type": "user", "account_id": "557058:b758f523-bdaa-4718-964c-03b825bdea8d"}, "updated_on": null, "type": "issue_comment", "id": 18322159}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325/comments/30610327.json"}, "html": {"href": "#!/osrf/gazebo/issues/1325#comment-30610327"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1325.json"}}, "type": "issue", "id": 1325, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "GetBoundingBox returns the models' last collisions bb"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:22:21.117465+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30610327}], "page": 1, "size": 6}