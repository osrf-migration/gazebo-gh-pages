{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54278556.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54278556"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "Building with ccache:\n\n\u200c\n\n```\n$ /usr/lib/ccache/c++ --version\nc++ (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0\n```\n\n\u200c", "markup": "markdown", "html": "<p>Building with ccache:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>$ /usr/lib/ccache/c++ --version\nc++ <span class=\"o\">(</span>Ubuntu <span class=\"m\">7</span>.4.0-1ubuntu1~18.04.1<span class=\"o\">)</span> <span class=\"m\">7</span>.4.0\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-10-09T17:10:58.458388+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54278556}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54278604.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54278604"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "Probably Dart people messed it? According to [https://en.cppreference.com/w/cpp/memory/unique\\_ptr/make\\_unique](https://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique) , make\\_unique is c\\+\\+14 feature, but the build flags I get from gazebo have \\`-std=c\\+\\+11\\`", "markup": "markdown", "html": "<p>Probably Dart people messed it? According to <a data-is-external-link=\"true\" href=\"https://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique\" rel=\"nofollow\">https://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique</a> , make_unique is c++14 feature, but the build flags I get from gazebo have `-std=c++11`</p>", "type": "rendered"}, "created_on": "2019-10-09T17:13:41.147151+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54278604}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54278750.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54278750"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "[https://github.com/dartsim/dart/issues/1423](https://github.com/dartsim/dart/issues/1423) \\(Switch to C\\+\\+14 not mentioned in changelog\\)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://github.com/dartsim/dart/issues/1423\" rel=\"nofollow\">https://github.com/dartsim/dart/issues/1423</a> (Switch to C++14 not mentioned in changelog)</p>", "type": "rendered"}, "created_on": "2019-10-09T17:27:02.490276+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54278750}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54278944.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54278944"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "This is a workaround, but I don\u2019t think it\u2019s a good idea to use it as long-term solution. Maybe it\u2019d be better to fix the distributed DART version to 6.8, which is the last using C\\+\\+11?\n\n\u200c\n\n```\nIndex: gazebo/physics/dart/dart_inc.h\n===================================================================\n--- gazebo/physics/dart/dart_inc.h\t(revision 38627:8d48d1f560d424b023fb83187efc060b5a04fe62)\n+++ gazebo/physics/dart/dart_inc.h\t(revision 38627+:8d48d1f560d4+)\n@@ -21,6 +21,43 @@\n // This disables warning messages for ODE\n #pragma GCC system_header\n \n+#include <cstddef>\n+#include <memory>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace std {\n+template<class T> struct _Unique_if {\n+  typedef unique_ptr<T> _Single_object;\n+};\n+\n+template<class T> struct _Unique_if<T[]> {\n+  typedef unique_ptr<T[]> _Unknown_bound;\n+};\n+\n+template<class T, size_t N> struct _Unique_if<T[N]> {\n+  typedef void _Known_bound;\n+};\n+\n+template<class T, class... Args>\n+typename _Unique_if<T>::_Single_object\n+make_unique(Args&&... args) {\n+  return unique_ptr<T>(new T(std::forward<Args>(args)...));\n+}\n+\n+template<class T>\n+typename _Unique_if<T>::_Unknown_bound\n+make_unique(size_t n) {\n+  typedef typename remove_extent<T>::type U;\n+  return unique_ptr<T>(new U[n]());\n+}\n+\n+template<class T, class... Args>\n+typename _Unique_if<T>::_Known_bound\n+make_unique(Args&&...) = delete;\n+}\n+\n+\n #include <dart/dart.hpp>\n \n #endif\n```\n\n\u200c", "markup": "markdown", "html": "<p>This is a workaround, but I don\u2019t think it\u2019s a good idea to use it as long-term solution. Maybe it\u2019d be better to fix the distributed DART version to 6.8, which is the last using C++11?</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">Index: gazebo/physics/dart/dart_inc.h</span>\n<span class=\"gh\">===================================================================</span>\n<span class=\"gd\">--- gazebo/physics/dart/dart_inc.h  (revision 38627:8d48d1f560d424b023fb83187efc060b5a04fe62)</span>\n<span class=\"gi\">+++ gazebo/physics/dart/dart_inc.h  (revision 38627+:8d48d1f560d4+)</span>\n<span class=\"gu\">@@ -21,6 +21,43 @@</span>\n // This disables warning messages for ODE\n #pragma GCC system_header\n\n<span class=\"gi\">+#include &lt;cstddef&gt;</span>\n<span class=\"gi\">+#include &lt;memory&gt;</span>\n<span class=\"gi\">+#include &lt;type_traits&gt;</span>\n<span class=\"gi\">+#include &lt;utility&gt;</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+namespace std {</span>\n<span class=\"gi\">+template&lt;class T&gt; struct _Unique_if {</span>\n<span class=\"gi\">+  typedef unique_ptr&lt;T&gt; _Single_object;</span>\n<span class=\"gi\">+};</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T&gt; struct _Unique_if&lt;T[]&gt; {</span>\n<span class=\"gi\">+  typedef unique_ptr&lt;T[]&gt; _Unknown_bound;</span>\n<span class=\"gi\">+};</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T, size_t N&gt; struct _Unique_if&lt;T[N]&gt; {</span>\n<span class=\"gi\">+  typedef void _Known_bound;</span>\n<span class=\"gi\">+};</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T, class... Args&gt;</span>\n<span class=\"gi\">+typename _Unique_if&lt;T&gt;::_Single_object</span>\n<span class=\"gi\">+make_unique(Args&amp;&amp;... args) {</span>\n<span class=\"gi\">+  return unique_ptr&lt;T&gt;(new T(std::forward&lt;Args&gt;(args)...));</span>\n<span class=\"gi\">+}</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T&gt;</span>\n<span class=\"gi\">+typename _Unique_if&lt;T&gt;::_Unknown_bound</span>\n<span class=\"gi\">+make_unique(size_t n) {</span>\n<span class=\"gi\">+  typedef typename remove_extent&lt;T&gt;::type U;</span>\n<span class=\"gi\">+  return unique_ptr&lt;T&gt;(new U[n]());</span>\n<span class=\"gi\">+}</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T, class... Args&gt;</span>\n<span class=\"gi\">+typename _Unique_if&lt;T&gt;::_Known_bound</span>\n<span class=\"gi\">+make_unique(Args&amp;&amp;...) = delete;</span>\n<span class=\"gi\">+}</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+</span>\n #include &lt;dart/dart.hpp&gt;\n\n #endif\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-10-09T17:42:22.292133+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54278944}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54280677.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54280677"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "FYI, comment added to [https://github.com/dartsim/dart/issues/1423](https://github.com/dartsim/dart/issues/1423)", "markup": "markdown", "html": "<p>FYI, comment added to <a data-is-external-link=\"true\" href=\"https://github.com/dartsim/dart/issues/1423\" rel=\"nofollow\">https://github.com/dartsim/dart/issues/1423</a></p>", "type": "rendered"}, "created_on": "2019-10-09T20:19:14.090686+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": null, "type": "issue_comment", "id": 54280677}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54294490.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54294490"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "I think I found out why the buildfarm hasn\u2019t noticed this problem and me neither before\u2026 I accidentally built gazebo using CMake 3.15, which doesn\u2019t pass the c\\+\\+14 flag to the compile commands. When I build it again with the stock cmake 3.10.5 from bionic, it adds `-std=c++14` at the end of `CXX_FLAGS` in each `flags.make` generated file. I wasn\u2019t able to figure out why the older CMake puts the flag there and the newer one does not. \n\nEven if I look to the CI builds on Xenial \\(haven\u2019t found any recent on Bionic\\), I see the c\\+\\+14 flag is set there somehow:\n\n`cc1: warning: command line option \u2018-std=c++14\u2019 is valid for C++/ObjC++ but not for C`\n\ne.g. in [https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr\\_any-xenial-amd64-gpu-none/1122/consoleText](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/1122/consoleText) .\n\nSo it seems to me Gazebo is silently being built with the c\\+\\+14 flag without anyone knowing about this, and I only figured it out because I used a newer version of CMake\u2026\n\nCan somebody verify on his local build the presence of the c\\+\\+14 flag?\n\n\u200c\n\nI also tried forcefully getting rid of the c\\+\\+14 flag, and the only thing that worked is something I wouldn\u2019t consider a solution, but a hack:\n\n```\nset(CMAKE_CXX14_STANDARD_COMPILE_OPTION \"-std=c++11\")\n```\n\n\u200c\n\nThe other settings like the following had no effect on the resulting flag:\n\n```\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_STANDARD_DEFAULT 11)\nset(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 11)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n```\n\n\u200c\n\nWhen I forced the C\\+\\+11 standard, Gazebo compiles fine with the above-mentioned hack for Dart. If I compile it with c\\+\\+14, the Dart hack makes compilation fail. But when I remove the hack, compilation with c\\+\\+14 also succeeds.", "markup": "markdown", "html": "<p>I think I found out why the buildfarm hasn\u2019t noticed this problem and me neither before\u2026 I accidentally built gazebo using CMake 3.15, which doesn\u2019t pass the c++14 flag to the compile commands. When I build it again with the stock cmake 3.10.5 from bionic, it adds <code>-std=c++14</code> at the end of <code>CXX_FLAGS</code> in each <code>flags.make</code> generated file. I wasn\u2019t able to figure out why the older CMake puts the flag there and the newer one does not. </p>\n<p>Even if I look to the CI builds on Xenial (haven\u2019t found any recent on Bionic), I see the c++14 flag is set there somehow:</p>\n<p><code>cc1: warning: command line option \u2018-std=c++14\u2019 is valid for C++/ObjC++ but not for C</code></p>\n<p>e.g. in <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/1122/consoleText\" rel=\"nofollow\">https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/1122/consoleText</a> .</p>\n<p>So it seems to me Gazebo is silently being built with the c++14 flag without anyone knowing about this, and I only figured it out because I used a newer version of CMake\u2026</p>\n<p>Can somebody verify on his local build the presence of the c++14 flag?</p>\n<p>\u200c</p>\n<p>I also tried forcefully getting rid of the c++14 flag, and the only thing that worked is something I wouldn\u2019t consider a solution, but a hack:</p>\n<div class=\"codehilite\"><pre><span></span>set(CMAKE_CXX14_STANDARD_COMPILE_OPTION &quot;-std=c++11&quot;)\n</pre></div>\n\n\n<p>\u200c</p>\n<p>The other settings like the following had no effect on the resulting flag:</p>\n<div class=\"codehilite\"><pre><span></span>set(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_STANDARD_DEFAULT 11)\nset(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 11)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n</pre></div>\n\n\n<p>\u200c</p>\n<p>When I forced the C++11 standard, Gazebo compiles fine with the above-mentioned hack for Dart. If I compile it with c++14, the Dart hack makes compilation fail. But when I remove the hack, compilation with c++14 also succeeds.</p>", "type": "rendered"}, "created_on": "2019-10-10T16:41:56.013878+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54294490}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54294707.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54294707"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "I did a version test, and the c\\+\\+14 flag is added up to CMake 3.14.7. Starting with 3.15.0, it disappears. However, looking in the [changelog](https://cmake.org/cmake/help/v3.15/release/3.15.html), I can\u2019t find anything useful there\u2026\n\n\u200c", "markup": "markdown", "html": "<p>I did a version test, and the c++14 flag is added up to CMake 3.14.7. Starting with 3.15.0, it disappears. However, looking in the <a data-is-external-link=\"true\" href=\"https://cmake.org/cmake/help/v3.15/release/3.15.html\" rel=\"nofollow\">changelog</a>, I can\u2019t find anything useful there\u2026</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-10-10T17:01:48.416295+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54294707}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54294823.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54294823"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "Okay, it seems the guy bringing in c\\+\\+14 can be ignition-math4:\n\n/usr/lib/x86\\_64-linux-gnu/cmake/ignition-math4/ignition-math4-targets.cmake:\n\n```\nset_target_properties(ignition-math4::ignition-math4 PROPERTIES\n  INTERFACE_COMPILE_FEATURES \"cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_return_type_deduction;cxx_variable_templates\"\n  INTERFACE_INCLUDE_DIRECTORIES \"${_IMPORT_PREFIX}/include/ignition/math4\"\n)\n```\n\n\u200c", "markup": "markdown", "html": "<p>Okay, it seems the guy bringing in c++14 can be ignition-math4:</p>\n<p>/usr/lib/x86_64-linux-gnu/cmake/ignition-math4/ignition-math4-targets.cmake:</p>\n<div class=\"codehilite\"><pre><span></span>set_target_properties(ignition-math4::ignition-math4 PROPERTIES\n  INTERFACE_COMPILE_FEATURES &quot;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_return_type_deduction;cxx_variable_templates&quot;\n  INTERFACE_INCLUDE_DIRECTORIES &quot;<span class=\"cp\">${</span><span class=\"n\">_IMPORT_PREFIX</span><span class=\"cp\">}</span>/include/ignition/math4&quot;\n)\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-10-10T17:12:41.926269+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54294823}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/56796751.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-56796751"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "So, PR #3199 tells it is probably a fix for this issue. I\u2019ll try a build with the newer cmake again.\n\nIs there actually a reason to keep Gazebo C\\+\\+ version to C\\+\\+11, when it is known that one of the core dependencies, ign-math4, [requires C\\+\\+14](https://bitbucket.org/ignitionrobotics/ign-math/src/ign-math4/Changelog.md#markdown-header-ignition-math-400-2017-12-26)? Not speaking about DART and more\u2026 It was anyways built with C\\+\\+14 all the time :smiley:", "markup": "markdown", "html": "<p>So, <a href=\"#!/osrf/gazebo/pull-requests/3199/use-target-based-compile-options-to\" rel=\"nofollow\" class=\"ap-connect-link\">PR #3199</a> tells it is probably a fix for this issue. I\u2019ll try a build with the newer cmake again.</p>\n<p>Is there actually a reason to keep Gazebo C++ version to C++11, when it is known that one of the core dependencies, ign-math4, <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-math/src/ign-math4/Changelog.md#markdown-header-ignition-math-400-2017-12-26\" rel=\"nofollow\">requires C++14</a>? Not speaking about DART and more\u2026 It was anyways built with C++14 all the time <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f603.png\" alt=\"\ud83d\ude03\" title=\":smiley:\" data-emoji-short-name=\":smiley:\" /></p>", "type": "rendered"}, "created_on": "2020-04-04T22:40:04.001089+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2020-04-05T01:31:29.223195+00:00", "type": "issue_comment", "id": 56796751}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/56797325.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-56797325"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "Clean configure & build OK with CMake 3.10, 3.15 and 3.16 on current gazebo9 branch.", "markup": "markdown", "html": "<p>Clean configure &amp; build OK with CMake 3.10, 3.15 and 3.16 on current gazebo9 branch.</p>", "type": "rendered"}, "created_on": "2020-04-05T01:52:52.610086+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 56797325}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/56797327.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-56797327"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2020-04-05T01:53:12.436305+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 56797327}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/56797368.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-56797368"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "And I\u2019ve just found the reason why CMake 3.10 is adding the `-std=c++??` flags and 3.15 does not when `cxx_std_??` compile feature is used: [https://gitlab.kitware.com/cmake/cmake/-/merge\\_requests/3023](https://gitlab.kitware.com/cmake/cmake/-/merge_requests/3023) . Since CMake 3.15, only `-std` flags that would actually change the behavior of the compiler are added. And since GCC 7.2 can do C\\+\\+14 by default, no flag is added by CMake 3.15\\+.\n\nWith the fix for this issue, on CMake 3.10 I see `-std=c++14` added to the build flags of e.g. `gazebo_common`. I haven\u2019t found where is the `cxx_std_14` compile feature pulled from, though.", "markup": "markdown", "html": "<p>And I\u2019ve just found the reason why CMake 3.10 is adding the <code>-std=c++??</code> flags and 3.15 does not when <code>cxx_std_??</code> compile feature is used: <a data-is-external-link=\"true\" href=\"https://gitlab.kitware.com/cmake/cmake/-/merge_requests/3023\" rel=\"nofollow\">https://gitlab.kitware.com/cmake/cmake/-/merge_requests/3023</a> . Since CMake 3.15, only <code>-std</code> flags that would actually change the behavior of the compiler are added. And since GCC 7.2 can do C++14 by default, no flag is added by CMake 3.15+.</p>\n<p>With the fix for this issue, on CMake 3.10 I see <code>-std=c++14</code> added to the build flags of e.g. <code>gazebo_common</code>. I haven\u2019t found where is the <code>cxx_std_14</code> compile feature pulled from, though.</p>", "type": "rendered"}, "created_on": "2020-04-05T02:08:21.566280+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 56797368}], "page": 1, "size": 12}