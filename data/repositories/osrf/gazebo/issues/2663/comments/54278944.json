{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/54278944.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-54278944"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "This is a workaround, but I don\u2019t think it\u2019s a good idea to use it as long-term solution. Maybe it\u2019d be better to fix the distributed DART version to 6.8, which is the last using C\\+\\+11?\n\n\u200c\n\n```\nIndex: gazebo/physics/dart/dart_inc.h\n===================================================================\n--- gazebo/physics/dart/dart_inc.h\t(revision 38627:8d48d1f560d424b023fb83187efc060b5a04fe62)\n+++ gazebo/physics/dart/dart_inc.h\t(revision 38627+:8d48d1f560d4+)\n@@ -21,6 +21,43 @@\n // This disables warning messages for ODE\n #pragma GCC system_header\n \n+#include <cstddef>\n+#include <memory>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace std {\n+template<class T> struct _Unique_if {\n+  typedef unique_ptr<T> _Single_object;\n+};\n+\n+template<class T> struct _Unique_if<T[]> {\n+  typedef unique_ptr<T[]> _Unknown_bound;\n+};\n+\n+template<class T, size_t N> struct _Unique_if<T[N]> {\n+  typedef void _Known_bound;\n+};\n+\n+template<class T, class... Args>\n+typename _Unique_if<T>::_Single_object\n+make_unique(Args&&... args) {\n+  return unique_ptr<T>(new T(std::forward<Args>(args)...));\n+}\n+\n+template<class T>\n+typename _Unique_if<T>::_Unknown_bound\n+make_unique(size_t n) {\n+  typedef typename remove_extent<T>::type U;\n+  return unique_ptr<T>(new U[n]());\n+}\n+\n+template<class T, class... Args>\n+typename _Unique_if<T>::_Known_bound\n+make_unique(Args&&...) = delete;\n+}\n+\n+\n #include <dart/dart.hpp>\n \n #endif\n```\n\n\u200c", "markup": "markdown", "html": "<p>This is a workaround, but I don\u2019t think it\u2019s a good idea to use it as long-term solution. Maybe it\u2019d be better to fix the distributed DART version to 6.8, which is the last using C++11?</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">Index: gazebo/physics/dart/dart_inc.h</span>\n<span class=\"gh\">===================================================================</span>\n<span class=\"gd\">--- gazebo/physics/dart/dart_inc.h  (revision 38627:8d48d1f560d424b023fb83187efc060b5a04fe62)</span>\n<span class=\"gi\">+++ gazebo/physics/dart/dart_inc.h  (revision 38627+:8d48d1f560d4+)</span>\n<span class=\"gu\">@@ -21,6 +21,43 @@</span>\n // This disables warning messages for ODE\n #pragma GCC system_header\n\n<span class=\"gi\">+#include &lt;cstddef&gt;</span>\n<span class=\"gi\">+#include &lt;memory&gt;</span>\n<span class=\"gi\">+#include &lt;type_traits&gt;</span>\n<span class=\"gi\">+#include &lt;utility&gt;</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+namespace std {</span>\n<span class=\"gi\">+template&lt;class T&gt; struct _Unique_if {</span>\n<span class=\"gi\">+  typedef unique_ptr&lt;T&gt; _Single_object;</span>\n<span class=\"gi\">+};</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T&gt; struct _Unique_if&lt;T[]&gt; {</span>\n<span class=\"gi\">+  typedef unique_ptr&lt;T[]&gt; _Unknown_bound;</span>\n<span class=\"gi\">+};</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T, size_t N&gt; struct _Unique_if&lt;T[N]&gt; {</span>\n<span class=\"gi\">+  typedef void _Known_bound;</span>\n<span class=\"gi\">+};</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T, class... Args&gt;</span>\n<span class=\"gi\">+typename _Unique_if&lt;T&gt;::_Single_object</span>\n<span class=\"gi\">+make_unique(Args&amp;&amp;... args) {</span>\n<span class=\"gi\">+  return unique_ptr&lt;T&gt;(new T(std::forward&lt;Args&gt;(args)...));</span>\n<span class=\"gi\">+}</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T&gt;</span>\n<span class=\"gi\">+typename _Unique_if&lt;T&gt;::_Unknown_bound</span>\n<span class=\"gi\">+make_unique(size_t n) {</span>\n<span class=\"gi\">+  typedef typename remove_extent&lt;T&gt;::type U;</span>\n<span class=\"gi\">+  return unique_ptr&lt;T&gt;(new U[n]());</span>\n<span class=\"gi\">+}</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+template&lt;class T, class... Args&gt;</span>\n<span class=\"gi\">+typename _Unique_if&lt;T&gt;::_Known_bound</span>\n<span class=\"gi\">+make_unique(Args&amp;&amp;...) = delete;</span>\n<span class=\"gi\">+}</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+</span>\n #include &lt;dart/dart.hpp&gt;\n\n #endif\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-10-09T17:42:22.292133+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 54278944}