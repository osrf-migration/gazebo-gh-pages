{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663/comments/56797368.json"}, "html": {"href": "#!/osrf/gazebo/issues/2663#comment-56797368"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2663.json"}}, "type": "issue", "id": 2663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Build error: gazebo9 and dart"}, "content": {"raw": "And I\u2019ve just found the reason why CMake 3.10 is adding the `-std=c++??` flags and 3.15 does not when `cxx_std_??` compile feature is used: [https://gitlab.kitware.com/cmake/cmake/-/merge\\_requests/3023](https://gitlab.kitware.com/cmake/cmake/-/merge_requests/3023) . Since CMake 3.15, only `-std` flags that would actually change the behavior of the compiler are added. And since GCC 7.2 can do C\\+\\+14 by default, no flag is added by CMake 3.15\\+.\n\nWith the fix for this issue, on CMake 3.10 I see `-std=c++14` added to the build flags of e.g. `gazebo_common`. I haven\u2019t found where is the `cxx_std_14` compile feature pulled from, though.", "markup": "markdown", "html": "<p>And I\u2019ve just found the reason why CMake 3.10 is adding the <code>-std=c++??</code> flags and 3.15 does not when <code>cxx_std_??</code> compile feature is used: <a data-is-external-link=\"true\" href=\"https://gitlab.kitware.com/cmake/cmake/-/merge_requests/3023\" rel=\"nofollow\">https://gitlab.kitware.com/cmake/cmake/-/merge_requests/3023</a> . Since CMake 3.15, only <code>-std</code> flags that would actually change the behavior of the compiler are added. And since GCC 7.2 can do C++14 by default, no flag is added by CMake 3.15+.</p>\n<p>With the fix for this issue, on CMake 3.10 I see <code>-std=c++14</code> added to the build flags of e.g. <code>gazebo_common</code>. I haven\u2019t found where is the <code>cxx_std_14</code> compile feature pulled from, though.</p>", "type": "rendered"}, "created_on": "2020-04-05T02:08:21.566280+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": null, "type": "issue_comment", "id": 56797368}