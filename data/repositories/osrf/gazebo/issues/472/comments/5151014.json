{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/472/comments/5151014.json"}, "html": {"href": "#!/osrf/gazebo/issues/472#comment-5151014"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/472.json"}}, "type": "issue", "id": 472, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "New shape types"}, "content": {"raw": "I'd strongly suggest providing good support for convex hulls. Collision detection between convex hulls is very efficient, and almost independent of mesh complexity when done right. Bullet uses GJK, which should be near-constant time when the bodies involved aren't moving too much relative to each other, and O(log N) worst case.\n\nTaking the convex hull of incoming mesh geometry cleans up the meshes and makes importing reliable. Also, once you have a clean convex hull, computing the volume, CG, and inertia tensor is straightforward. Look up Mirtich's code. Bullet ought to do this, but I'm not sure they do a proper inertia tensor computation. \n\nOne problem is that Bullet and Gazebo are both triangle-oriented, and GJK collision between convex hulls with coplanar triangles is ambiguous when the faces are parallel. Properly, the convex hull should have no coplanar faces. In fact, it's better if you have at least 1 degree or more of angle at each edge.  QHull can do that, but I'm not sure if the convex hull code in Bullet can.\n\nFor blowing up stuff in games, these issues tend not to matter. For accurate simulation of foot/ground contact with friction, it does.", "markup": "markdown", "html": "<p>I'd strongly suggest providing good support for convex hulls. Collision detection between convex hulls is very efficient, and almost independent of mesh complexity when done right. Bullet uses GJK, which should be near-constant time when the bodies involved aren't moving too much relative to each other, and O(log N) worst case.</p>\n<p>Taking the convex hull of incoming mesh geometry cleans up the meshes and makes importing reliable. Also, once you have a clean convex hull, computing the volume, CG, and inertia tensor is straightforward. Look up Mirtich's code. Bullet ought to do this, but I'm not sure they do a proper inertia tensor computation. </p>\n<p>One problem is that Bullet and Gazebo are both triangle-oriented, and GJK collision between convex hulls with coplanar triangles is ambiguous when the faces are parallel. Properly, the convex hull should have no coplanar faces. In fact, it's better if you have at least 1 degree or more of angle at each edge.  QHull can do that, but I'm not sure if the convex hull code in Bullet can.</p>\n<p>For blowing up stuff in games, these issues tend not to matter. For accurate simulation of foot/ground contact with friction, it does.</p>", "type": "rendered"}, "created_on": "2013-07-11T02:29:52.048400+00:00", "user": {"display_name": "John Nagle", "uuid": "{8ddbd73f-b04e-496a-8512-061410314c94}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8ddbd73f-b04e-496a-8512-061410314c94%7D"}, "html": {"href": "https://bitbucket.org/%7B8ddbd73f-b04e-496a-8512-061410314c94%7D/"}, "avatar": {"href": "https://bitbucket.org/account/nagle/avatar/"}}, "nickname": "nagle", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 5151014}