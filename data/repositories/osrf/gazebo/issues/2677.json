{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2677/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2677.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2677/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2677/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2677/compilation-fails-with-new-dartsim-release"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2677/vote"}}, "reporter": {"display_name": "Kunal Tyagi", "uuid": "{549058f2-c154-4c9c-a8ac-be524224888a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B549058f2-c154-4c9c-a8ac-be524224888a%7D"}, "html": {"href": "https://bitbucket.org/%7B549058f2-c154-4c9c-a8ac-be524224888a%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9066091b-9d3b-4f74-a7fe-d994c559b147/d36dc15c-fc09-4288-8b57-d6b17b9f6036/128"}}, "nickname": "kunaltyagi", "type": "user", "account_id": "557058:9066091b-9d3b-4f74-a7fe-d994c559b147"}, "title": "Compilation fails with new DARTsim release", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Recently, DARTsim has used C++14 features and as such compiling Gazebo fails due to `dart::make_unique` using `std::make_unique` (a c++14 feature)\r\n\r\nAs such, is there a plan to (choose one or more or a combination of)\r\n* update the gazebo CMake version (to provide support for CXX_STANDARD per property)\r\n* update the standard required for gazebosim\r\n* stick with a preferred older version of dart\r\n* supply `add_definition(-std=c++14)`\r\n\r\nAlso, compilation fails in gazebo/gazebo/physics/dart/DARTHeightmapShape.cc, lines 68 and 75\r\n```\r\n/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:834:3: error: static assertion failed: YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY\r\n  834 |   EIGEN_CHECK_BINARY_COMPATIBILIY(Func,typename ActualDstTypeCleaned::Scalar,typename Src::Scalar);\r\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nmake[2]: *** [gazebo/physics/CMakeFiles/gazebo_physics.dir/build.make:635: gazebo/physics/CMakeFiles/gazebo_physics.dir/dart/DARTHeightmapShape.cc.o] Error 1\r\n```\r\n\r\nThe solution is to used `Eigen::Vector3f` instead of `Eigen::Vector3d`", "markup": "markdown", "html": "<p>Recently, DARTsim has used C++14 features and as such compiling Gazebo fails due to <code>dart::make_unique</code> using <code>std::make_unique</code> (a c++14 feature)</p>\n<p>As such, is there a plan to (choose one or more or a combination of)\n<em> update the gazebo CMake version (to provide support for CXX_STANDARD per property)\n</em> update the standard required for gazebosim\n<em> stick with a preferred older version of dart\n</em> supply <code>add_definition(-std=c++14)</code></p>\n<p>Also, compilation fails in <a href=\"https://bitbucket.org/gazebo/gazebo\" rel=\"nofollow\" class=\"ap-connect-link\">gazebo/gazebo</a>/physics/dart/DARTHeightmapShape.cc, lines 68 and 75</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">eigen3</span><span class=\"o\">/</span><span class=\"nt\">Eigen</span><span class=\"o\">/</span><span class=\"nt\">src</span><span class=\"o\">/</span><span class=\"nt\">Core</span><span class=\"o\">/</span><span class=\"nt\">AssignEvaluator</span><span class=\"p\">.</span><span class=\"nc\">h</span><span class=\"p\">:</span><span class=\"nd\">834</span><span class=\"p\">:</span><span class=\"nd\">3</span><span class=\"o\">:</span> <span class=\"nt\">error</span><span class=\"o\">:</span> <span class=\"nt\">static</span> <span class=\"nt\">assertion</span> <span class=\"nt\">failed</span><span class=\"o\">:</span> <span class=\"nt\">YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY</span>\n  <span class=\"nt\">834</span> <span class=\"o\">|</span>   <span class=\"nt\">EIGEN_CHECK_BINARY_COMPATIBILIY</span><span class=\"o\">(</span><span class=\"nt\">Func</span><span class=\"o\">,</span><span class=\"nt\">typename</span> <span class=\"nt\">ActualDstTypeCleaned</span><span class=\"p\">::</span><span class=\"nd\">Scalar</span><span class=\"o\">,</span><span class=\"nt\">typename</span> <span class=\"nt\">Src</span><span class=\"p\">::</span><span class=\"nd\">Scalar</span><span class=\"o\">);</span>\n      <span class=\"o\">|</span>   <span class=\"o\">^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>\n<span class=\"nt\">make</span><span class=\"cp\">[</span><span class=\"mi\">2</span><span class=\"cp\">]</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"cp\">[</span><span class=\"nx\">gazebo</span><span class=\"p\">/</span><span class=\"nx\">physics</span><span class=\"p\">/</span><span class=\"nx\">CMakeFiles</span><span class=\"p\">/</span><span class=\"nx\">gazebo_physics.dir</span><span class=\"p\">/</span><span class=\"nx\">build.make</span><span class=\"p\">:</span><span class=\"mi\">635</span><span class=\"p\">:</span> <span class=\"nx\">gazebo</span><span class=\"p\">/</span><span class=\"nx\">physics</span><span class=\"p\">/</span><span class=\"nx\">CMakeFiles</span><span class=\"p\">/</span><span class=\"nx\">gazebo_physics.dir</span><span class=\"p\">/</span><span class=\"nx\">dart</span><span class=\"p\">/</span><span class=\"nx\">DARTHeightmapShape.cc.o</span><span class=\"cp\">]</span> <span class=\"nt\">Error</span> <span class=\"nt\">1</span>\n</pre></div>\n\n\n<p>The solution is to used <code>Eigen::Vector3f</code> instead of <code>Eigen::Vector3d</code></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-12-01T23:57:29.260075+00:00", "milestone": null, "updated_on": "2019-12-25T05:46:23.605698+00:00", "type": "issue", "id": 2677}