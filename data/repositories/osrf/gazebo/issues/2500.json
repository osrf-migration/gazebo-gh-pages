{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2500/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2500.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2500/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2500/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2500/multiple-ros-gpu-laser-plugins-interfere"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2500/vote"}}, "reporter": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "title": "Multiple ROS GPU laser plugins interfere", "component": {"name": "sensors::RaySensor", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122886.json"}}}, "votes": 2, "watches": 2, "content": {"raw": "I observed a strange behaviour today when testing the GPU ray sensor with a robot with multiple laser sensors: Using two different GPU laser plugins seem to cause a warped point cloud output when only one is subscribed. Although it seems to be a problem specific to the plugins used I think it could be a bug in the GpuRaySensor class. Below I provide a sample setup to reproduce it.\r\n\r\n![warped_gpu_laser.png](data/bitbucket.org/repo/jgXqbo/images/1946734069-warped_gpu_laser.png)\r\n\r\nI used the *libgazebo_ros_gpu_laser* plugin ([gazebo_plugins](https://github.com/ros-simulation/gazebo_ros_pkgs)) for a Sick 2D LiDAR sensor publishing on `/sick_points` and the *libgazebo_ros_velodyne_gpu_laser* ([velodyne_gazebo_plugins](https://bitbucket.org/DataspeedInc/velodyne_simulator/src/master/)) plugin for a Velodyne 3D LiDAR sensor publishing on `/velodyne_points` (see also attached SDF) on the same robot.\r\n\r\n**To reproduce this behaviour:**\r\n\r\n1. Use the robot defined in the attached SDF, insert it in Gazebo\r\n2. Display the output of the 2D LiDAR on topic `/sick_points`, e.g. with RVIZ. You should see a warped/faulty LaserScan (left side of the picture above)\r\n3. Only now subscribe to the other 3D LiDAR on topic `/velodyne_points`, e.g. by `rostopic echo /velodyne_points` or also via RVIZ. You should see that suddenly the 2D LaserScan is correct! (right side of the picture above).\r\n\r\nBoth plugins seem to work correctly when used separately. Also this bug does not appear when laser visualization in Gazebo is turned on.\r\n\r\nThe problem could as well be in one of the plugins but because I think the only way they could possibly interact is via the GpuRaySensor I guess it's a problem with the GpuRaySensor component.Probably subscribing to the second sensor output triggers something that fixes the output of the first sensor.\r\n\r\nDoes anyone have an idea what the problem might be?\r\n\r\nGazebo version is 7.14.0", "markup": "markdown", "html": "<p>I observed a strange behaviour today when testing the GPU ray sensor with a robot with multiple laser sensors: Using two different GPU laser plugins seem to cause a warped point cloud output when only one is subscribed. Although it seems to be a problem specific to the plugins used I think it could be a bug in the GpuRaySensor class. Below I provide a sample setup to reproduce it.</p>\n<p><img alt=\"warped_gpu_laser.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1946734069-warped_gpu_laser.png\" /></p>\n<p>I used the <em>libgazebo_ros_gpu_laser</em> plugin (<a data-is-external-link=\"true\" href=\"https://github.com/ros-simulation/gazebo_ros_pkgs\" rel=\"nofollow\">gazebo_plugins</a>) for a Sick 2D LiDAR sensor publishing on <code>/sick_points</code> and the <em>libgazebo_ros_velodyne_gpu_laser</em> (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/DataspeedInc/velodyne_simulator/src/master/\" rel=\"nofollow\">velodyne_gazebo_plugins</a>) plugin for a Velodyne 3D LiDAR sensor publishing on <code>/velodyne_points</code> (see also attached SDF) on the same robot.</p>\n<p><strong>To reproduce this behaviour:</strong></p>\n<ol>\n<li>Use the robot defined in the attached SDF, insert it in Gazebo</li>\n<li>Display the output of the 2D LiDAR on topic <code>/sick_points</code>, e.g. with RVIZ. You should see a warped/faulty LaserScan (left side of the picture above)</li>\n<li>Only now subscribe to the other 3D LiDAR on topic <code>/velodyne_points</code>, e.g. by <code>rostopic echo /velodyne_points</code> or also via RVIZ. You should see that suddenly the 2D LaserScan is correct! (right side of the picture above).</li>\n</ol>\n<p>Both plugins seem to work correctly when used separately. Also this bug does not appear when laser visualization in Gazebo is turned on.</p>\n<p>The problem could as well be in one of the plugins but because I think the only way they could possibly interact is via the GpuRaySensor I guess it's a problem with the GpuRaySensor component.Probably subscribing to the second sensor output triggers something that fixes the output of the first sensor.</p>\n<p>Does anyone have an idea what the problem might be?</p>\n<p>Gazebo version is 7.14.0</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "7.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/242744.json"}}}, "edited_on": null, "created_on": "2018-07-30T16:06:47.298643+00:00", "milestone": null, "updated_on": "2019-04-18T08:00:28.171684+00:00", "type": "issue", "id": 2500}