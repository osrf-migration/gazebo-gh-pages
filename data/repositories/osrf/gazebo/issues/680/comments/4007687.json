{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/680/comments/4007687.json"}, "html": {"href": "#!/osrf/gazebo/issues/680#comment-4007687"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/680.json"}}, "type": "issue", "id": 680, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Feet drift when standing due commit #1565dbd"}, "content": {"raw": "To try and respond to Emo's concerns,\n\n- (Emo) Good idea, but this points to a larger concern. It is taking so much tweaking of springs, dampers, friction coefficients and ODE-specific fudge factors to get the default simulation to be plausible.  In the VRC, you are planning to simulate mud and slippery ground and who knows what else. In principle you could do this by changing only the corresponding parameter,...\n    - (John) the main change proposed here is a material property adjustment, i.e. stiffness and damping coefficient for feet contacts, they should be unrelated to the underlying solver.  In principle, we try to base all solver calculations on basic dynamics, i.e. at some point it all boils down to `f=ma` :).  If there's any confusion on specific *fudge-factors* that raises concern, please bring them up for further discussion.\n- ... but in practice this may undo the careful tweaking that went into the default model. ...\n    - (John) Agreed, this change has unfortunate side-effect of potentially un-tuning team's controllers.  If the proposed change has too much of an impact on team's performance, alternate strategies will be devised; one of which could be simply not including this modification.  That said, if teams are able to adopt the changes proposed here (or some compromise), the end result is simulation of a slightly more realistic robot.\n- ... And unlike the default model, you cannot tell us what the modified parameters are so we cannot experiment in advance and complain that the simulation is unstable...\n    - (John)  I'll give it a shot at explaining changes here... the modified parameters are listed below, ***first two*** have dominant dynamics effects, while the `last two` should have smaller impact:\n        - ***kp***:  contact spring stiffness.  Proportionality constant mapping *compression* at collision site to force-due-to-compression.  The amount of *compression* is determined by collision geometry interpenetration depth at each collision.  It's unit is force per distance (N/m).\n        - ***kd***:  damping coefficient.  Similar to collision stiffness, this term creates a viscous damping force proportional to rate of change of interpenetration depth.  Its unit is force per rate of change of distance (N/(m/s)).\n        - `mu1`, `mu2`:  friction coefficients are raised from 0.9 to 1.0 to help reduce drift.  (Note:  current friction cone is approximate by a friction pyramid.  Wher `mu1` and `mu2` defines the size of the pyramid.  On Atlas, `mu1` is always applied along the robot home x-axis (i.e. heel-to-toe direction), `mu2` is orthogonal to `mu1`).\n        - `minDepth`:  margin of interpenetration before stiffness parameter takes effect.  For example, if `minDepth = 0.003m`, and interpenetration is less then 3mm, then stiffness coefficient is effectively 0, contact is solved as a pure inelastic collision with damping.\n- ... and you cannot experiment either because you don't have our controllers... and if some teams gave you their controllers in advance so you can tweak the simulation accordingly, this will be grossly unfair to the teams that did not give you their controllers (say because they don't have them yet:)\n    - (John)  Agreed.\n\n\nThank you for your feedback.\n\nBest,\nJohn", "markup": "markdown", "html": "<p>To try and respond to Emo's concerns,</p>\n<ul>\n<li>(Emo) Good idea, but this points to a larger concern. It is taking so much tweaking of springs, dampers, friction coefficients and ODE-specific fudge factors to get the default simulation to be plausible.  In the VRC, you are planning to simulate mud and slippery ground and who knows what else. In principle you could do this by changing only the corresponding parameter,...<ul>\n<li>(John) the main change proposed here is a material property adjustment, i.e. stiffness and damping coefficient for feet contacts, they should be unrelated to the underlying solver.  In principle, we try to base all solver calculations on basic dynamics, i.e. at some point it all boils down to <code>f=ma</code> :).  If there's any confusion on specific <em>fudge-factors</em> that raises concern, please bring them up for further discussion.</li>\n</ul>\n</li>\n<li>... but in practice this may undo the careful tweaking that went into the default model. ...<ul>\n<li>(John) Agreed, this change has unfortunate side-effect of potentially un-tuning team's controllers.  If the proposed change has too much of an impact on team's performance, alternate strategies will be devised; one of which could be simply not including this modification.  That said, if teams are able to adopt the changes proposed here (or some compromise), the end result is simulation of a slightly more realistic robot.</li>\n</ul>\n</li>\n<li>... And unlike the default model, you cannot tell us what the modified parameters are so we cannot experiment in advance and complain that the simulation is unstable...<ul>\n<li>(John)  I'll give it a shot at explaining changes here... the modified parameters are listed below, <strong><em>first two</em></strong> have dominant dynamics effects, while the <code>last two</code> should have smaller impact:<ul>\n<li><strong><em>kp</em></strong>:  contact spring stiffness.  Proportionality constant mapping <em>compression</em> at collision site to force-due-to-compression.  The amount of <em>compression</em> is determined by collision geometry interpenetration depth at each collision.  It's unit is force per distance (N/m).</li>\n<li><strong><em>kd</em></strong>:  damping coefficient.  Similar to collision stiffness, this term creates a viscous damping force proportional to rate of change of interpenetration depth.  Its unit is force per rate of change of distance (N/(m/s)).</li>\n<li><code>mu1</code>, <code>mu2</code>:  friction coefficients are raised from 0.9 to 1.0 to help reduce drift.  (Note:  current friction cone is approximate by a friction pyramid.  Wher <code>mu1</code> and <code>mu2</code> defines the size of the pyramid.  On Atlas, <code>mu1</code> is always applied along the robot home x-axis (i.e. heel-to-toe direction), <code>mu2</code> is orthogonal to <code>mu1</code>).</li>\n<li><code>minDepth</code>:  margin of interpenetration before stiffness parameter takes effect.  For example, if <code>minDepth = 0.003m</code>, and interpenetration is less then 3mm, then stiffness coefficient is effectively 0, contact is solved as a pure inelastic collision with damping.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>... and you cannot experiment either because you don't have our controllers... and if some teams gave you their controllers in advance so you can tweak the simulation accordingly, this will be grossly unfair to the teams that did not give you their controllers (say because they don't have them yet:)<ul>\n<li>(John)  Agreed.</li>\n</ul>\n</li>\n</ul>\n<p>Thank you for your feedback.</p>\n<p>Best,\nJohn</p>", "type": "rendered"}, "created_on": "2013-05-08T20:17:04.269021+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 4007687}