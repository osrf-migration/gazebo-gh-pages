{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/680/comments/4028852.json"}, "html": {"href": "#!/osrf/gazebo/issues/680#comment-4028852"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/680.json"}}, "type": "issue", "id": 680, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Feet drift when standing due commit #1565dbd"}, "content": {"raw": "Before considering other options here, I just wanted to double check some details.\n\nI'll admit, the original proposed stiffness change in pull request #269 might be way [too soft at 160.2 kN/m](http://youtu.be/v8lvYwFp43M), I've since updated pull request to a [stiffer contact at 1,000 kN/m](http://youtu.be/ffN3TtGLH0Q), which is 1/6 of the original stiffness (6,000 kN/m), and has an improved drift rate. \u00a0Can you confirm that you are testing with 1,000 kN/m stiffness and not 160.2 kN/m stiffness?\n\nTo check, take a look at\n~~~\n/usr/share/drcsim-2.5/gazebo_models/atlas_description/atlas_sandia_hands/atlas_sandia_hands.urdf\n~~~\nand make sure around line 4237, the blocks look like below:\n~~~\n\u00a0 <gazebo reference=\"r_foot\">\n\u00a0 \u00a0 <!-- kp and kd for rubber -->\n\u00a0 \u00a0 <kp>1000000.0</kp>\n\u00a0 \u00a0 <kd>100.0</kd>\n\u00a0 \u00a0 <mu1>1.0</mu1>\n\u00a0 \u00a0 <mu2>1.0</mu2>\n\u00a0 \u00a0 <fdir1>1 0 0</fdir1>\n\u00a0 \u00a0 <maxVel>1.0</maxVel>\n\u00a0 \u00a0 <minDepth>0.00</minDepth>\n\u00a0 </gazebo>\n\u00a0 <gazebo reference=\"l_foot\">\n\u00a0 \u00a0 <kp>1000000.0</kp>\n\u00a0 \u00a0 <kd>100.0</kd>\n\u00a0 \u00a0 <mu1>1.0</mu1>\n\u00a0 \u00a0 <mu2>1.0</mu2>\n\u00a0 \u00a0 <fdir1>1 0 0</fdir1>\n\u00a0 \u00a0 <maxVel>1.0</maxVel>\n\u00a0 \u00a0 <minDepth>0.00</minDepth>\n\u00a0 </gazebo>\n~~~\n\nPlots of foot force torque and imu sensor readings during BDI static walk are below:\n\nFoot original contact stiffness kp = 6000 kN/m:\n![6000 kN/m](#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368152275.32/680/foot_stiffness_6000000.png)\n\n\nOld proposal with foot contact stiffness kp = 160.2 kN/m, initial peak of z-force at foot contact got \"smoothed out\" (3rd row down, green lines):\n![160.2 kN/m](#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368152271.94/680/foot_stiffness_160200.png)\n\n\nHere's the new proposed foot contact stiffness kp = 1000 kN/m:\n![1000 kN/m](#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368152274.09/680/foot_stiffness_1000000.png)\n\n\nI'm resisting putting back random row reorder because I believe it was by luck of draw that the drift rate was lower before pull request #494. \u00a0The higher overshoots in contact force resolution and \u00a0mixing the constraint solution order (not solving contact normals first) happens to reduce drift in this particular simulation scenario.\nI just wanted to double check to make sure we're not making decisions based on cmake failing to regenerate updated urdf via xacros at compile time.\n\nthanks.", "markup": "markdown", "html": "<p>Before considering other options here, I just wanted to double check some details.</p>\n<p>I'll admit, the original proposed stiffness change in <a href=\"#!/osrf/gazebo/pull-requests/269/migrate-tests-files-from-test-unit-to\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #269</a> might be way <a data-is-external-link=\"true\" href=\"http://youtu.be/v8lvYwFp43M\" rel=\"nofollow\">too soft at 160.2 kN/m</a>, I've since updated pull request to a <a data-is-external-link=\"true\" href=\"http://youtu.be/ffN3TtGLH0Q\" rel=\"nofollow\">stiffer contact at 1,000 kN/m</a>, which is 1/6 of the original stiffness (6,000 kN/m), and has an improved drift rate. \u00a0Can you confirm that you are testing with 1,000 kN/m stiffness and not 160.2 kN/m stiffness?</p>\n<p>To check, take a look at</p>\n<div class=\"codehilite\"><pre><span></span>/usr/share/drcsim-2.5/gazebo_models/atlas_description/atlas_sandia_hands/atlas_sandia_hands.urdf\n</pre></div>\n\n\n<p>and make sure around line 4237, the blocks look like below:</p>\n<div class=\"codehilite\"><pre><span></span>\u00a0 <span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;r_foot&quot;</span><span class=\"nt\">&gt;</span>\n\u00a0 \u00a0 <span class=\"c\">&lt;!-- kp and kd for rubber --&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;kp&gt;</span>1000000.0<span class=\"nt\">&lt;/kp&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;kd&gt;</span>100.0<span class=\"nt\">&lt;/kd&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;mu1&gt;</span>1.0<span class=\"nt\">&lt;/mu1&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;mu2&gt;</span>1.0<span class=\"nt\">&lt;/mu2&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;fdir1&gt;</span>1 0 0<span class=\"nt\">&lt;/fdir1&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;maxVel&gt;</span>1.0<span class=\"nt\">&lt;/maxVel&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;minDepth&gt;</span>0.00<span class=\"nt\">&lt;/minDepth&gt;</span>\n\u00a0 <span class=\"nt\">&lt;/gazebo&gt;</span>\n\u00a0 <span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;l_foot&quot;</span><span class=\"nt\">&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;kp&gt;</span>1000000.0<span class=\"nt\">&lt;/kp&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;kd&gt;</span>100.0<span class=\"nt\">&lt;/kd&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;mu1&gt;</span>1.0<span class=\"nt\">&lt;/mu1&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;mu2&gt;</span>1.0<span class=\"nt\">&lt;/mu2&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;fdir1&gt;</span>1 0 0<span class=\"nt\">&lt;/fdir1&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;maxVel&gt;</span>1.0<span class=\"nt\">&lt;/maxVel&gt;</span>\n\u00a0 \u00a0 <span class=\"nt\">&lt;minDepth&gt;</span>0.00<span class=\"nt\">&lt;/minDepth&gt;</span>\n\u00a0 <span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>Plots of foot force torque and imu sensor readings during BDI static walk are below:</p>\n<p>Foot original contact stiffness kp = 6000 kN/m:\n<img alt=\"6000 kN/m\" src=\"#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368152275.32/680/foot_stiffness_6000000.png\" /></p>\n<p>Old proposal with foot contact stiffness kp = 160.2 kN/m, initial peak of z-force at foot contact got \"smoothed out\" (3rd row down, green lines):\n<img alt=\"160.2 kN/m\" src=\"#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368152271.94/680/foot_stiffness_160200.png\" /></p>\n<p>Here's the new proposed foot contact stiffness kp = 1000 kN/m:\n<img alt=\"1000 kN/m\" src=\"#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368152274.09/680/foot_stiffness_1000000.png\" /></p>\n<p>I'm resisting putting back random row reorder because I believe it was by luck of draw that the drift rate was lower before <a href=\"#!/osrf/gazebo/pull-requests/494/implement-per-collision-max-contacts-param\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #494</a>. \u00a0The higher overshoots in contact force resolution and \u00a0mixing the constraint solution order (not solving contact normals first) happens to reduce drift in this particular simulation scenario.\nI just wanted to double check to make sure we're not making decisions based on cmake failing to regenerate updated urdf via xacros at compile time.</p>\n<p>thanks.</p>", "type": "rendered"}, "created_on": "2013-05-10T03:39:26.139789+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 4028852}