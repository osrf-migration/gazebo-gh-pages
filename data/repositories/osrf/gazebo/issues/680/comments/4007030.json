{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/680/comments/4007030.json"}, "html": {"href": "#!/osrf/gazebo/issues/680#comment-4007030"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/680.json"}}, "type": "issue", "id": 680, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Feet drift when standing due commit #1565dbd"}, "content": {"raw": "The `random_row_reordering` patch (pull request #494) improves contact solution. But the added realism has the unfortunate side effect of making drift worse, just the everyday trade-off between accuracy and performance :)\n\nTo reiterate, what pull request #494 did was:\n\n - Reduce contact SOR by factor of 2 (current setting is 1.4, so it is 0.7 for contacts).  This should add to the realism of the contact physics, whereas with SOR of 1.4 for contacts, the solver was over-correcting.\n - Disables random constraint row reordering.  The randomized reordering scrambles the order in which contact normal and tangential (friction) forces are solved every 7 iterations (don't ask my why 7 :), so friction forces could be updated in the Gauss Seidel sweep before the normal force is updated in the same cycle.  This yields less realistic friction force, typically larger, leading to the slower drift.\n\nThe unfortunate *beneficial-side-effect* of constraint row reordering went away after pull request #494, which is why I think this issue on contact drift is raised.\n\nIn this case, to recover better foot drift behavior, a softer contact is required.  A plot of drift rate (mm/minute y-axis) vs. contact-stiffness-kp (N/m x-axis) is below:\n\n![drift rate (mm/min) vs. stiffness kp (N/m)](#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368039847.18/680/contact_drift_rate_vs_kp_1e6.png)\n\nAs we decrease kp, there's a sharp drop on drift rate at around kp = 3e6 N/m, and it decreases somewhat linearly after that.  I've updated pull request to kp = 1e6 N/m, which should reproduce similar drift rate to what we had before pull request #494, but the stiffness change is not so drastic.  We can put off approximating rubber stiffness until after VRC.\n\n\n\n\n", "markup": "markdown", "html": "<p>The <code>random_row_reordering</code> patch (<a href=\"#!/osrf/gazebo/pull-requests/494/implement-per-collision-max-contacts-param\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #494</a>) improves contact solution. But the added realism has the unfortunate side effect of making drift worse, just the everyday trade-off between accuracy and performance :)</p>\n<p>To reiterate, what <a href=\"#!/osrf/gazebo/pull-requests/494/implement-per-collision-max-contacts-param\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #494</a> did was:</p>\n<ul>\n<li>Reduce contact SOR by factor of 2 (current setting is 1.4, so it is 0.7 for contacts).  This should add to the realism of the contact physics, whereas with SOR of 1.4 for contacts, the solver was over-correcting.</li>\n<li>Disables random constraint row reordering.  The randomized reordering scrambles the order in which contact normal and tangential (friction) forces are solved every 7 iterations (don't ask my why 7 :), so friction forces could be updated in the Gauss Seidel sweep before the normal force is updated in the same cycle.  This yields less realistic friction force, typically larger, leading to the slower drift.</li>\n</ul>\n<p>The unfortunate <em>beneficial-side-effect</em> of constraint row reordering went away after <a href=\"#!/osrf/gazebo/pull-requests/494/implement-per-collision-max-contacts-param\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #494</a>, which is why I think this issue on contact drift is raised.</p>\n<p>In this case, to recover better foot drift behavior, a softer contact is required.  A plot of drift rate (mm/minute y-axis) vs. contact-stiffness-kp (N/m x-axis) is below:</p>\n<p><img alt=\"drift rate (mm/min) vs. stiffness kp (N/m)\" src=\"#!/osrf/gazebo/issue-attachment/680/osrf/gazebo/1368039847.18/680/contact_drift_rate_vs_kp_1e6.png\" /></p>\n<p>As we decrease kp, there's a sharp drop on drift rate at around kp = 3e6 N/m, and it decreases somewhat linearly after that.  I've updated pull request to kp = 1e6 N/m, which should reproduce similar drift rate to what we had before <a href=\"#!/osrf/gazebo/pull-requests/494/implement-per-collision-max-contacts-param\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #494</a>, but the stiffness change is not so drastic.  We can put off approximating rubber stiffness until after VRC.</p>", "type": "rendered"}, "created_on": "2013-05-08T19:03:27.525353+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2013-05-08T19:04:24.556341+00:00", "type": "issue_comment", "id": 4007030}