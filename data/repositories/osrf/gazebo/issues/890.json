{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/890/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/890.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/890/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/890/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/890/gazebo-urdf-parser-issues"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/890/vote"}}, "reporter": {"display_name": "Norman Hendrich", "uuid": "{9efb753d-9242-49b1-b338-e0eb86e50369}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9efb753d-9242-49b1-b338-e0eb86e50369%7D"}, "html": {"href": "https://bitbucket.org/%7B9efb753d-9242-49b1-b338-e0eb86e50369%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8c593ee718f9a30980f60cbd9add391cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNH-0.png"}}, "nickname": "norman_hendrich", "type": "user", "account_id": "557058:f9e2fc69-5f5e-42e2-899a-cca165739a04"}, "title": "Gazebo URDF parser issues", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi, \r\nI am trying to develop URDF for our robot(s). This is straighforward for the naked kinematics, and mostly works on Fuerte (gazebo 1.02) but is VERY annoying in Groovy and up. \r\n\r\n(Lots of gzserver crashes, then crazy searching in the log for the actual problem, and minute-long waiting until the nice very user-friendly gzserver actual decides to eventually maybe react to ctrl-c after is already dead. Whoever wrote the ctrl-c signal-handler in gzserver wastes hours of man-hours every day.)\r\n\r\n\r\n1) Why can't the URDF parser output the line-number where a problem occured in the source file?\r\n\r\n2) Why has the URDF to crash on ANY problem? Can't it just ignore any broken items in the URDF, and still (try to) load the rest of the robot?\r\nThat would help a lot.\r\n\r\n3) On any crash, the full expanded XML is appended to the error, requiring to scroll-back manually a couple of thousand lines, at least for my robot.\r\n\r\n4) The plugin documentation on the Gazebo site is crazy. It currently only lists the 1.9 plugin parameters, and the examples provided don't work on Groovy (1.5.0). This requires a lot of trial and error to try some parameters (e.g. <noise>), crash gzserver, scroll back, educated guess about what went bad this time, retry. If Hydro+1.9 is required, just TELL so on the website.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "markup": "markdown", "html": "<p>Hi, \nI am trying to develop URDF for our robot(s). This is straighforward for the naked kinematics, and mostly works on Fuerte (gazebo 1.02) but is VERY annoying in Groovy and up. </p>\n<p>(Lots of gzserver crashes, then crazy searching in the log for the actual problem, and minute-long waiting until the nice very user-friendly gzserver actual decides to eventually maybe react to ctrl-c after is already dead. Whoever wrote the ctrl-c signal-handler in gzserver wastes hours of man-hours every day.)</p>\n<p>1) Why can't the URDF parser output the line-number where a problem occured in the source file?</p>\n<p>2) Why has the URDF to crash on ANY problem? Can't it just ignore any broken items in the URDF, and still (try to) load the rest of the robot?\nThat would help a lot.</p>\n<p>3) On any crash, the full expanded XML is appended to the error, requiring to scroll-back manually a couple of thousand lines, at least for my robot.</p>\n<p>4) The plugin documentation on the Gazebo site is crazy. It currently only lists the 1.9 plugin parameters, and the examples provided don't work on Groovy (1.5.0). This requires a lot of trial and error to try some parameters (e.g. &lt;noise&gt;), crash gzserver, scroll back, educated guess about what went bad this time, retry. If Hydro+1.9 is required, just TELL so on the website.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-10-11T20:31:58.348484+00:00", "milestone": null, "updated_on": "2016-09-14T19:21:44.073742+00:00", "type": "issue", "id": 890}