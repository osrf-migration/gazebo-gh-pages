{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/553/comments/33256545.json"}, "html": {"href": "#!/osrf/gazebo/issues/553#comment-33256545"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/553.json"}}, "type": "issue", "id": 553, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Joint::GetAngle returns Angle, which is confusing for non-angular joints"}, "content": {"raw": "I'm planning on tackling this while migrating to ignition math. The plan:\n\n1. Deprecate everything which mentions \"angle\" from the base joint class:\n\n    * bool SetHighStop(unsigned int _index, const math::Angle &_angle)\n    * void SetUpperLimit(unsigned int _index, math::Angle _limit)\n\n    * bool SetLowStop(unsigned int _index, const math::Angle &_angle)\n    * void SetLowerLimit(unsigned int _index, math::Angle _limit)\n\n    * math::Angle GetHighStop(unsigned int _index)\n    * math::Angle GetUpperLimit(unsigned int _index) const\n\n    * math::Angle GetLowStop(unsigned int _index)\n    * math::Angle GetLowerLimit(unsigned int _index) const\n\n    * math::Angle GetAngle(unsigned int _index) const\n\n    * virtual unsigned int GetAngleCount() const\n\n\n1. Substitute with equivalents that return/take double. Also make the return axis 0 by default. Note that the \"*Stop\" will disappear completely.\n\n    * void SetUpperLimit(const unsigned int _index, const double _limit)\n\n    * void SetLowerLimit(const unsigned int _index, const double _limit)\n\n    * double UpperLimit(const unsigned int _index = 0) const\n\n    * double LowerLimit(const unsigned int _index = 0) const\n\n    * double Position(const unsigned int _index = 0) const\n\n    * unsigned int DOF() const\n\n1. Add functions that return angles for each rotational joint.", "markup": "markdown", "html": "<p>I'm planning on tackling this while migrating to ignition math. The plan:</p>\n<ol>\n<li>\n<p>Deprecate everything which mentions \"angle\" from the base joint class:</p>\n<ul>\n<li>bool SetHighStop(unsigned int _index, const math::Angle &amp;_angle)</li>\n<li>\n<p>void SetUpperLimit(unsigned int _index, math::Angle _limit)</p>\n</li>\n<li>\n<p>bool SetLowStop(unsigned int _index, const math::Angle &amp;_angle)</p>\n</li>\n<li>\n<p>void SetLowerLimit(unsigned int _index, math::Angle _limit)</p>\n</li>\n<li>\n<p>math::Angle GetHighStop(unsigned int _index)</p>\n</li>\n<li>\n<p>math::Angle GetUpperLimit(unsigned int _index) const</p>\n</li>\n<li>\n<p>math::Angle GetLowStop(unsigned int _index)</p>\n</li>\n<li>\n<p>math::Angle GetLowerLimit(unsigned int _index) const</p>\n</li>\n<li>\n<p>math::Angle GetAngle(unsigned int _index) const</p>\n</li>\n<li>\n<p>virtual unsigned int GetAngleCount() const</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Substitute with equivalents that return/take double. Also make the return axis 0 by default. Note that the \"*Stop\" will disappear completely.</p>\n<ul>\n<li>\n<p>void SetUpperLimit(const unsigned int _index, const double _limit)</p>\n</li>\n<li>\n<p>void SetLowerLimit(const unsigned int _index, const double _limit)</p>\n</li>\n<li>\n<p>double UpperLimit(const unsigned int _index = 0) const</p>\n</li>\n<li>\n<p>double LowerLimit(const unsigned int _index = 0) const</p>\n</li>\n<li>\n<p>double Position(const unsigned int _index = 0) const</p>\n</li>\n<li>\n<p>unsigned int DOF() const</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Add functions that return angles for each rotational joint.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2016-12-28T23:56:50.129253+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 33256545}