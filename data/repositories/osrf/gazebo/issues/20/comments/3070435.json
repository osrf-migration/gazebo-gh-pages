{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/3070435.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-3070435"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "Update:\n\n  1) Timing information from rostopic has nothing to do with sensor generation from Gazebo. rostopic report the time at which a message is received by rostopic. This is not the time when the message was produced, and it's not the time when a sensor generated data. Therefore, data from rostopic should not be used as measurement tool for simulation sensor performance.\n\n  2) The correct way to measure sensor performance is to use `gztopic view <topic_name>`. This will report the time at which sensor data has actually been generated.\n\n  3) A little research by John and Brian found that switching ROS to use UDP produces better performance when delivering messages. This change has been incorporated in to DRC 2.0.\n\n  4) It was referenced that the version of Gazebo released in ROS Electric had correct update rates. This is not true. The Gazebo ROS plugin was sending out data at the correct Hz rate, but the data was copied from the last update of the sensor. So nodes would receive duplicate data. No complaints were voiced about this.\n\nThe above reasons are why this issue was marked as minor.\n \npull request #277 has incorporated threaded sensors. I have now been able to run Atlas at 1.40x real-time with all sensors producing correct Hz rate. In fact I was getting the correct Hz rate prior to this pull-request, but now Gazebo runs a bit faster.", "markup": "markdown", "html": "<p>Update:</p>\n<p>1) Timing information from rostopic has nothing to do with sensor generation from Gazebo. rostopic report the time at which a message is received by rostopic. This is not the time when the message was produced, and it's not the time when a sensor generated data. Therefore, data from rostopic should not be used as measurement tool for simulation sensor performance.</p>\n<p>2) The correct way to measure sensor performance is to use <code>gztopic view &lt;topic_name&gt;</code>. This will report the time at which sensor data has actually been generated.</p>\n<p>3) A little research by John and Brian found that switching ROS to use UDP produces better performance when delivering messages. This change has been incorporated in to DRC 2.0.</p>\n<p>4) It was referenced that the version of Gazebo released in ROS Electric had correct update rates. This is not true. The Gazebo ROS plugin was sending out data at the correct Hz rate, but the data was copied from the last update of the sensor. So nodes would receive duplicate data. No complaints were voiced about this.</p>\n<p>The above reasons are why this issue was marked as minor.</p>\n<p><a href=\"#!/osrf/gazebo/pull-requests/277/threaded-sensors\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #277</a> has incorporated threaded sensors. I have now been able to run Atlas at 1.40x real-time with all sensors producing correct Hz rate. In fact I was getting the correct Hz rate prior to this pull-request, but now Gazebo runs a bit faster.</p>", "type": "rendered"}, "created_on": "2013-02-07T17:59:51.834737+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2013-02-07T18:00:37.321143+00:00", "type": "issue_comment", "id": 3070435}