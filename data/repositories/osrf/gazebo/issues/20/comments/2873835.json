{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2873835.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2873835"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "No, \"rostopic hz\" apparently does not use wall time. If I simulate atlas without stereo_image_proc I get about 0.5x realtime and:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~$ rostopic hz scan\nsubscribed to [/scan]\naverage rate: 33.113\n\tmin: 0.025s max: 0.050s std dev: 0.00991s window: 16\naverage rate: 34.411\n\tmin: 0.024s max: 0.050s std dev: 0.00879s window: 34\naverage rate: 33.380\n\tmin: 0.024s max: 0.051s std dev: 0.00970s window: 49\n```\n\nSwitching on stereo_image_proc I get about 0.27x realtime and\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~$ rostopic hz scan\nsubscribed to [/scan]\naverage rate: 28.037\n\tmin: 0.025s max: 0.055s std dev: 0.01209s window: 7\naverage rate: 27.197\n\tmin: 0.025s max: 0.055s std dev: 0.01042s window: 14\naverage rate: 29.494\n\tmin: 0.024s max: 0.055s std dev: 0.00949s window: 22\naverage rate: 27.455\n\n```\n\nSo let's agree that rostopic uses \"some time\" ;) for estimating the frequency, it might not be sim time, it most certainly also is not wall time.\n\nTo get a valid sim time measurement I switched to rosbag, recording data and then putting out the frequency of scan messages.\nWithout subscribing to point cloud data I get 40Hz, which is good:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq no_pc.bag \npath:        no_pc.bag\nversion:     2.0\nduration:    11.3s\nstart:       Jan 01 1970 01:07:55.08 (475.08)\nend:         Jan 01 1970 01:08:06.34 (486.34)\nsize:        2.1 MB\nmessages:    377\ncompression: none [3/3 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   377 msgs @ 40.0 Hz : sensor_msgs/LaserScan\n```\n\nSubscribing to point cloud data before recording, I get 32Hz:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq with_pc.bag \npath:        with_pc.bag\nversion:     2.0\nduration:    10.4s\nstart:       Jan 01 1970 01:08:15.70 (495.70)\nend:         Jan 01 1970 01:08:26.15 (506.15)\nsize:        1.7 MB\nmessages:    305\ncompression: none [3/3 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   305 msgs @ 32.3 Hz : sensor_msgs/LaserScan\n```\n\nWill do a fuerte test later.\n\n\n \n", "markup": "markdown", "html": "<p>No, \"rostopic hz\" apparently does not use wall time. If I simulate atlas without stereo_image_proc I get about 0.5x realtime and:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~</span><span class=\"err\">$</span> <span class=\"n\">rostopic</span> <span class=\"n\">hz</span> <span class=\"n\">scan</span>\n<span class=\"n\">subscribed</span> <span class=\"n\">to</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">scan</span><span class=\"p\">]</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">33.113</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.025</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.050</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00991</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">16</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">34.411</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.024</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.050</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00879</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">34</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">33.380</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.024</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.051</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00970</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">49</span>\n</pre></div>\n\n\n<p>Switching on stereo_image_proc I get about 0.27x realtime and</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~</span><span class=\"err\">$</span> <span class=\"n\">rostopic</span> <span class=\"n\">hz</span> <span class=\"n\">scan</span>\n<span class=\"n\">subscribed</span> <span class=\"n\">to</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">scan</span><span class=\"p\">]</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">28.037</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.025</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.055</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.01209</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">7</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">27.197</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.025</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.055</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.01042</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">14</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">29.494</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.024</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.055</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00949</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">22</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">27.455</span>\n</pre></div>\n\n\n<p>So let's agree that rostopic uses \"some time\" ;) for estimating the frequency, it might not be sim time, it most certainly also is not wall time.</p>\n<p>To get a valid sim time measurement I switched to rosbag, recording data and then putting out the frequency of scan messages.\nWithout subscribing to point cloud data I get 40Hz, which is good:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">tmp</span><span class=\"err\">$</span> <span class=\"n\">rosbag</span> <span class=\"n\">info</span> <span class=\"o\">--</span><span class=\"n\">freq</span> <span class=\"n\">no_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span> \n<span class=\"nl\">path</span><span class=\"p\">:</span>        <span class=\"n\">no_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span>\n<span class=\"nl\">version</span><span class=\"p\">:</span>     <span class=\"mf\">2.0</span>\n<span class=\"nl\">duration</span><span class=\"p\">:</span>    <span class=\"mf\">11.3</span><span class=\"n\">s</span>\n<span class=\"nl\">start</span><span class=\"p\">:</span>       <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">07</span><span class=\"o\">:</span><span class=\"mf\">55.08</span> <span class=\"p\">(</span><span class=\"mf\">475.08</span><span class=\"p\">)</span>\n<span class=\"nl\">end</span><span class=\"p\">:</span>         <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mi\">08</span><span class=\"o\">:</span><span class=\"mf\">06.34</span> <span class=\"p\">(</span><span class=\"mf\">486.34</span><span class=\"p\">)</span>\n<span class=\"nl\">size</span><span class=\"p\">:</span>        <span class=\"mf\">2.1</span> <span class=\"n\">MB</span>\n<span class=\"nl\">messages</span><span class=\"p\">:</span>    <span class=\"mi\">377</span>\n<span class=\"nl\">compression</span><span class=\"p\">:</span> <span class=\"n\">none</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">3</span> <span class=\"n\">chunks</span><span class=\"p\">]</span>\n<span class=\"nl\">types</span><span class=\"p\">:</span>       <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"n\">c7ef2dc6895d81024acba2ac42f369</span><span class=\"p\">]</span>\n<span class=\"nl\">topics</span><span class=\"p\">:</span>      <span class=\"n\">scan</span>   <span class=\"mi\">377</span> <span class=\"n\">msgs</span> <span class=\"err\">@</span> <span class=\"mf\">40.0</span> <span class=\"nl\">Hz</span> <span class=\"p\">:</span> <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span>\n</pre></div>\n\n\n<p>Subscribing to point cloud data before recording, I get 32Hz:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">tmp</span><span class=\"err\">$</span> <span class=\"n\">rosbag</span> <span class=\"n\">info</span> <span class=\"o\">--</span><span class=\"n\">freq</span> <span class=\"n\">with_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span> \n<span class=\"nl\">path</span><span class=\"p\">:</span>        <span class=\"n\">with_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span>\n<span class=\"nl\">version</span><span class=\"p\">:</span>     <span class=\"mf\">2.0</span>\n<span class=\"nl\">duration</span><span class=\"p\">:</span>    <span class=\"mf\">10.4</span><span class=\"n\">s</span>\n<span class=\"nl\">start</span><span class=\"p\">:</span>       <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mi\">08</span><span class=\"o\">:</span><span class=\"mf\">15.70</span> <span class=\"p\">(</span><span class=\"mf\">495.70</span><span class=\"p\">)</span>\n<span class=\"nl\">end</span><span class=\"p\">:</span>         <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mi\">08</span><span class=\"o\">:</span><span class=\"mf\">26.15</span> <span class=\"p\">(</span><span class=\"mf\">506.15</span><span class=\"p\">)</span>\n<span class=\"nl\">size</span><span class=\"p\">:</span>        <span class=\"mf\">1.7</span> <span class=\"n\">MB</span>\n<span class=\"nl\">messages</span><span class=\"p\">:</span>    <span class=\"mi\">305</span>\n<span class=\"nl\">compression</span><span class=\"p\">:</span> <span class=\"n\">none</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">3</span> <span class=\"n\">chunks</span><span class=\"p\">]</span>\n<span class=\"nl\">types</span><span class=\"p\">:</span>       <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"n\">c7ef2dc6895d81024acba2ac42f369</span><span class=\"p\">]</span>\n<span class=\"nl\">topics</span><span class=\"p\">:</span>      <span class=\"n\">scan</span>   <span class=\"mi\">305</span> <span class=\"n\">msgs</span> <span class=\"err\">@</span> <span class=\"mf\">32.3</span> <span class=\"nl\">Hz</span> <span class=\"p\">:</span> <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span>\n</pre></div>\n\n\n<p>Will do a fuerte test later.</p>", "type": "rendered"}, "created_on": "2013-01-18T07:48:18.437805+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": "2013-01-18T07:48:48.196742+00:00", "type": "issue_comment", "id": 2873835}