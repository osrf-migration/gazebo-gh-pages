{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/1996445.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-1996445"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "creole", "html": "", "type": "rendered"}, "created_on": "2012-09-18T23:41:56.170640+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 1996445}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/1996446.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-1996446"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "creole", "html": "", "type": "rendered"}, "created_on": "2012-09-18T23:42:10.197242+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 1996446}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2112235.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2112235"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "creole", "html": "", "type": "rendered"}, "created_on": "2012-10-08T17:23:55.402749+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 2112235}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2159059.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2159059"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "Are there news on this issue? This IMHO definitely is no minor issue and apparently affects simulation quality for every user simulating LIDARs. I causes a slower than intended update rate that is hard to notice if not explicitly looked for and that will break or silently degrade performance of systems relying on the requested update rate.\nThis issue is also the single reason why we are still stuck with electric, as sensor simulation in fuerte can be considered broken unless this is fixed.", "markup": "markdown", "html": "<p>Are there news on this issue? This IMHO definitely is no minor issue and apparently affects simulation quality for every user simulating LIDARs. I causes a slower than intended update rate that is hard to notice if not explicitly looked for and that will break or silently degrade performance of systems relying on the requested update rate.\nThis issue is also the single reason why we are still stuck with electric, as sensor simulation in fuerte can be considered broken unless this is fixed.</p>", "type": "rendered"}, "created_on": "2012-10-15T08:25:04.471421+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": null, "type": "issue_comment", "id": 2159059}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2430791.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2430791"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2012-11-20T07:18:07.371845+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 2430791}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2430801.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2430801"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2012-11-20T07:20:57.873133+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 2430801}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2592467.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2592467"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "It's not as bad as Fuerte anymore but I still only get 32.5Hz instead of 40 on the drc robot.", "markup": "markdown", "html": "<p>It's not as bad as Fuerte anymore but I still only get 32.5Hz instead of 40 on the drc robot.</p>", "type": "rendered"}, "created_on": "2012-12-10T22:20:16.850030+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 2592467}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2868135.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2868135"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "Some measured data along with related questions [on answers.gazebosim](http://answers.gazebosim.org/question/890/laser-scanner-update-rate-on-fuerte-completely/).", "markup": "markdown", "html": "<p>Some measured data along with related questions <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/890/laser-scanner-update-rate-on-fuerte-completely/\" rel=\"nofollow\">on answers.gazebosim</a>.</p>", "type": "rendered"}, "created_on": "2013-01-17T15:53:32.226501+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": null, "type": "issue_comment", "id": 2868135}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2873214.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2873214"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "I believe that you are looking at the wrong information.\n\nrostopic reports a Hz rate according to the wall clock time that a message is received. Gazebo on the other hand generates sensor data based on simulation time, which can be much slower than real time.\n\nThe best way to measure hz rate for a laser or camera message is to look at the time stamp associated with the message. The can be done with:\n\ngztopic view <laser_or_camera_topic>\n\nNote that the above command will only work with Gazebo 1.4+.\n\nAs a test, I create a world with 4 cameras, 1 PR2, and an additional hokuyo. The total topics include 14 cameras streams, 3 laser streams, 7 contact streams, and more. I subscribe to them all, and they all produce data at the specified Hz rate - according to simulation time.\n\nWe are working on making Gazebo run faster. However, right now we have to simulate a physical world, simulate sensor data, and (optionally) run ROS on a single PC.", "markup": "markdown", "html": "<p>I believe that you are looking at the wrong information.</p>\n<p>rostopic reports a Hz rate according to the wall clock time that a message is received. Gazebo on the other hand generates sensor data based on simulation time, which can be much slower than real time.</p>\n<p>The best way to measure hz rate for a laser or camera message is to look at the time stamp associated with the message. The can be done with:</p>\n<p>gztopic view &lt;laser_or_camera_topic&gt;</p>\n<p>Note that the above command will only work with Gazebo 1.4+.</p>\n<p>As a test, I create a world with 4 cameras, 1 PR2, and an additional hokuyo. The total topics include 14 cameras streams, 3 laser streams, 7 contact streams, and more. I subscribe to them all, and they all produce data at the specified Hz rate - according to simulation time.</p>\n<p>We are working on making Gazebo run faster. However, right now we have to simulate a physical world, simulate sensor data, and (optionally) run ROS on a single PC.</p>", "type": "rendered"}, "created_on": "2013-01-18T05:40:57.761783+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 2873214}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2873217.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2873217"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2013-01-18T05:41:16.532329+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 2873217}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2873835.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2873835"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "No, \"rostopic hz\" apparently does not use wall time. If I simulate atlas without stereo_image_proc I get about 0.5x realtime and:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~$ rostopic hz scan\nsubscribed to [/scan]\naverage rate: 33.113\n\tmin: 0.025s max: 0.050s std dev: 0.00991s window: 16\naverage rate: 34.411\n\tmin: 0.024s max: 0.050s std dev: 0.00879s window: 34\naverage rate: 33.380\n\tmin: 0.024s max: 0.051s std dev: 0.00970s window: 49\n```\n\nSwitching on stereo_image_proc I get about 0.27x realtime and\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~$ rostopic hz scan\nsubscribed to [/scan]\naverage rate: 28.037\n\tmin: 0.025s max: 0.055s std dev: 0.01209s window: 7\naverage rate: 27.197\n\tmin: 0.025s max: 0.055s std dev: 0.01042s window: 14\naverage rate: 29.494\n\tmin: 0.024s max: 0.055s std dev: 0.00949s window: 22\naverage rate: 27.455\n\n```\n\nSo let's agree that rostopic uses \"some time\" ;) for estimating the frequency, it might not be sim time, it most certainly also is not wall time.\n\nTo get a valid sim time measurement I switched to rosbag, recording data and then putting out the frequency of scan messages.\nWithout subscribing to point cloud data I get 40Hz, which is good:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq no_pc.bag \npath:        no_pc.bag\nversion:     2.0\nduration:    11.3s\nstart:       Jan 01 1970 01:07:55.08 (475.08)\nend:         Jan 01 1970 01:08:06.34 (486.34)\nsize:        2.1 MB\nmessages:    377\ncompression: none [3/3 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   377 msgs @ 40.0 Hz : sensor_msgs/LaserScan\n```\n\nSubscribing to point cloud data before recording, I get 32Hz:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq with_pc.bag \npath:        with_pc.bag\nversion:     2.0\nduration:    10.4s\nstart:       Jan 01 1970 01:08:15.70 (495.70)\nend:         Jan 01 1970 01:08:26.15 (506.15)\nsize:        1.7 MB\nmessages:    305\ncompression: none [3/3 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   305 msgs @ 32.3 Hz : sensor_msgs/LaserScan\n```\n\nWill do a fuerte test later.\n\n\n \n", "markup": "markdown", "html": "<p>No, \"rostopic hz\" apparently does not use wall time. If I simulate atlas without stereo_image_proc I get about 0.5x realtime and:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~</span><span class=\"err\">$</span> <span class=\"n\">rostopic</span> <span class=\"n\">hz</span> <span class=\"n\">scan</span>\n<span class=\"n\">subscribed</span> <span class=\"n\">to</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">scan</span><span class=\"p\">]</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">33.113</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.025</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.050</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00991</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">16</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">34.411</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.024</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.050</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00879</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">34</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">33.380</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.024</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.051</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00970</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">49</span>\n</pre></div>\n\n\n<p>Switching on stereo_image_proc I get about 0.27x realtime and</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~</span><span class=\"err\">$</span> <span class=\"n\">rostopic</span> <span class=\"n\">hz</span> <span class=\"n\">scan</span>\n<span class=\"n\">subscribed</span> <span class=\"n\">to</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">scan</span><span class=\"p\">]</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">28.037</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.025</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.055</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.01209</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">7</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">27.197</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.025</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.055</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.01042</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">14</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">29.494</span>\n    <span class=\"nl\">min</span><span class=\"p\">:</span> <span class=\"mf\">0.024</span><span class=\"n\">s</span> <span class=\"nl\">max</span><span class=\"p\">:</span> <span class=\"mf\">0.055</span><span class=\"n\">s</span> <span class=\"n\">std</span> <span class=\"nl\">dev</span><span class=\"p\">:</span> <span class=\"mf\">0.00949</span><span class=\"n\">s</span> <span class=\"nl\">window</span><span class=\"p\">:</span> <span class=\"mi\">22</span>\n<span class=\"n\">average</span> <span class=\"nl\">rate</span><span class=\"p\">:</span> <span class=\"mf\">27.455</span>\n</pre></div>\n\n\n<p>So let's agree that rostopic uses \"some time\" ;) for estimating the frequency, it might not be sim time, it most certainly also is not wall time.</p>\n<p>To get a valid sim time measurement I switched to rosbag, recording data and then putting out the frequency of scan messages.\nWithout subscribing to point cloud data I get 40Hz, which is good:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">tmp</span><span class=\"err\">$</span> <span class=\"n\">rosbag</span> <span class=\"n\">info</span> <span class=\"o\">--</span><span class=\"n\">freq</span> <span class=\"n\">no_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span> \n<span class=\"nl\">path</span><span class=\"p\">:</span>        <span class=\"n\">no_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span>\n<span class=\"nl\">version</span><span class=\"p\">:</span>     <span class=\"mf\">2.0</span>\n<span class=\"nl\">duration</span><span class=\"p\">:</span>    <span class=\"mf\">11.3</span><span class=\"n\">s</span>\n<span class=\"nl\">start</span><span class=\"p\">:</span>       <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">07</span><span class=\"o\">:</span><span class=\"mf\">55.08</span> <span class=\"p\">(</span><span class=\"mf\">475.08</span><span class=\"p\">)</span>\n<span class=\"nl\">end</span><span class=\"p\">:</span>         <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mi\">08</span><span class=\"o\">:</span><span class=\"mf\">06.34</span> <span class=\"p\">(</span><span class=\"mf\">486.34</span><span class=\"p\">)</span>\n<span class=\"nl\">size</span><span class=\"p\">:</span>        <span class=\"mf\">2.1</span> <span class=\"n\">MB</span>\n<span class=\"nl\">messages</span><span class=\"p\">:</span>    <span class=\"mi\">377</span>\n<span class=\"nl\">compression</span><span class=\"p\">:</span> <span class=\"n\">none</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">3</span> <span class=\"n\">chunks</span><span class=\"p\">]</span>\n<span class=\"nl\">types</span><span class=\"p\">:</span>       <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"n\">c7ef2dc6895d81024acba2ac42f369</span><span class=\"p\">]</span>\n<span class=\"nl\">topics</span><span class=\"p\">:</span>      <span class=\"n\">scan</span>   <span class=\"mi\">377</span> <span class=\"n\">msgs</span> <span class=\"err\">@</span> <span class=\"mf\">40.0</span> <span class=\"nl\">Hz</span> <span class=\"p\">:</span> <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span>\n</pre></div>\n\n\n<p>Subscribing to point cloud data before recording, I get 32Hz:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">tmp</span><span class=\"err\">$</span> <span class=\"n\">rosbag</span> <span class=\"n\">info</span> <span class=\"o\">--</span><span class=\"n\">freq</span> <span class=\"n\">with_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span> \n<span class=\"nl\">path</span><span class=\"p\">:</span>        <span class=\"n\">with_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span>\n<span class=\"nl\">version</span><span class=\"p\">:</span>     <span class=\"mf\">2.0</span>\n<span class=\"nl\">duration</span><span class=\"p\">:</span>    <span class=\"mf\">10.4</span><span class=\"n\">s</span>\n<span class=\"nl\">start</span><span class=\"p\">:</span>       <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mi\">08</span><span class=\"o\">:</span><span class=\"mf\">15.70</span> <span class=\"p\">(</span><span class=\"mf\">495.70</span><span class=\"p\">)</span>\n<span class=\"nl\">end</span><span class=\"p\">:</span>         <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mi\">08</span><span class=\"o\">:</span><span class=\"mf\">26.15</span> <span class=\"p\">(</span><span class=\"mf\">506.15</span><span class=\"p\">)</span>\n<span class=\"nl\">size</span><span class=\"p\">:</span>        <span class=\"mf\">1.7</span> <span class=\"n\">MB</span>\n<span class=\"nl\">messages</span><span class=\"p\">:</span>    <span class=\"mi\">305</span>\n<span class=\"nl\">compression</span><span class=\"p\">:</span> <span class=\"n\">none</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">3</span> <span class=\"n\">chunks</span><span class=\"p\">]</span>\n<span class=\"nl\">types</span><span class=\"p\">:</span>       <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"n\">c7ef2dc6895d81024acba2ac42f369</span><span class=\"p\">]</span>\n<span class=\"nl\">topics</span><span class=\"p\">:</span>      <span class=\"n\">scan</span>   <span class=\"mi\">305</span> <span class=\"n\">msgs</span> <span class=\"err\">@</span> <span class=\"mf\">32.3</span> <span class=\"nl\">Hz</span> <span class=\"p\">:</span> <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span>\n</pre></div>\n\n\n<p>Will do a fuerte test later.</p>", "type": "rendered"}, "created_on": "2013-01-18T07:48:18.437805+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": "2013-01-18T07:48:48.196742+00:00", "type": "issue_comment", "id": 2873835}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2874019.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2874019"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "Fuerte (same scenario as described in OP here: http://answers.gazebosim.org/question/890/laser-scanner-update-rate-on-fuerte-completely/ )\n\nAgain, update rate for LIDAR plugin s set to 40 Hz.\n\nWithout image or pointcloud subscription:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq hlugv_laser_only.bag \npath:        hlugv_laser_only.bag\nversion:     2.0\nduration:    37.5s\nstart:       Jan 01 1970 01:02:32.52 (152.52)\nend:         Jan 01 1970 01:03:10.00 (190.00)\nsize:        9.2 MB\nmessages:    1100\ncompression: none [13/13 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   1100 msgs @ 31.2 Hz : sensor_msgs/LaserScan\n```\n\nSubscribing to camera images:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq hlugv_image.bag \npath:        hlugv_image.bag\nversion:     2.0\nduration:    57.4s\nstart:       Jan 01 1970 01:03:48.39 (228.39)\nend:         Jan 01 1970 01:04:45.76 (285.76)\nsize:        8.6 MB\nmessages:    1030\ncompression: none [12/12 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   1030 msgs @ 20.4 Hz : sensor_msgs/LaserScan\n```\n\nSubscribing to both camera images and point clouds:\n\n\n```\n#!c++\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq hlugv_image_pc.bag \npath:        hlugv_image_pc.bag\nversion:     2.0\nduration:    1:32s (92s)\nstart:       Jan 01 1970 01:05:36.87 (336.87)\nend:         Jan 01 1970 01:07:09.17 (429.17)\nsize:        9.8 MB\nmessages:    1176\ncompression: none [14/14 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   1176 msgs @ 18.5 Hz : sensor_msgs/LaserScan\n```\n\nI think we can agree that this looks broken, and to me this definitely is not a minor issue, because our USAR robots worked flawless in simulation in electric and stopped doing that in fuerte because of this. My question is if this will be fixed on fuerte, or if we should skip to groovy.\nI know you guys have a lot of things to do and everything you do really is much appreciated. But we have to decide on which ROS/Gazebo version to use for some projects, so a comment on the treatment of this issue in fuerte would be great.\n\n", "markup": "markdown", "html": "<p>Fuerte (same scenario as described in OP here: <a href=\"http://answers.gazebosim.org/question/890/laser-scanner-update-rate-on-fuerte-completely/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/question/890/laser-scanner-update-rate-on-fuerte-completely/</a> )</p>\n<p>Again, update rate for LIDAR plugin s set to 40 Hz.</p>\n<p>Without image or pointcloud subscription:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">tmp</span><span class=\"err\">$</span> <span class=\"n\">rosbag</span> <span class=\"n\">info</span> <span class=\"o\">--</span><span class=\"n\">freq</span> <span class=\"n\">hlugv_laser_only</span><span class=\"p\">.</span><span class=\"n\">bag</span> \n<span class=\"nl\">path</span><span class=\"p\">:</span>        <span class=\"n\">hlugv_laser_only</span><span class=\"p\">.</span><span class=\"n\">bag</span>\n<span class=\"nl\">version</span><span class=\"p\">:</span>     <span class=\"mf\">2.0</span>\n<span class=\"nl\">duration</span><span class=\"p\">:</span>    <span class=\"mf\">37.5</span><span class=\"n\">s</span>\n<span class=\"nl\">start</span><span class=\"p\">:</span>       <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">02</span><span class=\"o\">:</span><span class=\"mf\">32.52</span> <span class=\"p\">(</span><span class=\"mf\">152.52</span><span class=\"p\">)</span>\n<span class=\"nl\">end</span><span class=\"p\">:</span>         <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">03</span><span class=\"o\">:</span><span class=\"mf\">10.00</span> <span class=\"p\">(</span><span class=\"mf\">190.00</span><span class=\"p\">)</span>\n<span class=\"nl\">size</span><span class=\"p\">:</span>        <span class=\"mf\">9.2</span> <span class=\"n\">MB</span>\n<span class=\"nl\">messages</span><span class=\"p\">:</span>    <span class=\"mi\">1100</span>\n<span class=\"nl\">compression</span><span class=\"p\">:</span> <span class=\"n\">none</span> <span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"o\">/</span><span class=\"mi\">13</span> <span class=\"n\">chunks</span><span class=\"p\">]</span>\n<span class=\"nl\">types</span><span class=\"p\">:</span>       <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"n\">c7ef2dc6895d81024acba2ac42f369</span><span class=\"p\">]</span>\n<span class=\"nl\">topics</span><span class=\"p\">:</span>      <span class=\"n\">scan</span>   <span class=\"mi\">1100</span> <span class=\"n\">msgs</span> <span class=\"err\">@</span> <span class=\"mf\">31.2</span> <span class=\"nl\">Hz</span> <span class=\"p\">:</span> <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span>\n</pre></div>\n\n\n<p>Subscribing to camera images:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">tmp</span><span class=\"err\">$</span> <span class=\"n\">rosbag</span> <span class=\"n\">info</span> <span class=\"o\">--</span><span class=\"n\">freq</span> <span class=\"n\">hlugv_image</span><span class=\"p\">.</span><span class=\"n\">bag</span> \n<span class=\"nl\">path</span><span class=\"p\">:</span>        <span class=\"n\">hlugv_image</span><span class=\"p\">.</span><span class=\"n\">bag</span>\n<span class=\"nl\">version</span><span class=\"p\">:</span>     <span class=\"mf\">2.0</span>\n<span class=\"nl\">duration</span><span class=\"p\">:</span>    <span class=\"mf\">57.4</span><span class=\"n\">s</span>\n<span class=\"nl\">start</span><span class=\"p\">:</span>       <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">03</span><span class=\"o\">:</span><span class=\"mf\">48.39</span> <span class=\"p\">(</span><span class=\"mf\">228.39</span><span class=\"p\">)</span>\n<span class=\"nl\">end</span><span class=\"p\">:</span>         <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">04</span><span class=\"o\">:</span><span class=\"mf\">45.76</span> <span class=\"p\">(</span><span class=\"mf\">285.76</span><span class=\"p\">)</span>\n<span class=\"nl\">size</span><span class=\"p\">:</span>        <span class=\"mf\">8.6</span> <span class=\"n\">MB</span>\n<span class=\"nl\">messages</span><span class=\"p\">:</span>    <span class=\"mi\">1030</span>\n<span class=\"nl\">compression</span><span class=\"p\">:</span> <span class=\"n\">none</span> <span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"o\">/</span><span class=\"mi\">12</span> <span class=\"n\">chunks</span><span class=\"p\">]</span>\n<span class=\"nl\">types</span><span class=\"p\">:</span>       <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"n\">c7ef2dc6895d81024acba2ac42f369</span><span class=\"p\">]</span>\n<span class=\"nl\">topics</span><span class=\"p\">:</span>      <span class=\"n\">scan</span>   <span class=\"mi\">1030</span> <span class=\"n\">msgs</span> <span class=\"err\">@</span> <span class=\"mf\">20.4</span> <span class=\"nl\">Hz</span> <span class=\"p\">:</span> <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span>\n</pre></div>\n\n\n<p>Subscribing to both camera images and point clouds:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">kohlbrecher</span><span class=\"err\">@</span><span class=\"nl\">opstation</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">tmp</span><span class=\"err\">$</span> <span class=\"n\">rosbag</span> <span class=\"n\">info</span> <span class=\"o\">--</span><span class=\"n\">freq</span> <span class=\"n\">hlugv_image_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span> \n<span class=\"nl\">path</span><span class=\"p\">:</span>        <span class=\"n\">hlugv_image_pc</span><span class=\"p\">.</span><span class=\"n\">bag</span>\n<span class=\"nl\">version</span><span class=\"p\">:</span>     <span class=\"mf\">2.0</span>\n<span class=\"nl\">duration</span><span class=\"p\">:</span>    <span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">32</span><span class=\"n\">s</span> <span class=\"p\">(</span><span class=\"mi\">92</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"nl\">start</span><span class=\"p\">:</span>       <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">05</span><span class=\"o\">:</span><span class=\"mf\">36.87</span> <span class=\"p\">(</span><span class=\"mf\">336.87</span><span class=\"p\">)</span>\n<span class=\"nl\">end</span><span class=\"p\">:</span>         <span class=\"n\">Jan</span> <span class=\"mo\">01</span> <span class=\"mi\">1970</span> <span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">07</span><span class=\"o\">:</span><span class=\"mf\">09.17</span> <span class=\"p\">(</span><span class=\"mf\">429.17</span><span class=\"p\">)</span>\n<span class=\"nl\">size</span><span class=\"p\">:</span>        <span class=\"mf\">9.8</span> <span class=\"n\">MB</span>\n<span class=\"nl\">messages</span><span class=\"p\">:</span>    <span class=\"mi\">1176</span>\n<span class=\"nl\">compression</span><span class=\"p\">:</span> <span class=\"n\">none</span> <span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"o\">/</span><span class=\"mi\">14</span> <span class=\"n\">chunks</span><span class=\"p\">]</span>\n<span class=\"nl\">types</span><span class=\"p\">:</span>       <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"n\">c7ef2dc6895d81024acba2ac42f369</span><span class=\"p\">]</span>\n<span class=\"nl\">topics</span><span class=\"p\">:</span>      <span class=\"n\">scan</span>   <span class=\"mi\">1176</span> <span class=\"n\">msgs</span> <span class=\"err\">@</span> <span class=\"mf\">18.5</span> <span class=\"nl\">Hz</span> <span class=\"p\">:</span> <span class=\"n\">sensor_msgs</span><span class=\"o\">/</span><span class=\"n\">LaserScan</span>\n</pre></div>\n\n\n<p>I think we can agree that this looks broken, and to me this definitely is not a minor issue, because our USAR robots worked flawless in simulation in electric and stopped doing that in fuerte because of this. My question is if this will be fixed on fuerte, or if we should skip to groovy.\nI know you guys have a lot of things to do and everything you do really is much appreciated. But we have to decide on which ROS/Gazebo version to use for some projects, so a comment on the treatment of this issue in fuerte would be great.</p>", "type": "rendered"}, "created_on": "2013-01-18T08:21:12.091932+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": null, "type": "issue_comment", "id": 2874019}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2878369.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2878369"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "My results from running Atlas:\n\nhead_hokuyo_sensor: ~40Hz ( fluctates from ~37 to 41 hz)\n\nleft_camera_sensor: ~14Hz (it can fluctuate from 13-17)\n\nI will try more to reproduce your results.\nright_camera_sensor: ~14Hz (it can fluctuate from 13-17)\n", "markup": "markdown", "html": "<p>My results from running Atlas:</p>\n<p>head_hokuyo_sensor: ~40Hz ( fluctates from ~37 to 41 hz)</p>\n<p>left_camera_sensor: ~14Hz (it can fluctuate from 13-17)</p>\n<p>I will try more to reproduce your results.\nright_camera_sensor: ~14Hz (it can fluctuate from 13-17)</p>", "type": "rendered"}, "created_on": "2013-01-18T16:58:03.983781+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2013-01-18T16:59:19.421089+00:00", "type": "issue_comment", "id": 2878369}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/2894064.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-2894064"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "Ok, to get more reproducibility:\nI'm on a Ubuntu 12.04 AMD64 machine, Core I5 (i5-2430M CPU @ 2.40GHz, Nvidia GeForce GT 540M). ROS Fuerte/Gazebo/drcsim installed from (their respective) .debs.\n\nHow I tested:\n\nStarted Atlas:\n\n\n```\n#!\n\nroslaunch atlas_utils atlas.launch\n```\n\nNew terminal, start a subscriber for scans (so recording via bagfile doesn't incur recording start overhead/delay when no scans have been subscribed before):\n\n\n```\n#!\n\nrostopic hz scan\n```\n\nRecord a bagfile of 1000 scans:\n\n\n```\n#!\n\nrosbag record --l 1000 scan\n```\n\nOptionally in new terminal, to increase load and also start up image publishers:\n\n\n```\n#!\n\nrostopic hz /multisense_sl/points2\n```\n\nThen, again record bag file:\n\n```\n#!\n\nrosbag record --l 1000 scan\n```\n\nOn my machine I then get the following using the 'info --freq' bagfile option:\n\nOnly scan subscribed:\n\n\n```\n#!\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_only.bag \npath:        atlas_scan_only.bag\nversion:     2.0\nduration:    28.6s\nstart:       Jan 01 1970 01:05:49.36 (349.36)\nend:         Jan 01 1970 01:06:17.00 (378.00)\nsize:        5.6 MB\nmessages:    1000\ncompression: none [8/8 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   1000 msgs @ 38.5 Hz : sensor_msgs/LaserScan\n```\n\n\nAlso subscribing to pointcloud data:\n\n\n```\n#!\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_pc2_subscribed.bag \npath:        atlas_scan_pc2_subscribed.bag\nversion:     2.0\nduration:    35.4s\nstart:       Jan 01 1970 01:07:34.03 (454.03)\nend:         Jan 01 1970 01:08:09.41 (489.41)\nsize:        5.6 MB\nmessages:    1000\ncompression: none [8/8 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   1000 msgs @ 30.3 Hz : sensor_msgs/LaserScan\n```\n\nI also recorded versions of both tests with both /scan and /clock. Interestingly, the frequency numbers exactly match those of the same test without clock data, suggesting that jitter doesn't play an important role.\n\n\n```\n#!\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_clock_only.bag \npath:        atlas_scan_clock_only.bag\nversion:     2.0\nduration:    28.8s\nstart:       Jan 01 1970 01:06:37.09 (397.09)\nend:         Jan 01 1970 01:07:05.92 (425.92)\nsize:        5.7 MB\nmessages:    2000\ncompression: none [8/8 chunks]\ntypes:       rosgraph_msgs/Clock   [a9c97c1d230cfc112e270351a944ee47]\n             sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      clock   1000 msgs @ 1.0 kHz : rosgraph_msgs/Clock  \n             scan    1000 msgs @ 38.5 Hz : sensor_msgs/LaserScan\n```\n\n```\n#!\n\nkohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_clock_pc2_subscribed.bag \npath:        atlas_scan_clock_pc2_subscribed.bag\nversion:     2.0\nduration:    35.1s\nstart:       Jan 01 1970 01:08:17.34 (497.34)\nend:         Jan 01 1970 01:08:52.48 (532.48)\nsize:        5.7 MB\nmessages:    2000\ncompression: none [8/8 chunks]\ntypes:       rosgraph_msgs/Clock   [a9c97c1d230cfc112e270351a944ee47]\n             sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      clock   1000 msgs @ 1.0 kHz : rosgraph_msgs/Clock  \n             scan    1000 msgs @ 30.3 Hz : sensor_msgs/LaserScan\n```\n/edit: Ok, recording only 1000 clock messages is probably making only limited sense ;) Still serves to show that the frequency is reproducible.\n", "markup": "markdown", "html": "<p>Ok, to get more reproducibility:\nI'm on a Ubuntu 12.04 AMD64 machine, Core I5 (i5-2430M CPU @ 2.40GHz, Nvidia GeForce GT 540M). ROS Fuerte/Gazebo/drcsim installed from (their respective) .debs.</p>\n<p>How I tested:</p>\n<p>Started Atlas:</p>\n<div class=\"codehilite\"><pre><span></span>roslaunch atlas_utils atlas.launch\n</pre></div>\n\n\n<p>New terminal, start a subscriber for scans (so recording via bagfile doesn't incur recording start overhead/delay when no scans have been subscribed before):</p>\n<div class=\"codehilite\"><pre><span></span>rostopic hz scan\n</pre></div>\n\n\n<p>Record a bagfile of 1000 scans:</p>\n<div class=\"codehilite\"><pre><span></span>rosbag record --l 1000 scan\n</pre></div>\n\n\n<p>Optionally in new terminal, to increase load and also start up image publishers:</p>\n<div class=\"codehilite\"><pre><span></span>rostopic hz /multisense_sl/points2\n</pre></div>\n\n\n<p>Then, again record bag file:</p>\n<div class=\"codehilite\"><pre><span></span>rosbag record --l 1000 scan\n</pre></div>\n\n\n<p>On my machine I then get the following using the 'info --freq' bagfile option:</p>\n<p>Only scan subscribed:</p>\n<div class=\"codehilite\"><pre><span></span>kohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_only.bag \npath:        atlas_scan_only.bag\nversion:     2.0\nduration:    28.6s\nstart:       Jan 01 1970 01:05:49.36 (349.36)\nend:         Jan 01 1970 01:06:17.00 (378.00)\nsize:        5.6 MB\nmessages:    1000\ncompression: none [8/8 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   1000 msgs @ 38.5 Hz : sensor_msgs/LaserScan\n</pre></div>\n\n\n<p>Also subscribing to pointcloud data:</p>\n<div class=\"codehilite\"><pre><span></span>kohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_pc2_subscribed.bag \npath:        atlas_scan_pc2_subscribed.bag\nversion:     2.0\nduration:    35.4s\nstart:       Jan 01 1970 01:07:34.03 (454.03)\nend:         Jan 01 1970 01:08:09.41 (489.41)\nsize:        5.6 MB\nmessages:    1000\ncompression: none [8/8 chunks]\ntypes:       sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      scan   1000 msgs @ 30.3 Hz : sensor_msgs/LaserScan\n</pre></div>\n\n\n<p>I also recorded versions of both tests with both /scan and /clock. Interestingly, the frequency numbers exactly match those of the same test without clock data, suggesting that jitter doesn't play an important role.</p>\n<div class=\"codehilite\"><pre><span></span>kohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_clock_only.bag \npath:        atlas_scan_clock_only.bag\nversion:     2.0\nduration:    28.8s\nstart:       Jan 01 1970 01:06:37.09 (397.09)\nend:         Jan 01 1970 01:07:05.92 (425.92)\nsize:        5.7 MB\nmessages:    2000\ncompression: none [8/8 chunks]\ntypes:       rosgraph_msgs/Clock   [a9c97c1d230cfc112e270351a944ee47]\n             sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      clock   1000 msgs @ 1.0 kHz : rosgraph_msgs/Clock  \n             scan    1000 msgs @ 38.5 Hz : sensor_msgs/LaserScan\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>kohlbrecher@opstation:~/tmp$ rosbag info --freq atlas_scan_clock_pc2_subscribed.bag \npath:        atlas_scan_clock_pc2_subscribed.bag\nversion:     2.0\nduration:    35.1s\nstart:       Jan 01 1970 01:08:17.34 (497.34)\nend:         Jan 01 1970 01:08:52.48 (532.48)\nsize:        5.7 MB\nmessages:    2000\ncompression: none [8/8 chunks]\ntypes:       rosgraph_msgs/Clock   [a9c97c1d230cfc112e270351a944ee47]\n             sensor_msgs/LaserScan [90c7ef2dc6895d81024acba2ac42f369]\ntopics:      clock   1000 msgs @ 1.0 kHz : rosgraph_msgs/Clock  \n             scan    1000 msgs @ 30.3 Hz : sensor_msgs/LaserScan\n</pre></div>\n\n\n<p>/edit: Ok, recording only 1000 clock messages is probably making only limited sense ;) Still serves to show that the frequency is reproducible.</p>", "type": "rendered"}, "created_on": "2013-01-21T08:53:43.970779+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": "2013-01-21T09:05:01.444004+00:00", "type": "issue_comment", "id": 2894064}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/3070435.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-3070435"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "Update:\n\n  1) Timing information from rostopic has nothing to do with sensor generation from Gazebo. rostopic report the time at which a message is received by rostopic. This is not the time when the message was produced, and it's not the time when a sensor generated data. Therefore, data from rostopic should not be used as measurement tool for simulation sensor performance.\n\n  2) The correct way to measure sensor performance is to use `gztopic view <topic_name>`. This will report the time at which sensor data has actually been generated.\n\n  3) A little research by John and Brian found that switching ROS to use UDP produces better performance when delivering messages. This change has been incorporated in to DRC 2.0.\n\n  4) It was referenced that the version of Gazebo released in ROS Electric had correct update rates. This is not true. The Gazebo ROS plugin was sending out data at the correct Hz rate, but the data was copied from the last update of the sensor. So nodes would receive duplicate data. No complaints were voiced about this.\n\nThe above reasons are why this issue was marked as minor.\n \npull request #277 has incorporated threaded sensors. I have now been able to run Atlas at 1.40x real-time with all sensors producing correct Hz rate. In fact I was getting the correct Hz rate prior to this pull-request, but now Gazebo runs a bit faster.", "markup": "markdown", "html": "<p>Update:</p>\n<p>1) Timing information from rostopic has nothing to do with sensor generation from Gazebo. rostopic report the time at which a message is received by rostopic. This is not the time when the message was produced, and it's not the time when a sensor generated data. Therefore, data from rostopic should not be used as measurement tool for simulation sensor performance.</p>\n<p>2) The correct way to measure sensor performance is to use <code>gztopic view &lt;topic_name&gt;</code>. This will report the time at which sensor data has actually been generated.</p>\n<p>3) A little research by John and Brian found that switching ROS to use UDP produces better performance when delivering messages. This change has been incorporated in to DRC 2.0.</p>\n<p>4) It was referenced that the version of Gazebo released in ROS Electric had correct update rates. This is not true. The Gazebo ROS plugin was sending out data at the correct Hz rate, but the data was copied from the last update of the sensor. So nodes would receive duplicate data. No complaints were voiced about this.</p>\n<p>The above reasons are why this issue was marked as minor.</p>\n<p><a href=\"#!/osrf/gazebo/pull-requests/277/threaded-sensors\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #277</a> has incorporated threaded sensors. I have now been able to run Atlas at 1.40x real-time with all sensors producing correct Hz rate. In fact I was getting the correct Hz rate prior to this pull-request, but now Gazebo runs a bit faster.</p>", "type": "rendered"}, "created_on": "2013-02-07T17:59:51.834737+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2013-02-07T18:00:37.321143+00:00", "type": "issue_comment", "id": 3070435}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/3100140.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-3100140"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "Regarding 1)\n\nrostopic uses the time published on the `/clock` topic by the gazebo_ros_api plugin in the gazebo ROS package. So the rates displayed in `rostopic hz` should always correspond to the intended publishing rates, no matter at which update rate Gazebo is running.\n\nWhen throttling Gazebo (version 1.3) to 0.1x real-time, `rostopic hz` and `gztopic view` still displays the correct rate of 40.0 Hz for the laser (using simulated time), while `gztopic hz` falls back to 4 Hz. This is what I would expect. Running in real-time, `rostopic hz` decreases to approximately 37 Hz on my machine, which might be caused by message loss in the ROS publisher/subscriber pipeline on high CPU loads.\n\nLet's see if the threaded sensor implementation brings some improvements here. In general, I would expect that the update rate decreases if the computing resources are exhausted, but the publishing rates measured in simulated time should not degrade.", "markup": "markdown", "html": "<p>Regarding 1)</p>\n<p>rostopic uses the time published on the <code>/clock</code> topic by the gazebo_ros_api plugin in the gazebo ROS package. So the rates displayed in <code>rostopic hz</code> should always correspond to the intended publishing rates, no matter at which update rate Gazebo is running.</p>\n<p>When throttling Gazebo (version 1.3) to 0.1x real-time, <code>rostopic hz</code> and <code>gztopic view</code> still displays the correct rate of 40.0 Hz for the laser (using simulated time), while <code>gztopic hz</code> falls back to 4 Hz. This is what I would expect. Running in real-time, <code>rostopic hz</code> decreases to approximately 37 Hz on my machine, which might be caused by message loss in the ROS publisher/subscriber pipeline on high CPU loads.</p>\n<p>Let's see if the threaded sensor implementation brings some improvements here. In general, I would expect that the update rate decreases if the computing resources are exhausted, but the publishing rates measured in simulated time should not degrade.</p>", "type": "rendered"}, "created_on": "2013-02-11T13:05:33.228884+00:00", "user": {"display_name": "Johannes Meyer", "uuid": "{58d19163-cefc-479b-b80a-d78fb811b533}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B58d19163-cefc-479b-b80a-d78fb811b533%7D"}, "html": {"href": "https://bitbucket.org/%7B58d19163-cefc-479b-b80a-d78fb811b533%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1363fb056a859ce072c21fdb8da3a710d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJM-6.png"}}, "nickname": "johmeyer", "type": "user", "account_id": "557058:7237c8c3-e637-4ea0-ab9c-d45f303d8fb9"}, "updated_on": null, "type": "issue_comment", "id": 3100140}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/3115202.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-3115202"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "`rostopic hz` will correspond to publishing rates of the ROS publisher. This is not tied to Gazebo. As such, `rostopic hz` cannot be used as a measurement tool.", "markup": "markdown", "html": "<p><code>rostopic hz</code> will correspond to publishing rates of the ROS publisher. This is not tied to Gazebo. As such, <code>rostopic hz</code> cannot be used as a measurement tool.</p>", "type": "rendered"}, "created_on": "2013-02-12T19:05:32.822538+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 3115202}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/3116049.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-3116049"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "``rostopic hz`` gives the framerate that the robot will receive though ... as such it is a better measurement tool than gazebo tools that measure the frequency within gazebo ... unless you allow us to write everything as gazebo plugin to make use of gazebo's internal framerates.", "markup": "markdown", "html": "<p><code>rostopic hz</code> gives the framerate that the robot will receive though ... as such it is a better measurement tool than gazebo tools that measure the frequency within gazebo ... unless you allow us to write everything as gazebo plugin to make use of gazebo's internal framerates.</p>", "type": "rendered"}, "created_on": "2013-02-12T20:19:37.724770+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3116049}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/3117001.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-3117001"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "There are two issues here. The first is the rate at which Gazebo generates data, the second is the rate at which that data is sent out over ROS. I was under the impression that this thread was about the first, and not the second.\n\nHere is the document that will list the rates at which ROS topics operate:\nhttp://gazebosim.org/wiki/DRC/UserGuide#ROS_APIs\n\nConcerns about those TBD rates should be posted on the DRC Sim issue tracker.", "markup": "markdown", "html": "<p>There are two issues here. The first is the rate at which Gazebo generates data, the second is the rate at which that data is sent out over ROS. I was under the impression that this thread was about the first, and not the second.</p>\n<p>Here is the document that will list the rates at which ROS topics operate:\n<a href=\"http://gazebosim.org/wiki/DRC/UserGuide#ROS_APIs\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/wiki/DRC/UserGuide#ROS_APIs</a></p>\n<p>Concerns about those TBD rates should be posted on the DRC Sim issue tracker.</p>", "type": "rendered"}, "created_on": "2013-02-12T21:48:33.176246+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 3117001}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/3197364.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-3197364"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": "multi-threaded sensors in pull request #277", "markup": "markdown", "html": "<p>multi-threaded sensors in <a href=\"#!/osrf/gazebo/pull-requests/277/threaded-sensors\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #277</a></p>", "type": "rendered"}, "created_on": "2013-02-21T07:37:45.228678+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 3197364}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/30610009.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-30610009"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:21:33.531166+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30610009}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20/comments/30612686.json"}, "html": {"href": "#!/osrf/gazebo/issues/20#comment-30612686"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Laser scan (ray sensor) updates erratic and slower than desired"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:45:19.467942+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30612686}], "page": 1, "size": 22}