{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2179/comments/34582765.json"}, "html": {"href": "#!/osrf/gazebo/issues/2179#comment-34582765"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2179.json"}}, "type": "issue", "id": 2179, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Models broken in DART 4"}, "content": {"raw": "@Maowww I have simulated Valkyrie using dart, but there are some issues.\n\n1. The doorway in Qual task 2 uses a nested model, which isn't supported by DART. So that world won't be loadable with DART.\n\n2. The HarnessPlugin creates a joint dynamically in ODE, but this also doesn't work in DART. So I delete the `libgazebo_ros_harness.so` plugin block from the valkyrie URDF and set gravity to `0 0 0` in the world. I then roslaunch the simulation without the `init:=true` argument and carefully adjust gravity to slowly lower the robot to the ground, then switch to high-level control mode with the following command:\n\n~~~\nrostopic pub -1 /ihmc_ros/valkyrie/control/low_level_control_mode \\\n  ihmc_valkyrie_ros/ValkyrieLowLevelControlModeRosMessage \\\n  '{requested_control_mode: 2, unique_id: -1}'\n~~~\n\nLet me know if that's not clear enough, and I'll try to upload a screen capture of this process the next time I do it.", "markup": "markdown", "html": "<p>@Maowww I have simulated Valkyrie using dart, but there are some issues.</p>\n<ol>\n<li>\n<p>The doorway in Qual task 2 uses a nested model, which isn't supported by DART. So that world won't be loadable with DART.</p>\n</li>\n<li>\n<p>The HarnessPlugin creates a joint dynamically in ODE, but this also doesn't work in DART. So I delete the <code>libgazebo_ros_harness.so</code> plugin block from the valkyrie URDF and set gravity to <code>0 0 0</code> in the world. I then roslaunch the simulation without the <code>init:=true</code> argument and carefully adjust gravity to slowly lower the robot to the ground, then switch to high-level control mode with the following command:</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span>rostopic pub -1 /ihmc_ros/valkyrie/control/low_level_control_mode \\\n  ihmc_valkyrie_ros/ValkyrieLowLevelControlModeRosMessage \\\n  &#39;{requested_control_mode: 2, unique_id: -1}&#39;\n</pre></div>\n\n\n<p>Let me know if that's not clear enough, and I'll try to upload a screen capture of this process the next time I do it.</p>", "type": "rendered"}, "created_on": "2017-02-22T00:27:30.722139+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 34582765}