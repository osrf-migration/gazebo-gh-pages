{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1739/comments/26487361.json"}, "html": {"href": "#!/osrf/gazebo/issues/1739#comment-26487361"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1739.json"}}, "type": "issue", "id": 1739, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Race condition when deleting a model"}, "content": {"raw": "There are other race conditions as well. I just found one in the `INTEGRATION_world` test ([backtrace here](https://gist.github.com/scpeters/4a2f69d4dfa447864894)).\n\nThe [WorldTest.RemoveModelPaused](#!/osrf/gazebo/src/d17d94163769/test/integration/world.cc#world.cc-308)\ntest loads a world in a paused state, takes one physics step, and then calls\n[World::RemoveModel](#!/osrf/gazebo/src/d17d94163769/gazebo/physics/World.cc#World.cc-444)\nto delete two models and verify that they are deleted.\nThis function locks mutexes, including the `physicsUpdateMutex`\n[when the model is being deleted](#!/osrf/gazebo/src/d17d94163769/gazebo/physics/World.cc#World.cc-2525).\nThere is a race condition, however, as the `receiveMutex` is not locked, and the following sequence\ncan occur which caused the seg-fault recorded here:\n\n* `World::RunLoop`\n* `World::Step`\n* `World::ProcessMessages`\n* `World::ProcessRequestMsgs`\n* `World::BuildSceneMsg`\n\nThe last call reads from data structures that are being modified, which leads to the race condition.\n\n", "markup": "markdown", "html": "<p>There are other race conditions as well. I just found one in the <code>INTEGRATION_world</code> test (<a data-is-external-link=\"true\" href=\"https://gist.github.com/scpeters/4a2f69d4dfa447864894\" rel=\"nofollow\">backtrace here</a>).</p>\n<p>The <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d17d94163769/test/integration/world.cc#world.cc-308\" rel=\"nofollow\">WorldTest.RemoveModelPaused</a>\ntest loads a world in a paused state, takes one physics step, and then calls\n<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d17d94163769/gazebo/physics/World.cc#World.cc-444\" rel=\"nofollow\">World::RemoveModel</a>\nto delete two models and verify that they are deleted.\nThis function locks mutexes, including the <code>physicsUpdateMutex</code>\n<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d17d94163769/gazebo/physics/World.cc#World.cc-2525\" rel=\"nofollow\">when the model is being deleted</a>.\nThere is a race condition, however, as the <code>receiveMutex</code> is not locked, and the following sequence\ncan occur which caused the seg-fault recorded here:</p>\n<ul>\n<li><code>World::RunLoop</code></li>\n<li><code>World::Step</code></li>\n<li><code>World::ProcessMessages</code></li>\n<li><code>World::ProcessRequestMsgs</code></li>\n<li><code>World::BuildSceneMsg</code></li>\n</ul>\n<p>The last call reads from data structures that are being modified, which leads to the race condition.</p>", "type": "rendered"}, "created_on": "2016-03-24T23:48:07.773765+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 26487361}