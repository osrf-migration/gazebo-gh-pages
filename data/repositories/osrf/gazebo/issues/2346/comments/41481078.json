{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2346/comments/41481078.json"}, "html": {"href": "#!/osrf/gazebo/issues/2346#comment-41481078"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2346.json"}}, "type": "issue", "id": 2346, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu_ray sensor number in a gazebo world is limited"}, "content": {"raw": "We created the problem with gazebo source (gazebo 8). It seems that when running the server, it holds. As soon as we connect the client, the server crashes at the 5th GPULaser with the following core:\n\n```\n#!c++\n\n#0  0x00007fffb7b8bd97 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#1  0x00007fffb7b458aa in Ogre::GLRenderSystem::_setTextureBlendMode(unsigned long, Ogre::LayerBlendModeEx const&) () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#2  0x00007ffff75cefc5 in Ogre::RenderSystem::_setTextureUnitSettings(unsigned long, Ogre::TextureUnitState&) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#3  0x00007ffff7533934 in Ogre::SceneManager::_setPass(Ogre::Pass const*, bool, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#4  0x00007fffed390994 in gazebo::rendering::GpuLaser::UpdateRenderTarget (this=0x5197900, _target=0x7fffbd188c48, _material=0x7fffbd199a38, _cam=0x7fffb45e77c8, _updateTex=true) at /home/robil/gazebo_parallel/src/gazebo/gazebo/rendering/GpuLaser.cc:316\n#5  0x00007fffed391a1c in gazebo::rendering::GpuLaser::RenderImpl (this=0x5197900) at /home/robil/gazebo_parallel/src/gazebo/gazebo/rendering/GpuLaser.cc:465\n#6  0x00007fffed328d03 in gazebo::rendering::Camera::Render (this=0x5197900, _force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/rendering/Camera.cc:426\n#7  0x00007ffff59ef5ff in gazebo::sensors::GpuRaySensor::Render (this=0x1d25ce0) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/GpuRaySensor.cc:573\n#8  0x00007ffff59f6213 in std::_Mem_fn_base<void (gazebo::sensors::GpuRaySensor::*)(), true>::operator()<, void>(gazebo::sensors::GpuRaySensor*) const (this=0x196a6a0, __object=0x1d25ce0) at /usr/include/c++/5/functional:600\n#9  0x00007ffff59f5dcb in std::_Bind<std::_Mem_fn<void (gazebo::sensors::GpuRaySensor::*)()> (gazebo::sensors::GpuRaySensor*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=0x196a6a0, __args=<unknown type in /home/robil/gazebo_parallel/devel_isolated/gazebo/lib/libgazebo_sensors.so.8, CU 0x24a1fe, DIE 0x2a833e>) at /usr/include/c++/5/functional:1074\n#10 0x00007ffff59f58ab in std::_Bind<std::_Mem_fn<void (gazebo::sensors::GpuRaySensor::*)()> (gazebo::sensors::GpuRaySensor*)>::operator()<, void>() (this=0x196a6a0) at /usr/include/c++/5/functional:1133\n#11 0x00007ffff59f4b4c in std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (gazebo::sensors::GpuRaySensor::*)()> (gazebo::sensors::GpuRaySensor*)> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/5/functional:1871\n#12 0x00007ffff7b77f7a in std::function<void ()>::operator()() const (this=0x196a678) at /usr/include/c++/5/functional:2267\n#13 0x00007ffff5a2995f in gazebo::event::EventT<void ()>::Signal() (this=0x7ffff6fd7660 <gazebo::event::Events::render>) at /home/robil/gazebo_parallel/src/gazebo/gazebo/common/Event.hh:299\n#14 0x00007ffff5a27b22 in gazebo::event::EventT<void ()>::operator()() (this=0x7ffff6fd7660 <gazebo::event::Events::render>) at /home/robil/gazebo_parallel/src/gazebo/gazebo/common/Event.hh:143\n#15 0x00007ffff5a3529b in gazebo::sensors::SensorManager::ImageSensorContainer::Update (this=0xddf850, _force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/SensorManager.cc:698\n#16 0x00007ffff5a326ee in gazebo::sensors::SensorManager::Update (this=0x7ffff5cf6ae0 <SingletonT<gazebo::sensors::SensorManager>::GetInstance()::t>, _force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/SensorManager.cc:171\n#17 0x00007ffff5a1f782 in gazebo::sensors::run_once (_force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/SensorsIface.cc:118\n#18 0x00007ffff7b665c6 in gazebo::Server::Run (this=0x6ba5c0) at /home/robil/gazebo_parallel/src/gazebo/gazebo/Server.cc:580\n#19 0x0000000000403aa1 in main (argc=2, argv=0x7fffffffd608) at /home/robil/gazebo_parallel/src/gazebo/gazebo/server_main.cc:43\n\n```\nSo, it seems that the crash might be in OGRE.\n\nCan we get some advise how to proceed?\n\nThanks", "markup": "markdown", "html": "<p>We created the problem with gazebo source (gazebo 8). It seems that when running the server, it holds. As soon as we connect the client, the server crashes at the 5th GPULaser with the following core:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#0  0x00007fffb7b8bd97 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so</span>\n<span class=\"cp\">#1  0x00007fffb7b458aa in Ogre::GLRenderSystem::_setTextureBlendMode(unsigned long, Ogre::LayerBlendModeEx const&amp;) () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so</span>\n<span class=\"cp\">#2  0x00007ffff75cefc5 in Ogre::RenderSystem::_setTextureUnitSettings(unsigned long, Ogre::TextureUnitState&amp;) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"cp\">#3  0x00007ffff7533934 in Ogre::SceneManager::_setPass(Ogre::Pass const*, bool, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"cp\">#4  0x00007fffed390994 in gazebo::rendering::GpuLaser::UpdateRenderTarget (this=0x5197900, _target=0x7fffbd188c48, _material=0x7fffbd199a38, _cam=0x7fffb45e77c8, _updateTex=true) at /home/robil/gazebo_parallel/src/gazebo/gazebo/rendering/GpuLaser.cc:316</span>\n<span class=\"cp\">#5  0x00007fffed391a1c in gazebo::rendering::GpuLaser::RenderImpl (this=0x5197900) at /home/robil/gazebo_parallel/src/gazebo/gazebo/rendering/GpuLaser.cc:465</span>\n<span class=\"cp\">#6  0x00007fffed328d03 in gazebo::rendering::Camera::Render (this=0x5197900, _force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/rendering/Camera.cc:426</span>\n<span class=\"cp\">#7  0x00007ffff59ef5ff in gazebo::sensors::GpuRaySensor::Render (this=0x1d25ce0) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/GpuRaySensor.cc:573</span>\n<span class=\"cp\">#8  0x00007ffff59f6213 in std::_Mem_fn_base&lt;void (gazebo::sensors::GpuRaySensor::*)(), true&gt;::operator()&lt;, void&gt;(gazebo::sensors::GpuRaySensor*) const (this=0x196a6a0, __object=0x1d25ce0) at /usr/include</span><span class=\"cpf\">/c++/5/functional:600</span><span class=\"cp\"></span>\n<span class=\"cp\">#9  0x00007ffff59f5dcb in std::_Bind&lt;std::_Mem_fn&lt;void (gazebo::sensors::GpuRaySensor::*)()&gt; (gazebo::sensors::GpuRaySensor*)&gt;::__call&lt;void, , 0ul&gt;(std::tuple&lt;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul&gt;) (this=0x196a6a0, __args=&lt;unknown type in /home/robil/gazebo_parallel/devel_isolated/gazebo/lib/libgazebo_sensors.so.8, CU 0x24a1fe, DIE 0x2a833e&gt;) at /usr/include</span><span class=\"cpf\">/c++/5/functional:1074</span><span class=\"cp\"></span>\n<span class=\"cp\">#10 0x00007ffff59f58ab in std::_Bind&lt;std::_Mem_fn&lt;void (gazebo::sensors::GpuRaySensor::*)()&gt; (gazebo::sensors::GpuRaySensor*)&gt;::operator()&lt;, void&gt;() (this=0x196a6a0) at /usr/include</span><span class=\"cpf\">/c++/5/functional:1133</span><span class=\"cp\"></span>\n<span class=\"cp\">#11 0x00007ffff59f4b4c in std::_Function_handler&lt;void (), std::_Bind&lt;std::_Mem_fn&lt;void (gazebo::sensors::GpuRaySensor::*)()&gt; (gazebo::sensors::GpuRaySensor*)&gt; &gt;::_M_invoke(std::_Any_data const&amp;) (__functor=...) at /usr/include</span><span class=\"cpf\">/c++/5/functional:1871</span><span class=\"cp\"></span>\n<span class=\"cp\">#12 0x00007ffff7b77f7a in std::function&lt;void ()&gt;::operator()() const (this=0x196a678) at /usr/include</span><span class=\"cpf\">/c++/5/functional:2267</span><span class=\"cp\"></span>\n<span class=\"cp\">#13 0x00007ffff5a2995f in gazebo::event::EventT&lt;void ()&gt;::Signal() (this=0x7ffff6fd7660 &lt;gazebo::event::Events::render&gt;) at /home/robil/gazebo_parallel/src/gazebo/gazebo/common/Event.hh:299</span>\n<span class=\"cp\">#14 0x00007ffff5a27b22 in gazebo::event::EventT&lt;void ()&gt;::operator()() (this=0x7ffff6fd7660 &lt;gazebo::event::Events::render&gt;) at /home/robil/gazebo_parallel/src/gazebo/gazebo/common/Event.hh:143</span>\n<span class=\"cp\">#15 0x00007ffff5a3529b in gazebo::sensors::SensorManager::ImageSensorContainer::Update (this=0xddf850, _force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/SensorManager.cc:698</span>\n<span class=\"cp\">#16 0x00007ffff5a326ee in gazebo::sensors::SensorManager::Update (this=0x7ffff5cf6ae0 &lt;SingletonT&lt;gazebo::sensors::SensorManager&gt;::GetInstance()::t&gt;, _force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/SensorManager.cc:171</span>\n<span class=\"cp\">#17 0x00007ffff5a1f782 in gazebo::sensors::run_once (_force=false) at /home/robil/gazebo_parallel/src/gazebo/gazebo/sensors/SensorsIface.cc:118</span>\n<span class=\"cp\">#18 0x00007ffff7b665c6 in gazebo::Server::Run (this=0x6ba5c0) at /home/robil/gazebo_parallel/src/gazebo/gazebo/Server.cc:580</span>\n<span class=\"cp\">#19 0x0000000000403aa1 in main (argc=2, argv=0x7fffffffd608) at /home/robil/gazebo_parallel/src/gazebo/gazebo/server_main.cc:43</span>\n</pre></div>\n\n\n<p>So, it seems that the crash might be in OGRE.</p>\n<p>Can we get some advise how to proceed?</p>\n<p>Thanks</p>", "type": "rendered"}, "created_on": "2017-11-28T12:55:34.243563+00:00", "user": {"display_name": "michele hallak", "uuid": "{f8cca72b-2f8a-4372-bcb5-10ea801a3fe9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf8cca72b-2f8a-4372-bcb5-10ea801a3fe9%7D"}, "html": {"href": "https://bitbucket.org/%7Bf8cca72b-2f8a-4372-bcb5-10ea801a3fe9%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d10108e88396c34c2d474c28bba19974d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "mhallak", "type": "user", "account_id": "557058:643e25c4-f0cd-4e12-8c67-7a038a7e7e40"}, "updated_on": "2017-11-28T12:56:25.513039+00:00", "type": "issue_comment", "id": 41481078}