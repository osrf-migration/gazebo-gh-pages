{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2141/comments/34601075.json"}, "html": {"href": "#!/osrf/gazebo/issues/2141#comment-34601075"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2141.json"}}, "type": "issue", "id": 2141, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Risk of mixing ign-math2 and ign-math3 ABIs in gazebo8"}, "content": {"raw": "My 2 cents: in the specific case of `gazebo` and `ignition-math`, using `inline namespaces` will make the problem of mixing ABI more explicit \n(a compilation error rather then a run-time enigmatic crash) but will not enable mixing different major versions of ignition-math and its dependencies. \n\n`inline namespaces` work fine in preventing errors in \"private\" dependencies, such as the two (incompatible) copies of ipopt in this bug: #!/osrf/gazebo/issues/2005/segfault-when-calling-ipopt-virtual-method . In Gazebo and its dependencies case, however, the `ignition-math` classes are used in all the public interfaces, so it is common\npractice that Gazebo calls a method in a dependent library that returns an ignition-math object, and assigns it to a member of a Gazebo class, that itself is a ignition-math object . \nUsing `inline namespaces` all this assignements will result in compile errors, if two different versions of ignition-math would be used across gazebo and its dependencies.", "markup": "markdown", "html": "<p>My 2 cents: in the specific case of <code>gazebo</code> and <code>ignition-math</code>, using <code>inline namespaces</code> will make the problem of mixing ABI more explicit \n(a compilation error rather then a run-time enigmatic crash) but will not enable mixing different major versions of ignition-math and its dependencies. </p>\n<p><code>inline namespaces</code> work fine in preventing errors in \"private\" dependencies, such as the two (incompatible) copies of ipopt in this bug: <a href=\"#!/osrf/gazebo/issues/2005/segfault-when-calling-ipopt-virtual-method\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issues/2005/segfault-when-calling-ipopt-virtual-method</a> . In Gazebo and its dependencies case, however, the <code>ignition-math</code> classes are used in all the public interfaces, so it is common\npractice that Gazebo calls a method in a dependent library that returns an ignition-math object, and assigns it to a member of a Gazebo class, that itself is a ignition-math object . \nUsing <code>inline namespaces</code> all this assignements will result in compile errors, if two different versions of ignition-math would be used across gazebo and its dependencies.</p>", "type": "rendered"}, "created_on": "2017-02-22T14:55:53.940778+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2017-02-22T14:56:05.923400+00:00", "type": "issue_comment", "id": 34601075}