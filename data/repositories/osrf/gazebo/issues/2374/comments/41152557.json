{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2374/comments/41152557.json"}, "html": {"href": "#!/osrf/gazebo/issues/2374#comment-41152557"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2374.json"}}, "type": "issue", "id": 2374, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "How to get the joint axis in body frame?"}, "content": {"raw": "Also I have tried to use ```Joint::GetGlobalAxis``` and then rotate it to the joint frame and in some joints I get something like the following ```6e-06 0.003983 0.999992``` which is pretty close to ```0 0 1``` but the y-parameter there seems too big to be due to precision errors. The chain to the joint that gave me that is only like 2 joints and not like a 15 dof chain where I can understand some numerical errors accumulating, but ```0.003983``` seems way to large to be a precision thing. That's why i'm still not convinced that this implementation is exactly what i'm looking for.", "markup": "markdown", "html": "<p>Also I have tried to use <code>Joint::GetGlobalAxis</code> and then rotate it to the joint frame and in some joints I get something like the following <code>6e-06 0.003983 0.999992</code> which is pretty close to <code>0 0 1</code> but the y-parameter there seems too big to be due to precision errors. The chain to the joint that gave me that is only like 2 joints and not like a 15 dof chain where I can understand some numerical errors accumulating, but <code>0.003983</code> seems way to large to be a precision thing. That's why i'm still not convinced that this implementation is exactly what i'm looking for.</p>", "type": "rendered"}, "created_on": "2017-11-11T16:57:47.122712+00:00", "user": {"display_name": "Jordan Lack", "uuid": "{a47ca146-169c-4fcf-b59f-8410d9f676ff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba47ca146-169c-4fcf-b59f-8410d9f676ff%7D"}, "html": {"href": "https://bitbucket.org/%7Ba47ca146-169c-4fcf-b59f-8410d9f676ff%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:82c7a832-85b7-45f4-86fc-e63688f35a2d/e5a6704f-a784-4c66-94ff-f7a9c914403a/128"}}, "nickname": "jordanlack", "type": "user", "account_id": "557058:82c7a832-85b7-45f4-86fc-e63688f35a2d"}, "updated_on": null, "type": "issue_comment", "id": 41152557}