{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/193/comments/16293298.json"}, "html": {"href": "#!/osrf/gazebo/issues/193#comment-16293298"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Make Gazebo Windows-compatible"}, "content": {"raw": "I've run into another bit of circular linking between the physics and sensors libraries. I would have thought that `physics` should not depend on `sensors`, but there are numerous calls by the `physics` classes to `sensors` functions.\n\n~~~\n$ grep -rnI sensors:: gazebo/physics/\ngazebo/physics/Model.cc:676:        !sensors::SensorManager::Instance()->SensorsInitialized() &&\ngazebo/physics/Link.cc:158:          sensors::create_sensor(sensorElem, this->GetWorld()->GetName(),\ngazebo/physics/Link.cc:259:    sensors::remove_sensor(*iter);\ngazebo/physics/Link.cc:779:    sensors::SensorPtr sensor = sensors::get_sensor(*iter);\ngazebo/physics/Joint.cc:81:    sensors::remove_sensor(*iter);\ngazebo/physics/Joint.cc:267:          sensors::create_sensor(sensorElem, this->GetWorld()->GetName(),\ngazebo/physics/Joint.cc:340:    sensors::remove_sensor(*iter);\ngazebo/physics/Joint.cc:574:    sensors::SensorPtr sensor = sensors::get_sensor(*iter);\ngazebo/physics/Link.hh:377:      /// sensors::Sensor. Access to a Sensor object\ngazebo/physics/Link.hh:378:      /// is accomplished through the sensors::SensorManager. This was done to\ngazebo/physics/World.cc:557:      sensors::SensorManager::Instance()->SensorsInitialized())\ngazebo/physics/World.cc:990:  sensors::SensorManager::Instance()->ResetLastUpdateTimes();\n~~~\n\nI'll create a separate issue for this... #1516.", "markup": "markdown", "html": "<p>I've run into another bit of circular linking between the physics and sensors libraries. I would have thought that <code>physics</code> should not depend on <code>sensors</code>, but there are numerous calls by the <code>physics</code> classes to <code>sensors</code> functions.</p>\n<div class=\"codehilite\"><pre><span></span>$ grep -rnI sensors:: gazebo/physics/\ngazebo/physics/Model.cc:676:        !sensors::SensorManager::Instance<span class=\"o\">()</span>-&gt;SensorsInitialized<span class=\"o\">()</span> <span class=\"o\">&amp;&amp;</span>\ngazebo/physics/Link.cc:158:          sensors::create_sensor<span class=\"o\">(</span>sensorElem, this-&gt;GetWorld<span class=\"o\">()</span>-&gt;GetName<span class=\"o\">()</span>,\ngazebo/physics/Link.cc:259:    sensors::remove_sensor<span class=\"o\">(</span>*iter<span class=\"o\">)</span><span class=\"p\">;</span>\ngazebo/physics/Link.cc:779:    sensors::SensorPtr <span class=\"nv\">sensor</span> <span class=\"o\">=</span> sensors::get_sensor<span class=\"o\">(</span>*iter<span class=\"o\">)</span><span class=\"p\">;</span>\ngazebo/physics/Joint.cc:81:    sensors::remove_sensor<span class=\"o\">(</span>*iter<span class=\"o\">)</span><span class=\"p\">;</span>\ngazebo/physics/Joint.cc:267:          sensors::create_sensor<span class=\"o\">(</span>sensorElem, this-&gt;GetWorld<span class=\"o\">()</span>-&gt;GetName<span class=\"o\">()</span>,\ngazebo/physics/Joint.cc:340:    sensors::remove_sensor<span class=\"o\">(</span>*iter<span class=\"o\">)</span><span class=\"p\">;</span>\ngazebo/physics/Joint.cc:574:    sensors::SensorPtr <span class=\"nv\">sensor</span> <span class=\"o\">=</span> sensors::get_sensor<span class=\"o\">(</span>*iter<span class=\"o\">)</span><span class=\"p\">;</span>\ngazebo/physics/Link.hh:377:      /// sensors::Sensor. Access to a Sensor object\ngazebo/physics/Link.hh:378:      /// is accomplished through the sensors::SensorManager. This was <span class=\"k\">done</span> to\ngazebo/physics/World.cc:557:      sensors::SensorManager::Instance<span class=\"o\">()</span>-&gt;SensorsInitialized<span class=\"o\">())</span>\ngazebo/physics/World.cc:990:  sensors::SensorManager::Instance<span class=\"o\">()</span>-&gt;ResetLastUpdateTimes<span class=\"o\">()</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>I'll create a separate issue for this... <a href=\"#!/osrf/gazebo/issues/1516/physics-classes-call-sensors-functions\" rel=\"nofollow\" title=\"physics classes call sensors functions\" class=\"ap-connect-link\"><s>#1516</s></a>.</p>", "type": "rendered"}, "created_on": "2015-03-13T17:57:44.889975+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-03-13T18:13:10.522128+00:00", "type": "issue_comment", "id": 16293298}