{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1553/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1553.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1553/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1553/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1553/need-a-robust-way-to-differentiate-link"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1553/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Need a robust way to differentiate link visuals from GUI visuals", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 1, "watches": 2, "content": {"raw": "Model visuals contain several children, some are link visuals, others are GUI tools such as the manipulation tools (`rendering::SelectionObj`). \r\n\r\nAt times, having a model visual, we want to get only its link visuals. The way this is being done on [gui::GLWidget](#!/osrf/gazebo/src/8a8197a5fcdb6bb5164cb103959161f61e79fdaa/gazebo/gui/GLWidget.cc?at=default#cl-741) for example, is to check visibility flags:\r\n\r\n~~~\r\n        // Find out if there's only one link in the model\r\n        uint32_t flags = modelVis->GetChild(i)->GetVisibilityFlags();\r\n        if ((flags != GZ_VISIBILITY_ALL) && (flags & GZ_VISIBILITY_GUI))\r\n        {\r\n          // not link\r\n          continue;\r\n        }\r\n~~~\r\n\r\nHowever, while [implementing](#!/osrf/gazebo/pull-request/1506) `gui::ApplyForceDialog`, I observed that this check works sometimes but fails other times. So for now, the dialog will be using a hack to explicitly ignore a visual whose name contains `_GL_MANIP_` (`SelectionObj`) and consider everything else to be a link, which is not ideal.", "markup": "markdown", "html": "<p>Model visuals contain several children, some are link visuals, others are GUI tools such as the manipulation tools (<code>rendering::SelectionObj</code>). </p>\n<p>At times, having a model visual, we want to get only its link visuals. The way this is being done on <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/8a8197a5fcdb6bb5164cb103959161f61e79fdaa/gazebo/gui/GLWidget.cc?at=default#cl-741\" rel=\"nofollow\">gui::GLWidget</a> for example, is to check visibility flags:</p>\n<div class=\"codehilite\"><pre><span></span>        // Find out if there&#39;s only one link in the model\n        uint32_t flags = modelVis-&gt;GetChild(i)-&gt;GetVisibilityFlags();\n        if ((flags != GZ_VISIBILITY_ALL) &amp;&amp; (flags &amp; GZ_VISIBILITY_GUI))\n        {\n          // not link\n          continue;\n        }\n</pre></div>\n\n\n<p>However, while <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1506\" rel=\"nofollow\">implementing</a> <code>gui::ApplyForceDialog</code>, I observed that this check works sometimes but fails other times. So for now, the dialog will be using a hack to explicitly ignore a visual whose name contains <code>_GL_MANIP_</code> (<code>SelectionObj</code>) and consider everything else to be a link, which is not ideal.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-04-06T17:10:06.576613+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:50.758780+00:00", "type": "issue", "id": 1553}