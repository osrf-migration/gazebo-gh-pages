{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1261/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1261.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1261/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1261/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1261/unit_mainwindow_test-fails-when-all-tests"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1261/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "UNIT_MainWindow_TEST fails when all tests are run", "component": {"name": "QTestFixture", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/248250.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "The `UNIT_MainWindow_TEST` doesn't get run by Jenkins, and I've noticed it failing in several places recently.\r\n\r\nRunning all tests generates with `gazebo/gui/UNIT_MainWindow_TEST` shows the `CopyPasteModel` test passing (with several warnings):\r\n~~~\r\n$ gazebo/gui/UNIT_MainWindow_TEST\r\n********* Start testing of MainWindow_TEST *********\r\nConfig: Using QTest library 4.8.6, Qt 4.8.6\r\nPASS   : MainWindow_TEST::initTestCase()\r\nQWARN  : MainWindow_TEST::CopyPasteModel() QObject::connect: Cannot connect (null)::DeleteSignal(const std::string &) to gazebo::gui::ModelCreator::OnDelete(const std::string &)\r\nQWARN  : MainWindow_TEST::CopyPasteModel() QObject::connect: Cannot queue arguments of type 'QItemSelection'\r\n(Make sure 'QItemSelection' is registered using qRegisterMetaType().)\r\nQWARN  : MainWindow_TEST::CopyPasteModel() QObject::connect: Cannot queue arguments of type 'QItemSelection'\r\n(Make sure 'QItemSelection' is registered using qRegisterMetaType().)\r\nQWARN  : MainWindow_TEST::CopyPasteModel() QObject::connect: Cannot queue arguments of type 'QItemSelection'\r\n(Make sure 'QItemSelection' is registered using qRegisterMetaType().)\r\nSharePercentChange[0.739142] ShareMaxPercentChange[2]\r\nResPercentChange[2.9876]ResMaxPercentChange[5]\r\nPASS   : MainWindow_TEST::CopyPasteModel()\r\n~~~\r\n\r\nIt fails during the next test `CopyPasteLight` ([backtrace](https://gist.github.com/scpeters/52cc7154d8fea6b746dc)):\r\n~~~\r\nQWARN  : MainWindow_TEST::CopyPasteLight() QObject::connect: Cannot connect (null)::DeleteSignal(const std::string &) to gazebo::gui::ModelCreator::OnDelete(const std::string &)\r\nQFATAL : MainWindow_TEST::CopyPasteLight() Received signal 11\r\nFAIL!  : MainWindow_TEST::CopyPasteLight() Received a fatal error.\r\n   Loc: [Unknown file(0)]\r\nTotals: 2 passed, 1 failed, 0 skipped\r\n********* Finished testing of MainWindow_TEST *********\r\nAborted (core dumped)\r\n~~~\r\n\r\nRunning the `CopyPasteLight` test by itself shows it passing:\r\n~~~\r\n$ gazebo/gui/UNIT_MainWindow_TEST CopyPasteLight\r\n********* Start testing of MainWindow_TEST *********\r\nConfig: Using QTest library 4.8.6, Qt 4.8.6\r\nPASS   : MainWindow_TEST::initTestCase()\r\nQWARN  : MainWindow_TEST::CopyPasteLight() QObject::connect: Cannot connect (null)::DeleteSignal(const std::string &) to gazebo::gui::ModelCreator::OnDelete(const std::string &)\r\nQWARN  : MainWindow_TEST::CopyPasteLight() QObject::connect: Cannot queue arguments of type 'QItemSelection'\r\n(Make sure 'QItemSelection' is registered using qRegisterMetaType().)\r\nQWARN  : MainWindow_TEST::CopyPasteLight() QObject::connect: Cannot queue arguments of type 'QItemSelection'\r\n(Make sure 'QItemSelection' is registered using qRegisterMetaType().)\r\nQWARN  : MainWindow_TEST::CopyPasteLight() QObject::connect: Cannot queue arguments of type 'QItemSelection'\r\n(Make sure 'QItemSelection' is registered using qRegisterMetaType().)\r\nSharePercentChange[0.816397] ShareMaxPercentChange[2]\r\nResPercentChange[2.48874]ResMaxPercentChange[5]\r\nPASS   : MainWindow_TEST::CopyPasteLight()\r\nPASS   : MainWindow_TEST::cleanupTestCase()\r\nTotals: 3 passed, 0 failed, 0 skipped\r\n********* Finished testing of MainWindow_TEST *********\r\n~~~\r\n\r\nThe `Wireframe` and `NonDefaultWorld` tests appear to pass but seg-fault during tear-down:\r\n~~~\r\n$ gazebo/gui/UNIT_MainWindow_TEST Wireframe\r\n********* Start testing of MainWindow_TEST *********\r\nConfig: Using QTest library 4.8.6, Qt 4.8.6\r\nPASS   : MainWindow_TEST::initTestCase()\r\nQWARN  : MainWindow_TEST::Wireframe() QObject::connect: Cannot connect (null)::DeleteSignal(const std::string &) to gazebo::gui::ModelCreator::OnDelete(const std::string &)\r\nSharePercentChange[0.725986] ShareMaxPercentChange[2]\r\nResPercentChange[2.02818]ResMaxPercentChange[5]\r\nPASS   : MainWindow_TEST::Wireframe()\r\nPASS   : MainWindow_TEST::cleanupTestCase()\r\nTotals: 3 passed, 0 failed, 0 skipped\r\n********* Finished testing of MainWindow_TEST *********\r\nSegmentation fault (core dumped)\r\n...\r\nCore was generated by `gazebo/gui/UNIT_MainWindow_TEST Wireframe'.\r\nProgram terminated with signal SIGSEGV, Segmentation fault.\r\n#0  0x00007fbcd00bbfea in gazebo::gui::ModelSnap::~ModelSnap (this=0x7fbcd04c7560 <SingletonT<gazebo::gui::ModelSnap>::GetInstance()::t>, \r\n    __in_chrg=<optimized out>) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelSnap.cc:59\r\n59\t    delete this->dataPtr->snapLines;\r\n(gdb) bt\r\n#0  0x00007fbcd00bbfea in gazebo::gui::ModelSnap::~ModelSnap (this=0x7fbcd04c7560 <SingletonT<gazebo::gui::ModelSnap>::GetInstance()::t>, \r\n    __in_chrg=<optimized out>) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelSnap.cc:59\r\n#1  0x00007fbccbecb519 in __run_exit_handlers (status=0, listp=0x7fbccc24e6c8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:82\r\n#2  0x00007fbccbecb565 in __GI_exit (status=<optimized out>) at exit.c:104\r\n#3  0x00007fbccbeb0ecc in __libc_start_main (main=0x409960 <main(int, char**)>, argc=2, argv=0x7fff2b360818, init=<optimized out>, fini=<optimized out>, \r\n    rtld_fini=<optimized out>, stack_end=0x7fff2b360808) at libc-start.c:321\r\n#4  0x000000000040a3a9 in _start ()\r\n(gdb) \r\n~~~\r\n\r\nThe `UserCameraJoystick` test from pull request #1168 does not seg-fault.\r\n\r\n@iche033 One of the tear-down seg-faults is in the ModelSnap destructor.", "markup": "markdown", "html": "<p>The <code>UNIT_MainWindow_TEST</code> doesn't get run by Jenkins, and I've noticed it failing in several places recently.</p>\n<p>Running all tests generates with <code>gazebo/gui/UNIT_MainWindow_TEST</code> shows the <code>CopyPasteModel</code> test passing (with several warnings):</p>\n<div class=\"codehilite\"><pre><span></span>$ gazebo/gui/UNIT_MainWindow_TEST\n********* Start testing of MainWindow_TEST *********\nConfig: Using QTest library <span class=\"m\">4</span>.8.6, Qt <span class=\"m\">4</span>.8.6\nPASS   : MainWindow_TEST::initTestCase<span class=\"o\">()</span>\nQWARN  : MainWindow_TEST::CopyPasteModel<span class=\"o\">()</span> QObject::connect: Cannot connect <span class=\"o\">(</span>null<span class=\"o\">)</span>::DeleteSignal<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span> to gazebo::gui::ModelCreator::OnDelete<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span>\nQWARN  : MainWindow_TEST::CopyPasteModel<span class=\"o\">()</span> QObject::connect: Cannot queue arguments of <span class=\"nb\">type</span> <span class=\"s1\">&#39;QItemSelection&#39;</span>\n<span class=\"o\">(</span>Make sure <span class=\"s1\">&#39;QItemSelection&#39;</span> is registered using qRegisterMetaType<span class=\"o\">()</span>.<span class=\"o\">)</span>\nQWARN  : MainWindow_TEST::CopyPasteModel<span class=\"o\">()</span> QObject::connect: Cannot queue arguments of <span class=\"nb\">type</span> <span class=\"s1\">&#39;QItemSelection&#39;</span>\n<span class=\"o\">(</span>Make sure <span class=\"s1\">&#39;QItemSelection&#39;</span> is registered using qRegisterMetaType<span class=\"o\">()</span>.<span class=\"o\">)</span>\nQWARN  : MainWindow_TEST::CopyPasteModel<span class=\"o\">()</span> QObject::connect: Cannot queue arguments of <span class=\"nb\">type</span> <span class=\"s1\">&#39;QItemSelection&#39;</span>\n<span class=\"o\">(</span>Make sure <span class=\"s1\">&#39;QItemSelection&#39;</span> is registered using qRegisterMetaType<span class=\"o\">()</span>.<span class=\"o\">)</span>\nSharePercentChange<span class=\"o\">[</span><span class=\"m\">0</span>.739142<span class=\"o\">]</span> ShareMaxPercentChange<span class=\"o\">[</span><span class=\"m\">2</span><span class=\"o\">]</span>\nResPercentChange<span class=\"o\">[</span><span class=\"m\">2</span>.9876<span class=\"o\">]</span>ResMaxPercentChange<span class=\"o\">[</span><span class=\"m\">5</span><span class=\"o\">]</span>\nPASS   : MainWindow_TEST::CopyPasteModel<span class=\"o\">()</span>\n</pre></div>\n\n\n<p>It fails during the next test <code>CopyPasteLight</code> (<a data-is-external-link=\"true\" href=\"https://gist.github.com/scpeters/52cc7154d8fea6b746dc\" rel=\"nofollow\">backtrace</a>):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">QWARN</span>  <span class=\"o\">:</span> <span class=\"n\">MainWindow_TEST</span><span class=\"o\">::</span><span class=\"n\">CopyPasteLight</span><span class=\"o\">()</span> <span class=\"n\">QObject</span><span class=\"o\">::</span><span class=\"n\">connect</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">connect</span> <span class=\"o\">(</span><span class=\"kc\">null</span><span class=\"o\">)::</span><span class=\"n\">DeleteSignal</span><span class=\"o\">(</span><span class=\"kd\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;)</span> <span class=\"n\">to</span> <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">gui</span><span class=\"o\">::</span><span class=\"n\">ModelCreator</span><span class=\"o\">::</span><span class=\"n\">OnDelete</span><span class=\"o\">(</span><span class=\"kd\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;)</span>\n<span class=\"n\">QFATAL</span> <span class=\"o\">:</span> <span class=\"n\">MainWindow_TEST</span><span class=\"o\">::</span><span class=\"n\">CopyPasteLight</span><span class=\"o\">()</span> <span class=\"n\">Received</span> <span class=\"n\">signal</span> <span class=\"mi\">11</span>\n<span class=\"n\">FAIL</span><span class=\"o\">!</span>  <span class=\"o\">:</span> <span class=\"n\">MainWindow_TEST</span><span class=\"o\">::</span><span class=\"n\">CopyPasteLight</span><span class=\"o\">()</span> <span class=\"n\">Received</span> <span class=\"n\">a</span> <span class=\"n\">fatal</span> <span class=\"n\">error</span><span class=\"o\">.</span>\n   <span class=\"n\">Loc</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"n\">Unknown</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"n\">Totals</span><span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"n\">passed</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"n\">skipped</span>\n<span class=\"o\">*********</span> <span class=\"n\">Finished</span> <span class=\"n\">testing</span> <span class=\"n\">of</span> <span class=\"n\">MainWindow_TEST</span> <span class=\"o\">*********</span>\n<span class=\"n\">Aborted</span> <span class=\"o\">(</span><span class=\"n\">core</span> <span class=\"n\">dumped</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>Running the <code>CopyPasteLight</code> test by itself shows it passing:</p>\n<div class=\"codehilite\"><pre><span></span>$ gazebo/gui/UNIT_MainWindow_TEST CopyPasteLight\n********* Start testing of MainWindow_TEST *********\nConfig: Using QTest library <span class=\"m\">4</span>.8.6, Qt <span class=\"m\">4</span>.8.6\nPASS   : MainWindow_TEST::initTestCase<span class=\"o\">()</span>\nQWARN  : MainWindow_TEST::CopyPasteLight<span class=\"o\">()</span> QObject::connect: Cannot connect <span class=\"o\">(</span>null<span class=\"o\">)</span>::DeleteSignal<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span> to gazebo::gui::ModelCreator::OnDelete<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span>\nQWARN  : MainWindow_TEST::CopyPasteLight<span class=\"o\">()</span> QObject::connect: Cannot queue arguments of <span class=\"nb\">type</span> <span class=\"s1\">&#39;QItemSelection&#39;</span>\n<span class=\"o\">(</span>Make sure <span class=\"s1\">&#39;QItemSelection&#39;</span> is registered using qRegisterMetaType<span class=\"o\">()</span>.<span class=\"o\">)</span>\nQWARN  : MainWindow_TEST::CopyPasteLight<span class=\"o\">()</span> QObject::connect: Cannot queue arguments of <span class=\"nb\">type</span> <span class=\"s1\">&#39;QItemSelection&#39;</span>\n<span class=\"o\">(</span>Make sure <span class=\"s1\">&#39;QItemSelection&#39;</span> is registered using qRegisterMetaType<span class=\"o\">()</span>.<span class=\"o\">)</span>\nQWARN  : MainWindow_TEST::CopyPasteLight<span class=\"o\">()</span> QObject::connect: Cannot queue arguments of <span class=\"nb\">type</span> <span class=\"s1\">&#39;QItemSelection&#39;</span>\n<span class=\"o\">(</span>Make sure <span class=\"s1\">&#39;QItemSelection&#39;</span> is registered using qRegisterMetaType<span class=\"o\">()</span>.<span class=\"o\">)</span>\nSharePercentChange<span class=\"o\">[</span><span class=\"m\">0</span>.816397<span class=\"o\">]</span> ShareMaxPercentChange<span class=\"o\">[</span><span class=\"m\">2</span><span class=\"o\">]</span>\nResPercentChange<span class=\"o\">[</span><span class=\"m\">2</span>.48874<span class=\"o\">]</span>ResMaxPercentChange<span class=\"o\">[</span><span class=\"m\">5</span><span class=\"o\">]</span>\nPASS   : MainWindow_TEST::CopyPasteLight<span class=\"o\">()</span>\nPASS   : MainWindow_TEST::cleanupTestCase<span class=\"o\">()</span>\nTotals: <span class=\"m\">3</span> passed, <span class=\"m\">0</span> failed, <span class=\"m\">0</span> skipped\n********* Finished testing of MainWindow_TEST *********\n</pre></div>\n\n\n<p>The <code>Wireframe</code> and <code>NonDefaultWorld</code> tests appear to pass but seg-fault during tear-down:</p>\n<div class=\"codehilite\"><pre><span></span>$ gazebo/gui/UNIT_MainWindow_TEST Wireframe\n********* Start testing of MainWindow_TEST *********\nConfig: Using QTest library <span class=\"m\">4</span>.8.6, Qt <span class=\"m\">4</span>.8.6\nPASS   : MainWindow_TEST::initTestCase<span class=\"o\">()</span>\nQWARN  : MainWindow_TEST::Wireframe<span class=\"o\">()</span> QObject::connect: Cannot connect <span class=\"o\">(</span>null<span class=\"o\">)</span>::DeleteSignal<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span> to gazebo::gui::ModelCreator::OnDelete<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span>\nSharePercentChange<span class=\"o\">[</span><span class=\"m\">0</span>.725986<span class=\"o\">]</span> ShareMaxPercentChange<span class=\"o\">[</span><span class=\"m\">2</span><span class=\"o\">]</span>\nResPercentChange<span class=\"o\">[</span><span class=\"m\">2</span>.02818<span class=\"o\">]</span>ResMaxPercentChange<span class=\"o\">[</span><span class=\"m\">5</span><span class=\"o\">]</span>\nPASS   : MainWindow_TEST::Wireframe<span class=\"o\">()</span>\nPASS   : MainWindow_TEST::cleanupTestCase<span class=\"o\">()</span>\nTotals: <span class=\"m\">3</span> passed, <span class=\"m\">0</span> failed, <span class=\"m\">0</span> skipped\n********* Finished testing of MainWindow_TEST *********\nSegmentation fault <span class=\"o\">(</span>core dumped<span class=\"o\">)</span>\n...\nCore was generated by <span class=\"sb\">`</span>gazebo/gui/UNIT_MainWindow_TEST Wireframe<span class=\"err\">&#39;</span>.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n<span class=\"c1\">#0  0x00007fbcd00bbfea in gazebo::gui::ModelSnap::~ModelSnap (this=0x7fbcd04c7560 &lt;SingletonT&lt;gazebo::gui::ModelSnap&gt;::GetInstance()::t&gt;, </span>\n    <span class=\"nv\">__in_chrg</span><span class=\"o\">=</span>&lt;optimized out&gt;<span class=\"o\">)</span> at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelSnap.cc:59\n<span class=\"m\">59</span>      delete this-&gt;dataPtr-&gt;snapLines<span class=\"p\">;</span>\n<span class=\"o\">(</span>gdb<span class=\"o\">)</span> bt\n<span class=\"c1\">#0  0x00007fbcd00bbfea in gazebo::gui::ModelSnap::~ModelSnap (this=0x7fbcd04c7560 &lt;SingletonT&lt;gazebo::gui::ModelSnap&gt;::GetInstance()::t&gt;, </span>\n    <span class=\"nv\">__in_chrg</span><span class=\"o\">=</span>&lt;optimized out&gt;<span class=\"o\">)</span> at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelSnap.cc:59\n<span class=\"c1\">#1  0x00007fbccbecb519 in __run_exit_handlers (status=0, listp=0x7fbccc24e6c8 &lt;__exit_funcs&gt;, run_list_atexit=run_list_atexit@entry=true) at exit.c:82</span>\n<span class=\"c1\">#2  0x00007fbccbecb565 in __GI_exit (status=&lt;optimized out&gt;) at exit.c:104</span>\n<span class=\"c1\">#3  0x00007fbccbeb0ecc in __libc_start_main (main=0x409960 &lt;main(int, char**)&gt;, argc=2, argv=0x7fff2b360818, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, </span>\n    <span class=\"nv\">rtld_fini</span><span class=\"o\">=</span>&lt;optimized out&gt;, <span class=\"nv\">stack_end</span><span class=\"o\">=</span>0x7fff2b360808<span class=\"o\">)</span> at libc-start.c:321\n<span class=\"c1\">#4  0x000000000040a3a9 in _start ()</span>\n<span class=\"o\">(</span>gdb<span class=\"o\">)</span> \n</pre></div>\n\n\n<p>The <code>UserCameraJoystick</code> test from <a href=\"#!/osrf/gazebo/pull-requests/1168/integrated-space-navigator-joystick\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1168</a> does not seg-fault.</p>\n<p>@iche033 One of the tear-down seg-faults is in the ModelSnap destructor.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2014-08-13T22:16:30.372156+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:45.437997+00:00", "type": "issue", "id": 1261}