{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/878/comments/6854528.json"}, "html": {"href": "#!/osrf/gazebo/issues/878#comment-6854528"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/878.json"}}, "type": "issue", "id": 878, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Joint::SetForce documentation incomplete"}, "content": {"raw": "I just found from https://bitbucket.org/osrf/drcsim/issue/115 that `SetForce` already calls `dJointAddHingeTorque` internally, but only for Joints. ODELink.cc calls `dBodySetForce`.\n\nThe `SetForce` and `GetForce` methods and friends (torque, linear and angular acceleration) seem to cause a lot of confusion. I would appreciate if the outcome of these methods would be unified and clearly documented soon:\n\n* for both joints and links\n* for force/torque and accelerations\n* whether they set or accumulate\n* whether they return the accumulated value or the total applied force/torque of the last time step\n* What's the purpose of `Link::SetLinearAccel()` and `Link::SetAngularAccel()`?\n* clarify at which point the forces and torques are applied (origin vs. CoG, see #354)\n\nRelated issues:\n\n* #!/osrf/gazebo/issue/485/update-joint-getforce-to-return\n* https://bitbucket.org/osrf/drcsim/issue/115\n* #!/osrf/gazebo/issue/354/setforce-settorque-in-class-odelink-point", "markup": "markdown", "html": "<p>I just found from <a href=\"https://bitbucket.org/osrf/drcsim/issue/115\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/drcsim/issue/115</a> that <code>SetForce</code> already calls <code>dJointAddHingeTorque</code> internally, but only for Joints. ODELink.cc calls <code>dBodySetForce</code>.</p>\n<p>The <code>SetForce</code> and <code>GetForce</code> methods and friends (torque, linear and angular acceleration) seem to cause a lot of confusion. I would appreciate if the outcome of these methods would be unified and clearly documented soon:</p>\n<ul>\n<li>for both joints and links</li>\n<li>for force/torque and accelerations</li>\n<li>whether they set or accumulate</li>\n<li>whether they return the accumulated value or the total applied force/torque of the last time step</li>\n<li>What's the purpose of <code>Link::SetLinearAccel()</code> and <code>Link::SetAngularAccel()</code>?</li>\n<li>clarify at which point the forces and torques are applied (origin vs. CoG, see <a href=\"#!/osrf/gazebo/issues/354/setforce-settorque-in-class-odelink-point\" rel=\"nofollow\" title=\"SetForce/SetTorque in class ODELink / Point of application of forces and torques\" class=\"ap-connect-link\">#354</a>)</li>\n</ul>\n<p>Related issues:</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/issue/485/update-joint-getforce-to-return\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issue/485/update-joint-getforce-to-return</a></li>\n<li><a href=\"https://bitbucket.org/osrf/drcsim/issue/115\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/drcsim/issue/115</a></li>\n<li><a href=\"#!/osrf/gazebo/issue/354/setforce-settorque-in-class-odelink-point\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issue/354/setforce-settorque-in-class-odelink-point</a></li>\n</ul>", "type": "rendered"}, "created_on": "2013-11-12T09:50:55.326273+00:00", "user": {"display_name": "Johannes Meyer", "uuid": "{58d19163-cefc-479b-b80a-d78fb811b533}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B58d19163-cefc-479b-b80a-d78fb811b533%7D"}, "html": {"href": "https://bitbucket.org/%7B58d19163-cefc-479b-b80a-d78fb811b533%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1363fb056a859ce072c21fdb8da3a710d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJM-6.png"}}, "nickname": "johmeyer", "type": "user", "account_id": "557058:7237c8c3-e637-4ea0-ab9c-d45f303d8fb9"}, "updated_on": null, "type": "issue_comment", "id": 6854528}