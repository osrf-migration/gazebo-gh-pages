{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/939/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/939.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/939/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/939/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/939/crash-while-x11-forwarding-over-ssh"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/939/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Crash while X11 forwarding over ssh", "component": {"name": "rendering", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122881.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Initially posted by @dljsjr on [stackexchange.com](http://unix.stackexchange.com/questions/76005/x11-forwarding-an-opengl-application-from-a-machine-running-an-nvidia-card-to-a)\r\n\r\nI'm interested in forwarding an X11 session over SSH, in order to launch a remote process that utilizes OpenGL (specifically, gazebo for anyone familiar.)\r\n\r\nThe problem that I seem to be running into is that gazebo crashes due to a mismatch in the graphics cards; it can't find \"NV-GLX\" extensions. The exact error output:\r\n\r\n~~~\r\nXlib:  extension \"NV-GLX\" missing on display \"localhost:10.0\".\r\nXlib:  extension \"NV-GLX\" missing on display \"localhost:10.0\".\r\nX Error of failed request:  GLXUnsupportedPrivateRequest\r\n  Major opcode of failed request:  149 (GLX)\r\n  Minor opcode of failed request:  16 (X_GLXVendorPrivate)\r\n  Serial number of failed request:  24\r\n  Current serial number in output stream:  25\r\n~~~\r\nThe remote machine is running with an NVIDIA card, and my local machine is using an AMD card.\r\n\r\nI've tested X11 forwarding of gazebo between two machines with NVIDIA cards. It works just fine.\r\n\r\nAs near as I can tell, it seems that one of three things are happening:\r\n\r\n1. I'm doing something wrong,\r\n2. What I want to do is impossible,\r\n3. Gazebo doesn't build in an agnostic manner with branching codepaths for different hardware; whatever your system looks like when it builds is what you get.\r\n\r\nI'm really hoping it's (1), and I'm really hoping someone here can help me out. If it makes any difference, the remote machine is running Ubuntu and my local machine is a Mac running 10.8.2; I already know that I have x11 forwarding set up properly for normal use as I can get things like xclock to open up in XQuartz just fine. The solution (if it exists) would also preferably work for other OS's including Windows over WinSCP.", "markup": "markdown", "html": "<p>Initially posted by @dljsjr on <a data-is-external-link=\"true\" href=\"http://unix.stackexchange.com/questions/76005/x11-forwarding-an-opengl-application-from-a-machine-running-an-nvidia-card-to-a\" rel=\"nofollow\">stackexchange.com</a></p>\n<p>I'm interested in forwarding an X11 session over SSH, in order to launch a remote process that utilizes OpenGL (specifically, gazebo for anyone familiar.)</p>\n<p>The problem that I seem to be running into is that gazebo crashes due to a mismatch in the graphics cards; it can't find \"NV-GLX\" extensions. The exact error output:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Xlib</span><span class=\"o\">:</span>  <span class=\"n\">extension</span> <span class=\"s2\">&quot;NV-GLX&quot;</span> <span class=\"n\">missing</span> <span class=\"n\">on</span> <span class=\"n\">display</span> <span class=\"s2\">&quot;localhost:10.0&quot;</span><span class=\"o\">.</span>\n<span class=\"n\">Xlib</span><span class=\"o\">:</span>  <span class=\"n\">extension</span> <span class=\"s2\">&quot;NV-GLX&quot;</span> <span class=\"n\">missing</span> <span class=\"n\">on</span> <span class=\"n\">display</span> <span class=\"s2\">&quot;localhost:10.0&quot;</span><span class=\"o\">.</span>\n<span class=\"n\">X</span> <span class=\"n\">Error</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"n\">request</span><span class=\"o\">:</span>  <span class=\"n\">GLXUnsupportedPrivateRequest</span>\n  <span class=\"n\">Major</span> <span class=\"n\">opcode</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"n\">request</span><span class=\"o\">:</span>  <span class=\"mi\">149</span> <span class=\"o\">(</span><span class=\"n\">GLX</span><span class=\"o\">)</span>\n  <span class=\"n\">Minor</span> <span class=\"n\">opcode</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"n\">request</span><span class=\"o\">:</span>  <span class=\"mi\">16</span> <span class=\"o\">(</span><span class=\"n\">X_GLXVendorPrivate</span><span class=\"o\">)</span>\n  <span class=\"n\">Serial</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"n\">request</span><span class=\"o\">:</span>  <span class=\"mi\">24</span>\n  <span class=\"n\">Current</span> <span class=\"n\">serial</span> <span class=\"n\">number</span> <span class=\"k\">in</span> <span class=\"n\">output</span> <span class=\"n\">stream</span><span class=\"o\">:</span>  <span class=\"mi\">25</span>\n</pre></div>\n\n\n<p>The remote machine is running with an NVIDIA card, and my local machine is using an AMD card.</p>\n<p>I've tested X11 forwarding of gazebo between two machines with NVIDIA cards. It works just fine.</p>\n<p>As near as I can tell, it seems that one of three things are happening:</p>\n<ol>\n<li>I'm doing something wrong,</li>\n<li>What I want to do is impossible,</li>\n<li>Gazebo doesn't build in an agnostic manner with branching codepaths for different hardware; whatever your system looks like when it builds is what you get.</li>\n</ol>\n<p>I'm really hoping it's (1), and I'm really hoping someone here can help me out. If it makes any difference, the remote machine is running Ubuntu and my local machine is a Mac running 10.8.2; I already know that I have x11 forwarding set up properly for normal use as I can get things like xclock to open up in XQuartz just fine. The solution (if it exists) would also preferably work for other OS's including Windows over WinSCP.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-11-07T07:10:02.348594+00:00", "milestone": null, "updated_on": "2017-01-16T19:50:02.950065+00:00", "type": "issue", "id": 939}