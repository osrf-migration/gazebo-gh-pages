{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2403/comments/44148554.json"}, "html": {"href": "#!/osrf/gazebo/issues/2403#comment-44148554"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2403.json"}}, "type": "issue", "id": 2403, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Update model paths on both gzclient and gzserver at runtime"}, "content": {"raw": "I started brainstorming a little bit about this.\n\nFor Ignition Fuel, I'm currently leaning towards making it work outside of Gazebo's model and resource paths. There will be a local cache specified by fuel's yaml configuration file, and the user doesn't need to specify anything else: `ign-fuel-tools` will be responsible for checking the local cache and pulling resources from the internet if not available.\n\nFor everything else, some thoughts:\n\n* `gzclient` and `gzserver` could communicate to each other when a new path has been added, using Ignition Transport. The problem is that local paths are less useful if the processes are running in different machines.\n* We could have a fallback mechanism which allows transmitting resources using Ignition Transport. For example, if `gzclient` can't find a resource on its local paths, and it is running in a different machine, `gzserver` could provide these resources through an Ignition Transport service. Gazebo already sends SDF files through messages, it could also send mesh files (dae, obj, stl...) and texture images, only when necessary, and `gzclient` could cache them locally for future use.", "markup": "markdown", "html": "<p>I started brainstorming a little bit about this.</p>\n<p>For Ignition Fuel, I'm currently leaning towards making it work outside of Gazebo's model and resource paths. There will be a local cache specified by fuel's yaml configuration file, and the user doesn't need to specify anything else: <code>ign-fuel-tools</code> will be responsible for checking the local cache and pulling resources from the internet if not available.</p>\n<p>For everything else, some thoughts:</p>\n<ul>\n<li><code>gzclient</code> and <code>gzserver</code> could communicate to each other when a new path has been added, using Ignition Transport. The problem is that local paths are less useful if the processes are running in different machines.</li>\n<li>We could have a fallback mechanism which allows transmitting resources using Ignition Transport. For example, if <code>gzclient</code> can't find a resource on its local paths, and it is running in a different machine, <code>gzserver</code> could provide these resources through an Ignition Transport service. Gazebo already sends SDF files through messages, it could also send mesh files (dae, obj, stl...) and texture images, only when necessary, and <code>gzclient</code> could cache them locally for future use.</li>\n</ul>", "type": "rendered"}, "created_on": "2018-03-24T17:19:34.177051+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 44148554}