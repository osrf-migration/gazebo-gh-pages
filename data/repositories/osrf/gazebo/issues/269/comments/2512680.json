{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/269/comments/2512680.json"}, "html": {"href": "#!/osrf/gazebo/issues/269#comment-2512680"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/269.json"}}, "type": "issue", "id": 269, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "ODELink::SetKinematic(true) Leads to Model Disassembly in Simulation"}, "content": {"raw": "Actually I'm not able to reproduce this crash any more. It certainly doesn't crash when you enable kinematics for a single link through the Gazebo interface, but it crashed when i added <kinematic>True</kinematic> to every link in the drc robot's model.sdf ... setting kinematic to true in the \"sdf\" does not actually do anything though because the model.sdf is actually a urdf and hence it gets discarded during conversion I think.\n\nI don't know why it segfaulted after changing this but it probably was due to something else so this ticket can be discarded. I'll open some other tickets related to this though.\n\nBtw enabling kinematics for single links of the robot leads to interesting effects. Either your robot model starts to dissolve (when i tried it the first time I managed to separate all the links by enabling kinematic mode for all of them: http://i.imgur.com/8KUyi.png ) or it starts to spin around the link that has kinematic mode while all other links still react dynamically: http://youtu.be/Qd6iMOEgOj0\n\nThis might be a first step to having both kinematic and dynamic links in the environment, or maybe it's even supported already by switching all links of a robot to kinematic mode simultaneously? At least when enabling kinematic mode individually weird stuff seems to happen when there's more than 1 kinematic link in a robot, even when the kinematic links are connected to each other with no dynamic link between them.\n\n", "markup": "markdown", "html": "<p>Actually I'm not able to reproduce this crash any more. It certainly doesn't crash when you enable kinematics for a single link through the Gazebo interface, but it crashed when i added &lt;kinematic&gt;True&lt;/kinematic&gt; to every link in the drc robot's model.sdf ... setting kinematic to true in the \"sdf\" does not actually do anything though because the model.sdf is actually a urdf and hence it gets discarded during conversion I think.</p>\n<p>I don't know why it segfaulted after changing this but it probably was due to something else so this ticket can be discarded. I'll open some other tickets related to this though.</p>\n<p>Btw enabling kinematics for single links of the robot leads to interesting effects. Either your robot model starts to dissolve (when i tried it the first time I managed to separate all the links by enabling kinematic mode for all of them: <a href=\"http://i.imgur.com/8KUyi.png\" rel=\"nofollow\" class=\"ap-connect-link\">http://i.imgur.com/8KUyi.png</a> ) or it starts to spin around the link that has kinematic mode while all other links still react dynamically: <a href=\"http://youtu.be/Qd6iMOEgOj0\" rel=\"nofollow\" class=\"ap-connect-link\">http://youtu.be/Qd6iMOEgOj0</a></p>\n<p>This might be a first step to having both kinematic and dynamic links in the environment, or maybe it's even supported already by switching all links of a robot to kinematic mode simultaneously? At least when enabling kinematic mode individually weird stuff seems to happen when there's more than 1 kinematic link in a robot, even when the kinematic links are connected to each other with no dynamic link between them.</p>", "type": "rendered"}, "created_on": "2012-11-30T05:10:45.553749+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 2512680}