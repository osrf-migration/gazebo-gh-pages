{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643/comments/53094321.json"}, "html": {"href": "#!/osrf/gazebo/issues/2643#comment-53094321"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643.json"}}, "type": "issue", "id": 2643, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo laserscaner"}, "content": {"raw": "It sounds like you may have an issue on the code that is subscribing. You can get help setting up your subscriber at http://answers.gazebosim.org/ . Be sure to add more information on how others can reproduce your problem.\n\nThis issue tracker is for bug reports and feature requests.", "markup": "markdown", "html": "<p>It sounds like you may have an issue on the code that is subscribing. You can get help setting up your subscriber at <a href=\"http://answers.gazebosim.org/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/</a> . Be sure to add more information on how others can reproduce your problem.</p>\n<p>This issue tracker is for bug reports and feature requests.</p>", "type": "rendered"}, "created_on": "2019-07-22T16:01:31.357943+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 53094321}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643/comments/53104698.json"}, "html": {"href": "#!/osrf/gazebo/issues/2643#comment-53104698"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643.json"}}, "type": "issue", "id": 2643, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo laserscaner"}, "content": {"raw": "If I want to go in detail it is so, that I built a car \\( a chassis an four tiers\\) and as a sensor I built my own lidar sensor with respect to its specifications and following gazebo tutorials. When I run my world by writtin \u201cgz topic -l\u201d I can see my laser scan in gazebo\u2019s topics under \u201c /gazebo/default/my\\_car/rplidar/top/sensor/scan\u201d, and I can see the data scanning of my sensor if I write \u201c gz topic -e /gazebo/default/my\\_car/rplidar/top/sensor/scan\u201d. but when I try to subscribe these data with a listener after compilling I became this error with false data.\n\nHere is my listener code:\n\n`#include <gazebo/transport/transport.hh>`\n\n`#include <gazebo/msgs/msgs.hh>`\n\n`#include <gazebo/gazebo_client.hh>`\n\n`#include <iostream>`\n\n`// Function is called everytime a message is received.`\n\n`void cb(ConstLaserScanPtr &_msg){`\n\n`// Dump the message contents to stdout.`\n\n`std::cout << _msg->DebugString();`\n\n`}`\n\n`int main(int _argc, char **_argv){`\n\n  `// Load gazebo gazebo::client::setup(_argc, _argv); `\n\n` // Create the node for communication `\n\n` gazebo::transport::NodePtr node(new gazebo::transport::Node());`\n\n` node->Init(); `\n\n`// Listen to Gazebo my_car/rplidar/top/sensor/scan topic `\n\n`gazebo::transport::SubscriberPtr sub = node->Subscribe(\"~/my_car/rplidar/top/sensor/scan\", cb);`\n\n`// Busy wait loop while (true) gazebo::common::Time::MSleep(10);`\n\n` // Shut everything down `\n\n`gazebo::client::shutdown();`\n\n`}`", "markup": "markdown", "html": "<p>If I want to go in detail it is so, that I built a car ( a chassis an four tiers) and as a sensor I built my own lidar sensor with respect to its specifications and following gazebo tutorials. When I run my world by writtin \u201cgz topic -l\u201d I can see my laser scan in gazebo\u2019s topics under \u201c /gazebo/default/my_car/rplidar/top/sensor/scan\u201d, and I can see the data scanning of my sensor if I write \u201c gz topic -e /gazebo/default/my_car/rplidar/top/sensor/scan\u201d. but when I try to subscribe these data with a listener after compilling I became this error with false data.</p>\n<p>Here is my listener code:</p>\n<p><code>#include &lt;gazebo/transport/transport.hh&gt;</code></p>\n<p><code>#include &lt;gazebo/msgs/msgs.hh&gt;</code></p>\n<p><code>#include &lt;gazebo/gazebo_client.hh&gt;</code></p>\n<p><code>#include &lt;iostream&gt;</code></p>\n<p><code>// Function is called everytime a message is received.</code></p>\n<p><code>void cb(ConstLaserScanPtr &amp;_msg){</code></p>\n<p><code>// Dump the message contents to stdout.</code></p>\n<p><code>std::cout &lt;&lt; _msg-&gt;DebugString();</code></p>\n<p><code>}</code></p>\n<p><code>int main(int _argc, char **_argv){</code></p>\n<p><code>// Load gazebo gazebo::client::setup(_argc, _argv);</code></p>\n<p><code>// Create the node for communication</code></p>\n<p><code>gazebo::transport::NodePtr node(new gazebo::transport::Node());</code></p>\n<p><code>node-&gt;Init();</code></p>\n<p><code>// Listen to Gazebo my_car/rplidar/top/sensor/scan topic</code></p>\n<p><code>gazebo::transport::SubscriberPtr sub = node-&gt;Subscribe(\"~/my_car/rplidar/top/sensor/scan\", cb);</code></p>\n<p><code>// Busy wait loop while (true) gazebo::common::Time::MSleep(10);</code></p>\n<p><code>// Shut everything down</code></p>\n<p><code>gazebo::client::shutdown();</code></p>\n<p><code>}</code></p>", "type": "rendered"}, "created_on": "2019-07-23T08:06:17.754995+00:00", "user": {"display_name": "Azar M", "uuid": "{a69a1f6e-e6bb-41b6-8eaf-e4216927413d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba69a1f6e-e6bb-41b6-8eaf-e4216927413d%7D"}, "html": {"href": "https://bitbucket.org/%7Ba69a1f6e-e6bb-41b6-8eaf-e4216927413d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7e9e68e9ed38c0e1f42a0e325e2fdd77d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAM-4.png"}}, "nickname": "Azar M", "type": "user", "account_id": "5d00f830bfea840c5dd1a0b6"}, "updated_on": "2019-07-23T08:07:46.884724+00:00", "type": "issue_comment", "id": 53104698}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643/comments/53114351.json"}, "html": {"href": "#!/osrf/gazebo/issues/2643#comment-53114351"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643.json"}}, "type": "issue", "id": 2643, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo laserscaner"}, "content": {"raw": "I don't see anything wrong with the subscriber code.\n\n> I built my own lidar sensor with respect to its specifications and following gazebo tutorials\n\nWould it be possible for you to share your sensor code? Did you write a new sensor in C++ or just configured an existing sensor in SDF?", "markup": "markdown", "html": "<p>I don't see anything wrong with the subscriber code.</p>\n<blockquote>\n<p>I built my own lidar sensor with respect to its specifications and following gazebo tutorials</p>\n</blockquote>\n<p>Would it be possible for you to share your sensor code? Did you write a new sensor in C++ or just configured an existing sensor in SDF?</p>", "type": "rendered"}, "created_on": "2019-07-23T19:08:11.157611+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 53114351}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643/comments/53119910.json"}, "html": {"href": "#!/osrf/gazebo/issues/2643#comment-53119910"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643.json"}}, "type": "issue", "id": 2643, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo laserscaner"}, "content": {"raw": "I configured an existing sensor. Here is the SDF for my sensor:\n\n<?xml version=\"1.0\" ?>  \n<sdf version=\"1.5\">  \n<model name=\"rplidar\">  \n<!-- Give the base link a unique name -->  \n<link name=\"base\">\n\n```\n    <!-- Offset the base by half the lenght of the cylinder -->\n    <pose>0 0 0.01 0 0 0</pose>\n    <inertial>\n      <mass>0.1</mass>\n      <inertia>\n        <ixx>0.000394</ixx>\n        <iyy>0.000394</iyy>\n        <izz>0.000722</izz>\n        <ixy>0</ixy>\n        <ixz>0</ixz>\n        <iyz>0</iyz>\n      </inertia>\n    </inertial>\n    <collision name=\"base_collision\">\n      <geometry>\n        <cylinder>\n          <!-- Radius and length provided by Slamtec -->\n          <radius>0.038</radius>\n          <length>0.02</length>\n        </cylinder>\n      </geometry>\n    </collision>\n\n    <!-- The visual is mostly a copy of the collision -->\n    <visual name=\"base_visual\">\n      <geometry>\n        <cylinder>\n          <radius>0.038</radius>\n          <length>0.02</length>\n        </cylinder>\n      </geometry>\n    </visual>\n  </link>\n  <!-- Give the base link a unique name -->\n  <link name=\"top\">\n    <!-- Add a ray sensor, and give it a name -->\n    <sensor type=\"ray\" name=\"sensor\">\n\n      <!-- Position the ray sensor based on the specification. Also rotate\n          it by 90 degrees around the Z-axis to become Horizontal -->\n      <pose>0 0 0.002 0 0 1.5707</pose>\n\n      <!-- Enable visualization to see the rays in the GUI -->\n      <visualize>true</visualize>\n\n  <topic>range</topic>\n\n      <!-- Set the update rate of the sensor -->\n      <update_rate>30</update_rate>\n      <ray>\n        <noise>\n          <!-- Use gaussian noise -->\n          <type>gaussian</type>\n          <mean>0.0</mean>\n          <stddev>0.02</stddev>\n        </noise>\n\n        <!-- The scan element contains the horizontal and vertical beams.\n            We are leaving out the vertical beams. -->\n        <scan>\n\n          <!-- The horizontal beams -->\n          <horizontal>\n            <!-- The rplidar has 120 beams(samples) -->\n            <samples>120</samples>\n\n            <!-- Resolution is multiplied by samples to determine number of\n                simulated beams vs interpolated beams. See:\n                <http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution>\n                -->\n            <resolution>1</resolution>\n\n            <!-- Minimum angle in radians -->\n            <min_angle>0</min_angle>\n\n            <!-- Maximum angle in radians -->\n            <max_angle>6.28</max_angle>\n          </horizontal>\n        </scan>\n\n        <!-- Range defines characteristics of an individual beam -->\n        <range>\n\n          <!-- Minimum distance of the beam -->\n          <min>0.15</min>\n\n          <!-- Maximum distance of the beam -->\n          <max>12</max>\n\n          <!-- Linear resolution of the beam -->\n          <resolution>0.02</resolution>\n        </range>\n      </ray>\n\t  <plugin name=\"sensor_plugin\" filename=\"libgazebo_ros_laser.so\">\n    <topicName>/my_car/rplidar/scan</topicName>\n    <frameName>/my_car/rplidar/frame</frameName>\n  </plugin>\n    </sensor>\n\n\n    <!-- Vertically offset the top cylinder by the length of the bottom\n        cylinder and half the length of this cylinder. -->\n    <pose>0 0 0.031 0 0 0</pose>\n    <inertial>\n      <mass>0.1</mass>\n      <inertia>\n        <ixx>0.000394</ixx>\n        <iyy>0.000394</iyy>\n        <izz>0.000722</izz>\n        <ixy>0</ixy>\n        <ixz>0</ixz>\n        <iyz>0</iyz>\n      </inertia>\n    </inertial>\n    <collision name=\"top_collision\">\n      <geometry>\n        <cylinder>\n          <!-- Radius and length provided by Velodyne -->\n          <radius>0.038</radius>\n          <length>0.02</length>\n        </cylinder>\n      </geometry>\n    </collision>\n\n    <!-- The visual is mostly a copy of the collision -->\n    <visual name=\"top_visual\">\n      <geometry>\n        <cylinder>\n          <radius>0.038</radius>\n          <length>0.02</length>\n        </cylinder>\n      </geometry>\n    </visual>\n  </link>\n  <!-- Each joint must have a unique name -->\n  <joint type=\"revolute\" name=\"joint\">\n    <!-- Position the joint at the bottom of the top link -->\n    <pose>0 0 -0.016 0 0 0</pose>\n\n    <!-- Use the base link as the parent of the joint -->\n    <parent>base</parent>\n\n    <!-- Use the top link as the child of the joint -->\n    <child>top</child>\n\n    <!-- The axis defines the joint's degree of freedom -->\n    <axis>\n\n      <!-- Revolve around the z-axis -->\n      <xyz>0 0 1</xyz>\n\n      <!-- Limit refers to the range of motion of the joint -->\n      <limit>\n\n        <!-- Use a very large number to indicate a continuous revolution -->\n        <lower>-10000000000000000</lower>\n        <upper>10000000000000000</upper>\n      </limit>\n    </axis>\n  </joint>\n</model>\n```\n\n</sdf>\n\nI add it to my ~/.gazebo/model and used it in a car like bellow:\n\n\u200c\n\n<?xml version=\"1.0\"?>  \n<sdf version=\"1.4\">  \n<model name=\"my\\_car\">  \n<static>true</static>  \n<link name='chassis'>  \n<pose>0 0 .1 0 0 0</pose>\n\n```\n    <collision name='collision'>\n      <geometry>\n        <box>\n          <size>.6 .3 .1</size>\n        </box>\n      </geometry>\n    </collision>\n\n    <visual name='visual'>\n      <geometry>\n        <box>\n          <size>.6 .3 .1</size>\n        </box>\n      </geometry>\n    </visual>\n  </link>\n  <link name=\"forward_left_wheel\">\n    <pose>0.14 0.18 0.08 0 1.5707 1.5707</pose>\n    <collision name=\"collision\">\n      <geometry>\n          <cylinder>\n            <radius>.075</radius>\n            <length>.05</length>\n          </cylinder>\n      </geometry>\n    </collision>\n    <visual name=\"visual\">\n      <geometry>\n        <cylinder>\n          <radius>.075</radius>\n          <length>.05</length>\n        </cylinder>\n      </geometry>\n    </visual>\n  </link>\n  <link name=\"forward_right_wheel\">\n    <pose>0.14 -0.18 0.08 0 1.5707 1.5707</pose>\n    <collision name=\"collision\">\n      <geometry>\n          <cylinder>\n            <radius>.075</radius>\n            <length>.05</length>\n          </cylinder>\n      </geometry>\n    </collision>\n    <visual name=\"visual\">\n      <geometry>\n        <cylinder>\n          <radius>.075</radius>\n          <length>.05</length>\n        </cylinder>\n      </geometry>\n    </visual>\n  </link>\n  <link name=\"backward_left_wheel\">\n    <pose>-0.14 0.18 0.08 0 1.5707 1.5707</pose>\n    <collision name=\"collision\">\n      <geometry>\n          <cylinder>\n            <radius>.075</radius>\n            <length>.05</length>\n          </cylinder>\n      </geometry>\n    </collision>\n    <visual name=\"visual\">\n      <geometry>\n        <cylinder>\n          <radius>.075</radius>\n          <length>.05</length>\n        </cylinder>\n      </geometry>\n    </visual>\n  </link>\n  <link name=\"backward_right_wheel\">\n    <pose>-0.14 -0.18 0.08 0 1.5707 1.5707</pose>\n    <collision name=\"collision\">\n      <geometry>\n          <cylinder>\n            <radius>.075</radius>\n            <length>.05</length>\n          </cylinder>\n      </geometry>\n    </collision>\n    <visual name=\"visual\">\n      <geometry>\n        <cylinder>\n          <radius>.075</radius>\n          <length>.05</length>\n        </cylinder>\n      </geometry>\n    </visual>\n  </link>\n  <joint name=\"forward_left_wheel_joint\" type=\"revolute\">\n    <parent>chassis</parent>\n    <child>forward_left_wheel</child>\n    <axis>\n      <xyz> 0 0 1</xyz>\n    </axis>\n  </joint>\n  <joint name=\"forward_right_wheel_joint\" type=\"revolute\">\n    <parent>chassis</parent>\n    <child>forward_right_wheel</child>\n    <axis>\n      <xyz> 0 0 1</xyz>\n    </axis>\n  </joint>\n  <joint name=\"backward_left_wheel_joint\" type=\"revolute\">\n    <parent>chassis</parent>\n    <child>backward_left_wheel</child>\n    <axis>\n      <xyz> 0 0 1</xyz>\n    </axis>\n  </joint>\n  <joint name=\"backward_right_wheel_joint\" type=\"revolute\">\n    <parent>chassis</parent>\n    <child>backward_right_wheel</child>\n    <axis>\n      <xyz> 0 0 1</xyz>\n    </axis>\n  </joint>\n          \n  <include>\n    <uri>model://rplidar</uri>\n    <pose>0.2 0 0.15 0 0 0</pose>\n  </include>\n</model>\n```\n\n</sdf>", "markup": "markdown", "html": "<p>I configured an existing sensor. Here is the SDF for my sensor:</p>\n<p>&lt;?xml version=\"1.0\" ?&gt;<br />\n&lt;sdf version=\"1.5\"&gt;<br />\n&lt;model name=\"rplidar\"&gt;<br />\n&lt;!-- Give the base link a unique name --&gt;<br />\n&lt;link name=\"base\"&gt;</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c\">&lt;!-- Offset the base by half the lenght of the cylinder --&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>0 0 0.01 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;inertial&gt;</span>\n      <span class=\"nt\">&lt;mass&gt;</span>0.1<span class=\"nt\">&lt;/mass&gt;</span>\n      <span class=\"nt\">&lt;inertia&gt;</span>\n        <span class=\"nt\">&lt;ixx&gt;</span>0.000394<span class=\"nt\">&lt;/ixx&gt;</span>\n        <span class=\"nt\">&lt;iyy&gt;</span>0.000394<span class=\"nt\">&lt;/iyy&gt;</span>\n        <span class=\"nt\">&lt;izz&gt;</span>0.000722<span class=\"nt\">&lt;/izz&gt;</span>\n        <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n        <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n        <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n      <span class=\"nt\">&lt;/inertia&gt;</span>\n    <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_collision&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"c\">&lt;!-- Radius and length provided by Slamtec --&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>0.038<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>0.02<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n\n    <span class=\"c\">&lt;!-- The visual is mostly a copy of the collision --&gt;</span>\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_visual&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>0.038<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>0.02<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"c\">&lt;!-- Give the base link a unique name --&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;top&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"c\">&lt;!-- Add a ray sensor, and give it a name --&gt;</span>\n    <span class=\"nt\">&lt;sensor</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ray&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;sensor&quot;</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"c\">&lt;!-- Position the ray sensor based on the specification. Also rotate</span>\n<span class=\"c\">          it by 90 degrees around the Z-axis to become Horizontal --&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 0.002 0 0 1.5707<span class=\"nt\">&lt;/pose&gt;</span>\n\n      <span class=\"c\">&lt;!-- Enable visualization to see the rays in the GUI --&gt;</span>\n      <span class=\"nt\">&lt;visualize&gt;</span>true<span class=\"nt\">&lt;/visualize&gt;</span>\n\n  <span class=\"nt\">&lt;topic&gt;</span>range<span class=\"nt\">&lt;/topic&gt;</span>\n\n      <span class=\"c\">&lt;!-- Set the update rate of the sensor --&gt;</span>\n      <span class=\"nt\">&lt;update_rate&gt;</span>30<span class=\"nt\">&lt;/update_rate&gt;</span>\n      <span class=\"nt\">&lt;ray&gt;</span>\n        <span class=\"nt\">&lt;noise&gt;</span>\n          <span class=\"c\">&lt;!-- Use gaussian noise --&gt;</span>\n          <span class=\"nt\">&lt;type&gt;</span>gaussian<span class=\"nt\">&lt;/type&gt;</span>\n          <span class=\"nt\">&lt;mean&gt;</span>0.0<span class=\"nt\">&lt;/mean&gt;</span>\n          <span class=\"nt\">&lt;stddev&gt;</span>0.02<span class=\"nt\">&lt;/stddev&gt;</span>\n        <span class=\"nt\">&lt;/noise&gt;</span>\n\n        <span class=\"c\">&lt;!-- The scan element contains the horizontal and vertical beams.</span>\n<span class=\"c\">            We are leaving out the vertical beams. --&gt;</span>\n        <span class=\"nt\">&lt;scan&gt;</span>\n\n          <span class=\"c\">&lt;!-- The horizontal beams --&gt;</span>\n          <span class=\"nt\">&lt;horizontal&gt;</span>\n            <span class=\"c\">&lt;!-- The rplidar has 120 beams(samples) --&gt;</span>\n            <span class=\"nt\">&lt;samples&gt;</span>120<span class=\"nt\">&lt;/samples&gt;</span>\n\n            <span class=\"c\">&lt;!-- Resolution is multiplied by samples to determine number of</span>\n<span class=\"c\">                simulated beams vs interpolated beams. See:</span>\n<span class=\"c\">                &lt;http://sdformat.org/spec?ver=1.6&amp;elem=sensor#horizontal_resolution&gt;</span>\n<span class=\"c\">                --&gt;</span>\n            <span class=\"nt\">&lt;resolution&gt;</span>1<span class=\"nt\">&lt;/resolution&gt;</span>\n\n            <span class=\"c\">&lt;!-- Minimum angle in radians --&gt;</span>\n            <span class=\"nt\">&lt;min_angle&gt;</span>0<span class=\"nt\">&lt;/min_angle&gt;</span>\n\n            <span class=\"c\">&lt;!-- Maximum angle in radians --&gt;</span>\n            <span class=\"nt\">&lt;max_angle&gt;</span>6.28<span class=\"nt\">&lt;/max_angle&gt;</span>\n          <span class=\"nt\">&lt;/horizontal&gt;</span>\n        <span class=\"nt\">&lt;/scan&gt;</span>\n\n        <span class=\"c\">&lt;!-- Range defines characteristics of an individual beam --&gt;</span>\n        <span class=\"nt\">&lt;range&gt;</span>\n\n          <span class=\"c\">&lt;!-- Minimum distance of the beam --&gt;</span>\n          <span class=\"nt\">&lt;min&gt;</span>0.15<span class=\"nt\">&lt;/min&gt;</span>\n\n          <span class=\"c\">&lt;!-- Maximum distance of the beam --&gt;</span>\n          <span class=\"nt\">&lt;max&gt;</span>12<span class=\"nt\">&lt;/max&gt;</span>\n\n          <span class=\"c\">&lt;!-- Linear resolution of the beam --&gt;</span>\n          <span class=\"nt\">&lt;resolution&gt;</span>0.02<span class=\"nt\">&lt;/resolution&gt;</span>\n        <span class=\"nt\">&lt;/range&gt;</span>\n      <span class=\"nt\">&lt;/ray&gt;</span>\n      <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;sensor_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libgazebo_ros_laser.so&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;topicName&gt;</span>/my_car/rplidar/scan<span class=\"nt\">&lt;/topicName&gt;</span>\n    <span class=\"nt\">&lt;frameName&gt;</span>/my_car/rplidar/frame<span class=\"nt\">&lt;/frameName&gt;</span>\n  <span class=\"nt\">&lt;/plugin&gt;</span>\n    <span class=\"nt\">&lt;/sensor&gt;</span>\n\n\n    <span class=\"c\">&lt;!-- Vertically offset the top cylinder by the length of the bottom</span>\n<span class=\"c\">        cylinder and half the length of this cylinder. --&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>0 0 0.031 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;inertial&gt;</span>\n      <span class=\"nt\">&lt;mass&gt;</span>0.1<span class=\"nt\">&lt;/mass&gt;</span>\n      <span class=\"nt\">&lt;inertia&gt;</span>\n        <span class=\"nt\">&lt;ixx&gt;</span>0.000394<span class=\"nt\">&lt;/ixx&gt;</span>\n        <span class=\"nt\">&lt;iyy&gt;</span>0.000394<span class=\"nt\">&lt;/iyy&gt;</span>\n        <span class=\"nt\">&lt;izz&gt;</span>0.000722<span class=\"nt\">&lt;/izz&gt;</span>\n        <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n        <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n        <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n      <span class=\"nt\">&lt;/inertia&gt;</span>\n    <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;top_collision&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"c\">&lt;!-- Radius and length provided by Velodyne --&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>0.038<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>0.02<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n\n    <span class=\"c\">&lt;!-- The visual is mostly a copy of the collision --&gt;</span>\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;top_visual&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>0.038<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>0.02<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"c\">&lt;!-- Each joint must have a unique name --&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"c\">&lt;!-- Position the joint at the bottom of the top link --&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>0 0 -0.016 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n\n    <span class=\"c\">&lt;!-- Use the base link as the parent of the joint --&gt;</span>\n    <span class=\"nt\">&lt;parent&gt;</span>base<span class=\"nt\">&lt;/parent&gt;</span>\n\n    <span class=\"c\">&lt;!-- Use the top link as the child of the joint --&gt;</span>\n    <span class=\"nt\">&lt;child&gt;</span>top<span class=\"nt\">&lt;/child&gt;</span>\n\n    <span class=\"c\">&lt;!-- The axis defines the joint&#39;s degree of freedom --&gt;</span>\n    <span class=\"nt\">&lt;axis&gt;</span>\n\n      <span class=\"c\">&lt;!-- Revolve around the z-axis --&gt;</span>\n      <span class=\"nt\">&lt;xyz&gt;</span>0 0 1<span class=\"nt\">&lt;/xyz&gt;</span>\n\n      <span class=\"c\">&lt;!-- Limit refers to the range of motion of the joint --&gt;</span>\n      <span class=\"nt\">&lt;limit&gt;</span>\n\n        <span class=\"c\">&lt;!-- Use a very large number to indicate a continuous revolution --&gt;</span>\n        <span class=\"nt\">&lt;lower&gt;</span>-10000000000000000<span class=\"nt\">&lt;/lower&gt;</span>\n        <span class=\"nt\">&lt;upper&gt;</span>10000000000000000<span class=\"nt\">&lt;/upper&gt;</span>\n      <span class=\"nt\">&lt;/limit&gt;</span>\n    <span class=\"nt\">&lt;/axis&gt;</span>\n  <span class=\"nt\">&lt;/joint&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>&lt;/sdf&gt;</p>\n<p>I add it to my ~/.gazebo/model and used it in a car like bellow:</p>\n<p>\u200c</p>\n<p>&lt;?xml version=\"1.0\"?&gt;<br />\n&lt;sdf version=\"1.4\"&gt;<br />\n&lt;model name=\"my_car\"&gt;<br />\n&lt;static&gt;true&lt;/static&gt;<br />\n&lt;link name='chassis'&gt;<br />\n&lt;pose&gt;0 0 .1 0 0 0&lt;/pose&gt;</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&#39;collision&#39;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;box&gt;</span>\n          <span class=\"nt\">&lt;size&gt;</span>.6 .3 .1<span class=\"nt\">&lt;/size&gt;</span>\n        <span class=\"nt\">&lt;/box&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&#39;visual&#39;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;box&gt;</span>\n          <span class=\"nt\">&lt;size&gt;</span>.6 .3 .1<span class=\"nt\">&lt;/size&gt;</span>\n        <span class=\"nt\">&lt;/box&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;forward_left_wheel&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>0.14 0.18 0.08 0 1.5707 1.5707<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;cylinder&gt;</span>\n            <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n          <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;forward_right_wheel&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>0.14 -0.18 0.08 0 1.5707 1.5707<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;cylinder&gt;</span>\n            <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n          <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;backward_left_wheel&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>-0.14 0.18 0.08 0 1.5707 1.5707<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;cylinder&gt;</span>\n            <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n          <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;backward_right_wheel&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>-0.14 -0.18 0.08 0 1.5707 1.5707<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;cylinder&gt;</span>\n            <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n          <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder&gt;</span>\n          <span class=\"nt\">&lt;radius&gt;</span>.075<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;length&gt;</span>.05<span class=\"nt\">&lt;/length&gt;</span>\n        <span class=\"nt\">&lt;/cylinder&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;forward_left_wheel_joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;parent&gt;</span>chassis<span class=\"nt\">&lt;/parent&gt;</span>\n    <span class=\"nt\">&lt;child&gt;</span>forward_left_wheel<span class=\"nt\">&lt;/child&gt;</span>\n    <span class=\"nt\">&lt;axis&gt;</span>\n      <span class=\"nt\">&lt;xyz&gt;</span> 0 0 1<span class=\"nt\">&lt;/xyz&gt;</span>\n    <span class=\"nt\">&lt;/axis&gt;</span>\n  <span class=\"nt\">&lt;/joint&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;forward_right_wheel_joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;parent&gt;</span>chassis<span class=\"nt\">&lt;/parent&gt;</span>\n    <span class=\"nt\">&lt;child&gt;</span>forward_right_wheel<span class=\"nt\">&lt;/child&gt;</span>\n    <span class=\"nt\">&lt;axis&gt;</span>\n      <span class=\"nt\">&lt;xyz&gt;</span> 0 0 1<span class=\"nt\">&lt;/xyz&gt;</span>\n    <span class=\"nt\">&lt;/axis&gt;</span>\n  <span class=\"nt\">&lt;/joint&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;backward_left_wheel_joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;parent&gt;</span>chassis<span class=\"nt\">&lt;/parent&gt;</span>\n    <span class=\"nt\">&lt;child&gt;</span>backward_left_wheel<span class=\"nt\">&lt;/child&gt;</span>\n    <span class=\"nt\">&lt;axis&gt;</span>\n      <span class=\"nt\">&lt;xyz&gt;</span> 0 0 1<span class=\"nt\">&lt;/xyz&gt;</span>\n    <span class=\"nt\">&lt;/axis&gt;</span>\n  <span class=\"nt\">&lt;/joint&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;backward_right_wheel_joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;parent&gt;</span>chassis<span class=\"nt\">&lt;/parent&gt;</span>\n    <span class=\"nt\">&lt;child&gt;</span>backward_right_wheel<span class=\"nt\">&lt;/child&gt;</span>\n    <span class=\"nt\">&lt;axis&gt;</span>\n      <span class=\"nt\">&lt;xyz&gt;</span> 0 0 1<span class=\"nt\">&lt;/xyz&gt;</span>\n    <span class=\"nt\">&lt;/axis&gt;</span>\n  <span class=\"nt\">&lt;/joint&gt;</span>\n\n  <span class=\"nt\">&lt;include&gt;</span>\n    <span class=\"nt\">&lt;uri&gt;</span>model://rplidar<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>0.2 0 0.15 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/include&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>&lt;/sdf&gt;</p>", "type": "rendered"}, "created_on": "2019-07-24T06:33:51.319211+00:00", "user": {"display_name": "Azar M", "uuid": "{a69a1f6e-e6bb-41b6-8eaf-e4216927413d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba69a1f6e-e6bb-41b6-8eaf-e4216927413d%7D"}, "html": {"href": "https://bitbucket.org/%7Ba69a1f6e-e6bb-41b6-8eaf-e4216927413d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7e9e68e9ed38c0e1f42a0e325e2fdd77d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAM-4.png"}}, "nickname": "Azar M", "type": "user", "account_id": "5d00f830bfea840c5dd1a0b6"}, "updated_on": null, "type": "issue_comment", "id": 53119910}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643/comments/53129118.json"}, "html": {"href": "#!/osrf/gazebo/issues/2643#comment-53129118"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2643.json"}}, "type": "issue", "id": 2643, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo laserscaner"}, "content": {"raw": "I was able to echo the laser scans with these changes to your subscriber code:\n\n---\n\n```\nvoid cb(ConstLaserScanPtr &_msg){\n```\n\nto\n\n```\nvoid cb(ConstLaserScanStampedPtr &_msg){\n```\n\n---\n\n```\n// Load gazebo gazebo::client::setup(_argc, _argv);\n```\n\nto\n\n```\n// Load gazebo\ngazebo::client::setup(_argc, _argv);\n```\n---\n\n```\n// Busy wait loop while (true) gazebo::common::Time::MSleep(10);\n```\n\nto\n\n```\n// Busy wait loop\nwhile (true) gazebo::common::Time::MSleep(10);\n```\n---\n\nIt looks to me that there's no bug on Gazebo, so we can continue the conversation on Gazebo Answers :wink:", "markup": "markdown", "html": "<p>I was able to echo the laser scans with these changes to your subscriber code:</p>\n<hr />\n<div class=\"codehilite\"><pre><span></span>void cb(ConstLaserScanPtr &amp;_msg){\n</pre></div>\n\n\n<p>to</p>\n<div class=\"codehilite\"><pre><span></span>void cb(ConstLaserScanStampedPtr &amp;_msg){\n</pre></div>\n\n\n<hr />\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">//</span> <span class=\"nt\">Load</span> <span class=\"nt\">gazebo</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">client</span><span class=\"p\">::</span><span class=\"nd\">setup</span><span class=\"o\">(</span><span class=\"nt\">_argc</span><span class=\"o\">,</span> <span class=\"nt\">_argv</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>to</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">//</span> <span class=\"nt\">Load</span> <span class=\"nt\">gazebo</span>\n<span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">client</span><span class=\"p\">::</span><span class=\"nd\">setup</span><span class=\"o\">(</span><span class=\"nt\">_argc</span><span class=\"o\">,</span> <span class=\"nt\">_argv</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<hr />\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">//</span> <span class=\"nt\">Busy</span> <span class=\"nt\">wait</span> <span class=\"nt\">loop</span> <span class=\"nt\">while</span> <span class=\"o\">(</span><span class=\"nt\">true</span><span class=\"o\">)</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">common</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"p\">::</span><span class=\"nd\">MSleep</span><span class=\"o\">(</span><span class=\"nt\">10</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>to</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">//</span> <span class=\"nt\">Busy</span> <span class=\"nt\">wait</span> <span class=\"nt\">loop</span>\n<span class=\"nt\">while</span> <span class=\"o\">(</span><span class=\"nt\">true</span><span class=\"o\">)</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">common</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"p\">::</span><span class=\"nd\">MSleep</span><span class=\"o\">(</span><span class=\"nt\">10</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<hr />\n<p>It looks to me that there's no bug on Gazebo, so we can continue the conversation on Gazebo Answers <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" /></p>", "type": "rendered"}, "created_on": "2019-07-24T16:46:00.292218+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 53129118}], "page": 1, "size": 5}