{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1838/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1838.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1838/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1838/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1838/dart-collision-shapes-always-have-zero"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1838/vote"}}, "reporter": {"display_name": "Dawid Seredynski", "uuid": "{022f6bd6-5311-402b-84e3-33af54ba5854}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B022f6bd6-5311-402b-84e3-33af54ba5854%7D"}, "html": {"href": "https://bitbucket.org/%7B022f6bd6-5311-402b-84e3-33af54ba5854%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b22f2f23120cbc6dd66eeaabe754252fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDS-3.png"}}, "nickname": "dseredyn", "type": "user", "account_id": "557058:0477fa0c-2273-491f-8e49-c4cdc647aa8c"}, "title": "DART collision shapes always have zero rotation", "component": {"name": "physics::DARTPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/139387.json"}}}, "votes": 0, "watches": 4, "content": {"raw": "In the method\r\n```\r\n#!c++\r\nvoid DARTCollision::Init()\r\n```\r\nthe code\r\n\r\n```\r\n#!c++\r\n    if (!planeShape)\r\n    {\r\n      math::Pose relativePose = this->GetRelativePose();\r\n      this->dataPtr->dtCollisionShape->setOffset(\r\n            DARTTypes::ConvVec3(relativePose.pos));\r\n    }\r\n```\r\nshould be changed to\r\n\r\n```\r\n#!c++\r\n    if (!planeShape)\r\n    {\r\n      math::Pose relativePose = this->GetRelativePose();\r\n      math::Vector3 pos = this->GetRelativePose().pos;\r\n      math::Quaternion q = this->GetRelativePose().rot;\r\n      Eigen::Isometry3d tf;\r\n      tf.fromPositionOrientationScale(Eigen::Vector3d(pos.x, pos.y, pos.z), Eigen::Quaterniond(q.w, q.x, q.y, q.z), Eigen::Vector3d(1,1,1));\r\n      this->dtCollisionShape->setLocalTransform(tf);\r\n    }\r\n```\r\nas the orientation of the collision object should also be taken into account.\r\n\r\n", "markup": "markdown", "html": "<p>In the method</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">DARTCollision</span><span class=\"o\">::</span><span class=\"n\">Init</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>the code</p>\n<div class=\"codehilite language-c++\"><pre><span></span>    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">planeShape</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span> <span class=\"n\">relativePose</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetRelativePose</span><span class=\"p\">();</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">dtCollisionShape</span><span class=\"o\">-&gt;</span><span class=\"n\">setOffset</span><span class=\"p\">(</span>\n            <span class=\"n\">DARTTypes</span><span class=\"o\">::</span><span class=\"n\">ConvVec3</span><span class=\"p\">(</span><span class=\"n\">relativePose</span><span class=\"p\">.</span><span class=\"n\">pos</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>should be changed to</p>\n<div class=\"codehilite language-c++\"><pre><span></span>    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">planeShape</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span> <span class=\"n\">relativePose</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetRelativePose</span><span class=\"p\">();</span>\n      <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetRelativePose</span><span class=\"p\">().</span><span class=\"n\">pos</span><span class=\"p\">;</span>\n      <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Quaternion</span> <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetRelativePose</span><span class=\"p\">().</span><span class=\"n\">rot</span><span class=\"p\">;</span>\n      <span class=\"n\">Eigen</span><span class=\"o\">::</span><span class=\"n\">Isometry3d</span> <span class=\"n\">tf</span><span class=\"p\">;</span>\n      <span class=\"n\">tf</span><span class=\"p\">.</span><span class=\"n\">fromPositionOrientationScale</span><span class=\"p\">(</span><span class=\"n\">Eigen</span><span class=\"o\">::</span><span class=\"n\">Vector3d</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">),</span> <span class=\"n\">Eigen</span><span class=\"o\">::</span><span class=\"n\">Quaterniond</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">),</span> <span class=\"n\">Eigen</span><span class=\"o\">::</span><span class=\"n\">Vector3d</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">));</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dtCollisionShape</span><span class=\"o\">-&gt;</span><span class=\"n\">setLocalTransform</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>as the orientation of the collision object should also be taken into account.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-01-22T09:37:12.783154+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:21.268349+00:00", "type": "issue", "id": 1838}