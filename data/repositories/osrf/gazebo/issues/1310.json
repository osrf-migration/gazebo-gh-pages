{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1310/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1310.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1310/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1310/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1310/cannot-change-sdf-model-name-prior-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1310/vote"}}, "reporter": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "title": "Cannot change SDF model name prior to insertion in world", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I'm trying to do the most elementary thing possible, and insert a model (from the model database) into a world programmatically, changing its name before insertion...\r\n\r\nFollowing [this tutorial](http://gazebosim.org/tutorials?tut=plugins_world&ver=1.9%2B&cat=write_plugin) I managed to insert a can of beer into the world without any issue:\r\n\r\n```c++\r\nworldPtr->InsertModelFile(\"model://beer\");\r\n```\r\n\r\nI have no problem doing this when I specify SDF manually as a string:\r\n\r\n```c++\r\nsdf::SDF tmp;\r\ntmp.SetFromString(\"___the_beer_sdf_ommited_for_clarity___\");\r\nsdf::ElementPtr model = tmp.root->GetElement(\"model\");\r\nmodel->GetAttribute(\"name\")->SetFromString(\"my_beer\");\r\nworldPtr->InsertModelSDF(tmp);\r\n```\r\nIt wasn't clear how to actually load a model into a ```sdf::SDF``` object. However, I poked around ```World.cc``` to work out how it is done internally. I tried to replicate the behaviour in my code, by implementing the following:\r\n\r\n```c++\r\nsdf::SDFPtr tmp;\r\ntmp.reset(new sdf::SDF);\r\nstd::string filename = common::ModelDatabase::Instance()->GetModelFile(\"model://beer\");\r\nif (!sdf::readFile(filename, tmp))\r\n\tgzerr << \"Unable to read sdf file.\\n\";\r\nelse\r\n\tworldPtr->InsertModelSDF(*tmp);\r\n```\r\n\r\nThe issue is that the file is read, but the following error is printed to console:\r\n\r\n```bash\r\n[Err] [World.cc:1637] Unable to find a model, light, or actor in:\r\n<sdf version='1.5'/>\r\n```\r\n\r\nThis suggests to me that the SDF didn't read properly, as the ```<sdf>``` tag has no children. If I manually look at the ```model.sdf``` file for ```model://beer``` I can see that there are a number of child elements. Is this expected behaviour? \r\n\r\nEDIT:  I should add that I'm trying to do this in the ```Load``` method of a ```WorldPlugin``` and that the beer model is in a path in my ```GAZEBO_MODEL_PATH```. ", "markup": "markdown", "html": "<p>I'm trying to do the most elementary thing possible, and insert a model (from the model database) into a world programmatically, changing its name before insertion...</p>\n<p>Following <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=plugins_world&amp;ver=1.9%2B&amp;cat=write_plugin\" rel=\"nofollow\">this tutorial</a> I managed to insert a can of beer into the world without any issue:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">worldPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">InsertModelFile</span><span class=\"p\">(</span><span class=\"s\">&quot;model://beer&quot;</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>I have no problem doing this when I specify SDF manually as a string:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDF</span> <span class=\"n\">tmp</span><span class=\"p\">;</span>\n<span class=\"n\">tmp</span><span class=\"p\">.</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span><span class=\"s\">&quot;___the_beer_sdf_ommited_for_clarity___&quot;</span><span class=\"p\">);</span>\n<span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">tmp</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;model&quot;</span><span class=\"p\">);</span>\n<span class=\"n\">model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetAttribute</span><span class=\"p\">(</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span><span class=\"s\">&quot;my_beer&quot;</span><span class=\"p\">);</span>\n<span class=\"n\">worldPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">InsertModelSDF</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>It wasn't clear how to actually load a model into a <code>sdf::SDF</code> object. However, I poked around <code>World.cc</code> to work out how it is done internally. I tried to replicate the behaviour in my code, by implementing the following:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDFPtr</span> <span class=\"n\">tmp</span><span class=\"p\">;</span>\n<span class=\"n\">tmp</span><span class=\"p\">.</span><span class=\"n\">reset</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDF</span><span class=\"p\">);</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">ModelDatabase</span><span class=\"o\">::</span><span class=\"n\">Instance</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModelFile</span><span class=\"p\">(</span><span class=\"s\">&quot;model://beer&quot;</span><span class=\"p\">);</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">readFile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">tmp</span><span class=\"p\">))</span>\n    <span class=\"n\">gzerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Unable to read sdf file.</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"k\">else</span>\n    <span class=\"n\">worldPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">InsertModelSDF</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tmp</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>The issue is that the file is read, but the following error is printed to console:</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>World.cc:1637<span class=\"o\">]</span> Unable to find a model, light, or actor in:\n&lt;sdf <span class=\"nv\">version</span><span class=\"o\">=</span><span class=\"s1\">&#39;1.5&#39;</span>/&gt;\n</pre></div>\n\n\n<p>This suggests to me that the SDF didn't read properly, as the <code>&lt;sdf&gt;</code> tag has no children. If I manually look at the <code>model.sdf</code> file for <code>model://beer</code> I can see that there are a number of child elements. Is this expected behaviour? </p>\n<p>EDIT:  I should add that I'm trying to do this in the <code>Load</code> method of a <code>WorldPlugin</code> and that the beer model is in a path in my <code>GAZEBO_MODEL_PATH</code>. </p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2014-10-23T15:25:21.730762+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:56.242147+00:00", "type": "issue", "id": 1310}