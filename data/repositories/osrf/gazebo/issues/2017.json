{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2017/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2017.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2017/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2017/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2017/improve-documentation-on-link"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2017/vote"}}, "reporter": {"display_name": "Jo\u00e3o Britto", "uuid": "{bfeb7eaa-22bb-44fc-a4b7-f62e0ee98c11}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbfeb7eaa-22bb-44fc-a4b7-f62e0ee98c11%7D"}, "html": {"href": "https://bitbucket.org/%7Bbfeb7eaa-22bb-44fc-a4b7-f62e0ee98c11%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c1e0b52697d3b5e59cce16b707edfe72d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "Joao Britto", "type": "user", "account_id": "557058:f8011d77-6c04-44f5-bf2b-3f572e4901aa"}, "title": "Improve documentation on Link::AddForceAtRelativePosition", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 4, "content": {"raw": "I'd say this point was discussed many times, but the documentation is not clear for me. \r\nAfter some tests and reviewing link's and ode's code, I had the follow impression:\r\n\r\n- `ODELink::AddForce` and `ODELink::AddRelativeForce` applies force on the link's CoG (once they don't generate torque).\r\n- `ODELink::AddForceAtRelativePosition` uses a relative position related to the link's CoG.\r\n- ode's `dBodyAddRelForceAtRelPos` add a force in link's frame at position related to the link's CoG\r\n- `ODELink::AddLinkForce` add a force in link's frame at a position related to the link's origin.\r\n\r\nIt seems to me that ode doesn't take in account the link's origin but only the link's CoG.\r\nAnd Gazebo take both in account, but the documentation doesn't make it clear.\r\nIs that right?", "markup": "markdown", "html": "<p>I'd say this point was discussed many times, but the documentation is not clear for me. \nAfter some tests and reviewing link's and ode's code, I had the follow impression:</p>\n<ul>\n<li><code>ODELink::AddForce</code> and <code>ODELink::AddRelativeForce</code> applies force on the link's CoG (once they don't generate torque).</li>\n<li><code>ODELink::AddForceAtRelativePosition</code> uses a relative position related to the link's CoG.</li>\n<li>ode's <code>dBodyAddRelForceAtRelPos</code> add a force in link's frame at position related to the link's CoG</li>\n<li><code>ODELink::AddLinkForce</code> add a force in link's frame at a position related to the link's origin.</li>\n</ul>\n<p>It seems to me that ode doesn't take in account the link's origin but only the link's CoG.\nAnd Gazebo take both in account, but the documentation doesn't make it clear.\nIs that right?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-07-25T14:30:54.015386+00:00", "milestone": null, "updated_on": "2017-01-17T20:27:48.734102+00:00", "type": "issue", "id": 2017}