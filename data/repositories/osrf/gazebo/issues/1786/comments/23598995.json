{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1786/comments/23598995.json"}, "html": {"href": "#!/osrf/gazebo/issues/1786#comment-23598995"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1786.json"}}, "type": "issue", "id": 1786, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Invalid access of `Base::children` results in memory leak / undefined behavior"}, "content": {"raw": "To be clear, is this the patch you are proposing?\n\n~~~\ndiff -r 7d0a60233039 gazebo/physics/Base.cc\n--- a/gazebo/physics/Base.cc\tThu Nov 26 02:45:14 2015 -0600\n+++ b/gazebo/physics/Base.cc\tThu Nov 26 02:54:58 2015 -0600\n@@ -55,10 +55,6 @@\n //////////////////////////////////////////////////\n Base::~Base()\n {\n-  // remove self as a child of the parent\n-  if (this->parent)\n-    this->parent->RemoveChild(this->id);\n-\n   this->SetParent(BasePtr());\n \n   for (Base_V::iterator iter = this->children.begin();\n~~~", "markup": "markdown", "html": "<p>To be clear, is this the patch you are proposing?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 7d0a60233039 gazebo/physics/Base.cc</span>\n<span class=\"gd\">--- a/gazebo/physics/Base.cc    Thu Nov 26 02:45:14 2015 -0600</span>\n<span class=\"gi\">+++ b/gazebo/physics/Base.cc    Thu Nov 26 02:54:58 2015 -0600</span>\n<span class=\"gu\">@@ -55,10 +55,6 @@</span>\n //////////////////////////////////////////////////\n Base::~Base()\n {\n<span class=\"gd\">-  // remove self as a child of the parent</span>\n<span class=\"gd\">-  if (this-&gt;parent)</span>\n<span class=\"gd\">-    this-&gt;parent-&gt;RemoveChild(this-&gt;id);</span>\n<span class=\"gd\">-</span>\n   this-&gt;SetParent(BasePtr());\n\n   for (Base_V::iterator iter = this-&gt;children.begin();\n</pre></div>", "type": "rendered"}, "created_on": "2015-11-26T08:55:29.965362+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 23598995}