{"pagelen": 100, "values": [{"changes": {"content": {"new": "This is on Ubuntu 16.04/Kinetic/Gazebo9 from .debs.\r\n\r\nI have a fairly complex world (which I unfortunately cannot share) and a (ROS-based) robot with 4 cameras (using `libgazebo_ros_camera`) moving inside it.\r\n\r\nAs long as I only subscribe to the image of one of the cameras, everything largely works fine. I get a realtime factor of ~0.95, images come in at a rate of 10Hz (as specified). When subscribing to the images of the three other cameras, the following effects are observed:\r\n\r\n* Realtime factor stays relatively consistent at about ~0.8.\r\n* The latency of images increases greatly. When comparing image timestamps to `ros::Time::now()` inside a ROS image callback, the delay is about 1 (simulated) second.\r\n* The publishing rate of the original image drops dramatically from 10 Hz (as specified) to about 4.0 Hz.\r\n\r\nIt thus looks like rendering images takes considerable time. That's ok in principle, but what I'd expect in that case is that Gazebo slows down accordingly to keep the image publishing rate. Is the observed behavior the intended/expected one?", "old": "This is on Ubuntu 16.04/Kinetic/Gazebo9 from .debs.\r\n\r\nI have a fairly complex world (which I unfortunately cannot share) and a (ROS-based) robot with 4 cameras (using `libgazebo_ros_camera`) moving inside it.\r\n\r\nAs long as I only subscribe to the image of one of the cameras, everything largely works fine. I get a realtime factor of ~0.95, images come in at a rate of 10Hz (as specified). When subscribing to the images of the three other cameras, the following effects are observed:\r\n\r\n* Realtime factor stays relatively consistent at about ~0.8.\r\n* The latency of images increases greatly. When comparing image timestamps to `ros::Time::now()` inside a ROS image callback, the delay is about 1 (simulated) second.\r\n* The publishing rate of the original image drops dramatically from 10 Hz (as specified) to about 4.0 Hz.\r\n\r\nIt thus looks like rendering images takes considerable time. That's ok in principle, but what I'd expect in that case is that Gazebo slows down accordingly to keep the image publishing rate. Is the observed behavior the intendended/expected one?"}}, "links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2559/changes/48960897.json"}, "html": {"href": "#!/osrf/gazebo/issues/2559#comment-48960897"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2559.json"}}, "type": "issue", "id": 2559, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulated camera framerate slow down and latency increase when subscribing to multiple cameras"}, "created_on": "2018-11-16T01:03:10.596535+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 48960897}], "page": 1, "size": 1}