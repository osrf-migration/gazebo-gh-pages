{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/3873328.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-3873328"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": "Blaming it on plugins doesn't make a lot of sense though because there isn't a plugin used in this test ([see RaySensor_TEST.cc for sdf](#!/osrf/gazebo/src/fdeb5c8f1d208ddf57b892c53128b5d305889dff/gazebo/sensors/RaySensor_TEST.cc?at=default#cl-28)).", "markup": "markdown", "html": "<p>Blaming it on plugins doesn't make a lot of sense though because there isn't a plugin used in this test (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/fdeb5c8f1d208ddf57b892c53128b5d305889dff/gazebo/sensors/RaySensor_TEST.cc?at=default#cl-28\" rel=\"nofollow\">see RaySensor_TEST.cc for sdf</a>).</p>", "type": "rendered"}, "created_on": "2013-04-25T16:35:28.679595+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 3873328}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/3873987.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-3873987"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": "I was trying to reproduce the bug. There is a new issue_662 branch which contains a in test/regression/ray_sensor_issue662.cc which is a shorter version of the Ray test which can trigger the segfault.\n\nI would say it's a race condition somewhere when the test finish and the stack for destructor functions is called. I wasn't unable to reproduce from looping code inside the test. It also does not happen when there is DISPLAY present. To see segfaults, you can use, from build directory:\n```\nwhile true; do DISPLAY=asedf ./test/regression/ray_sensor_issue662 2> foo ; done\n```\n\nIn my own tests, if you enable the sleep(1) at the end of the test, it's currently commented, I wasn't able to see any segfault.", "markup": "markdown", "html": "<p>I was trying to reproduce the bug. There is a new issue_662 branch which contains a in test/regression/ray_sensor_issue662.cc which is a shorter version of the Ray test which can trigger the segfault.</p>\n<p>I would say it's a race condition somewhere when the test finish and the stack for destructor functions is called. I wasn't unable to reproduce from looping code inside the test. It also does not happen when there is DISPLAY present. To see segfaults, you can use, from build directory:</p>\n<div class=\"codehilite\"><pre><span></span>while true; do DISPLAY=asedf ./test/regression/ray_sensor_issue662 2&gt; foo ; done\n</pre></div>\n\n\n<p>In my own tests, if you enable the sleep(1) at the end of the test, it's currently commented, I wasn't able to see any segfault.</p>", "type": "rendered"}, "created_on": "2013-04-25T17:37:17.225525+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 3873987}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/3946575.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-3946575"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": "On hold until after June, 2013.", "markup": "markdown", "html": "<p>On hold until after June, 2013.</p>", "type": "rendered"}, "created_on": "2013-05-02T22:18:22.500971+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 3946575}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/3998402.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-3998402"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": "Running Jose's issue_662 branch with `ulimit -c unlimited` and the following command:\n~~~\nwhile DISPLAY=asdf ./test/regression/ray_sensor_issue662 2> foo ; do cat foo; done\n~~~\nI got the following backtrace, which occurs after our test has finished ServerFixture::Unload:\n~~~\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff4d05fde in ?? () from /lib/x86_64-linux-gnu/libc.so.6\n(gdb) bt\n#0  0x00007ffff4d05fde in ?? () from /lib/x86_64-linux-gnu/libc.so.6\n#1  0x00007ffff4d08a45 in malloc () from /lib/x86_64-linux-gnu/libc.so.6\n#2  0x00007ffff530eded in operator new(unsigned long) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#3  0x00007ffff52f7a89 in std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#4  0x00007ffff52f87fb in std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#5  0x00007ffff52f88e0 in std::string::reserve(unsigned long) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#6  0x00007ffff52f19dc in std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#7  0x00007ffff52f6085 in std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#8  0x00007ffff52e2bd5 in std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#9  0x00007ffff52e2e36 in std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#10 0x00007ffff52edbed in std::ostream& std::ostream::_M_insert<long long>(long long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#11 0x000000000046629a in testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(testing::TestInfo const&) ()\n#12 0x000000000045bc8d in testing::internal::TestEventRepeater::OnTestEnd(testing::TestInfo const&) ()\n#13 0x00000000004712b4 in testing::TestInfo::Run() ()\n#14 0x0000000000471497 in testing::TestCase::Run() ()\n#15 0x00000000004717fe in testing::internal::UnitTestImpl::RunAllTests() ()\n#16 0x00000000004719f7 in testing::UnitTest::Run() ()\n#17 0x0000000000436acf in main ()\n(gdb)\n~~~", "markup": "markdown", "html": "<p>Running Jose's issue_662 branch with <code>ulimit -c unlimited</code> and the following command:</p>\n<div class=\"codehilite\"><pre><span></span>while DISPLAY=asdf ./test/regression/ray_sensor_issue662 2&gt; foo ; do cat foo; done\n</pre></div>\n\n\n<p>I got the following backtrace, which occurs after our test has finished ServerFixture::Unload:</p>\n<div class=\"codehilite\"><pre><span></span>Program received signal SIGSEGV, Segmentation fault.\n0x00007ffff4d05fde in ?? () from /lib/x86_64-linux-gnu/libc.so.6\n(gdb) bt\n#0  0x00007ffff4d05fde in ?? () from /lib/x86_64-linux-gnu/libc.so.6\n#1  0x00007ffff4d08a45 in malloc () from /lib/x86_64-linux-gnu/libc.so.6\n#2  0x00007ffff530eded in operator new(unsigned long) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#3  0x00007ffff52f7a89 in std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#4  0x00007ffff52f87fb in std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#5  0x00007ffff52f88e0 in std::string::reserve(unsigned long) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#6  0x00007ffff52f19dc in std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int) ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#7  0x00007ffff52f6085 in std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#8  0x00007ffff52e2bd5 in std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long long&gt;(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long long) const ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#9  0x00007ffff52e2e36 in std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long long) const ()\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#10 0x00007ffff52edbed in std::ostream&amp; std::ostream::_M_insert&lt;long long&gt;(long long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#11 0x000000000046629a in testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(testing::TestInfo const&amp;) ()\n#12 0x000000000045bc8d in testing::internal::TestEventRepeater::OnTestEnd(testing::TestInfo const&amp;) ()\n#13 0x00000000004712b4 in testing::TestInfo::Run() ()\n#14 0x0000000000471497 in testing::TestCase::Run() ()\n#15 0x00000000004717fe in testing::internal::UnitTestImpl::RunAllTests() ()\n#16 0x00000000004719f7 in testing::UnitTest::Run() ()\n#17 0x0000000000436acf in main ()\n(gdb)\n</pre></div>", "type": "rendered"}, "created_on": "2013-05-08T06:57:03.139531+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 3998402}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/4205687.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-4205687"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": "pull request #548", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/548/transport-performance-update\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #548</a></p>", "type": "rendered"}, "created_on": "2013-05-25T01:22:49.381220+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 4205687}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/4257621.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-4257621"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": "ignore this comment", "markup": "markdown", "html": "<p>ignore this comment</p>", "type": "rendered"}, "created_on": "2013-05-29T22:11:54.474797+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-05-29T22:13:09.731336+00:00", "type": "issue_comment", "id": 4257621}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/30609869.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-30609869"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:21:13.519270+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30609869}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662/comments/30612583.json"}, "html": {"href": "#!/osrf/gazebo/issues/662#comment-30612583"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/662.json"}}, "type": "issue", "id": 662, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Occasional RaySensor_TEST failures"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:45:03.734243+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30612583}], "page": 1, "size": 8}