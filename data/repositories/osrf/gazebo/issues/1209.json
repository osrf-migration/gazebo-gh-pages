{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1209/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1209.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1209/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1209/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1209/physicstest-failures-in-dart-40"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1209/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "PhysicsTest failures in Dart 4.0: SpawnDropCoGOffset", "component": {"name": "physics::DARTPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/139387.json"}}}, "votes": 0, "watches": 4, "content": {"raw": "There are some failures in test/integration/physics.cc caused by the upgrade to dart 4.0.\r\n\r\nThe following patch (from 7df22fa62f11) is a workaround:\r\n~~~\r\ndiff -r 0c1dd36ccb70 test/integration/physics.cc\r\n--- a/test/integration/physics.cc\tTue Jun 10 14:37:23 2014 -0700\r\n+++ b/test/integration/physics.cc\tWed Jun 11 11:35:12 2014 -0700\r\n@@ -21,6 +21,10 @@\r\n \r\n #include \"ServerFixture.hh\"\r\n #include \"gazebo/physics/physics.hh\"\r\n+#ifdef HAVE_DART\r\n+  #include \"gazebo/physics/dart/dart_inc.h\"\r\n+  #include \"gazebo/physics/dart/DARTPhysics.hh\"\r\n+#endif\r\n #include \"SimplePendulumIntegrator.hh\"\r\n #include \"gazebo/msgs/msgs.hh\"\r\n #include \"helper_physics_generator.hh\"\r\n@@ -357,6 +361,17 @@\r\n   physics::WorldPtr world = physics::get_world(\"default\");\r\n   ASSERT_TRUE(world != NULL);\r\n \r\n+  if (_physicsEngine == \"dart\")\r\n+  {\r\n+    // Use DARTCollisionDetector that supports primitive collision shapes\r\n+    physics::DARTPhysicsPtr dtPhysics =\r\n+        boost::dynamic_pointer_cast<physics::DARTPhysics>(\r\n+          world->GetPhysicsEngine());\r\n+\r\n+    dtPhysics->GetDARTWorld()->getConstraintSolver()->setCollisionDetector(\r\n+          new dart::collision::DARTCollisionDetector());\r\n+  }\r\n+\r\n   // check the gravity vector\r\n   physics::PhysicsEnginePtr physics = world->GetPhysicsEngine();\r\n   ASSERT_TRUE(physics != NULL);\r\n@@ -751,6 +766,13 @@\r\n   physics::WorldPtr world = physics::get_world(\"default\");\r\n   EXPECT_TRUE(world != NULL);\r\n \r\n+  if (_physicsEngine == \"dart\")\r\n+  {\r\n+    // Set the ERP (error correction parameter) 0.0 since it generate bounce at\r\n+    // the colliding moment\r\n+    dart::constraint::ContactConstraint::setErrorReductionParameter(0.0);\r\n+  }\r\n+\r\n   int i = 0;\r\n   while (!this->HasEntity(\"cylinder\") && i < 20)\r\n   {\r\n@@ -832,17 +854,16 @@\r\n           }\r\n           else\r\n           {\r\n+            EXPECT_LT(fabs(vel.z), 3e-5);\r\n             if (_physicsEngine == \"dart\")\r\n             {\r\n               // DART needs more tolerance until supports 'correction for\r\n               // penetration' feature.\r\n               // Please see issue #902\r\n-              EXPECT_LT(fabs(vel.z), 0.015);\r\n               EXPECT_LT(fabs(pose.pos.z - 0.5), 0.00410);\r\n             }\r\n             else\r\n             {\r\n-              EXPECT_LT(fabs(vel.z), 3e-5);\r\n               EXPECT_LT(fabs(pose.pos.z - 0.5), 0.00001);\r\n             }\r\n           }\r\n~~~", "markup": "markdown", "html": "<p>There are some failures in test/integration/physics.cc caused by the upgrade to dart 4.0.</p>\n<p>The following patch (from <a href=\"#!/osrf/gazebo/commits/7df22fa62f11\" rel=\"nofollow\" class=\"ap-connect-link\">7df22fa62f11</a>) is a workaround:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 0c1dd36ccb70 test/integration/physics.cc</span>\n<span class=\"gd\">--- a/test/integration/physics.cc   Tue Jun 10 14:37:23 2014 -0700</span>\n<span class=\"gi\">+++ b/test/integration/physics.cc   Wed Jun 11 11:35:12 2014 -0700</span>\n<span class=\"gu\">@@ -21,6 +21,10 @@</span>\n\n #include &quot;ServerFixture.hh&quot;\n #include &quot;gazebo/physics/physics.hh&quot;\n<span class=\"gi\">+#ifdef HAVE_DART</span>\n<span class=\"gi\">+  #include &quot;gazebo/physics/dart/dart_inc.h&quot;</span>\n<span class=\"gi\">+  #include &quot;gazebo/physics/dart/DARTPhysics.hh&quot;</span>\n<span class=\"gi\">+#endif</span>\n #include &quot;SimplePendulumIntegrator.hh&quot;\n #include &quot;gazebo/msgs/msgs.hh&quot;\n #include &quot;helper_physics_generator.hh&quot;\n<span class=\"gu\">@@ -357,6 +361,17 @@</span>\n   physics::WorldPtr world = physics::get_world(&quot;default&quot;);\n   ASSERT_TRUE(world != NULL);\n\n<span class=\"gi\">+  if (_physicsEngine == &quot;dart&quot;)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    // Use DARTCollisionDetector that supports primitive collision shapes</span>\n<span class=\"gi\">+    physics::DARTPhysicsPtr dtPhysics =</span>\n<span class=\"gi\">+        boost::dynamic_pointer_cast&lt;physics::DARTPhysics&gt;(</span>\n<span class=\"gi\">+          world-&gt;GetPhysicsEngine());</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+    dtPhysics-&gt;GetDARTWorld()-&gt;getConstraintSolver()-&gt;setCollisionDetector(</span>\n<span class=\"gi\">+          new dart::collision::DARTCollisionDetector());</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n   // check the gravity vector\n   physics::PhysicsEnginePtr physics = world-&gt;GetPhysicsEngine();\n   ASSERT_TRUE(physics != NULL);\n<span class=\"gu\">@@ -751,6 +766,13 @@</span>\n   physics::WorldPtr world = physics::get_world(&quot;default&quot;);\n   EXPECT_TRUE(world != NULL);\n\n<span class=\"gi\">+  if (_physicsEngine == &quot;dart&quot;)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    // Set the ERP (error correction parameter) 0.0 since it generate bounce at</span>\n<span class=\"gi\">+    // the colliding moment</span>\n<span class=\"gi\">+    dart::constraint::ContactConstraint::setErrorReductionParameter(0.0);</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n   int i = 0;\n   while (!this-&gt;HasEntity(&quot;cylinder&quot;) &amp;&amp; i &lt; 20)\n   {\n<span class=\"gu\">@@ -832,17 +854,16 @@</span>\n           }\n           else\n           {\n<span class=\"gi\">+            EXPECT_LT(fabs(vel.z), 3e-5);</span>\n             if (_physicsEngine == &quot;dart&quot;)\n             {\n               // DART needs more tolerance until supports &#39;correction for\n               // penetration&#39; feature.\n               // Please see issue #902\n<span class=\"gd\">-              EXPECT_LT(fabs(vel.z), 0.015);</span>\n               EXPECT_LT(fabs(pose.pos.z - 0.5), 0.00410);\n             }\n             else\n             {\n<span class=\"gd\">-              EXPECT_LT(fabs(vel.z), 3e-5);</span>\n               EXPECT_LT(fabs(pose.pos.z - 0.5), 0.00001);\n             }\n           }\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2014-06-11T18:35:48.268143+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:11.327098+00:00", "type": "issue", "id": 1209}