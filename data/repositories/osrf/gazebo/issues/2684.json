{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2684/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2684.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2684/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2684/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2684/problems-with-running-gazebo-9-server-in-a"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2684/vote"}}, "reporter": {"display_name": "Milan Vukov", "uuid": "{f7dc7621-1cb3-4887-a1fb-bc33c4af70f4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf7dc7621-1cb3-4887-a1fb-bc33c4af70f4%7D"}, "html": {"href": "https://bitbucket.org/%7Bf7dc7621-1cb3-4887-a1fb-bc33c4af70f4%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f5c58323e480e53b39c57bc00b630b2ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMV-4.png"}}, "nickname": "Milan Vukov", "type": "user", "account_id": "5e19a55ccbf1830daa9dbacd"}, "title": "Problems with running Gazebo 9 server in a Python wrapper", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hello,\r\n\r\nI created simple C\\+\\+ and Python wrappers for Gazebo \\(9\\) server, to have more control over simulation execution. The project is here: [https://github.com/mvukov/gazebo\\_server](https://github.com/mvukov/gazebo_server). While running gazebo::runWorld\\(world\\_, 1\\) \\(step-by-step, no callbacks\\) works fine in C\\+\\+ and the Python wrapper, I have problems with gazebo::runWorld\\(world\\_, num\\_steps\\) with num\\_steps > 1 and using callbacks. The function is here [https://github.com/mvukov/gazebo\\_server/blob/master/src/gazebo\\_server.cpp#L164](https://github.com/mvukov/gazebo_server/blob/master/src/gazebo_server.cpp#L164).\r\n\r\nIn master branch I disabled the relevant Python binding, but in this PR [https://github.com/mvukov/gazebo\\_server/pull/1](https://github.com/mvukov/gazebo_server/pull/1) I enabled it such that someone can take a look.\r\n\r\nOn both macOS \\(Mojave\\) and Linux the tests run fine. At test exit on macOS test app crashes and on Linux \\(CircleCI machine\\) the test app never exits. Here is a part of the crash report on macOS:\r\n\r\n```\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n\r\n0   libgazebo_rendering.9.dylib     0x000000011110b5d0 gazebo::rendering::RenderEngine::Root() const + 8\r\n\r\n1   libgazebo_rendering.9.dylib     0x0000000111171b72 gazebo::rendering::WindowManager::Fini() + 40\r\n\r\n2   libgazebo_rendering.9.dylib     0x0000000111171b23 gazebo::rendering::WindowManager::~WindowManager() + 25\r\n\r\n3   libgazebo_rendering.9.dylib     0x0000000111171c24 gazebo::rendering::WindowManager::~WindowManager() + 14\r\n\r\n4   libgazebo_rendering.9.dylib     0x000000011109583d boost::detail::shared_count::~shared_count() + 29\r\n\r\n5   libgazebo_rendering.9.dylib     0x00000001111076b8 std::__1::unique_ptr<gazebo::rendering::RenderEnginePrivate, std::__1::default_delete<gazebo::rendering::RenderEnginePrivate> >::~unique_ptr() + 46\r\n\r\n6   libsystem_c.dylib               0x00007fff661b43cf __cxa_finalize_ranges + 319\r\n\r\n7   libsystem_c.dylib               0x00007fff661b46b3 exit + 55\r\n\r\n8   org.python.python               0x000000010aca326a Py_Exit + 30\r\n\r\n9   org.python.python               0x000000010aca94f2 handle_system_exit + 314\r\n\r\n10  org.python.python               0x000000010aca9146 PyErr_PrintEx + 54\r\n\r\n11  org.python.python               0x000000010aca8934 PyRun_SimpleFileExFlags + 964\r\n\r\n12  org.python.python               0x000000010acc1017 pymain_main + 4937\r\n\r\n13  org.python.python               0x000000010acc18a7 _Py_UnixMain + 75\r\n\r\n14  libdyld.dylib                   0x00007fff6610e3d5 start + 1\r\n```\r\n\r\nGazeboServer::RunFor\\(\\) is quite straightforward, I could not find any bugs there.\r\n\r\nAny help is appreciated.\r\n\r\nCheers,\r\n\r\nMilan\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Hello,</p>\n<p>I created simple C++ and Python wrappers for Gazebo (9) server, to have more control over simulation execution. The project is here: <a data-is-external-link=\"true\" href=\"https://github.com/mvukov/gazebo_server\" rel=\"nofollow\">https://github.com/mvukov/gazebo_server</a>. While running gazebo::runWorld(world_, 1) (step-by-step, no callbacks) works fine in C++ and the Python wrapper, I have problems with gazebo::runWorld(world_, num_steps) with num_steps &gt; 1 and using callbacks. The function is here <a data-is-external-link=\"true\" href=\"https://github.com/mvukov/gazebo_server/blob/master/src/gazebo_server.cpp#L164\" rel=\"nofollow\">https://github.com/mvukov/gazebo_server/blob/master/src/gazebo_server.cpp#L164</a>.</p>\n<p>In master branch I disabled the relevant Python binding, but in this PR <a data-is-external-link=\"true\" href=\"https://github.com/mvukov/gazebo_server/pull/1\" rel=\"nofollow\">https://github.com/mvukov/gazebo_server/pull/1</a> I enabled it such that someone can take a look.</p>\n<p>On both macOS (Mojave) and Linux the tests run fine. At test exit on macOS test app crashes and on Linux (CircleCI machine) the test app never exits. Here is a part of the crash report on macOS:</p>\n<div class=\"codehilite\"><pre><span></span>Thread 0 Crashed:: Dispatch queue: com.apple.main-thread\n\n0   libgazebo_rendering.9.dylib     0x000000011110b5d0 gazebo::rendering::RenderEngine::Root() const + 8\n\n1   libgazebo_rendering.9.dylib     0x0000000111171b72 gazebo::rendering::WindowManager::Fini() + 40\n\n2   libgazebo_rendering.9.dylib     0x0000000111171b23 gazebo::rendering::WindowManager::~WindowManager() + 25\n\n3   libgazebo_rendering.9.dylib     0x0000000111171c24 gazebo::rendering::WindowManager::~WindowManager() + 14\n\n4   libgazebo_rendering.9.dylib     0x000000011109583d boost::detail::shared_count::~shared_count() + 29\n\n5   libgazebo_rendering.9.dylib     0x00000001111076b8 std::__1::unique_ptr&lt;gazebo::rendering::RenderEnginePrivate, std::__1::default_delete&lt;gazebo::rendering::RenderEnginePrivate&gt; &gt;::~unique_ptr() + 46\n\n6   libsystem_c.dylib               0x00007fff661b43cf __cxa_finalize_ranges + 319\n\n7   libsystem_c.dylib               0x00007fff661b46b3 exit + 55\n\n8   org.python.python               0x000000010aca326a Py_Exit + 30\n\n9   org.python.python               0x000000010aca94f2 handle_system_exit + 314\n\n10  org.python.python               0x000000010aca9146 PyErr_PrintEx + 54\n\n11  org.python.python               0x000000010aca8934 PyRun_SimpleFileExFlags + 964\n\n12  org.python.python               0x000000010acc1017 pymain_main + 4937\n\n13  org.python.python               0x000000010acc18a7 _Py_UnixMain + 75\n\n14  libdyld.dylib                   0x00007fff6610e3d5 start + 1\n</pre></div>\n\n\n<p>GazeboServer::RunFor() is quite straightforward, I could not find any bugs there.</p>\n<p>Any help is appreciated.</p>\n<p>Cheers,</p>\n<p>Milan</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "9.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/242746.json"}}}, "edited_on": null, "created_on": "2020-01-11T11:11:09.348217+00:00", "milestone": null, "updated_on": "2020-01-12T10:38:53.343423+00:00", "type": "issue", "id": 2684}