{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1870/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1870.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1870/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1870/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1870/document-the-need-to-call-physicsengine"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1870/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "Document the need to call PhysicsEngine::InitForThread before using RayShape::GetIntersection.", "component": {"name": "documentation", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/141921.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I've faced a problem that was very difficult to trace, so I think improving documentation could help others.\r\n\r\nThe problem was the following: in a ROS service callback (running on a callback-queue thread), I was calling `RayShape::GetIntersection` to get some colliding object information. Strangely, with basic shapes it worked, but as soon as I added a trimesh into the scene, Gazebo server segfaulted.\r\n\r\nI traced down the issue to be caused by not calling `PhysicsEngine::InitForThread` on the ROS callback queue thread. Then, the `GetIntersection` call found no trimesh-trimesh colliders in the thread-local memory, and segfaulted.\r\n\r\nI think this is a rather low-level issue and regular users would be surprised by this behavior. In http://gazebosim.org/tutorials?tut=custom_messages , there is the `InitForThread` call as should be, but it is the only place where `GetIntersection` and `InitForThread` are together. The user has no idea when calling `GetIntersection` that it could fail due to this reason.\r\n\r\nSo I propose at least leaving a note in `GetIntersection` documentation, that the `InitForThread` call could be required.\r\n\r\nThere might also be other places where this note would be suitable, but I haven't found them. Can you think of any other places?", "markup": "markdown", "html": "<p>I've faced a problem that was very difficult to trace, so I think improving documentation could help others.</p>\n<p>The problem was the following: in a ROS service callback (running on a callback-queue thread), I was calling <code>RayShape::GetIntersection</code> to get some colliding object information. Strangely, with basic shapes it worked, but as soon as I added a trimesh into the scene, Gazebo server segfaulted.</p>\n<p>I traced down the issue to be caused by not calling <code>PhysicsEngine::InitForThread</code> on the ROS callback queue thread. Then, the <code>GetIntersection</code> call found no trimesh-trimesh colliders in the thread-local memory, and segfaulted.</p>\n<p>I think this is a rather low-level issue and regular users would be surprised by this behavior. In <a href=\"http://gazebosim.org/tutorials?tut=custom_messages\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/tutorials?tut=custom_messages</a> , there is the <code>InitForThread</code> call as should be, but it is the only place where <code>GetIntersection</code> and <code>InitForThread</code> are together. The user has no idea when calling <code>GetIntersection</code> that it could fail due to this reason.</p>\n<p>So I propose at least leaving a note in <code>GetIntersection</code> documentation, that the <code>InitForThread</code> call could be required.</p>\n<p>There might also be other places where this note would be suitable, but I haven't found them. Can you think of any other places?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2016-03-07T15:29:35.702779+00:00", "milestone": null, "updated_on": "2016-03-07T15:29:35.702779+00:00", "type": "issue", "id": 1870}