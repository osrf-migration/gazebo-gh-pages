{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2029/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2029/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2029/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029/gazebo-crashes-when-receiving-apparently"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2029/vote"}}, "reporter": {"display_name": "Sergey Polzunov", "uuid": "{f5113e3a-5608-41fa-aa89-3b4675b464c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5d78758e3e3779426bc677aac37bc61bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "traut", "type": "user", "account_id": "557058:f9876371-9fe1-44fc-a496-607ab8ee292b"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request", "component": {"name": "transport", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122882.json"}}}, "votes": 1, "watches": 3, "content": {"raw": "I'm getting a crash when sending a subscription request:\r\n\r\n```bash\r\n$ gzserver --verbose nothing-and-rover.world\r\nGazebo multi-robot simulator, version 7.0.0\r\nCopyright (C) 2012-2016 Open Source Robotics Foundation.\r\nReleased under the Apache 2 License.\r\nhttp://gazebosim.org\r\n\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 192.168.1.169\r\n[Err] [msgs.cc:120] EXCEPTION: Can't serialize message of type[gazebo.msgs.Publish] because it is missing required fields\r\n\r\nlibc++abi.dylib: terminating with uncaught exception of type gazebo::common::Exception\r\nAbort trap: 6\r\n$\r\n```\r\nSystem is MacOS 10.11.6, Gazebo v7.0.0\r\n\r\nThis is the mesage I send:\r\n```js\r\n// Serialize message and wrap it in Packet\r\nvar packet = proto.serialize({\r\n    'stamp': {\r\n        'sec': new Date().now / 1000,\r\n        'nsec': 0,\r\n    },\r\n    'type': 'advertise',\r\n    'serialized_data': proto.serialize(\r\n            'topic': '/gazebo/default/dummy-rover/hokuyo/link/laser/scan',\r\n            'host': NODE_TCP_IP,\r\n            'port': NODE_TCP_PORT,\r\n            'msg_type': 'gazebo.msgs.LaserScanStamped',\r\n        },\r\n        \"gazebo.msgs.Subscribe\")\r\n}, 'gazebo.msgs.Packet');\r\n\r\n// Converting packet size to hex and prepending with zeros\r\nsize = padWithZeros(packet.length.toString(16), 8);\r\n\r\n// sending packet to 127.0.0.1:11345\r\nsocketClient.write(size + packet)\r\n```\r\n\r\nExpected result:\r\nGazebo should print a more detailed description of a problem and **should not crash**.\r\n", "markup": "markdown", "html": "<p>I'm getting a crash when sending a subscription request:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>$ gzserver --verbose nothing-and-rover.world\nGazebo multi-robot simulator, version <span class=\"m\">7</span>.0.0\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2012</span>-2016 Open Source Robotics Foundation.\nReleased under the Apache <span class=\"m\">2</span> License.\nhttp://gazebosim.org\n\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">192</span>.168.1.169\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>msgs.cc:120<span class=\"o\">]</span> EXCEPTION: Can<span class=\"err\">&#39;</span>t serialize message of type<span class=\"o\">[</span>gazebo.msgs.Publish<span class=\"o\">]</span> because it is missing required fields\n\nlibc++abi.dylib: terminating with uncaught exception of <span class=\"nb\">type</span> gazebo::common::Exception\nAbort trap: <span class=\"m\">6</span>\n$\n</pre></div>\n\n\n<p>System is MacOS 10.11.6, Gazebo v7.0.0</p>\n<p>This is the mesage I send:</p>\n<div class=\"codehilite language-js\"><pre><span></span><span class=\"c1\">// Serialize message and wrap it in Packet</span>\n<span class=\"kd\">var</span> <span class=\"nx\">packet</span> <span class=\"o\">=</span> <span class=\"nx\">proto</span><span class=\"p\">.</span><span class=\"nx\">serialize</span><span class=\"p\">({</span>\n    <span class=\"s1\">&#39;stamp&#39;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;sec&#39;</span><span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">now</span> <span class=\"o\">/</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;nsec&#39;</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">&#39;type&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;advertise&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;serialized_data&#39;</span><span class=\"o\">:</span> <span class=\"nx\">proto</span><span class=\"p\">.</span><span class=\"nx\">serialize</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;topic&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/gazebo/default/dummy-rover/hokuyo/link/laser/scan&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;host&#39;</span><span class=\"o\">:</span> <span class=\"nx\">NODE_TCP_IP</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;port&#39;</span><span class=\"o\">:</span> <span class=\"nx\">NODE_TCP_PORT</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;msg_type&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;gazebo.msgs.LaserScanStamped&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;gazebo.msgs.Subscribe&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">},</span> <span class=\"s1\">&#39;gazebo.msgs.Packet&#39;</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Converting packet size to hex and prepending with zeros</span>\n<span class=\"nx\">size</span> <span class=\"o\">=</span> <span class=\"nx\">padWithZeros</span><span class=\"p\">(</span><span class=\"nx\">packet</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">.</span><span class=\"nx\">toString</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">),</span> <span class=\"mi\">8</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// sending packet to 127.0.0.1:11345</span>\n<span class=\"nx\">socketClient</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"nx\">size</span> <span class=\"o\">+</span> <span class=\"nx\">packet</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Expected result:\nGazebo should print a more detailed description of a problem and <strong>should not crash</strong>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-08-06T18:49:45.930568+00:00", "milestone": null, "updated_on": "2016-09-14T19:20:02.394152+00:00", "type": "issue", "id": 2029}