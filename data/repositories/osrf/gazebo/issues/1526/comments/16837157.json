{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1526/comments/16837157.json"}, "html": {"href": "#!/osrf/gazebo/issues/1526#comment-16837157"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1526.json"}}, "type": "issue", "id": 1526, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Entity::SetStatic() does not work after the model is loaded"}, "content": {"raw": "I did not test the functionality of joints either. However the ode user guide explains at point 12.1 and 12.4 how to use these:\n\n12.1. How do I connect a body to the static environment with a joint?\n\n * Use dJointAttach with arguments (body,0) or (0,body).\n\n 12.4. How can an immovable body be created?\n\n * [...] The geom is associated with a rigid body ID of zero. Then in the contact callback when you detect a collision between two geoms with a nonzero body ID and a zero body ID, you can simply pass those two IDs to the `dJointAttach` function as normal. This will create a contact between the rigid body and the static environment.", "markup": "markdown", "html": "<p>I did not test the functionality of joints either. However the ode user guide explains at point 12.1 and 12.4 how to use these:</p>\n<p>12.1. How do I connect a body to the static environment with a joint?</p>\n<ul>\n<li>Use dJointAttach with arguments (body,0) or (0,body).</li>\n</ul>\n<p>12.4. How can an immovable body be created?</p>\n<ul>\n<li>[...] The geom is associated with a rigid body ID of zero. Then in the contact callback when you detect a collision between two geoms with a nonzero body ID and a zero body ID, you can simply pass those two IDs to the <code>dJointAttach</code> function as normal. This will create a contact between the rigid body and the static environment.</li>\n</ul>", "type": "rendered"}, "created_on": "2015-03-23T20:06:23.181011+00:00", "user": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "updated_on": null, "type": "issue_comment", "id": 16837157}