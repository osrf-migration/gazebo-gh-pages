{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/24039397.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-24039397"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Ian Chan, Did you had any progress with fixing this Issue ?", "markup": "markdown", "html": "<p>Ian Chan, Did you had any progress with fixing this Issue ?</p>", "type": "rendered"}, "created_on": "2015-12-14T15:15:16.342918+00:00", "user": {"display_name": "daniel m", "uuid": "{9e38dcaa-1cad-4902-be94-142ceb352515}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9e38dcaa-1cad-4902-be94-142ceb352515%7D"}, "html": {"href": "https://bitbucket.org/%7B9e38dcaa-1cad-4902-be94-142ceb352515%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/141d5de72bf293ab85d5f5b757c97f4fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-4.png"}}, "nickname": "dmeltz1", "type": "user", "account_id": "557058:6f0f3bc9-2add-4c0b-b6d8-dc9aecdc573a"}, "updated_on": null, "type": "issue_comment", "id": 24039397}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/24049903.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-24049903"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "unfortunately I didn't have time to come back to this. If anyone has spare time to tackle this, please do. I'm happy to help test it.", "markup": "markdown", "html": "<p>unfortunately I didn't have time to come back to this. If anyone has spare time to tackle this, please do. I'm happy to help test it.</p>", "type": "rendered"}, "created_on": "2015-12-14T22:20:06.443464+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 24049903}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/30610858.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-30610858"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:23:39.439191+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30610858}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/34100615.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-34100615"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I see code relating to multiple vertical beams in [GpuRaySensor.cc](#!/osrf/gazebo/src/d9caf6c36a9f78ce6ab2a1fa2f7ddef06084d889/gazebo/sensors/GpuRaySensor.cc?at=default&fileviewer=file-view-default) on the default branch. Is it working? Should this issue be closed?", "markup": "markdown", "html": "<p>I see code relating to multiple vertical beams in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d9caf6c36a9f78ce6ab2a1fa2f7ddef06084d889/gazebo/sensors/GpuRaySensor.cc?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">GpuRaySensor.cc</a> on the default branch. Is it working? Should this issue be closed?</p>", "type": "rendered"}, "created_on": "2017-02-01T17:45:09.068803+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34100615}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/34128729.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-34128729"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I believe the issue still exists. The angle of the vertical beams and the generated sensor values are not correct.", "markup": "markdown", "html": "<p>I believe the issue still exists. The angle of the vertical beams and the generated sensor values are not correct.</p>", "type": "rendered"}, "created_on": "2017-02-02T18:41:53.715945+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 34128729}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/37762305.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-37762305"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Has anyone found a solution for the problem?", "markup": "markdown", "html": "<p>Has anyone found a solution for the problem?</p>", "type": "rendered"}, "created_on": "2017-06-22T07:00:08.243525+00:00", "user": {"display_name": "Schoerner", "uuid": "{57ebc993-e18c-4300-a2e4-c90b39ad263a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B57ebc993-e18c-4300-a2e4-c90b39ad263a%7D"}, "html": {"href": "https://bitbucket.org/%7B57ebc993-e18c-4300-a2e4-c90b39ad263a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bf922ace847d2d4b70f593783fae687d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-3.png"}}, "nickname": "Phil_Sc", "type": "user", "account_id": "557058:762ac01d-022c-4582-b964-8e802c31a272"}, "updated_on": null, "type": "issue_comment", "id": 37762305}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/38887451.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-38887451"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Hi,\n\nare there any new insights on this issue?\n\nRegards,\n\nMarc", "markup": "markdown", "html": "<p>Hi,</p>\n<p>are there any new insights on this issue?</p>\n<p>Regards,</p>\n<p>Marc</p>", "type": "rendered"}, "created_on": "2017-08-04T04:17:52.736232+00:00", "user": {"display_name": "MarcZofka", "uuid": "{8e492043-1cf9-4b92-b4a3-fddba650d752}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8e492043-1cf9-4b92-b4a3-fddba650d752%7D"}, "html": {"href": "https://bitbucket.org/%7B8e492043-1cf9-4b92-b4a3-fddba650d752%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/464aedaf98009220dfbcb95b5611ec90d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-5.png"}}, "nickname": "GzMRZ", "type": "user", "account_id": "557058:d819a9eb-8b76-48aa-9fd8-c23583587a7b"}, "updated_on": null, "type": "issue_comment", "id": 38887451}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/38992999.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-38992999"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "@GzMRZ No new insights that I'm aware of. Would you be interested in making a pull request with a fix?", "markup": "markdown", "html": "<p>@GzMRZ No new insights that I'm aware of. Would you be interested in making a pull request with a fix?</p>", "type": "rendered"}, "created_on": "2017-08-09T16:52:29.854019+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 38992999}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/42418297.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-42418297"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "This is still problem. Right now, the gpu laser only works with 1 vertical sample.", "markup": "markdown", "html": "<p>This is still problem. Right now, the gpu laser only works with 1 vertical sample.</p>", "type": "rendered"}, "created_on": "2018-01-05T19:33:37.822346+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 42418297}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/42418734.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-42418734"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2018-01-05T20:11:38.219396+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 42418734}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/44707888.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-44707888"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "@iche033 I'm currently trying to work on this issue. Is there any place where I could find a summary of how this plugin  is supposed to work so that I could understand the math more easily? Like what exactly first and second pass compute and how undistortion using a mesh works.\n\nRegards,\nJacob", "markup": "markdown", "html": "<p>@iche033 I'm currently trying to work on this issue. Is there any place where I could find a summary of how this plugin  is supposed to work so that I could understand the math more easily? Like what exactly first and second pass compute and how undistortion using a mesh works.</p>\n<p>Regards,\nJacob</p>", "type": "rendered"}, "created_on": "2018-04-16T07:16:12.312990+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 44707888}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/44763580.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-44763580"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "there's very limited documentation on the implementation left by the original author. I only found a couple of slides describing some math behind it, which I'll share in [here](https://docs.google.com/presentation/d/1jzOezydv9n2x3OS_8XRF8fjqDCa83qhFwnVWbvfx3Qs/edit?usp=sharing). @JChoclin has made [some progress in his fork](https://bitbucket.org/JChoclin/gazebo/src/2ea1d7799cf4418c5d211e03061a02e3b4f10ae9/?at=gpu_vertical_javier) so you may want to start from there.", "markup": "markdown", "html": "<p>there's very limited documentation on the implementation left by the original author. I only found a couple of slides describing some math behind it, which I'll share in <a data-is-external-link=\"true\" href=\"https://docs.google.com/presentation/d/1jzOezydv9n2x3OS_8XRF8fjqDCa83qhFwnVWbvfx3Qs/edit?usp=sharing\" rel=\"nofollow\">here</a>. @JChoclin has made <a data-is-external-link=\"true\" href=\"https://bitbucket.org/JChoclin/gazebo/src/2ea1d7799cf4418c5d211e03061a02e3b4f10ae9/?at=gpu_vertical_javier\" rel=\"nofollow\">some progress in his fork</a> so you may want to start from there.</p>", "type": "rendered"}, "created_on": "2018-04-17T17:53:46.573957+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 44763580}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/44843269.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-44843269"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Thanks for sharing the document and pointing me to Javier's work!", "markup": "markdown", "html": "<p>Thanks for sharing the document and pointing me to Javier's work!</p>", "type": "rendered"}, "created_on": "2018-04-20T12:41:42.657628+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 44843269}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/44882591.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-44882591"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "@JChoclin Your commit messages imply that you were able to reduce the error, but when I tried your code the resulting point cloud is still very distorted. Either something of my setup is wrong or I think there is still a bug in the un-distortion mesh. \n\nWhat's the current status of your work on this? \n\nFYI: I'm using the ROS velodyne_gazebo_plugins package which I slightly modified to have a GPU laser version of the sensor.", "markup": "markdown", "html": "<p>@JChoclin Your commit messages imply that you were able to reduce the error, but when I tried your code the resulting point cloud is still very distorted. Either something of my setup is wrong or I think there is still a bug in the un-distortion mesh. </p>\n<p>What's the current status of your work on this? </p>\n<p>FYI: I'm using the ROS velodyne_gazebo_plugins package which I slightly modified to have a GPU laser version of the sensor.</p>", "type": "rendered"}, "created_on": "2018-04-23T08:39:13.855997+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 44882591}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/44891512.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-44891512"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Hi @roboterbastler. You are right, it reduced the error in the tests but unfortunately, the rays are still distorted.  I am still working on it. I am working on the Gazebo GPU ray plugin directly. But the problem is not the plugin that you are using.", "markup": "markdown", "html": "<p>Hi @roboterbastler. You are right, it reduced the error in the tests but unfortunately, the rays are still distorted.  I am still working on it. I am working on the Gazebo GPU ray plugin directly. But the problem is not the plugin that you are using.</p>", "type": "rendered"}, "created_on": "2018-04-23T14:44:50.746740+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-04-23T14:45:56.249373+00:00", "type": "issue_comment", "id": 44891512}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45049702.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45049702"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I managed to get a point cloud now that looks quite correct, however there still is a vertical offset... If you want to take a look at my WIP code you find it at https://bitbucket.org/enwaytech/gazebo/branch/gpu_vertical_jacob", "markup": "markdown", "html": "<p>I managed to get a point cloud now that looks quite correct, however there still is a vertical offset... If you want to take a look at my WIP code you find it at <a href=\"https://bitbucket.org/enwaytech/gazebo/branch/gpu_vertical_jacob\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/enwaytech/gazebo/branch/gpu_vertical_jacob</a></p>", "type": "rendered"}, "created_on": "2018-04-30T10:42:11.685945+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45049702}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45059697.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45059697"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "@roboterbastler is your repo private? I get an Access Denied page when opening the link", "markup": "markdown", "html": "<p>@roboterbastler is your repo private? I get an Access Denied page when opening the link</p>", "type": "rendered"}, "created_on": "2018-04-30T16:58:30.987293+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 45059697}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45149220.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45149220"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Yes, sorry I forgot to set that to public. It should be accessible now.", "markup": "markdown", "html": "<p>Yes, sorry I forgot to set that to public. It should be accessible now.</p>", "type": "rendered"}, "created_on": "2018-05-02T07:12:43.212983+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45149220}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45160352.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45160352"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I managed to fix the vertical distortion that was still in the point cloud. Now I think the result looks correct, I tested a couple of different settings for vertical/horizontal vield of view and samples and the results looked always good. Would be very nice if either @iche033 or @JChoclin could test it as well (repository linked above).\n\nOne thing I ignored for now is the interpolation and the resolution parameter (set it to 1). So this won't work yet I think. Wouldn't it generally make sense to get rid of the manual interpolation [done in GpuRaySensor.cc](https://bitbucket.org/enwaytech/gazebo/src/107e951cdbf5c1b956b4883a5f565cc707d45b33/gazebo/sensors/GpuRaySensor.cc#lines-699) and just increase the resolution of the first pass rendering accordingly?", "markup": "markdown", "html": "<p>I managed to fix the vertical distortion that was still in the point cloud. Now I think the result looks correct, I tested a couple of different settings for vertical/horizontal vield of view and samples and the results looked always good. Would be very nice if either @iche033 or @JChoclin could test it as well (repository linked above).</p>\n<p>One thing I ignored for now is the interpolation and the resolution parameter (set it to 1). So this won't work yet I think. Wouldn't it generally make sense to get rid of the manual interpolation <a data-is-external-link=\"true\" href=\"https://bitbucket.org/enwaytech/gazebo/src/107e951cdbf5c1b956b4883a5f565cc707d45b33/gazebo/sensors/GpuRaySensor.cc#lines-699\" rel=\"nofollow\">done in GpuRaySensor.cc</a> and just increase the resolution of the first pass rendering accordingly?</p>", "type": "rendered"}, "created_on": "2018-05-02T14:41:24.012951+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": "2018-05-02T14:42:39.427207+00:00", "type": "issue_comment", "id": 45160352}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45168904.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45168904"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "@roboterbastler  I can see your branch now, I am testing it today, thanks!", "markup": "markdown", "html": "<p>@roboterbastler  I can see your branch now, I am testing it today, thanks!</p>", "type": "rendered"}, "created_on": "2018-05-02T21:45:57.233729+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-05-02T21:46:11.832946+00:00", "type": "issue_comment", "id": 45168904}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45170889.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45170889"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "that sounds promising, thanks for sharing the code.\n\nIgnoring the resolution param for now sounds good. The interpolation logic and the resolution param originated from cpu version of ray sensor. For the gpu version, we could just decide to increase the resolution of the first pass. The only thing I am concerned about is that it may introduce more inconsistency between the results of the two versions.", "markup": "markdown", "html": "<p>that sounds promising, thanks for sharing the code.</p>\n<p>Ignoring the resolution param for now sounds good. The interpolation logic and the resolution param originated from cpu version of ray sensor. For the gpu version, we could just decide to increase the resolution of the first pass. The only thing I am concerned about is that it may introduce more inconsistency between the results of the two versions.</p>", "type": "rendered"}, "created_on": "2018-05-03T00:43:02.743116+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 45170889}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45183928.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45183928"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Definitely looks much better, thanks! This is what I see:\n\n![Screenshot from 2018-05-03 10-36-27.png](data/bitbucket.org/repo/jgXqbo/images/932302369-Screenshot_from_2018-05-03_10-36-27.png)\n\nI don't know if the inconsistency between the plugins should be a problem, at the end of the day, the way that the data is generated in both cases is completely different, interpolated or not...", "markup": "markdown", "html": "<p>Definitely looks much better, thanks! This is what I see:</p>\n<p><img alt=\"Screenshot from 2018-05-03 10-36-27.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/932302369-Screenshot_from_2018-05-03_10-36-27.png\" /></p>\n<p>I don't know if the inconsistency between the plugins should be a problem, at the end of the day, the way that the data is generated in both cases is completely different, interpolated or not...</p>", "type": "rendered"}, "created_on": "2018-05-03T13:44:08.964720+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": null, "type": "issue_comment", "id": 45183928}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45187557.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45187557"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I can think of two ways the resolution param could define the first pass image size: Based on the number of samples (size = resolution * samples) or based on the field of view (size = resolution * fov), e.g. 5 pixels per degree or so. \nThe first option is probably closer to the semantics of that param in the CPU version. On the other hand the second option makes it easier to control the size of the area (pixel in first pass image) that is averaged to get the range for one ray which in theory is only a point.\n\nOne thing that also needs to be fixed: Currently the case of only 1 vertical ray does not seem to work. I will take a look at it the next days.", "markup": "markdown", "html": "<p>I can think of two ways the resolution param could define the first pass image size: Based on the number of samples (size = resolution * samples) or based on the field of view (size = resolution * fov), e.g. 5 pixels per degree or so. \nThe first option is probably closer to the semantics of that param in the CPU version. On the other hand the second option makes it easier to control the size of the area (pixel in first pass image) that is averaged to get the range for one ray which in theory is only a point.</p>\n<p>One thing that also needs to be fixed: Currently the case of only 1 vertical ray does not seem to work. I will take a look at it the next days.</p>", "type": "rendered"}, "created_on": "2018-05-03T15:31:07.632052+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45187557}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45192055.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45192055"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "For the CPU case, increasing the resolution are more like generating fake rays that may not really help give better results (for small number of samples):\n\nsamples: 30, resolution 10\n\n![ray_30_10.jpg](data/bitbucket.org/repo/jgXqbo/images/1915693778-ray_30_10.jpg)\n\nsamples: 300, resolution 1\n\n ![ray_300_1.jpg](data/bitbucket.org/repo/jgXqbo/images/2210297056-ray_300_1.jpg)\n\nIf I understand correctly, I think in both options, increasing the resolution will result in a larger image size which may produce data similar to the second image?", "markup": "markdown", "html": "<p>For the CPU case, increasing the resolution are more like generating fake rays that may not really help give better results (for small number of samples):</p>\n<p>samples: 30, resolution 10</p>\n<p><img alt=\"ray_30_10.jpg\" src=\"data/bitbucket.org/repo/jgXqbo/images/1915693778-ray_30_10.jpg\" /></p>\n<p>samples: 300, resolution 1</p>\n<p><img alt=\"ray_300_1.jpg\" src=\"data/bitbucket.org/repo/jgXqbo/images/2210297056-ray_300_1.jpg\" /></p>\n<p>If I understand correctly, I think in both options, increasing the resolution will result in a larger image size which may produce data similar to the second image?</p>", "type": "rendered"}, "created_on": "2018-05-03T17:52:10.857399+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 45192055}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45192335.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45192335"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Yes, I did not test it yet, but that's what I think.", "markup": "markdown", "html": "<p>Yes, I did not test it yet, but that's what I think.</p>", "type": "rendered"}, "created_on": "2018-05-03T18:01:19.574995+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45192335}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45205529.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45205529"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "The issue with the case of 1 vertical ray turned out to actually be an issue with velodyne_gazebo_plugins, so no need to tackle it here.", "markup": "markdown", "html": "<p>The issue with the case of 1 vertical ray turned out to actually be an issue with velodyne_gazebo_plugins, so no need to tackle it here.</p>", "type": "rendered"}, "created_on": "2018-05-04T09:35:43.495258+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45205529}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45257120.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45257120"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I implemented the resolution based on sample count because for now I think it's a bit closer to the CPU case. \n\nCheck out the following images of willow garage environment view from top down with 16 vert. and 1875 horiz. samples:\n\nvert/horz resolution = 1:\n\n![resolution_1.png](data/bitbucket.org/repo/jgXqbo/images/1393870002-resolution_1.png)\n\n\nvert/horz resolution=2:\n\n![resolution_2.png](data/bitbucket.org/repo/jgXqbo/images/92625895-resolution_2.png)\n\n\nvert/horz resolution=4:\n\n![resolution_4.png](data/bitbucket.org/repo/jgXqbo/images/627558770-resolution_4.png)\n\nFor this implementation of the resolution I made small changes to the API especially because I had to sort out range count and ray count. How critical is that regarding an availability in existing Gazebo 7/8/9 versions? \n\nIn general: What is still to be done in order to prepare a pull request? Probably adjust the tests, I haven't looked at them at all until now... For me it would be very nice if this feature could be released into one of the recent Gazebo releases soon.\n\nRegards,\nJacob", "markup": "markdown", "html": "<p>I implemented the resolution based on sample count because for now I think it's a bit closer to the CPU case. </p>\n<p>Check out the following images of willow garage environment view from top down with 16 vert. and 1875 horiz. samples:</p>\n<p>vert/horz resolution = 1:</p>\n<p><img alt=\"resolution_1.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1393870002-resolution_1.png\" /></p>\n<p>vert/horz resolution=2:</p>\n<p><img alt=\"resolution_2.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/92625895-resolution_2.png\" /></p>\n<p>vert/horz resolution=4:</p>\n<p><img alt=\"resolution_4.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/627558770-resolution_4.png\" /></p>\n<p>For this implementation of the resolution I made small changes to the API especially because I had to sort out range count and ray count. How critical is that regarding an availability in existing Gazebo 7/8/9 versions? </p>\n<p>In general: What is still to be done in order to prepare a pull request? Probably adjust the tests, I haven't looked at them at all until now... For me it would be very nice if this feature could be released into one of the recent Gazebo releases soon.</p>\n<p>Regards,\nJacob</p>", "type": "rendered"}, "created_on": "2018-05-07T08:23:00.588335+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45257120}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45275610.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45275610"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "The changes are made on top of `gazebo7`so we need to preserve ABI and API compatibility. \n\nLooking at [the changes](https://bitbucket.org/enwaytech/gazebo/branch/gpu_vertical_jacob?dest=gazebo7#chg-gazebo/test/ServerFixture.hh), I think you just added the new `GpuLaser::SetRayCount` function? That should be fine and won't break API/ABI\n\nThere is an integration test in `test/integration/gpu_laser.cc`. The test require some changes to `ServerFixture::SpawnGpuRaySensor` and that break API (probably done by me a while back). I'll look into reverting those changes. Once that's fixed and the test passes, you can create a PR targeting `gazebo7`.\n\nWhen the PR is merged, we'll manually merge the changes forward to gazebo8, 9, and the default branch and make new releases.", "markup": "markdown", "html": "<p>The changes are made on top of <code>gazebo7</code>so we need to preserve ABI and API compatibility. </p>\n<p>Looking at <a data-is-external-link=\"true\" href=\"https://bitbucket.org/enwaytech/gazebo/branch/gpu_vertical_jacob?dest=gazebo7#chg-gazebo/test/ServerFixture.hh\" rel=\"nofollow\">the changes</a>, I think you just added the new <code>GpuLaser::SetRayCount</code> function? That should be fine and won't break API/ABI</p>\n<p>There is an integration test in <code>test/integration/gpu_laser.cc</code>. The test require some changes to <code>ServerFixture::SpawnGpuRaySensor</code> and that break API (probably done by me a while back). I'll look into reverting those changes. Once that's fixed and the test passes, you can create a PR targeting <code>gazebo7</code>.</p>\n<p>When the PR is merged, we'll manually merge the changes forward to gazebo8, 9, and the default branch and make new releases.</p>", "type": "rendered"}, "created_on": "2018-05-07T18:09:49.392373+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 45275610}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45282413.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45282413"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "[here's a patch](https://bitbucket.org/snippets/iche033/qez5ex) that cleans up the tests and fixes the API problem. \n\nThe `LaserScanResolution` test in `gpu_laser.cc` is directly ported from the [test for the cpu version](#!/osrf/gazebo/src/c6890ec7a14e698ee16e92d6399546990177986c/test/integration/laser.cc#lines-373)  of the ray sensor. I noticed that it's failing. A quick look reveals that it's not due to the precision of the results but the size of the laser scan data is different. \n\n* gpu: scan size = hSamples * vSamples\n\n* cpu: scan size = hSamples * hResolution * vSamples * vResolution\n\nIt's probably the way gpu laser is handling resolution params but it would be nice to keep the behavior consistent so that `GpuRaySensor::Range()` and `RaySensor::Range()` function has the same meaning.\n\nOther than that, I tested the sensor a bit and it's looking good!", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/snippets/iche033/qez5ex\" rel=\"nofollow\">here's a patch</a> that cleans up the tests and fixes the API problem. </p>\n<p>The <code>LaserScanResolution</code> test in <code>gpu_laser.cc</code> is directly ported from the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/c6890ec7a14e698ee16e92d6399546990177986c/test/integration/laser.cc#lines-373\" rel=\"nofollow\">test for the cpu version</a>  of the ray sensor. I noticed that it's failing. A quick look reveals that it's not due to the precision of the results but the size of the laser scan data is different. </p>\n<ul>\n<li>\n<p>gpu: scan size = hSamples * vSamples</p>\n</li>\n<li>\n<p>cpu: scan size = hSamples * hResolution * vSamples * vResolution</p>\n</li>\n</ul>\n<p>It's probably the way gpu laser is handling resolution params but it would be nice to keep the behavior consistent so that <code>GpuRaySensor::Range()</code> and <code>RaySensor::Range()</code> function has the same meaning.</p>\n<p>Other than that, I tested the sensor a bit and it's looking good!</p>", "type": "rendered"}, "created_on": "2018-05-08T01:09:49.507167+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 45282413}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45327799.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45327799"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I see... I don't really get why the cpu laser behaves this way, because with vertical and horizontal sample count I already define how many ranges the resulting scan should have and from my understanding the resolution parameter should only affect internal sizes and not change the sample count of the resulting scan.\n\nBut I agree with you that it should be consistent, so I'm fine with making it consistent with the cpu laser and personally I will just always set that resolution to 1 ;)", "markup": "markdown", "html": "<p>I see... I don't really get why the cpu laser behaves this way, because with vertical and horizontal sample count I already define how many ranges the resulting scan should have and from my understanding the resolution parameter should only affect internal sizes and not change the sample count of the resulting scan.</p>\n<p>But I agree with you that it should be consistent, so I'm fine with making it consistent with the cpu laser and personally I will just always set that resolution to 1 ;)</p>", "type": "rendered"}, "created_on": "2018-05-09T07:35:47.613324+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45327799}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45333400.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45333400"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I changed the resolution behaviour and now the tests pass (not all Gazebo tests passed on my machine but those which failed seemed completely unrelated).\n\nAs you suggested I created a PR: #!/osrf/gazebo/pull-requests/2955/fix-gpuraysensor-vertical-rays/diff", "markup": "markdown", "html": "<p>I changed the resolution behaviour and now the tests pass (not all Gazebo tests passed on my machine but those which failed seemed completely unrelated).</p>\n<p>As you suggested I created a PR: <a href=\"#!/osrf/gazebo/pull-requests/2955/fix-gpuraysensor-vertical-rays/diff\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2955/fix-gpuraysensor-vertical-rays/diff</a></p>", "type": "rendered"}, "created_on": "2018-05-09T12:22:36.256645+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": "2018-05-09T13:09:05.065292+00:00", "type": "issue_comment", "id": 45333400}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45665646.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45665646"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "pull request #2955", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/2955/fix-gpuraysensor-vertical-rays\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2955</a></p>", "type": "rendered"}, "created_on": "2018-05-22T21:58:52.927561+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 45665646}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/46291012.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-46291012"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "pull request #2955 merged\n\n* issue fixed on ubuntu \n\n* OS X still has problem with inaccurate readings", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/2955/fix-gpuraysensor-vertical-rays\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2955</a> merged</p>\n<ul>\n<li>\n<p>issue fixed on ubuntu </p>\n</li>\n<li>\n<p>OS X still has problem with inaccurate readings</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2018-06-18T20:33:43.208775+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 46291012}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/46982607.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-46982607"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Running on gazebo 9.2, my gzserver crahses if I'm subscribed to the GpuRaySensor's laser scan.  It goes out of bounds on [this line](#!/osrf/gazebo/src/95386dd06ece26a03738c7ebcec1a0c730b65ad9/gazebo/sensors/GpuRaySensor.cc#lines-633). \n\n```\n[libprotobuf FATAL /usr/include/google/protobuf/repeated_field.h:1092] CHECK failed: (index) < (current_size_):\nterminate called after throwing an instance of 'google::protobuf::FatalException'\n  what():  CHECK failed: (index) < (current_size_):\n\nThread 1 \"gzserver\" received signal SIGABRT, Aborted.\n__GI_raise (sig=sig@entry=6)\n    at ../sysdeps/unix/sysv/linux/raise.c:51\n51      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) backtrace\n#0  0x00007ffff62f6e97 in __GI_raise (sig=sig@entry=6)\n    at ../sysdeps/unix/sysv/linux/raise.c:51\n#1  0x00007ffff62f8801 in __GI_abort () at abort.c:79\n#2  0x00007ffff694d8fb in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#3  0x00007ffff6953d3a in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#4  0x00007ffff6953d95 in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#5  0x00007ffff6953fe8 in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#6  0x00007ffff46ddbb8 in google::protobuf::internal::LogMessage::Finish() () at /usr/lib/x86_64-linux-gnu/libprotobuf.so.10\n#7  0x00007ffff603851a in google::protobuf::RepeatedField<double>::Set(int, double const&) (value=<synthetic pointer>: <optimized out>, index=300, this=<optimized out>)\n    at /usr/include/google/protobuf/repeated_field.h:1092\n#8  0x00007ffff603851a in gazebo::msgs::LaserScan::set_ranges(int, double) (value=-inf, index=300, this=<optimized out>)\n    at ./obj-x86_64-linux-gnu/gazebo/msgs/laserscan.pb.h:644\n---Type <return> to continue, or q <return> to quit---\n#9  0x00007ffff603851a in gazebo::sensors::GpuRaySensor::UpdateImpl(bool) (this=0x5555569c9f00) at ./gazebo/sensors/GpuRaySensor.cc:633\n#10 0x00007ffff6055129 in gazebo::sensors::Sensor::Update(bool) (this=0x5555569c9f00, _force=_force@entry=false)\n    at ./gazebo/sensors/Sensor.cc:224\n#11 0x00007ffff605b1ed in gazebo::sensors::SensorManager::SensorContainer::Update(bool) (this=0x555555dc3790, _force=<optimized out>)\n    at ./gazebo/sensors/SensorManager.cc:623\n#12 0x00007ffff605cddb in gazebo::sensors::SensorManager::Update(bool) (this=this@entry=0x7ffff62b4000 <SingletonT<gazebo::sensors::SensorManager>::GetInstance()::t>, _force=<optimized out>)\n    at ./gazebo/sensors/SensorManager.cc:190\n#13 0x00007ffff60532db in gazebo::sensors::run_once(bool) (_force=_force@entry=false) at ./gazebo/sensors/SensorsIface.cc:118\n#14 0x00007ffff7ba059f in gazebo::Server::Run() (this=0x55555581f2a0) at ./gazebo/Server.cc:587\n#15 0x0000555555557e55 in main(int, char**) (argc=3, argv=0x7fffffffdd78) at ./gazebo/server_main.cc:42\n(gdb) frame 9\n#9  gazebo::sensors::GpuRaySensor::UpdateImpl (this=0x5555569c9f00)\n    at ./gazebo/sensors/GpuRaySensor.cc:633\n633     ./gazebo/sensors/GpuRaySensor.cc: No such file or directory.\n(gdb) list\n628     in ./gazebo/sensors/GpuRaySensor.cc\n(gdb) print range\n$1 = -inf\n(gdb) print i\n$2 = 300\n(gdb) print RayCount()\n$3 = 30\n(gdb) print VerticalRayCount()\n$4 = 10\n(gdb) print dataIter\n$5 = {index = 300, data = 0x555600ea7d90, skip = 3,\n  rangeOffset = 0, intensityOffset = 1, horizontalResolution = 30}\n(gdb) print dataEnd\n$6 = {index = 360, data = 0x555600ea7d90, skip = 3,\n  rangeOffset = 0, intensityOffset = 1, horizontalResolution = 30}\n\n```\n\nIt seems the message is resized to VeritcalRayCount() * RayCount() (300 in my example), but the dataIter is size 360.\n\nThis is my sensor sdf:\n```\n                <sensor name=\"sensor_gpu_ray\" type=\"gpu_ray\">\n                    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>\n                    <ray>\n                        <scan display=\"true\">\n                            <horizontal>\n                                <samples>30</samples>\n                                <resolution>1.0</resolution>\n                                <min_angle>-0.5236</min_angle>\n                                <max_angle>0.5236</max_angle>\n                            </horizontal>\n                            <vertical>\n                                <samples>10</samples>\n                                <resolution>1.0</resolution>\n                                <min_angle>-0.2</min_angle>\n                                <max_angle>0.2</max_angle>\n                            </vertical>\n                        </scan>\n                        <range>\n                            <min>0.05</min>\n                            <max>50.0</max>\n                        </range>\n                    </ray>\n                    <always_on>true</always_on>\n                    <update_rate>1.0</update_rate>\n                </sensor>\n```", "markup": "markdown", "html": "<p>Running on gazebo 9.2, my gzserver crahses if I'm subscribed to the GpuRaySensor's laser scan.  It goes out of bounds on <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/95386dd06ece26a03738c7ebcec1a0c730b65ad9/gazebo/sensors/GpuRaySensor.cc#lines-633\" rel=\"nofollow\">this line</a>. </p>\n<div class=\"codehilite\"><pre><span></span>[libprotobuf FATAL /usr/include/google/protobuf/repeated_field.h:1092] CHECK failed: (index) &lt; (current_size_):\nterminate called after throwing an instance of &#39;google::protobuf::FatalException&#39;\n  what():  CHECK failed: (index) &lt; (current_size_):\n\nThread 1 &quot;gzserver&quot; received signal SIGABRT, Aborted.\n__GI_raise (sig=sig@entry=6)\n    at ../sysdeps/unix/sysv/linux/raise.c:51\n51      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) backtrace\n#0  0x00007ffff62f6e97 in __GI_raise (sig=sig@entry=6)\n    at ../sysdeps/unix/sysv/linux/raise.c:51\n#1  0x00007ffff62f8801 in __GI_abort () at abort.c:79\n#2  0x00007ffff694d8fb in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#3  0x00007ffff6953d3a in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#4  0x00007ffff6953d95 in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#5  0x00007ffff6953fe8 in  ()\n    at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#6  0x00007ffff46ddbb8 in google::protobuf::internal::LogMessage::Finish() () at /usr/lib/x86_64-linux-gnu/libprotobuf.so.10\n#7  0x00007ffff603851a in google::protobuf::RepeatedField&lt;double&gt;::Set(int, double const&amp;) (value=&lt;synthetic pointer&gt;: &lt;optimized out&gt;, index=300, this=&lt;optimized out&gt;)\n    at /usr/include/google/protobuf/repeated_field.h:1092\n#8  0x00007ffff603851a in gazebo::msgs::LaserScan::set_ranges(int, double) (value=-inf, index=300, this=&lt;optimized out&gt;)\n    at ./obj-x86_64-linux-gnu/gazebo/msgs/laserscan.pb.h:644\n---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---\n#9  0x00007ffff603851a in gazebo::sensors::GpuRaySensor::UpdateImpl(bool) (this=0x5555569c9f00) at ./gazebo/sensors/GpuRaySensor.cc:633\n#10 0x00007ffff6055129 in gazebo::sensors::Sensor::Update(bool) (this=0x5555569c9f00, _force=_force@entry=false)\n    at ./gazebo/sensors/Sensor.cc:224\n#11 0x00007ffff605b1ed in gazebo::sensors::SensorManager::SensorContainer::Update(bool) (this=0x555555dc3790, _force=&lt;optimized out&gt;)\n    at ./gazebo/sensors/SensorManager.cc:623\n#12 0x00007ffff605cddb in gazebo::sensors::SensorManager::Update(bool) (this=this@entry=0x7ffff62b4000 &lt;SingletonT&lt;gazebo::sensors::SensorManager&gt;::GetInstance()::t&gt;, _force=&lt;optimized out&gt;)\n    at ./gazebo/sensors/SensorManager.cc:190\n#13 0x00007ffff60532db in gazebo::sensors::run_once(bool) (_force=_force@entry=false) at ./gazebo/sensors/SensorsIface.cc:118\n#14 0x00007ffff7ba059f in gazebo::Server::Run() (this=0x55555581f2a0) at ./gazebo/Server.cc:587\n#15 0x0000555555557e55 in main(int, char**) (argc=3, argv=0x7fffffffdd78) at ./gazebo/server_main.cc:42\n(gdb) frame 9\n#9  gazebo::sensors::GpuRaySensor::UpdateImpl (this=0x5555569c9f00)\n    at ./gazebo/sensors/GpuRaySensor.cc:633\n633     ./gazebo/sensors/GpuRaySensor.cc: No such file or directory.\n(gdb) list\n628     in ./gazebo/sensors/GpuRaySensor.cc\n(gdb) print range\n$1 = -inf\n(gdb) print i\n$2 = 300\n(gdb) print RayCount()\n$3 = 30\n(gdb) print VerticalRayCount()\n$4 = 10\n(gdb) print dataIter\n$5 = {index = 300, data = 0x555600ea7d90, skip = 3,\n  rangeOffset = 0, intensityOffset = 1, horizontalResolution = 30}\n(gdb) print dataEnd\n$6 = {index = 360, data = 0x555600ea7d90, skip = 3,\n  rangeOffset = 0, intensityOffset = 1, horizontalResolution = 30}\n</pre></div>\n\n\n<p>It seems the message is resized to VeritcalRayCount() * RayCount() (300 in my example), but the dataIter is size 360.</p>\n<p>This is my sensor sdf:</p>\n<div class=\"codehilite\"><pre><span></span>                <span class=\"nt\">&lt;sensor</span> <span class=\"na\">name=</span><span class=\"s\">&quot;sensor_gpu_ray&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;gpu_ray&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.0 0.0 0.0 0.0 0.0 0.0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;ray&gt;</span>\n                        <span class=\"nt\">&lt;scan</span> <span class=\"na\">display=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">&gt;</span>\n                            <span class=\"nt\">&lt;horizontal&gt;</span>\n                                <span class=\"nt\">&lt;samples&gt;</span>30<span class=\"nt\">&lt;/samples&gt;</span>\n                                <span class=\"nt\">&lt;resolution&gt;</span>1.0<span class=\"nt\">&lt;/resolution&gt;</span>\n                                <span class=\"nt\">&lt;min_angle&gt;</span>-0.5236<span class=\"nt\">&lt;/min_angle&gt;</span>\n                                <span class=\"nt\">&lt;max_angle&gt;</span>0.5236<span class=\"nt\">&lt;/max_angle&gt;</span>\n                            <span class=\"nt\">&lt;/horizontal&gt;</span>\n                            <span class=\"nt\">&lt;vertical&gt;</span>\n                                <span class=\"nt\">&lt;samples&gt;</span>10<span class=\"nt\">&lt;/samples&gt;</span>\n                                <span class=\"nt\">&lt;resolution&gt;</span>1.0<span class=\"nt\">&lt;/resolution&gt;</span>\n                                <span class=\"nt\">&lt;min_angle&gt;</span>-0.2<span class=\"nt\">&lt;/min_angle&gt;</span>\n                                <span class=\"nt\">&lt;max_angle&gt;</span>0.2<span class=\"nt\">&lt;/max_angle&gt;</span>\n                            <span class=\"nt\">&lt;/vertical&gt;</span>\n                        <span class=\"nt\">&lt;/scan&gt;</span>\n                        <span class=\"nt\">&lt;range&gt;</span>\n                            <span class=\"nt\">&lt;min&gt;</span>0.05<span class=\"nt\">&lt;/min&gt;</span>\n                            <span class=\"nt\">&lt;max&gt;</span>50.0<span class=\"nt\">&lt;/max&gt;</span>\n                        <span class=\"nt\">&lt;/range&gt;</span>\n                    <span class=\"nt\">&lt;/ray&gt;</span>\n                    <span class=\"nt\">&lt;always_on&gt;</span>true<span class=\"nt\">&lt;/always_on&gt;</span>\n                    <span class=\"nt\">&lt;update_rate&gt;</span>1.0<span class=\"nt\">&lt;/update_rate&gt;</span>\n                <span class=\"nt\">&lt;/sensor&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-07-27T20:30:01.080192+00:00", "user": {"display_name": "Kevin Allen", "uuid": "{29f672ad-72f4-434e-bb0e-c6f2f69974f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D"}, "html": {"href": "https://bitbucket.org/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355d0415f6040ffb168f44275ac2ee2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKA-1.png"}}, "nickname": "kev-the-dev", "type": "user", "account_id": "5b04a6cf8a69f52b3ba2e5db"}, "updated_on": null, "type": "issue_comment", "id": 46982607}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/46982902.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-46982902"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I recall @scpeters mentioned that parts of the gpu laser sensor changes were not ported forward to gazebo9 due to iterator changes. So not sure if that would be the cause of this issue. To verify, we can try and see if the same problem occurs on gazebo7", "markup": "markdown", "html": "<p>I recall @scpeters mentioned that parts of the gpu laser sensor changes were not ported forward to gazebo9 due to iterator changes. So not sure if that would be the cause of this issue. To verify, we can try and see if the same problem occurs on gazebo7</p>", "type": "rendered"}, "created_on": "2018-07-27T21:06:55.145782+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 46982902}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/46982937.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-46982937"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Yeah, this hasn't been merged forward to gazebo9 yet; see #2486", "markup": "markdown", "html": "<p>Yeah, this hasn't been merged forward to gazebo9 yet; see <a href=\"#!/osrf/gazebo/issues/2486/conflicts-between-vertical-gpu-rays-and\" rel=\"nofollow\" title=\"Conflicts between vertical GPU rays and GpuLaserDataIterator pull requests\" class=\"ap-connect-link\">#2486</a></p>", "type": "rendered"}, "created_on": "2018-07-27T21:12:07.669218+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 46982937}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/46983037.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-46983037"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "That must be it, cannot reproduce on gazebo7", "markup": "markdown", "html": "<p>That must be it, cannot reproduce on gazebo7</p>", "type": "rendered"}, "created_on": "2018-07-27T21:32:14.358177+00:00", "user": {"display_name": "Kevin Allen", "uuid": "{29f672ad-72f4-434e-bb0e-c6f2f69974f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D"}, "html": {"href": "https://bitbucket.org/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355d0415f6040ffb168f44275ac2ee2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKA-1.png"}}, "nickname": "kev-the-dev", "type": "user", "account_id": "5b04a6cf8a69f52b3ba2e5db"}, "updated_on": null, "type": "issue_comment", "id": 46983037}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/47317006.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-47317006"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Hello, \nIs there any plans yet to update Gazebo 9 on this issue? I'm also getting this error when trying to get GPU laser vertical rays;\n\n```\n#!text\n\n[libprotobuf FATAL /usr/include/google/protobuf/repeated_field.h:1092] CHECK failed: (index) < (current_size_):\nterminate called after throwing an instance of 'google::protobuf::FatalException'\n  what():  CHECK failed: (index) < (current_size_):\n```", "markup": "markdown", "html": "<p>Hello, \nIs there any plans yet to update Gazebo 9 on this issue? I'm also getting this error when trying to get GPU laser vertical rays;</p>\n<div class=\"codehilite language-text\"><pre><span></span>[libprotobuf FATAL /usr/include/google/protobuf/repeated_field.h:1092] CHECK failed: (index) &lt; (current_size_):\nterminate called after throwing an instance of &#39;google::protobuf::FatalException&#39;\n  what():  CHECK failed: (index) &lt; (current_size_):\n</pre></div>", "type": "rendered"}, "created_on": "2018-08-17T11:20:18.035715+00:00", "user": {"display_name": "Arif Rahman", "uuid": "{39d6ad8c-5b3d-4587-afa0-1b551b319900}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B39d6ad8c-5b3d-4587-afa0-1b551b319900%7D"}, "html": {"href": "https://bitbucket.org/%7B39d6ad8c-5b3d-4587-afa0-1b551b319900%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3770f521fdadbd664b944cdc18fbc97cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAR-3.png"}}, "nickname": "arif_rahman_my", "type": "user", "account_id": "5b14bdc482e05b22cc7d54e7"}, "updated_on": "2018-08-17T11:21:02.903379+00:00", "type": "issue_comment", "id": 47317006}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/47761980.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-47761980"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "pull request #3013 for gazebo9", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/3013/add-vertical-lidar-rays-for-gazebo-9\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #3013</a> for gazebo9</p>", "type": "rendered"}, "created_on": "2018-09-12T20:58:15.096541+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 47761980}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/49264171.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-49264171"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I'm still having this problem using Gazebo 7.14.0 and this package with my initioal issue: https://bitbucket.org/DataspeedInc/velodyne_simulator/issues/15/gpu-mode-very-roughly-resoluted-scans-in\n--> Nvidia MX150, binary driver 384.130, Ubuntu 16.04.5", "markup": "markdown", "html": "<p>I'm still having this problem using Gazebo 7.14.0 and this package with my initioal issue: <a href=\"https://bitbucket.org/DataspeedInc/velodyne_simulator/issues/15/gpu-mode-very-roughly-resoluted-scans-in\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/DataspeedInc/velodyne_simulator/issues/15/gpu-mode-very-roughly-resoluted-scans-in</a>\n--&gt; Nvidia MX150, binary driver 384.130, Ubuntu 16.04.5</p>", "type": "rendered"}, "created_on": "2018-12-03T20:38:13.587128+00:00", "user": {"display_name": "Bjarne Johannsen", "uuid": "{f1122cd8-f384-4214-8feb-9347d5d0ecdf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf1122cd8-f384-4214-8feb-9347d5d0ecdf%7D"}, "html": {"href": "https://bitbucket.org/%7Bf1122cd8-f384-4214-8feb-9347d5d0ecdf%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/500d295b5145f1aae033b374077a0270d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBJ-5.png"}}, "nickname": "b_johannsen", "type": "user", "account_id": "5c02b3d10ecb4f1b2ffa8cfc"}, "updated_on": null, "type": "issue_comment", "id": 49264171}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/49743314.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-49743314"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I still have the same problem \u2013 the resolution for vertical scans is very rough. The problem is especially bad for low-lying lidars with a small vertical angular resolution and high working range, like, MRS1104C-111011. \nI have it on both gazebo 9.6 and 7.14. \n\nI tested it on:\n\n1. Ubuntu 16.04 + GTX 1050 + gazebo 9.6/gazebo 7.14 + nvidia 384/nvidia 415 \n\n2. Ubuntu 16.04 + GTX 1080/GTX 780 + gazebo 9.6 + nvidia 384\n\nHere is my world (sdf) files and images of how they work in my case.  \n\nray_cpu.world\n```\n#!xml\n<?xml version=\"1.0\" ?>\n<sdf version=\"1.5\">\n  <world name=\"default\">\n    <!-- A global light source -->\n    <include>\n      <uri>model://sun</uri>\n    </include>\n    <!-- A ground plane -->\n    <include>\n      <uri>model://ground_plane</uri>\n    </include>\n    <model name=\"velodyne\">\n      <static>true</static>\n      <pose>0 0 0.1 0 0 0</pose>\n      <link name=\"link\">\n        <inertial>\n          <mass>0.1</mass>\n        </inertial>\n        <collision name=\"collision\">\n          <geometry>\n            <box>\n              <size>0.2 0.2 0.2</size>\n            </box>\n          </geometry>\n        </collision>\n        <visual name=\"visual\">\n          <geometry>\n            <box>\n              <size>0.2 0.2 0.2</size>\n            </box>\n          </geometry>\n        </visual>\n        <sensor name=\"laser\" type=\"ray\">\n          <pose>1.0 0 0.5 0 -0 0</pose>\n          <ray>\n            <scan>\n              <horizontal>\n                <samples>1100</samples>\n                <resolution>1</resolution>\n                <min_angle>-2.39</min_angle>\n                <max_angle>2.39</max_angle>\n              </horizontal>\n              <vertical>\n                <samples>2</samples>\n                <resolution>1</resolution>\n                <min_angle>-0.09</min_angle>\n                <max_angle>-0.045</max_angle>\n              </vertical>\n            </scan>\n            <range>\n              <min>0.3</min>\n              <max>64</max>\n              <resolution>0.001</resolution>\n            </range>\n          </ray>\n          <always_on>1</always_on>\n          <update_rate>30</update_rate>\n          <visualize>true</visualize>\n        </sensor>\n      </link>\n    </model>\n  </world>\n</sdf>\n\n\n```\nray_gpu.world\n\n```\n#!xml\n<?xml version=\"1.0\" ?>\n<sdf version=\"1.5\">\n  <world name=\"default\">\n    <!-- A global light source -->\n    <include>\n      <uri>model://sun</uri>\n    </include>\n    <!-- A ground plane -->\n    <include>\n      <uri>model://ground_plane</uri>\n    </include>\n    <model name=\"velodyne\">\n      <static>true</static>\n      <pose>0 0 0.1 0 0 0</pose>\n      <link name=\"link\">\n        <inertial>\n          <mass>0.1</mass>\n        </inertial>\n        <collision name=\"collision\">\n          <geometry>\n            <box>\n              <size>0.2 0.2 0.2</size>\n            </box>\n          </geometry>\n        </collision>\n        <visual name=\"visual\">\n          <geometry>\n            <box>\n              <size>0.2 0.2 0.2</size>\n            </box>\n          </geometry>\n        </visual>\n        <sensor name=\"laser\" type=\"gpu_ray\">\n          <pose>1.0 0 0.5 0 -0 0</pose>\n          <ray>\n            <scan>\n              <horizontal>\n                <samples>1100</samples>\n                <resolution>1</resolution>\n                <min_angle>-2.39</min_angle>\n                <max_angle>2.39</max_angle>\n              </horizontal>\n              <vertical>\n                <samples>2</samples>\n                <resolution>1</resolution>\n                <min_angle>-0.09</min_angle>\n                <max_angle>-0.045</max_angle>\n              </vertical>\n            </scan>\n            <range>\n              <min>0.3</min>\n              <max>64</max>\n              <resolution>0.001</resolution>\n            </range>\n          </ray>\n          <always_on>1</always_on>\n          <update_rate>30</update_rate>\n          <visualize>true</visualize>\n        </sensor>\n      </link>\n    </model>\n  </world>\n</sdf>\n\n\n```\ngazebo 7.14 - cpu ray\n![7-cpu.png](data/bitbucket.org/repo/jgXqbo/images/621299507-7-cpu.png)\ngazebo 7.14 - gpu ray\n![7-gpu.png](data/bitbucket.org/repo/jgXqbo/images/1914566622-7-gpu.png)\ngazebo 9.6 - cpu ray\n![9-cpu.png](data/bitbucket.org/repo/jgXqbo/images/792769661-9-cpu.png)\ngazebo 9.6 - gpu ray\n![9-gpu.png](data/bitbucket.org/repo/jgXqbo/images/3164326772-9-gpu.png)", "markup": "markdown", "html": "<p>I still have the same problem \u2013 the resolution for vertical scans is very rough. The problem is especially bad for low-lying lidars with a small vertical angular resolution and high working range, like, MRS1104C-111011. \nI have it on both gazebo 9.6 and 7.14. </p>\n<p>I tested it on:</p>\n<ol>\n<li>\n<p>Ubuntu 16.04 + GTX 1050 + gazebo 9.6/gazebo 7.14 + nvidia 384/nvidia 415 </p>\n</li>\n<li>\n<p>Ubuntu 16.04 + GTX 1080/GTX 780 + gazebo 9.6 + nvidia 384</p>\n</li>\n</ol>\n<p>Here is my world (sdf) files and images of how they work in my case.  </p>\n<p>ray_cpu.world</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.5&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"c\">&lt;!-- A global light source --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"c\">&lt;!-- A ground plane --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;velodyne&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;static&gt;</span>true<span class=\"nt\">&lt;/static&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 0.1 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>0.1<span class=\"nt\">&lt;/mass&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n        <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>0.2 0.2 0.2<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/collision&gt;</span>\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>0.2 0.2 0.2<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/visual&gt;</span>\n        <span class=\"nt\">&lt;sensor</span> <span class=\"na\">name=</span><span class=\"s\">&quot;laser&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ray&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;pose&gt;</span>1.0 0 0.5 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n          <span class=\"nt\">&lt;ray&gt;</span>\n            <span class=\"nt\">&lt;scan&gt;</span>\n              <span class=\"nt\">&lt;horizontal&gt;</span>\n                <span class=\"nt\">&lt;samples&gt;</span>1100<span class=\"nt\">&lt;/samples&gt;</span>\n                <span class=\"nt\">&lt;resolution&gt;</span>1<span class=\"nt\">&lt;/resolution&gt;</span>\n                <span class=\"nt\">&lt;min_angle&gt;</span>-2.39<span class=\"nt\">&lt;/min_angle&gt;</span>\n                <span class=\"nt\">&lt;max_angle&gt;</span>2.39<span class=\"nt\">&lt;/max_angle&gt;</span>\n              <span class=\"nt\">&lt;/horizontal&gt;</span>\n              <span class=\"nt\">&lt;vertical&gt;</span>\n                <span class=\"nt\">&lt;samples&gt;</span>2<span class=\"nt\">&lt;/samples&gt;</span>\n                <span class=\"nt\">&lt;resolution&gt;</span>1<span class=\"nt\">&lt;/resolution&gt;</span>\n                <span class=\"nt\">&lt;min_angle&gt;</span>-0.09<span class=\"nt\">&lt;/min_angle&gt;</span>\n                <span class=\"nt\">&lt;max_angle&gt;</span>-0.045<span class=\"nt\">&lt;/max_angle&gt;</span>\n              <span class=\"nt\">&lt;/vertical&gt;</span>\n            <span class=\"nt\">&lt;/scan&gt;</span>\n            <span class=\"nt\">&lt;range&gt;</span>\n              <span class=\"nt\">&lt;min&gt;</span>0.3<span class=\"nt\">&lt;/min&gt;</span>\n              <span class=\"nt\">&lt;max&gt;</span>64<span class=\"nt\">&lt;/max&gt;</span>\n              <span class=\"nt\">&lt;resolution&gt;</span>0.001<span class=\"nt\">&lt;/resolution&gt;</span>\n            <span class=\"nt\">&lt;/range&gt;</span>\n          <span class=\"nt\">&lt;/ray&gt;</span>\n          <span class=\"nt\">&lt;always_on&gt;</span>1<span class=\"nt\">&lt;/always_on&gt;</span>\n          <span class=\"nt\">&lt;update_rate&gt;</span>30<span class=\"nt\">&lt;/update_rate&gt;</span>\n          <span class=\"nt\">&lt;visualize&gt;</span>true<span class=\"nt\">&lt;/visualize&gt;</span>\n        <span class=\"nt\">&lt;/sensor&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>ray_gpu.world</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.5&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"c\">&lt;!-- A global light source --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"c\">&lt;!-- A ground plane --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;velodyne&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;static&gt;</span>true<span class=\"nt\">&lt;/static&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 0.1 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>0.1<span class=\"nt\">&lt;/mass&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n        <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>0.2 0.2 0.2<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/collision&gt;</span>\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>0.2 0.2 0.2<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/visual&gt;</span>\n        <span class=\"nt\">&lt;sensor</span> <span class=\"na\">name=</span><span class=\"s\">&quot;laser&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;gpu_ray&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;pose&gt;</span>1.0 0 0.5 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n          <span class=\"nt\">&lt;ray&gt;</span>\n            <span class=\"nt\">&lt;scan&gt;</span>\n              <span class=\"nt\">&lt;horizontal&gt;</span>\n                <span class=\"nt\">&lt;samples&gt;</span>1100<span class=\"nt\">&lt;/samples&gt;</span>\n                <span class=\"nt\">&lt;resolution&gt;</span>1<span class=\"nt\">&lt;/resolution&gt;</span>\n                <span class=\"nt\">&lt;min_angle&gt;</span>-2.39<span class=\"nt\">&lt;/min_angle&gt;</span>\n                <span class=\"nt\">&lt;max_angle&gt;</span>2.39<span class=\"nt\">&lt;/max_angle&gt;</span>\n              <span class=\"nt\">&lt;/horizontal&gt;</span>\n              <span class=\"nt\">&lt;vertical&gt;</span>\n                <span class=\"nt\">&lt;samples&gt;</span>2<span class=\"nt\">&lt;/samples&gt;</span>\n                <span class=\"nt\">&lt;resolution&gt;</span>1<span class=\"nt\">&lt;/resolution&gt;</span>\n                <span class=\"nt\">&lt;min_angle&gt;</span>-0.09<span class=\"nt\">&lt;/min_angle&gt;</span>\n                <span class=\"nt\">&lt;max_angle&gt;</span>-0.045<span class=\"nt\">&lt;/max_angle&gt;</span>\n              <span class=\"nt\">&lt;/vertical&gt;</span>\n            <span class=\"nt\">&lt;/scan&gt;</span>\n            <span class=\"nt\">&lt;range&gt;</span>\n              <span class=\"nt\">&lt;min&gt;</span>0.3<span class=\"nt\">&lt;/min&gt;</span>\n              <span class=\"nt\">&lt;max&gt;</span>64<span class=\"nt\">&lt;/max&gt;</span>\n              <span class=\"nt\">&lt;resolution&gt;</span>0.001<span class=\"nt\">&lt;/resolution&gt;</span>\n            <span class=\"nt\">&lt;/range&gt;</span>\n          <span class=\"nt\">&lt;/ray&gt;</span>\n          <span class=\"nt\">&lt;always_on&gt;</span>1<span class=\"nt\">&lt;/always_on&gt;</span>\n          <span class=\"nt\">&lt;update_rate&gt;</span>30<span class=\"nt\">&lt;/update_rate&gt;</span>\n          <span class=\"nt\">&lt;visualize&gt;</span>true<span class=\"nt\">&lt;/visualize&gt;</span>\n        <span class=\"nt\">&lt;/sensor&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>gazebo 7.14 - cpu ray\n<img alt=\"7-cpu.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/621299507-7-cpu.png\" />\ngazebo 7.14 - gpu ray\n<img alt=\"7-gpu.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1914566622-7-gpu.png\" />\ngazebo 9.6 - cpu ray\n<img alt=\"9-cpu.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/792769661-9-cpu.png\" />\ngazebo 9.6 - gpu ray\n<img alt=\"9-gpu.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3164326772-9-gpu.png\" /></p>", "type": "rendered"}, "created_on": "2019-01-04T18:18:11.888652+00:00", "user": {"display_name": "Ilea Baltashov", "uuid": "{c494d5a7-3ac7-412d-aa0e-df970a70e8f6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc494d5a7-3ac7-412d-aa0e-df970a70e8f6%7D"}, "html": {"href": "https://bitbucket.org/%7Bc494d5a7-3ac7-412d-aa0e-df970a70e8f6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bcbaa5e5462a04b98294ea0c4e6a03c9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIB-0.png"}}, "nickname": "Baltic1996", "type": "user", "account_id": "5a785dd72d61371e861f6b1e"}, "updated_on": "2019-01-04T18:20:17.650956+00:00", "type": "issue_comment", "id": 49743314}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/50502301.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-50502301"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "Any update?1 I can confirm this issue is still exist on Gazebo9, and Gazebo 10", "markup": "markdown", "html": "<p>Any update?1 I can confirm this issue is still exist on Gazebo9, and Gazebo 10</p>", "type": "rendered"}, "created_on": "2019-02-08T11:40:37.857224+00:00", "user": {"display_name": "AbdAlrahman AlaaEldeen", "uuid": "{b1c2a360-877b-4761-8f48-59899a08f080}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb1c2a360-877b-4761-8f48-59899a08f080%7D"}, "html": {"href": "https://bitbucket.org/%7Bb1c2a360-877b-4761-8f48-59899a08f080%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:fb125623-a12a-4a9f-836f-a3cf8f4da832/00d5c490-57e5-4332-9b0d-6aec47903f8f/128"}}, "nickname": "AbdAlrahman AlaaEldeen", "type": "user", "account_id": "557058:fb125623-a12a-4a9f-836f-a3cf8f4da832"}, "updated_on": null, "type": "issue_comment", "id": 50502301}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/53409952.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-53409952"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "This problem still exists in the latest versions of the branches gazebo9 as well as in the default\\(Gazebo10?\\). It is very sad and unfortunate that the gpu\\_ray doses not get enough attention even though the problem is well known and multiple bug report is filed. \n\nBelow I have attached screenshots of the CPU version and the GPU version of the generated cloud. \n\nUsing gpu\\_ray\n\n![](data/bitbucket.org/repo/jgXqbo/images/2183769347-velpdyne_gpu_error.png)\n\u200c\n\nUsing ray sensor \\(CPU\\)\n\n![](data/bitbucket.org/repo/jgXqbo/images/1196754289-velodyne_cpu.png)", "markup": "markdown", "html": "<p>This problem still exists in the latest versions of the branches gazebo9 as well as in the default(Gazebo10?). It is very sad and unfortunate that the gpu_ray doses not get enough attention even though the problem is well known and multiple bug report is filed. </p>\n<p>Below I have attached screenshots of the CPU version and the GPU version of the generated cloud. </p>\n<p>Using gpu_ray</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/jgXqbo/images/2183769347-velpdyne_gpu_error.png\" />\n\u200c</p>\n<p>Using ray sensor (CPU)</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/jgXqbo/images/1196754289-velodyne_cpu.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-14T11:57:03.835313+00:00", "user": {"display_name": "Karthick", "uuid": "{b3364e85-000e-4dc6-9752-45ec0d586ff2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb3364e85-000e-4dc6-9752-45ec0d586ff2%7D"}, "html": {"href": "https://bitbucket.org/%7Bb3364e85-000e-4dc6-9752-45ec0d586ff2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/458d2d9bfad278e3540effc4d4b51dcfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsK-4.png"}}, "nickname": "karthick_ramachandran", "type": "user", "account_id": "5bf3cf9f554b360314ee7162"}, "updated_on": null, "type": "issue_comment", "id": 53409952}], "page": 1, "size": 43}