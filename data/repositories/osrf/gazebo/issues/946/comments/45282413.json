{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45282413.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45282413"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "[here's a patch](https://bitbucket.org/snippets/iche033/qez5ex) that cleans up the tests and fixes the API problem. \n\nThe `LaserScanResolution` test in `gpu_laser.cc` is directly ported from the [test for the cpu version](#!/osrf/gazebo/src/c6890ec7a14e698ee16e92d6399546990177986c/test/integration/laser.cc#lines-373)  of the ray sensor. I noticed that it's failing. A quick look reveals that it's not due to the precision of the results but the size of the laser scan data is different. \n\n* gpu: scan size = hSamples * vSamples\n\n* cpu: scan size = hSamples * hResolution * vSamples * vResolution\n\nIt's probably the way gpu laser is handling resolution params but it would be nice to keep the behavior consistent so that `GpuRaySensor::Range()` and `RaySensor::Range()` function has the same meaning.\n\nOther than that, I tested the sensor a bit and it's looking good!", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/snippets/iche033/qez5ex\" rel=\"nofollow\">here's a patch</a> that cleans up the tests and fixes the API problem. </p>\n<p>The <code>LaserScanResolution</code> test in <code>gpu_laser.cc</code> is directly ported from the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/c6890ec7a14e698ee16e92d6399546990177986c/test/integration/laser.cc#lines-373\" rel=\"nofollow\">test for the cpu version</a>  of the ray sensor. I noticed that it's failing. A quick look reveals that it's not due to the precision of the results but the size of the laser scan data is different. </p>\n<ul>\n<li>\n<p>gpu: scan size = hSamples * vSamples</p>\n</li>\n<li>\n<p>cpu: scan size = hSamples * hResolution * vSamples * vResolution</p>\n</li>\n</ul>\n<p>It's probably the way gpu laser is handling resolution params but it would be nice to keep the behavior consistent so that <code>GpuRaySensor::Range()</code> and <code>RaySensor::Range()</code> function has the same meaning.</p>\n<p>Other than that, I tested the sensor a bit and it's looking good!</p>", "type": "rendered"}, "created_on": "2018-05-08T01:09:49.507167+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 45282413}