{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946/comments/45257120.json"}, "html": {"href": "#!/osrf/gazebo/issues/946#comment-45257120"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/946.json"}}, "type": "issue", "id": 946, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gpu ray sensor vertical ranges"}, "content": {"raw": "I implemented the resolution based on sample count because for now I think it's a bit closer to the CPU case. \n\nCheck out the following images of willow garage environment view from top down with 16 vert. and 1875 horiz. samples:\n\nvert/horz resolution = 1:\n\n![resolution_1.png](data/bitbucket.org/repo/jgXqbo/images/1393870002-resolution_1.png)\n\n\nvert/horz resolution=2:\n\n![resolution_2.png](data/bitbucket.org/repo/jgXqbo/images/92625895-resolution_2.png)\n\n\nvert/horz resolution=4:\n\n![resolution_4.png](data/bitbucket.org/repo/jgXqbo/images/627558770-resolution_4.png)\n\nFor this implementation of the resolution I made small changes to the API especially because I had to sort out range count and ray count. How critical is that regarding an availability in existing Gazebo 7/8/9 versions? \n\nIn general: What is still to be done in order to prepare a pull request? Probably adjust the tests, I haven't looked at them at all until now... For me it would be very nice if this feature could be released into one of the recent Gazebo releases soon.\n\nRegards,\nJacob", "markup": "markdown", "html": "<p>I implemented the resolution based on sample count because for now I think it's a bit closer to the CPU case. </p>\n<p>Check out the following images of willow garage environment view from top down with 16 vert. and 1875 horiz. samples:</p>\n<p>vert/horz resolution = 1:</p>\n<p><img alt=\"resolution_1.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1393870002-resolution_1.png\" /></p>\n<p>vert/horz resolution=2:</p>\n<p><img alt=\"resolution_2.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/92625895-resolution_2.png\" /></p>\n<p>vert/horz resolution=4:</p>\n<p><img alt=\"resolution_4.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/627558770-resolution_4.png\" /></p>\n<p>For this implementation of the resolution I made small changes to the API especially because I had to sort out range count and ray count. How critical is that regarding an availability in existing Gazebo 7/8/9 versions? </p>\n<p>In general: What is still to be done in order to prepare a pull request? Probably adjust the tests, I haven't looked at them at all until now... For me it would be very nice if this feature could be released into one of the recent Gazebo releases soon.</p>\n<p>Regards,\nJacob</p>", "type": "rendered"}, "created_on": "2018-05-07T08:23:00.588335+00:00", "user": {"display_name": "Jacob Seibert", "uuid": "{1b2f445c-78b0-4f05-a62c-681c2ccf481c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D"}, "html": {"href": "https://bitbucket.org/%7B1b2f445c-78b0-4f05-a62c-681c2ccf481c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JS-5.png"}}, "nickname": "jacob", "type": "user", "account_id": "5acdbbdcb783d22b5dadd70b"}, "updated_on": null, "type": "issue_comment", "id": 45257120}