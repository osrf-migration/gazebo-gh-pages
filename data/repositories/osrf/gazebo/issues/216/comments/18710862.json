{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/216/comments/18710862.json"}, "html": {"href": "#!/osrf/gazebo/issues/216#comment-18710862"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/216.json"}}, "type": "issue", "id": 216, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Pose addition and subtraction needs work"}, "content": {"raw": "I like this representation:\n\n`A_Transform_C` = `A_Transform_B`*`B_Transform_C`\n\nTests for `operator*` to [Pose_TEST.cc](#!/osrf/gazebo/src/71e285f4b088b78854926ee58740f9f1595fc7f0/gazebo/math/Pose_TEST.cc?at=default) sounds good here.\n\nconfirmed, per (abfe2d1),\n\n~~~\n% ./build_release/gazebo/math/UNIT_Pose_TEST\nRunning main() from gtest_main.cc\n[==========] Running 1 test from 1 test case.\n[----------] Global test environment set-up.\n[----------] 1 test from PoseTest\n[ RUN      ] PoseTest.Pose\n/home/hsu/projects/gazebo_default/gazebo/math/Pose_TEST.cc:45: Failure\nValue of: math::equal((A * B).pos.x, 1.0 + 1.0/sqrt(2))\n  Actual: false\nExpected: true\n/home/hsu/projects/gazebo_default/gazebo/math/Pose_TEST.cc:46: Failure\nValue of: math::equal((A * B).pos.y, 1.0/sqrt(2))\n  Actual: false\nExpected: true\n/home/hsu/projects/gazebo_default/gazebo/math/Pose_TEST.cc:122: Failure\nValue of: pose == math::Pose(5.74534, 7.01053, 8.62899, 0.675732, 0.535753, 1.01174)\n  Actual: false\nExpected: true\n[  FAILED  ] PoseTest.Pose (1 ms)\n[----------] 1 test from PoseTest (1 ms total)\n\n[----------] Global test environment tear-down\n[==========] 1 test from 1 test case ran. (1 ms total)\n[  PASSED  ] 0 tests.\n[  FAILED  ] 1 test, listed below:\n[  FAILED  ] PoseTest.Pose\n\n 1 FAILED TEST\n~~~\n\nLooks like `Pose::operator*` does the exact same thing as `Pose::operator+` (52894b3)\n\nIf the goal is to have `Pose::operator*` behave like `Matrix4::operator*`, then maybe we need to swap the arguments around in the operator, but I can't imagine doing that without breaking a bunch of existing stuff.", "markup": "markdown", "html": "<p>I like this representation:</p>\n<p><code>A_Transform_C</code> = <code>A_Transform_B</code>*<code>B_Transform_C</code></p>\n<p>Tests for <code>operator*</code> to <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/71e285f4b088b78854926ee58740f9f1595fc7f0/gazebo/math/Pose_TEST.cc?at=default\" rel=\"nofollow\">Pose_TEST.cc</a> sounds good here.</p>\n<p>confirmed, per (<a href=\"#!/osrf/gazebo/commits/abfe2d1\" rel=\"nofollow\" class=\"ap-connect-link\">abfe2d1</a>),</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">% ./build_release/gazebo/math/UNIT_Pose_TEST</span>\n<span class=\"n\">Running</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"n\">from</span> <span class=\"n\">gtest_main</span><span class=\"p\">.</span><span class=\"n\">cc</span>\n<span class=\"p\">[</span><span class=\"o\">==========</span><span class=\"p\">]</span> <span class=\"n\">Running</span> <span class=\"mi\">1</span> <span class=\"n\">test</span> <span class=\"n\">from</span> <span class=\"mi\">1</span> <span class=\"n\">test</span> <span class=\"k\">case</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"o\">----------</span><span class=\"p\">]</span> <span class=\"n\">Global</span> <span class=\"n\">test</span> <span class=\"n\">environment</span> <span class=\"n\">set</span><span class=\"o\">-</span><span class=\"n\">up</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"o\">----------</span><span class=\"p\">]</span> <span class=\"mi\">1</span> <span class=\"n\">test</span> <span class=\"n\">from</span> <span class=\"n\">PoseTest</span>\n<span class=\"p\">[</span> <span class=\"n\">RUN</span>      <span class=\"p\">]</span> <span class=\"n\">PoseTest</span><span class=\"p\">.</span><span class=\"n\">Pose</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_default</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">math</span><span class=\"o\">/</span><span class=\"n\">Pose_TEST</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">45</span><span class=\"p\">:</span> <span class=\"n\">Failure</span>\n<span class=\"n\">Value</span> <span class=\"n\">of</span><span class=\"p\">:</span> <span class=\"n\">math</span><span class=\"p\">::</span><span class=\"n\">equal</span><span class=\"p\">((</span><span class=\"n\">A</span> <span class=\"o\">*</span> <span class=\"n\">B</span><span class=\"p\">).</span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span> <span class=\"o\">+</span> <span class=\"mf\">1.0</span><span class=\"o\">/</span><span class=\"nb\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n  <span class=\"n\">Actual</span><span class=\"p\">:</span> <span class=\"n\">false</span>\n<span class=\"n\">Expected</span><span class=\"p\">:</span> <span class=\"n\">true</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_default</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">math</span><span class=\"o\">/</span><span class=\"n\">Pose_TEST</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">46</span><span class=\"p\">:</span> <span class=\"n\">Failure</span>\n<span class=\"n\">Value</span> <span class=\"n\">of</span><span class=\"p\">:</span> <span class=\"n\">math</span><span class=\"p\">::</span><span class=\"n\">equal</span><span class=\"p\">((</span><span class=\"n\">A</span> <span class=\"o\">*</span> <span class=\"n\">B</span><span class=\"p\">).</span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"o\">/</span><span class=\"nb\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n  <span class=\"n\">Actual</span><span class=\"p\">:</span> <span class=\"n\">false</span>\n<span class=\"n\">Expected</span><span class=\"p\">:</span> <span class=\"n\">true</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_default</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">math</span><span class=\"o\">/</span><span class=\"n\">Pose_TEST</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">122</span><span class=\"p\">:</span> <span class=\"n\">Failure</span>\n<span class=\"n\">Value</span> <span class=\"n\">of</span><span class=\"p\">:</span> <span class=\"n\">pose</span> <span class=\"o\">==</span> <span class=\"n\">math</span><span class=\"p\">::</span><span class=\"n\">Pose</span><span class=\"p\">(</span><span class=\"mf\">5.74534</span><span class=\"p\">,</span> <span class=\"mf\">7.01053</span><span class=\"p\">,</span> <span class=\"mf\">8.62899</span><span class=\"p\">,</span> <span class=\"mf\">0.675732</span><span class=\"p\">,</span> <span class=\"mf\">0.535753</span><span class=\"p\">,</span> <span class=\"mf\">1.01174</span><span class=\"p\">)</span>\n  <span class=\"n\">Actual</span><span class=\"p\">:</span> <span class=\"n\">false</span>\n<span class=\"n\">Expected</span><span class=\"p\">:</span> <span class=\"n\">true</span>\n<span class=\"p\">[</span>  <span class=\"n\">FAILED</span>  <span class=\"p\">]</span> <span class=\"n\">PoseTest</span><span class=\"p\">.</span><span class=\"n\">Pose</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">ms</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"o\">----------</span><span class=\"p\">]</span> <span class=\"mi\">1</span> <span class=\"n\">test</span> <span class=\"n\">from</span> <span class=\"n\">PoseTest</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">ms</span> <span class=\"n\">total</span><span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"o\">----------</span><span class=\"p\">]</span> <span class=\"n\">Global</span> <span class=\"n\">test</span> <span class=\"n\">environment</span> <span class=\"n\">tear</span><span class=\"o\">-</span><span class=\"n\">down</span>\n<span class=\"p\">[</span><span class=\"o\">==========</span><span class=\"p\">]</span> <span class=\"mi\">1</span> <span class=\"n\">test</span> <span class=\"n\">from</span> <span class=\"mi\">1</span> <span class=\"n\">test</span> <span class=\"k\">case</span> <span class=\"n\">ran</span><span class=\"p\">.</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">ms</span> <span class=\"n\">total</span><span class=\"p\">)</span>\n<span class=\"p\">[</span>  <span class=\"n\">PASSED</span>  <span class=\"p\">]</span> <span class=\"mi\">0</span> <span class=\"n\">tests</span><span class=\"p\">.</span>\n<span class=\"p\">[</span>  <span class=\"n\">FAILED</span>  <span class=\"p\">]</span> <span class=\"mi\">1</span> <span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">listed</span> <span class=\"n\">below</span><span class=\"p\">:</span>\n<span class=\"p\">[</span>  <span class=\"n\">FAILED</span>  <span class=\"p\">]</span> <span class=\"n\">PoseTest</span><span class=\"p\">.</span><span class=\"n\">Pose</span>\n\n <span class=\"mi\">1</span> <span class=\"n\">FAILED</span> <span class=\"n\">TEST</span>\n</pre></div>\n\n\n<p>Looks like <code>Pose::operator*</code> does the exact same thing as <code>Pose::operator+</code> (<a href=\"#!/osrf/gazebo/commits/52894b3\" rel=\"nofollow\" class=\"ap-connect-link\">52894b3</a>)</p>\n<p>If the goal is to have <code>Pose::operator*</code> behave like <code>Matrix4::operator*</code>, then maybe we need to swap the arguments around in the operator, but I can't imagine doing that without breaking a bunch of existing stuff.</p>", "type": "rendered"}, "created_on": "2015-06-10T00:30:41.735620+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-06-10T07:08:30.570252+00:00", "type": "issue_comment", "id": 18710862}