{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1022/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1022.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1022/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1022/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1022/protobuf-parsefromstring-function-return"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1022/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "protobuf ParseFromString function return value not checked", "component": {"name": "transport", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122882.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "While debugging #821 (transport race conditions), I noticed that the [protobuf ParseFromString](https://developers.google.com/protocol-buffers/docs/reference/cpp/google.protobuf.message_lite#MessageLite.ParseFromString) function is used frequently without checking its return value (bool) to see if it was successful.\r\n\r\nIn my overnight testing, I added a check to [Master.cc:169](#!/osrf/gazebo/src/e996e6f9117fbdc25ef263ac175094e7cd1ffedb/gazebo/Master.cc?at=default#cl-169), since I had seen some failures in this portion of the code:\r\n~~~\r\ndiff -r 56ef8eb1faaa gazebo/Master.cc\r\n--- a/gazebo/Master.cc\tTue Dec 17 19:02:34 2013 +0000\r\n+++ b/gazebo/Master.cc\tFri Dec 20 13:47:13 2013 -0800\r\n@@ -166,7 +166,13 @@\r\n   {\r\n     boost::recursive_mutex::scoped_lock lock(this->connectionMutex);\r\n     msgs::Publish pub;\r\n-    pub.ParseFromString(packet.serialized_data());\r\n+    if (!pub.ParseFromString(packet.serialized_data()))\r\n+    {\r\n+      gzerr << \"ParseFromString failed:\"\r\n+            << \" packet.type() \" << packet.type()\r\n+            << \" packet.serialized_data() \" << packet.serialized_data()\r\n+            << std::endl;\r\n+    }\r\n \r\n     Connection_M::iterator iter2;\r\n     for (iter2 = this->connections.begin();\r\n\r\n~~~\r\nI've omitted the serialized data below since it is binary data and didn't print well, but the failure of this function was a precursor to the `Can't serialize message` exception that is the hallmark of #821.\r\n~~~\r\n[Err] [Master.cc:171] ParseFromString failed: packet.type() advertise packet.serialized_data()\r\n...\r\n[Err] [Exception.cc:52] EXCEPTION: Can't serialize message of type[gazebo.msgs.Publish] because it is missing required fields\r\n~~~\r\n\r\nSo I suggest always checking the return value of ParseFromString, which may help with #821.", "markup": "markdown", "html": "<p>While debugging <a href=\"#!/osrf/gazebo/issues/821/apparent-transport-race-condition-on\" rel=\"nofollow\" title=\"Apparent transport race condition on startup\" class=\"ap-connect-link\">#821</a> (transport race conditions), I noticed that the <a data-is-external-link=\"true\" href=\"https://developers.google.com/protocol-buffers/docs/reference/cpp/google.protobuf.message_lite#MessageLite.ParseFromString\" rel=\"nofollow\">protobuf ParseFromString</a> function is used frequently without checking its return value (bool) to see if it was successful.</p>\n<p>In my overnight testing, I added a check to <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/e996e6f9117fbdc25ef263ac175094e7cd1ffedb/gazebo/Master.cc?at=default#cl-169\" rel=\"nofollow\">Master.cc:169</a>, since I had seen some failures in this portion of the code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 56ef8eb1faaa gazebo/Master.cc</span>\n<span class=\"gd\">--- a/gazebo/Master.cc  Tue Dec 17 19:02:34 2013 +0000</span>\n<span class=\"gi\">+++ b/gazebo/Master.cc  Fri Dec 20 13:47:13 2013 -0800</span>\n<span class=\"gu\">@@ -166,7 +166,13 @@</span>\n   {\n     boost::recursive_mutex::scoped_lock lock(this-&gt;connectionMutex);\n     msgs::Publish pub;\n<span class=\"gd\">-    pub.ParseFromString(packet.serialized_data());</span>\n<span class=\"gi\">+    if (!pub.ParseFromString(packet.serialized_data()))</span>\n<span class=\"gi\">+    {</span>\n<span class=\"gi\">+      gzerr &lt;&lt; &quot;ParseFromString failed:&quot;</span>\n<span class=\"gi\">+            &lt;&lt; &quot; packet.type() &quot; &lt;&lt; packet.type()</span>\n<span class=\"gi\">+            &lt;&lt; &quot; packet.serialized_data() &quot; &lt;&lt; packet.serialized_data()</span>\n<span class=\"gi\">+            &lt;&lt; std::endl;</span>\n<span class=\"gi\">+    }</span>\n\n     Connection_M::iterator iter2;\n     for (iter2 = this-&gt;connections.begin();\n</pre></div>\n\n\n<p>I've omitted the serialized data below since it is binary data and didn't print well, but the failure of this function was a precursor to the <code>Can't serialize message</code> exception that is the hallmark of <a href=\"#!/osrf/gazebo/issues/821/apparent-transport-race-condition-on\" rel=\"nofollow\" title=\"Apparent transport race condition on startup\" class=\"ap-connect-link\">#821</a>.</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [Master.cc:171] ParseFromString failed: packet.type() advertise packet.serialized_data()\n...\n[Err] [Exception.cc:52] EXCEPTION: Can&#39;t serialize message of type[gazebo.msgs.Publish] because it is missing required fields\n</pre></div>\n\n\n<p>So I suggest always checking the return value of ParseFromString, which may help with <a href=\"#!/osrf/gazebo/issues/821/apparent-transport-race-condition-on\" rel=\"nofollow\" title=\"Apparent transport race condition on startup\" class=\"ap-connect-link\">#821</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2014-01-24T17:18:17.883685+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:02.857283+00:00", "type": "issue", "id": 1022}