{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1372/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1372.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1372/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1372/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1372/gpu-ray-sensor-gpu-laser"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1372/vote"}}, "reporter": {"display_name": "Jerome Maye", "uuid": "{3a3244ce-02f6-4498-a48a-7a960a06a8fa}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3a3244ce-02f6-4498-a48a-7a960a06a8fa%7D"}, "html": {"href": "https://bitbucket.org/%7B3a3244ce-02f6-4498-a48a-7a960a06a8fa%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3f3db836954a0b1f7a23c8a0a714aca0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJM-1.png"}}, "nickname": "jmaye", "type": "user", "account_id": "557058:5bc3be59-8af9-4ae8-94f5-e84ef4486cd7"}, "title": "GPU ray sensor/GPU laser", "component": {"name": "sensors", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122877.json"}}}, "votes": 3, "watches": 4, "content": {"raw": "Are there some plans of making the GPU ray sensor/GPU laser work properly?\r\n\r\nI'm currently using Gazebo 2.2.5 on Ubuntu 14.04, compatible with ROS Indigo.\r\nThe basic idea is to simulate a Velodyne lidar. As you can forget the CPU ray sensor for that purpose (too slow), the GPU rendering would be great to use. The problem is that in the current version the code is buggy, it only works for a single 360-degrees-ray, but not for 32 vertical lasers.\r\n\r\nThe problem has already been pointed out (#!/osrf/gazebo/issue/946/gpu-ray-sensor-vertical-ranges) with a tentative solution that provides better results, yet not perfect. Furthermore, it's far too slow (1-2 turns per second, instead of 10 turns per second for a Velodyne 32).\r\n\r\nI haven't looked deeply into the code, but this should not be too complicated to have a working solution. And this would be really useful. We have an implementation in our custom-made simulator (https://github.com/kralf/morsel), but we have decided to switch to Gazebo recently.", "markup": "markdown", "html": "<p>Are there some plans of making the GPU ray sensor/GPU laser work properly?</p>\n<p>I'm currently using Gazebo 2.2.5 on Ubuntu 14.04, compatible with ROS Indigo.\nThe basic idea is to simulate a Velodyne lidar. As you can forget the CPU ray sensor for that purpose (too slow), the GPU rendering would be great to use. The problem is that in the current version the code is buggy, it only works for a single 360-degrees-ray, but not for 32 vertical lasers.</p>\n<p>The problem has already been pointed out (<a href=\"#!/osrf/gazebo/issue/946/gpu-ray-sensor-vertical-ranges\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issue/946/gpu-ray-sensor-vertical-ranges</a>) with a tentative solution that provides better results, yet not perfect. Furthermore, it's far too slow (1-2 turns per second, instead of 10 turns per second for a Velodyne 32).</p>\n<p>I haven't looked deeply into the code, but this should not be too complicated to have a working solution. And this would be really useful. We have an implementation in our custom-made simulator (<a href=\"https://github.com/kralf/morsel\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/kralf/morsel</a>), but we have decided to switch to Gazebo recently.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "2.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/51082.json"}}}, "edited_on": null, "created_on": "2014-12-04T15:18:38.117561+00:00", "milestone": null, "updated_on": "2017-02-01T18:01:23.447451+00:00", "type": "issue", "id": 1372}