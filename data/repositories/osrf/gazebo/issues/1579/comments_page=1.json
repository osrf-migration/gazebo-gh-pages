{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18269693.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18269693"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "The main callers of `SkyX::VClouds::DataManager::_performCalculations` are:\r\n\r\n * `SkyX::VClouds::DataManager::_getDensityAt`\r\n * `SkyX::VClouds::DataManager::_getLightAbsorcionAt`\r\n\r\nThe  sky creation stack is:\r\n\r\n```\r\nScene::setSky() ->\r\n  VcloudsManager::create() ->\r\n     Vclouds::create()\r\n```\r\n\r\nI was approaching to the problem by not creating the sky until the first Image Sensor was adding to the world, but that fail since the gzclient GUI also needs to represents  the clouds.\r\n\r\n@nkoenig would make sense to create the sky only while creating the world, only if the proper sdf sky tag is defined? Any other recommended approach?", "markup": "markdown", "html": "<p>The main callers of <code>SkyX::VClouds::DataManager::_performCalculations</code> are:</p>\n<ul>\n<li><code>SkyX::VClouds::DataManager::_getDensityAt</code></li>\n<li><code>SkyX::VClouds::DataManager::_getLightAbsorcionAt</code></li>\n</ul>\n<p>The  sky creation stack is:</p>\n<div class=\"codehilite\"><pre><span></span>Scene::setSky() -&gt;\n  VcloudsManager::create() -&gt;\n     Vclouds::create()\n</pre></div>\n\n\n<p>I was approaching to the problem by not creating the sky until the first Image Sensor was adding to the world, but that fail since the gzclient GUI also needs to represents  the clouds.</p>\n<p>@nkoenig would make sense to create the sky only while creating the world, only if the proper sdf sky tag is defined? Any other recommended approach?</p>", "type": "rendered"}, "created_on": "2015-05-21T16:46:07.499357+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 18269693}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18301922.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18301922"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "Creating the sky only when the proper SDF tag is defined sounds like a good idea.", "markup": "markdown", "html": "<p>Creating the sky only when the proper SDF tag is defined sounds like a good idea.</p>", "type": "rendered"}, "created_on": "2015-05-22T18:42:17.401543+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 18301922}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18521208.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18521208"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "I'm having some fun days trying to discover how to connect the SDF data, read by the gzserver, with gzclient which the one that starts the sky generation unconditionally. Here is the situation:\n\n## Approach 1: pass sdf data to gzclient and create the sky only if sdf enable it  ##\n\nBoth, gzserver and gzclient call RenderEngine, which seems to be a singleton so my approach would try to get the enable/disable sky flag into the RenderEngine. \n\n**gzserver** (read bottom to up, gdb bt)\n\n```\ngazebo::rendering::RenderEngine::Init \ngazebo::rendering::init \ngazebo::sensors::init \ngazebo::setupServer\ngazebo::Server::PreLoad\ngazebo::Server::ParseArgs (sdf could be read here)\n```\n\n**gzclient** (read bottom to up, gdb bt)\n\n```\ngazebo::rendering::Scene::Init\ngazebo::rendering::RenderEngine::CreateScene \ngazebo::rendering::create_scene\ngazebo::gui::GLWidget::GLWidget\n```\nGoing with this approach would imply to modify API calls between `gazebo::Server::ParseArgs` -> `gazebo::Server::PreLoad` -> `gazebo::setupServer`, which seems not very elegant to me.\n\n## Approach 2: use scene message to disable sky if not present  ##\n\nWhen gzclient is starting there is a scene msg that contains data about the whole scene, including the sky. The message is processed by `Scene::ProcessSceneMsg(ConstScenePtr &_msg)`.\n\nMy approach here was to leave the sky to be created but if the message lacks of the sky information, then disable and remove the sky on the `Scene::ProcessSceneMsg` method. Not very nice but seems to work. \n\nCallgrind shows a decrease of 80% the time spend on skyx (and probably it could decrease even more if I leave gzclient open more time).\n\nAny other idea? Should I test more the second approach and go with it? @nkoenig @iche033 @chapulina ", "markup": "markdown", "html": "<p>I'm having some fun days trying to discover how to connect the SDF data, read by the gzserver, with gzclient which the one that starts the sky generation unconditionally. Here is the situation:</p>\n<h2 id=\"markdown-header-approach-1-pass-sdf-data-to-gzclient-and-create-the-sky-only-if-sdf-enable-it\">Approach 1: pass sdf data to gzclient and create the sky only if sdf enable it</h2>\n<p>Both, gzserver and gzclient call RenderEngine, which seems to be a singleton so my approach would try to get the enable/disable sky flag into the RenderEngine. </p>\n<p><strong>gzserver</strong> (read bottom to up, gdb bt)</p>\n<div class=\"codehilite\"><pre><span></span>gazebo::rendering::RenderEngine::Init \ngazebo::rendering::init \ngazebo::sensors::init \ngazebo::setupServer\ngazebo::Server::PreLoad\ngazebo::Server::ParseArgs (sdf could be read here)\n</pre></div>\n\n\n<p><strong>gzclient</strong> (read bottom to up, gdb bt)</p>\n<div class=\"codehilite\"><pre><span></span>gazebo::rendering::Scene::Init\ngazebo::rendering::RenderEngine::CreateScene \ngazebo::rendering::create_scene\ngazebo::gui::GLWidget::GLWidget\n</pre></div>\n\n\n<p>Going with this approach would imply to modify API calls between <code>gazebo::Server::ParseArgs</code> -&gt; <code>gazebo::Server::PreLoad</code> -&gt; <code>gazebo::setupServer</code>, which seems not very elegant to me.</p>\n<h2 id=\"markdown-header-approach-2-use-scene-message-to-disable-sky-if-not-present\">Approach 2: use scene message to disable sky if not present</h2>\n<p>When gzclient is starting there is a scene msg that contains data about the whole scene, including the sky. The message is processed by <code>Scene::ProcessSceneMsg(ConstScenePtr &amp;_msg)</code>.</p>\n<p>My approach here was to leave the sky to be created but if the message lacks of the sky information, then disable and remove the sky on the <code>Scene::ProcessSceneMsg</code> method. Not very nice but seems to work. </p>\n<p>Callgrind shows a decrease of 80% the time spend on skyx (and probably it could decrease even more if I leave gzclient open more time).</p>\n<p>Any other idea? Should I test more the second approach and go with it? @nkoenig @iche033 @chapulina </p>", "type": "rendered"}, "created_on": "2015-06-02T00:35:03.627388+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 18521208}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18521851.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18521851"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "@\\_jrivero\\_. Thanks for looking into this. We probably don't want to create the sky any more until we get a scene msg that has the sky field (the msg is sent from `World` after it parses the sdf). So the approach I was thinking of is to remove `SetSky` in `Scene::Init` and create the sky in `Scene::OnSkyMsg` if it's not already created. This is just a slight variation of your approach 2. How does that sound? I am happy to spend some time helping with this.", "markup": "markdown", "html": "<p>@_jrivero_. Thanks for looking into this. We probably don't want to create the sky any more until we get a scene msg that has the sky field (the msg is sent from <code>World</code> after it parses the sdf). So the approach I was thinking of is to remove <code>SetSky</code> in <code>Scene::Init</code> and create the sky in <code>Scene::OnSkyMsg</code> if it's not already created. This is just a slight variation of your approach 2. How does that sound? I am happy to spend some time helping with this.</p>", "type": "rendered"}, "created_on": "2015-06-02T01:50:31.998279+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 18521851}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18542729.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18542729"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "That was my first try, I liked that approach: do not generate the sky until the first message arrives. However, if apply the following patch and run the empty_sky.world, I see no sky in gzclient.\n\n\n```\n#!diff\n\ndiff -r 7c6a01286318 gazebo/rendering/Scene.cc\n--- a/gazebo/rendering/Scene.cc\tFri May 29 13:02:53 2015 -0700\n+++ b/gazebo/rendering/Scene.cc\tTue Jun 02 20:14:48 2015 +0200\n@@ -325,17 +325,6 @@\n   for (uint32_t i = 0; i < this->dataPtr->grids.size(); ++i)\n     this->dataPtr->grids[i]->Init();\n \n-  // Create Sky. This initializes SkyX, and makes it invisible. A Sky\n-  // message must be received (via a scene message or on the ~/sky topic).\n-  try\n-  {\n-    this->SetSky();\n-  }\n-  catch(...)\n-  {\n-    gzerr << \"Failed to create the sky\\n\";\n-  }\n-\n   // Create Fog\n   if (this->dataPtr->sdf->HasElement(\"fog\"))\n   {\n@@ -1475,9 +1467,26 @@\n   // Process the sky message.\n   if (_msg->has_sky())\n   {\n+    // Create Sky. This initializes SkyX, and makes it invisible. A Sky\n+    // message must be received (via a scene message or on the ~/sky topic).\n+    try\n+    {\n+      std::cout << \"Scene::Init()::SetSky()\" << std::endl;\n+      this->SetSky();\n+    }\n+    catch(...)\n+    {\n+      gzerr << \"Failed to create the sky\\n\";\n+    }\n+\n     boost::shared_ptr<msgs::Sky> sm(new msgs::Sky(_msg->sky()));\n     this->OnSkyMsg(sm);\n   }\n+  else\n+  {\n+    this->dataPtr->skyx->remove();\n+    this->dataPtr->skyx = NULL;\n+  }\n \n   if (_msg->has_fog())\n   {\n\n```\nGiving a look into what's is different when moving the `setSky` call out of `Scene::Init`, the only relevant [command executed after the setSky](#!/osrf/gazebo/src/7e3d1fae2c8d7a4a21f8db048430390fb7779e57/gazebo/rendering/Scene.cc?at=default#cl-332) is the message publication of \"scene_info\". I tried to add the same into the previous patch, but it also did not show the sky on gzclient.\n\nIf we go up in the call stack, the call to `Scene::Init` comes from RenderEngine. [After that call there are two relevant comands](#!/osrf/gazebo/src/7e3d1fae2c8d7a4a21f8db048430390fb7779e57/gazebo/rendering/RenderEngine.cc?at=default#cl-201): `this->scenes.push_back(scene);` and `rendering::Events::createScene(_name);` which probably are the ones that do the trick.", "markup": "markdown", "html": "<p>That was my first try, I liked that approach: do not generate the sky until the first message arrives. However, if apply the following patch and run the empty_sky.world, I see no sky in gzclient.</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 7c6a01286318 gazebo/rendering/Scene.cc</span>\n<span class=\"gd\">--- a/gazebo/rendering/Scene.cc Fri May 29 13:02:53 2015 -0700</span>\n<span class=\"gi\">+++ b/gazebo/rendering/Scene.cc Tue Jun 02 20:14:48 2015 +0200</span>\n<span class=\"gu\">@@ -325,17 +325,6 @@</span>\n   for (uint32_t i = 0; i &lt; this-&gt;dataPtr-&gt;grids.size(); ++i)\n     this-&gt;dataPtr-&gt;grids[i]-&gt;Init();\n\n<span class=\"gd\">-  // Create Sky. This initializes SkyX, and makes it invisible. A Sky</span>\n<span class=\"gd\">-  // message must be received (via a scene message or on the ~/sky topic).</span>\n<span class=\"gd\">-  try</span>\n<span class=\"gd\">-  {</span>\n<span class=\"gd\">-    this-&gt;SetSky();</span>\n<span class=\"gd\">-  }</span>\n<span class=\"gd\">-  catch(...)</span>\n<span class=\"gd\">-  {</span>\n<span class=\"gd\">-    gzerr &lt;&lt; &quot;Failed to create the sky\\n&quot;;</span>\n<span class=\"gd\">-  }</span>\n<span class=\"gd\">-</span>\n   // Create Fog\n   if (this-&gt;dataPtr-&gt;sdf-&gt;HasElement(&quot;fog&quot;))\n   {\n<span class=\"gu\">@@ -1475,9 +1467,26 @@</span>\n   // Process the sky message.\n   if (_msg-&gt;has_sky())\n   {\n<span class=\"gi\">+    // Create Sky. This initializes SkyX, and makes it invisible. A Sky</span>\n<span class=\"gi\">+    // message must be received (via a scene message or on the ~/sky topic).</span>\n<span class=\"gi\">+    try</span>\n<span class=\"gi\">+    {</span>\n<span class=\"gi\">+      std::cout &lt;&lt; &quot;Scene::Init()::SetSky()&quot; &lt;&lt; std::endl;</span>\n<span class=\"gi\">+      this-&gt;SetSky();</span>\n<span class=\"gi\">+    }</span>\n<span class=\"gi\">+    catch(...)</span>\n<span class=\"gi\">+    {</span>\n<span class=\"gi\">+      gzerr &lt;&lt; &quot;Failed to create the sky\\n&quot;;</span>\n<span class=\"gi\">+    }</span>\n<span class=\"gi\">+</span>\n     boost::shared_ptr&lt;msgs::Sky&gt; sm(new msgs::Sky(_msg-&gt;sky()));\n     this-&gt;OnSkyMsg(sm);\n   }\n<span class=\"gi\">+  else</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    this-&gt;dataPtr-&gt;skyx-&gt;remove();</span>\n<span class=\"gi\">+    this-&gt;dataPtr-&gt;skyx = NULL;</span>\n<span class=\"gi\">+  }</span>\n\n   if (_msg-&gt;has_fog())\n   {\n</pre></div>\n\n\n<p>Giving a look into what's is different when moving the <code>setSky</code> call out of <code>Scene::Init</code>, the only relevant <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/7e3d1fae2c8d7a4a21f8db048430390fb7779e57/gazebo/rendering/Scene.cc?at=default#cl-332\" rel=\"nofollow\">command executed after the setSky</a> is the message publication of \"scene_info\". I tried to add the same into the previous patch, but it also did not show the sky on gzclient.</p>\n<p>If we go up in the call stack, the call to <code>Scene::Init</code> comes from RenderEngine. <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/7e3d1fae2c8d7a4a21f8db048430390fb7779e57/gazebo/rendering/RenderEngine.cc?at=default#cl-201\" rel=\"nofollow\">After that call there are two relevant comands</a>: <code>this-&gt;scenes.push_back(scene);</code> and <code>rendering::Events::createScene(_name);</code> which probably are the ones that do the trick.</p>", "type": "rendered"}, "created_on": "2015-06-02T18:38:40.709809+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 18542729}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18542989.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18542989"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "I'm guessing that the `else` block might be the problem. Maybe a publisher only wants to modify one aspect of the scene, so it just sets one field in the message. With this patch, wouldn't the sky be deleted whenever a scene message is received that doesn't have sky information?", "markup": "markdown", "html": "<p>I'm guessing that the <code>else</code> block might be the problem. Maybe a publisher only wants to modify one aspect of the scene, so it just sets one field in the message. With this patch, wouldn't the sky be deleted whenever a scene message is received that doesn't have sky information?</p>", "type": "rendered"}, "created_on": "2015-06-02T18:50:08.995336+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 18542989}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18546904.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18546904"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "That makes sense yes. In the very simple case, only one scene msg is being transferred. So the destruction it is never called. I did the test, and removing that part of the code, does not help, gzclient still have no sky.  ", "markup": "markdown", "html": "<p>That makes sense yes. In the very simple case, only one scene msg is being transferred. So the destruction it is never called. I did the test, and removing that part of the code, does not help, gzclient still have no sky.  </p>", "type": "rendered"}, "created_on": "2015-06-02T22:16:03.917394+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 18546904}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18547438.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18547438"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "ah! currently all the cameras assumed the sky will be present and [set themselves up to render the sky](#!/osrf/gazebo/src/fc7c7be2fed2c3d0c56b14361298e6f5511e7dfa/gazebo/rendering/Camera.cc?at=default#cl-1379). Now that we delayed the creation of sky, we should make sure we tell all cameras created earlier to start rendering the sky.\n\ntry these [changes](#!/osrf/gazebo/commits/54a9c112f0ee5154f254dad18d7cb0cbfad63392) in the `create_sky` branch", "markup": "markdown", "html": "<p>ah! currently all the cameras assumed the sky will be present and <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/fc7c7be2fed2c3d0c56b14361298e6f5511e7dfa/gazebo/rendering/Camera.cc?at=default#cl-1379\" rel=\"nofollow\">set themselves up to render the sky</a>. Now that we delayed the creation of sky, we should make sure we tell all cameras created earlier to start rendering the sky.</p>\n<p>try these <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/commits/54a9c112f0ee5154f254dad18d7cb0cbfad63392\" rel=\"nofollow\">changes</a> in the <code>create_sky</code> branch</p>", "type": "rendered"}, "created_on": "2015-06-02T22:59:02.096714+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 18547438}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18601774.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18601774"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "That make it works! Awesome, thanks Ian.\n\nHowever I've noticed a problem. Do:\n\n * Open gzserver worlds/empty_sky.world\n * Open gzclient\n * Add a camera in the gzclient\n * Close gzclient -> Segmentation fault\n * Open a new gzclient -> no render, black GUI.\n\nI can continue with the gdb if useful.", "markup": "markdown", "html": "<p>That make it works! Awesome, thanks Ian.</p>\n<p>However I've noticed a problem. Do:</p>\n<ul>\n<li>Open gzserver worlds/empty_sky.world</li>\n<li>Open gzclient</li>\n<li>Add a camera in the gzclient</li>\n<li>Close gzclient -&gt; Segmentation fault</li>\n<li>Open a new gzclient -&gt; no render, black GUI.</li>\n</ul>\n<p>I can continue with the gdb if useful.</p>", "type": "rendered"}, "created_on": "2015-06-04T23:22:36.375706+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2015-06-04T23:22:59.645037+00:00", "type": "issue_comment", "id": 18601774}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18674085.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18674085"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "oh good catch. I was able to fix the segfault but then I noticed that black screen doesn't always happen. After some debugging, I found that delaying the creation of skyx changed the start up timing which causes the `scene_info` request message not to be sent somehow (the server side sometimes just doesn't get the request msg). I didn't go into the transport layer to debug this.\n\nSo I changed the approach a little. I create the sky in `Init` and only start updating skyx when the scene has a sky -  see [changes here](#!/osrf/gazebo/branches/compare/create_sky%0Ddefault#diff). ", "markup": "markdown", "html": "<p>oh good catch. I was able to fix the segfault but then I noticed that black screen doesn't always happen. After some debugging, I found that delaying the creation of skyx changed the start up timing which causes the <code>scene_info</code> request message not to be sent somehow (the server side sometimes just doesn't get the request msg). I didn't go into the transport layer to debug this.</p>\n<p>So I changed the approach a little. I create the sky in <code>Init</code> and only start updating skyx when the scene has a sky -  see <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/create_sky%0Ddefault#diff\" rel=\"nofollow\">changes here</a>. </p>", "type": "rendered"}, "created_on": "2015-06-09T02:22:18.001887+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 18674085}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18736978.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18736978"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "Umm interesting, yes I've checked that not always the black screen appears.\n\nYour approach works for me! nice. valgrind reports some activity on skyx (higher than the other approach) but expected and not really big. I believe that we are ready to pull request. And open a new issue for the problem with the transport layer.\n\nThanks Ian! I will pay the beers.  ", "markup": "markdown", "html": "<p>Umm interesting, yes I've checked that not always the black screen appears.</p>\n<p>Your approach works for me! nice. valgrind reports some activity on skyx (higher than the other approach) but expected and not really big. I believe that we are ready to pull request. And open a new issue for the problem with the transport layer.</p>\n<p>Thanks Ian! I will pay the beers.  </p>", "type": "rendered"}, "created_on": "2015-06-10T23:48:35.390186+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 18736978}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/18765483.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-18765483"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "cool! pull request #1732", "markup": "markdown", "html": "<p>cool! <a href=\"#!/osrf/gazebo/pull-requests/1732/only-update-sky-if-theres-one-in-the-world\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1732</a></p>", "type": "rendered"}, "created_on": "2015-06-12T06:19:41.888613+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 18765483}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/19156064.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-19156064"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": "Resolved in pull request #1732", "markup": "markdown", "html": "<p>Resolved in <a href=\"#!/osrf/gazebo/pull-requests/1732/only-update-sky-if-theres-one-in-the-world\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1732</a></p>", "type": "rendered"}, "created_on": "2015-06-19T14:24:08.861975+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 19156064}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/30610994.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-30610994"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:23:58.693654+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30610994}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579/comments/30612221.json"}, "html": {"href": "#!/osrf/gazebo/issues/1579#comment-30612221"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1579.json"}}, "type": "issue", "id": 1579, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sky consumes significant portion of CPU, even when clouds disable."}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:44:08.718436+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30612221}], "page": 1, "size": 15}