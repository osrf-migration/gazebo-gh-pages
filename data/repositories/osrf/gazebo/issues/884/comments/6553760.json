{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/884/comments/6553760.json"}, "html": {"href": "#!/osrf/gazebo/issues/884#comment-6553760"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/884.json"}}, "type": "issue", "id": 884, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Issue876Test.Reset is broken"}, "content": {"raw": "I took a look at this last week. The following patch adds an additional test, and a potential fix to the broken test. I haven't had a chance to test fully.\n~~~\ndiff -r d5119d6bc229 gazebo/math/Rand_TEST.cc\n--- a/gazebo/math/Rand_TEST.cc  Thu Oct 17 10:56:38 2013 -0700\n+++ b/gazebo/math/Rand_TEST.cc  Fri Oct 18 00:48:04 2013 -0400\n@@ -47,3 +47,25 @@\n     EXPECT_TRUE(math::equal(d, 0.985827));\n   }\n }\n+\n+TEST(RandTest, SetSeed)\n+{\n+  int N = 10;\n+  std::vector<int> first;\n+  std::vector<int> second;\n+\n+  for (int i = 0; i < N; ++i)\n+  {\n+    math::Rand::SetSeed(i);\n+    first.push_back(math::Rand::GetIntUniform(-10, 10));\n+    second.push_back(math::Rand::GetIntUniform(-10, 10));\n+  }\n+\n+  for (int i = 0; i < N; ++i)\n+  {\n+    math::Rand::SetSeed(i);\n+    EXPECT_EQ(first[i], math::Rand::GetIntUniform(-10, 10));\n+    EXPECT_EQ(second[i], math::Rand::GetIntUniform(-10, 10));\n+    std::cout << first[i] << ' ' << second[i] << std::endl;\n+  }\n+}\ndiff -r d5119d6bc229 test/regression/876_random_number_generator.cc\n--- a/test/regression/876_random_number_generator.cc    Thu Oct 17 10:56:38 2013 -0700\n+++ b/test/regression/876_random_number_generator.cc    Fri Oct 18 00:48:04 2013 -0400\n@@ -33,6 +33,8 @@\n   physics::WorldPtr world = physics::get_world(\"default\");\n   ASSERT_TRUE(world);\n\n+  math::Rand::SetSeed(math::Rand::GetSeed());\n+\n   int sampleCount = 500;\n\n   std::vector<int> num;\n~~~", "markup": "markdown", "html": "<p>I took a look at this last week. The following patch adds an additional test, and a potential fix to the broken test. I haven't had a chance to test fully.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r d5119d6bc229 gazebo/math/Rand_TEST.cc</span>\n<span class=\"gd\">--- a/gazebo/math/Rand_TEST.cc  Thu Oct 17 10:56:38 2013 -0700</span>\n<span class=\"gi\">+++ b/gazebo/math/Rand_TEST.cc  Fri Oct 18 00:48:04 2013 -0400</span>\n<span class=\"gu\">@@ -47,3 +47,25 @@</span>\n     EXPECT_TRUE(math::equal(d, 0.985827));\n   }\n }\n<span class=\"gi\">+</span>\n<span class=\"gi\">+TEST(RandTest, SetSeed)</span>\n<span class=\"gi\">+{</span>\n<span class=\"gi\">+  int N = 10;</span>\n<span class=\"gi\">+  std::vector&lt;int&gt; first;</span>\n<span class=\"gi\">+  std::vector&lt;int&gt; second;</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  for (int i = 0; i &lt; N; ++i)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    math::Rand::SetSeed(i);</span>\n<span class=\"gi\">+    first.push_back(math::Rand::GetIntUniform(-10, 10));</span>\n<span class=\"gi\">+    second.push_back(math::Rand::GetIntUniform(-10, 10));</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  for (int i = 0; i &lt; N; ++i)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    math::Rand::SetSeed(i);</span>\n<span class=\"gi\">+    EXPECT_EQ(first[i], math::Rand::GetIntUniform(-10, 10));</span>\n<span class=\"gi\">+    EXPECT_EQ(second[i], math::Rand::GetIntUniform(-10, 10));</span>\n<span class=\"gi\">+    std::cout &lt;&lt; first[i] &lt;&lt; &#39; &#39; &lt;&lt; second[i] &lt;&lt; std::endl;</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+}</span>\n<span class=\"gh\">diff -r d5119d6bc229 test/regression/876_random_number_generator.cc</span>\n<span class=\"gd\">--- a/test/regression/876_random_number_generator.cc    Thu Oct 17 10:56:38 2013 -0700</span>\n<span class=\"gi\">+++ b/test/regression/876_random_number_generator.cc    Fri Oct 18 00:48:04 2013 -0400</span>\n<span class=\"gu\">@@ -33,6 +33,8 @@</span>\n   physics::WorldPtr world = physics::get_world(&quot;default&quot;);\n   ASSERT_TRUE(world);\n\n<span class=\"gi\">+  math::Rand::SetSeed(math::Rand::GetSeed());</span>\n<span class=\"gi\">+</span>\n   int sampleCount = 500;\n\n   std::vector&lt;int&gt; num;\n</pre></div>", "type": "rendered"}, "created_on": "2013-10-21T16:32:41.073298+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 6553760}