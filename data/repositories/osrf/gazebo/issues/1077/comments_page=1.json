{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/8900005.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-8900005"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "Let's write a test for this.\n\nCan you supply an example for how you create the joints dynamically?\n\nThen we can write an expectation that the dynamic joint is contained in a `Model::joints` vector.", "markup": "markdown", "html": "<p>Let's write a test for this.</p>\n<p>Can you supply an example for how you create the joints dynamically?</p>\n<p>Then we can write an expectation that the dynamic joint is contained in a <code>Model::joints</code> vector.</p>", "type": "rendered"}, "created_on": "2014-03-04T01:31:57.306494+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 8900005}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/8904737.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-8904737"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "Here is an example of creating dynamic joints from a plugin:\n```\n#!c++\nvoid CreateDynamicJoint(physics::LinkPtr _parent_link,\n                 physics::LinkPtr _child_link)\n{\n        physics::JointPtr joint;\n\t\n        joint = this->world->GetPhysicsEngine()->CreateJoint(\"revolute\", this->myModel);\n\n        joint->Load(_parent_link,_child_link, _parent_link->GetWorldPose());\n\n        joint->Attach(_parent_link, _child_link);\n\n        joint->SetModel(this->myModel);\n\n        joint->Init();\n\n        joint->SetHighStop(0, 0.1);\n        joint->SetLowStop(0, -0.1);\n        [...]\n}\n```\n\nNone of the used methods will update the V_Joint vector, only if the private [method](#!/osrf/gazebo/src/343a987165afa45e5c8e3877b0078f97a1b12e3e/gazebo/physics/Model.cc?at=default#cl-618) `Model::LoadJoint(sdf::ElementPtr _sdf)` is called, which takes as argument an SDF element. The later is called from the public [method](#!/osrf/gazebo/src/343a987165afa45e5c8e3877b0078f97a1b12e3e/gazebo/physics/Model.cc?at=default#cl-120)  `Model::LoadJoints()`\n\nI am not sure where would be the best place to add this, or to create another method?", "markup": "markdown", "html": "<p>Here is an example of creating dynamic joints from a plugin:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">CreateDynamicJoint</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">LinkPtr</span> <span class=\"n\">_parent_link</span><span class=\"p\">,</span>\n                 <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">LinkPtr</span> <span class=\"n\">_child_link</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n        <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">JointPtr</span> <span class=\"n\">joint</span><span class=\"p\">;</span>\n\n        <span class=\"n\">joint</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetPhysicsEngine</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">CreateJoint</span><span class=\"p\">(</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">myModel</span><span class=\"p\">);</span>\n\n        <span class=\"n\">joint</span><span class=\"o\">-&gt;</span><span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">_parent_link</span><span class=\"p\">,</span><span class=\"n\">_child_link</span><span class=\"p\">,</span> <span class=\"n\">_parent_link</span><span class=\"o\">-&gt;</span><span class=\"n\">GetWorldPose</span><span class=\"p\">());</span>\n\n        <span class=\"n\">joint</span><span class=\"o\">-&gt;</span><span class=\"n\">Attach</span><span class=\"p\">(</span><span class=\"n\">_parent_link</span><span class=\"p\">,</span> <span class=\"n\">_child_link</span><span class=\"p\">);</span>\n\n        <span class=\"n\">joint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetModel</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">myModel</span><span class=\"p\">);</span>\n\n        <span class=\"n\">joint</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">();</span>\n\n        <span class=\"n\">joint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetHighStop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">);</span>\n        <span class=\"n\">joint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetLowStop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.1</span><span class=\"p\">);</span>\n        <span class=\"p\">[...]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>None of the used methods will update the V_Joint vector, only if the private <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/343a987165afa45e5c8e3877b0078f97a1b12e3e/gazebo/physics/Model.cc?at=default#cl-618\" rel=\"nofollow\">method</a> <code>Model::LoadJoint(sdf::ElementPtr _sdf)</code> is called, which takes as argument an SDF element. The later is called from the public <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/343a987165afa45e5c8e3877b0078f97a1b12e3e/gazebo/physics/Model.cc?at=default#cl-120\" rel=\"nofollow\">method</a>  <code>Model::LoadJoints()</code></p>\n<p>I am not sure where would be the best place to add this, or to create another method?</p>", "type": "rendered"}, "created_on": "2014-03-04T09:35:10.818062+00:00", "user": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "updated_on": null, "type": "issue_comment", "id": 8904737}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/8915852.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-8915852"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "I added your code to a test in 63851ee4a73b (branch issue_1077). It currently fails because it expects the joint to be found in the `Model::joints` returned by GetJoints. Does this test encapsulate what you're looking for?", "markup": "markdown", "html": "<p>I added your code to a test in <a href=\"#!/osrf/gazebo/commits/63851ee4a73b\" rel=\"nofollow\" class=\"ap-connect-link\">63851ee4a73b</a> (branch issue_1077). It currently fails because it expects the joint to be found in the <code>Model::joints</code> returned by GetJoints. Does this test encapsulate what you're looking for?</p>", "type": "rendered"}, "created_on": "2014-03-04T19:14:45.059551+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 8915852}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/8923662.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-8923662"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "Yes, it should do the job, if the test passes it means the joint is in the `Model::joints` vector. However in order for it to be visualized the model needs to be reinitialized using `Model::Init\" since the visualization msg is created [there](#!/osrf/gazebo/src/561570930e673166472c9d94764f36eac1e9664c/gazebo/physics/Model.cc?at=default#cl-152) .\n\n.", "markup": "markdown", "html": "<p>Yes, it should do the job, if the test passes it means the joint is in the <code>Model::joints</code> vector. However in order for it to be visualized the model needs to be reinitialized using `Model::Init\" since the visualization msg is created <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/561570930e673166472c9d94764f36eac1e9664c/gazebo/physics/Model.cc?at=default#cl-152\" rel=\"nofollow\">there</a> .</p>\n<p>.</p>", "type": "rendered"}, "created_on": "2014-03-05T08:15:08.514343+00:00", "user": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "updated_on": null, "type": "issue_comment", "id": 8923662}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/8934990.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-8934990"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "Ok, so perhaps the test should also subscribe to the `~/joint` topic and look for a message containing the information about the new joint.", "markup": "markdown", "html": "<p>Ok, so perhaps the test should also subscribe to the <code>~/joint</code> topic and look for a message containing the information about the new joint.</p>", "type": "rendered"}, "created_on": "2014-03-05T17:32:27.531903+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 8934990}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/8948016.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-8948016"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "Yes, it should publish it there", "markup": "markdown", "html": "<p>Yes, it should publish it there</p>", "type": "rendered"}, "created_on": "2014-03-06T10:18:47.804647+00:00", "user": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "updated_on": null, "type": "issue_comment", "id": 8948016}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/10915398.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-10915398"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "I've merged the [issue_1077 branch](#!/osrf/gazebo/branches/compare/issue_1077..gazebo_3.1#diff) with gazebo_3.1. We still need to add a `~/joint` subscriber to the test.", "markup": "markdown", "html": "<p>I've merged the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/issue_1077..gazebo_3.1#diff\" rel=\"nofollow\">issue_1077 branch</a> with gazebo_3.1. We still need to add a <code>~/joint</code> subscriber to the test.</p>", "type": "rendered"}, "created_on": "2014-06-25T16:38:29.556473+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 10915398}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/14936276.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-14936276"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "Have we got any news on this? Any plans to get this fixed for the next Gazebo Release V5.0 ?", "markup": "markdown", "html": "<p>Have we got any news on this? Any plans to get this fixed for the next Gazebo Release V5.0 ?</p>", "type": "rendered"}, "created_on": "2015-01-19T13:05:33.999895+00:00", "user": {"display_name": "Thiago Motta", "uuid": "{8251dc19-9296-481f-a52b-5c0f19f21264}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8251dc19-9296-481f-a52b-5c0f19f21264%7D"}, "html": {"href": "https://bitbucket.org/%7B8251dc19-9296-481f-a52b-5c0f19f21264%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4eaec0ef96adb8c157b56714a6965d19d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTM-3.png"}}, "nickname": "Thiago Motta", "type": "user", "account_id": "557058:eb7323d3-11cb-4068-a436-6503d9565300"}, "updated_on": null, "type": "issue_comment", "id": 14936276}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/16266083.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-16266083"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "I just merged the branch with gazebo_4.1.", "markup": "markdown", "html": "<p>I just merged the branch with gazebo_4.1.</p>", "type": "rendered"}, "created_on": "2015-03-12T18:07:39.890674+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 16266083}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/16266641.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-16266641"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "I just created a new branch off of gazebo5 that uses `Model::LoadJoint(sdf::ElementPtr)` and `msgs::JointToSDF` to dynamically create the joint. I think it should now be in the `Model::GetJoints` vector, but I don't think it will be published on `~/joint`. That will take a little more work.", "markup": "markdown", "html": "<p>I just created a new branch off of gazebo5 that uses <code>Model::LoadJoint(sdf::ElementPtr)</code> and <code>msgs::JointToSDF</code> to dynamically create the joint. I think it should now be in the <code>Model::GetJoints</code> vector, but I don't think it will be published on <code>~/joint</code>. That will take a little more work.</p>", "type": "rendered"}, "created_on": "2015-03-12T18:37:22.070287+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 16266641}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/17568642.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-17568642"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "@iche033 ", "markup": "markdown", "html": "<p>@iche033 </p>", "type": "rendered"}, "created_on": "2015-04-21T18:43:51.635042+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17568642}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/40276008.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-40276008"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "Has a resolution been reached for this issue? If not, is there a suggested workaround?", "markup": "markdown", "html": "<p>Has a resolution been reached for this issue? If not, is there a suggested workaround?</p>", "type": "rendered"}, "created_on": "2017-10-03T22:32:04.472349+00:00", "user": {"display_name": "Ryan Keating", "uuid": "{9d9e8481-43f9-4fb9-8f98-ace264410759}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d9e8481-43f9-4fb9-8f98-ace264410759%7D"}, "html": {"href": "https://bitbucket.org/%7B9d9e8481-43f9-4fb9-8f98-ace264410759%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/519db3404662b21c188672c9af6fa581d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRK-3.png"}}, "nickname": "rkeatin3", "type": "user", "account_id": "557058:453acd8a-98ca-425c-a6ee-32a48ea23b92"}, "updated_on": null, "type": "issue_comment", "id": 40276008}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077/comments/40276411.json"}, "html": {"href": "#!/osrf/gazebo/issues/1077#comment-40276411"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1077.json"}}, "type": "issue", "id": 1077, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visualizing dynamically created joints"}, "content": {"raw": "We made some progress in pull request #1938 and pull request #2431 in making sure that there the API's for dynamically loaded joints will insert the joint pointer into the `Model`'s `joints` vector, so that `GetJoint` can be used properly.\n\nWe still need to publish information about dynamically created joints to gzclient so that they can be rendered. I believe this is currently only published in [Model::Init](#!/osrf/gazebo/src/3ac47b35d6462dea6569b022fe20e6f219ef3794/gazebo/physics/Model.cc?at=default&fileviewer=file-view-default#Model.cc-285:290), so we would have to find a different place to publish that.", "markup": "markdown", "html": "<p>We made some progress in <a href=\"#!/osrf/gazebo/pull-requests/1938/adding-model-createjoint-method-that\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1938</a> and <a href=\"#!/osrf/gazebo/pull-requests/2431/add-test-for-harnessplugin-reduce\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2431</a> in making sure that there the API's for dynamically loaded joints will insert the joint pointer into the <code>Model</code>'s <code>joints</code> vector, so that <code>GetJoint</code> can be used properly.</p>\n<p>We still need to publish information about dynamically created joints to gzclient so that they can be rendered. I believe this is currently only published in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/3ac47b35d6462dea6569b022fe20e6f219ef3794/gazebo/physics/Model.cc?at=default&amp;fileviewer=file-view-default#Model.cc-285:290\" rel=\"nofollow\">Model::Init</a>, so we would have to find a different place to publish that.</p>", "type": "rendered"}, "created_on": "2017-10-03T23:17:27.842154+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 40276411}], "page": 1, "size": 13}