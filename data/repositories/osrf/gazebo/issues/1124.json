{"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1124/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1124.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1124/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1124/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1124/collision-worldpose-does-not-get-updated"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1124/vote"}}, "reporter": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "title": "Collision WorldPose does not get updated.", "component": null, "votes": 2, "watches": 5, "content": {"raw": "During simulation Collision::GetWolrdPose does not get updated.\r\n\r\nHere is a testing piece of code:\r\n\r\n\r\n```\r\n#!c++\r\n\t\tphysics::Link_V _links = this->world->GetModel(\"box\")->GetLinks();\r\n\r\n\t\tfor (unsigned int i = 0; i < _links.size(); i++)\r\n\t\t{\r\n\t\t\tstd::cout << \"link name: \" << _links.at(i)->GetName() << \" pose: \" << _links.at(i)->GetWorldPose().pos << std::endl;\r\n\r\n\t\t\tphysics::Collision_V _colls = _links.at(i)->GetCollisions();\r\n\r\n\t\t\tfor (unsigned int i = 0; i < _colls.size(); i++)\r\n\t\t\t{\r\n\t\t\t\tstd::cout << \"coll name: \" << _colls.at(i)->GetName() << \" pose: \" << _colls.at(i)->GetWorldPose().pos << std::endl;\r\n\t\t\t}\r\n\t\t}\r\n```\r\n\r\nDuring the simulation while the object is moving the link poses change, and the collisions maintain their original position.\r\n\r\nTesting works with a simple box model.\r\n\r\n", "markup": "markdown", "html": "<p>During simulation Collision::GetWolrdPose does not get updated.</p>\n<p>Here is a testing piece of code:</p>\n<div class=\"codehilite language-c++\"><pre><span></span>        <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Link_V</span> <span class=\"n\">_links</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;box&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLinks</span><span class=\"p\">();</span>\n\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">_links</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;link name: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_links</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; pose: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_links</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetWorldPose</span><span class=\"p\">().</span><span class=\"n\">pos</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n\n            <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Collision_V</span> <span class=\"n\">_colls</span> <span class=\"o\">=</span> <span class=\"n\">_links</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetCollisions</span><span class=\"p\">();</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">_colls</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;coll name: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_colls</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; pose: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_colls</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetWorldPose</span><span class=\"p\">().</span><span class=\"n\">pos</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>During the simulation while the object is moving the link poses change, and the collisions maintain their original position.</p>\n<p>Testing works with a simple box model.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2014-03-22T14:11:00.245909+00:00", "milestone": null, "updated_on": "2016-09-14T19:39:32.501885+00:00", "type": "issue", "id": 1124}