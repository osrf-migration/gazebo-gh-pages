{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1575/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1575.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1575/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1575/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1575/it-isnt-possible-to-filter-mouse-events-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1575/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "It isn't possible to filter mouse events in system plugins", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Related question:\r\nhttp://answers.gazebosim.org/question/8500/how-to-return-the-controlling-to-default-event/\r\n\r\nI wrote a simple system plugin to filter mouse events and confirmed what is described in the question above: the filter doesn't work if you give it a name other than `glwidget` and it works if you call it `glwidget` but then `GLWidget`'s filter doesn't work.\r\n\r\n~~~\r\n#include <gazebo/gui/MouseEventHandler.hh>\r\n#include <gazebo/gazebo.hh>\r\n\r\nnamespace gazebo\r\n{\r\n  class ExampleMousePlugin : public SystemPlugin\r\n  {\r\n    public: void Load(int /*_argc*/, char ** /*_argv*/)\r\n    {\r\n      gazebo::gui::MouseEventHandler::Instance()->AddReleaseFilter(\r\n          \"glwidget_or_not\",\r\n          boost::bind(&ExampleMousePlugin::OnMouseRelease, this, _1));\r\n    }\r\n\r\n    private: bool OnMouseRelease(const common::MouseEvent &_event)\r\n    {\r\n      std::cout << \"release\" << std::endl;\r\n    }\r\n  };\r\n  GZ_REGISTER_SYSTEM_PLUGIN(ExampleMousePlugin)\r\n}\r\n~~~\r\n\r\nI checked that the filter works as expected for GUI plugins though.\r\n\r\nI guess the issue is related to the order in which the system plugin is loaded with respect to `GLWidget`. Its filter might be added before, so if:\r\n\r\n* `name != \"glwidget\"`: `GLWidget` handles the event and it never reaches the plugin\r\n\r\n* `name == \"glwidget\"`: Once `GLWidget`'s event is loaded, the name already exists so it is just ignored...?", "markup": "markdown", "html": "<p>Related question:\n<a href=\"http://answers.gazebosim.org/question/8500/how-to-return-the-controlling-to-default-event/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/question/8500/how-to-return-the-controlling-to-default-event/</a></p>\n<p>I wrote a simple system plugin to filter mouse events and confirmed what is described in the question above: the filter doesn't work if you give it a name other than <code>glwidget</code> and it works if you call it <code>glwidget</code> but then <code>GLWidget</code>'s filter doesn't work.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gazebo/gui/MouseEventHandler.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gazebo/gazebo.hh&gt;</span><span class=\"cp\"></span>\n\n<span class=\"n\">namespace</span> <span class=\"n\">gazebo</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">class</span> <span class=\"nl\">ExampleMousePlugin</span> <span class=\"p\">:</span> <span class=\"n\">public</span> <span class=\"n\">SystemPlugin</span>\n  <span class=\"p\">{</span>\n    <span class=\"nl\">public</span><span class=\"p\">:</span> <span class=\"kt\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"cm\">/*_argc*/</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">**</span> <span class=\"cm\">/*_argv*/</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">gui</span><span class=\"o\">::</span><span class=\"n\">MouseEventHandler</span><span class=\"o\">::</span><span class=\"n\">Instance</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">AddReleaseFilter</span><span class=\"p\">(</span>\n          <span class=\"s\">&quot;glwidget_or_not&quot;</span><span class=\"p\">,</span>\n          <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">ExampleMousePlugin</span><span class=\"o\">::</span><span class=\"n\">OnMouseRelease</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">_1</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nl\">private</span><span class=\"p\">:</span> <span class=\"kt\">bool</span> <span class=\"n\">OnMouseRelease</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">MouseEvent</span> <span class=\"o\">&amp;</span><span class=\"n\">_event</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;release&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">};</span>\n  <span class=\"n\">GZ_REGISTER_SYSTEM_PLUGIN</span><span class=\"p\">(</span><span class=\"n\">ExampleMousePlugin</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>I checked that the filter works as expected for GUI plugins though.</p>\n<p>I guess the issue is related to the order in which the system plugin is loaded with respect to <code>GLWidget</code>. Its filter might be added before, so if:</p>\n<ul>\n<li>\n<p><code>name != \"glwidget\"</code>: <code>GLWidget</code> handles the event and it never reaches the plugin</p>\n</li>\n<li>\n<p><code>name == \"glwidget\"</code>: Once <code>GLWidget</code>'s event is loaded, the name already exists so it is just ignored...?</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-04-24T03:14:09.617896+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:58.833740+00:00", "type": "issue", "id": 1575}