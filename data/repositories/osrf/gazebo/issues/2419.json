{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2419/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2419.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2419/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2419/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2419/easier-include-of-qt5"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2419/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "Easier include of QT5", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "According to https://blog.kitware.com/cmake-finding-qt5-the-right-way/ there is possibility to change the existing find_packages:\r\n\r\n```\r\n#!cmake\r\n\r\nfind_package (Qt5Widgets)\r\nif (NOT Qt5Widgets_FOUND)\r\n  BUILD_ERROR(\"Missing: Qt5Widgets\")\r\nendif()\r\n\r\nfind_package (Qt5Core)\r\nif (NOT Qt5Core_FOUND)\r\n  BUILD_ERROR(\"Missing: Qt5Core\")\r\nendif()\r\n\r\nfind_package (Qt5OpenGL)\r\nif (NOT Qt5OpenGL_FOUND)\r\n  BUILD_ERROR(\"Missing: Qt5OpenGL\")\r\nendif()\r\n\r\nfind_package (Qt5Test)\r\nif (NOT Qt5Test_FOUND)\r\n  BUILD_ERROR(\"Missing: Qt5Test\")\r\nendif()\r\n```\r\n\r\nwith just \r\n\r\n    find_package(Qt5 COMPONENTS Core Widgets OpenGL Test REQUIRED)\r\n\r\nNot only does this code seem to be shorter and easier to read, but it would also make it easier to try building Gazebo with different Qt versions\r\n\r\n> This is not only more compact, which is always nice, but it means that you can simply pass in \u2018Qt5_DIR\u2019 to your project, and it will use that when searching for the components.\r\n\r\nDo you think it'd be worth trying this change? Or is there some reason why is the search done in this more verbose way?\r\n\r\n*Rationale/why I'm proposing this: I'm running a source install of Gazebo 8 on Trusty, which is not exactly supported, but possible. With #!/osrf/gazebo/pull-requests/2812/image-viewer-fix-qimage-format-used-to the required Qt5 version jumped from 5.2 (which is in ubuntu PPAs) to 5.5 (which is not in any nice PPA for Trusty). So I installed Qt5 using the Qt installer and started to search how do I convince CMake to pick up my custom Qt install. Finally, I've found out it's easy enough by setting `CMAKE_PREFIX_PATH `, but anyways this could simplify FindStuff so it still might be worth implementing.*", "markup": "markdown", "html": "<p>According to <a href=\"https://blog.kitware.com/cmake-finding-qt5-the-right-way/\" rel=\"nofollow\" class=\"ap-connect-link\">https://blog.kitware.com/cmake-finding-qt5-the-right-way/</a> there is possibility to change the existing find_packages:</p>\n<div class=\"codehilite language-cmake\"><pre><span></span><span class=\"nb\">find_package</span> <span class=\"p\">(</span><span class=\"s\">Qt5Widgets</span><span class=\"p\">)</span>\n<span class=\"nb\">if</span> <span class=\"p\">(</span><span class=\"s\">NOT</span> <span class=\"s\">Qt5Widgets_FOUND</span><span class=\"p\">)</span>\n  <span class=\"nb\">BUILD_ERROR</span><span class=\"p\">(</span><span class=\"s2\">&quot;Missing: Qt5Widgets&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">endif</span><span class=\"p\">()</span>\n\n<span class=\"nb\">find_package</span> <span class=\"p\">(</span><span class=\"s\">Qt5Core</span><span class=\"p\">)</span>\n<span class=\"nb\">if</span> <span class=\"p\">(</span><span class=\"s\">NOT</span> <span class=\"s\">Qt5Core_FOUND</span><span class=\"p\">)</span>\n  <span class=\"nb\">BUILD_ERROR</span><span class=\"p\">(</span><span class=\"s2\">&quot;Missing: Qt5Core&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">endif</span><span class=\"p\">()</span>\n\n<span class=\"nb\">find_package</span> <span class=\"p\">(</span><span class=\"s\">Qt5OpenGL</span><span class=\"p\">)</span>\n<span class=\"nb\">if</span> <span class=\"p\">(</span><span class=\"s\">NOT</span> <span class=\"s\">Qt5OpenGL_FOUND</span><span class=\"p\">)</span>\n  <span class=\"nb\">BUILD_ERROR</span><span class=\"p\">(</span><span class=\"s2\">&quot;Missing: Qt5OpenGL&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">endif</span><span class=\"p\">()</span>\n\n<span class=\"nb\">find_package</span> <span class=\"p\">(</span><span class=\"s\">Qt5Test</span><span class=\"p\">)</span>\n<span class=\"nb\">if</span> <span class=\"p\">(</span><span class=\"s\">NOT</span> <span class=\"s\">Qt5Test_FOUND</span><span class=\"p\">)</span>\n  <span class=\"nb\">BUILD_ERROR</span><span class=\"p\">(</span><span class=\"s2\">&quot;Missing: Qt5Test&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">endif</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>with just </p>\n<div class=\"codehilite\"><pre><span></span>find_package(Qt5 COMPONENTS Core Widgets OpenGL Test REQUIRED)\n</pre></div>\n\n\n<p>Not only does this code seem to be shorter and easier to read, but it would also make it easier to try building Gazebo with different Qt versions</p>\n<blockquote>\n<p>This is not only more compact, which is always nice, but it means that you can simply pass in \u2018Qt5_DIR\u2019 to your project, and it will use that when searching for the components.</p>\n</blockquote>\n<p>Do you think it'd be worth trying this change? Or is there some reason why is the search done in this more verbose way?</p>\n<p><em>Rationale/why I'm proposing this: I'm running a source install of Gazebo 8 on Trusty, which is not exactly supported, but possible. With <a href=\"#!/osrf/gazebo/pull-requests/2812/image-viewer-fix-qimage-format-used-to\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2812/image-viewer-fix-qimage-format-used-to</a> the required Qt5 version jumped from 5.2 (which is in ubuntu PPAs) to 5.5 (which is not in any nice PPA for Trusty). So I installed Qt5 using the Qt installer and started to search how do I convince CMake to pick up my custom Qt install. Finally, I've found out it's easy enough by setting <code>CMAKE_PREFIX_PATH</code>, but anyways this could simplify FindStuff so it still might be worth implementing.</em></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "8.1", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/243455.json"}}}, "edited_on": null, "created_on": "2018-02-05T23:53:40.081936+00:00", "milestone": null, "updated_on": "2018-03-07T23:29:18.290365+00:00", "type": "issue", "id": 2419}