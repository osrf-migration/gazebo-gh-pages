{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1667/comments/20317022.json"}, "html": {"href": "#!/osrf/gazebo/issues/1667#comment-20317022"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1667.json"}}, "type": "issue", "id": 1667, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Should AltimeterSensor output depend on the gravity vector?"}, "content": {"raw": "I think that this is related to the question that asks whether we should be modelling a barometric altimeter as a fluid pressure sensor or as a simpler position sensor. I guess that this is a design choice that trades fidelity for simplicity. I initially designed the altimeter with simplicity in mind, but your question has made me rethink this. \n\nUltimately, barometric altitude is calculated by measuring the relative pressure change with respect to a reference point. To properly replicate this Gazebo should support a fluid pressure sensor (defined in ROS sensor_msgs package), with the altitude estimation being implemented in a navigation package, not the simulator. By default we could implement a very [simple](http://www.engineeringtoolbox.com/air-altitude-pressure-d_462.html) (Gazebo Z) -> (pressure) model. Then, a more complex gravity-based model, as suggested by @scpeters, can be introduced as a sensor plugin if required. I realise that this is a bit more work, but it may make more sense in the long run.\n\nOn a related note, I still think that it would be beneficial to include some sort of noise-perturbed Pose/Twist sensor in Gazebo. Typical use cases would involve simulating the feedback from a Vicon motion capture system, or some sort of wireless localization system. ", "markup": "markdown", "html": "<p>I think that this is related to the question that asks whether we should be modelling a barometric altimeter as a fluid pressure sensor or as a simpler position sensor. I guess that this is a design choice that trades fidelity for simplicity. I initially designed the altimeter with simplicity in mind, but your question has made me rethink this. </p>\n<p>Ultimately, barometric altitude is calculated by measuring the relative pressure change with respect to a reference point. To properly replicate this Gazebo should support a fluid pressure sensor (defined in ROS sensor_msgs package), with the altitude estimation being implemented in a navigation package, not the simulator. By default we could implement a very <a data-is-external-link=\"true\" href=\"http://www.engineeringtoolbox.com/air-altitude-pressure-d_462.html\" rel=\"nofollow\">simple</a> (Gazebo Z) -&gt; (pressure) model. Then, a more complex gravity-based model, as suggested by @scpeters, can be introduced as a sensor plugin if required. I realise that this is a bit more work, but it may make more sense in the long run.</p>\n<p>On a related note, I still think that it would be beneficial to include some sort of noise-perturbed Pose/Twist sensor in Gazebo. Typical use cases would involve simulating the feedback from a Vicon motion capture system, or some sort of wireless localization system. </p>", "type": "rendered"}, "created_on": "2015-07-19T19:41:53.416987+00:00", "user": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "updated_on": null, "type": "issue_comment", "id": 20317022}