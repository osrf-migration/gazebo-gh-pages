{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1022/comments/17660261.json"}, "html": {"href": "#!/osrf/gazebo/issues/1022#comment-17660261"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1022.json"}}, "type": "issue", "id": 1022, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "protobuf ParseFromString function return value not checked"}, "content": {"raw": "I created a `msgs::ParseFromString` function in branch `issue_1022` that checks the return codes from `ParseFromString`. There's also a testing branch called `issue_1022_throw` that will `gzthrow` whenever ParseFromString fails.", "markup": "markdown", "html": "<p>I created a <code>msgs::ParseFromString</code> function in branch <code>issue_1022</code> that checks the return codes from <code>ParseFromString</code>. There's also a testing branch called <code>issue_1022_throw</code> that will <code>gzthrow</code> whenever ParseFromString fails.</p>", "type": "rendered"}, "created_on": "2015-04-24T17:44:58.438794+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17660261}