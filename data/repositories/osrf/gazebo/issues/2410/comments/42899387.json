{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2410/comments/42899387.json"}, "html": {"href": "#!/osrf/gazebo/issues/2410#comment-42899387"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2410.json"}}, "type": "issue", "id": 2410, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Wrong gazebo::physics::Model::WorldPose() for nested models"}, "content": {"raw": "Hi @scpeters thank you for taking time to try the code that I have attached.\n\nI  tried to read the code of the class `gazebo::physics::Entity` and I have some doubts regarding the way in which the pose of a nested model is updated.\n\nIn the method `gazebo::physics::Entity::Load` the initial world pose of the nested model is assigned like this\n```C++\nvoid Entity::Load(sdf::ElementPtr _sdf)\n{\n...\n    if (this->parent && this->parentEntity)\n    {\n      this->worldPose = this->sdf->Get<ignition::math::Pose3d>(\"pose\") +\n                        this->parentEntity->worldPose;\n    }\n...\n}\n```\ni.e. it is equal to the initial pose of the parent model + the static transform between the parent model and the nested model. Using symbols \n```\nnested_pose_0 = parent_pose_0 + sdf_pose\n```\n\nSuppose now that the nested model moves __relative__ to the parent model but the parent model does not move. Then when the physics engine updates the world pose of the parent model the method `gazebo::physics::Entity::SetWorldPoseModel` is called and the world pose of the nested model is updated within the `for` cycle in the `else if (entity->HasType(MODEL))` branch as\n```C++\nvoid Entity::SetWorldPoseModel(\n    const ignition::math::Pose3d &_pose,\n    const bool _notify, const bool _publish)\n{\n  ignition::math::Pose3d oldModelWorldPose = this->worldPose;\n\n  // initialization: (no children?) set own worldPose\n  this->worldPose = _pose;\n  this->worldPose.Correct();\n\n  ...\n  \n  // force an update of all children\n  // update all children pose, moving them with the model.\n  // The outer loop updates all the links.\n  for (Base_V::iterator iter = this->children.begin();\n      iter != this->children.end(); ++iter)\n  {\n    if ((*iter)->HasType(ENTITY))\n    {\n      EntityPtr entity = boost::static_pointer_cast<Entity>(*iter);\n\n      if (entity->HasType(LINK))\n      {\n        ...\n      }\n      else if (entity->HasType(MODEL))\n      {\n        // set pose of nested models\n        entity->SetWorldPoseModel(\n            (entity->worldPose - oldModelWorldPose) + _pose, _notify, _publish);\n      }\n      else\n      {\n        ...\n      }\n    }\n  }\n}\n```\nhence the world pose of a nested model is updated like\n```\nnested_pose_1 = (nested_pose_0 - parent_pose_0) + parent_pose_1\n              =  (parent_pose_0 + sdf_pose - parent_pose_0) + parent_pose_1\n              = sdf_pose + parent_pose_1\n              = (since the parent model does not move) sdf_pose + parent_pose_0\n              = nested_pose_0\n```\ni.e. relative motions between the nested and parent model is not considered at all.\n\nIs the reasoning right or am I missing something?", "markup": "markdown", "html": "<p>Hi @scpeters thank you for taking time to try the code that I have attached.</p>\n<p>I  tried to read the code of the class <code>gazebo::physics::Entity</code> and I have some doubts regarding the way in which the pose of a nested model is updated.</p>\n<p>In the method <code>gazebo::physics::Entity::Load</code> the initial world pose of the nested model is assigned like this</p>\n<div class=\"codehilite language-C++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">Entity</span><span class=\"o\">::</span><span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">_sdf</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"p\">...</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">parent</span> <span class=\"o\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">parentEntity</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">worldPose</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose3d</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;pose&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n                        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">parentEntity</span><span class=\"o\">-&gt;</span><span class=\"n\">worldPose</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">...</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>i.e. it is equal to the initial pose of the parent model + the static transform between the parent model and the nested model. Using symbols </p>\n<div class=\"codehilite\"><pre><span></span>nested_pose_0 = parent_pose_0 + sdf_pose\n</pre></div>\n\n\n<p>Suppose now that the nested model moves <strong>relative</strong> to the parent model but the parent model does not move. Then when the physics engine updates the world pose of the parent model the method <code>gazebo::physics::Entity::SetWorldPoseModel</code> is called and the world pose of the nested model is updated within the <code>for</code> cycle in the <code>else if (entity-&gt;HasType(MODEL))</code> branch as</p>\n<div class=\"codehilite language-C++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">Entity</span><span class=\"o\">::</span><span class=\"n\">SetWorldPoseModel</span><span class=\"p\">(</span>\n    <span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose3d</span> <span class=\"o\">&amp;</span><span class=\"n\">_pose</span><span class=\"p\">,</span>\n    <span class=\"k\">const</span> <span class=\"kt\">bool</span> <span class=\"n\">_notify</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">bool</span> <span class=\"n\">_publish</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose3d</span> <span class=\"n\">oldModelWorldPose</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">worldPose</span><span class=\"p\">;</span>\n\n  <span class=\"c1\">// initialization: (no children?) set own worldPose</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">worldPose</span> <span class=\"o\">=</span> <span class=\"n\">_pose</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">worldPose</span><span class=\"p\">.</span><span class=\"n\">Correct</span><span class=\"p\">();</span>\n\n  <span class=\"p\">...</span>\n\n  <span class=\"c1\">// force an update of all children</span>\n  <span class=\"c1\">// update all children pose, moving them with the model.</span>\n  <span class=\"c1\">// The outer loop updates all the links.</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">Base_V</span><span class=\"o\">::</span><span class=\"n\">iterator</span> <span class=\"n\">iter</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">children</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">();</span>\n      <span class=\"n\">iter</span> <span class=\"o\">!=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">children</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">iter</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"o\">*</span><span class=\"n\">iter</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">ENTITY</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">EntityPtr</span> <span class=\"n\">entity</span> <span class=\"o\">=</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">static_pointer_cast</span><span class=\"o\">&lt;</span><span class=\"n\">Entity</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">iter</span><span class=\"p\">);</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">LINK</span><span class=\"p\">))</span>\n      <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">MODEL</span><span class=\"p\">))</span>\n      <span class=\"p\">{</span>\n        <span class=\"c1\">// set pose of nested models</span>\n        <span class=\"n\">entity</span><span class=\"o\">-&gt;</span><span class=\"n\">SetWorldPoseModel</span><span class=\"p\">(</span>\n            <span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"o\">-&gt;</span><span class=\"n\">worldPose</span> <span class=\"o\">-</span> <span class=\"n\">oldModelWorldPose</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">_pose</span><span class=\"p\">,</span> <span class=\"n\">_notify</span><span class=\"p\">,</span> <span class=\"n\">_publish</span><span class=\"p\">);</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">else</span>\n      <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>hence the world pose of a nested model is updated like</p>\n<div class=\"codehilite\"><pre><span></span>nested_pose_1 = (nested_pose_0 - parent_pose_0) + parent_pose_1\n              =  (parent_pose_0 + sdf_pose - parent_pose_0) + parent_pose_1\n              = sdf_pose + parent_pose_1\n              = (since the parent model does not move) sdf_pose + parent_pose_0\n              = nested_pose_0\n</pre></div>\n\n\n<p>i.e. relative motions between the nested and parent model is not considered at all.</p>\n<p>Is the reasoning right or am I missing something?</p>", "type": "rendered"}, "created_on": "2018-01-27T16:53:38.882777+00:00", "user": {"display_name": "Nicola Piga", "uuid": "{1a21b47b-2618-4f87-b1fb-91cef424b7f1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1a21b47b-2618-4f87-b1fb-91cef424b7f1%7D"}, "html": {"href": "https://bitbucket.org/%7B1a21b47b-2618-4f87-b1fb-91cef424b7f1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/66110c6026590e7303826963fe991186d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNP-2.png"}}, "nickname": "xenvre", "type": "user", "account_id": "5a69e1cc98af772d16adbcb9"}, "updated_on": "2018-01-27T16:57:46.113426+00:00", "type": "issue_comment", "id": 42899387}