{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/739/comments/4829352.json"}, "html": {"href": "#!/osrf/gazebo/issues/739#comment-4829352"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/739.json"}}, "type": "issue", "id": 739, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo/physics/JointController.cc:409 broken with gcc 4.8.1"}, "content": {"raw": "Ok, sorry for all these comments. Just means that I'm investigating this.\n\nThis problem arises with using the c++11 standard, because they removed the implicit conversion boost::shared_ptr -> bool and replaced it by an explicit conversion ([see e.g. here](http://stackoverflow.com/questions/7580009/gcc-error-cannot-convert-const-shared-ptr-to-bool-in-return)). Now you could say, don't use that standard.\n\nTwo things about this:\n\n1. The use of `_link` in the line I referenced makes no sense because it should always evaluate to true in the context (`_link` is dereferenced without NULL-check earlier in the function). I would propose to replace it by `_checkParentTree` or `true` as proposed earlier. - This would be enough to close the issue.\n\n2. I had to set that standard to get something else in gazebo to compile.\nI'll add a proper pull request for that once I got gazebo to actually compile completely.", "markup": "markdown", "html": "<p>Ok, sorry for all these comments. Just means that I'm investigating this.</p>\n<p>This problem arises with using the c++11 standard, because they removed the implicit conversion boost::shared_ptr -&gt; bool and replaced it by an explicit conversion (<a data-is-external-link=\"true\" href=\"http://stackoverflow.com/questions/7580009/gcc-error-cannot-convert-const-shared-ptr-to-bool-in-return\" rel=\"nofollow\">see e.g. here</a>). Now you could say, don't use that standard.</p>\n<p>Two things about this:</p>\n<ol>\n<li>\n<p>The use of <code>_link</code> in the line I referenced makes no sense because it should always evaluate to true in the context (<code>_link</code> is dereferenced without NULL-check earlier in the function). I would propose to replace it by <code>_checkParentTree</code> or <code>true</code> as proposed earlier. - This would be enough to close the issue.</p>\n</li>\n<li>\n<p>I had to set that standard to get something else in gazebo to compile.\nI'll add a proper pull request for that once I got gazebo to actually compile completely.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2013-06-15T13:07:26.062681+00:00", "user": {"display_name": "v4hn", "uuid": "{cf340946-e922-463b-af6c-734b0531410b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcf340946-e922-463b-af6c-734b0531410b%7D"}, "html": {"href": "https://bitbucket.org/%7Bcf340946-e922-463b-af6c-734b0531410b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a806f965a17c678e75cecaafa10782bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsV-0.png"}}, "nickname": "v4hn", "type": "user", "account_id": "5bfd1f0f821157160babdbbc"}, "updated_on": null, "type": "issue_comment", "id": 4829352}