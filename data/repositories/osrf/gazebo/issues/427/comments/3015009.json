{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/427/comments/3015009.json"}, "html": {"href": "#!/osrf/gazebo/issues/427#comment-3015009"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/427.json"}}, "type": "issue", "id": 427, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "SDF geometry enhancements"}, "content": {"raw": "(Per this morning's discussion.) Another approach to this problem would be to think of geometry as the high level concept, with optional properties: pose/shape/inertial/contact/visual. The list of properties might grow over time -- for example, magnetic, wind resistance, infrared reflectance or whatever.\n\n```\n#!xml\n\n<link name=\"xxx\">\n<geometry>\n    <pose>...</pose>\n    <sphere><radius>1</radius></sphere>   \n    <visual> visual properties </visual>\n    <collision> contact properties </collision>\n    <inertial> <density>1</density> </inertial>\n</geometry>\n</link>\n```\n\nEven more compact would be to allow sets of properties to be combined into named objects (materials?) that could then be referenced so that geometry would consist of a pose, a shape, and a material.", "markup": "markdown", "html": "<p>(Per this morning's discussion.) Another approach to this problem would be to think of geometry as the high level concept, with optional properties: pose/shape/inertial/contact/visual. The list of properties might grow over time -- for example, magnetic, wind resistance, infrared reflectance or whatever.</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;xxx&quot;</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;geometry&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;sphere&gt;&lt;radius&gt;</span>1<span class=\"nt\">&lt;/radius&gt;&lt;/sphere&gt;</span>   \n    <span class=\"nt\">&lt;visual&gt;</span> visual properties <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;collision&gt;</span> contact properties <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;inertial&gt;</span> <span class=\"nt\">&lt;density&gt;</span>1<span class=\"nt\">&lt;/density&gt;</span> <span class=\"nt\">&lt;/inertial&gt;</span>\n<span class=\"nt\">&lt;/geometry&gt;</span>\n<span class=\"nt\">&lt;/link&gt;</span>\n</pre></div>\n\n\n<p>Even more compact would be to allow sets of properties to be combined into named objects (materials?) that could then be referenced so that geometry would consist of a pose, a shape, and a material.</p>", "type": "rendered"}, "created_on": "2013-02-01T19:51:30.196346+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": null, "type": "issue_comment", "id": 3015009}