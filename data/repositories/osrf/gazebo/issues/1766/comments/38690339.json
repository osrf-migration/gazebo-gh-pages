{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/38690339.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-38690339"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": "I could add something like this\n~~~\ndiff -r 17469e1528f7 plugins/JointControlPlugin.cc\n--- a/plugins/JointControlPlugin.cc\tFri Jul 28 10:44:51 2017 -0700\n+++ b/plugins/JointControlPlugin.cc\tFri Jul 28 11:54:43 2017 -0700\n@@ -17,6 +17,7 @@\n \n #include <algorithm>\n #include <regex>\n+#include <cmath>\n #include <boost/algorithm/string.hpp>\n \n #include <gazebo/common/Assert.hh>\n@@ -61,6 +62,8 @@\n         ignition::msgs::JointCmd msg;\n         std::string controllerType = child->Get<std::string>(\"type\");\n \n+        double tolerance = 0;\n+\n         if (controllerType == \"force\")\n         {\n           if (child->HasElement(\"target\"))\n@@ -78,7 +81,11 @@\n           {\n             msg.mutable_position()->set_target(child->Get<double>(\"target\"));\n           }\n-          if (child->HasElement(\"pid_gains\"))\n+          if (child->HasElement(\"tolerance\"))\n+          {\n+            tolerance = child->Get<double>(\"tolerance\");\n+          }\n+          else if (child->HasElement(\"pid_gains\"))\n           {\n             auto gains = child->Get<ignition::math::Vector3d>(\"pid_gains\");\n             msg.mutable_position()->set_p_gain(gains.X());\n@@ -131,6 +138,14 @@\n             }\n             for (auto match : matches)\n             {\n+              if (tolerance > 0.0)\n+              {\n+                physics::JointPtr joint = _model->GetJoint(match);\n+                double pGain = joint->GetEffortLimit(0)/tolerance;\n+                msg.mutable_position()->set_p_gain(pGain);\n+                msg.mutable_position()->set_i_gain(0.01*pGain);\n+                msg.mutable_position()->set_d_gain(2*std::sqrt(pGain));\n+              }\n               msg.set_name(match);\n               jointPub.Publish(msg);\n             }\n~~~", "markup": "markdown", "html": "<p>I could add something like this</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 17469e1528f7 plugins/JointControlPlugin.cc</span>\n<span class=\"gd\">--- a/plugins/JointControlPlugin.cc Fri Jul 28 10:44:51 2017 -0700</span>\n<span class=\"gi\">+++ b/plugins/JointControlPlugin.cc Fri Jul 28 11:54:43 2017 -0700</span>\n<span class=\"gu\">@@ -17,6 +17,7 @@</span>\n\n #include &lt;algorithm&gt;\n #include &lt;regex&gt;\n<span class=\"gi\">+#include &lt;cmath&gt;</span>\n #include &lt;boost/algorithm/string.hpp&gt;\n\n #include &lt;gazebo/common/Assert.hh&gt;\n<span class=\"gu\">@@ -61,6 +62,8 @@</span>\n         ignition::msgs::JointCmd msg;\n         std::string controllerType = child-&gt;Get&lt;std::string&gt;(&quot;type&quot;);\n\n<span class=\"gi\">+        double tolerance = 0;</span>\n<span class=\"gi\">+</span>\n         if (controllerType == &quot;force&quot;)\n         {\n           if (child-&gt;HasElement(&quot;target&quot;))\n<span class=\"gu\">@@ -78,7 +81,11 @@</span>\n           {\n             msg.mutable_position()-&gt;set_target(child-&gt;Get&lt;double&gt;(&quot;target&quot;));\n           }\n<span class=\"gd\">-          if (child-&gt;HasElement(&quot;pid_gains&quot;))</span>\n<span class=\"gi\">+          if (child-&gt;HasElement(&quot;tolerance&quot;))</span>\n<span class=\"gi\">+          {</span>\n<span class=\"gi\">+            tolerance = child-&gt;Get&lt;double&gt;(&quot;tolerance&quot;);</span>\n<span class=\"gi\">+          }</span>\n<span class=\"gi\">+          else if (child-&gt;HasElement(&quot;pid_gains&quot;))</span>\n           {\n             auto gains = child-&gt;Get&lt;ignition::math::Vector3d&gt;(&quot;pid_gains&quot;);\n             msg.mutable_position()-&gt;set_p_gain(gains.X());\n<span class=\"gu\">@@ -131,6 +138,14 @@</span>\n             }\n             for (auto match : matches)\n             {\n<span class=\"gi\">+              if (tolerance &gt; 0.0)</span>\n<span class=\"gi\">+              {</span>\n<span class=\"gi\">+                physics::JointPtr joint = _model-&gt;GetJoint(match);</span>\n<span class=\"gi\">+                double pGain = joint-&gt;GetEffortLimit(0)/tolerance;</span>\n<span class=\"gi\">+                msg.mutable_position()-&gt;set_p_gain(pGain);</span>\n<span class=\"gi\">+                msg.mutable_position()-&gt;set_i_gain(0.01*pGain);</span>\n<span class=\"gi\">+                msg.mutable_position()-&gt;set_d_gain(2*std::sqrt(pGain));</span>\n<span class=\"gi\">+              }</span>\n               msg.set_name(match);\n               jointPub.Publish(msg);\n             }\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-28T18:55:58.506228+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": null, "type": "issue_comment", "id": 38690339}