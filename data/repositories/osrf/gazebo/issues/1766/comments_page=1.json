{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/30611024.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-30611024"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:24:04.778285+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30611024}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/38312810.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-38312810"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": "I am working on a plugin to initialize PID joint controller parameters as an intermediate measure. Do you have recommendations for the sdf structure? I am consider the below format, where an arbitrary number of `<controller>` elements can be added.\n\n~~~\n<plugin name=\"initialize_joint_control\" filename=\"libJointControlPlugin.so\">\n  <controller name=\"upper_joint\" type=\"position\">\n    <target>1.0</target>\n    <gains>1.0 0.0 0.2</gains>\n  </controller>\n</plugin>\n~~~", "markup": "markdown", "html": "<p>I am working on a plugin to initialize PID joint controller parameters as an intermediate measure. Do you have recommendations for the sdf structure? I am consider the below format, where an arbitrary number of <code>&lt;controller&gt;</code> elements can be added.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;initialize_joint_control&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libJointControlPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;controller</span> <span class=\"na\">name=</span><span class=\"s\">&quot;upper_joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;position&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;target&gt;</span>1.0<span class=\"nt\">&lt;/target&gt;</span>\n    <span class=\"nt\">&lt;gains&gt;</span>1.0 0.0 0.2<span class=\"nt\">&lt;/gains&gt;</span>\n  <span class=\"nt\">&lt;/controller&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-18T19:25:08.099995+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": null, "type": "issue_comment", "id": 38312810}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/38312928.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-38312928"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": "I think that looks fine. It would also be interesting to explore setting the gains based on joint parameters like the effort limit. For example, for a velocity controller, you can define a `velocity_tolerance`, then set the gain as `effort_limit` / `velocity_tolerance`. It will then be using the full effort when the error reaches the tolerance.\n\nIf the tolerance concept scales for joints connecting links of different sizes, you could also try setting the gains in a batch manner, either taking a list of joint names or a wildcard / regex. This would make it easier to quickly set gains for robots with lots of joints.", "markup": "markdown", "html": "<p>I think that looks fine. It would also be interesting to explore setting the gains based on joint parameters like the effort limit. For example, for a velocity controller, you can define a <code>velocity_tolerance</code>, then set the gain as <code>effort_limit</code> / <code>velocity_tolerance</code>. It will then be using the full effort when the error reaches the tolerance.</p>\n<p>If the tolerance concept scales for joints connecting links of different sizes, you could also try setting the gains in a batch manner, either taking a list of joint names or a wildcard / regex. This would make it easier to quickly set gains for robots with lots of joints.</p>", "type": "rendered"}, "created_on": "2017-07-18T19:31:27.481016+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38312928}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/38312947.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-38312947"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": "Actually, I would maybe add `pid` somewhere in the xml that you've proposed, just so it's clear what the 3 numbers are in the `gain` tag. Maybe call it `<pid_gains>` or `<pid_controller>`?", "markup": "markdown", "html": "<p>Actually, I would maybe add <code>pid</code> somewhere in the xml that you've proposed, just so it's clear what the 3 numbers are in the <code>gain</code> tag. Maybe call it <code>&lt;pid_gains&gt;</code> or <code>&lt;pid_controller&gt;</code>?</p>", "type": "rendered"}, "created_on": "2017-07-18T19:32:30.061429+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38312947}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/38316455.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-38316455"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": "I added the joint names list and regex functionality and created pull request #2751. I will look into supporting a `<tolerance>` element in place of the `<pid_gains>` and testing it on the robonaut model. I am not completely sure how to set the ID gains automatically. Perhaps default to an iGain of 0 and dGain proportional to the square root of the pGain?", "markup": "markdown", "html": "<p>I added the joint names list and regex functionality and created <a href=\"#!/osrf/gazebo/pull-requests/2751/plugin-to-initialize-joint-controller\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2751</a>. I will look into supporting a <code>&lt;tolerance&gt;</code> element in place of the <code>&lt;pid_gains&gt;</code> and testing it on the robonaut model. I am not completely sure how to set the ID gains automatically. Perhaps default to an iGain of 0 and dGain proportional to the square root of the pGain?</p>", "type": "rendered"}, "created_on": "2017-07-19T00:37:31.458003+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": null, "type": "issue_comment", "id": 38316455}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/38690339.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-38690339"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": "I could add something like this\n~~~\ndiff -r 17469e1528f7 plugins/JointControlPlugin.cc\n--- a/plugins/JointControlPlugin.cc\tFri Jul 28 10:44:51 2017 -0700\n+++ b/plugins/JointControlPlugin.cc\tFri Jul 28 11:54:43 2017 -0700\n@@ -17,6 +17,7 @@\n \n #include <algorithm>\n #include <regex>\n+#include <cmath>\n #include <boost/algorithm/string.hpp>\n \n #include <gazebo/common/Assert.hh>\n@@ -61,6 +62,8 @@\n         ignition::msgs::JointCmd msg;\n         std::string controllerType = child->Get<std::string>(\"type\");\n \n+        double tolerance = 0;\n+\n         if (controllerType == \"force\")\n         {\n           if (child->HasElement(\"target\"))\n@@ -78,7 +81,11 @@\n           {\n             msg.mutable_position()->set_target(child->Get<double>(\"target\"));\n           }\n-          if (child->HasElement(\"pid_gains\"))\n+          if (child->HasElement(\"tolerance\"))\n+          {\n+            tolerance = child->Get<double>(\"tolerance\");\n+          }\n+          else if (child->HasElement(\"pid_gains\"))\n           {\n             auto gains = child->Get<ignition::math::Vector3d>(\"pid_gains\");\n             msg.mutable_position()->set_p_gain(gains.X());\n@@ -131,6 +138,14 @@\n             }\n             for (auto match : matches)\n             {\n+              if (tolerance > 0.0)\n+              {\n+                physics::JointPtr joint = _model->GetJoint(match);\n+                double pGain = joint->GetEffortLimit(0)/tolerance;\n+                msg.mutable_position()->set_p_gain(pGain);\n+                msg.mutable_position()->set_i_gain(0.01*pGain);\n+                msg.mutable_position()->set_d_gain(2*std::sqrt(pGain));\n+              }\n               msg.set_name(match);\n               jointPub.Publish(msg);\n             }\n~~~", "markup": "markdown", "html": "<p>I could add something like this</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 17469e1528f7 plugins/JointControlPlugin.cc</span>\n<span class=\"gd\">--- a/plugins/JointControlPlugin.cc Fri Jul 28 10:44:51 2017 -0700</span>\n<span class=\"gi\">+++ b/plugins/JointControlPlugin.cc Fri Jul 28 11:54:43 2017 -0700</span>\n<span class=\"gu\">@@ -17,6 +17,7 @@</span>\n\n #include &lt;algorithm&gt;\n #include &lt;regex&gt;\n<span class=\"gi\">+#include &lt;cmath&gt;</span>\n #include &lt;boost/algorithm/string.hpp&gt;\n\n #include &lt;gazebo/common/Assert.hh&gt;\n<span class=\"gu\">@@ -61,6 +62,8 @@</span>\n         ignition::msgs::JointCmd msg;\n         std::string controllerType = child-&gt;Get&lt;std::string&gt;(&quot;type&quot;);\n\n<span class=\"gi\">+        double tolerance = 0;</span>\n<span class=\"gi\">+</span>\n         if (controllerType == &quot;force&quot;)\n         {\n           if (child-&gt;HasElement(&quot;target&quot;))\n<span class=\"gu\">@@ -78,7 +81,11 @@</span>\n           {\n             msg.mutable_position()-&gt;set_target(child-&gt;Get&lt;double&gt;(&quot;target&quot;));\n           }\n<span class=\"gd\">-          if (child-&gt;HasElement(&quot;pid_gains&quot;))</span>\n<span class=\"gi\">+          if (child-&gt;HasElement(&quot;tolerance&quot;))</span>\n<span class=\"gi\">+          {</span>\n<span class=\"gi\">+            tolerance = child-&gt;Get&lt;double&gt;(&quot;tolerance&quot;);</span>\n<span class=\"gi\">+          }</span>\n<span class=\"gi\">+          else if (child-&gt;HasElement(&quot;pid_gains&quot;))</span>\n           {\n             auto gains = child-&gt;Get&lt;ignition::math::Vector3d&gt;(&quot;pid_gains&quot;);\n             msg.mutable_position()-&gt;set_p_gain(gains.X());\n<span class=\"gu\">@@ -131,6 +138,14 @@</span>\n             }\n             for (auto match : matches)\n             {\n<span class=\"gi\">+              if (tolerance &gt; 0.0)</span>\n<span class=\"gi\">+              {</span>\n<span class=\"gi\">+                physics::JointPtr joint = _model-&gt;GetJoint(match);</span>\n<span class=\"gi\">+                double pGain = joint-&gt;GetEffortLimit(0)/tolerance;</span>\n<span class=\"gi\">+                msg.mutable_position()-&gt;set_p_gain(pGain);</span>\n<span class=\"gi\">+                msg.mutable_position()-&gt;set_i_gain(0.01*pGain);</span>\n<span class=\"gi\">+                msg.mutable_position()-&gt;set_d_gain(2*std::sqrt(pGain));</span>\n<span class=\"gi\">+              }</span>\n               msg.set_name(match);\n               jointPub.Publish(msg);\n             }\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-28T18:55:58.506228+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": null, "type": "issue_comment", "id": 38690339}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766/comments/38690398.json"}, "html": {"href": "#!/osrf/gazebo/issues/1766#comment-38690398"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1766.json"}}, "type": "issue", "id": 1766, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Load PID joint controller parameters from sdf"}, "content": {"raw": "I can set a tolerance that works well for the robonaut arms, but then if I include the neck it causes vibrations since the effort limits are so large.\n~~~\n<?xml version=\"1.0\"?>\n<sdf version=\"1.5\">\n  <world name=\"default\">\n    <include>\n      <uri>model://ground_plane</uri>\n    </include>\n    <include>\n      <uri>model://sun</uri>\n    </include>\n    <include>\n      <uri>model://r2_description</uri>\n      <plugin name=\"init_joint_control\" filename=\"libJointControlPlugin.so\">\n        <controller type=\"position\">\n          <joint>r2/left_arm/joint.</joint>\n          <joint>r2/right_arm/joint.</joint>\n          <joint>r2/neck/joint.</joint> <!-- Causes instability -->\n          <target>0</target>\n          <tolerance>0.1</tolerance>\n        </controller>\n      </plugin>\n    </include>\n  </world>\n</sdf>\n~~~", "markup": "markdown", "html": "<p>I can set a tolerance that works well for the robonaut arms, but then if I include the neck it causes vibrations since the effort limits are so large.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot;?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.5&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://r2_description<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;init_joint_control&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libJointControlPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;controller</span> <span class=\"na\">type=</span><span class=\"s\">&quot;position&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;joint&gt;</span>r2/left_arm/joint.<span class=\"nt\">&lt;/joint&gt;</span>\n          <span class=\"nt\">&lt;joint&gt;</span>r2/right_arm/joint.<span class=\"nt\">&lt;/joint&gt;</span>\n          <span class=\"nt\">&lt;joint&gt;</span>r2/neck/joint.<span class=\"nt\">&lt;/joint&gt;</span> <span class=\"c\">&lt;!-- Causes instability --&gt;</span>\n          <span class=\"nt\">&lt;target&gt;</span>0<span class=\"nt\">&lt;/target&gt;</span>\n          <span class=\"nt\">&lt;tolerance&gt;</span>0.1<span class=\"nt\">&lt;/tolerance&gt;</span>\n        <span class=\"nt\">&lt;/controller&gt;</span>\n      <span class=\"nt\">&lt;/plugin&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-28T18:58:26.461888+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": null, "type": "issue_comment", "id": 38690398}], "page": 1, "size": 7}