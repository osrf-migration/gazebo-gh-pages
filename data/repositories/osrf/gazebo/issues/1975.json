{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1975/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1975.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1975/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1975/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1975/changed-the-calculation-of-force-torque-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1975/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "changed the calculation of force/torque on parent link for ODEJoint::GetForceTorque()", "component": {"name": "physics::ODEPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122883.json"}}}, "votes": 2, "watches": 3, "content": {"raw": "This was initially submitted as pull request #2110 by @vorndamme though it did not include a test, so it was moved to this issue while a test is written.\r\n\r\nOriginal description:\r\n\r\nChanged calculation of parent link force/torque. Force on child is calculated in world frame (was child frame before), where the parent force/torque can simply be the negative of the child force/torque (before, parent force/torque was set to the negative child force/torque, which was specified in child link frame and was added to the overall torque in parent link frame). Now all torques are calculated in world frame, summed up and transformed into child and parent frame in the end.\r\n\r\npatch:\r\n\r\n~~~\r\ndiff -r 17b2f08327b287ad319132729d19dffef097cb4e -r d989c13ef2a4f7d9c551ba09872eb3ce5b658c48 gazebo/physics/ode/ODEJoint.cc\r\n--- a/gazebo/physics/ode/ODEJoint.cc\r\n+++ b/gazebo/physics/ode/ODEJoint.cc\r\n@@ -677,10 +677,10 @@\r\n     physics::JointWrench wrenchAppliedWorld;\r\n     if (this->HasType(physics::Base::HINGE_JOINT))\r\n     {\r\n-      // rotate force into child link frame\r\n-      // GetLocalAxis is the axis specified in parent link frame!!!\r\n+      // get torque on child in world frame, torque on parent acts in opposite\r\n+      // direction\r\n       wrenchAppliedWorld.body2Torque =\r\n-        this->GetForce(0u) * this->GetLocalAxis(0u);\r\n+        this->GetForce(0u) * this->GetGlobalAxis(0u);\r\n \r\n       // gzerr << \"body2Torque [\" << wrenchAppliedWorld.body2Torque\r\n       //       << \"] axis [\" << this->GetLocalAxis(0u)\r\n@@ -690,9 +690,10 @@\r\n     }\r\n     else if (this->HasType(physics::Base::SLIDER_JOINT))\r\n     {\r\n-      // rotate force into child link frame\r\n+      // get force on child in world frame, force on parent acts in opposite\r\n+      // direction\r\n       wrenchAppliedWorld.body2Force =\r\n-        this->GetForce(0u) * this->GetLocalAxis(0u);\r\n+        this->GetForce(0u) * this->GetGlobalAxis(0u);\r\n       wrenchAppliedWorld.body1Force = -wrenchAppliedWorld.body2Force;\r\n     }\r\n     else if (this->HasType(physics::Base::FIXED_JOINT))\r\n@@ -705,6 +706,8 @@\r\n       gzerr << \"force torque for joint type [\" << this->GetType()\r\n             << \"] not implemented, returns false results!!\\n\";\r\n     }\r\n+    // add wrench in world frame before transform into child and parent frame\r\n+    this->wrench = this->wrench + wrenchAppliedWorld;\r\n \r\n     // convert wrench from child cg location to child link frame\r\n     if (this->childLink)\r\n@@ -848,7 +851,6 @@\r\n           this->wrench.body1Torque);\r\n       }\r\n     }\r\n-    this->wrench = this->wrench - wrenchAppliedWorld;\r\n   }\r\n   else\r\n   {\r\n~~~", "markup": "markdown", "html": "<p>This was initially submitted as <a href=\"#!/osrf/gazebo/pull-requests/2110/changed-the-calculation-of-force-torque-on\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2110</a> by @vorndamme though it did not include a test, so it was moved to this issue while a test is written.</p>\n<p>Original description:</p>\n<p>Changed calculation of parent link force/torque. Force on child is calculated in world frame (was child frame before), where the parent force/torque can simply be the negative of the child force/torque (before, parent force/torque was set to the negative child force/torque, which was specified in child link frame and was added to the overall torque in parent link frame). Now all torques are calculated in world frame, summed up and transformed into child and parent frame in the end.</p>\n<p>patch:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 17b2f08327b287ad319132729d19dffef097cb4e -r d989c13ef2a4f7d9c551ba09872eb3ce5b658c48 gazebo/physics/ode/ODEJoint.cc</span>\n<span class=\"gd\">--- a/gazebo/physics/ode/ODEJoint.cc</span>\n<span class=\"gi\">+++ b/gazebo/physics/ode/ODEJoint.cc</span>\n<span class=\"gu\">@@ -677,10 +677,10 @@</span>\n     physics::JointWrench wrenchAppliedWorld;\n     if (this-&gt;HasType(physics::Base::HINGE_JOINT))\n     {\n<span class=\"gd\">-      // rotate force into child link frame</span>\n<span class=\"gd\">-      // GetLocalAxis is the axis specified in parent link frame!!!</span>\n<span class=\"gi\">+      // get torque on child in world frame, torque on parent acts in opposite</span>\n<span class=\"gi\">+      // direction</span>\n       wrenchAppliedWorld.body2Torque =\n<span class=\"gd\">-        this-&gt;GetForce(0u) * this-&gt;GetLocalAxis(0u);</span>\n<span class=\"gi\">+        this-&gt;GetForce(0u) * this-&gt;GetGlobalAxis(0u);</span>\n\n       // gzerr &lt;&lt; &quot;body2Torque [&quot; &lt;&lt; wrenchAppliedWorld.body2Torque\n       //       &lt;&lt; &quot;] axis [&quot; &lt;&lt; this-&gt;GetLocalAxis(0u)\n<span class=\"gu\">@@ -690,9 +690,10 @@</span>\n     }\n     else if (this-&gt;HasType(physics::Base::SLIDER_JOINT))\n     {\n<span class=\"gd\">-      // rotate force into child link frame</span>\n<span class=\"gi\">+      // get force on child in world frame, force on parent acts in opposite</span>\n<span class=\"gi\">+      // direction</span>\n       wrenchAppliedWorld.body2Force =\n<span class=\"gd\">-        this-&gt;GetForce(0u) * this-&gt;GetLocalAxis(0u);</span>\n<span class=\"gi\">+        this-&gt;GetForce(0u) * this-&gt;GetGlobalAxis(0u);</span>\n       wrenchAppliedWorld.body1Force = -wrenchAppliedWorld.body2Force;\n     }\n     else if (this-&gt;HasType(physics::Base::FIXED_JOINT))\n<span class=\"gu\">@@ -705,6 +706,8 @@</span>\n       gzerr &lt;&lt; &quot;force torque for joint type [&quot; &lt;&lt; this-&gt;GetType()\n             &lt;&lt; &quot;] not implemented, returns false results!!\\n&quot;;\n     }\n<span class=\"gi\">+    // add wrench in world frame before transform into child and parent frame</span>\n<span class=\"gi\">+    this-&gt;wrench = this-&gt;wrench + wrenchAppliedWorld;</span>\n\n     // convert wrench from child cg location to child link frame\n     if (this-&gt;childLink)\n<span class=\"gu\">@@ -848,7 +851,6 @@</span>\n           this-&gt;wrench.body1Torque);\n       }\n     }\n<span class=\"gd\">-    this-&gt;wrench = this-&gt;wrench - wrenchAppliedWorld;</span>\n   }\n   else\n   {\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-05-31T21:40:55.878792+00:00", "milestone": null, "updated_on": "2018-07-29T14:18:18.521119+00:00", "type": "issue", "id": 1975}