{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10011317.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10011317"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "I think that increases the number of options without needing to change the ABI. \n\nIt would mean that any one of those in that line could catch the exception and turn it into a return code. `gazebo::setupServer` being more or less the first line of defense could catch that exception and return false.\n\nIn any case it seems like the final catch in any main should probably interpret an exception as an error and return non-zero accordingly.\n\nI can produce a patch/pull request for this, but unfortunately I'm not set up to easily build and test which might reduce the utility of me doing so.", "markup": "markdown", "html": "<p>I think that increases the number of options without needing to change the ABI. </p>\n<p>It would mean that any one of those in that line could catch the exception and turn it into a return code. <code>gazebo::setupServer</code> being more or less the first line of defense could catch that exception and return false.</p>\n<p>In any case it seems like the final catch in any main should probably interpret an exception as an error and return non-zero accordingly.</p>\n<p>I can produce a patch/pull request for this, but unfortunately I'm not set up to easily build and test which might reduce the utility of me doing so.</p>", "type": "rendered"}, "created_on": "2014-05-06T21:03:17.602684+00:00", "user": {"display_name": "andy_somerville", "uuid": "{09fd5d4b-d90e-4416-9a6a-2e5cd638472c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D"}, "html": {"href": "https://bitbucket.org/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D/"}, "avatar": {"href": "https://bitbucket.org/account/andy_somerville/avatar/"}}, "nickname": "andy_somerville", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 10011317}