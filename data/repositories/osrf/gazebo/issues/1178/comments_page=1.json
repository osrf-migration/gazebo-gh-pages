{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10009235.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10009235"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "The check for an existing server is in [void Master::Init](#!/osrf/gazebo/src/e4a82bd4/gazebo/Master.cc?at=default#cl-42), which throws an exception if detected. We could change the return type to `bool Master::Init` and return false instead of throwing an exception. This would break ABI.\n\nAdding different logic to the gazebo startup would take a little more work.", "markup": "markdown", "html": "<p>The check for an existing server is in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/e4a82bd4/gazebo/Master.cc?at=default#cl-42\" rel=\"nofollow\">void Master::Init</a>, which throws an exception if detected. We could change the return type to <code>bool Master::Init</code> and return false instead of throwing an exception. This would break ABI.</p>\n<p>Adding different logic to the gazebo startup would take a little more work.</p>", "type": "rendered"}, "created_on": "2014-05-06T18:40:46.166539+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 10009235}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10009866.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10009866"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "I think the important change would be in what is eventually returned to the system rather than what is returned internally.\n\nIt seem the problem would be more in server_main.cc and gazebo_main.cc in that server_main catches all exceptions and without changing the return value to the system:\n\n\n```\n#!c++\n\nint main(int argc, char **argv)\n{\n  gazebo::Server *server = NULL;\n\n  try\n  {\n   ...\n  }\n  catch(gazebo::common::Exception &_e)\n  {\n    _e.Print();\n\n    server->Fini();\n    delete server;\n  }\n\n  return 0;\n}\n```\n\nI think adjusting the catch to change the return value to -1 or some other specific error code could be part of a solution which would not break ABI. Though it is unclear if there are any users currently depending on the system to return a 0 even if a server is already running.", "markup": "markdown", "html": "<p>I think the important change would be in what is eventually returned to the system rather than what is returned internally.</p>\n<p>It seem the problem would be more in server_main.cc and gazebo_main.cc in that server_main catches all exceptions and without changing the return value to the system:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">**</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">Server</span> <span class=\"o\">*</span><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"nb\">NULL</span><span class=\"p\">;</span>\n\n  <span class=\"k\">try</span>\n  <span class=\"p\">{</span>\n   <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Exception</span> <span class=\"o\">&amp;</span><span class=\"n\">_e</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">_e</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">();</span>\n\n    <span class=\"n\">server</span><span class=\"o\">-&gt;</span><span class=\"n\">Fini</span><span class=\"p\">();</span>\n    <span class=\"k\">delete</span> <span class=\"n\">server</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>I think adjusting the catch to change the return value to -1 or some other specific error code could be part of a solution which would not break ABI. Though it is unclear if there are any users currently depending on the system to return a 0 even if a server is already running.</p>", "type": "rendered"}, "created_on": "2014-05-06T19:25:52.376970+00:00", "user": {"display_name": "andy_somerville", "uuid": "{09fd5d4b-d90e-4416-9a6a-2e5cd638472c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D"}, "html": {"href": "https://bitbucket.org/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D/"}, "avatar": {"href": "https://bitbucket.org/account/andy_somerville/avatar/"}}, "nickname": "andy_somerville", "type": "user", "account_id": null}, "updated_on": "2014-05-06T19:27:23.600008+00:00", "type": "issue_comment", "id": 10009866}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10011125.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10011125"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "I should have mentioned that `Master::Init` is called by `bool gazebo::setupServer`, which traces back to server_main.cc through `Server::Preload` and `Server::ParseArgs`. So, I think it would propagate back to the return code.", "markup": "markdown", "html": "<p>I should have mentioned that <code>Master::Init</code> is called by <code>bool gazebo::setupServer</code>, which traces back to server_main.cc through <code>Server::Preload</code> and <code>Server::ParseArgs</code>. So, I think it would propagate back to the return code.</p>", "type": "rendered"}, "created_on": "2014-05-06T20:49:42.272803+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 10011125}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10011317.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10011317"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "I think that increases the number of options without needing to change the ABI. \n\nIt would mean that any one of those in that line could catch the exception and turn it into a return code. `gazebo::setupServer` being more or less the first line of defense could catch that exception and return false.\n\nIn any case it seems like the final catch in any main should probably interpret an exception as an error and return non-zero accordingly.\n\nI can produce a patch/pull request for this, but unfortunately I'm not set up to easily build and test which might reduce the utility of me doing so.", "markup": "markdown", "html": "<p>I think that increases the number of options without needing to change the ABI. </p>\n<p>It would mean that any one of those in that line could catch the exception and turn it into a return code. <code>gazebo::setupServer</code> being more or less the first line of defense could catch that exception and return false.</p>\n<p>In any case it seems like the final catch in any main should probably interpret an exception as an error and return non-zero accordingly.</p>\n<p>I can produce a patch/pull request for this, but unfortunately I'm not set up to easily build and test which might reduce the utility of me doing so.</p>", "type": "rendered"}, "created_on": "2014-05-06T21:03:17.602684+00:00", "user": {"display_name": "andy_somerville", "uuid": "{09fd5d4b-d90e-4416-9a6a-2e5cd638472c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D"}, "html": {"href": "https://bitbucket.org/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D/"}, "avatar": {"href": "https://bitbucket.org/account/andy_somerville/avatar/"}}, "nickname": "andy_somerville", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 10011317}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10011777.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10011777"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "I'm interested in this problem, I'll try to create a patch from Andy's comments. Let's see if can keep the ABI stable.", "markup": "markdown", "html": "<p>I'm interested in this problem, I'll try to create a patch from Andy's comments. Let's see if can keep the ABI stable.</p>", "type": "rendered"}, "created_on": "2014-05-06T21:39:33.131437+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 10011777}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10022657.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10022657"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "The pull request #1085 should implement proper returning codes for gazebo 2.2 branch.\n\nAbout the message for another gzserver instance running, in gazebo3 (or default) I was able to see clearly the message in ~/ .gazebo/gzserver.log. For gazebo 2.2, the message is directly sent to the terminal. Both cases seems well documented to me.", "markup": "markdown", "html": "<p>The <a href=\"#!/osrf/gazebo/pull-requests/1085/return-failure-to-system-if-exit\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1085</a> should implement proper returning codes for gazebo 2.2 branch.</p>\n<p>About the message for another gzserver instance running, in gazebo3 (or default) I was able to see clearly the message in ~/ .gazebo/gzserver.log. For gazebo 2.2, the message is directly sent to the terminal. Both cases seems well documented to me.</p>", "type": "rendered"}, "created_on": "2014-05-07T12:47:57.234506+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 10022657}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10025191.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10025191"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "> The pull request #1085 should implement proper returning codes for gazebo 2.2 branch.\n\nAwsome!\n\n\n> gazebo3 (or default) I was able to see clearly the message in ~/ .gazebo/gzserver.log.\n\nI can verify that I also see the error message there. ~/.gazebo/gzserver.log was not a place I checked probably because I'm used to only checking the ROS logs which did not have said message, but that's more of a ROS specific problem which exists for all packages where ROS is not a direct dependency.\n\nThat said, is there any reason errors don't also show up on stderr for gazebo3?\n\n\n\n", "markup": "markdown", "html": "<blockquote>\n<p>The <a href=\"#!/osrf/gazebo/pull-requests/1085/return-failure-to-system-if-exit\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1085</a> should implement proper returning codes for gazebo 2.2 branch.</p>\n</blockquote>\n<p>Awsome!</p>\n<blockquote>\n<p>gazebo3 (or default) I was able to see clearly the message in ~/ .gazebo/gzserver.log.</p>\n</blockquote>\n<p>I can verify that I also see the error message there. ~/.gazebo/gzserver.log was not a place I checked probably because I'm used to only checking the ROS logs which did not have said message, but that's more of a ROS specific problem which exists for all packages where ROS is not a direct dependency.</p>\n<p>That said, is there any reason errors don't also show up on stderr for gazebo3?</p>", "type": "rendered"}, "created_on": "2014-05-07T14:55:54.314806+00:00", "user": {"display_name": "andy_somerville", "uuid": "{09fd5d4b-d90e-4416-9a6a-2e5cd638472c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D"}, "html": {"href": "https://bitbucket.org/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D/"}, "avatar": {"href": "https://bitbucket.org/account/andy_somerville/avatar/"}}, "nickname": "andy_somerville", "type": "user", "account_id": null}, "updated_on": "2014-05-07T15:02:41.186185+00:00", "type": "issue_comment", "id": 10025191}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/10030265.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-10030265"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": "pull request merged. Reopen if needed.", "markup": "markdown", "html": "<p>pull request merged. Reopen if needed.</p>", "type": "rendered"}, "created_on": "2014-05-07T20:29:28.489133+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 10030265}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/30610058.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-30610058"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:21:40.275216+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30610058}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178/comments/30612471.json"}, "html": {"href": "#!/osrf/gazebo/issues/1178#comment-30612471"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1178.json"}}, "type": "issue", "id": 1178, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo and gzserver return without error if gzserver is already running"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:44:45.612722+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30612471}], "page": 1, "size": 10}