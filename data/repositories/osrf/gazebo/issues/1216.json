{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1216/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1216.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1216/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1216/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1216/getrealtime-resets-with-each-call-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1216/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "GetRealTime resets with each call to gazebo::runWorld", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From #1145: the [custom_main example](#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/examples/stand_alone/custom_main/custom_main.cc?at=default#cl-36) calls `gazebo::runWorld()` repeatedly.\r\n\r\nWith the following modification, the example will print out sim time and real time:\r\n~~~\r\ndiff -r b991f26d5786 examples/stand_alone/custom_main/custom_main.cc\r\n--- a/examples/stand_alone/custom_main/custom_main.cc\tTue Jun 17 17:35:46 2014 -0700\r\n+++ b/examples/stand_alone/custom_main/custom_main.cc\tTue Jun 24 16:45:04 2014 -0700\r\n@@ -25,15 +25,25 @@\r\n   // Initialize gazebo.\r\n   gazebo::setupServer(_argc, _argv);\r\n \r\n+  gazebo::common::Console::SetQuiet(false);\r\n+\r\n   // Load a world\r\n   gazebo::physics::WorldPtr world = gazebo::loadWorld(\"worlds/empty.world\");\r\n \r\n   // This is your custom main loop. In this example the main loop is just a\r\n   // for loop with 2 iterations.\r\n-  for (unsigned int i = 0; i < 2; ++i)\r\n+  for (unsigned int i = 0; i < 2000; ++i)\r\n   {\r\n     // Run simulation for 100 steps.\r\n+    gzerr << \"world \" << i\r\n+          << \" sim \" << world->GetSimTime()\r\n+          << \" real \" << world->GetRealTime()\r\n+          << std::endl;\r\n     gazebo::runWorld(world, 100);\r\n+    gzerr << \"world \" << i\r\n+          << \" sim \" << world->GetSimTime()\r\n+          << \" real \" << world->GetRealTime()\r\n+          << std::endl;\r\n   }\r\n \r\n   // Close everything.\r\n~~~\r\nThe sim time accumulates with successive calls to `gazebo::runWorld()`, but the real time does not accumulate.\r\n\r\nThis occurs because [World::GetRealTime](#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-1057) subtracts the value of `World::startTime` from the current wall time, and `World::startTime` is [reset by each call to World::RunLoop](#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-392).\r\n\r\nFor reference, [gazebo::runWorld](#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/gazebo.cc?at=default#cl-283) calls [World::RunBlocking](#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-361), which calls [World::RunLoop](#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-392).", "markup": "markdown", "html": "<p>From <a href=\"#!/osrf/gazebo/issues/1145/custom-main-problems-with-time-and-loading\" rel=\"nofollow\" title=\"custom main problems with time and loading plugins\" class=\"ap-connect-link\">#1145</a>: the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/examples/stand_alone/custom_main/custom_main.cc?at=default#cl-36\" rel=\"nofollow\">custom_main example</a> calls <code>gazebo::runWorld()</code> repeatedly.</p>\n<p>With the following modification, the example will print out sim time and real time:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r b991f26d5786 examples/stand_alone/custom_main/custom_main.cc</span>\n<span class=\"gd\">--- a/examples/stand_alone/custom_main/custom_main.cc   Tue Jun 17 17:35:46 2014 -0700</span>\n<span class=\"gi\">+++ b/examples/stand_alone/custom_main/custom_main.cc   Tue Jun 24 16:45:04 2014 -0700</span>\n<span class=\"gu\">@@ -25,15 +25,25 @@</span>\n   // Initialize gazebo.\n   gazebo::setupServer(_argc, _argv);\n\n<span class=\"gi\">+  gazebo::common::Console::SetQuiet(false);</span>\n<span class=\"gi\">+</span>\n   // Load a world\n   gazebo::physics::WorldPtr world = gazebo::loadWorld(&quot;worlds/empty.world&quot;);\n\n   // This is your custom main loop. In this example the main loop is just a\n   // for loop with 2 iterations.\n<span class=\"gd\">-  for (unsigned int i = 0; i &lt; 2; ++i)</span>\n<span class=\"gi\">+  for (unsigned int i = 0; i &lt; 2000; ++i)</span>\n   {\n     // Run simulation for 100 steps.\n<span class=\"gi\">+    gzerr &lt;&lt; &quot;world &quot; &lt;&lt; i</span>\n<span class=\"gi\">+          &lt;&lt; &quot; sim &quot; &lt;&lt; world-&gt;GetSimTime()</span>\n<span class=\"gi\">+          &lt;&lt; &quot; real &quot; &lt;&lt; world-&gt;GetRealTime()</span>\n<span class=\"gi\">+          &lt;&lt; std::endl;</span>\n     gazebo::runWorld(world, 100);\n<span class=\"gi\">+    gzerr &lt;&lt; &quot;world &quot; &lt;&lt; i</span>\n<span class=\"gi\">+          &lt;&lt; &quot; sim &quot; &lt;&lt; world-&gt;GetSimTime()</span>\n<span class=\"gi\">+          &lt;&lt; &quot; real &quot; &lt;&lt; world-&gt;GetRealTime()</span>\n<span class=\"gi\">+          &lt;&lt; std::endl;</span>\n   }\n\n   // Close everything.\n</pre></div>\n\n\n<p>The sim time accumulates with successive calls to <code>gazebo::runWorld()</code>, but the real time does not accumulate.</p>\n<p>This occurs because <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-1057\" rel=\"nofollow\">World::GetRealTime</a> subtracts the value of <code>World::startTime</code> from the current wall time, and <code>World::startTime</code> is <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-392\" rel=\"nofollow\">reset by each call to World::RunLoop</a>.</p>\n<p>For reference, <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/gazebo.cc?at=default#cl-283\" rel=\"nofollow\">gazebo::runWorld</a> calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-361\" rel=\"nofollow\">World::RunBlocking</a>, which calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/21f309a62e98117e82417a664bd4858ff3e09944/gazebo/physics/World.cc?at=default#cl-392\" rel=\"nofollow\">World::RunLoop</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2014-06-24T23:51:02.864911+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:14.804474+00:00", "type": "issue", "id": 1216}