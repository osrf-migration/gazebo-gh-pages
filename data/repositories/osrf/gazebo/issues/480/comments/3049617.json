{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/480/comments/3049617.json"}, "html": {"href": "#!/osrf/gazebo/issues/480#comment-3049617"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/480.json"}}, "type": "issue", "id": 480, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Bullet: spheres roll differently along principal axes than on diagonals"}, "content": {"raw": "The tolerances can be met for bullet if I shrink the size of the c.o.g. offset by half at 45 degrees, and by 40% at -30 degrees. The following code passes the test. It would still be nice to figure out what's going on, though.\n~~~\ndiff -r 687a88c8039c test/regression/physics.cc\n--- a/test/regression/physics.cc\tMon Feb 04 23:11:59 2013 -0800\n+++ b/test/regression/physics.cc\tTue Feb 05 12:15:04 2013 -0800\n@@ -307,8 +307,8 @@\n   y0s.push_back(8);\n   radii.push_back(r2);\n   angle.SetFromDegree(45);\n-  cogs.push_back(math::Vector3(r1*cos(angle.Radian()),\n-                               r1*sin(angle.Radian()), 0));\n+  cogs.push_back(math::Vector3(0.5*r1*cos(angle.Radian()),\n+                               0.5*r1*sin(angle.Radian()), 0));\n \n   // sphere8 has c.g. to the side diagonally; it will roll\n   model_names.push_back(\"cog_xy_-30deg_offset_sphere\");\n@@ -316,8 +316,8 @@\n   y0s.push_back(-8);\n   radii.push_back(r2);\n   angle.SetFromDegree(-30);\n-  cogs.push_back(math::Vector3(r1*cos(angle.Radian()),\n-                               r1*sin(angle.Radian()), 0));\n+  cogs.push_back(math::Vector3(0.6*r1*cos(angle.Radian()),\n+                               0.6*r1*sin(angle.Radian()), 0));\n \n   unsigned int i;\n   for (i = 0; i < model_names.size(); i++)\n~~~", "markup": "markdown", "html": "<p>The tolerances can be met for bullet if I shrink the size of the c.o.g. offset by half at 45 degrees, and by 40% at -30 degrees. The following code passes the test. It would still be nice to figure out what's going on, though.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 687a88c8039c test/regression/physics.cc</span>\n<span class=\"gd\">--- a/test/regression/physics.cc    Mon Feb 04 23:11:59 2013 -0800</span>\n<span class=\"gi\">+++ b/test/regression/physics.cc    Tue Feb 05 12:15:04 2013 -0800</span>\n<span class=\"gu\">@@ -307,8 +307,8 @@</span>\n   y0s.push_back(8);\n   radii.push_back(r2);\n   angle.SetFromDegree(45);\n<span class=\"gd\">-  cogs.push_back(math::Vector3(r1*cos(angle.Radian()),</span>\n<span class=\"gd\">-                               r1*sin(angle.Radian()), 0));</span>\n<span class=\"gi\">+  cogs.push_back(math::Vector3(0.5*r1*cos(angle.Radian()),</span>\n<span class=\"gi\">+                               0.5*r1*sin(angle.Radian()), 0));</span>\n\n   // sphere8 has c.g. to the side diagonally; it will roll\n   model_names.push_back(&quot;cog_xy_-30deg_offset_sphere&quot;);\n<span class=\"gu\">@@ -316,8 +316,8 @@</span>\n   y0s.push_back(-8);\n   radii.push_back(r2);\n   angle.SetFromDegree(-30);\n<span class=\"gd\">-  cogs.push_back(math::Vector3(r1*cos(angle.Radian()),</span>\n<span class=\"gd\">-                               r1*sin(angle.Radian()), 0));</span>\n<span class=\"gi\">+  cogs.push_back(math::Vector3(0.6*r1*cos(angle.Radian()),</span>\n<span class=\"gi\">+                               0.6*r1*sin(angle.Radian()), 0));</span>\n\n   unsigned int i;\n   for (i = 0; i &lt; model_names.size(); i++)\n</pre></div>", "type": "rendered"}, "created_on": "2013-02-05T20:17:03.752173+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 3049617}