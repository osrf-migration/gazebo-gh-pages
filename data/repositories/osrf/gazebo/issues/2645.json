{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2645/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2645.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2645/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2645/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2645/collision-checking-with-ray-doesnt-work"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2645/vote"}}, "reporter": {"display_name": "Peter Mitrano", "uuid": "{f79f793e-4f31-4c61-9df2-190b239e0bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:b5298278-299c-4d16-b5aa-449d6d2db98d/e384924a-68d0-4825-9af2-9892e5f3417c/128"}}, "nickname": "peter_mitrano", "type": "user", "account_id": "557058:b5298278-299c-4d16-b5aa-449d6d2db98d"}, "title": "Collision checking with Ray doesn't work for boxes not aligned in the world", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I've attached plugin code to demonstrate the issue, which to be honest I don't understand very well. Somehow I am getting incorrect, and inconsistently, results from checking `GetIntersection` on a ray. I've looked into the Gazebo code a bit, and from what I can tell it's not a data race with the physics engine because `GetIntersection` takes a lock, and it clearly has something to do with the aligned-ness of the object, since I can\u2019t find any errors when the boxes axes are aligned with the world axes.\r\n\r\nHere\u2019s the code and world file to reproduce. You can test by stepping gazebo while putting the a basic 1m box in various positions. See the example image for a configuration that doesn't work \\(the position need not be precise\\).\r\n\r\n[https://github.com/PeterMitrano/test\\_ray\\_plugin](https://github.com/PeterMitrano/test_ray_plugin)", "markup": "markdown", "html": "<p>I've attached plugin code to demonstrate the issue, which to be honest I don't understand very well. Somehow I am getting incorrect, and inconsistently, results from checking <code>GetIntersection</code> on a ray. I've looked into the Gazebo code a bit, and from what I can tell it's not a data race with the physics engine because <code>GetIntersection</code> takes a lock, and it clearly has something to do with the aligned-ness of the object, since I can\u2019t find any errors when the boxes axes are aligned with the world axes.</p>\n<p>Here\u2019s the code and world file to reproduce. You can test by stepping gazebo while putting the a basic 1m box in various positions. See the example image for a configuration that doesn't work (the position need not be precise).</p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/PeterMitrano/test_ray_plugin\" rel=\"nofollow\">https://github.com/PeterMitrano/test_ray_plugin</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "9.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/242746.json"}}}, "edited_on": null, "created_on": "2019-07-31T13:58:42.892867+00:00", "milestone": null, "updated_on": "2020-01-30T14:43:21.399466+00:00", "type": "issue", "id": 2645}