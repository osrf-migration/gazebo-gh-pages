{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/10298560.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-10298560"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "I suggest the next milestone: a non-photo-realistic simulator resembling this one: http://youtu.be/OFwMbJ3UosQ?t=22s\n\nAny ideas? ", "markup": "markdown", "html": "<p>I suggest the next milestone: a non-photo-realistic simulator resembling this one: <a href=\"http://youtu.be/OFwMbJ3UosQ?t=22s\" rel=\"nofollow\" class=\"ap-connect-link\">http://youtu.be/OFwMbJ3UosQ?t=22s</a></p>\n<p>Any ideas? </p>", "type": "rendered"}, "created_on": "2014-05-21T19:57:20.738769+00:00", "user": {"display_name": "Unknown Name", "uuid": "{f971856d-b990-481b-b674-8596ed01d006}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf971856d-b990-481b-b674-8596ed01d006%7D"}, "html": {"href": "https://bitbucket.org/%7Bf971856d-b990-481b-b674-8596ed01d006%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9113b729d07942c9b91e3573705420eed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsUN-0.png"}}, "nickname": "casro", "type": "user", "account_id": "5bc735ac62b0913c243ee2b9"}, "updated_on": null, "type": "issue_comment", "id": 10298560}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/10504398.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-10504398"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "This would be a nice feature. I think the best approach would involve creating a new Camera type in gazebo that uses a different glsl shader.", "markup": "markdown", "html": "<p>This would be a nice feature. I think the best approach would involve creating a new Camera type in gazebo that uses a different glsl shader.</p>", "type": "rendered"}, "created_on": "2014-06-02T20:59:59.582255+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 10504398}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/10576767.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-10576767"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "Our research group will be working in this direction. Arbitrary model properties may be a good idea or a standardization of a thermal property. @Ahsan_Habib ", "markup": "markdown", "html": "<p>Our research group will be working in this direction. Arbitrary model properties may be a good idea or a standardization of a thermal property. @Ahsan_Habib </p>", "type": "rendered"}, "created_on": "2014-06-06T07:53:55.002415+00:00", "user": {"display_name": "Isura", "uuid": "{8e49d2f4-e17c-48c5-b0e9-a250978f0d12}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8e49d2f4-e17c-48c5-b0e9-a250978f0d12%7D"}, "html": {"href": "https://bitbucket.org/%7B8e49d2f4-e17c-48c5-b0e9-a250978f0d12%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a8dcd95034eb5d875267d3fc69b2bad6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsI-3.png"}}, "nickname": "isura", "type": "user", "account_id": "557058:c7aec2ca-4717-47cc-a16c-5251f3c3a646"}, "updated_on": null, "type": "issue_comment", "id": 10576767}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/10585578.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-10585578"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "Great to hear. Let us know if you need any help and guidance. ", "markup": "markdown", "html": "<p>Great to hear. Let us know if you need any help and guidance. </p>", "type": "rendered"}, "created_on": "2014-06-06T15:17:54.861345+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 10585578}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/15940003.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-15940003"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-02-26T01:39:33.227897+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 15940003}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/29965568.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-29965568"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "Just wondering if anyone has made progress on this?\n\nI am particularly interested in the idea of arbitrary model properties (more so than a simulated thermal camera) and for my purposes want a virtual (depth) camera that assigns a unique color to each model. \n\nIf no-one has made progress on this then I'll try to hack something myself, but I'm not at all confident about how far I'll get. I have limited time, not much experience with the gazebo source code, and most importantly zero experience with 3D rendering, Ogre, glsl shaders, etc,... so any hints would be appreciated.", "markup": "markdown", "html": "<p>Just wondering if anyone has made progress on this?</p>\n<p>I am particularly interested in the idea of arbitrary model properties (more so than a simulated thermal camera) and for my purposes want a virtual (depth) camera that assigns a unique color to each model. </p>\n<p>If no-one has made progress on this then I'll try to hack something myself, but I'm not at all confident about how far I'll get. I have limited time, not much experience with the gazebo source code, and most importantly zero experience with 3D rendering, Ogre, glsl shaders, etc,... so any hints would be appreciated.</p>", "type": "rendered"}, "created_on": "2016-08-19T00:49:26.536977+00:00", "user": {"display_name": "David Rajaratnam", "uuid": "{fd1ab40d-0066-4f24-a9cf-f0d31e2f3b94}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfd1ab40d-0066-4f24-a9cf-f0d31e2f3b94%7D"}, "html": {"href": "https://bitbucket.org/%7Bfd1ab40d-0066-4f24-a9cf-f0d31e2f3b94%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/0606003bcb8fedcc1f6e5b0e35a76d3ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDR-1.png"}}, "nickname": "daveraja", "type": "user", "account_id": "557058:0e570377-5e6f-4dc1-bf90-f8da9be9e584"}, "updated_on": null, "type": "issue_comment", "id": 29965568}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/30609441.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-30609441"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:20:01.814456+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30609441}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51362607.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51362607"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "@daveraja, did you ever have any success with rendering each model as a unique color?", "markup": "markdown", "html": "<p>@daveraja, did you ever have any success with rendering each model as a unique color?</p>", "type": "rendered"}, "created_on": "2019-03-27T19:09:49.575835+00:00", "user": {"display_name": "Andrew Price", "uuid": "{17045c39-888d-44b1-adb9-c784e88e5aa2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D"}, "html": {"href": "https://bitbucket.org/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab6a8aa450ecb22b2ab4eda421b58481d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAP-0.png"}}, "nickname": "arprice", "type": "user", "account_id": "557058:cb9dfe48-fa26-4a39-aedf-96b5f7463f14"}, "updated_on": null, "type": "issue_comment", "id": 51362607}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51365054.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51365054"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "@arprice. I can't recall exactly what I did (it's been a while and I've moved away from robotics for the time being) but I did manage to get something working but only through some pretty horrible hacks. \n\nI never managed to understand Ogre and shaders enough that I could implement things properly so I ended up maintaining a global table that assigned a unique colour to individual models when they are inserted in gazebo. I think I actually replaced the material of the object with that solid colour (but only in the gazebo server and not in the gui).\n\nUltimately, it worked for what I needed but I don't think it is anything that would be useful to anyone else.", "markup": "markdown", "html": "<p>@arprice. I can't recall exactly what I did (it's been a while and I've moved away from robotics for the time being) but I did manage to get something working but only through some pretty horrible hacks. </p>\n<p>I never managed to understand Ogre and shaders enough that I could implement things properly so I ended up maintaining a global table that assigned a unique colour to individual models when they are inserted in gazebo. I think I actually replaced the material of the object with that solid colour (but only in the gazebo server and not in the gui).</p>\n<p>Ultimately, it worked for what I needed but I don't think it is anything that would be useful to anyone else.</p>", "type": "rendered"}, "created_on": "2019-03-27T22:11:13.985906+00:00", "user": {"display_name": "David Rajaratnam", "uuid": "{fd1ab40d-0066-4f24-a9cf-f0d31e2f3b94}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfd1ab40d-0066-4f24-a9cf-f0d31e2f3b94%7D"}, "html": {"href": "https://bitbucket.org/%7Bfd1ab40d-0066-4f24-a9cf-f0d31e2f3b94%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/0606003bcb8fedcc1f6e5b0e35a76d3ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDR-1.png"}}, "nickname": "daveraja", "type": "user", "account_id": "557058:0e570377-5e6f-4dc1-bf90-f8da9be9e584"}, "updated_on": null, "type": "issue_comment", "id": 51365054}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51382810.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51382810"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "That's funny, those are the two approaches I'm considering. I think having custom shaders is the right way to go, but I'm struggling with how to pass a variable down to that level.", "markup": "markdown", "html": "<p>That's funny, those are the two approaches I'm considering. I think having custom shaders is the right way to go, but I'm struggling with how to pass a variable down to that level.</p>", "type": "rendered"}, "created_on": "2019-03-28T18:22:48.522633+00:00", "user": {"display_name": "Andrew Price", "uuid": "{17045c39-888d-44b1-adb9-c784e88e5aa2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D"}, "html": {"href": "https://bitbucket.org/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab6a8aa450ecb22b2ab4eda421b58481d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAP-0.png"}}, "nickname": "arprice", "type": "user", "account_id": "557058:cb9dfe48-fa26-4a39-aedf-96b5f7463f14"}, "updated_on": null, "type": "issue_comment", "id": 51382810}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51383012.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51383012"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "> but I'm struggling with how to pass a variable down to that level.\n\nif you're looking for an example on how to pass variable to shaders, here's [one](#!/osrf/gazebo/src/868ff36b8b09f95eb73ebcf4bcd8ca88298a81aa/gazebo/rendering/Distortion.cc#lines-87). You'll need to declare that variable in the [materials script](#!/osrf/gazebo/src/868ff36b8b09f95eb73ebcf4bcd8ca88298a81aa/media/materials/scripts/gazebo.material#lines-1438) and in the [shaders](#!/osrf/gazebo/src/868ff36b8b09f95eb73ebcf4bcd8ca88298a81aa/media/materials/programs/camera_distortion_map_fs.glsl#lines-8)", "markup": "markdown", "html": "<blockquote>\n<p>but I'm struggling with how to pass a variable down to that level.</p>\n</blockquote>\n<p>if you're looking for an example on how to pass variable to shaders, here's <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/868ff36b8b09f95eb73ebcf4bcd8ca88298a81aa/gazebo/rendering/Distortion.cc#lines-87\" rel=\"nofollow\">one</a>. You'll need to declare that variable in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/868ff36b8b09f95eb73ebcf4bcd8ca88298a81aa/media/materials/scripts/gazebo.material#lines-1438\" rel=\"nofollow\">materials script</a> and in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/868ff36b8b09f95eb73ebcf4bcd8ca88298a81aa/media/materials/programs/camera_distortion_map_fs.glsl#lines-8\" rel=\"nofollow\">shaders</a></p>", "type": "rendered"}, "created_on": "2019-03-28T18:39:13.534473+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 51383012}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51383290.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51383290"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "Thanks @iche033, those look like exactly what I need! I think I get the broad strokes of how to add a label/segmentation camera, but there's a lot of layers in the shader->material->compositor->sensor->plugin relay race to understand.", "markup": "markdown", "html": "<p>Thanks @iche033, those look like exactly what I need! I think I get the broad strokes of how to add a label/segmentation camera, but there's a lot of layers in the shader-&gt;material-&gt;compositor-&gt;sensor-&gt;plugin relay race to understand.</p>", "type": "rendered"}, "created_on": "2019-03-28T18:57:23.783565+00:00", "user": {"display_name": "Andrew Price", "uuid": "{17045c39-888d-44b1-adb9-c784e88e5aa2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D"}, "html": {"href": "https://bitbucket.org/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab6a8aa450ecb22b2ab4eda421b58481d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAP-0.png"}}, "nickname": "arprice", "type": "user", "account_id": "557058:cb9dfe48-fa26-4a39-aedf-96b5f7463f14"}, "updated_on": null, "type": "issue_comment", "id": 51383290}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51582038.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51582038"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "After a bit of investigation, I'm still wandering in the wilderness of all the various layers of Gazebo/Ogre. As alluded to earlier, my interest is specifically in publishing a \"segmentation image\" along the lines of the depth image functionality, where each pixel value is the id of the model at that pixel. I've successfully created and loaded a plugin with a custom material that takes a parameter named `id` and writes that as the color, but there's a number of other steps that I'm unclear on. For instance:\n\n* In the DepthCamera set of classes, there's both a `gazebo::rendering::DepthCamera` and a `gazebo::sensor::DepthCameraSensor`. What is the semantic relationship between these classes, and is an analog of these classes needed to implement a `SegmentationCamera`?\n* How can one dynamically set the material of a given object or link? I can't find any property that suggests material in either `gazebo::physics::Model` or `gazebo::physics::Link`.\n* Can this functionality be loaded purely through the plugin interface, or are modifications to Gazebo itself necessary?\n\n@iche033 or @nkoenig, can either of y'all advise on a path forward? I'm happy to write the feature as far as I am able, but my knowledge of gazebo's inner workings is currently pretty weak. If this would be straightforward to implement for someone with more framework familiarity but is currently a low priority, maybe there's a way to compensate them for the time investment required? From a logistics perspective, I'm happy to create a different issue/pull request/plugin repo as necessary.", "markup": "markdown", "html": "<p>After a bit of investigation, I'm still wandering in the wilderness of all the various layers of Gazebo/Ogre. As alluded to earlier, my interest is specifically in publishing a \"segmentation image\" along the lines of the depth image functionality, where each pixel value is the id of the model at that pixel. I've successfully created and loaded a plugin with a custom material that takes a parameter named <code>id</code> and writes that as the color, but there's a number of other steps that I'm unclear on. For instance:</p>\n<ul>\n<li>In the DepthCamera set of classes, there's both a <code>gazebo::rendering::DepthCamera</code> and a <code>gazebo::sensor::DepthCameraSensor</code>. What is the semantic relationship between these classes, and is an analog of these classes needed to implement a <code>SegmentationCamera</code>?</li>\n<li>How can one dynamically set the material of a given object or link? I can't find any property that suggests material in either <code>gazebo::physics::Model</code> or <code>gazebo::physics::Link</code>.</li>\n<li>Can this functionality be loaded purely through the plugin interface, or are modifications to Gazebo itself necessary?</li>\n</ul>\n<p>@iche033 or @nkoenig, can either of y'all advise on a path forward? I'm happy to write the feature as far as I am able, but my knowledge of gazebo's inner workings is currently pretty weak. If this would be straightforward to implement for someone with more framework familiarity but is currently a low priority, maybe there's a way to compensate them for the time investment required? From a logistics perspective, I'm happy to create a different issue/pull request/plugin repo as necessary.</p>", "type": "rendered"}, "created_on": "2019-04-10T18:40:27.098192+00:00", "user": {"display_name": "Andrew Price", "uuid": "{17045c39-888d-44b1-adb9-c784e88e5aa2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D"}, "html": {"href": "https://bitbucket.org/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab6a8aa450ecb22b2ab4eda421b58481d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAP-0.png"}}, "nickname": "arprice", "type": "user", "account_id": "557058:cb9dfe48-fa26-4a39-aedf-96b5f7463f14"}, "updated_on": null, "type": "issue_comment", "id": 51582038}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51586899.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51586899"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "Hi @arprice. I am not an expert with Gazebo/Ogre and also spent a lot of time in the wilderness of the various layers. So I don't know if this will help but my modified gazebo (https://bitbucket.org/daveraja/gazebo-old) might give you some ideas.\n\nNote: It's out of date, it's pretty messy, and I probably can't really explain exactly why I did certain things (it was a while ago)! Also I wouldn't try to compile it as I made lots of hacks to the cmake files to be able to build and run it side by side with the standard gazebo versions (my requirements at the time).\n\nHowever, the main commit that might be useful is https://bitbucket.org/daveraja/gazebo-old/commits/54005ab2743535d1044d5991b9ea5176df92f8f6\n\nIn particular, I created a new sensor ``ObjectCamera`` by basically duplicating ``DepthCamera``; so, adding a ``gazebo::rendering::ObjectCamera`` and ``gazebo::sensor::ObjectCameraSensor`` etc.\n\nThe code that replaces the model's material with a custom colour is in ``gazebo::rendering::ObjectUtil.[hh|cc]``.  I had to modify quite a few other files to make all this work, in particular to call my wrapper ``create_entity`` function where ever the original code called the ``OgreSceneManager::createEntity()`` function.\n\nHope this helps in some way.", "markup": "markdown", "html": "<p>Hi @arprice. I am not an expert with Gazebo/Ogre and also spent a lot of time in the wilderness of the various layers. So I don't know if this will help but my modified gazebo (<a href=\"https://bitbucket.org/daveraja/gazebo-old\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/daveraja/gazebo-old</a>) might give you some ideas.</p>\n<p>Note: It's out of date, it's pretty messy, and I probably can't really explain exactly why I did certain things (it was a while ago)! Also I wouldn't try to compile it as I made lots of hacks to the cmake files to be able to build and run it side by side with the standard gazebo versions (my requirements at the time).</p>\n<p>However, the main commit that might be useful is <a href=\"https://bitbucket.org/daveraja/gazebo-old/commits/54005ab2743535d1044d5991b9ea5176df92f8f6\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/daveraja/gazebo-old/commits/54005ab2743535d1044d5991b9ea5176df92f8f6</a></p>\n<p>In particular, I created a new sensor <code>ObjectCamera</code> by basically duplicating <code>DepthCamera</code>; so, adding a <code>gazebo::rendering::ObjectCamera</code> and <code>gazebo::sensor::ObjectCameraSensor</code> etc.</p>\n<p>The code that replaces the model's material with a custom colour is in <code>gazebo::rendering::ObjectUtil.[hh|cc]</code>.  I had to modify quite a few other files to make all this work, in particular to call my wrapper <code>create_entity</code> function where ever the original code called the <code>OgreSceneManager::createEntity()</code> function.</p>\n<p>Hope this helps in some way.</p>", "type": "rendered"}, "created_on": "2019-04-11T01:04:36.614412+00:00", "user": {"display_name": "David Rajaratnam", "uuid": "{fd1ab40d-0066-4f24-a9cf-f0d31e2f3b94}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfd1ab40d-0066-4f24-a9cf-f0d31e2f3b94%7D"}, "html": {"href": "https://bitbucket.org/%7Bfd1ab40d-0066-4f24-a9cf-f0d31e2f3b94%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/0606003bcb8fedcc1f6e5b0e35a76d3ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDR-1.png"}}, "nickname": "daveraja", "type": "user", "account_id": "557058:0e570377-5e6f-4dc1-bf90-f8da9be9e584"}, "updated_on": null, "type": "issue_comment", "id": 51586899}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51602409.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51602409"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "Thanks @daveraja, I'll take a look at it!", "markup": "markdown", "html": "<p>Thanks @daveraja, I'll take a look at it!</p>", "type": "rendered"}, "created_on": "2019-04-11T18:43:06.847714+00:00", "user": {"display_name": "Andrew Price", "uuid": "{17045c39-888d-44b1-adb9-c784e88e5aa2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D"}, "html": {"href": "https://bitbucket.org/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab6a8aa450ecb22b2ab4eda421b58481d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAP-0.png"}}, "nickname": "arprice", "type": "user", "account_id": "557058:cb9dfe48-fa26-4a39-aedf-96b5f7463f14"}, "updated_on": null, "type": "issue_comment", "id": 51602409}], "page": 1, "size": 15}