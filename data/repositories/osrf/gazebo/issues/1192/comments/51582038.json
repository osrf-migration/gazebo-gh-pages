{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192/comments/51582038.json"}, "html": {"href": "#!/osrf/gazebo/issues/1192#comment-51582038"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1192.json"}}, "type": "issue", "id": 1192, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Simulating Thermal Cameras"}, "content": {"raw": "After a bit of investigation, I'm still wandering in the wilderness of all the various layers of Gazebo/Ogre. As alluded to earlier, my interest is specifically in publishing a \"segmentation image\" along the lines of the depth image functionality, where each pixel value is the id of the model at that pixel. I've successfully created and loaded a plugin with a custom material that takes a parameter named `id` and writes that as the color, but there's a number of other steps that I'm unclear on. For instance:\n\n* In the DepthCamera set of classes, there's both a `gazebo::rendering::DepthCamera` and a `gazebo::sensor::DepthCameraSensor`. What is the semantic relationship between these classes, and is an analog of these classes needed to implement a `SegmentationCamera`?\n* How can one dynamically set the material of a given object or link? I can't find any property that suggests material in either `gazebo::physics::Model` or `gazebo::physics::Link`.\n* Can this functionality be loaded purely through the plugin interface, or are modifications to Gazebo itself necessary?\n\n@iche033 or @nkoenig, can either of y'all advise on a path forward? I'm happy to write the feature as far as I am able, but my knowledge of gazebo's inner workings is currently pretty weak. If this would be straightforward to implement for someone with more framework familiarity but is currently a low priority, maybe there's a way to compensate them for the time investment required? From a logistics perspective, I'm happy to create a different issue/pull request/plugin repo as necessary.", "markup": "markdown", "html": "<p>After a bit of investigation, I'm still wandering in the wilderness of all the various layers of Gazebo/Ogre. As alluded to earlier, my interest is specifically in publishing a \"segmentation image\" along the lines of the depth image functionality, where each pixel value is the id of the model at that pixel. I've successfully created and loaded a plugin with a custom material that takes a parameter named <code>id</code> and writes that as the color, but there's a number of other steps that I'm unclear on. For instance:</p>\n<ul>\n<li>In the DepthCamera set of classes, there's both a <code>gazebo::rendering::DepthCamera</code> and a <code>gazebo::sensor::DepthCameraSensor</code>. What is the semantic relationship between these classes, and is an analog of these classes needed to implement a <code>SegmentationCamera</code>?</li>\n<li>How can one dynamically set the material of a given object or link? I can't find any property that suggests material in either <code>gazebo::physics::Model</code> or <code>gazebo::physics::Link</code>.</li>\n<li>Can this functionality be loaded purely through the plugin interface, or are modifications to Gazebo itself necessary?</li>\n</ul>\n<p>@iche033 or @nkoenig, can either of y'all advise on a path forward? I'm happy to write the feature as far as I am able, but my knowledge of gazebo's inner workings is currently pretty weak. If this would be straightforward to implement for someone with more framework familiarity but is currently a low priority, maybe there's a way to compensate them for the time investment required? From a logistics perspective, I'm happy to create a different issue/pull request/plugin repo as necessary.</p>", "type": "rendered"}, "created_on": "2019-04-10T18:40:27.098192+00:00", "user": {"display_name": "Andrew Price", "uuid": "{17045c39-888d-44b1-adb9-c784e88e5aa2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D"}, "html": {"href": "https://bitbucket.org/%7B17045c39-888d-44b1-adb9-c784e88e5aa2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab6a8aa450ecb22b2ab4eda421b58481d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAP-0.png"}}, "nickname": "arprice", "type": "user", "account_id": "557058:cb9dfe48-fa26-4a39-aedf-96b5f7463f14"}, "updated_on": null, "type": "issue_comment", "id": 51582038}