{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2068/comments/32084646.json"}, "html": {"href": "#!/osrf/gazebo/issues/2068#comment-32084646"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2068.json"}}, "type": "issue", "id": 2068, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Directional friction still broken."}, "content": {"raw": "Ok, I looked into this a bit more today. I'm pretty confident that `fdir1` is often working as intended, though 1ac3c8b did introduce a bug (when the second collision have `fdir1` set). The broader issue is that I think the friction pyramid model is not well suited to things like a skid-steer robot, even if the `fdir1` parameter is oriented with the wheel. It worked fine in the DRC for the polaris because it has Ackermann steering, but for skid-steer a friction cone model really needs to be used instead of a friction pyramid.\n\nFortunately, gazebo's ODE has a friction cone model added by @rosebudflyaway (pull request #1522)! The only drawback is that the only way to enable it is with a c++ API call to `PhysicsEngine::SetParam`, presumably from a plugin. Here's an example from the [INTEGRATION_physics_friction test](#!/osrf/gazebo/src/6565d89a01c84cba96e1737dab344b6015bd4486/test/integration/physics_friction.cc?fileviewer=file-view-default#physics_friction.cc-299):\n\n~~~\nphysics::PhysicsEnginePtr physics = world->GetPhysicsEngine();\nconst std::string frictionModel = \"cone_model\";\nphysics->SetParam(\"friction_model\", frictionModel);\n~~~\n\nI'll work on making it easier to set this parameter, but can people give this a try to see if it helps with their use cases? Thanks.", "markup": "markdown", "html": "<p>Ok, I looked into this a bit more today. I'm pretty confident that <code>fdir1</code> is often working as intended, though <a href=\"#!/osrf/gazebo/commits/1ac3c8b\" rel=\"nofollow\" class=\"ap-connect-link\">1ac3c8b</a> did introduce a bug (when the second collision have <code>fdir1</code> set). The broader issue is that I think the friction pyramid model is not well suited to things like a skid-steer robot, even if the <code>fdir1</code> parameter is oriented with the wheel. It worked fine in the DRC for the polaris because it has Ackermann steering, but for skid-steer a friction cone model really needs to be used instead of a friction pyramid.</p>\n<p>Fortunately, gazebo's ODE has a friction cone model added by @rosebudflyaway (<a href=\"#!/osrf/gazebo/pull-requests/1522/cone-friction-model\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1522</a>)! The only drawback is that the only way to enable it is with a c++ API call to <code>PhysicsEngine::SetParam</code>, presumably from a plugin. Here's an example from the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/6565d89a01c84cba96e1737dab344b6015bd4486/test/integration/physics_friction.cc?fileviewer=file-view-default#physics_friction.cc-299\" rel=\"nofollow\">INTEGRATION_physics_friction test</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">PhysicsEnginePtr</span> <span class=\"nt\">physics</span> <span class=\"o\">=</span> <span class=\"nt\">world-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetPhysicsEngine</span><span class=\"o\">();</span>\n<span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">frictionModel</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cone_model&quot;</span><span class=\"o\">;</span>\n<span class=\"nt\">physics-</span><span class=\"o\">&gt;</span><span class=\"nt\">SetParam</span><span class=\"o\">(</span><span class=\"s2\">&quot;friction_model&quot;</span><span class=\"o\">,</span> <span class=\"nt\">frictionModel</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>I'll work on making it easier to set this parameter, but can people give this a try to see if it helps with their use cases? Thanks.</p>", "type": "rendered"}, "created_on": "2016-11-11T09:24:41.755232+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 32084646}