{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/964/comments/7204500.json"}, "html": {"href": "#!/osrf/gazebo/issues/964#comment-7204500"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/964.json"}}, "type": "issue", "id": 964, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "BulletHingeJoint::SetVelocity not working (commented out)"}, "content": {"raw": "@scpeters  Sure, that's what [`ODEHingeJoint::SetVelocity`](#!/osrf/gazebo/src/577847c43d021f7edc838a30c0eafc99ea312571/gazebo/physics/Joint.hh?at=default#cl-277) is doing, by prescribing joint velocity and making sure all forces for the system are still balanced correctly.  We should change `BulletHingeJoint::SetVelocity` to do something similar then.  The existing implementation from pull request #655 will not balance forces on the system, so what if we rearrange the proposed API as below:\n\n 1. `Joint::SetVelocity`: Attempt to achieve target velocity through inverse dynamics leveraging the physics engine solver.\n 1. `Joint::SetVelocityByTeleportingChildLink`: Teleport joint (related child link and all of its children) to target position based on prescribed velocity.  If the joint is part of a kinematic loop in the model, this approach might fail.\n 1. `Joint::SetVelocityWithPIDForceController`: Attempt to achieve target velocity using joint actuation (with a PID controller) and let dynamics take its course.", "markup": "markdown", "html": "<p>@scpeters  Sure, that's what <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/577847c43d021f7edc838a30c0eafc99ea312571/gazebo/physics/Joint.hh?at=default#cl-277\" rel=\"nofollow\"><code>ODEHingeJoint::SetVelocity</code></a> is doing, by prescribing joint velocity and making sure all forces for the system are still balanced correctly.  We should change <code>BulletHingeJoint::SetVelocity</code> to do something similar then.  The existing implementation from <a href=\"#!/osrf/gazebo/pull-requests/655/implement-bullethingejoint-setvelocity-801\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #655</a> will not balance forces on the system, so what if we rearrange the proposed API as below:</p>\n<ol>\n<li><code>Joint::SetVelocity</code>: Attempt to achieve target velocity through inverse dynamics leveraging the physics engine solver.</li>\n<li><code>Joint::SetVelocityByTeleportingChildLink</code>: Teleport joint (related child link and all of its children) to target position based on prescribed velocity.  If the joint is part of a kinematic loop in the model, this approach might fail.</li>\n<li><code>Joint::SetVelocityWithPIDForceController</code>: Attempt to achieve target velocity using joint actuation (with a PID controller) and let dynamics take its course.</li>\n</ol>", "type": "rendered"}, "created_on": "2013-12-05T22:24:16.940502+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2013-12-05T22:28:22.001296+00:00", "type": "issue_comment", "id": 7204500}