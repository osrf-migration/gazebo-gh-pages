{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1727/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1727.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1727/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1727/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1727/snap-in-more-diverse-ways"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1727/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Snap in more diverse ways", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Currently the snap feature moves a model so that a face in one model touches a face on another model. That is, the faces become coplanar, with normals pointing on opposite directions, and they touch (anywhere at random...?).\r\n\r\n![snap1.png](data/bitbucket.org/repo/jgXqbo/images/829083576-snap1.png)\r\n\r\nWe could probably make use of the meshes' triangles even more, offering users other ways to align triangles / edges / vertices. Not sure which ones are useful and whether the benefits brought by the tool justify the time spent implementing.\r\n\r\n# Faces\r\n\r\n## Coplanar faces\r\n\r\n* Make faces coplanar by rotating model and translating model as little as possible.\r\n\r\n * Unlike current snap they might end up not touching. \r\n\r\n* There are two options, either normals facing opposite directions or same direction.\r\n\r\n* The moving face might end up anywhere on the green plane.\r\n\r\n![snap2.png](data/bitbucket.org/repo/jgXqbo/images/1206130710-snap2.png)\r\n\r\n## Parallel faces\r\n\r\n* Make faces parallel just by rotating model in place, no translation. \r\n\r\n* There are 2 direction options here as well.\r\n\r\n![snap7.png](data/bitbucket.org/repo/jgXqbo/images/3535867028-snap7.png)\r\n  \r\n# Edges\r\n\r\n## Picking edges\r\n\r\nWe already have a way to pick triangles. We'd need a way to pick edges as well. I can think of a couple of ways:\r\n\r\n### Pick existing edges\r\n\r\nThey'd highlight as triangles currently do.\r\n\r\n![snap3.png](data/bitbucket.org/repo/jgXqbo/images/3329978029-snap3.png)\r\n\r\n### Create edges from existing vertices\r\n\r\nThe edges would highlight with a few vertices highlighted, such as the 2 end vertices and the mid vertex, and the user can pick 2 to make an edge\r\n\r\n![snap5.png](data/bitbucket.org/repo/jgXqbo/images/1185683415-snap5.png) \r\n\r\n## Moving edges\r\n\r\n### Collinear edges\r\n\r\n* Make edges collinear by rotating and translating model as little as possible.\r\n\r\n* There are two align direction options along the line.\r\n\r\n* The moving edge might end up anywhere on the green line.\r\n\r\n![snap4.png](data/bitbucket.org/repo/jgXqbo/images/695763271-snap4.png)\r\n\r\n### Consecutive edges\r\n\r\n* Make edges collinear while their end points coincide\r\n\r\n* There are 4 options for which points coincide: \r\n\r\n    + model1_vertex1 + model2_vertex1\r\n\r\n    + model1_vertex1 + model2_vertex2\r\n\r\n    + model1_vertex2 + model2_vertex1\r\n\r\n    + model1_vertex2 + model2_vertex2\r\n\r\n* Times 2 options for the alignment\r\n\r\n![snap8.png](data/bitbucket.org/repo/jgXqbo/images/3717950232-snap8.png)\r\n\r\n# Combining\r\n\r\nOnce we have these working individually, we could think of combining them as constraints all at once. \r\n\r\nNote that I'm not talking about \"mating\" faces so they always keep that relation if you try to move them, as some CAD programs have. I'm talking just about moving models once, to align them, but then the relationship is not persistent - just like out current snap. \r\n", "markup": "markdown", "html": "<p>Currently the snap feature moves a model so that a face in one model touches a face on another model. That is, the faces become coplanar, with normals pointing on opposite directions, and they touch (anywhere at random...?).</p>\n<p><img alt=\"snap1.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/829083576-snap1.png\" /></p>\n<p>We could probably make use of the meshes' triangles even more, offering users other ways to align triangles / edges / vertices. Not sure which ones are useful and whether the benefits brought by the tool justify the time spent implementing.</p>\n<h1 id=\"markdown-header-faces\">Faces</h1>\n<h2 id=\"markdown-header-coplanar-faces\">Coplanar faces</h2>\n<ul>\n<li>\n<p>Make faces coplanar by rotating model and translating model as little as possible.</p>\n</li>\n<li>\n<p>Unlike current snap they might end up not touching. </p>\n</li>\n<li>\n<p>There are two options, either normals facing opposite directions or same direction.</p>\n</li>\n<li>\n<p>The moving face might end up anywhere on the green plane.</p>\n</li>\n</ul>\n<p><img alt=\"snap2.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1206130710-snap2.png\" /></p>\n<h2 id=\"markdown-header-parallel-faces\">Parallel faces</h2>\n<ul>\n<li>\n<p>Make faces parallel just by rotating model in place, no translation. </p>\n</li>\n<li>\n<p>There are 2 direction options here as well.</p>\n</li>\n</ul>\n<p><img alt=\"snap7.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3535867028-snap7.png\" /></p>\n<h1 id=\"markdown-header-edges\">Edges</h1>\n<h2 id=\"markdown-header-picking-edges\">Picking edges</h2>\n<p>We already have a way to pick triangles. We'd need a way to pick edges as well. I can think of a couple of ways:</p>\n<h3 id=\"markdown-header-pick-existing-edges\">Pick existing edges</h3>\n<p>They'd highlight as triangles currently do.</p>\n<p><img alt=\"snap3.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3329978029-snap3.png\" /></p>\n<h3 id=\"markdown-header-create-edges-from-existing-vertices\">Create edges from existing vertices</h3>\n<p>The edges would highlight with a few vertices highlighted, such as the 2 end vertices and the mid vertex, and the user can pick 2 to make an edge</p>\n<p><img alt=\"snap5.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1185683415-snap5.png\" /> </p>\n<h2 id=\"markdown-header-moving-edges\">Moving edges</h2>\n<h3 id=\"markdown-header-collinear-edges\">Collinear edges</h3>\n<ul>\n<li>\n<p>Make edges collinear by rotating and translating model as little as possible.</p>\n</li>\n<li>\n<p>There are two align direction options along the line.</p>\n</li>\n<li>\n<p>The moving edge might end up anywhere on the green line.</p>\n</li>\n</ul>\n<p><img alt=\"snap4.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/695763271-snap4.png\" /></p>\n<h3 id=\"markdown-header-consecutive-edges\">Consecutive edges</h3>\n<ul>\n<li>\n<p>Make edges collinear while their end points coincide</p>\n</li>\n<li>\n<p>There are 4 options for which points coincide: </p>\n<ul>\n<li>\n<p>model1_vertex1 + model2_vertex1</p>\n</li>\n<li>\n<p>model1_vertex1 + model2_vertex2</p>\n</li>\n<li>\n<p>model1_vertex2 + model2_vertex1</p>\n</li>\n<li>\n<p>model1_vertex2 + model2_vertex2</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Times 2 options for the alignment</p>\n</li>\n</ul>\n<p><img alt=\"snap8.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3717950232-snap8.png\" /></p>\n<h1 id=\"markdown-header-combining\">Combining</h1>\n<p>Once we have these working individually, we could think of combining them as constraints all at once. </p>\n<p>Note that I'm not talking about \"mating\" faces so they always keep that relation if you try to move them, as some CAD programs have. I'm talking just about moving models once, to align them, but then the relationship is not persistent - just like out current snap. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-09-02T23:32:53.541432+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:14.123583+00:00", "type": "issue", "id": 1727}