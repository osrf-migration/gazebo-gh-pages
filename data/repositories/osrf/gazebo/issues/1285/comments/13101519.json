{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1285/comments/13101519.json"}, "html": {"href": "#!/osrf/gazebo/issues/1285#comment-13101519"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1285.json"}}, "type": "issue", "id": 1285, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Improve sensor noise modeling"}, "content": {"raw": "By the way, in case you are interested, here is a little diagram illustrating the difference between the three noise processes -- Gaussian, (drift-free) Wiener and Ornstein-Uhlenbeck. Note how the O-U process reverts periodically back to its mean of 10, while the Wiener process is really just a totally random walk.\n\n![noiseprocesses.png](data/bitbucket.org/repo/jgXqbo/images/1636795808-noiseprocesses.png)\n\nIt was generated using the MATLAB code below, which I used to code the processes up in C++ for Gazebo.\n\n```matlab\nr = 10;     % Reversion time (O-U)\nm = 10;     % Mean (O-U, Gaussian, Wiener)\nx = m;      % Starting estimate (O-U, Wiener)\no = 0;      % Bias offset (for Wiener) \nv = 2;      % Variance (O-U, Wiener, Gaussian)\nT = 100;    % Time\nN = 1000;   % Epochs\nd = T/N;    % deltaT\nM = 1000;   % Samples\n\n% For storing sample traces\ns_g = m + sqrt(v) * randn(1,N);\ns_w = zeros(1,N);\ns_o = zeros(1,N);\n\n% Wiener\nb = zeros(1,M);\nfor j = 1:M\n    s_w(1) = x;\n    for i = 2:N\n        s_w(i) = s_w(i-1) + d*o + sqrt(d*v) * randn();\n    end\n    b(j) = s_w(end);\nend\ndisp('WIENER PROCESS');\ndisp('*********************************');\ndisp('Measured vs analytic mean:');\n[mean(b) x+o*T]\ndisp('Measured vs analytic deviation:');\n[var(b)  v*T]\n\n% Ornstein-Uhlenbeck\nc = zeros(1,M);\nfor j = 1:M\n    s_o(1) = x;\n    for i = 2:N\n        k = exp(-d/r);\n        s_o(i) = k*s_o(i-1) + (1-k)*m + sqrt(v*(1-k*k)*r/2) * randn();\n    end\n    c(j) = s_o(end);\nend\nk = exp(-T/r);\ndisp('ORNSTEIN-UHLENBECK PROCESS');\ndisp('*********************************');\ndisp('Measured vs analytic mean:');\n[mean(c) m+(x-m)*k]\ndisp('Measured vs analytic deviation:');\n[var(c)  v*r/2*(1-k*k)]\n\nfigure; hold on; grid on;\nplot(s_g,'r-');\nplot(s_w,'b-');\nplot(s_o,'k-');\nlegend('Gaussian','Wiener','Ornstein-Uhlenbeck');\n\n```", "markup": "markdown", "html": "<p>By the way, in case you are interested, here is a little diagram illustrating the difference between the three noise processes -- Gaussian, (drift-free) Wiener and Ornstein-Uhlenbeck. Note how the O-U process reverts periodically back to its mean of 10, while the Wiener process is really just a totally random walk.</p>\n<p><img alt=\"noiseprocesses.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1636795808-noiseprocesses.png\" /></p>\n<p>It was generated using the MATLAB code below, which I used to code the processes up in C++ for Gazebo.</p>\n<div class=\"codehilite language-matlab\"><pre><span></span><span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"mi\">10</span><span class=\"p\">;</span>     <span class=\"c\">% Reversion time (O-U)</span>\n<span class=\"n\">m</span> <span class=\"p\">=</span> <span class=\"mi\">10</span><span class=\"p\">;</span>     <span class=\"c\">% Mean (O-U, Gaussian, Wiener)</span>\n<span class=\"n\">x</span> <span class=\"p\">=</span> <span class=\"n\">m</span><span class=\"p\">;</span>      <span class=\"c\">% Starting estimate (O-U, Wiener)</span>\n<span class=\"n\">o</span> <span class=\"p\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>      <span class=\"c\">% Bias offset (for Wiener) </span>\n<span class=\"n\">v</span> <span class=\"p\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>      <span class=\"c\">% Variance (O-U, Wiener, Gaussian)</span>\n<span class=\"n\">T</span> <span class=\"p\">=</span> <span class=\"mi\">100</span><span class=\"p\">;</span>    <span class=\"c\">% Time</span>\n<span class=\"n\">N</span> <span class=\"p\">=</span> <span class=\"mi\">1000</span><span class=\"p\">;</span>   <span class=\"c\">% Epochs</span>\n<span class=\"n\">d</span> <span class=\"p\">=</span> <span class=\"n\">T</span><span class=\"o\">/</span><span class=\"n\">N</span><span class=\"p\">;</span>    <span class=\"c\">% deltaT</span>\n<span class=\"n\">M</span> <span class=\"p\">=</span> <span class=\"mi\">1000</span><span class=\"p\">;</span>   <span class=\"c\">% Samples</span>\n\n<span class=\"c\">% For storing sample traces</span>\n<span class=\"n\">s_g</span> <span class=\"p\">=</span> <span class=\"n\">m</span> <span class=\"o\">+</span> <span class=\"nb\">sqrt</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">randn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">N</span><span class=\"p\">);</span>\n<span class=\"n\">s_w</span> <span class=\"p\">=</span> <span class=\"nb\">zeros</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">N</span><span class=\"p\">);</span>\n<span class=\"n\">s_o</span> <span class=\"p\">=</span> <span class=\"nb\">zeros</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">N</span><span class=\"p\">);</span>\n\n<span class=\"c\">% Wiener</span>\n<span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"nb\">zeros</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">M</span><span class=\"p\">);</span>\n<span class=\"k\">for</span> <span class=\"nb\">j</span> <span class=\"p\">=</span> <span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"n\">M</span>\n    <span class=\"n\">s_w</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n    <span class=\"k\">for</span> <span class=\"nb\">i</span> <span class=\"p\">=</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"n\">N</span>\n        <span class=\"n\">s_w</span><span class=\"p\">(</span><span class=\"nb\">i</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">s_w</span><span class=\"p\">(</span><span class=\"nb\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">d</span><span class=\"o\">*</span><span class=\"n\">o</span> <span class=\"o\">+</span> <span class=\"nb\">sqrt</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"o\">*</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">randn</span><span class=\"p\">();</span>\n    <span class=\"k\">end</span>\n    <span class=\"n\">b</span><span class=\"p\">(</span><span class=\"nb\">j</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">s_w</span><span class=\"p\">(</span><span class=\"k\">end</span><span class=\"p\">);</span>\n<span class=\"k\">end</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;WIENER PROCESS&#39;</span><span class=\"p\">);</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;*********************************&#39;</span><span class=\"p\">);</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;Measured vs analytic mean:&#39;</span><span class=\"p\">);</span>\n<span class=\"p\">[</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">o</span><span class=\"o\">*</span><span class=\"n\">T</span><span class=\"p\">]</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;Measured vs analytic deviation:&#39;</span><span class=\"p\">);</span>\n<span class=\"p\">[</span><span class=\"n\">var</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>  <span class=\"n\">v</span><span class=\"o\">*</span><span class=\"n\">T</span><span class=\"p\">]</span>\n\n<span class=\"c\">% Ornstein-Uhlenbeck</span>\n<span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"nb\">zeros</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">M</span><span class=\"p\">);</span>\n<span class=\"k\">for</span> <span class=\"nb\">j</span> <span class=\"p\">=</span> <span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"n\">M</span>\n    <span class=\"n\">s_o</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n    <span class=\"k\">for</span> <span class=\"nb\">i</span> <span class=\"p\">=</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"n\">N</span>\n        <span class=\"n\">k</span> <span class=\"p\">=</span> <span class=\"nb\">exp</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">d</span><span class=\"o\">/</span><span class=\"n\">r</span><span class=\"p\">);</span>\n        <span class=\"n\">s_o</span><span class=\"p\">(</span><span class=\"nb\">i</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">k</span><span class=\"o\">*</span><span class=\"n\">s_o</span><span class=\"p\">(</span><span class=\"nb\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">m</span> <span class=\"o\">+</span> <span class=\"nb\">sqrt</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"o\">*</span><span class=\"n\">k</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">r</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">randn</span><span class=\"p\">();</span>\n    <span class=\"k\">end</span>\n    <span class=\"n\">c</span><span class=\"p\">(</span><span class=\"nb\">j</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">s_o</span><span class=\"p\">(</span><span class=\"k\">end</span><span class=\"p\">);</span>\n<span class=\"k\">end</span>\n<span class=\"n\">k</span> <span class=\"p\">=</span> <span class=\"nb\">exp</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">T</span><span class=\"o\">/</span><span class=\"n\">r</span><span class=\"p\">);</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;ORNSTEIN-UHLENBECK PROCESS&#39;</span><span class=\"p\">);</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;*********************************&#39;</span><span class=\"p\">);</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;Measured vs analytic mean:&#39;</span><span class=\"p\">);</span>\n<span class=\"p\">[</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"n\">m</span><span class=\"o\">+</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">m</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">k</span><span class=\"p\">]</span>\n<span class=\"nb\">disp</span><span class=\"p\">(</span><span class=\"s\">&#39;Measured vs analytic deviation:&#39;</span><span class=\"p\">);</span>\n<span class=\"p\">[</span><span class=\"n\">var</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>  <span class=\"n\">v</span><span class=\"o\">*</span><span class=\"n\">r</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"o\">*</span><span class=\"n\">k</span><span class=\"p\">)]</span>\n\n<span class=\"n\">figure</span><span class=\"p\">;</span> <span class=\"n\">hold</span> <span class=\"n\">on</span><span class=\"p\">;</span> <span class=\"n\">grid</span> <span class=\"n\">on</span><span class=\"p\">;</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">s_g</span><span class=\"p\">,</span><span class=\"s\">&#39;r-&#39;</span><span class=\"p\">);</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">s_w</span><span class=\"p\">,</span><span class=\"s\">&#39;b-&#39;</span><span class=\"p\">);</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">s_o</span><span class=\"p\">,</span><span class=\"s\">&#39;k-&#39;</span><span class=\"p\">);</span>\n<span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"s\">&#39;Gaussian&#39;</span><span class=\"p\">,</span><span class=\"s\">&#39;Wiener&#39;</span><span class=\"p\">,</span><span class=\"s\">&#39;Ornstein-Uhlenbeck&#39;</span><span class=\"p\">);</span>\n</pre></div>", "type": "rendered"}, "created_on": "2014-10-20T19:48:27.138043+00:00", "user": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "updated_on": null, "type": "issue_comment", "id": 13101519}