{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2664/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2664.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2664/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2664/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2664/cmake-311-will-stop-supporting-multiline"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2664/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "CMake 3.11 will stop supporting multiline cache strings", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Gazebo uses multiline CMake cache strings in files like [#!/osrf/gazebo/src/13b71990d5449de589e4dcaa83dbc711394650ed/gazebo/common/CMakeLists.txt#lines-219](#!/osrf/gazebo/src/13b71990d5449de589e4dcaa83dbc711394650ed/gazebo/common/CMakeLists.txt#lines-219) .\r\n\r\nCMake 3.11 will stop supporting this: [https://cmake.org/cmake/help/v3.15/release/3.11.html#other-changes](https://cmake.org/cmake/help/v3.15/release/3.11.html#other-changes) .\r\n\r\nPractically, it doesn\u2019t seem to be a big problem, because if I understand it correctly, this cache string is actually never loaded from the cache as its only usage is being directly handed off to configure\\_file. I verified it and the generated file [config.](http://config.gg)hh looks correct and contains many include lines.\r\n\r\nThis is what CMakeCache.txt looks like when built with CMake 3.15:\r\n\r\n\u200c\r\n\r\n```\r\n//Common Headers\r\ncommon_headers:INTERNAL= #include \"gazebo/common/Animation.hh\"\r\n# WARNING: Value of common_headers contained a newline and was\r\n#  truncated. Original value:\r\n#  #include \"gazebo/common/Animation.hh\"\r\n# \\n #include \"gazebo/common/Assert.hh\"\r\n# \\n #include \"gazebo/common/AudioDecoder.hh\"\r\n# \\n #include \"gazebo/common/Battery.hh\"\r\n# \\n #include \"gazebo/common/Base64.hh\"\r\n# \\n #include \"gazebo/common/BVHLoader.hh\"\r\n...\r\n```\r\n\r\nAnd these warnings are written to the console:\r\n\r\n\u200c\r\n\r\n```\r\nCMake Warning:                                                                                      \r\n  Value of common_headers contained a newline; truncating   \r\n```\r\n\r\nSo, the question is: is it still needed to save these variables to cache?", "markup": "markdown", "html": "<p>Gazebo uses multiline CMake cache strings in files like <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/13b71990d5449de589e4dcaa83dbc711394650ed/gazebo/common/CMakeLists.txt#lines-219\" rel=\"nofollow\">#!/osrf/gazebo/src/13b71990d5449de589e4dcaa83dbc711394650ed/gazebo/common/CMakeLists.txt#lines-219</a> .</p>\n<p>CMake 3.11 will stop supporting this: <a data-is-external-link=\"true\" href=\"https://cmake.org/cmake/help/v3.15/release/3.11.html#other-changes\" rel=\"nofollow\">https://cmake.org/cmake/help/v3.15/release/3.11.html#other-changes</a> .</p>\n<p>Practically, it doesn\u2019t seem to be a big problem, because if I understand it correctly, this cache string is actually never loaded from the cache as its only usage is being directly handed off to configure_file. I verified it and the generated file <a data-is-external-link=\"true\" href=\"http://config.gg\" rel=\"nofollow\">config.</a>hh looks correct and contains many include lines.</p>\n<p>This is what CMakeCache.txt looks like when built with CMake 3.15:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>//Common Headers\ncommon_headers:INTERNAL= #include &quot;gazebo/common/Animation.hh&quot;\n# WARNING: Value of common_headers contained a newline and was\n#  truncated. Original value:\n#  #include &quot;gazebo/common/Animation.hh&quot;\n# \\n #include &quot;gazebo/common/Assert.hh&quot;\n# \\n #include &quot;gazebo/common/AudioDecoder.hh&quot;\n# \\n #include &quot;gazebo/common/Battery.hh&quot;\n# \\n #include &quot;gazebo/common/Base64.hh&quot;\n# \\n #include &quot;gazebo/common/BVHLoader.hh&quot;\n...\n</pre></div>\n\n\n<p>And these warnings are written to the console:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>CMake Warning:                                                                                      \n  Value of common_headers contained a newline; truncating   \n</pre></div>\n\n\n<p>So, the question is: is it still needed to save these variables to cache?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2019-10-10T15:05:36.863567+00:00", "milestone": null, "updated_on": "2019-10-24T07:28:26.264348+00:00", "type": "issue", "id": 2664}