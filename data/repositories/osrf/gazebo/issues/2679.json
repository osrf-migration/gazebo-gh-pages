{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2679/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2679.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2679/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2679/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2679/deadlock-on-world-onrequest-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2679/vote"}}, "reporter": {"display_name": "Teo Koon Peng", "uuid": "{1ec15fb5-59a2-4750-86ab-0900d87b47c6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ec15fb5-59a2-4750-86ab-0900d87b47c6%7D"}, "html": {"href": "https://bitbucket.org/%7B1ec15fb5-59a2-4750-86ab-0900d87b47c6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56fb2af5c994aba4bbdf23b8eec5e2e4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTP-6.png"}}, "nickname": "koonpeng", "type": "user", "account_id": "5bf383ae368afa1e1c7548ea"}, "title": "deadlock on World::OnRequest and TopicManager::AddNode", "component": {"name": "transport", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122882.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "deadlock can happen when loading actors during gazebo startup, receiveMutex and nodeMutex are locked by multiple threads at  the same time, causing a deadlock. It happens while thread 60 is processing factory messages and thread 5 is processing nodes.\r\n\r\nI can think of 2 ways to fix it:\r\n\r\n1. copy `dataPtr->factoryMsgs` to a temp container in `World::ProcessFactoryMsgs` so we don't have to hold on to `receiveMutex` lock.\r\n2. introduce a new mutex to protect `factoryMsgs`, so it doesn't share the same `receiveMutex` lock with many other containers.\r\n\r\nNot sure which solution is more preferred, or if there is a better solution.\r\n\r\n```\r\n(gdb) thread 5\r\n[Switching to thread 5 (Thread 0x7f2a03fff700 (LWP 7070))]\r\n#0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n135     in ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S\r\n(gdb) bt\r\n#0  0x00007f2a4281410d in __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n#1  0x00007f2a4280d098 in __GI___pthread_mutex_lock (mutex=0x5600f281b348) at ../nptl/pthread_mutex_lock.c:113\r\n#2  0x00007f2a4492a97d in __gthread_mutex_lock(__gthread_mutex_t*) (__mutex=0x5600f281b348) at /usr/include/x86_64-linux-gnu/c++/7/bits/gthr-default.h:748\r\n#3  0x00007f2a4492a9cd in __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t*) (__mutex=0x5600f281b348) at /usr/include/x86_64-linux-gnu/c++/7/bits/gthr-default.h:810\r\n#4  0x00007f2a4492f10c in std::recursive_mutex::lock() (this=0x5600f281b348) at /usr/include/c++/7/mutex:107\r\n#5  0x00007f2a44931c42 in std::lock_guard<std::recursive_mutex>::lock_guard(std::recursive_mutex&) (this=0x7f2a03ffd720, __m=...) at /usr/include/c++/7/bits/std_mutex.h:162\r\n\r\nreceiveMutex already locked at another thread std::lock_guard<std::recursive_mutex> lock(this->dataPtr->receiveMutex);\r\n#6  0x00007f2a422d3b96 in gazebo::physics::World::OnRequest(boost::shared_ptr<gazebo::msgs::Request const> const&) (this=0x5600f282b570, _msg=...) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:1500\r\n\r\n#7  0x00007f2a4230409f in boost::_mfi::mf1<void, gazebo::physics::World, boost::shared_ptr<gazebo::msgs::Request const> const&>::operator()(gazebo::physics::World*, boost::shared_ptr<gazebo::msgs::Request const> const&) const (this=0x5600f61fce48, p=0x5600f282b570, a1=...) at /usr/include/boost/bind/mem_fn_template.hpp:165\r\n#8  0x00007f2a42302fe0 in boost::_bi::list2<boost::_bi::value<gazebo::physics::World*>, boost::arg<1> >::operator()<boost::_mfi::mf1<void, gazebo::physics::World, boost::shared_ptr<gazebo::msgs::Request const> const&>, boost::_bi::rrlist1<boost::shared_ptr<gazebo::msgs::Request const> const&> >(boost::_bi::type<void>, boost::_mfi::mf1<void, gazebo::physics::World, boost::shared_ptr<gazebo::msgs::Request const> const&>&, boost::_bi::rrlist1<boost::shared_ptr<gazebo::msgs::Request const> const&>&, int) (this=0x5600f61fce58, f=..., a=...) at /usr/include/boost/bind/bind.hpp:319\r\n#9  0x00007f2a423016af in boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::physics::World, boost::shared_ptr<gazebo::msgs::Request const> const&>, boost::_bi::list2<boost::_bi::value<gazebo::physics::World*>, boost::arg<1> > >::operator()<boost::shared_ptr<gazebo::msgs::Request const> const&>(boost::shared_ptr<gazebo::msgs::Request const> const&) (this=0x5600f61fce48, a1=...) at /usr/include/boost/bind/bind.hpp:1306\r\n#10 0x00007f2a422ff33f in boost::detail::function::void_function_obj_invoker1<boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::physics::World, boost::shared_ptr<gazebo::msgs::Request const> const&>, boost::_bi::list2<boost::_bi::value<gazebo::physics::World*>, boost::arg<1> > >, void, boost::shared_ptr<gazebo::msgs::Request const> const&>::invoke(boost::detail::function::function_buffer&, boost::shared_ptr<gazebo::msgs::Request const> const&) (function_obj_ptr=..., a0=...) at /usr/include/boost/function/function_template.hpp:159\r\n#11 0x00007f2a421a60cc in boost::function1<void, boost::shared_ptr<gazebo::msgs::Request const> const&>::operator()(boost::shared_ptr<gazebo::msgs::Request const> const&) const (this=0x5600f61fce40, a0=...) at /usr/include/boost/function/function_template.hpp:759\r\n#12 0x00007f2a421a5982 in gazebo::transport::CallbackHelperT<gazebo::msgs::Request>::HandleData(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, boost::function<void (unsigned int)>, unsigned int) (this=0x5600f61fce00, _newdata=\"\\b\\372\\024\\022\\nscene_info\\032\", _cb=..., _id=0)\r\n    at /home/teokp/source/gazebo/gazebo/gazebo/transport/CallbackHelper.hh:149\r\n#13 0x00007f2a4177b552 in gazebo::transport::Node::ProcessIncoming() (this=0x5600f5cfae00) at /home/teokp/source/gazebo/gazebo/gazebo/transport/Node.cc:260\r\n\r\nnodeMutex is locked here boost::recursive_mutex::scoped_lock lock(this->nodeMutex);\r\n#14 0x00007f2a41797954 in gazebo::transport::TopicManager::ProcessNodes(bool) (this=0x7f2a44b78360 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t>, _onlyOut=false) at /home/teokp/source/gazebo/gazebo/gazebo/transport/TopicManager.cc:199\r\n\r\n#15 0x00007f2a41768dd2 in gazebo::transport::ConnectionManager::RunUpdate() (this=0x7f2a44b78140 <SingletonT<gazebo::transport::ConnectionManager>::GetInstance()::t>) at /home/teokp/source/gazebo/gazebo/gazebo/transport/ConnectionManager.cc:289\r\n#16 0x00007f2a41768fa6 in gazebo::transport::ConnectionManager::Run() (this=0x7f2a44b78140 <SingletonT<gazebo::transport::ConnectionManager>::GetInstance()::t>) at /home/teokp/source/gazebo/gazebo/gazebo/transport/ConnectionManager.cc:320\r\n#17 0x00007f2a41775537 in boost::_mfi::mf0<void, gazebo::transport::ConnectionManager>::operator()(gazebo::transport::ConnectionManager*) const (this=0x5600f1c7ea98, p=0x7f2a44b78140 <SingletonT<gazebo::transport::ConnectionManager>::GetInstance()::t>) at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n#18 0x00007f2a41774901 in boost::_bi::list1<boost::_bi::value<gazebo::transport::ConnectionManager*> >::operator()<boost::_mfi::mf0<void, gazebo::transport::ConnectionManager>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, gazebo::transport::ConnectionManager>&, boost::_bi::list0&, int) (this=0x5600f1c7eaa8, f=..., a=...)\r\n    at /usr/include/boost/bind/bind.hpp:259\r\n#19 0x00007f2a417735d6 in boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::transport::ConnectionManager>, boost::_bi::list1<boost::_bi::value<gazebo::transport::ConnectionManager*> > >::operator()() (this=0x5600f1c7ea98) at /usr/include/boost/bind/bind.hpp:1294\r\n#20 0x00007f2a417a914c in boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::transport::ConnectionManager>, boost::_bi::list1<boost::_bi::value<gazebo::transport::ConnectionManager*> > > >::run() (this=0x5600f1c7e8e0) at /usr/include/boost/thread/detail/thread.hpp:116\r\n#21 0x00007f2a3f563bcd in  () at /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.65.1\r\n#22 0x00007f2a4280a6db in start_thread (arg=0x7f2a03fff700) at pthread_create.c:463\r\n#23 0x00007f2a42f0188f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\n\r\n\r\n(gdb) thread 60\r\n[Switching to thread 60 (Thread 0x7f29823fa700 (LWP 7162))]\r\n#0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n135     in ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S\r\n(gdb) bt\r\n#0  0x00007f2a4281410d in __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n#1  0x00007f2a4280d098 in __GI___pthread_mutex_lock (mutex=0x7f2a44b78418 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t+184>) at ../nptl/pthread_mutex_lock.c:113\r\n#2  0x00007f2a41742cf8 in boost::recursive_mutex::lock() (this=0x7f2a44b78418 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t+184>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:113\r\n#3  0x00007f2a41755b65 in boost::unique_lock<boost::recursive_mutex>::lock() (this=0x7f29823f7c60) at /usr/include/boost/thread/lock_types.hpp:346\r\n#4  0x00007f2a41750c8b in boost::unique_lock<boost::recursive_mutex>::unique_lock(boost::recursive_mutex&) (this=0x7f29823f7c60, m_=...) at /usr/include/boost/thread/lock_types.hpp:124\r\n\r\nnodeMutex is already locked at thread 5, deadlock happens here boost::recursive_mutex::scoped_lock lock(this->nodeMutex);\r\n#5  0x00007f2a417973e6 in gazebo::transport::TopicManager::AddNode(boost::shared_ptr<gazebo::transport::Node>) (this=0x7f2a44b78360 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t>, _node=...) at /home/teokp/source/gazebo/gazebo/gazebo/transport/TopicManager.cc:103\r\n\r\n#6  0x00007f2a4177ac77 in gazebo::transport::Node::PrivateInit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, gazebo::common::Time const&, bool) (this=0x7f293e4e4b40, _space=\"default\", _maxWait=..., _fallbackToDefault=true) at /home/teokp/source/gazebo/gazebo/gazebo/transport/Node.cc:141\r\n#7  0x00007f2a4177a947 in gazebo::transport::Node::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (this=0x7f293e4e4b40, _space=\"default\") at /home/teokp/source/gazebo/gazebo/gazebo/transport/Node.cc:88\r\n#8  0x00007f2a421d21be in gazebo::physics::Entity::Load(std::shared_ptr<sdf::Element>) (this=0x7f293e47af20, _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 47) = {...}) at /home/teokp/source/gazebo/gazebo/gazebo/physics/Entity.cc:93\r\n#9  0x00007f2a42259b51 in gazebo::physics::Model::Load(std::shared_ptr<sdf::Element>) (this=0x7f293e47af20, _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 47) = {...}) at /home/teokp/source/gazebo/gazebo/gazebo/physics/Model.cc:79\r\n#10 0x00007f2a4217dade in gazebo::physics::Actor::Load(std::shared_ptr<sdf::Element>) (this=0x7f293e47af20, _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 47) = {...}) at /home/teokp/source/gazebo/gazebo/gazebo/physics/Actor.cc:130\r\n#11 0x00007f2a422d1983 in gazebo::physics::World::LoadActor(std::shared_ptr<sdf::Element>, boost::shared_ptr<gazebo::physics::Base>) (this=0x5600f282b570, _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 47) = {...}, _parent=...) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:1140\r\n\r\nreceiveMutex locked here, std::lock_guard<std::recursive_mutex> lock(this->dataPtr->receiveMutex);\r\n#12 0x00007f2a422d84e0 in gazebo::physics::World::ProcessFactoryMsgs() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:2089\r\n\r\n#13 0x00007f2a422de3c6 in gazebo::physics::World::ProcessMessages() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:2679\r\n#14 0x00007f2a422cee49 in gazebo::physics::World::Step() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:689\r\n#15 0x00007f2a422ce0e3 in gazebo::physics::World::RunLoop() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:519\r\n#16 0x00007f2a42301e76 in std::__invoke_impl<void, void (gazebo::physics::World::*&)(), gazebo::physics::World*&>(std::__invoke_memfun_deref, void (gazebo::physics::World::*&)(), gazebo::physics::World*&) (__f=@0x5600f8ab9568: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7f2a422cdd82 <gazebo::physics::World::RunLoop()>, __t=@0x5600f8ab9578: 0x5600f282b570) at /usr/include/c++/7/bits/invoke.h:73\r\n#17 0x00007f2a422fff6a in std::__invoke<void (gazebo::physics::World::*&)(), gazebo::physics::World*&>(void (gazebo::physics::World::*&)(), gazebo::physics::World*&) (__fn=@0x5600f8ab9568: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7f2a422cdd82 <gazebo::physics::World::RunLoop()>, __args#0=@0x5600f8ab9578: 0x5600f282b570)\r\n    at /usr/include/c++/7/bits/invoke.h:95\r\n#18 0x00007f2a422fc355 in std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=0x5600f8ab9568, __args=...) at /usr/include/c++/7/functional:467\r\n#19 0x00007f2a422f7721 in std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>::operator()<, void>() (this=0x5600f8ab9568) at /usr/include/c++/7/functional:551\r\n#20 0x00007f2a422f2835 in std::__invoke_impl<void, std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>>(std::__invoke_other, std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>&&) (__f=...) at /usr/include/c++/7/bits/invoke.h:60\r\n#21 0x00007f2a422ea37c in std::__invoke<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>>(std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>&&) (__fn=...) at /usr/include/c++/7/bits/invoke.h:95\r\n#22 0x00007f2a42308748 in std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x5600f8ab9568) at /usr/include/c++/7/thread:234\r\n#23 0x00007f2a42307676 in std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > >::operator()() (this=0x5600f8ab9568) at /usr/include/c++/7/thread:243\r\n#24 0x00007f2a423058ec in std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > > >::_M_run() (this=0x5600f8ab9560) at /usr/include/c++/7/thread:186\r\n#25 0x00007f2a434a666f in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#26 0x00007f2a4280a6db in start_thread (arg=0x7f29823fa700) at pthread_create.c:463\r\n#27 0x00007f2a42f0188f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n```\r\n\r\n\u200c", "markup": "markdown", "html": "<p>deadlock can happen when loading actors during gazebo startup, receiveMutex and nodeMutex are locked by multiple threads at  the same time, causing a deadlock. It happens while thread 60 is processing factory messages and thread 5 is processing nodes.</p>\n<p>I can think of 2 ways to fix it:</p>\n<ol>\n<li>copy <code>dataPtr-&gt;factoryMsgs</code> to a temp container in <code>World::ProcessFactoryMsgs</code> so we don't have to hold on to <code>receiveMutex</code> lock.</li>\n<li>introduce a new mutex to protect <code>factoryMsgs</code>, so it doesn't share the same <code>receiveMutex</code> lock with many other containers.</li>\n</ol>\n<p>Not sure which solution is more preferred, or if there is a better solution.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"kr\">thread</span> <span class=\"mi\">5</span>\n<span class=\"p\">[</span><span class=\"n\">Switching</span> <span class=\"n\">to</span> <span class=\"kr\">thread</span> <span class=\"mi\">5</span> <span class=\"p\">(</span><span class=\"n\">Thread</span> <span class=\"mh\">0x7f2a03fff700</span> <span class=\"p\">(</span><span class=\"n\">LWP</span> <span class=\"mi\">7070</span><span class=\"p\">))]</span>\n<span class=\"cp\">#0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135</span>\n<span class=\"mi\">135</span>     <span class=\"k\">in</span> <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">sysdeps</span><span class=\"o\">/</span><span class=\"n\">unix</span><span class=\"o\">/</span><span class=\"n\">sysv</span><span class=\"o\">/</span><span class=\"n\">linux</span><span class=\"o\">/</span><span class=\"n\">x86_64</span><span class=\"o\">/</span><span class=\"n\">lowlevellock</span><span class=\"p\">.</span><span class=\"n\">S</span>\n<span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"n\">bt</span>\n<span class=\"cp\">#0  0x00007f2a4281410d in __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135</span>\n<span class=\"cp\">#1  0x00007f2a4280d098 in __GI___pthread_mutex_lock (mutex=0x5600f281b348) at ../nptl/pthread_mutex_lock.c:113</span>\n<span class=\"cp\">#2  0x00007f2a4492a97d in __gthread_mutex_lock(__gthread_mutex_t*) (__mutex=0x5600f281b348) at /usr/include</span><span class=\"cpf\">/x86_64-linux-gnu/c++/7/bits/gthr-default.h:748</span><span class=\"cp\"></span>\n<span class=\"cp\">#3  0x00007f2a4492a9cd in __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t*) (__mutex=0x5600f281b348) at /usr/include</span><span class=\"cpf\">/x86_64-linux-gnu/c++/7/bits/gthr-default.h:810</span><span class=\"cp\"></span>\n<span class=\"cp\">#4  0x00007f2a4492f10c in std::recursive_mutex::lock() (this=0x5600f281b348) at /usr/include</span><span class=\"cpf\">/c++/7/mutex:107</span><span class=\"cp\"></span>\n<span class=\"cp\">#5  0x00007f2a44931c42 in std::lock_guard&lt;std::recursive_mutex&gt;::lock_guard(std::recursive_mutex&amp;) (this=0x7f2a03ffd720, __m=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/std_mutex.h:162</span><span class=\"cp\"></span>\n\n<span class=\"n\">receiveMutex</span> <span class=\"n\">already</span> <span class=\"n\">locked</span> <span class=\"n\">at</span> <span class=\"n\">another</span> <span class=\"kr\">thread</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">lock_guard</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">recursive_mutex</span><span class=\"o\">&gt;</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">receiveMutex</span><span class=\"p\">);</span>\n<span class=\"cp\">#6  0x00007f2a422d3b96 in gazebo::physics::World::OnRequest(boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;) (this=0x5600f282b570, _msg=...) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:1500</span>\n\n<span class=\"cp\">#7  0x00007f2a4230409f in boost::_mfi::mf1&lt;void, gazebo::physics::World, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;::operator()(gazebo::physics::World*, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;) const (this=0x5600f61fce48, p=0x5600f282b570, a1=...) at /usr/include</span><span class=\"cpf\">/boost/bind/mem_fn_template.hpp:165</span><span class=\"cp\"></span>\n<span class=\"cp\">#8  0x00007f2a42302fe0 in boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::physics::World*&gt;, boost::arg&lt;1&gt; &gt;::operator()&lt;boost::_mfi::mf1&lt;void, gazebo::physics::World, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;, boost::_bi::rrlist1&lt;boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf1&lt;void, gazebo::physics::World, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;&amp;, boost::_bi::rrlist1&lt;boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;&amp;, int) (this=0x5600f61fce58, f=..., a=...) at /usr/include</span><span class=\"cpf\">/boost/bind/bind.hpp:319</span><span class=\"cp\"></span>\n<span class=\"cp\">#9  0x00007f2a423016af in boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::physics::World, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::physics::World*&gt;, boost::arg&lt;1&gt; &gt; &gt;::operator()&lt;boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;(boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;) (this=0x5600f61fce48, a1=...) at /usr/include</span><span class=\"cpf\">/boost/bind/bind.hpp:1306</span><span class=\"cp\"></span>\n<span class=\"cp\">#10 0x00007f2a422ff33f in boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::physics::World, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::physics::World*&gt;, boost::arg&lt;1&gt; &gt; &gt;, void, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;::invoke(boost::detail::function::function_buffer&amp;, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;) (function_obj_ptr=..., a0=...) at /usr/include</span><span class=\"cpf\">/boost/function/function_template.hpp:159</span><span class=\"cp\"></span>\n<span class=\"cp\">#11 0x00007f2a421a60cc in boost::function1&lt;void, boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;&gt;::operator()(boost::shared_ptr&lt;gazebo::msgs::Request const&gt; const&amp;) const (this=0x5600f61fce40, a0=...) at /usr/include</span><span class=\"cpf\">/boost/function/function_template.hpp:759</span><span class=\"cp\"></span>\n<span class=\"cp\">#12 0x00007f2a421a5982 in gazebo::transport::CallbackHelperT&lt;gazebo::msgs::Request&gt;::HandleData(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::function&lt;void (unsigned int)&gt;, unsigned int) (this=0x5600f61fce00, _newdata=&quot;\\b\\372\\024\\022\\nscene_info\\032&quot;, _cb=..., _id=0)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">teokp</span><span class=\"o\">/</span><span class=\"n\">source</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">CallbackHelper</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">149</span>\n<span class=\"cp\">#13 0x00007f2a4177b552 in gazebo::transport::Node::ProcessIncoming() (this=0x5600f5cfae00) at /home/teokp/source/gazebo/gazebo/gazebo/transport/Node.cc:260</span>\n\n<span class=\"n\">nodeMutex</span> <span class=\"n\">is</span> <span class=\"n\">locked</span> <span class=\"n\">here</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">recursive_mutex</span><span class=\"o\">::</span><span class=\"n\">scoped_lock</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">nodeMutex</span><span class=\"p\">);</span>\n<span class=\"cp\">#14 0x00007f2a41797954 in gazebo::transport::TopicManager::ProcessNodes(bool) (this=0x7f2a44b78360 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t&gt;, _onlyOut=false) at /home/teokp/source/gazebo/gazebo/gazebo/transport/TopicManager.cc:199</span>\n\n<span class=\"cp\">#15 0x00007f2a41768dd2 in gazebo::transport::ConnectionManager::RunUpdate() (this=0x7f2a44b78140 &lt;SingletonT&lt;gazebo::transport::ConnectionManager&gt;::GetInstance()::t&gt;) at /home/teokp/source/gazebo/gazebo/gazebo/transport/ConnectionManager.cc:289</span>\n<span class=\"cp\">#16 0x00007f2a41768fa6 in gazebo::transport::ConnectionManager::Run() (this=0x7f2a44b78140 &lt;SingletonT&lt;gazebo::transport::ConnectionManager&gt;::GetInstance()::t&gt;) at /home/teokp/source/gazebo/gazebo/gazebo/transport/ConnectionManager.cc:320</span>\n<span class=\"cp\">#17 0x00007f2a41775537 in boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;::operator()(gazebo::transport::ConnectionManager*) const (this=0x5600f1c7ea98, p=0x7f2a44b78140 &lt;SingletonT&lt;gazebo::transport::ConnectionManager&gt;::GetInstance()::t&gt;) at /usr/include</span><span class=\"cpf\">/boost/bind/mem_fn_template.hpp:49</span><span class=\"cp\"></span>\n<span class=\"cp\">#18 0x00007f2a41774901 in boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::transport::ConnectionManager*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;, boost::_bi::list0&gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;&amp;, boost::_bi::list0&amp;, int) (this=0x5600f1c7eaa8, f=..., a=...)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">boost</span><span class=\"o\">/</span><span class=\"n\">bind</span><span class=\"o\">/</span><span class=\"n\">bind</span><span class=\"p\">.</span><span class=\"nl\">hpp</span><span class=\"p\">:</span><span class=\"mi\">259</span>\n<span class=\"cp\">#19 0x00007f2a417735d6 in boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::transport::ConnectionManager*&gt; &gt; &gt;::operator()() (this=0x5600f1c7ea98) at /usr/include</span><span class=\"cpf\">/boost/bind/bind.hpp:1294</span><span class=\"cp\"></span>\n<span class=\"cp\">#20 0x00007f2a417a914c in boost::detail::thread_data&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::transport::ConnectionManager*&gt; &gt; &gt; &gt;::run() (this=0x5600f1c7e8e0) at /usr/include</span><span class=\"cpf\">/boost/thread/detail/thread.hpp:116</span><span class=\"cp\"></span>\n<span class=\"cp\">#21 0x00007f2a3f563bcd in  () at /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.65.1</span>\n<span class=\"cp\">#22 0x00007f2a4280a6db in start_thread (arg=0x7f2a03fff700) at pthread_create.c:463</span>\n<span class=\"cp\">#23 0x00007f2a42f0188f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span>\n\n\n\n<span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"kr\">thread</span> <span class=\"mi\">60</span>\n<span class=\"p\">[</span><span class=\"n\">Switching</span> <span class=\"n\">to</span> <span class=\"kr\">thread</span> <span class=\"mi\">60</span> <span class=\"p\">(</span><span class=\"n\">Thread</span> <span class=\"mh\">0x7f29823fa700</span> <span class=\"p\">(</span><span class=\"n\">LWP</span> <span class=\"mi\">7162</span><span class=\"p\">))]</span>\n<span class=\"cp\">#0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135</span>\n<span class=\"mi\">135</span>     <span class=\"k\">in</span> <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">sysdeps</span><span class=\"o\">/</span><span class=\"n\">unix</span><span class=\"o\">/</span><span class=\"n\">sysv</span><span class=\"o\">/</span><span class=\"n\">linux</span><span class=\"o\">/</span><span class=\"n\">x86_64</span><span class=\"o\">/</span><span class=\"n\">lowlevellock</span><span class=\"p\">.</span><span class=\"n\">S</span>\n<span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"n\">bt</span>\n<span class=\"cp\">#0  0x00007f2a4281410d in __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135</span>\n<span class=\"cp\">#1  0x00007f2a4280d098 in __GI___pthread_mutex_lock (mutex=0x7f2a44b78418 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t+184&gt;) at ../nptl/pthread_mutex_lock.c:113</span>\n<span class=\"cp\">#2  0x00007f2a41742cf8 in boost::recursive_mutex::lock() (this=0x7f2a44b78418 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t+184&gt;) at /usr/include</span><span class=\"cpf\">/boost/thread/pthread/recursive_mutex.hpp:113</span><span class=\"cp\"></span>\n<span class=\"cp\">#3  0x00007f2a41755b65 in boost::unique_lock&lt;boost::recursive_mutex&gt;::lock() (this=0x7f29823f7c60) at /usr/include</span><span class=\"cpf\">/boost/thread/lock_types.hpp:346</span><span class=\"cp\"></span>\n<span class=\"cp\">#4  0x00007f2a41750c8b in boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock(boost::recursive_mutex&amp;) (this=0x7f29823f7c60, m_=...) at /usr/include</span><span class=\"cpf\">/boost/thread/lock_types.hpp:124</span><span class=\"cp\"></span>\n\n<span class=\"n\">nodeMutex</span> <span class=\"n\">is</span> <span class=\"n\">already</span> <span class=\"n\">locked</span> <span class=\"n\">at</span> <span class=\"kr\">thread</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">deadlock</span> <span class=\"n\">happens</span> <span class=\"n\">here</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">recursive_mutex</span><span class=\"o\">::</span><span class=\"n\">scoped_lock</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">nodeMutex</span><span class=\"p\">);</span>\n<span class=\"cp\">#5  0x00007f2a417973e6 in gazebo::transport::TopicManager::AddNode(boost::shared_ptr&lt;gazebo::transport::Node&gt;) (this=0x7f2a44b78360 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t&gt;, _node=...) at /home/teokp/source/gazebo/gazebo/gazebo/transport/TopicManager.cc:103</span>\n\n<span class=\"cp\">#6  0x00007f2a4177ac77 in gazebo::transport::Node::PrivateInit(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, gazebo::common::Time const&amp;, bool) (this=0x7f293e4e4b40, _space=&quot;default&quot;, _maxWait=..., _fallbackToDefault=true) at /home/teokp/source/gazebo/gazebo/gazebo/transport/Node.cc:141</span>\n<span class=\"cp\">#7  0x00007f2a4177a947 in gazebo::transport::Node::Init(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (this=0x7f293e4e4b40, _space=&quot;default&quot;) at /home/teokp/source/gazebo/gazebo/gazebo/transport/Node.cc:88</span>\n<span class=\"cp\">#8  0x00007f2a421d21be in gazebo::physics::Entity::Load(std::shared_ptr&lt;sdf::Element&gt;) (this=0x7f293e47af20, _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 47) = {...}) at /home/teokp/source/gazebo/gazebo/gazebo/physics/Entity.cc:93</span>\n<span class=\"cp\">#9  0x00007f2a42259b51 in gazebo::physics::Model::Load(std::shared_ptr&lt;sdf::Element&gt;) (this=0x7f293e47af20, _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 47) = {...}) at /home/teokp/source/gazebo/gazebo/gazebo/physics/Model.cc:79</span>\n<span class=\"cp\">#10 0x00007f2a4217dade in gazebo::physics::Actor::Load(std::shared_ptr&lt;sdf::Element&gt;) (this=0x7f293e47af20, _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 47) = {...}) at /home/teokp/source/gazebo/gazebo/gazebo/physics/Actor.cc:130</span>\n<span class=\"cp\">#11 0x00007f2a422d1983 in gazebo::physics::World::LoadActor(std::shared_ptr&lt;sdf::Element&gt;, boost::shared_ptr&lt;gazebo::physics::Base&gt;) (this=0x5600f282b570, _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 47) = {...}, _parent=...) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:1140</span>\n\n<span class=\"n\">receiveMutex</span> <span class=\"n\">locked</span> <span class=\"n\">here</span><span class=\"p\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">lock_guard</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">recursive_mutex</span><span class=\"o\">&gt;</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">receiveMutex</span><span class=\"p\">);</span>\n<span class=\"cp\">#12 0x00007f2a422d84e0 in gazebo::physics::World::ProcessFactoryMsgs() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:2089</span>\n\n<span class=\"cp\">#13 0x00007f2a422de3c6 in gazebo::physics::World::ProcessMessages() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:2679</span>\n<span class=\"cp\">#14 0x00007f2a422cee49 in gazebo::physics::World::Step() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:689</span>\n<span class=\"cp\">#15 0x00007f2a422ce0e3 in gazebo::physics::World::RunLoop() (this=0x5600f282b570) at /home/teokp/source/gazebo/gazebo/gazebo/physics/World.cc:519</span>\n<span class=\"cp\">#16 0x00007f2a42301e76 in std::__invoke_impl&lt;void, void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;&gt;(std::__invoke_memfun_deref, void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;) (__f=@0x5600f8ab9568: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7f2a422cdd82 &lt;gazebo::physics::World::RunLoop()&gt;, __t=@0x5600f8ab9578: 0x5600f282b570) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:73</span><span class=\"cp\"></span>\n<span class=\"cp\">#17 0x00007f2a422fff6a in std::__invoke&lt;void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;&gt;(void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;) (__fn=@0x5600f8ab9568: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7f2a422cdd82 &lt;gazebo::physics::World::RunLoop()&gt;, __args#0=@0x5600f8ab9578: 0x5600f282b570)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">invoke</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">95</span>\n<span class=\"cp\">#18 0x00007f2a422fc355 in std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;::__call&lt;void, , 0ul&gt;(std::tuple&lt;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul&gt;) (this=0x5600f8ab9568, __args=...) at /usr/include</span><span class=\"cpf\">/c++/7/functional:467</span><span class=\"cp\"></span>\n<span class=\"cp\">#19 0x00007f2a422f7721 in std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;::operator()&lt;, void&gt;() (this=0x5600f8ab9568) at /usr/include</span><span class=\"cpf\">/c++/7/functional:551</span><span class=\"cp\"></span>\n<span class=\"cp\">#20 0x00007f2a422f2835 in std::__invoke_impl&lt;void, std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&gt;(std::__invoke_other, std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&amp;&amp;) (__f=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:60</span><span class=\"cp\"></span>\n<span class=\"cp\">#21 0x00007f2a422ea37c in std::__invoke&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&gt;(std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&amp;&amp;) (__fn=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:95</span><span class=\"cp\"></span>\n<span class=\"cp\">#22 0x00007f2a42308748 in std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt;::_M_invoke&lt;0ul&gt;(std::_Index_tuple&lt;0ul&gt;) (this=0x5600f8ab9568) at /usr/include</span><span class=\"cpf\">/c++/7/thread:234</span><span class=\"cp\"></span>\n<span class=\"cp\">#23 0x00007f2a42307676 in std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt;::operator()() (this=0x5600f8ab9568) at /usr/include</span><span class=\"cpf\">/c++/7/thread:243</span><span class=\"cp\"></span>\n<span class=\"cp\">#24 0x00007f2a423058ec in std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt; &gt;::_M_run() (this=0x5600f8ab9560) at /usr/include</span><span class=\"cpf\">/c++/7/thread:186</span><span class=\"cp\"></span>\n<span class=\"cp\">#25 0x00007f2a434a666f in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6</span>\n<span class=\"cp\">#26 0x00007f2a4280a6db in start_thread (arg=0x7f29823fa700) at pthread_create.c:463</span>\n<span class=\"cp\">#27 0x00007f2a42f0188f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span>\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "9.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/242746.json"}}}, "edited_on": null, "created_on": "2019-12-09T03:13:39.733834+00:00", "milestone": null, "updated_on": "2019-12-27T17:53:54.616203+00:00", "type": "issue", "id": 2679}