{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/279/comments/2563559.json"}, "html": {"href": "#!/osrf/gazebo/issues/279#comment-2563559"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/279.json"}}, "type": "issue", "id": 279, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DEBUG or Debug?"}, "content": {"raw": "I agree with Thomas on both points:\n\n* `CMAKE_BUILD_TYPE` should be specified in CamelCase.\n* We shouldn't need to do any flag manipulation based on the value of `CMAKE_BUILD_TYPE`.  CMake is supposed to do all that for us.\n\n@hsu, @nkoenig: do you know why we have our own build-type flag manipulation logic?  Was something not working properly with the default behavior of CMake?\n\nAlso, this bit of code from our top-level `CMakeLists.txt` looks dangerous:\n\n    string(TOUPPER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE)\n\nI'm not sure whether CMake will behave properly if we modify the casing on one of its variables like that (perhaps that led to the need to introduce our own flag logic).", "markup": "markdown", "html": "<p>I agree with Thomas on both points:</p>\n<ul>\n<li><code>CMAKE_BUILD_TYPE</code> should be specified in CamelCase.</li>\n<li>We shouldn't need to do any flag manipulation based on the value of <code>CMAKE_BUILD_TYPE</code>.  CMake is supposed to do all that for us.</li>\n</ul>\n<p>@hsu, @nkoenig: do you know why we have our own build-type flag manipulation logic?  Was something not working properly with the default behavior of CMake?</p>\n<p>Also, this bit of code from our top-level <code>CMakeLists.txt</code> looks dangerous:</p>\n<div class=\"codehilite\"><pre><span></span>string(TOUPPER <span class=\"cp\">${</span><span class=\"n\">CMAKE_BUILD_TYPE</span><span class=\"cp\">}</span> CMAKE_BUILD_TYPE)\n</pre></div>\n\n\n<p>I'm not sure whether CMake will behave properly if we modify the casing on one of its variables like that (perhaps that led to the need to introduce our own flag logic).</p>", "type": "rendered"}, "created_on": "2012-12-06T16:20:23.893199+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 2563559}