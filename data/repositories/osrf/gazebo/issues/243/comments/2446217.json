{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/243/comments/2446217.json"}, "html": {"href": "#!/osrf/gazebo/issues/243#comment-2446217"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/243.json"}}, "type": "issue", "id": 243, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "GetLinearAcceleration always returns zeros for ODE"}, "content": {"raw": "This appears to be an issue with the way we pull accelerations from ODE. [GetWorldLinearAccel() in Link.cc](#!/osrf/gazebo/src/d5aeea2820c0/gazebo/physics/Link.cc?at=default#cl-559) calls [GetWorldForce in ODELink.cc](#!/osrf/gazebo/src/d5aeea2820c0/gazebo/physics/ode/ODELink.cc?at=default#cl-458) and divides by the mass of the link.\nIn turn, GetWorldForce calls [ODE function dBodyGetForce](#!/osrf/gazebo/src/d5aeea2820c0dbab92c6d689ee697ebec3fea2e1/deps/opende/src/ode.cpp?at=default#cl-680). This function reads from a force accumulator variable `facc` that gets cleared after every timestep (see [deps/opende/src/step.cpp](#!/osrf/gazebo/src/d5aeea2820c0dbab92c6d689ee697ebec3fea2e1/deps/opende/src/step.cpp?at=default#cl-881)).\n\nI think we would need to modify the step functions in the [deps/opende/src folder](#!/osrf/gazebo/src/d5aeea2820c0/deps/opende/src?at=default) so that they save the acceleration from the previous step in a variable that we could access.\n", "markup": "markdown", "html": "<p>This appears to be an issue with the way we pull accelerations from ODE. <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d5aeea2820c0/gazebo/physics/Link.cc?at=default#cl-559\" rel=\"nofollow\">GetWorldLinearAccel() in Link.cc</a> calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d5aeea2820c0/gazebo/physics/ode/ODELink.cc?at=default#cl-458\" rel=\"nofollow\">GetWorldForce in ODELink.cc</a> and divides by the mass of the link.\nIn turn, GetWorldForce calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d5aeea2820c0dbab92c6d689ee697ebec3fea2e1/deps/opende/src/ode.cpp?at=default#cl-680\" rel=\"nofollow\">ODE function dBodyGetForce</a>. This function reads from a force accumulator variable <code>facc</code> that gets cleared after every timestep (see <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d5aeea2820c0dbab92c6d689ee697ebec3fea2e1/deps/opende/src/step.cpp?at=default#cl-881\" rel=\"nofollow\">deps/opende/src/step.cpp</a>).</p>\n<p>I think we would need to modify the step functions in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d5aeea2820c0/deps/opende/src?at=default\" rel=\"nofollow\">deps/opende/src folder</a> so that they save the acceleration from the previous step in a variable that we could access.</p>", "type": "rendered"}, "created_on": "2012-11-21T21:35:35.475007+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 2446217}