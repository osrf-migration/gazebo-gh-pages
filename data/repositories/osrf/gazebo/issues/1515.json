{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1515/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1515.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1515/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1515/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1515/j_orig-not-correct-inside-ode-quickstep"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1515/vote"}}, "reporter": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "title": "J_orig not correct inside ODE quickstep PGS_LCP solver", "component": null, "votes": 0, "watches": 4, "content": {"raw": "The `J_orig` is allocated [here](#!/osrf/gazebo/src/25f2e961e70803d36301ac22667492cbcc2def25/deps/opende/src/quickstep.cpp?at=default#cl-261), to keep a clean copy of `J`, but we didn't copy the values in `J` to `J_orig` after we create `J`\r\n\r\nThe `J_orig` is passed to call the `PGS_LCP` [here](#!/osrf/gazebo/src/25f2e961e70803d36301ac22667492cbcc2def25/deps/opende/src/quickstep.cpp?at=default#cl-485), with wrong values. \r\n\r\nInside `PGS_LCP` function, `J_orig` is used [here](#!/osrf/gazebo/src/25f2e961e70803d36301ac22667492cbcc2def25/deps/opende/src/quickstep_pgs_lcp.cpp?at=default#cl-391), which is inside the preconditioning computation, of which `precon_iteration = 0`, so it doesn't affect the performance. \r\n\r\n\r\nOnce preconditioning is enabled, there would be an issue. I will make a pull request on this", "markup": "markdown", "html": "<p>The <code>J_orig</code> is allocated <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/25f2e961e70803d36301ac22667492cbcc2def25/deps/opende/src/quickstep.cpp?at=default#cl-261\" rel=\"nofollow\">here</a>, to keep a clean copy of <code>J</code>, but we didn't copy the values in <code>J</code> to <code>J_orig</code> after we create <code>J</code></p>\n<p>The <code>J_orig</code> is passed to call the <code>PGS_LCP</code> <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/25f2e961e70803d36301ac22667492cbcc2def25/deps/opende/src/quickstep.cpp?at=default#cl-485\" rel=\"nofollow\">here</a>, with wrong values. </p>\n<p>Inside <code>PGS_LCP</code> function, <code>J_orig</code> is used <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/25f2e961e70803d36301ac22667492cbcc2def25/deps/opende/src/quickstep_pgs_lcp.cpp?at=default#cl-391\" rel=\"nofollow\">here</a>, which is inside the preconditioning computation, of which <code>precon_iteration = 0</code>, so it doesn't affect the performance. </p>\n<p>Once preconditioning is enabled, there would be an issue. I will make a pull request on this</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-03-13T02:27:54.688194+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:44.446152+00:00", "type": "issue", "id": 1515}