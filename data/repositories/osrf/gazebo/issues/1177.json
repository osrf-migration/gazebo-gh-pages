{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1177/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1177.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1177/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1177/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1177/removing-moving-model-with-ode-friction"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1177/vote"}}, "reporter": {"display_name": "Markus Bader", "uuid": "{c2f26d4b-d79b-4321-8a1c-9b9be4b67cac}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2f26d4b-d79b-4321-8a1c-9b9be4b67cac%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2f26d4b-d79b-4321-8a1c-9b9be4b67cac%7D/"}, "avatar": {"href": "https://bitbucket.org/account/moresun/avatar/"}}, "nickname": "moresun", "type": "user", "account_id": null}, "title": "removing moving model with ode friction fails", "component": {"name": "physics::ODEPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122883.json"}}}, "votes": 1, "watches": 4, "content": {"raw": "Hi\r\n\r\nI am using gazebo version 2.2.2.\r\nI wrote a world plug-in and this plug-in is able to delete models\r\nsee [answers.gazebosim.org]( http://answers.gazebosim.org/question/5887/how-to-delete-a-model-with-an-world-plugin) but\r\nif I have a object moving and an ode friction defined I am getting\r\nthe following msg and the gazebo server crashes\r\n\r\n\r\n```\r\n#!c++\r\n\r\n***** Internal Program Error - assertion (self->inertial != __null)\r\nfailed in static void gazebo::physics::ODELink::MoveCallback(dBodyID):\r\n/tmp/buildd/gazebo-current-2.2.2/gazebo/physics/ode/ODELink.cc(183):\r\nInertial pointer is NULL\r\nAborted\r\n```\r\n\r\n\r\nRemoving the object with ModelPtr::Fini() right after it was spawned works\r\nbut if the objects starts moving I am getting the msg above.\r\n\r\n\r\nattached you will find an code sample to reproduce the problem.\r\n\r\n\r\nGreetings\r\n\r\nMarkus\r\n\r\n\r\n```\r\n#!c++\r\n#include \"gazebo/physics/physics.hh\"\r\n#include \"gazebo/common/common.hh\"\r\n#include \"gazebo/gazebo.hh\"\r\n\r\nnamespace gazebo\r\n{\r\nclass FactoryAndFini : public WorldPlugin\r\n{\r\n    physics::WorldPtr world_;\r\n    boost::shared_ptr<boost::thread> removeThead_;\r\n    boost::shared_ptr<boost::thread> moveThead_;\r\npublic:\r\n    void Load(physics::WorldPtr _parent, sdf::ElementPtr /*_sdf*/)\r\n    {\r\n        this->world_ = _parent;\r\n        add(\"object_static\", math::Pose(0,0,0,0,0,0), /*radius*/ 0.3, /*height*/ 2.0, /*mass*/ 10, /*mu*/ 0.0, /*mu2*/ 0.0 );\r\n        std::cout << \"added object_static\" << std::endl;\r\n        add(\"object_moving_no_mu\", math::Pose(1,0,0,0,0,0), /*radius*/ 0.3, /*height*/ 2.0, /*mass*/ 10, /*mu*/ 0.0, /*mu2*/ 0.0 );\r\n        std::cout << \"added object_moving_no_mu\" << std::endl;\r\n        add(\"object_moving_with_mu\", math::Pose(2,0,0,0,0,0), /*radius*/ 0.3, /*height*/ 2.0, /*mass*/ 10, /*mu*/ 0.1, /*mu2*/ 0.0 );\r\n        std::cout << \"added object_moving_with_mu\" << std::endl;\r\n        \r\n        \r\n        removeThead_ = boost::shared_ptr<boost::thread>(new boost::thread(&FactoryAndFini::removeTheadFnc, this));\r\n        moveThead_ = boost::shared_ptr<boost::thread>(new boost::thread(&FactoryAndFini::moveTheadFnc, this));\r\n    };\r\n\r\n    void moveTheadFnc() {\r\n        sleep(1);\r\n        physics::ModelPtr p;\r\n        p = world_->GetModel(\"object_moving_no_mu\");\r\n        if(p) {\r\n          std::cout << \"moving object_moving_no_mu\" << std::endl;\r\n          p->SetLinearVel(math::Vector3(0.1, 0, 0));\r\n        }   \r\n        p = world_->GetModel(\"object_moving_with_mu\");\r\n        if(p) {\r\n          std::cout << \"moving object_moving_with_mu\" << std::endl;\r\n          p->SetLinearVel(math::Vector3(0.1, 0, 0));\r\n        }      \r\n    }\r\n    void removeTheadFnc() {\r\n\r\n        sleep(5);\r\n        physics::ModelPtr p;\r\n        std::cout << \"removing object_static\" << std::endl;\r\n        p =  world_->GetModel(\"object_static\");\r\n        if(p){\r\n          p->Fini(); \r\n          std::cout << \"done removing object_static\" << std::endl;\r\n        }\r\n        sleep(1); // This works \r\n        std::cout << \"removing object_moving_no_mu\" << std::endl;\r\n        p =  world_->GetModel(\"object_moving_no_mu\");\r\n        if(p){\r\n          p->Fini();  // This works sometimes\r\n          std::cout << \"done removing object_moving_no_mu\" << std::endl;\r\n        }\r\n        sleep(1);\r\n        std::cout << \"removing object_moving_with_mu\" << std::endl;\r\n        p =  world_->GetModel(\"object_moving_with_mu\");\r\n        if(p){\r\n          p->Fini();  // This fails allways\r\n          std::cout << \"done removing object_moving_with_mu\" << std::endl;\r\n        }\r\n    }\r\n\r\n    void add(std::string name, const math::Pose &pose, double radius, double length, double mass, double mu, double mu2) {\r\n        std::string modelStr(\r\n            \"<sdf version ='1.4'>\\\r\n          <model name ='${name}'>\\\r\n            <pose>${pose}</pose>\\\r\n            <link name ='link'>\\\r\n              <pose>0 0 0 0 0 0</pose>\\\r\n              <collision name ='collision'>\\\r\n                <geometry>\\\r\n                  <cylinder>\\\r\n                    <radius>${radius}</radius>\\\r\n                    <length>${length}</length>\\\r\n                  </cylinder>\\\r\n                </geometry>\\\r\n                <surface>\\\r\n                  <friction>\\\r\n                    <ode>\\\r\n                      <mu>${mu}</mu>\\\r\n                      <mu2>${mu2}</mu2>\\\r\n                    </ode>\\\r\n                  </friction>\\\r\n                </surface>\\\r\n              </collision>\\\r\n              <visual name='visual'>\\\r\n                <geometry>\\\r\n                  <cylinder>\\\r\n                    <radius>${radius}</radius>\\\r\n                    <length>${length}</length>\\\r\n                  </cylinder>\\\r\n                </geometry>\\\r\n              </visual>\\\r\n              <inertial>\\\r\n                <mass>${mass}</mass>\\\r\n                <pose>0 0 0 0 0 0</pose>\\\r\n                <inertia>\\\r\n                  <ixx>${ixx}</ixx>\\\r\n                  <ixy>0.0</ixy>\\\r\n                  <ixz>0.0</ixz>\\\r\n                  <iyy>${iyy}</iyy>\\\r\n                  <iyz>0.0</iyz>\\\r\n                  <izz>${izz}</izz>\\\r\n                </inertia>\\\r\n              </inertial>\\\r\n            </link>\\\r\n          </model>\\\r\n        </sdf>\");\r\n\r\n        std::stringstream poseStr;\r\n        double ixx = 0.0833333 * mass * (3 * radius * radius + length * length);\r\n        double iyy = 0.0833333 * mass * (3 * radius * radius + length * length);\r\n        double izz = 0.5 * mass * radius * radius;\r\n        poseStr << pose.pos.x << \" \" << pose.pos.y << \" \" << pose.pos.z << \" 0 0 0\";\r\n        boost::replace_all(modelStr, \"${name}\", name);\r\n        boost::replace_all(modelStr, \"${pose}\", poseStr.str());\r\n        boost::replace_all(modelStr, \"${radius}\", boost::lexical_cast<std::string>(radius));\r\n        boost::replace_all(modelStr, \"${length}\", boost::lexical_cast<std::string>(length));\r\n        boost::replace_all(modelStr, \"${mass}\", boost::lexical_cast<std::string>(mass));\r\n        boost::replace_all(modelStr, \"${ixx}\", boost::lexical_cast<std::string>( ixx));\r\n        boost::replace_all(modelStr, \"${iyy}\", boost::lexical_cast<std::string>( iyy));\r\n        boost::replace_all(modelStr, \"${izz}\", boost::lexical_cast<std::string>(izz));\r\n        boost::replace_all(modelStr, \"${mu}\", boost::lexical_cast<std::string>( mu));\r\n        boost::replace_all(modelStr, \"${mu2}\", boost::lexical_cast<std::string>(mu2));\r\n        sdf::SDF sdfModel;\r\n        sdfModel.SetFromString(modelStr);\r\n        this->world_->InsertModelSDF(sdfModel);\r\n    }\r\n};\r\n\r\n// Register this plugin with the simulator\r\nGZ_REGISTER_WORLD_PLUGIN(FactoryAndFini)\r\n}\r\n\r\n\r\n```\r\n\r\n```\r\n#!c++\r\n<?xml version=\"1.0\"?>\r\n<sdf version=\"1.4\">\r\n  <world name=\"default\">\r\n    <include>\r\n      <uri>model://ground_plane</uri>\r\n    </include>\r\n\r\n    <include>\r\n      <uri>model://sun</uri>\r\n    </include>\r\n\r\n    <plugin name=\"factory_and_fini\" filename=\"libfactory_and_fini.so\"/>\r\n  </world>\r\n</sdf>\r\n\r\n```\r\n", "markup": "markdown", "html": "<p>Hi</p>\n<p>I am using gazebo version 2.2.2.\nI wrote a world plug-in and this plug-in is able to delete models\nsee <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/5887/how-to-delete-a-model-with-an-world-plugin\" rel=\"nofollow\">answers.gazebosim.org</a> but\nif I have a object moving and an ode friction defined I am getting\nthe following msg and the gazebo server crashes</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">*****</span> <span class=\"n\">Internal</span> <span class=\"n\">Program</span> <span class=\"n\">Error</span> <span class=\"o\">-</span> <span class=\"n\">assertion</span> <span class=\"p\">(</span><span class=\"n\">self</span><span class=\"o\">-&gt;</span><span class=\"n\">inertial</span> <span class=\"o\">!=</span> <span class=\"n\">__null</span><span class=\"p\">)</span>\n<span class=\"n\">failed</span> <span class=\"n\">in</span> <span class=\"k\">static</span> <span class=\"kt\">void</span> <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ODELink</span><span class=\"o\">::</span><span class=\"n\">MoveCallback</span><span class=\"p\">(</span><span class=\"n\">dBodyID</span><span class=\"p\">)</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">buildd</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"n\">current</span><span class=\"o\">-</span><span class=\"mf\">2.2.2</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">ode</span><span class=\"o\">/</span><span class=\"n\">ODELink</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"p\">(</span><span class=\"mi\">183</span><span class=\"p\">)</span><span class=\"o\">:</span>\n<span class=\"n\">Inertial</span> <span class=\"n\">pointer</span> <span class=\"n\">is</span> <span class=\"nb\">NULL</span>\n<span class=\"n\">Aborted</span>\n</pre></div>\n\n\n<p>Removing the object with ModelPtr::Fini() right after it was spawned works\nbut if the objects starts moving I am getting the msg above.</p>\n<p>attached you will find an code sample to reproduce the problem.</p>\n<p>Greetings</p>\n<p>Markus</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&quot;gazebo/physics/physics.hh&quot;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&quot;gazebo/common/common.hh&quot;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&quot;gazebo/gazebo.hh&quot;</span><span class=\"cp\"></span>\n\n<span class=\"k\">namespace</span> <span class=\"n\">gazebo</span>\n<span class=\"p\">{</span>\n<span class=\"k\">class</span> <span class=\"nc\">FactoryAndFini</span> <span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">WorldPlugin</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">WorldPtr</span> <span class=\"n\">world_</span><span class=\"p\">;</span>\n    <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"o\">&gt;</span> <span class=\"n\">removeThead_</span><span class=\"p\">;</span>\n    <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"o\">&gt;</span> <span class=\"n\">moveThead_</span><span class=\"p\">;</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n    <span class=\"kt\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">WorldPtr</span> <span class=\"n\">_parent</span><span class=\"p\">,</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"cm\">/*_sdf*/</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world_</span> <span class=\"o\">=</span> <span class=\"n\">_parent</span><span class=\"p\">;</span>\n        <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s\">&quot;object_static&quot;</span><span class=\"p\">,</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"cm\">/*radius*/</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"cm\">/*height*/</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"cm\">/*mass*/</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"cm\">/*mu*/</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"cm\">/*mu2*/</span> <span class=\"mf\">0.0</span> <span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;added object_static&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s\">&quot;object_moving_no_mu&quot;</span><span class=\"p\">,</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"cm\">/*radius*/</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"cm\">/*height*/</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"cm\">/*mass*/</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"cm\">/*mu*/</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"cm\">/*mu2*/</span> <span class=\"mf\">0.0</span> <span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;added object_moving_no_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s\">&quot;object_moving_with_mu&quot;</span><span class=\"p\">,</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"cm\">/*radius*/</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"cm\">/*height*/</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"cm\">/*mass*/</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"cm\">/*mu*/</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"cm\">/*mu2*/</span> <span class=\"mf\">0.0</span> <span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;added object_moving_with_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n\n\n        <span class=\"n\">removeThead_</span> <span class=\"o\">=</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">FactoryAndFini</span><span class=\"o\">::</span><span class=\"n\">removeTheadFnc</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">));</span>\n        <span class=\"n\">moveThead_</span> <span class=\"o\">=</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">FactoryAndFini</span><span class=\"o\">::</span><span class=\"n\">moveTheadFnc</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">));</span>\n    <span class=\"p\">};</span>\n\n    <span class=\"kt\">void</span> <span class=\"nf\">moveTheadFnc</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n        <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ModelPtr</span> <span class=\"n\">p</span><span class=\"p\">;</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;object_moving_no_mu&quot;</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;moving object_moving_no_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n          <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">SetLinearVel</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>   \n        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;object_moving_with_mu&quot;</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;moving object_moving_with_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n          <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">SetLinearVel</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>      \n    <span class=\"p\">}</span>\n    <span class=\"kt\">void</span> <span class=\"nf\">removeTheadFnc</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">);</span>\n        <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ModelPtr</span> <span class=\"n\">p</span><span class=\"p\">;</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;removing object_static&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span>  <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;object_static&quot;</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">){</span>\n          <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">Fini</span><span class=\"p\">();</span> \n          <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;done removing object_static&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span> <span class=\"c1\">// This works </span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;removing object_moving_no_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span>  <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;object_moving_no_mu&quot;</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">){</span>\n          <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">Fini</span><span class=\"p\">();</span>  <span class=\"c1\">// This works sometimes</span>\n          <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;done removing object_moving_no_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;removing object_moving_with_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span>  <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;object_moving_with_mu&quot;</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">){</span>\n          <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">Fini</span><span class=\"p\">();</span>  <span class=\"c1\">// This fails allways</span>\n          <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;done removing object_moving_with_mu&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kt\">void</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span> <span class=\"o\">&amp;</span><span class=\"n\">pose</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">mass</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">mu2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">modelStr</span><span class=\"p\">(</span>\n            <span class=\"s\">&quot;&lt;sdf version =&#39;1.4&#39;&gt;\\</span>\n<span class=\"s\">          &lt;model name =&#39;${name}&#39;&gt;\\</span>\n<span class=\"s\">            &lt;pose&gt;${pose}&lt;/pose&gt;\\</span>\n<span class=\"s\">            &lt;link name =&#39;link&#39;&gt;\\</span>\n<span class=\"s\">              &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;\\</span>\n<span class=\"s\">              &lt;collision name =&#39;collision&#39;&gt;\\</span>\n<span class=\"s\">                &lt;geometry&gt;\\</span>\n<span class=\"s\">                  &lt;cylinder&gt;\\</span>\n<span class=\"s\">                    &lt;radius&gt;${radius}&lt;/radius&gt;\\</span>\n<span class=\"s\">                    &lt;length&gt;${length}&lt;/length&gt;\\</span>\n<span class=\"s\">                  &lt;/cylinder&gt;\\</span>\n<span class=\"s\">                &lt;/geometry&gt;\\</span>\n<span class=\"s\">                &lt;surface&gt;\\</span>\n<span class=\"s\">                  &lt;friction&gt;\\</span>\n<span class=\"s\">                    &lt;ode&gt;\\</span>\n<span class=\"s\">                      &lt;mu&gt;${mu}&lt;/mu&gt;\\</span>\n<span class=\"s\">                      &lt;mu2&gt;${mu2}&lt;/mu2&gt;\\</span>\n<span class=\"s\">                    &lt;/ode&gt;\\</span>\n<span class=\"s\">                  &lt;/friction&gt;\\</span>\n<span class=\"s\">                &lt;/surface&gt;\\</span>\n<span class=\"s\">              &lt;/collision&gt;\\</span>\n<span class=\"s\">              &lt;visual name=&#39;visual&#39;&gt;\\</span>\n<span class=\"s\">                &lt;geometry&gt;\\</span>\n<span class=\"s\">                  &lt;cylinder&gt;\\</span>\n<span class=\"s\">                    &lt;radius&gt;${radius}&lt;/radius&gt;\\</span>\n<span class=\"s\">                    &lt;length&gt;${length}&lt;/length&gt;\\</span>\n<span class=\"s\">                  &lt;/cylinder&gt;\\</span>\n<span class=\"s\">                &lt;/geometry&gt;\\</span>\n<span class=\"s\">              &lt;/visual&gt;\\</span>\n<span class=\"s\">              &lt;inertial&gt;\\</span>\n<span class=\"s\">                &lt;mass&gt;${mass}&lt;/mass&gt;\\</span>\n<span class=\"s\">                &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;\\</span>\n<span class=\"s\">                &lt;inertia&gt;\\</span>\n<span class=\"s\">                  &lt;ixx&gt;${ixx}&lt;/ixx&gt;\\</span>\n<span class=\"s\">                  &lt;ixy&gt;0.0&lt;/ixy&gt;\\</span>\n<span class=\"s\">                  &lt;ixz&gt;0.0&lt;/ixz&gt;\\</span>\n<span class=\"s\">                  &lt;iyy&gt;${iyy}&lt;/iyy&gt;\\</span>\n<span class=\"s\">                  &lt;iyz&gt;0.0&lt;/iyz&gt;\\</span>\n<span class=\"s\">                  &lt;izz&gt;${izz}&lt;/izz&gt;\\</span>\n<span class=\"s\">                &lt;/inertia&gt;\\</span>\n<span class=\"s\">              &lt;/inertial&gt;\\</span>\n<span class=\"s\">            &lt;/link&gt;\\</span>\n<span class=\"s\">          &lt;/model&gt;\\</span>\n<span class=\"s\">        &lt;/sdf&gt;&quot;</span><span class=\"p\">);</span>\n\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">stringstream</span> <span class=\"n\">poseStr</span><span class=\"p\">;</span>\n        <span class=\"kt\">double</span> <span class=\"n\">ixx</span> <span class=\"o\">=</span> <span class=\"mf\">0.0833333</span> <span class=\"o\">*</span> <span class=\"n\">mass</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"n\">radius</span> <span class=\"o\">*</span> <span class=\"n\">radius</span> <span class=\"o\">+</span> <span class=\"n\">length</span> <span class=\"o\">*</span> <span class=\"n\">length</span><span class=\"p\">);</span>\n        <span class=\"kt\">double</span> <span class=\"n\">iyy</span> <span class=\"o\">=</span> <span class=\"mf\">0.0833333</span> <span class=\"o\">*</span> <span class=\"n\">mass</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"n\">radius</span> <span class=\"o\">*</span> <span class=\"n\">radius</span> <span class=\"o\">+</span> <span class=\"n\">length</span> <span class=\"o\">*</span> <span class=\"n\">length</span><span class=\"p\">);</span>\n        <span class=\"kt\">double</span> <span class=\"n\">izz</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">mass</span> <span class=\"o\">*</span> <span class=\"n\">radius</span> <span class=\"o\">*</span> <span class=\"n\">radius</span><span class=\"p\">;</span>\n        <span class=\"n\">poseStr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">pose</span><span class=\"p\">.</span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">pose</span><span class=\"p\">.</span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">y</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">pose</span><span class=\"p\">.</span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">z</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; 0 0 0&quot;</span><span class=\"p\">;</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${name}&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">);</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${pose}&quot;</span><span class=\"p\">,</span> <span class=\"n\">poseStr</span><span class=\"p\">.</span><span class=\"n\">str</span><span class=\"p\">());</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${radius}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">));</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${length}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">));</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${mass}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">mass</span><span class=\"p\">));</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${ixx}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span> <span class=\"n\">ixx</span><span class=\"p\">));</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${iyy}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span> <span class=\"n\">iyy</span><span class=\"p\">));</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${izz}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">izz</span><span class=\"p\">));</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${mu}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span> <span class=\"n\">mu</span><span class=\"p\">));</span>\n        <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">replace_all</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">,</span> <span class=\"s\">&quot;${mu2}&quot;</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">mu2</span><span class=\"p\">));</span>\n        <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDF</span> <span class=\"n\">sdfModel</span><span class=\"p\">;</span>\n        <span class=\"n\">sdfModel</span><span class=\"p\">.</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span><span class=\"n\">modelStr</span><span class=\"p\">);</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">InsertModelSDF</span><span class=\"p\">(</span><span class=\"n\">sdfModel</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// Register this plugin with the simulator</span>\n<span class=\"n\">GZ_REGISTER_WORLD_PLUGIN</span><span class=\"p\">(</span><span class=\"n\">FactoryAndFini</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">&lt;?</span><span class=\"n\">xml</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">&quot;1.0&quot;</span><span class=\"o\">?&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">sdf</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">&quot;1.4&quot;</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">world</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;default&quot;</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">include</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"n\">uri</span><span class=\"o\">&gt;</span><span class=\"nl\">model</span><span class=\"p\">:</span><span class=\"c1\">//ground_plane&lt;/uri&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">include</span><span class=\"o\">&gt;</span>\n\n    <span class=\"o\">&lt;</span><span class=\"n\">include</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"n\">uri</span><span class=\"o\">&gt;</span><span class=\"nl\">model</span><span class=\"p\">:</span><span class=\"c1\">//sun&lt;/uri&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">include</span><span class=\"o\">&gt;</span>\n\n    <span class=\"o\">&lt;</span><span class=\"n\">plugin</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;factory_and_fini&quot;</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;libfactory_and_fini.so&quot;</span><span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"n\">world</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">sdf</span><span class=\"o\">&gt;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "2.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/51082.json"}}}, "edited_on": null, "created_on": "2014-05-06T09:23:07.208098+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:24.759594+00:00", "type": "issue", "id": 1177}