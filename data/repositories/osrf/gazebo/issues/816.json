{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/816/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/816.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/816/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/816/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/816/race-condition-in-gazebo-h-and-occasional"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/816/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Race condition in `gazebo -h` and occasional manpages test failure", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The `gazebo` executable works by forking twice and executing 'gzserver' and `gzclient` instances in the forked processes with the same input arguments (see [gazebo_main.cc](#!/osrf/gazebo/src/0332ac8db9b76a8025d8c6ed2fa0bee3bb526836/gazebo/gazebo_main.cc?at=default#cl-78)). In theory, running `gazebo -h` could show the help message for both `gzserver` and `gzclient`. There's currently a race condition, however, that causes it to only show one message, usually that of `gzserver`. It is possible for the `gzclient` help message to come up (as observed in [this Jenkins test failure](http://build.osrfoundation.org/job/gazebo-default-devel-quantal-amd64/305/testReport/junit/%28root%29/ManTest/gazebo/)).\r\n\r\nInserting MSleep calls can illustrate the race condition. For example, with the following patch\r\n~~~\r\ndiff -r 0332ac8db9b7 gazebo/Server.cc\r\n--- a/gazebo/Server.cc\tFri Aug 23 05:35:32 2013 -0700\r\n+++ b/gazebo/Server.cc\tFri Aug 23 14:06:38 2013 -0700\r\n@@ -139,6 +139,7 @@\r\n \r\n   if (this->vm.count(\"help\"))\r\n   {\r\n+    common::Time::MSleep(300);\r\n     this->PrintUsage();\r\n     std::cerr << v_desc << \"\\n\";\r\n     return false;\r\n~~~\r\nI see the following from `gazebo -h`:\r\n~~~\r\n$ gazebo -h\r\ngzclient -- Gazebo GUI Client\r\n\r\n`gzclient` [options]\r\n\r\nGazebo GUI client which allows visualization and user interaction.\r\n\r\nOptions:\r\n  -q [ --quiet ]          Reduce output to stdout.\r\n  -h [ --help ]           Produce this help message.\r\n  -g [ --gui-plugin ] arg Load a plugin.\r\n\r\ngzserver -- Run the Gazebo server.\r\n\r\n`gzserver` [options] <world_file>\r\n\r\nGazebo server runs simulation and handles commandline options, starts a Master, runs World update and sensor generation loops.\r\n\r\nOptions:\r\n  -q [ --quiet ]                Reduce output to stdout.\r\n  -h [ --help ]                 Produce this help message.\r\n  -u [ --pause ]                Start the server in a paused state.\r\n  -e [ --physics ] arg          Specify a physics engine (ode|bullet).\r\n  -p [ --play ] arg             Play a log file.\r\n  -r [ --record ]               Record state data.\r\n  --record_encoding arg (=zlib) Compression encoding format for log data \r\n                                (zlib|bz2|txt).\r\n  --record_path arg             Absolute path in which to store state data\r\n  --seed arg                    Start with a given random number seed.\r\n  --iters arg                   Number of iterations to simulate.\r\n  -s [ --server-plugin ] arg    Load a plugin.\r\n\r\n~~~", "markup": "markdown", "html": "<p>The <code>gazebo</code> executable works by forking twice and executing 'gzserver' and <code>gzclient</code> instances in the forked processes with the same input arguments (see <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/0332ac8db9b76a8025d8c6ed2fa0bee3bb526836/gazebo/gazebo_main.cc?at=default#cl-78\" rel=\"nofollow\">gazebo_main.cc</a>). In theory, running <code>gazebo -h</code> could show the help message for both <code>gzserver</code> and <code>gzclient</code>. There's currently a race condition, however, that causes it to only show one message, usually that of <code>gzserver</code>. It is possible for the <code>gzclient</code> help message to come up (as observed in <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-default-devel-quantal-amd64/305/testReport/junit/%28root%29/ManTest/gazebo/\" rel=\"nofollow\">this Jenkins test failure</a>).</p>\n<p>Inserting MSleep calls can illustrate the race condition. For example, with the following patch</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 0332ac8db9b7 gazebo/Server.cc</span>\n<span class=\"gd\">--- a/gazebo/Server.cc  Fri Aug 23 05:35:32 2013 -0700</span>\n<span class=\"gi\">+++ b/gazebo/Server.cc  Fri Aug 23 14:06:38 2013 -0700</span>\n<span class=\"gu\">@@ -139,6 +139,7 @@</span>\n\n   if (this-&gt;vm.count(&quot;help&quot;))\n   {\n<span class=\"gi\">+    common::Time::MSleep(300);</span>\n     this-&gt;PrintUsage();\n     std::cerr &lt;&lt; v_desc &lt;&lt; &quot;\\n&quot;;\n     return false;\n</pre></div>\n\n\n<p>I see the following from <code>gazebo -h</code>:</p>\n<div class=\"codehilite\"><pre><span></span>$ gazebo -h\ngzclient -- Gazebo GUI Client\n\n<span class=\"sb\">`</span>gzclient<span class=\"sb\">`</span> <span class=\"o\">[</span>options<span class=\"o\">]</span>\n\nGazebo GUI client which allows visualization and user interaction.\n\nOptions:\n  -q <span class=\"o\">[</span> --quiet <span class=\"o\">]</span>          Reduce output to stdout.\n  -h <span class=\"o\">[</span> --help <span class=\"o\">]</span>           Produce this <span class=\"nb\">help</span> message.\n  -g <span class=\"o\">[</span> --gui-plugin <span class=\"o\">]</span> arg Load a plugin.\n\ngzserver -- Run the Gazebo server.\n\n<span class=\"sb\">`</span>gzserver<span class=\"sb\">`</span> <span class=\"o\">[</span>options<span class=\"o\">]</span> &lt;world_file&gt;\n\nGazebo server runs simulation and handles commandline options, starts a Master, runs World update and sensor generation loops.\n\nOptions:\n  -q <span class=\"o\">[</span> --quiet <span class=\"o\">]</span>                Reduce output to stdout.\n  -h <span class=\"o\">[</span> --help <span class=\"o\">]</span>                 Produce this <span class=\"nb\">help</span> message.\n  -u <span class=\"o\">[</span> --pause <span class=\"o\">]</span>                Start the server in a paused state.\n  -e <span class=\"o\">[</span> --physics <span class=\"o\">]</span> arg          Specify a physics engine <span class=\"o\">(</span>ode<span class=\"p\">|</span>bullet<span class=\"o\">)</span>.\n  -p <span class=\"o\">[</span> --play <span class=\"o\">]</span> arg             Play a log file.\n  -r <span class=\"o\">[</span> --record <span class=\"o\">]</span>               Record state data.\n  --record_encoding arg <span class=\"o\">(=</span>zlib<span class=\"o\">)</span> Compression encoding format <span class=\"k\">for</span> log data \n                                <span class=\"o\">(</span>zlib<span class=\"p\">|</span>bz2<span class=\"p\">|</span>txt<span class=\"o\">)</span>.\n  --record_path arg             Absolute path in which to store state data\n  --seed arg                    Start with a given random number seed.\n  --iters arg                   Number of iterations to simulate.\n  -s <span class=\"o\">[</span> --server-plugin <span class=\"o\">]</span> arg    Load a plugin.\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-08-23T21:08:07.614422+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:40.154185+00:00", "type": "issue", "id": 816}