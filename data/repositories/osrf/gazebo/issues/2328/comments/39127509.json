{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2328/comments/39127509.json"}, "html": {"href": "#!/osrf/gazebo/issues/2328#comment-39127509"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2328.json"}}, "type": "issue", "id": 2328, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Programatically updating lights yields a false error"}, "content": {"raw": "mm that's weird. I made a world plugin to tested this out in gazebo7 but didn't see the light already exists error message. \n\nHere's my plugin that moves a light along the xy direction:\n\n~~~\n#include <gazebo/gazebo.hh>\n\nnamespace gazebo\n{\n  class SpawnLight : public WorldPlugin\n  {\n    public: SpawnLight() : WorldPlugin()\n    {\n    }\n\n    public: void Load(physics::WorldPtr _world, sdf::ElementPtr _sdf)\n    {\n      this->node = transport::NodePtr(new transport::Node());\n      this->node->Init();\n      this->pubCreate = this->node->Advertise<msgs::Light>(\"~/factory/light\");\n      this->pubUpdate = this->node->Advertise<msgs::Light>(\"~/light/modify\");\n      this->lightName = \"new_light\";\n      msgs::Light msg;\n      msg.set_name(this->lightName);\n      msgs::Set(msg.mutable_diffuse(), common::Color(0.5, 0.0, 0.0, 1));\n      msgs::Set(msg.mutable_specular(), common::Color(0.0, 0.8, 0.1, 1));\n      msgs::Set(msg.mutable_pose(), ignition::math::Pose3d(0, 0, 1, 0, 0, 0));\n      this->pubCreate->Publish(msg);\n\n      this->updateConnection = event::Events::ConnectWorldUpdateBegin(\n          std::bind(&SpawnLight::OnUpdate, this, std::placeholders::_1));\n    }\n\n    public: void OnUpdate(const common::UpdateInfo &_info)\n    {\n      double offset = _info.simTime.Double() / 10;\n      msgs::Light msg;\n      msg.set_name(this->lightName);\n      msgs::Set(msg.mutable_pose(),\n          ignition::math::Pose3d(offset, offset, 1, 0, 0, 0));\n      this->pubUpdate->Publish(msg);\n    }\n\n    private: event::ConnectionPtr updateConnection;\n    private: transport::PublisherPtr pubCreate;\n    private: transport::PublisherPtr pubUpdate;\n    private: transport::NodePtr node;\n    private: std::string lightName;\n  };\n  GZ_REGISTER_WORLD_PLUGIN(SpawnLight)\n}\n~~~", "markup": "markdown", "html": "<p>mm that's weird. I made a world plugin to tested this out in gazebo7 but didn't see the light already exists error message. </p>\n<p>Here's my plugin that moves a light along the xy direction:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gazebo/gazebo.hh&gt;</span><span class=\"cp\"></span>\n\n<span class=\"n\">namespace</span> <span class=\"n\">gazebo</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">class</span> <span class=\"nl\">SpawnLight</span> <span class=\"p\">:</span> <span class=\"n\">public</span> <span class=\"n\">WorldPlugin</span>\n  <span class=\"p\">{</span>\n    <span class=\"nl\">public</span><span class=\"p\">:</span> <span class=\"n\">SpawnLight</span><span class=\"p\">()</span> <span class=\"o\">:</span> <span class=\"n\">WorldPlugin</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nl\">public</span><span class=\"p\">:</span> <span class=\"kt\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">WorldPtr</span> <span class=\"n\">_world</span><span class=\"p\">,</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">_sdf</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">NodePtr</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span><span class=\"p\">());</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">node</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">();</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubCreate</span> <span class=\"o\">=</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">node</span><span class=\"o\">-&gt;</span><span class=\"n\">Advertise</span><span class=\"o\">&lt;</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Light</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;~/factory/light&quot;</span><span class=\"p\">);</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubUpdate</span> <span class=\"o\">=</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">node</span><span class=\"o\">-&gt;</span><span class=\"n\">Advertise</span><span class=\"o\">&lt;</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Light</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;~/light/modify&quot;</span><span class=\"p\">);</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">lightName</span> <span class=\"o\">=</span> <span class=\"s\">&quot;new_light&quot;</span><span class=\"p\">;</span>\n      <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Light</span> <span class=\"n\">msg</span><span class=\"p\">;</span>\n      <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">set_name</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">lightName</span><span class=\"p\">);</span>\n      <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">mutable_diffuse</span><span class=\"p\">(),</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">));</span>\n      <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">mutable_specular</span><span class=\"p\">(),</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">));</span>\n      <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">mutable_pose</span><span class=\"p\">(),</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose3d</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubCreate</span><span class=\"o\">-&gt;</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">);</span>\n\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updateConnection</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">::</span><span class=\"n\">Events</span><span class=\"o\">::</span><span class=\"n\">ConnectWorldUpdateBegin</span><span class=\"p\">(</span>\n          <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">SpawnLight</span><span class=\"o\">::</span><span class=\"n\">OnUpdate</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">placeholders</span><span class=\"o\">::</span><span class=\"n\">_1</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nl\">public</span><span class=\"p\">:</span> <span class=\"kt\">void</span> <span class=\"n\">OnUpdate</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">UpdateInfo</span> <span class=\"o\">&amp;</span><span class=\"n\">_info</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"kt\">double</span> <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"n\">_info</span><span class=\"p\">.</span><span class=\"n\">simTime</span><span class=\"p\">.</span><span class=\"n\">Double</span><span class=\"p\">()</span> <span class=\"o\">/</span> <span class=\"mi\">10</span><span class=\"p\">;</span>\n      <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Light</span> <span class=\"n\">msg</span><span class=\"p\">;</span>\n      <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">set_name</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">lightName</span><span class=\"p\">);</span>\n      <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">mutable_pose</span><span class=\"p\">(),</span>\n          <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose3d</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubUpdate</span><span class=\"o\">-&gt;</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nl\">private</span><span class=\"p\">:</span> <span class=\"n\">event</span><span class=\"o\">::</span><span class=\"n\">ConnectionPtr</span> <span class=\"n\">updateConnection</span><span class=\"p\">;</span>\n    <span class=\"nl\">private</span><span class=\"p\">:</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">PublisherPtr</span> <span class=\"n\">pubCreate</span><span class=\"p\">;</span>\n    <span class=\"nl\">private</span><span class=\"p\">:</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">PublisherPtr</span> <span class=\"n\">pubUpdate</span><span class=\"p\">;</span>\n    <span class=\"nl\">private</span><span class=\"p\">:</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">NodePtr</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n    <span class=\"nl\">private</span><span class=\"p\">:</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">lightName</span><span class=\"p\">;</span>\n  <span class=\"p\">};</span>\n  <span class=\"n\">GZ_REGISTER_WORLD_PLUGIN</span><span class=\"p\">(</span><span class=\"n\">SpawnLight</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-16T18:51:08.082817+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 39127509}