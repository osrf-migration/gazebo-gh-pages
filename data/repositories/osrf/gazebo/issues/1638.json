{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1638/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1638.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1638/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1638/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1638/visualize-gazebos-internal-architecture"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1638/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Visualize gazebo's internal architecture", "component": {"name": "documentation", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/141921.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "It would be nice to be able to visualize the internal architecture of gazebo. This should include a list of processes (gazebo forks separate gzserver and gzclient processes), threads within a process (physics update thread, sensor update threads, etc), and also transport interfaces. There should also be timing information (are sensor threads created before or after physics threads?).\r\n\r\nI thought I would try to use `gazebo::util::Diagnostics` to get help get some of this data (see the DIAG_TIMER_* statements in physics/World.cc for an example #!/osrf/gazebo/src/913ef0ae5c507fd1416b1358eeda16c60cb8ed44/gazebo/physics/World.cc#cl-607 ). I've started with the `thread_diagnostics_transport` branch. Some output for a gzserver with a single physics iteration is given for the code as of a4dd14d647468a2f351362 in the following gist:\r\n\r\nhttps://gist.github.com/scpeters/fc6ea07e075d1ff57d9d", "markup": "markdown", "html": "<p>It would be nice to be able to visualize the internal architecture of gazebo. This should include a list of processes (gazebo forks separate gzserver and gzclient processes), threads within a process (physics update thread, sensor update threads, etc), and also transport interfaces. There should also be timing information (are sensor threads created before or after physics threads?).</p>\n<p>I thought I would try to use <code>gazebo::util::Diagnostics</code> to get help get some of this data (see the DIAG_TIMER_* statements in physics/World.cc for an example <a href=\"#!/osrf/gazebo/src/913ef0ae5c507fd1416b1358eeda16c60cb8ed44/gazebo/physics/World.cc#cl-607\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/913ef0ae5c507fd1416b1358eeda16c60cb8ed44/gazebo/physics/World.cc#cl-607</a> ). I've started with the <code>thread_diagnostics_transport</code> branch. Some output for a gzserver with a single physics iteration is given for the code as of <a href=\"#!/osrf/gazebo/commits/a4dd14d647468a2f351362\" rel=\"nofollow\" class=\"ap-connect-link\">a4dd14d647468a2f351362</a> in the following gist:</p>\n<p><a href=\"https://gist.github.com/scpeters/fc6ea07e075d1ff57d9d\" rel=\"nofollow\" class=\"ap-connect-link\">https://gist.github.com/scpeters/fc6ea07e075d1ff57d9d</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-20T09:23:17.960330+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:01.197737+00:00", "type": "issue", "id": 1638}