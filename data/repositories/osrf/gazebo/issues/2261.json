{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2261/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2261.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2261/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2261/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2261/fsaa-for-wide-angle-camera"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2261/vote"}}, "reporter": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "title": "FSAA for Wide Angle Camera", "component": {"name": "rendering", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122881.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I tried to create a wide angle camera sensor in my VM and encountered this crash:\r\n\r\n```\r\n[tcsetpgrp failed in terminal_inferior: Inappropriate ioctl for device]\r\n[ INFO] [1493423742.569698185, 0.154000000]: waitForService: Service [/honey/framestore_manager/load_nodelet] is now available.\r\ngzserver: /build/ogre-1.9-mqY1wq/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreRenderSystem.cpp:546: virtual void Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*): Assertion `bAttached && \"A new DepthBuffer for a RenderTarget was created, but after creation\" \"it says it's incompatible with that RT\"' failed.\r\n\r\nThread 1 \"gzserver\" received signal SIGABRT, Aborted.\r\n0x00007ffff6afc428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n54\t../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb) bt\r\n#0  0x00007ffff6afc428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1  0x00007ffff6afe02a in __GI_abort () at abort.c:89\r\n#2  0x00007ffff6af4bd7 in __assert_fail_base (fmt=<optimized out>, \r\n    assertion=assertion@entry=0x7fffef978f68 \"bAttached && \\\"A new DepthBuffer for a RenderTarget was created, but after creation\\\" \\\"it says it's incompatible with that RT\\\"\", \r\n    file=file@entry=0x7fffef978bf0 \"/build/ogre-1.9-mqY1wq/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreRenderSystem.cpp\", \r\n    line=line@entry=546, \r\n    function=function@entry=0x7fffef978940 \"virtual void Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*)\") at assert.c:92\r\n#3  0x00007ffff6af4c82 in __GI___assert_fail (\r\n    assertion=0x7fffef978f68 \"bAttached && \\\"A new DepthBuffer for a RenderTarget was created, but after creation\\\" \\\"it says it's incompatible with that RT\\\"\", file=0x7fffef978bf0 \"/build/ogre-1.9-mqY1wq/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreRenderSystem.cpp\", \r\n    line=546, function=0x7fffef978940 \"virtual void Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*)\") at assert.c:101\r\n#4  0x00007fffef7581b8 in Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*) ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#5  0x00007fff8827707e in Ogre::GLRenderSystem::_setRenderTarget(Ogre::RenderTarget*) ()\r\n   from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\r\n#6  0x00007fff88273605 in Ogre::GLRenderSystem::_setViewport(Ogre::Viewport*) ()\r\n   from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\r\n#7  0x00007fffef6ad7f8 in Ogre::SceneManager::setViewport(Ogre::Viewport*) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#8  0x00007fffef6c30fc in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#9  0x00007fffef6fff51 in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#10 0x00007fffef6a477a in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#11 0x00007fffef6a45cb in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool) ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#12 0x00007fffef6a411e in Ogre::RenderTarget::updateImpl() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#13 0x00007fffef6a4ac4 in Ogre::RenderTarget::update(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#14 0x00007fffefe4d6a3 in gazebo::rendering::WideAngleCamera::RenderImpl() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.7\r\n#15 0x00007fffefd4bf8c in gazebo::rendering::Camera::Render(bool) () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.7\r\n#16 0x00007ffff6827177 in gazebo::sensors::CameraSensor::Render() () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7\r\n#17 0x00007ffff686e67a in ?? () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7\r\n#18 0x00007ffff6869123 in gazebo::sensors::SensorManager::ImageSensorContainer::Update(bool) ()\r\n   from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7\r\n#19 0x00007ffff6869a34 in gazebo::sensors::SensorManager::Update(bool) () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7\r\n#20 0x00007ffff7ba4ae0 in gazebo::Server::Run() () from /usr/lib/x86_64-linux-gnu/libgazebo.so.7\r\n#21 0x0000000000402e68 in ?? ()\r\n#22 0x00007ffff6ae7830 in __libc_start_main (main=0x402d70, argc=10, argv=0x7fffffffd1d8, init=<optimized out>, \r\n    fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffd1c8) at ../csu/libc-start.c:291\r\n```\r\n\r\nI believe this might be related to issue #1837. \r\n\r\nFor my Xenial/Kinetic/Ogre1.9 environment, the FSAA= 4 on line 639 in function```WideAngleCamera::CreateEnvRenderTexture``` in file ```gazebo/gazebo/rendering/WideAngleCamera.cc```. Should it not be set to zero?", "markup": "markdown", "html": "<p>I tried to create a wide angle camera sensor in my VM and encountered this crash:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[tcsetpgrp failed in terminal_inferior: Inappropriate ioctl for device]</span>\n<span class=\"na\">[ INFO] [1493423742.569698185, 0.154000000]: waitForService: Service [/honey/framestore_manager/load_nodelet] is now available.</span>\n<span class=\"na\">gzserver: /build/ogre-1.9-mqY1wq/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreRenderSystem.cpp:546: virtual void Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*): Assertion `bAttached &amp;&amp; &quot;A new DepthBuffer for a RenderTarget was created, but after creation&quot; &quot;it says it&#39;s incompatible with that RT&quot;&#39; failed.</span>\n\n<span class=\"na\">Thread 1 &quot;gzserver&quot; received signal SIGABRT, Aborted.</span>\n<span class=\"na\">0x00007ffff6afc428 in __GI_raise (sig</span><span class=\"o\">=</span><span class=\"s\">sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54</span>\n<span class=\"na\">54  ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.</span>\n<span class=\"na\">(gdb) bt</span>\n<span class=\"c1\">#0  0x00007ffff6afc428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54</span>\n<span class=\"c1\">#1  0x00007ffff6afe02a in __GI_abort () at abort.c:89</span>\n<span class=\"c1\">#2  0x00007ffff6af4bd7 in __assert_fail_base (fmt=&lt;optimized out&gt;, </span>\n    <span class=\"na\">assertion</span><span class=\"o\">=</span><span class=\"s\">assertion@entry=0x7fffef978f68 &quot;bAttached &amp;&amp; \\&quot;A new DepthBuffer for a RenderTarget was created, but after creation\\&quot; \\&quot;it says it&#39;s incompatible with that RT\\&quot;&quot;, </span>\n<span class=\"s\">    file=file@entry=0x7fffef978bf0 &quot;/build/ogre-1.9-mqY1wq/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreRenderSystem.cpp&quot;, </span>\n<span class=\"s\">    line=line@entry=546, </span>\n<span class=\"s\">    function=function@entry=0x7fffef978940 &quot;virtual void Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*)&quot;) at assert.c:92</span>\n<span class=\"c1\">#3  0x00007ffff6af4c82 in __GI___assert_fail (</span>\n    <span class=\"na\">assertion</span><span class=\"o\">=</span><span class=\"s\">0x7fffef978f68 &quot;bAttached &amp;&amp; \\&quot;A new DepthBuffer for a RenderTarget was created, but after creation\\&quot; \\&quot;it says it&#39;s incompatible with that RT\\&quot;&quot;, file=0x7fffef978bf0 &quot;/build/ogre-1.9-mqY1wq/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreRenderSystem.cpp&quot;, </span>\n<span class=\"s\">    line=546, function=0x7fffef978940 &quot;virtual void Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*)&quot;) at assert.c:101</span>\n<span class=\"c1\">#4  0x00007fffef7581b8 in Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*) ()</span>\n   <span class=\"na\">from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#5  0x00007fff8827707e in Ogre::GLRenderSystem::_setRenderTarget(Ogre::RenderTarget*) ()</span>\n   <span class=\"na\">from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so</span>\n<span class=\"c1\">#6  0x00007fff88273605 in Ogre::GLRenderSystem::_setViewport(Ogre::Viewport*) ()</span>\n   <span class=\"na\">from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so</span>\n<span class=\"c1\">#7  0x00007fffef6ad7f8 in Ogre::SceneManager::setViewport(Ogre::Viewport*) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#8  0x00007fffef6c30fc in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) ()</span>\n   <span class=\"na\">from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#9  0x00007fffef6fff51 in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#10 0x00007fffef6a477a in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) ()</span>\n   <span class=\"na\">from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#11 0x00007fffef6a45cb in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool) ()</span>\n   <span class=\"na\">from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#12 0x00007fffef6a411e in Ogre::RenderTarget::updateImpl() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#13 0x00007fffef6a4ac4 in Ogre::RenderTarget::update(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0</span>\n<span class=\"c1\">#14 0x00007fffefe4d6a3 in gazebo::rendering::WideAngleCamera::RenderImpl() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.7</span>\n<span class=\"c1\">#15 0x00007fffefd4bf8c in gazebo::rendering::Camera::Render(bool) () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.7</span>\n<span class=\"c1\">#16 0x00007ffff6827177 in gazebo::sensors::CameraSensor::Render() () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7</span>\n<span class=\"c1\">#17 0x00007ffff686e67a in ?? () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7</span>\n<span class=\"c1\">#18 0x00007ffff6869123 in gazebo::sensors::SensorManager::ImageSensorContainer::Update(bool) ()</span>\n   <span class=\"na\">from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7</span>\n<span class=\"c1\">#19 0x00007ffff6869a34 in gazebo::sensors::SensorManager::Update(bool) () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.7</span>\n<span class=\"c1\">#20 0x00007ffff7ba4ae0 in gazebo::Server::Run() () from /usr/lib/x86_64-linux-gnu/libgazebo.so.7</span>\n<span class=\"c1\">#21 0x0000000000402e68 in ?? ()</span>\n<span class=\"c1\">#22 0x00007ffff6ae7830 in __libc_start_main (main=0x402d70, argc=10, argv=0x7fffffffd1d8, init=&lt;optimized out&gt;, </span>\n    <span class=\"na\">fini</span><span class=\"o\">=</span><span class=\"s\">&lt;optimized out&gt;, rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffd1c8) at ../csu/libc-start.c:291</span>\n</pre></div>\n\n\n<p>I believe this might be related to issue <a href=\"#!/osrf/gazebo/issues/1837/vmware-rendering-z-ordering-appears-random\" rel=\"nofollow\" title=\"VMWare rendering: Z Ordering Appears Random\" class=\"ap-connect-link\"><s>#1837</s></a>. </p>\n<p>For my Xenial/Kinetic/Ogre1.9 environment, the FSAA= 4 on line 639 in function<code>WideAngleCamera::CreateEnvRenderTexture</code> in file <code>gazebo/gazebo/rendering/WideAngleCamera.cc</code>. Should it not be set to zero?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "7.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/242744.json"}}}, "edited_on": null, "created_on": "2017-04-29T00:14:30.272486+00:00", "milestone": null, "updated_on": "2017-08-25T16:56:06.870984+00:00", "type": "issue", "id": 2261}