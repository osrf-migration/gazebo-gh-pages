{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2204/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2204.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2204/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2204/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2204/feature-request-better-self-collision"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2204/vote"}}, "reporter": {"display_name": "Dave Coleman", "uuid": "{58f784f8-4b19-4221-b333-670219684927}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B58f784f8-4b19-4221-b333-670219684927%7D"}, "html": {"href": "https://bitbucket.org/%7B58f784f8-4b19-4221-b333-670219684927%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/0a0abfbe6bae9a1d65fe4af19493f423d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDC-3.png"}}, "nickname": "Dave Coleman", "type": "user", "account_id": "557058:113fde7a-8d84-43e3-91d8-20354f36ec42"}, "title": "[Feature Request] Better Self-Collision Bitmasks Interface", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I'm attempting to enable Baxter to check for self-collision, but some links are in collision that are not attached by a joint due to the way the URDF was created by Rethink. With MoveIt!, we have a relatively simple matrix that allows pairs of links to be disabled for self collision. We need an equivalent in Gazebo, otherwise the robot \"convulses\" as reported [here](http://answers.gazebosim.org/question/15458/understanding-link-property-self_collide/).\r\n\r\nThe Gazebo equivalent seems to be the recently added [collision bitmasks](http://gazebosim.org/tutorials?tut=collide_bitmask&cat=physics) but using this seems impractical for a robot with ~100 links / 14+ DOF. Additionally, that approach requires you to know the ID of each link, which changes when converting from URDF to SDF because many links are combined into one during the conversion. Manually combinging the bitwise operations seems incredibly tedious for large robots.\r\n\r\nWe need a way selectively enable self collision for *most* of the links of a complex robot in Gazebo.", "markup": "markdown", "html": "<p>I'm attempting to enable Baxter to check for self-collision, but some links are in collision that are not attached by a joint due to the way the URDF was created by Rethink. With MoveIt!, we have a relatively simple matrix that allows pairs of links to be disabled for self collision. We need an equivalent in Gazebo, otherwise the robot \"convulses\" as reported <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/15458/understanding-link-property-self_collide/\" rel=\"nofollow\">here</a>.</p>\n<p>The Gazebo equivalent seems to be the recently added <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=collide_bitmask&amp;cat=physics\" rel=\"nofollow\">collision bitmasks</a> but using this seems impractical for a robot with ~100 links / 14+ DOF. Additionally, that approach requires you to know the ID of each link, which changes when converting from URDF to SDF because many links are combined into one during the conversion. Manually combinging the bitwise operations seems incredibly tedious for large robots.</p>\n<p>We need a way selectively enable self collision for <em>most</em> of the links of a complex robot in Gazebo.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-22T14:32:43.497486+00:00", "milestone": null, "updated_on": "2017-04-06T23:30:05.999287+00:00", "type": "issue", "id": 2204}