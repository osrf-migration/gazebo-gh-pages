{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/20119431.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-20119431"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-07-14T08:55:49.681973+00:00", "user": {"display_name": "Sandro Weber", "uuid": "{fba7082a-c8f0-4aab-880a-78a28c63f993}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D"}, "html": {"href": "https://bitbucket.org/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5e65d01baeee5792745dd223077a8300d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSW-1.png"}}, "nickname": "DreamingSandman", "type": "user", "account_id": "5b180419d9936c6102205eab"}, "updated_on": null, "type": "issue_comment", "id": 20119431}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/20139218.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-20139218"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": "The code looks like it sends back the camera's width and height, but I'll have to reproduce your problem. Can you post the SDF that you are using?", "markup": "markdown", "html": "<p>The code looks like it sends back the camera's width and height, but I'll have to reproduce your problem. Can you post the SDF that you are using?</p>", "type": "rendered"}, "created_on": "2015-07-14T14:27:13.432468+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 20139218}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/20140806.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-20140806"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-07-14T15:20:40.336079+00:00", "user": {"display_name": "Sandro Weber", "uuid": "{fba7082a-c8f0-4aab-880a-78a28c63f993}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D"}, "html": {"href": "https://bitbucket.org/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5e65d01baeee5792745dd223077a8300d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSW-1.png"}}, "nickname": "DreamingSandman", "type": "user", "account_id": "5b180419d9936c6102205eab"}, "updated_on": null, "type": "issue_comment", "id": 20140806}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/22891497.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-22891497"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": "Dear Sandro, dear Nathan,\n\nI have been investigating lately the issue described above. I work with Sandro. We use Gazebo 4 and servers which are rendering-less.\n\nHere is the outcome of my code search and my tests. In Gazebo 4 and subsequent versions, CameraSensor::GetImageWidth and CameraSensor::GetImageHeight methods both return 0.0 if no rendering is available. \n\nA strong lead for this is the comment in rendering/Scene.cc now at line 2108: \n\"// image size is 0 if renering is unavailable\"  (the 'renering' typo is faithfully reproduced) .\n\nThe CameraSensor.cc code says:\n```\n#!c++\n\nunsigned int Camera::GetImageWidth() const\n{\n  unsigned int width = 0;\n  if (this->viewport)\n  {\n    width = this->viewport->getActualWidth();\n  }\n  else\n  {\n    sdf::ElementPtr elem = this->sdf->GetElement(\"image\");\n    width = elem->Get<int>(\"width\");\n  }\n  return width;\n}\n\n```\nSo my assumption is that this->viewport->getActualWidth() returns 0.0 when no rendering is available. \nTests with a server where rendering is available show that the width is correctly passed from gzserver to gzbridge (protobuf) and from gzbridge to the client (json).\n\nFor the other part of the report, Sandro is right. In Gazebo 4, horizontal_fov, near_clip, far_clip, image_format were not written in the protobuf message. But this should be fixed now, see Sensor::FillMsg in Sensor.cc:\n\n```\n#!c++\n...\n else if (this->GetType() == \"camera\" || this->GetType() == \"wideanglecamera\")\n  {\n    CameraSensor *camSensor = static_cast<CameraSensor*>(this);\n    msgs::CameraSensor *camMsg = _msg.mutable_camera();\n    auto cam = camSensor->GetCamera();\n    camMsg->set_horizontal_fov(cam->GetHFOV().Radian());\n    camMsg->mutable_image_size()->set_x(camSensor->GetImageWidth());\n    camMsg->mutable_image_size()->set_y(camSensor->GetImageHeight());\n    camMsg->set_image_format(cam->GetImageFormat());\n    camMsg->set_near_clip(cam->GetNearClip());\n    camMsg->set_far_clip(cam->GetFarClip());\n...\n```\nAll the best,\nLuc.", "markup": "markdown", "html": "<p>Dear Sandro, dear Nathan,</p>\n<p>I have been investigating lately the issue described above. I work with Sandro. We use Gazebo 4 and servers which are rendering-less.</p>\n<p>Here is the outcome of my code search and my tests. In Gazebo 4 and subsequent versions, CameraSensor::GetImageWidth and CameraSensor::GetImageHeight methods both return 0.0 if no rendering is available. </p>\n<p>A strong lead for this is the comment in rendering/Scene.cc now at line 2108: \n\"// image size is 0 if renering is unavailable\"  (the 'renering' typo is faithfully reproduced) .</p>\n<p>The CameraSensor.cc code says:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">Camera</span><span class=\"o\">::</span><span class=\"n\">GetImageWidth</span><span class=\"p\">()</span> <span class=\"k\">const</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">viewport</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">viewport</span><span class=\"o\">-&gt;</span><span class=\"n\">getActualWidth</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">elem</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;image&quot;</span><span class=\"p\">);</span>\n    <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"n\">elem</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;width&quot;</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"n\">width</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>So my assumption is that this-&gt;viewport-&gt;getActualWidth() returns 0.0 when no rendering is available. \nTests with a server where rendering is available show that the width is correctly passed from gzserver to gzbridge (protobuf) and from gzbridge to the client (json).</p>\n<p>For the other part of the report, Sandro is right. In Gazebo 4, horizontal_fov, near_clip, far_clip, image_format were not written in the protobuf message. But this should be fixed now, see Sensor::FillMsg in Sensor.cc:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"p\">...</span>\n <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s\">&quot;camera&quot;</span> <span class=\"o\">||</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s\">&quot;wideanglecamera&quot;</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">CameraSensor</span> <span class=\"o\">*</span><span class=\"n\">camSensor</span> <span class=\"o\">=</span> <span class=\"k\">static_cast</span><span class=\"o\">&lt;</span><span class=\"n\">CameraSensor</span><span class=\"o\">*&gt;</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>\n    <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">CameraSensor</span> <span class=\"o\">*</span><span class=\"n\">camMsg</span> <span class=\"o\">=</span> <span class=\"n\">_msg</span><span class=\"p\">.</span><span class=\"n\">mutable_camera</span><span class=\"p\">();</span>\n    <span class=\"k\">auto</span> <span class=\"n\">cam</span> <span class=\"o\">=</span> <span class=\"n\">camSensor</span><span class=\"o\">-&gt;</span><span class=\"n\">GetCamera</span><span class=\"p\">();</span>\n    <span class=\"n\">camMsg</span><span class=\"o\">-&gt;</span><span class=\"n\">set_horizontal_fov</span><span class=\"p\">(</span><span class=\"n\">cam</span><span class=\"o\">-&gt;</span><span class=\"n\">GetHFOV</span><span class=\"p\">().</span><span class=\"n\">Radian</span><span class=\"p\">());</span>\n    <span class=\"n\">camMsg</span><span class=\"o\">-&gt;</span><span class=\"n\">mutable_image_size</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">set_x</span><span class=\"p\">(</span><span class=\"n\">camSensor</span><span class=\"o\">-&gt;</span><span class=\"n\">GetImageWidth</span><span class=\"p\">());</span>\n    <span class=\"n\">camMsg</span><span class=\"o\">-&gt;</span><span class=\"n\">mutable_image_size</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">set_y</span><span class=\"p\">(</span><span class=\"n\">camSensor</span><span class=\"o\">-&gt;</span><span class=\"n\">GetImageHeight</span><span class=\"p\">());</span>\n    <span class=\"n\">camMsg</span><span class=\"o\">-&gt;</span><span class=\"n\">set_image_format</span><span class=\"p\">(</span><span class=\"n\">cam</span><span class=\"o\">-&gt;</span><span class=\"n\">GetImageFormat</span><span class=\"p\">());</span>\n    <span class=\"n\">camMsg</span><span class=\"o\">-&gt;</span><span class=\"n\">set_near_clip</span><span class=\"p\">(</span><span class=\"n\">cam</span><span class=\"o\">-&gt;</span><span class=\"n\">GetNearClip</span><span class=\"p\">());</span>\n    <span class=\"n\">camMsg</span><span class=\"o\">-&gt;</span><span class=\"n\">set_far_clip</span><span class=\"p\">(</span><span class=\"n\">cam</span><span class=\"o\">-&gt;</span><span class=\"n\">GetFarClip</span><span class=\"p\">());</span>\n<span class=\"p\">...</span>\n</pre></div>\n\n\n<p>All the best,\nLuc.</p>", "type": "rendered"}, "created_on": "2015-10-28T08:51:46.864617+00:00", "user": {"display_name": "Luc Guyot", "uuid": "{10bf39a6-3a1b-4c7f-9702-fe864c3e8066}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B10bf39a6-3a1b-4c7f-9702-fe864c3e8066%7D"}, "html": {"href": "https://bitbucket.org/%7B10bf39a6-3a1b-4c7f-9702-fe864c3e8066%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:baecfd3c-7ba6-47b5-8711-417af281b471/ed635f95-3d51-407b-b3c0-b20f3d58328a/128"}}, "nickname": "luc_guyot_", "type": "user", "account_id": "557058:baecfd3c-7ba6-47b5-8711-417af281b471"}, "updated_on": null, "type": "issue_comment", "id": 22891497}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/22907346.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-22907346"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": "thanks for looking into this\n\nI agree that it's good to publish the correct camera sensor information even if rendering is disabled in gazebo. I can create a patch for this.\n\nDo you install from source or from debs?\n\n", "markup": "markdown", "html": "<p>thanks for looking into this</p>\n<p>I agree that it's good to publish the correct camera sensor information even if rendering is disabled in gazebo. I can create a patch for this.</p>\n<p>Do you install from source or from debs?</p>", "type": "rendered"}, "created_on": "2015-10-28T18:35:13.381417+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 22907346}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/22918322.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-22918322"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": "We have both, our servers build from source but some of our local testing happens with deb packages.", "markup": "markdown", "html": "<p>We have both, our servers build from source but some of our local testing happens with deb packages.</p>", "type": "rendered"}, "created_on": "2015-10-29T07:56:15.194556+00:00", "user": {"display_name": "Sandro Weber", "uuid": "{fba7082a-c8f0-4aab-880a-78a28c63f993}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D"}, "html": {"href": "https://bitbucket.org/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5e65d01baeee5792745dd223077a8300d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSW-1.png"}}, "nickname": "DreamingSandman", "type": "user", "account_id": "5b180419d9936c6102205eab"}, "updated_on": null, "type": "issue_comment", "id": 22918322}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/22958643.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-22958643"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": "Dear Ian Chen,\nThanks for your responsiveness and your kind help.\n\nI realized that my analysis above isn't accurate. The problem with the width is simply here:\n\n```\n#!c++\n\nunsigned int CameraSensor::GetImageWidth() const\n{\n  if (this->camera)\n    return this->camera->GetImageWidth();\n  return 0;\n}\n```\nwhere camera is null pointer if the rendering is not available.\nA patch would consist in adding an 'else' clause where the SDF value is extracted. But I let this in your expert hands!\nBest, regards.", "markup": "markdown", "html": "<p>Dear Ian Chen,\nThanks for your responsiveness and your kind help.</p>\n<p>I realized that my analysis above isn't accurate. The problem with the width is simply here:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">CameraSensor</span><span class=\"o\">::</span><span class=\"n\">GetImageWidth</span><span class=\"p\">()</span> <span class=\"k\">const</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">camera</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">camera</span><span class=\"o\">-&gt;</span><span class=\"n\">GetImageWidth</span><span class=\"p\">();</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>where camera is null pointer if the rendering is not available.\nA patch would consist in adding an 'else' clause where the SDF value is extracted. But I let this in your expert hands!\nBest, regards.</p>", "type": "rendered"}, "created_on": "2015-10-30T15:55:04.002465+00:00", "user": {"display_name": "Luc Guyot", "uuid": "{10bf39a6-3a1b-4c7f-9702-fe864c3e8066}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B10bf39a6-3a1b-4c7f-9702-fe864c3e8066%7D"}, "html": {"href": "https://bitbucket.org/%7B10bf39a6-3a1b-4c7f-9702-fe864c3e8066%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:baecfd3c-7ba6-47b5-8711-417af281b471/ed635f95-3d51-407b-b3c0-b20f3d58328a/128"}}, "nickname": "luc_guyot_", "type": "user", "account_id": "557058:baecfd3c-7ba6-47b5-8711-417af281b471"}, "updated_on": null, "type": "issue_comment", "id": 22958643}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/22966491.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-22966491"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": "created pull request #1969 for the `default` branch. I'll will backport the patch if this gets merged", "markup": "markdown", "html": "<p>created <a href=\"#!/osrf/gazebo/pull-requests/1969/publish-camera-sensor-image-size-even-when\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1969</a> for the <code>default</code> branch. I'll will backport the patch if this gets merged</p>", "type": "rendered"}, "created_on": "2015-10-31T01:47:50.852292+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 22966491}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663/comments/30611008.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663#comment-30611008"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}}, "type": "issue", "id": 1663, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sensor->camera elements from .sdf not being published on scene_info request"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:24:01.553710+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30611008}], "page": 1, "size": 9}