{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29839810.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29839810"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": "I agree that it shouldn't crash and should give a more detailed description of the problem. It would help if we were able to reproduce the problem. Is that example code JavaScript?", "markup": "markdown", "html": "<p>I agree that it shouldn't crash and should give a more detailed description of the problem. It would help if we were able to reproduce the problem. Is that example code JavaScript?</p>", "type": "rendered"}, "created_on": "2016-08-12T18:25:42.688587+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 29839810}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29839813.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29839813"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-08-12T18:25:57.880711+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 29839813}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29840118.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29840118"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": "@scpeters yes, this is node.js. I prepared the code that triggers the crash:\n\n```js\n'use strict'\n\nvar fs = require(\"fs\")\nvar net = require('net');\nvar protobuf = require(\"node-protobuf\")\n\nvar proto = new protobuf(fs.readFileSync(\"everything.desc\"))\n\nvar NODE_TCP_IP = '127.0.0.1';\nvar NODE_TCP_PORT = 11452;\nvar MASTER_TCP_IP = '127.0.0.1'\nvar MASTER_TCP_PORT = 11345;\n\nfunction packPacket(obj, schema) {\n    var packet = proto.serialize({\n        'stamp': {\n            'sec': new Date().now / 1000,\n            'nsec': 0,\n        },\n        'type': 'advertise',\n        'serialized_data': proto.serialize(obj, schema)\n    }, 'gazebo.msgs.Packet');\n    return packet;\n}\n\n// Send stuff to GZ\nvar client = new net.Socket();\nclient.setEncoding('ascii')\n\nclient.connect(MASTER_TCP_PORT, MASTER_TCP_IP, function() {\n    console.log('Client connected');\n\n    var packet = packPacket({\n            'topic': '/gazebo/default/pitchblack-rover-base1/hokuyo/link/laser/scan',\n            'host': NODE_TCP_IP,\n            'port': NODE_TCP_PORT,\n            'msg_type': 'gazebo.msgs.LaserScanStamped',\n        },\n        \"gazebo.msgs.Subscribe\");\n\n    var size = packet.length;\n    size = pad(size.toString(16), 8);\n\n    console.info(\"message\", size, packet)\n\n    client.write(size + packet)\n});\n\nfunction pad(n, width, z) {\n    z = z || '0';\n    n = n + '';\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n```\n\nServer log:\n```\n$ gzserver nothing-and-rover.world --verbose\nGazebo multi-robot simulator, version 7.0.0\nCopyright (C) 2012-2016 Open Source Robotics Foundation.\nReleased under the Apache 2 License.\nhttp://gazebosim.org\n\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 192.168.178.220\n[Err] [msgs.cc:120] EXCEPTION: Can't serialize message of type[gazebo.msgs.Publish] because it is missing required fields\n\nlibc++abi.dylib: terminating with uncaught exception of type gazebo::common::Exception\nAbort trap: 6\n```\n\nApart from unexpected crash of Gazebo server, Is there something wrong with the message I'm sending?", "markup": "markdown", "html": "<p>@scpeters yes, this is node.js. I prepared the code that triggers the crash:</p>\n<div class=\"codehilite language-js\"><pre><span></span><span class=\"s1\">&#39;use strict&#39;</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">&quot;fs&quot;</span><span class=\"p\">)</span>\n<span class=\"kd\">var</span> <span class=\"nx\">net</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;net&#39;</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">protobuf</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">&quot;node-protobuf&quot;</span><span class=\"p\">)</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">proto</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">protobuf</span><span class=\"p\">(</span><span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">readFileSync</span><span class=\"p\">(</span><span class=\"s2\">&quot;everything.desc&quot;</span><span class=\"p\">))</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">NODE_TCP_IP</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;127.0.0.1&#39;</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">NODE_TCP_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">11452</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">MASTER_TCP_IP</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;127.0.0.1&#39;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">MASTER_TCP_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">11345</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">packPacket</span><span class=\"p\">(</span><span class=\"nx\">obj</span><span class=\"p\">,</span> <span class=\"nx\">schema</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">packet</span> <span class=\"o\">=</span> <span class=\"nx\">proto</span><span class=\"p\">.</span><span class=\"nx\">serialize</span><span class=\"p\">({</span>\n        <span class=\"s1\">&#39;stamp&#39;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;sec&#39;</span><span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">now</span> <span class=\"o\">/</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;nsec&#39;</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;type&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;advertise&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;serialized_data&#39;</span><span class=\"o\">:</span> <span class=\"nx\">proto</span><span class=\"p\">.</span><span class=\"nx\">serialize</span><span class=\"p\">(</span><span class=\"nx\">obj</span><span class=\"p\">,</span> <span class=\"nx\">schema</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span> <span class=\"s1\">&#39;gazebo.msgs.Packet&#39;</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"nx\">packet</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Send stuff to GZ</span>\n<span class=\"kd\">var</span> <span class=\"nx\">client</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">net</span><span class=\"p\">.</span><span class=\"nx\">Socket</span><span class=\"p\">();</span>\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">setEncoding</span><span class=\"p\">(</span><span class=\"s1\">&#39;ascii&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">connect</span><span class=\"p\">(</span><span class=\"nx\">MASTER_TCP_PORT</span><span class=\"p\">,</span> <span class=\"nx\">MASTER_TCP_IP</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">&#39;Client connected&#39;</span><span class=\"p\">);</span>\n\n    <span class=\"kd\">var</span> <span class=\"nx\">packet</span> <span class=\"o\">=</span> <span class=\"nx\">packPacket</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;topic&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/gazebo/default/pitchblack-rover-base1/hokuyo/link/laser/scan&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;host&#39;</span><span class=\"o\">:</span> <span class=\"nx\">NODE_TCP_IP</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;port&#39;</span><span class=\"o\">:</span> <span class=\"nx\">NODE_TCP_PORT</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;msg_type&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;gazebo.msgs.LaserScanStamped&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;gazebo.msgs.Subscribe&quot;</span><span class=\"p\">);</span>\n\n    <span class=\"kd\">var</span> <span class=\"nx\">size</span> <span class=\"o\">=</span> <span class=\"nx\">packet</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n    <span class=\"nx\">size</span> <span class=\"o\">=</span> <span class=\"nx\">pad</span><span class=\"p\">(</span><span class=\"nx\">size</span><span class=\"p\">.</span><span class=\"nx\">toString</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">),</span> <span class=\"mi\">8</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;message&quot;</span><span class=\"p\">,</span> <span class=\"nx\">size</span><span class=\"p\">,</span> <span class=\"nx\">packet</span><span class=\"p\">)</span>\n\n    <span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"nx\">size</span> <span class=\"o\">+</span> <span class=\"nx\">packet</span><span class=\"p\">)</span>\n<span class=\"p\">});</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">pad</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">,</span> <span class=\"nx\">width</span><span class=\"p\">,</span> <span class=\"nx\">z</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">z</span> <span class=\"o\">=</span> <span class=\"nx\">z</span> <span class=\"o\">||</span> <span class=\"s1\">&#39;0&#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">n</span> <span class=\"o\">=</span> <span class=\"nx\">n</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"nx\">n</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;=</span> <span class=\"nx\">width</span> <span class=\"o\">?</span> <span class=\"nx\">n</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"nx\">width</span> <span class=\"o\">-</span> <span class=\"nx\">n</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">z</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">n</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Server log:</p>\n<div class=\"codehilite\"><pre><span></span>$ gzserver nothing-and-rover.world --verbose\nGazebo multi-robot simulator, version <span class=\"m\">7</span>.0.0\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2012</span>-2016 Open Source Robotics Foundation.\nReleased under the Apache <span class=\"m\">2</span> License.\nhttp://gazebosim.org\n\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">192</span>.168.178.220\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>msgs.cc:120<span class=\"o\">]</span> EXCEPTION: Can<span class=\"err\">&#39;</span>t serialize message of type<span class=\"o\">[</span>gazebo.msgs.Publish<span class=\"o\">]</span> because it is missing required fields\n\nlibc++abi.dylib: terminating with uncaught exception of <span class=\"nb\">type</span> gazebo::common::Exception\nAbort trap: <span class=\"m\">6</span>\n</pre></div>\n\n\n<p>Apart from unexpected crash of Gazebo server, Is there something wrong with the message I'm sending?</p>", "type": "rendered"}, "created_on": "2016-08-12T18:49:40.737179+00:00", "user": {"display_name": "Sergey Polzunov", "uuid": "{f5113e3a-5608-41fa-aa89-3b4675b464c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5d78758e3e3779426bc677aac37bc61bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "traut", "type": "user", "account_id": "557058:f9876371-9fe1-44fc-a496-607ab8ee292b"}, "updated_on": null, "type": "issue_comment", "id": 29840118}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29842473.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29842473"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": "Thanks; I'm nominating @hugomatic to try to reproduce this, since he has some experience with node.js", "markup": "markdown", "html": "<p>Thanks; I'm nominating @hugomatic to try to reproduce this, since he has some experience with node.js</p>", "type": "rendered"}, "created_on": "2016-08-12T22:00:45.343963+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 29842473}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29842685.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29842685"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": "Are you having this problem only for `gazebo.msgs.LaserScanStamped` messages, or is does it affect any type of messages?\n\nThe example code is trying to open a file called `everything.desc`. Can someone point me to it, (and maybe `nothing-and-rover.world`)?\n \nIn the mean time, you may be interested in our C++ Gazebo wrapper for node [gazebojs](#!/osrf/gazebojs). It might allow you to subscribe to the topic without the crash.\n", "markup": "markdown", "html": "<p>Are you having this problem only for <code>gazebo.msgs.LaserScanStamped</code> messages, or is does it affect any type of messages?</p>\n<p>The example code is trying to open a file called <code>everything.desc</code>. Can someone point me to it, (and maybe <code>nothing-and-rover.world</code>)?</p>\n<p>In the mean time, you may be interested in our C++ Gazebo wrapper for node <a data-is-external-link=\"true\" href=\"#!/osrf/gazebojs\" rel=\"nofollow\">gazebojs</a>. It might allow you to subscribe to the topic without the crash.</p>", "type": "rendered"}, "created_on": "2016-08-12T22:25:58.104229+00:00", "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "updated_on": null, "type": "issue_comment", "id": 29842685}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29845550.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29845550"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": "I can reproduce the crash with the same `Subscription` message in Python as well.\n\n`everything.desc` is a descriptors file for Gazebo's protobuf messages. I generated it with \n```\nprotoc --include_imports=true --descriptor_set_out=everything.desc *.proto\n```\nalso:\n```\n$ protoc --version\nlibprotoc 2.6.1\n```\n\n`nothing-and-rover.world` is a world with a ground plane and a rover with Hokuyo scanning laser (from example models).\n\nI tried gazebojs but couldn't make it work because of some obscure protobuf-to-json encoding error.", "markup": "markdown", "html": "<p>I can reproduce the crash with the same <code>Subscription</code> message in Python as well.</p>\n<p><code>everything.desc</code> is a descriptors file for Gazebo's protobuf messages. I generated it with </p>\n<div class=\"codehilite\"><pre><span></span>protoc --include_imports=true --descriptor_set_out=everything.desc *.proto\n</pre></div>\n\n\n<p>also:</p>\n<div class=\"codehilite\"><pre><span></span>$ protoc --version\nlibprotoc <span class=\"m\">2</span>.6.1\n</pre></div>\n\n\n<p><code>nothing-and-rover.world</code> is a world with a ground plane and a rover with Hokuyo scanning laser (from example models).</p>\n<p>I tried gazebojs but couldn't make it work because of some obscure protobuf-to-json encoding error.</p>", "type": "rendered"}, "created_on": "2016-08-13T09:22:29.269714+00:00", "user": {"display_name": "Sergey Polzunov", "uuid": "{f5113e3a-5608-41fa-aa89-3b4675b464c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5d78758e3e3779426bc677aac37bc61bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "traut", "type": "user", "account_id": "557058:f9876371-9fe1-44fc-a496-607ab8ee292b"}, "updated_on": null, "type": "issue_comment", "id": 29845550}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29880222.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29880222"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": "Any updates on the missing files?", "markup": "markdown", "html": "<p>Any updates on the missing files?</p>", "type": "rendered"}, "created_on": "2016-08-15T21:00:30.670282+00:00", "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "updated_on": null, "type": "issue_comment", "id": 29880222}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/29893960.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-29893960"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": "@hugomatic which ones? I can not share `nothing-and-rover.world` just yet but I doubt that it is important for debugging. As I said, it uses default Hokuyo scanning laser and my code tries to subscribe to the laser's topic ", "markup": "markdown", "html": "<p>@hugomatic which ones? I can not share <code>nothing-and-rover.world</code> just yet but I doubt that it is important for debugging. As I said, it uses default Hokuyo scanning laser and my code tries to subscribe to the laser's topic </p>", "type": "rendered"}, "created_on": "2016-08-16T11:18:20.182524+00:00", "user": {"display_name": "Sergey Polzunov", "uuid": "{f5113e3a-5608-41fa-aa89-3b4675b464c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf5113e3a-5608-41fa-aa89-3b4675b464c2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5d78758e3e3779426bc677aac37bc61bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "traut", "type": "user", "account_id": "557058:f9876371-9fe1-44fc-a496-607ab8ee292b"}, "updated_on": null, "type": "issue_comment", "id": 29893960}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029/comments/30609444.json"}, "html": {"href": "#!/osrf/gazebo/issues/2029#comment-30609444"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2029.json"}}, "type": "issue", "id": 2029, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Gazebo crashes when receiving (apparently) malformed subscription request"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:20:02.607982+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30609444}], "page": 1, "size": 9}