{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2053/comments/43511742.json"}, "html": {"href": "#!/osrf/gazebo/issues/2053#comment-43511742"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2053.json"}}, "type": "issue", "id": 2053, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Topic name mismatch on heavy worlds with custom names"}, "content": {"raw": "I'm tracking down the code path. So going backwards:\n\n1. `gzclient` nodes start falling back to the `default` namespace and print the infamous [No namespaces found](#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/Node.cc?fileviewer=file-view-default#Node.cc-94) message.\n1. That's because [transport::waitForNamespaces](#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/TransportIface.cc?fileviewer=file-view-default#TransportIface.cc-410) times out\n1. Because [transport::ConnectionManager::GetTopicNamespaces](#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/ConnectionManager.cc?fileviewer=file-view-default#ConnectionManager.cc-555) repeatedly returns empty\n1. Because packet [topic_namepaces_init](#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/ConnectionManager.cc?fileviewer=file-view-default#ConnectionManager.cc-168) (yes, without an **s**) has never been received from [Master::OnAccept](#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/Master.cc?fileviewer=file-view-default#Master.cc-116)\n\nI didn't go deeper. It seems to me that a quick and dirty solution would be to make the scene wait in an infinite loop until there are namespaces before it calls [node->Init](#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/rendering/Scene.cc?fileviewer=file-view-default#Scene.cc-126). This assumes that the rendering should never be initialized first, which I think is a fair assumption based on the way Gazebo currently works.", "markup": "markdown", "html": "<p>I'm tracking down the code path. So going backwards:</p>\n<ol>\n<li><code>gzclient</code> nodes start falling back to the <code>default</code> namespace and print the infamous <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/Node.cc?fileviewer=file-view-default#Node.cc-94\" rel=\"nofollow\">No namespaces found</a> message.</li>\n<li>That's because <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/TransportIface.cc?fileviewer=file-view-default#TransportIface.cc-410\" rel=\"nofollow\">transport::waitForNamespaces</a> times out</li>\n<li>Because <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/ConnectionManager.cc?fileviewer=file-view-default#ConnectionManager.cc-555\" rel=\"nofollow\">transport::ConnectionManager::GetTopicNamespaces</a> repeatedly returns empty</li>\n<li>Because packet <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/transport/ConnectionManager.cc?fileviewer=file-view-default#ConnectionManager.cc-168\" rel=\"nofollow\">topic_namepaces_init</a> (yes, without an <strong>s</strong>) has never been received from <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/Master.cc?fileviewer=file-view-default#Master.cc-116\" rel=\"nofollow\">Master::OnAccept</a></li>\n</ol>\n<p>I didn't go deeper. It seems to me that a quick and dirty solution would be to make the scene wait in an infinite loop until there are namespaces before it calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/43aba69517080eeaa792990795dc7ed72913928c/gazebo/rendering/Scene.cc?fileviewer=file-view-default#Scene.cc-126\" rel=\"nofollow\">node-&gt;Init</a>. This assumes that the rendering should never be initialized first, which I think is a fair assumption based on the way Gazebo currently works.</p>", "type": "rendered"}, "created_on": "2018-02-23T22:09:36.994106+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 43511742}