{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/310/comments/2647456.json"}, "html": {"href": "#!/osrf/gazebo/issues/310#comment-2647456"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/310.json"}}, "type": "issue", "id": 310, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Manipulating ContactPlugin Data"}, "content": {"raw": "Here's a print out of some accumulated force data:\n\ndata generated this way:\n```\n#!c++\n\t\tmath::Vector3 f_tot;\n\t\tmath::Vector3 m_tot;\n\t\tfor (int i = 0; i < contacts.contact_size(); ++i)\n\t\t{\n\t\t\tfor (int j = 0; j < contacts.contact(i).position_size(); ++j)\n\t\t\t{\n\t\t\t\tf_tot.x += contacts.contact(i).wrench(j).body_1_force().x();\n\t\t\t\tf_tot.y += contacts.contact(i).wrench(j).body_1_force().y();\n\t\t\t\tf_tot.z += contacts.contact(i).wrench(j).body_1_force().z();\n\t\t\t}\n\t\t}\n\n\t\tgzmsg << this->link_->GetName() << \" f_tot [\" << this->world_->GetSimTime().Double() << \"]:  \" << f_tot << std::endl;\n\n\n```\n\nprints out this:\n```\nMsg l_foot f_tot [2.53]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.531]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.532]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.533]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.535]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.536]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.537]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.538]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.539]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.541]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.542]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.543]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.544]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.546]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.547]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.549]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.55]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.551]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.552]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.554]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.555]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.556]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.557]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.558]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.559]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.561]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.562]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.563]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.564]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.566]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.567]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.568]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.569]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.571]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.572]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.573]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.574]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.575]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.576]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.577]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.578]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.579]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.581]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.582]:  -94.8786 -26.6833 5.92986\n```\n\nSome of that data seems reasonable, some not.  Also it seems I'm only getting updates at around ~30Hz (many repeated force values).  I'd expect to see forces around (0,0,500) for a 1000N robot just standing there not doing much.\n", "markup": "markdown", "html": "<p>Here's a print out of some accumulated force data:</p>\n<p>data generated this way:</p>\n<div class=\"codehilite language-c++\"><pre><span></span>        <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"n\">f_tot</span><span class=\"p\">;</span>\n        <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"n\">m_tot</span><span class=\"p\">;</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">contact_size</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">contact</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">position_size</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">j</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">f_tot</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"o\">+=</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">contact</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">wrench</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">).</span><span class=\"n\">body_1_force</span><span class=\"p\">().</span><span class=\"n\">x</span><span class=\"p\">();</span>\n                <span class=\"n\">f_tot</span><span class=\"p\">.</span><span class=\"n\">y</span> <span class=\"o\">+=</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">contact</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">wrench</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">).</span><span class=\"n\">body_1_force</span><span class=\"p\">().</span><span class=\"n\">y</span><span class=\"p\">();</span>\n                <span class=\"n\">f_tot</span><span class=\"p\">.</span><span class=\"n\">z</span> <span class=\"o\">+=</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">contact</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">wrench</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">).</span><span class=\"n\">body_1_force</span><span class=\"p\">().</span><span class=\"n\">z</span><span class=\"p\">();</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">gzmsg</span> <span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">link_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; f_tot [&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSimTime</span><span class=\"p\">().</span><span class=\"n\">Double</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]:  &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">f_tot</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>prints out this:</p>\n<div class=\"codehilite\"><pre><span></span>Msg l_foot f_tot [2.53]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.531]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.532]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.533]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.535]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.536]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.537]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.538]:  323.075 -56.7376 710.48\nMsg l_foot f_tot [2.539]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.541]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.542]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.543]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.544]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.546]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.547]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.549]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.55]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.551]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.552]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.554]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.555]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.556]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.557]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.558]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.559]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.561]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.562]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.563]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.564]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.566]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.567]:  88.2868 116.337 280.305\nMsg l_foot f_tot [2.568]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.569]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.571]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.572]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.573]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.574]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.575]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.576]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.577]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.578]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.579]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.581]:  -94.8786 -26.6833 5.92986\nMsg l_foot f_tot [2.582]:  -94.8786 -26.6833 5.92986\n</pre></div>\n\n\n<p>Some of that data seems reasonable, some not.  Also it seems I'm only getting updates at around ~30Hz (many repeated force values).  I'd expect to see forces around (0,0,500) for a 1000N robot just standing there not doing much.</p>", "type": "rendered"}, "created_on": "2012-12-17T20:48:54.034785+00:00", "user": {"display_name": "Benjamin Swilling", "uuid": "{da2df6bb-cc8f-4609-9cbc-b022925f975e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda2df6bb-cc8f-4609-9cbc-b022925f975e%7D"}, "html": {"href": "https://bitbucket.org/%7Bda2df6bb-cc8f-4609-9cbc-b022925f975e%7D/"}, "avatar": {"href": "https://bitbucket.org/account/swillb/avatar/"}}, "nickname": "swillb", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 2647456}