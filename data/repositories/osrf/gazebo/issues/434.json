{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/434/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/434.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/434/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/434/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/434/cmake-macro-gz_build_test-link-tests"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/434/vote"}}, "reporter": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "title": "CMake macro gz_build_test link tests unconditionally to all gazebo libraries", "component": null, "votes": 0, "watches": 3, "content": {"raw": "In ```gz_build_test``` CMake macro introduced in pull request #230, the input test file is going to be [linked against all gazebo libraries](#!/osrf/gazebo/pull-request/230/fix-for-issue-365-warn-when-messages-are/diff#Lcmake/GazeboUtils.cmakeT159) which is not needed in most of the cases.\r\n\r\nSpeaking about the consequences of this massive linking, it will mean that all shared libraries are loaded in memory in the moment of execution. However, Ubuntu is passing automatically ```--as-needed``` flag to the linker, so load of unnecessary libraries is avoided. But this does not happen in all Linux distribution. So:\r\n\r\n1.  We find a way of telling the macro what dependencies the test need\r\n2.  We add the --as-needed flag in our cmake system. \r\n\r\nCorrect solution should be only link against needed libraries. Second option could not work on some other non-Linux platforms.", "markup": "markdown", "html": "<p>In <code>gz_build_test</code> CMake macro introduced in <a href=\"#!/osrf/gazebo/pull-requests/230/fix-for-issue-365-warn-when-messages-are\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #230</a>, the input test file is going to be <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/230/fix-for-issue-365-warn-when-messages-are/diff#Lcmake/GazeboUtils.cmakeT159\" rel=\"nofollow\">linked against all gazebo libraries</a> which is not needed in most of the cases.</p>\n<p>Speaking about the consequences of this massive linking, it will mean that all shared libraries are loaded in memory in the moment of execution. However, Ubuntu is passing automatically <code>--as-needed</code> flag to the linker, so load of unnecessary libraries is avoided. But this does not happen in all Linux distribution. So:</p>\n<ol>\n<li>We find a way of telling the macro what dependencies the test need</li>\n<li>We add the --as-needed flag in our cmake system. </li>\n</ol>\n<p>Correct solution should be only link against needed libraries. Second option could not work on some other non-Linux platforms.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-01-23T15:26:50.037623+00:00", "milestone": null, "updated_on": "2016-09-14T19:41:16.295819+00:00", "type": "issue", "id": 434}