{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2107/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2107.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2107/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2107/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2107/cannot-change-resolution-of-camera-sensor"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2107/vote"}}, "reporter": {"display_name": "Marco Randazzo", "uuid": "{239d4220-a116-48bd-952b-3111f2099967}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B239d4220-a116-48bd-952b-3111f2099967%7D"}, "html": {"href": "https://bitbucket.org/%7B239d4220-a116-48bd-952b-3111f2099967%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d28a719ebeedcb2c69659ed560328af0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-6.png"}}, "nickname": "randaz81", "type": "user", "account_id": "557058:1900f158-b050-4fbb-bab7-b3693f62e890"}, "title": "cannot change resolution of camera sensor", "component": {"name": "sensors", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122877.json"}}}, "votes": 2, "watches": 3, "content": {"raw": "I'm trying to develop a plugin which allows the user to change the resolution of a camera sensor on the fly (please stop me here if such a plugin already exists or if you can point me to a working example).\r\n\r\nI'm doing this as follows (some code omitted):\r\n\r\n```\r\n#!c++\r\nvoid myplugin::setImageProperties (const double angle_hfov, const size_t width, const size_t height)\r\n{\r\n    m_mutex.wait();\r\n    m_parentSensor->Update(false);\r\n    m_parentSensor->SetActive(false);\r\n    m_camera->SetCaptureData(false);\r\n    m_camera->DisconnectNewImageFrame(this->m_updateConnection);\r\n\r\n    m_camera->SetHFOV(ignition::math::Angle(angle_hfov));\r\n    m_camera->SetImageSize(width,height);   \r\n\r\n    m_updateConnection = m_camera->ConnectNewImageFrame(boost::bind(&myplugin::captureImage, this, _1, _2, _3, _4, _5));\r\n    m_camera->SetCaptureData(true);\r\n    m_parentSensor->SetActive(true);\r\n    m_parentSensor->Update(true); // sometimes here I get segfault during Update()\r\n\r\n    m_mutex.post();\r\n}\r\n\r\nbool myplugin::captureImage(const unsigned char *_image,\r\n                          unsigned int _width, unsigned int _height,\r\n                          unsigned int _depth, const std::string &_format)\r\n{\r\n  m_mutex.wait();\r\n// here _width and _height never changes?!\r\n  m_mutex.post();\r\n}\r\n```\r\n\r\nHowever I get random segfaults (maybe a race condition inside the Update() method?) and I do not get the desired change of resolution.\r\nAm I doing it in the wrong way?\r\nI have to point out that, instead, m_camera->SetHFOV() works perfectly.\r\n\r\nThanks for your help.\r\n\r\n\r\n\r\n", "markup": "markdown", "html": "<p>I'm trying to develop a plugin which allows the user to change the resolution of a camera sensor on the fly (please stop me here if such a plugin already exists or if you can point me to a working example).</p>\n<p>I'm doing this as follows (some code omitted):</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">myplugin</span><span class=\"o\">::</span><span class=\"n\">setImageProperties</span> <span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">angle_hfov</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">size_t</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">size_t</span> <span class=\"n\">height</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">m_mutex</span><span class=\"p\">.</span><span class=\"n\">wait</span><span class=\"p\">();</span>\n    <span class=\"n\">m_parentSensor</span><span class=\"o\">-&gt;</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"nb\">false</span><span class=\"p\">);</span>\n    <span class=\"n\">m_parentSensor</span><span class=\"o\">-&gt;</span><span class=\"n\">SetActive</span><span class=\"p\">(</span><span class=\"nb\">false</span><span class=\"p\">);</span>\n    <span class=\"n\">m_camera</span><span class=\"o\">-&gt;</span><span class=\"n\">SetCaptureData</span><span class=\"p\">(</span><span class=\"nb\">false</span><span class=\"p\">);</span>\n    <span class=\"n\">m_camera</span><span class=\"o\">-&gt;</span><span class=\"n\">DisconnectNewImageFrame</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">m_updateConnection</span><span class=\"p\">);</span>\n\n    <span class=\"n\">m_camera</span><span class=\"o\">-&gt;</span><span class=\"n\">SetHFOV</span><span class=\"p\">(</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Angle</span><span class=\"p\">(</span><span class=\"n\">angle_hfov</span><span class=\"p\">));</span>\n    <span class=\"n\">m_camera</span><span class=\"o\">-&gt;</span><span class=\"n\">SetImageSize</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span><span class=\"n\">height</span><span class=\"p\">);</span>   \n\n    <span class=\"n\">m_updateConnection</span> <span class=\"o\">=</span> <span class=\"n\">m_camera</span><span class=\"o\">-&gt;</span><span class=\"n\">ConnectNewImageFrame</span><span class=\"p\">(</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">myplugin</span><span class=\"o\">::</span><span class=\"n\">captureImage</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"n\">_1</span><span class=\"p\">,</span> <span class=\"n\">_2</span><span class=\"p\">,</span> <span class=\"n\">_3</span><span class=\"p\">,</span> <span class=\"n\">_4</span><span class=\"p\">,</span> <span class=\"n\">_5</span><span class=\"p\">));</span>\n    <span class=\"n\">m_camera</span><span class=\"o\">-&gt;</span><span class=\"n\">SetCaptureData</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n    <span class=\"n\">m_parentSensor</span><span class=\"o\">-&gt;</span><span class=\"n\">SetActive</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n    <span class=\"n\">m_parentSensor</span><span class=\"o\">-&gt;</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span> <span class=\"c1\">// sometimes here I get segfault during Update()</span>\n\n    <span class=\"n\">m_mutex</span><span class=\"p\">.</span><span class=\"n\">post</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">bool</span> <span class=\"n\">myplugin</span><span class=\"o\">::</span><span class=\"n\">captureImage</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">_image</span><span class=\"p\">,</span>\n                          <span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span>\n                          <span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">_depth</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_format</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">m_mutex</span><span class=\"p\">.</span><span class=\"n\">wait</span><span class=\"p\">();</span>\n<span class=\"c1\">// here _width and _height never changes?!</span>\n  <span class=\"n\">m_mutex</span><span class=\"p\">.</span><span class=\"n\">post</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>However I get random segfaults (maybe a race condition inside the Update() method?) and I do not get the desired change of resolution.\nAm I doing it in the wrong way?\nI have to point out that, instead, m_camera-&gt;SetHFOV() works perfectly.</p>\n<p>Thanks for your help.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-12-07T11:08:33.129364+00:00", "milestone": null, "updated_on": "2016-12-07T18:32:28.306498+00:00", "type": "issue", "id": 2107}