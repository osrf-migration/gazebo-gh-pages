{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1629/comments/20638595.json"}, "html": {"href": "#!/osrf/gazebo/issues/1629#comment-20638595"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1629.json"}}, "type": "issue", "id": 1629, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Removing model from plugin crashes with null pointer"}, "content": {"raw": "I'd like to add some info to this since I'm running into it again, this time without any hope for a workaround. The world plugin I'm using is really quite simple in that it just inserts and removes certain models based on some simulation state. I consistently get boost null pointers on Thread 1 on removing models using an `entity_delete` request though. Relevant part of the gdb output:\n\n```\nThread 1 (Thread 0x7ffff7f80880 (LWP 26363)):\n#0  0x00007ffff49e7cc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n#1  0x00007ffff49eb0d8 in __GI_abort () at abort.c:89\n#2  0x00007ffff49e0b86 in __assert_fail_base (\n    fmt=0x7ffff4b31830 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", \n    assertion=assertion@entry=0x7ffff70afb21 \"px != 0\", \n    file=file@entry=0x7ffff70afef8 \"/usr/include/boost/smart_ptr/shared_ptr.hpp\", line=line@entry=653, \n    function=function@entry=0x7ffff70b2580 \"typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::physics::Entity; typename boost::detail::sp_member_access<T>::type = gazebo::physics::Entit\"...) at assert.c:92\n#3  0x00007ffff49e0c32 in __GI___assert_fail (assertion=0x7ffff70afb21 \"px != 0\", \n    file=0x7ffff70afef8 \"/usr/include/boost/smart_ptr/shared_ptr.hpp\", line=653, \n    function=0x7ffff70b2580 \"typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::physics::Entity; typename boost::detail::sp_member_access<T>::type = gazebo::physics::Entit\"...) at assert.c:101\n#4  0x00007ffff705c2dc in ?? () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5\n#5  0x00007ffff707393e in gazebo::sensors::ContactSensor::Fini() ()\n   from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5\n#6  0x00007ffff70a3ca6 in gazebo::sensors::SensorManager::SensorContainer::RemoveSensor(std::string const&) () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5\n#7  0x00007ffff70a4258 in gazebo::sensors::SensorManager::Update(bool) ()\n   from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5\n#8  0x000000000041583f in gazebo::Server::Run() ()\n#9  0x000000000040dde9 in ?? ()\n#10 0x00007ffff49d2ec5 in __libc_start_main (main=0x40dcf0, argc=3, argv=0x7fffffffd828, \n    init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffd818)\n    at libc-start.c:287\n#11 0x000000000040fb2e in _start ()\n```\n\nAgain, this only seems to happen if the model has sensors - which makes sense given that the error here appears to originate from a `ContactSensor`.\n\nCuriously, this also only appears to happen when using `gzserver`, I've yet to see it happen using the `gazebo` command, though this might be a coincidence.", "markup": "markdown", "html": "<p>I'd like to add some info to this since I'm running into it again, this time without any hope for a workaround. The world plugin I'm using is really quite simple in that it just inserts and removes certain models based on some simulation state. I consistently get boost null pointers on Thread 1 on removing models using an <code>entity_delete</code> request though. Relevant part of the gdb output:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">Thread</span> <span class=\"nt\">1</span> <span class=\"o\">(</span><span class=\"nt\">Thread</span> <span class=\"nt\">0x7ffff7f80880</span> <span class=\"o\">(</span><span class=\"nt\">LWP</span> <span class=\"nt\">26363</span><span class=\"o\">)):</span>\n<span class=\"p\">#</span><span class=\"nn\">0</span>  <span class=\"nt\">0x00007ffff49e7cc9</span> <span class=\"nt\">in</span> <span class=\"nt\">__GI_raise</span> <span class=\"o\">(</span><span class=\"nt\">sig</span><span class=\"o\">=</span><span class=\"nt\">sig</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">6</span><span class=\"o\">)</span> <span class=\"nt\">at</span> <span class=\"o\">../</span><span class=\"nt\">nptl</span><span class=\"o\">/</span><span class=\"nt\">sysdeps</span><span class=\"o\">/</span><span class=\"nt\">unix</span><span class=\"o\">/</span><span class=\"nt\">sysv</span><span class=\"o\">/</span><span class=\"nt\">linux</span><span class=\"o\">/</span><span class=\"nt\">raise</span><span class=\"p\">.</span><span class=\"nc\">c</span><span class=\"p\">:</span><span class=\"nd\">56</span>\n<span class=\"p\">#</span><span class=\"nn\">1</span>  <span class=\"nt\">0x00007ffff49eb0d8</span> <span class=\"nt\">in</span> <span class=\"nt\">__GI_abort</span> <span class=\"o\">()</span> <span class=\"nt\">at</span> <span class=\"nt\">abort</span><span class=\"p\">.</span><span class=\"nc\">c</span><span class=\"p\">:</span><span class=\"nd\">89</span>\n<span class=\"p\">#</span><span class=\"nn\">2</span>  <span class=\"nt\">0x00007ffff49e0b86</span> <span class=\"nt\">in</span> <span class=\"nt\">__assert_fail_base</span> <span class=\"o\">(</span>\n    <span class=\"nt\">fmt</span><span class=\"o\">=</span><span class=\"nt\">0x7ffff4b31830</span> <span class=\"s2\">&quot;%s%s%s:%u: %s%sAssertion `%s&#39; failed.\\n%n&quot;</span><span class=\"o\">,</span> \n    <span class=\"nt\">assertion</span><span class=\"o\">=</span><span class=\"nt\">assertion</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">0x7ffff70afb21</span> <span class=\"s2\">&quot;px != 0&quot;</span><span class=\"o\">,</span> \n    <span class=\"nt\">file</span><span class=\"o\">=</span><span class=\"nt\">file</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">0x7ffff70afef8</span> <span class=\"s2\">&quot;/usr/include/boost/smart_ptr/shared_ptr.hpp&quot;</span><span class=\"o\">,</span> <span class=\"nt\">line</span><span class=\"o\">=</span><span class=\"nt\">line</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">653</span><span class=\"o\">,</span> \n    <span class=\"nt\">function</span><span class=\"o\">=</span><span class=\"nt\">function</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">0x7ffff70b2580</span> <span class=\"err\">&quot;</span><span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">detail</span><span class=\"p\">::</span><span class=\"nd\">sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">&gt;()</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Entity</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Entit</span><span class=\"s2\">&quot;...) at assert.c:92</span>\n<span class=\"s2\">#3  0x00007ffff49e0c32 in __GI___assert_fail (assertion=0x7ffff70afb21 &quot;</span><span class=\"nx\">px</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"s2\">&quot;, </span>\n<span class=\"s2\">    file=0x7ffff70afef8 &quot;</span><span class=\"p\">/</span><span class=\"nx\">usr</span><span class=\"p\">/</span><span class=\"nb\">include</span><span class=\"p\">/</span><span class=\"nx\">boost</span><span class=\"p\">/</span><span class=\"nx\">smart_ptr</span><span class=\"p\">/</span><span class=\"nx\">shared_ptr.hpp</span><span class=\"s2\">&quot;, line=653, </span>\n<span class=\"s2\">    function=0x7ffff70b2580 &quot;</span><span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"nx\">boost</span><span class=\"nl\">::shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::operator</span><span class=\"o\">-&gt;</span><span class=\"p\">()</span> <span class=\"nx\">const</span> <span class=\"err\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Entity</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Entit</span><span class=\"s2\">&quot;...) at assert.c:101</span>\n<span class=\"s2\">#4  0x00007ffff705c2dc in ?? () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5</span>\n<span class=\"s2\">#5  0x00007ffff707393e in gazebo::sensors::ContactSensor::Fini() ()</span>\n<span class=\"s2\">   from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5</span>\n<span class=\"s2\">#6  0x00007ffff70a3ca6 in gazebo::sensors::SensorManager::SensorContainer::RemoveSensor(std::string const&amp;) () from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5</span>\n<span class=\"s2\">#7  0x00007ffff70a4258 in gazebo::sensors::SensorManager::Update(bool) ()</span>\n<span class=\"s2\">   from /usr/lib/x86_64-linux-gnu/libgazebo_sensors.so.5</span>\n<span class=\"s2\">#8  0x000000000041583f in gazebo::Server::Run() ()</span>\n<span class=\"s2\">#9  0x000000000040dde9 in ?? ()</span>\n<span class=\"s2\">#10 0x00007ffff49d2ec5 in __libc_start_main (main=0x40dcf0, argc=3, argv=0x7fffffffd828, </span>\n<span class=\"s2\">    init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffd818)</span>\n<span class=\"s2\">    at libc-start.c:287</span>\n<span class=\"s2\">#11 0x000000000040fb2e in _start ()</span>\n</pre></div>\n\n\n<p>Again, this only seems to happen if the model has sensors - which makes sense given that the error here appears to originate from a <code>ContactSensor</code>.</p>\n<p>Curiously, this also only appears to happen when using <code>gzserver</code>, I've yet to see it happen using the <code>gazebo</code> command, though this might be a coincidence.</p>", "type": "rendered"}, "created_on": "2015-08-02T20:46:25.100149+00:00", "user": {"display_name": "Elte Hupkes", "uuid": "{f23aa1a9-ae57-493f-8169-fbb59b3eae43}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D"}, "html": {"href": "https://bitbucket.org/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8560ee94d50ba277c411499a45b3d732d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEH-5.png"}}, "nickname": "ElteHupkes", "type": "user", "account_id": "557058:b758f523-bdaa-4718-964c-03b825bdea8d"}, "updated_on": null, "type": "issue_comment", "id": 20638595}