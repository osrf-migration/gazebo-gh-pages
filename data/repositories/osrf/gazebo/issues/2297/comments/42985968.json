{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2297/comments/42985968.json"}, "html": {"href": "#!/osrf/gazebo/issues/2297#comment-42985968"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2297.json"}}, "type": "issue", "id": 2297, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Insertions not processed if done at t=0 with world paused"}, "content": {"raw": "Reverting #!/osrf/gazebo/pull-requests/2715 fixes the issue. I tried to revert different parts of that PR but I wasn't able to narrow it down any.\n\n\n#!/osrf/gazebo/issues/2136/gz-log-echo-renders-state-log-unplayable is a similar issue (also from ARIAC), where the default filter of `gz log --echo` stripped the insertion tag from the log file. Since #!/osrf/gazebo/pull-requests/2715 applies the default filter at sim time, it would make sense that it has the same side effect of removing the insertion tag. However, merging #!/osrf/gazebo/pull-requests/2608 didn't seem to fix the issue for me (hopefully I just messed up something in my testing procedure).\n\nSteps to reproduce:\n\n1.  `roslaunch osrf_gear sample_environment.launch` (ARIAC 2017) or `roslaunch osrf_gear sample_environment.launch state_logging:=true` (ARIAC 2018)\n2. move something (anything) around in the simulation so that another logging is triggered, and close the simulation.\n3. `roslaunch osrf_gear gear_playback.launch` will start the previously recorded log file paused (add `state_log_path:=<absolute_path>` to use a different one).\n4. Play the log file, and if it gives `[Err] [World.cc:2180] Unable to find model[robot]` then it hasn't been fixed.", "markup": "markdown", "html": "<p>Reverting <a href=\"#!/osrf/gazebo/pull-requests/2715\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2715</a> fixes the issue. I tried to revert different parts of that PR but I wasn't able to narrow it down any.</p>\n<p><a href=\"#!/osrf/gazebo/issues/2136/gz-log-echo-renders-state-log-unplayable\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issues/2136/gz-log-echo-renders-state-log-unplayable</a> is a similar issue (also from ARIAC), where the default filter of <code>gz log --echo</code> stripped the insertion tag from the log file. Since <a href=\"#!/osrf/gazebo/pull-requests/2715\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2715</a> applies the default filter at sim time, it would make sense that it has the same side effect of removing the insertion tag. However, merging <a href=\"#!/osrf/gazebo/pull-requests/2608\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2608</a> didn't seem to fix the issue for me (hopefully I just messed up something in my testing procedure).</p>\n<p>Steps to reproduce:</p>\n<ol>\n<li><code>roslaunch osrf_gear sample_environment.launch</code> (ARIAC 2017) or <code>roslaunch osrf_gear sample_environment.launch state_logging:=true</code> (ARIAC 2018)</li>\n<li>move something (anything) around in the simulation so that another logging is triggered, and close the simulation.</li>\n<li><code>roslaunch osrf_gear gear_playback.launch</code> will start the previously recorded log file paused (add <code>state_log_path:=&lt;absolute_path&gt;</code> to use a different one).</li>\n<li>Play the log file, and if it gives <code>[Err] [World.cc:2180] Unable to find model[robot]</code> then it hasn't been fixed.</li>\n</ol>", "type": "rendered"}, "created_on": "2018-02-01T01:10:33.670610+00:00", "user": {"display_name": "Deanna Hood", "uuid": "{40d490b4-7de9-4c89-ac1c-2219a22057eb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D"}, "html": {"href": "https://bitbucket.org/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5/f7b56737-eb1f-481f-beb1-50c179565cf4/128"}}, "nickname": "d_hood", "type": "user", "account_id": "557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5"}, "updated_on": null, "type": "issue_comment", "id": 42985968}