{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2186/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2186.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2186/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2186/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2186/usercmdmanager-does-not-use-world-name-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2186/vote"}}, "reporter": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "title": "UserCmdManager does not use world name to initialize node", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "I stumbled over something which could be a minor bug in UserCmdManager.\r\nWhen initializing the node, it is not using the world name, but instead defaults to taking the first available namespace loaded (which is was happens if Node::Init() is called with empty string parameter).\r\n\r\nBecause usually there is only one world loaded, that has probably never shown up to be a problem. But if several worlds are loaded, loading a world after another namespace has already been added will use the wrong topic names.\r\n\r\nIn UserCmdManager.cpp this affects only one line in Init():\r\n\r\n```cpp\r\n/////////////////////////////////////////////////\r\nUserCmdManager::UserCmdManager(const WorldPtr _world)\r\n  : dataPtr(new UserCmdManagerPrivate())\r\n{\r\n  this->dataPtr->world = _world;\r\n\r\n  this->dataPtr->node = transport::NodePtr(new transport::Node());\r\n  this->dataPtr->node->Init();\r\n  // THIS SHOULD INSTEAD BE:\r\n  // this->dataPtr->node->Init(_world->Name());\r\n...\r\n```\r\n\r\nThe change is included in [this branch](https://bitbucket.org/JenniferBuehler/gazebo/src/a6a05d9575229ca1d73dcc8f7e40ef1da7a1307e/gazebo/physics/UserCmdManager.cc?at=user_cmd_mangager_using_world_name&fileviewer=file-view-default#UserCmdManager.cc-111), let me know if I should send a PR for this.", "markup": "markdown", "html": "<p>I stumbled over something which could be a minor bug in UserCmdManager.\nWhen initializing the node, it is not using the world name, but instead defaults to taking the first available namespace loaded (which is was happens if Node::Init() is called with empty string parameter).</p>\n<p>Because usually there is only one world loaded, that has probably never shown up to be a problem. But if several worlds are loaded, loading a world after another namespace has already been added will use the wrong topic names.</p>\n<p>In UserCmdManager.cpp this affects only one line in Init():</p>\n<div class=\"codehilite language-cpp\"><pre><span></span><span class=\"c1\">/////////////////////////////////////////////////</span>\n<span class=\"n\">UserCmdManager</span><span class=\"o\">::</span><span class=\"n\">UserCmdManager</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">WorldPtr</span> <span class=\"n\">_world</span><span class=\"p\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">dataPtr</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">UserCmdManagerPrivate</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"n\">_world</span><span class=\"p\">;</span>\n\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">NodePtr</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span><span class=\"p\">());</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">node</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">();</span>\n  <span class=\"c1\">// THIS SHOULD INSTEAD BE:</span>\n  <span class=\"c1\">// this-&gt;dataPtr-&gt;node-&gt;Init(_world-&gt;Name());</span>\n<span class=\"p\">...</span>\n</pre></div>\n\n\n<p>The change is included in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/JenniferBuehler/gazebo/src/a6a05d9575229ca1d73dcc8f7e40ef1da7a1307e/gazebo/physics/UserCmdManager.cc?at=user_cmd_mangager_using_world_name&amp;fileviewer=file-view-default#UserCmdManager.cc-111\" rel=\"nofollow\">this branch</a>, let me know if I should send a PR for this.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2017-02-08T00:15:32.731811+00:00", "milestone": null, "updated_on": "2017-03-23T18:48:43.472735+00:00", "type": "issue", "id": 2186}