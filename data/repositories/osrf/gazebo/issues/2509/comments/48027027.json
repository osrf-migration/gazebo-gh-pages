{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2509/comments/48027027.json"}, "html": {"href": "#!/osrf/gazebo/issues/2509#comment-48027027"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2509.json"}}, "type": "issue", "id": 2509, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Running physics::World step-wise"}, "content": {"raw": "Thanks for your response. I was looking for step by step simulation without changing Gazebo's APIs. Anyway, i found one solution for now by changing your option 2 a bit.\n\n      world->Run(100000);\n      while(/* con */){    \n               //Do Stuff\n               world->Step(1);     \n           }", "markup": "markdown", "html": "<p>Thanks for your response. I was looking for step by step simulation without changing Gazebo's APIs. Anyway, i found one solution for now by changing your option 2 a bit.</p>\n<div class=\"codehilite\"><pre><span></span>  world-&gt;Run(100000);\n  while(/* con */){    \n           //Do Stuff\n           world-&gt;Step(1);     \n       }\n</pre></div>", "type": "rendered"}, "created_on": "2018-09-26T16:44:59.476554+00:00", "user": {"display_name": "sainul IA", "uuid": "{014e6e73-d3c2-48cc-9515-4bd69aae5e12}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B014e6e73-d3c2-48cc-9515-4bd69aae5e12%7D"}, "html": {"href": "https://bitbucket.org/%7B014e6e73-d3c2-48cc-9515-4bd69aae5e12%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ebcdaed23c63ebf11aef4286df1919a2d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSI-0.png"}}, "nickname": "sainulia", "type": "user", "account_id": "5ba8d26cb4bbaa6dd016fd75"}, "updated_on": "2018-09-26T16:48:54.436532+00:00", "type": "issue_comment", "id": 48027027}