{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1510/comments/29275170.json"}, "html": {"href": "#!/osrf/gazebo/issues/1510#comment-29275170"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1510.json"}}, "type": "issue", "id": 1510, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Incorrect Ctrl key state in GUI"}, "content": {"raw": "Issue #2007 was caused by `GLWidget::keyReleaseEvent` not being called when a shortcut is released. i.e.:\n\n1. Press `Crtrl` -> `GLWidget::keyPressEvent` is called\n\n1. Press `T` -> Shortcut is activated and `MainWindow::SelectTopic` is called. `GLWidget` doesn't get the press event.\n\n1. Release `Ctrl` and `T` -> `GLWidget` doesn't get the release events.\n\nIt looks like the shortcut is swallowing the keypress for `T`. As for the releases, if you do `Ctrl+M` to open the model editor for example, `GLWidget` gets the them. So I think that if a shortcut opens a dialog, the dialog is swallowing the releases.\n\nI tried a couple things which **didn't work**:\n\n* Setting the shortcut context to be the whole application instead of only the window:\n    \n    [g_topicVisAct->setShortcutContext(Qt::ApplicationShortcut)](#!/osrf/gazebo/src/17137a79cbe8a936a63dccdca8a637fc92067692/gazebo/gui/MainWindow.cc?at=default&fileviewer=file-view-default#MainWindow.cc-1087)\n\n* Installing an event filter for the `TopicSelector` so its events go on to the `MainWindow`:\n\n    [selector->installEventFilter(this)](#!/osrf/gazebo/src/17137a79cbe8a936a63dccdca8a637fc92067692/gazebo/gui/MainWindow.cc?at=default&fileviewer=file-view-default#MainWindow.cc-425)\n\nI didn't try anything more involved like actually capturing the events on the dialog, because I think that would be a real pain to implement for every dialog we have, and there might be a more elegant solution.\n\nFor now, I propose adding a check for `QApplication::keyboardModifiers()` to fix issue #2007 on pull request #2398. \n\nAnother fun fact: Qt provides API to get the currently pressed [keyboard modifiers](http://doc.qt.io/qt-4.8/qapplication.html#keyboardModifiers), but to check for other keys, we have to filter events. Which is what we're doing... and gets messed up with dialogs...", "markup": "markdown", "html": "<p>Issue <a href=\"#!/osrf/gazebo/issues/2007/translation-mode-not-working-on-unselected\" rel=\"nofollow\" title=\"Translation mode not working on unselected objects if topic viewer is open\" class=\"ap-connect-link\"><s>#2007</s></a> was caused by <code>GLWidget::keyReleaseEvent</code> not being called when a shortcut is released. i.e.:</p>\n<ol>\n<li>\n<p>Press <code>Crtrl</code> -&gt; <code>GLWidget::keyPressEvent</code> is called</p>\n</li>\n<li>\n<p>Press <code>T</code> -&gt; Shortcut is activated and <code>MainWindow::SelectTopic</code> is called. <code>GLWidget</code> doesn't get the press event.</p>\n</li>\n<li>\n<p>Release <code>Ctrl</code> and <code>T</code> -&gt; <code>GLWidget</code> doesn't get the release events.</p>\n</li>\n</ol>\n<p>It looks like the shortcut is swallowing the keypress for <code>T</code>. As for the releases, if you do <code>Ctrl+M</code> to open the model editor for example, <code>GLWidget</code> gets the them. So I think that if a shortcut opens a dialog, the dialog is swallowing the releases.</p>\n<p>I tried a couple things which <strong>didn't work</strong>:</p>\n<ul>\n<li>\n<p>Setting the shortcut context to be the whole application instead of only the window:</p>\n<p><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/17137a79cbe8a936a63dccdca8a637fc92067692/gazebo/gui/MainWindow.cc?at=default&amp;fileviewer=file-view-default#MainWindow.cc-1087\" rel=\"nofollow\">g_topicVisAct-&gt;setShortcutContext(Qt::ApplicationShortcut)</a></p>\n</li>\n<li>\n<p>Installing an event filter for the <code>TopicSelector</code> so its events go on to the <code>MainWindow</code>:</p>\n<p><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/17137a79cbe8a936a63dccdca8a637fc92067692/gazebo/gui/MainWindow.cc?at=default&amp;fileviewer=file-view-default#MainWindow.cc-425\" rel=\"nofollow\">selector-&gt;installEventFilter(this)</a></p>\n</li>\n</ul>\n<p>I didn't try anything more involved like actually capturing the events on the dialog, because I think that would be a real pain to implement for every dialog we have, and there might be a more elegant solution.</p>\n<p>For now, I propose adding a check for <code>QApplication::keyboardModifiers()</code> to fix issue <a href=\"#!/osrf/gazebo/issues/2007/translation-mode-not-working-on-unselected\" rel=\"nofollow\" title=\"Translation mode not working on unselected objects if topic viewer is open\" class=\"ap-connect-link\"><s>#2007</s></a> on <a href=\"#!/osrf/gazebo/pull-requests/2398/fix-issue-2007\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2398</a>. </p>\n<p>Another fun fact: Qt provides API to get the currently pressed <a data-is-external-link=\"true\" href=\"http://doc.qt.io/qt-4.8/qapplication.html#keyboardModifiers\" rel=\"nofollow\">keyboard modifiers</a>, but to check for other keys, we have to filter events. Which is what we're doing... and gets messed up with dialogs...</p>", "type": "rendered"}, "created_on": "2016-07-18T20:29:50.441123+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 29275170}