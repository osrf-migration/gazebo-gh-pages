{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/23928950.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-23928950"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": "Related ROS issue:\n\n* https://github.com/ros-visualization/qt_gui_core/issues/56", "markup": "markdown", "html": "<p>Related ROS issue:</p>\n<ul>\n<li><a href=\"https://github.com/ros-visualization/qt_gui_core/issues/56\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros-visualization/qt_gui_core/issues/56</a></li>\n</ul>", "type": "rendered"}, "created_on": "2015-12-09T17:57:31.684016+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 23928950}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/26111076.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-26111076"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": "More information here: https://github.com/ros-infrastructure/rep/pull/112\n", "markup": "markdown", "html": "<p>More information here: <a href=\"https://github.com/ros-infrastructure/rep/pull/112\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros-infrastructure/rep/pull/112</a></p>", "type": "rendered"}, "created_on": "2016-03-10T06:56:35.596223+00:00", "user": {"display_name": "Nicolae Rosia", "uuid": "{47441263-bb15-495f-b324-58a1e3c7b35f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D"}, "html": {"href": "https://bitbucket.org/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1b61ff7ec618b3e8743b8ab9743e4108d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNR-6.png"}}, "nickname": "nicolaerosia", "type": "user", "account_id": "557058:2ea02a3a-4b8d-4620-8154-81f2eb2f71af"}, "updated_on": null, "type": "issue_comment", "id": 26111076}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/26735548.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-26735548"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": "@nkoenig has been working on this in the [qt5 branch](#!/osrf/gazebo/branches/compare/qt5%0Ddefault#diff). There is also a [qt5 release-tools branch](https://bitbucket.org/osrf/release-tools/commits/09eace29b1f8c869f8e8ad477e1a84947c3565a6?at=qt5) for jenkins testing on Ubuntu.\n\nI have been testing on homebrew, and it hasn't been easy, but I've learned the following things:\n\n* qt installations aren't sand-boxed on osx. Qt4 must be uninstalled (or at least unlinked) in order to use Qt5 on homebrew.\n* The Qt5 version is important. Trusty has Qt5.2, Xenial has Qt5.5, and homebrew currently has\u00a0Qt5.6. We use `QWebView` from `QtWebKitWidgets` in [HotKeyTable.cc](#!/osrf/gazebo/src/0cc955fdbe127572a5355c67f103f6d39d3e3350/gazebo/gui/HotkeyDialog.cc?fileviewer=file-view-default#HotkeyDialog.cc-24), but `QtWebKitWidgets` was removed from 5.6 in favor `QWebEngine` ([release notes](http://doc.qt.io/qt-5/whatsnew56.html)). So I'm currently testing with Qt 5.5 on homebrew using the `homebrew/versions/qt55` formula.", "markup": "markdown", "html": "<p>@nkoenig has been working on this in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/qt5%0Ddefault#diff\" rel=\"nofollow\">qt5 branch</a>. There is also a <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/release-tools/commits/09eace29b1f8c869f8e8ad477e1a84947c3565a6?at=qt5\" rel=\"nofollow\">qt5 release-tools branch</a> for jenkins testing on Ubuntu.</p>\n<p>I have been testing on homebrew, and it hasn't been easy, but I've learned the following things:</p>\n<ul>\n<li>qt installations aren't sand-boxed on osx. Qt4 must be uninstalled (or at least unlinked) in order to use Qt5 on homebrew.</li>\n<li>The Qt5 version is important. Trusty has Qt5.2, Xenial has Qt5.5, and homebrew currently has\u00a0Qt5.6. We use <code>QWebView</code> from <code>QtWebKitWidgets</code> in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/0cc955fdbe127572a5355c67f103f6d39d3e3350/gazebo/gui/HotkeyDialog.cc?fileviewer=file-view-default#HotkeyDialog.cc-24\" rel=\"nofollow\">HotKeyTable.cc</a>, but <code>QtWebKitWidgets</code> was removed from 5.6 in favor <code>QWebEngine</code> (<a data-is-external-link=\"true\" href=\"http://doc.qt.io/qt-5/whatsnew56.html\" rel=\"nofollow\">release notes</a>). So I'm currently testing with Qt 5.5 on homebrew using the <code>homebrew/versions/qt55</code> formula.</li>\n</ul>", "type": "rendered"}, "created_on": "2016-04-05T00:32:15.021766+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 26735548}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/26735781.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-26735781"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": "@wjwwood does anything in ROS use `QtWebKitWidgets`? It would require `ifdef`s for gazebo to support Qt5.6 on homebrew while supporting 5.5 on Xenial (see previous comment for context).", "markup": "markdown", "html": "<p>@wjwwood does anything in ROS use <code>QtWebKitWidgets</code>? It would require <code>ifdef</code>s for gazebo to support Qt5.6 on homebrew while supporting 5.5 on Xenial (see previous comment for context).</p>", "type": "rendered"}, "created_on": "2016-04-05T00:54:23.146939+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 26735781}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/26735944.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-26735944"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": "The `qt5` branch now builds for me on homebrew with the `qt55` formula, but the gui tests are failing to create ogre windows. For example, `UNIT_GuiIface_TEST` fails during `Ogre::Root::createRenderWindow`:\n\n~~~\n********* Start testing of GuiIface_TEST *********\nConfig: Using QtTest library 5.5.1, Qt 5.5.1 (x86_64-little_endian-lp64 shared (dynamic) release build; by Clang 7.0.2 (clang-700.1.81) (Apple))\nPASS   : GuiIface_TEST::initTestCase()\nProcess 96929 stopped\n* thread #1: tid = 0x64b904, 0x0000000103201a79 libOgreMain.1.7.4.dylib`Ogre::RenderSystem::attachRenderTarget(Ogre::RenderTarget&) + 19, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n    frame #0: 0x0000000103201a79 libOgreMain.1.7.4.dylib`Ogre::RenderSystem::attachRenderTarget(Ogre::RenderTarget&) + 19\nlibOgreMain.1.7.4.dylib`Ogre::RenderSystem::attachRenderTarget:\n->  0x103201a79 <+19>: movq   (%rbx), %rax\n    0x103201a7c <+22>: movq   %rbx, %rdi\n    0x103201a7f <+25>: callq  *0xe0(%rax)\n    0x103201a85 <+31>: movzbl %al, %eax\n(lldb)\n~~~\n\n~~~\n(lldb) bt\n* thread #1: tid = 0x64b904, 0x0000000103201a79 libOgreMain.1.7.4.dylib`Ogre::RenderSystem::attachRenderTarget(Ogre::RenderTarget&) + 19, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n  * frame #0: 0x0000000103201a79 libOgreMain.1.7.4.dylib`Ogre::RenderSystem::attachRenderTarget(Ogre::RenderTarget&) + 19\n    frame #1: 0x0000000116d4ca70 libRenderSystem_GL.dylib`Ogre::GLRenderSystem::_createRenderWindow(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int, bool, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, Ogre::STLAllocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, Ogre::CategorisedAllocPolicy<(Ogre::MemoryCategory)0> > > const*) + 854\n    frame #2: 0x0000000103237068 libOgreMain.1.7.4.dylib`Ogre::Root::createRenderWindow(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int, bool, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, Ogre::STLAllocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, Ogre::CategorisedAllocPolicy<(Ogre::MemoryCategory)0> > > const*) + 38\n    frame #3: 0x000000010384a822 libgazebo_rendering.7.dylib`gazebo::rendering::WindowManager::CreateWindow(this=0x000000010c045230, _ogreHandle=<unavailable>, _width=1, _height=1) + 946 at WindowManager.cc:116\n    frame #4: 0x00000001037cfd6a libgazebo_rendering.7.dylib`gazebo::rendering::RenderEngine::Load(this=0x00000001007660b0) + 1162 at RenderEngine.cc:153\n    frame #5: 0x00000001037d9e18 libgazebo_rendering.7.dylib`gazebo::rendering::load() + 104 at RenderingIface.cc:33\n    frame #6: 0x000000010a16d0b4 QtCore`QMetaMethod::invoke(QObject*, Qt::ConnectionType, QGenericReturnArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) const + 1364\n    frame #7: 0x0000000100ab4b6f QtTest`QTest::invokeMethod(QObject*, char const*) + 367\n    frame #8: 0x0000000100ab4e73 QtTest`QTest::qInvokeTestMethod(char const*, char const*) + 755\n    frame #9: 0x0000000100ab05e0 QtTest`QTest::qExec(QObject*, int, char**) + 1328\n    frame #10: 0x000000010001b8f9 UNIT_GuiIface_TEST`main(argc=<unavailable>, argv=0x00007fff5fbff8c8) + 121 at GuiIface_TEST.cc:205\n    frame #11: 0x00007fff87b0d5c9 libdyld.dylib`start + 1\n    frame #12: 0x00007fff87b0d5c9 libdyld.dylib`start + 1\n(lldb) \n\n~~~", "markup": "markdown", "html": "<p>The <code>qt5</code> branch now builds for me on homebrew with the <code>qt55</code> formula, but the gui tests are failing to create ogre windows. For example, <code>UNIT_GuiIface_TEST</code> fails during <code>Ogre::Root::createRenderWindow</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">*********</span> <span class=\"nt\">Start</span> <span class=\"nt\">testing</span> <span class=\"nt\">of</span> <span class=\"nt\">GuiIface_TEST</span> <span class=\"o\">*********</span>\n<span class=\"nt\">Config</span><span class=\"o\">:</span> <span class=\"nt\">Using</span> <span class=\"nt\">QtTest</span> <span class=\"nt\">library</span> <span class=\"nt\">5</span><span class=\"p\">.</span><span class=\"nc\">5</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">,</span> <span class=\"nt\">Qt</span> <span class=\"nt\">5</span><span class=\"p\">.</span><span class=\"nc\">5</span><span class=\"p\">.</span><span class=\"nc\">1</span> <span class=\"o\">(</span><span class=\"nt\">x86_64-little_endian-lp64</span> <span class=\"nt\">shared</span> <span class=\"o\">(</span><span class=\"nt\">dynamic</span><span class=\"o\">)</span> <span class=\"nt\">release</span> <span class=\"nt\">build</span><span class=\"o\">;</span> <span class=\"nt\">by</span> <span class=\"nt\">Clang</span> <span class=\"nt\">7</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"p\">.</span><span class=\"nc\">2</span> <span class=\"o\">(</span><span class=\"nt\">clang-700</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"p\">.</span><span class=\"nc\">81</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"nt\">Apple</span><span class=\"o\">))</span>\n<span class=\"nt\">PASS</span>   <span class=\"o\">:</span> <span class=\"nt\">GuiIface_TEST</span><span class=\"p\">::</span><span class=\"nd\">initTestCase</span><span class=\"o\">()</span>\n<span class=\"nt\">Process</span> <span class=\"nt\">96929</span> <span class=\"nt\">stopped</span>\n<span class=\"o\">*</span> <span class=\"nt\">thread</span> <span class=\"p\">#</span><span class=\"nn\">1</span><span class=\"o\">:</span> <span class=\"nt\">tid</span> <span class=\"o\">=</span> <span class=\"nt\">0x64b904</span><span class=\"o\">,</span> <span class=\"nt\">0x0000000103201a79</span> <span class=\"nt\">libOgreMain</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"p\">.</span><span class=\"nc\">7</span><span class=\"p\">.</span><span class=\"nc\">4</span><span class=\"p\">.</span><span class=\"nc\">dylib</span><span class=\"err\">`</span><span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">RenderSystem</span><span class=\"p\">::</span><span class=\"nd\">attachRenderTarget</span><span class=\"o\">(</span><span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">RenderTarget</span><span class=\"o\">&amp;)</span> <span class=\"o\">+</span> <span class=\"nt\">19</span><span class=\"o\">,</span> <span class=\"nt\">queue</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;com.apple.main-thread&#39;</span><span class=\"o\">,</span> <span class=\"nt\">stop</span> <span class=\"nt\">reason</span> <span class=\"o\">=</span> <span class=\"nt\">EXC_BAD_ACCESS</span> <span class=\"o\">(</span><span class=\"nt\">code</span><span class=\"o\">=</span><span class=\"nt\">1</span><span class=\"o\">,</span> <span class=\"nt\">address</span><span class=\"o\">=</span><span class=\"nt\">0x0</span><span class=\"o\">)</span>\n    <span class=\"nt\">frame</span> <span class=\"p\">#</span><span class=\"nn\">0</span><span class=\"o\">:</span> <span class=\"nt\">0x0000000103201a79</span> <span class=\"nt\">libOgreMain</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"p\">.</span><span class=\"nc\">7</span><span class=\"p\">.</span><span class=\"nc\">4</span><span class=\"p\">.</span><span class=\"nc\">dylib</span><span class=\"err\">`</span><span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">RenderSystem</span><span class=\"p\">::</span><span class=\"nd\">attachRenderTarget</span><span class=\"o\">(</span><span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">RenderTarget</span><span class=\"o\">&amp;)</span> <span class=\"o\">+</span> <span class=\"nt\">19</span>\n<span class=\"nt\">libOgreMain</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"p\">.</span><span class=\"nc\">7</span><span class=\"p\">.</span><span class=\"nc\">4</span><span class=\"p\">.</span><span class=\"nc\">dylib</span><span class=\"err\">`</span><span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">RenderSystem</span><span class=\"p\">::</span><span class=\"nd\">attachRenderTarget</span><span class=\"o\">:</span>\n<span class=\"nt\">-</span><span class=\"o\">&gt;</span>  <span class=\"nt\">0x103201a79</span> <span class=\"o\">&lt;+</span><span class=\"nt\">19</span><span class=\"o\">&gt;:</span> <span class=\"nt\">movq</span>   <span class=\"o\">(%</span><span class=\"nt\">rbx</span><span class=\"o\">),</span> <span class=\"o\">%</span><span class=\"nt\">rax</span>\n    <span class=\"nt\">0x103201a7c</span> <span class=\"o\">&lt;+</span><span class=\"nt\">22</span><span class=\"o\">&gt;:</span> <span class=\"nt\">movq</span>   <span class=\"o\">%</span><span class=\"nt\">rbx</span><span class=\"o\">,</span> <span class=\"o\">%</span><span class=\"nt\">rdi</span>\n    <span class=\"nt\">0x103201a7f</span> <span class=\"o\">&lt;+</span><span class=\"nt\">25</span><span class=\"o\">&gt;:</span> <span class=\"nt\">callq</span>  <span class=\"o\">*</span><span class=\"nt\">0xe0</span><span class=\"o\">(%</span><span class=\"nt\">rax</span><span class=\"o\">)</span>\n    <span class=\"nt\">0x103201a85</span> <span class=\"o\">&lt;+</span><span class=\"nt\">31</span><span class=\"o\">&gt;:</span> <span class=\"nt\">movzbl</span> <span class=\"o\">%</span><span class=\"nt\">al</span><span class=\"o\">,</span> <span class=\"o\">%</span><span class=\"nt\">eax</span>\n<span class=\"o\">(</span><span class=\"nt\">lldb</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>(lldb) bt\n* thread #1: tid = 0x64b904, 0x0000000103201a79 libOgreMain.1.7.4.dylib`Ogre::RenderSystem::attachRenderTarget(Ogre::RenderTarget&amp;) + 19, queue = &#39;com.apple.main-thread&#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n  * frame #0: 0x0000000103201a79 libOgreMain.1.7.4.dylib`Ogre::RenderSystem::attachRenderTarget(Ogre::RenderTarget&amp;) + 19\n    frame #1: 0x0000000116d4ca70 libRenderSystem_GL.dylib`Ogre::GLRenderSystem::_createRenderWindow(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, unsigned int, unsigned int, bool, std::__1::map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, Ogre::STLAllocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, Ogre::CategorisedAllocPolicy&lt;(Ogre::MemoryCategory)0&gt; &gt; &gt; const*) + 854\n    frame #2: 0x0000000103237068 libOgreMain.1.7.4.dylib`Ogre::Root::createRenderWindow(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, unsigned int, unsigned int, bool, std::__1::map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, Ogre::STLAllocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, Ogre::CategorisedAllocPolicy&lt;(Ogre::MemoryCategory)0&gt; &gt; &gt; const*) + 38\n    frame #3: 0x000000010384a822 libgazebo_rendering.7.dylib`gazebo::rendering::WindowManager::CreateWindow(this=0x000000010c045230, _ogreHandle=&lt;unavailable&gt;, _width=1, _height=1) + 946 at WindowManager.cc:116\n    frame #4: 0x00000001037cfd6a libgazebo_rendering.7.dylib`gazebo::rendering::RenderEngine::Load(this=0x00000001007660b0) + 1162 at RenderEngine.cc:153\n    frame #5: 0x00000001037d9e18 libgazebo_rendering.7.dylib`gazebo::rendering::load() + 104 at RenderingIface.cc:33\n    frame #6: 0x000000010a16d0b4 QtCore`QMetaMethod::invoke(QObject*, Qt::ConnectionType, QGenericReturnArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) const + 1364\n    frame #7: 0x0000000100ab4b6f QtTest`QTest::invokeMethod(QObject*, char const*) + 367\n    frame #8: 0x0000000100ab4e73 QtTest`QTest::qInvokeTestMethod(char const*, char const*) + 755\n    frame #9: 0x0000000100ab05e0 QtTest`QTest::qExec(QObject*, int, char**) + 1328\n    frame #10: 0x000000010001b8f9 UNIT_GuiIface_TEST`main(argc=&lt;unavailable&gt;, argv=0x00007fff5fbff8c8) + 121 at GuiIface_TEST.cc:205\n    frame #11: 0x00007fff87b0d5c9 libdyld.dylib`start + 1\n    frame #12: 0x00007fff87b0d5c9 libdyld.dylib`start + 1\n(lldb) \n</pre></div>", "type": "rendered"}, "created_on": "2016-04-05T01:07:28.877572+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 26735944}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/30609426.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-30609426"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:19:59.047818+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30609426}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/32218697.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-32218697"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": "I was testing the qt5 branch recently and noticed two issues:\n\n* Plot zooming seems to have problems. It doesn't stay centered on the cursor when zoooming.\n* Opening a world with the keyboard GUI plugin seemed to cause a weird box in the display instead of being hidden.", "markup": "markdown", "html": "<p>I was testing the qt5 branch recently and noticed two issues:</p>\n<ul>\n<li>Plot zooming seems to have problems. It doesn't stay centered on the cursor when zoooming.</li>\n<li>Opening a world with the keyboard GUI plugin seemed to cause a weird box in the display instead of being hidden.</li>\n</ul>", "type": "rendered"}, "created_on": "2016-11-16T19:21:04.433669+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 32218697}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804/comments/34074559.json"}, "html": {"href": "#!/osrf/gazebo/issues/1804#comment-34074559"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1804.json"}}, "type": "issue", "id": 1804, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Migrate to qt5"}, "content": {"raw": "pull request #2572", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/2572/qt5\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2572</a></p>", "type": "rendered"}, "created_on": "2017-01-31T19:13:08.357697+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 34074559}], "page": 1, "size": 8}