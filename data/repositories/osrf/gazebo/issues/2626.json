{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2626/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2626.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2626/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2626/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2626/physics-model-removechild-removes-a-wrong"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2626/vote"}}, "reporter": {"display_name": "Yoshito Okada", "uuid": "{2e58a2cb-6966-47eb-a7d1-c8cc34145c58}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e58a2cb-6966-47eb-a7d1-c8cc34145c58%7D"}, "html": {"href": "https://bitbucket.org/%7B2e58a2cb-6966-47eb-a7d1-c8cc34145c58%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fb8c0275908650f37e3d783c0938f5a1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYO-5.png"}}, "nickname": "yoshito-okada", "type": "user", "account_id": "5a2e0944c6bd4a32df3b14d2"}, "title": "physics::Model::RemoveChild() removes a wrong joint", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "physics::Model::RemoveChild\\(\\) can remove a wrong joint because it compares unscoped names at here\\( [#!/osrf/gazebo/src/7c2936c66a23e6c6707fe4c7790458e75824407e/gazebo/physics/Model.cc#lines-392](#!/osrf/gazebo/src/7c2936c66a23e6c6707fe4c7790458e75824407e/gazebo/physics/Model.cc#lines-392) \\).\r\n\r\n\u200c\r\n\r\nWhen RemoveChild\\(\\) is requested to remove a link, it tries to remove the link and also joints whose parent or child is the link.  The issue is that it only compares unscoped names of parent and child links when searching the joints.   This search can pick wrong joints if the model has links whose unscoped names are same \\(ex. \u201clink\u201c and \u201cnested\\_model::link\u201c\\).  To fix this bug, I think GetName\\(\\) should be replaced to GetScopedName\\(\\) in the if-statement on the above URL.", "markup": "markdown", "html": "<p>physics::Model::RemoveChild() can remove a wrong joint because it compares unscoped names at here( <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/7c2936c66a23e6c6707fe4c7790458e75824407e/gazebo/physics/Model.cc#lines-392\" rel=\"nofollow\">#!/osrf/gazebo/src/7c2936c66a23e6c6707fe4c7790458e75824407e/gazebo/physics/Model.cc#lines-392</a> ).</p>\n<p>\u200c</p>\n<p>When RemoveChild() is requested to remove a link, it tries to remove the link and also joints whose parent or child is the link.  The issue is that it only compares unscoped names of parent and child links when searching the joints.   This search can pick wrong joints if the model has links whose unscoped names are same (ex. \u201clink\u201c and \u201cnested_model::link\u201c).  To fix this bug, I think GetName() should be replaced to GetScopedName() in the if-statement on the above URL.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2019-05-09T03:05:19.817997+00:00", "milestone": null, "updated_on": "2019-05-09T03:26:22.046283+00:00", "type": "issue", "id": 2626}