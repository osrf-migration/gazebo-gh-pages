{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1299/comments/12903335.json"}, "html": {"href": "#!/osrf/gazebo/issues/1299#comment-12903335"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1299.json"}}, "type": "issue", "id": 1299, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "INTEGRATION_world_clone failures can leave rogue gzserver processes"}, "content": {"raw": "It could potentially kill the future options of running all the tests in parallel using different gzservers or run manually gazebo while the test suite is being run. I would prefer to figure out a way of clean up only after the clone test and don't close the door to potential parallelization. \n\n\n", "markup": "markdown", "html": "<p>It could potentially kill the future options of running all the tests in parallel using different gzservers or run manually gazebo while the test suite is being run. I would prefer to figure out a way of clean up only after the clone test and don't close the door to potential parallelization. </p>", "type": "rendered"}, "created_on": "2014-10-11T01:18:41.500202+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 12903335}