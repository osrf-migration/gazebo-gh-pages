{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1299/comments/12970648.json"}, "html": {"href": "#!/osrf/gazebo/issues/1299#comment-12970648"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1299.json"}}, "type": "issue", "id": 1299, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "INTEGRATION_world_clone failures can leave rogue gzserver processes"}, "content": {"raw": "The following would be a workaround until the ServerControl message is modified:\n~~~\ndiff -r 7cf2bfe6c08a tools/check_test_ran.py\n--- a/tools/check_test_ran.py\tFri Oct 10 11:41:12 2014 -0700\n+++ b/tools/check_test_ran.py\tTue Oct 14 15:23:37 2014 -0700\n@@ -43,6 +43,8 @@\n NAME=\"check_test_ran.py\"\n \n import os\n+import re\n+import string\n import sys\n import subprocess\n \n@@ -107,5 +109,18 @@\n         stylesheet = os.path.dirname(os.path.abspath(__file__)) + \"/qtest_to_junit.xslt\"\n         run_xsltproc(stylesheet, test_file)\n \n+    # kill rogue gzservers from INTEGRATION_world_clone test\n+    # #!/osrf/gazebo/issue/1299\n+    if 'INTEGRATION_world_clone' in test_file:\n+        process = subprocess.Popen(['ps', 'ax'], stdout=subprocess.PIPE)\n+        stdout, stderr = process.communicate()\n+        for line in string.split(stdout, '\\n'):\n+            if line.find('gzserver /tmp/clone.11347.world') >= 0:\n+                m = re.search('^([0-9]+) .*', line)\n+                print(line)\n+                pid = m.group(1)\n+                print(\"killing gzserver with pid %s\" % (pid))\n+                subprocess.call([\"kill\", \"%s\" % (pid)])\n+\n if __name__ == '__main__':\n     check_main()\n~~~\n\nTo test, apply the following:\n~~~\ndiff -r 7cf2bfe6c08a test/integration/CMakeLists.txt\n--- a/test/integration/CMakeLists.txt\tFri Oct 10 11:41:12 2014 -0700\n+++ b/test/integration/CMakeLists.txt\tTue Oct 14 15:23:37 2014 -0700\n@@ -92,6 +92,8 @@\n   set_tests_properties(${TEST_TYPE}_factory PROPERTIES TIMEOUT 500)\n   set_tests_properties(${TEST_TYPE}_physics PROPERTIES TIMEOUT 500)\n \n+  set_tests_properties(${TEST_TYPE}_world_clone PROPERTIES TIMEOUT 10)\n+\n   # Add plugin dependency\n   add_dependencies(${TEST_TYPE}_joint_test SpringTestPlugin)\n endif()\ndiff -r 7cf2bfe6c08a test/integration/world_clone.cc\n--- a/test/integration/world_clone.cc\tFri Oct 10 11:41:12 2014 -0700\n+++ b/test/integration/world_clone.cc\tTue Oct 14 15:23:37 2014 -0700\n@@ -195,7 +195,7 @@\n   // Check that the cloned world contains the camera topics.\n   output = custom_exec_str(\"gz topic -l\");\n   EXPECT_NE(output.find(\"/gazebo/default/camera/\"), std::string::npos);\n-\n+FAIL();\n   // Kill the cloned server. In the case of no presence of gzserver ps will\n   // return the own ps process so it probably will do nothing. No effect.\n   // This should work on Linux and Mac\n~~~\nand run this command:\n~~~\n$ make test ARGS=\"-VV -R INTEGRATION_world_clone\"\n...\n250: Checking for test results in /tmp/gazebo_build/source/build/test_results/INTEGRATION_world_clone.xml\n250: 12427 pts/13   Sl+    0:01 gzserver /tmp/clone.11347.world\n250: killing gzserver with 12427\n2/2 Test #250: check_INTEGRATION_world_clone ....   Passed    0.04 sec\n...\n$ ps ax | grep 'gzserver /tmp/clone.11347.world'\n~~~\nI'll make a pull request for this when I have a chance.", "markup": "markdown", "html": "<p>The following would be a workaround until the ServerControl message is modified:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 7cf2bfe6c08a tools/check_test_ran.py</span>\n<span class=\"gd\">--- a/tools/check_test_ran.py   Fri Oct 10 11:41:12 2014 -0700</span>\n<span class=\"gi\">+++ b/tools/check_test_ran.py   Tue Oct 14 15:23:37 2014 -0700</span>\n<span class=\"gu\">@@ -43,6 +43,8 @@</span>\n NAME=&quot;check_test_ran.py&quot;\n\n import os\n<span class=\"gi\">+import re</span>\n<span class=\"gi\">+import string</span>\n import sys\n import subprocess\n\n<span class=\"gu\">@@ -107,5 +109,18 @@</span>\n         stylesheet = os.path.dirname(os.path.abspath(__file__)) + &quot;/qtest_to_junit.xslt&quot;\n         run_xsltproc(stylesheet, test_file)\n\n<span class=\"gi\">+    # kill rogue gzservers from INTEGRATION_world_clone test</span>\n<span class=\"gi\">+    # #!/osrf/gazebo/issue/1299</span>\n<span class=\"gi\">+    if &#39;INTEGRATION_world_clone&#39; in test_file:</span>\n<span class=\"gi\">+        process = subprocess.Popen([&#39;ps&#39;, &#39;ax&#39;], stdout=subprocess.PIPE)</span>\n<span class=\"gi\">+        stdout, stderr = process.communicate()</span>\n<span class=\"gi\">+        for line in string.split(stdout, &#39;\\n&#39;):</span>\n<span class=\"gi\">+            if line.find(&#39;gzserver /tmp/clone.11347.world&#39;) &gt;= 0:</span>\n<span class=\"gi\">+                m = re.search(&#39;^([0-9]+) .*&#39;, line)</span>\n<span class=\"gi\">+                print(line)</span>\n<span class=\"gi\">+                pid = m.group(1)</span>\n<span class=\"gi\">+                print(&quot;killing gzserver with pid %s&quot; % (pid))</span>\n<span class=\"gi\">+                subprocess.call([&quot;kill&quot;, &quot;%s&quot; % (pid)])</span>\n<span class=\"gi\">+</span>\n if __name__ == &#39;__main__&#39;:\n     check_main()\n</pre></div>\n\n\n<p>To test, apply the following:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 7cf2bfe6c08a test/integration/CMakeLists.txt</span>\n<span class=\"gd\">--- a/test/integration/CMakeLists.txt   Fri Oct 10 11:41:12 2014 -0700</span>\n<span class=\"gi\">+++ b/test/integration/CMakeLists.txt   Tue Oct 14 15:23:37 2014 -0700</span>\n<span class=\"gu\">@@ -92,6 +92,8 @@</span>\n   set_tests_properties(${TEST_TYPE}_factory PROPERTIES TIMEOUT 500)\n   set_tests_properties(${TEST_TYPE}_physics PROPERTIES TIMEOUT 500)\n\n<span class=\"gi\">+  set_tests_properties(${TEST_TYPE}_world_clone PROPERTIES TIMEOUT 10)</span>\n<span class=\"gi\">+</span>\n   # Add plugin dependency\n   add_dependencies(${TEST_TYPE}_joint_test SpringTestPlugin)\n endif()\n<span class=\"gh\">diff -r 7cf2bfe6c08a test/integration/world_clone.cc</span>\n<span class=\"gd\">--- a/test/integration/world_clone.cc   Fri Oct 10 11:41:12 2014 -0700</span>\n<span class=\"gi\">+++ b/test/integration/world_clone.cc   Tue Oct 14 15:23:37 2014 -0700</span>\n<span class=\"gu\">@@ -195,7 +195,7 @@</span>\n   // Check that the cloned world contains the camera topics.\n   output = custom_exec_str(&quot;gz topic -l&quot;);\n   EXPECT_NE(output.find(&quot;/gazebo/default/camera/&quot;), std::string::npos);\n<span class=\"gd\">-</span>\n<span class=\"gi\">+FAIL();</span>\n   // Kill the cloned server. In the case of no presence of gzserver ps will\n   // return the own ps process so it probably will do nothing. No effect.\n   // This should work on Linux and Mac\n</pre></div>\n\n\n<p>and run this command:</p>\n<div class=\"codehilite\"><pre><span></span>$ make <span class=\"nb\">test</span> <span class=\"nv\">ARGS</span><span class=\"o\">=</span><span class=\"s2\">&quot;-VV -R INTEGRATION_world_clone&quot;</span>\n...\n<span class=\"m\">250</span>: Checking <span class=\"k\">for</span> <span class=\"nb\">test</span> results in /tmp/gazebo_build/source/build/test_results/INTEGRATION_world_clone.xml\n<span class=\"m\">250</span>: <span class=\"m\">12427</span> pts/13   Sl+    <span class=\"m\">0</span>:01 gzserver /tmp/clone.11347.world\n<span class=\"m\">250</span>: killing gzserver with <span class=\"m\">12427</span>\n<span class=\"m\">2</span>/2 Test <span class=\"c1\">#250: check_INTEGRATION_world_clone ....   Passed    0.04 sec</span>\n...\n$ ps ax <span class=\"p\">|</span> grep <span class=\"s1\">&#39;gzserver /tmp/clone.11347.world&#39;</span>\n</pre></div>\n\n\n<p>I'll make a pull request for this when I have a chance.</p>", "type": "rendered"}, "created_on": "2014-10-14T22:26:47.665057+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 12970648}