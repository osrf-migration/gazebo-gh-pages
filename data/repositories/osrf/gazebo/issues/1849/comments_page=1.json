{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25102086.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25102086"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "Here's console output and a backtrace from running `INTEGRATION_speed`:\n\n~~~\n$ test/integration/INTEGRATION_speed \n[==========] Running 9 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 9 tests from PhysicsEngines/SpeedTest\n[ RUN      ] PhysicsEngines/SpeedTest.BallTest/0\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.91\n[Dbg] [ServerFixture.cc:200] ServerFixture load in 1.1 seconds, timeout after 600 seconds\nSpeed: Empty[0.992445] Loaded[0.181684] Ratio[0.183067]\n[Dbg] [ServerFixture.cc:126] ServerFixture::Unload\n[       OK ] PhysicsEngines/SpeedTest.BallTest/0 (15238 ms)\n[ RUN      ] PhysicsEngines/SpeedTest.BallTest/1\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.91\n[Dbg] [ServerFixture.cc:200] ServerFixture load in 0.9 seconds, timeout after 600 seconds\nSpeed: Empty[0.99184] Loaded[0.163068] Ratio[0.164409]\n[Dbg] [ServerFixture.cc:126] ServerFixture::Unload\n[       OK ] PhysicsEngines/SpeedTest.BallTest/1 (16270 ms)\n[ RUN      ] PhysicsEngines/SpeedTest.BallTest/2\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.91\n[Dbg] [ServerFixture.cc:200] ServerFixture load in 1.1 seconds, timeout after 600 seconds\nINTEGRATION_speed: /usr/include/simbody/simbody/internal/ContactSurface.h:39: SimTK::ContactCliqueId::ContactCliqueId(int): Assertion `i>=0 || i==SimTK::InvalidIndex' failed.\nAborted (core dumped)\n~~~\n\n~~~\nProgram terminated with signal SIGABRT, Aborted.\n#0  0x00007fbf868fecc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n56\t../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\nTraceback (most recent call last):\n  File \"/usr/share/gdb/auto-load/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19-gdb.py\", line 63, in <module>\n    from libstdcxx.v6.printers import register_libstdcxx_printers\nImportError: No module named 'libstdcxx'\n(gdb) bt\n#0  0x00007fbf868fecc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n#1  0x00007fbf869020d8 in __GI_abort () at abort.c:89\n#2  0x00007fbf868f7b86 in __assert_fail_base (fmt=0x7fbf86a48830 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", \n    assertion=assertion@entry=0x7fbf8bce6520 \"i>=0 || i==SimTK::InvalidIndex\", \n    file=file@entry=0x7fbf8bce66a0 \"/usr/include/simbody/simbody/internal/ContactSurface.h\", line=line@entry=39, \n    function=function@entry=0x7fbf8bce9e40 <SimTK::ContactCliqueId::ContactCliqueId(int)::__PRETTY_FUNCTION__> \"SimTK::ContactCliqueId::ContactCliqueId(int)\") at assert.c:92\n#3  0x00007fbf868f7c32 in __GI___assert_fail (assertion=0x7fbf8bce6520 \"i>=0 || i==SimTK::InvalidIndex\", \n    file=0x7fbf8bce66a0 \"/usr/include/simbody/simbody/internal/ContactSurface.h\", line=39, \n    function=0x7fbf8bce9e40 <SimTK::ContactCliqueId::ContactCliqueId(int)::__PRETTY_FUNCTION__> \"SimTK::ContactCliqueId::ContactCliqueId(int)\") at assert.c:101\n#4  0x00007fbf8b943c34 in SimTK::ContactCliqueId::ContactCliqueId (this=0x7fbf03ffd030, i=-903861712)\n    at /usr/include/simbody/simbody/internal/ContactSurface.h:39\n#5  0x00007fbf8b944e32 in SimTK::ContactSurface::createNewContactClique ()\n    at /usr/include/simbody/simbody/internal/ContactSurface.h:447\n#6  0x00007fbf8b933374 in gazebo::physics::SimbodyPhysics::AddDynamicModelToSimbodySystem (this=0x7fbf62759ee0, _mbgraph=...)\n    at gazebo/physics/simbody/SimbodyPhysics.cc:927\n#7  0x00007fbf8b926b93 in gazebo::physics::SimbodyPhysics::InitModel (this=0x7fbf62759ee0, _model=...)\n    at gazebo/physics/simbody/SimbodyPhysics.cc:321\n#8  0x00007fbf8b917c04 in gazebo::physics::SimbodyModel::Init (this=0x7fbecbaaebd0)\n    at gazebo/physics/simbody/SimbodyModel.cc:89\n#9  0x00007fbf8bc369e3 in gazebo::physics::World::ProcessFactoryMsgs (this=0x7fbf60c9c100)\n    at gazebo/physics/World.cc:1957\n#10 0x00007fbf8bc3d69d in gazebo::physics::World::ProcessMessages (this=0x7fbf60c9c100)\n    at gazebo/physics/World.cc:2282\n#11 0x00007fbf8bc23961 in gazebo::physics::World::Step (this=0x7fbf60c9c100)\n    at gazebo/physics/World.cc:688\n#12 0x00007fbf8bc207d8 in gazebo::physics::World::RunLoop (this=0x7fbf60c9c100)\n    at gazebo/physics/World.cc:481\n#13 0x00007fbf8bc8813d in boost::_mfi::mf0<void, gazebo::physics::World>::operator() (this=0x7fbf61973f08, p=0x7fbf60c9c100)\n    at /usr/include/boost/bind/mem_fn_template.hpp:49\n#14 0x00007fbf8bc85f70 in boost::_bi::list1<boost::_bi::value<gazebo::physics::World*> >::operator()<boost::_mfi::mf0<void, gazebo::physics::World>, boost::_bi::list0> (this=0x7fbf61973f18, f=..., a=...) at /usr/include/boost/bind/bind.hpp:253\n#15 0x00007fbf8bc82cee in boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::physics::World>, boost::_bi::list1<boost::_bi::value<gazebo::physics::World*> > >::operator() (this=0x7fbf61973f08) at /usr/include/boost/bind/bind_template.hpp:20\n#16 0x00007fbf8bc8c7dc in boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::physics::World>, boost::_bi::list1<boost::_bi::value<gazebo::physics::World*> > > >::run (this=0x7fbf61973d50)\n    at /usr/include/boost/thread/detail/thread.hpp:117\n#17 0x00007fbf878d2a4a in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#18 0x00007fbf8aec9182 in start_thread (arg=0x7fbf03fff700) at pthread_create.c:312\n#19 0x00007fbf869c247d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n(gdb) \n~~~\n\n@sherm1 do you have any ideas? We are using [lcov](http://ltp.sourceforge.net/coverage/lcov.php) (front-end for [gcov](http://gcc.gnu.org/onlinedocs/gcc/Gcov.html)) for these coverage tests.", "markup": "markdown", "html": "<p>Here's console output and a backtrace from running <code>INTEGRATION_speed</code>:</p>\n<div class=\"codehilite\"><pre><span></span>$ test/integration/INTEGRATION_speed \n<span class=\"o\">[==========]</span> Running <span class=\"m\">9</span> tests from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">9</span> tests from PhysicsEngines/SpeedTest\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> PhysicsEngines/SpeedTest.BallTest/0\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">172</span>.23.2.91\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:200<span class=\"o\">]</span> ServerFixture load in <span class=\"m\">1</span>.1 seconds, timeout after <span class=\"m\">600</span> seconds\nSpeed: Empty<span class=\"o\">[</span><span class=\"m\">0</span>.992445<span class=\"o\">]</span> Loaded<span class=\"o\">[</span><span class=\"m\">0</span>.181684<span class=\"o\">]</span> Ratio<span class=\"o\">[</span><span class=\"m\">0</span>.183067<span class=\"o\">]</span>\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:126<span class=\"o\">]</span> ServerFixture::Unload\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> PhysicsEngines/SpeedTest.BallTest/0 <span class=\"o\">(</span><span class=\"m\">15238</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> PhysicsEngines/SpeedTest.BallTest/1\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">172</span>.23.2.91\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:200<span class=\"o\">]</span> ServerFixture load in <span class=\"m\">0</span>.9 seconds, timeout after <span class=\"m\">600</span> seconds\nSpeed: Empty<span class=\"o\">[</span><span class=\"m\">0</span>.99184<span class=\"o\">]</span> Loaded<span class=\"o\">[</span><span class=\"m\">0</span>.163068<span class=\"o\">]</span> Ratio<span class=\"o\">[</span><span class=\"m\">0</span>.164409<span class=\"o\">]</span>\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:126<span class=\"o\">]</span> ServerFixture::Unload\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> PhysicsEngines/SpeedTest.BallTest/1 <span class=\"o\">(</span><span class=\"m\">16270</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> PhysicsEngines/SpeedTest.BallTest/2\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">172</span>.23.2.91\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:200<span class=\"o\">]</span> ServerFixture load in <span class=\"m\">1</span>.1 seconds, timeout after <span class=\"m\">600</span> seconds\nINTEGRATION_speed: /usr/include/simbody/simbody/internal/ContactSurface.h:39: SimTK::ContactCliqueId::ContactCliqueId<span class=\"o\">(</span>int<span class=\"o\">)</span>: Assertion <span class=\"sb\">`</span>i&gt;<span class=\"o\">=</span><span class=\"m\">0</span> <span class=\"o\">||</span> <span class=\"nv\">i</span><span class=\"o\">==</span>SimTK::InvalidIndex<span class=\"err\">&#39;</span> failed.\nAborted <span class=\"o\">(</span>core dumped<span class=\"o\">)</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Program</span> <span class=\"n\">terminated</span> <span class=\"k\">with</span> <span class=\"n\">signal</span> <span class=\"n\">SIGABRT</span><span class=\"p\">,</span> <span class=\"n\">Aborted</span><span class=\"o\">.</span>\n<span class=\"c1\">#0  0x00007fbf868fecc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56</span>\n<span class=\"mi\">56</span>  <span class=\"o\">../</span><span class=\"n\">nptl</span><span class=\"o\">/</span><span class=\"n\">sysdeps</span><span class=\"o\">/</span><span class=\"n\">unix</span><span class=\"o\">/</span><span class=\"n\">sysv</span><span class=\"o\">/</span><span class=\"n\">linux</span><span class=\"o\">/</span><span class=\"k\">raise</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"nb\">file</span> <span class=\"ow\">or</span> <span class=\"n\">directory</span><span class=\"o\">.</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/share/gdb/auto-load/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19-gdb.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">63</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">libstdcxx.v6.printers</span> <span class=\"kn\">import</span> <span class=\"n\">register_libstdcxx_printers</span>\n<span class=\"ne\">ImportError</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">module</span> <span class=\"n\">named</span> <span class=\"s1\">&#39;libstdcxx&#39;</span>\n<span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"n\">bt</span>\n<span class=\"c1\">#0  0x00007fbf868fecc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56</span>\n<span class=\"c1\">#1  0x00007fbf869020d8 in __GI_abort () at abort.c:89</span>\n<span class=\"c1\">#2  0x00007fbf868f7b86 in __assert_fail_base (fmt=0x7fbf86a48830 &quot;%s%s%s:%u: %s%sAssertion `%s&#39; failed.\\n%n&quot;, </span>\n    <span class=\"n\">assertion</span><span class=\"o\">=</span><span class=\"n\">assertion</span><span class=\"nd\">@entry</span><span class=\"o\">=</span><span class=\"mh\">0x7fbf8bce6520</span> <span class=\"s2\">&quot;i&gt;=0 || i==SimTK::InvalidIndex&quot;</span><span class=\"p\">,</span> \n    <span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"nb\">file</span><span class=\"nd\">@entry</span><span class=\"o\">=</span><span class=\"mh\">0x7fbf8bce66a0</span> <span class=\"s2\">&quot;/usr/include/simbody/simbody/internal/ContactSurface.h&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"n\">line</span><span class=\"nd\">@entry</span><span class=\"o\">=</span><span class=\"mi\">39</span><span class=\"p\">,</span> \n    <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"n\">function</span><span class=\"nd\">@entry</span><span class=\"o\">=</span><span class=\"mh\">0x7fbf8bce9e40</span> <span class=\"o\">&lt;</span><span class=\"n\">SimTK</span><span class=\"p\">::</span><span class=\"n\">ContactCliqueId</span><span class=\"p\">::</span><span class=\"n\">ContactCliqueId</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)::</span><span class=\"n\">__PRETTY_FUNCTION__</span><span class=\"o\">&gt;</span> <span class=\"s2\">&quot;SimTK::ContactCliqueId::ContactCliqueId(int)&quot;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"k\">assert</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"mi\">92</span>\n<span class=\"c1\">#3  0x00007fbf868f7c32 in __GI___assert_fail (assertion=0x7fbf8bce6520 &quot;i&gt;=0 || i==SimTK::InvalidIndex&quot;, </span>\n    <span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"mh\">0x7fbf8bce66a0</span> <span class=\"s2\">&quot;/usr/include/simbody/simbody/internal/ContactSurface.h&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">39</span><span class=\"p\">,</span> \n    <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"mh\">0x7fbf8bce9e40</span> <span class=\"o\">&lt;</span><span class=\"n\">SimTK</span><span class=\"p\">::</span><span class=\"n\">ContactCliqueId</span><span class=\"p\">::</span><span class=\"n\">ContactCliqueId</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)::</span><span class=\"n\">__PRETTY_FUNCTION__</span><span class=\"o\">&gt;</span> <span class=\"s2\">&quot;SimTK::ContactCliqueId::ContactCliqueId(int)&quot;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"k\">assert</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"mi\">101</span>\n<span class=\"c1\">#4  0x00007fbf8b943c34 in SimTK::ContactCliqueId::ContactCliqueId (this=0x7fbf03ffd030, i=-903861712)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simbody</span><span class=\"o\">/</span><span class=\"n\">simbody</span><span class=\"o\">/</span><span class=\"n\">internal</span><span class=\"o\">/</span><span class=\"n\">ContactSurface</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">:</span><span class=\"mi\">39</span>\n<span class=\"c1\">#5  0x00007fbf8b944e32 in SimTK::ContactSurface::createNewContactClique ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simbody</span><span class=\"o\">/</span><span class=\"n\">simbody</span><span class=\"o\">/</span><span class=\"n\">internal</span><span class=\"o\">/</span><span class=\"n\">ContactSurface</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">:</span><span class=\"mi\">447</span>\n<span class=\"c1\">#6  0x00007fbf8b933374 in gazebo::physics::SimbodyPhysics::AddDynamicModelToSimbodySystem (this=0x7fbf62759ee0, _mbgraph=...)</span>\n    <span class=\"n\">at</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">simbody</span><span class=\"o\">/</span><span class=\"n\">SimbodyPhysics</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">927</span>\n<span class=\"c1\">#7  0x00007fbf8b926b93 in gazebo::physics::SimbodyPhysics::InitModel (this=0x7fbf62759ee0, _model=...)</span>\n    <span class=\"n\">at</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">simbody</span><span class=\"o\">/</span><span class=\"n\">SimbodyPhysics</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">321</span>\n<span class=\"c1\">#8  0x00007fbf8b917c04 in gazebo::physics::SimbodyModel::Init (this=0x7fbecbaaebd0)</span>\n    <span class=\"n\">at</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">simbody</span><span class=\"o\">/</span><span class=\"n\">SimbodyModel</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">89</span>\n<span class=\"c1\">#9  0x00007fbf8bc369e3 in gazebo::physics::World::ProcessFactoryMsgs (this=0x7fbf60c9c100)</span>\n    <span class=\"n\">at</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">World</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">1957</span>\n<span class=\"c1\">#10 0x00007fbf8bc3d69d in gazebo::physics::World::ProcessMessages (this=0x7fbf60c9c100)</span>\n    <span class=\"n\">at</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">World</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">2282</span>\n<span class=\"c1\">#11 0x00007fbf8bc23961 in gazebo::physics::World::Step (this=0x7fbf60c9c100)</span>\n    <span class=\"n\">at</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">World</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">688</span>\n<span class=\"c1\">#12 0x00007fbf8bc207d8 in gazebo::physics::World::RunLoop (this=0x7fbf60c9c100)</span>\n    <span class=\"n\">at</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">physics</span><span class=\"o\">/</span><span class=\"n\">World</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">:</span><span class=\"mi\">481</span>\n<span class=\"c1\">#13 0x00007fbf8bc8813d in boost::_mfi::mf0&lt;void, gazebo::physics::World&gt;::operator() (this=0x7fbf61973f08, p=0x7fbf60c9c100)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">boost</span><span class=\"o\">/</span><span class=\"n\">bind</span><span class=\"o\">/</span><span class=\"n\">mem_fn_template</span><span class=\"o\">.</span><span class=\"n\">hpp</span><span class=\"p\">:</span><span class=\"mi\">49</span>\n<span class=\"c1\">#14 0x00007fbf8bc85f70 in boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::physics::World*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, gazebo::physics::World&gt;, boost::_bi::list0&gt; (this=0x7fbf61973f18, f=..., a=...) at /usr/include/boost/bind/bind.hpp:253</span>\n<span class=\"c1\">#15 0x00007fbf8bc82cee in boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::physics::World&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::physics::World*&gt; &gt; &gt;::operator() (this=0x7fbf61973f08) at /usr/include/boost/bind/bind_template.hpp:20</span>\n<span class=\"c1\">#16 0x00007fbf8bc8c7dc in boost::detail::thread_data&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::physics::World&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::physics::World*&gt; &gt; &gt; &gt;::run (this=0x7fbf61973d50)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">boost</span><span class=\"o\">/</span><span class=\"n\">thread</span><span class=\"o\">/</span><span class=\"n\">detail</span><span class=\"o\">/</span><span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">hpp</span><span class=\"p\">:</span><span class=\"mi\">117</span>\n<span class=\"c1\">#17 0x00007fbf878d2a4a in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0</span>\n<span class=\"c1\">#18 0x00007fbf8aec9182 in start_thread (arg=0x7fbf03fff700) at pthread_create.c:312</span>\n<span class=\"c1\">#19 0x00007fbf869c247d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111</span>\n<span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> \n</pre></div>\n\n\n<p>@sherm1 do you have any ideas? We are using <a data-is-external-link=\"true\" href=\"http://ltp.sourceforge.net/coverage/lcov.php\" rel=\"nofollow\">lcov</a> (front-end for <a data-is-external-link=\"true\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Gcov.html\" rel=\"nofollow\">gcov</a>) for these coverage tests.</p>", "type": "rendered"}, "created_on": "2016-01-29T21:55:57.572146+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25102086}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25102884.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25102884"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "Hi, Steve. The assert that blew was just checking for a reasonable value for a `ContactCliqueId` -- that is just an int and must be nonnegative or equal to the special negative value used to indicate \"uninitialized\". So it is looking at garbage memory in the counter that it uses to produce unique ids.\n\nThis occurred during createNewContactClique() which is defined [here](https://github.com/simbody/simbody/blob/master/Simbody/include/simbody/internal/ContactSurface.h#L455). It is attempting to be thread-safe by using an `AtomicInteger`; I wonder if gcov is messing with the behavior of that somehow? You could try substituting the C++11-standard std::atomic_int to see if that fixes the problem; if so we should probably use that exclusively in Simbody rather than our pre-C++11 attempt to accomplish the same thing.", "markup": "markdown", "html": "<p>Hi, Steve. The assert that blew was just checking for a reasonable value for a <code>ContactCliqueId</code> -- that is just an int and must be nonnegative or equal to the special negative value used to indicate \"uninitialized\". So it is looking at garbage memory in the counter that it uses to produce unique ids.</p>\n<p>This occurred during createNewContactClique() which is defined <a data-is-external-link=\"true\" href=\"https://github.com/simbody/simbody/blob/master/Simbody/include/simbody/internal/ContactSurface.h#L455\" rel=\"nofollow\">here</a>. It is attempting to be thread-safe by using an <code>AtomicInteger</code>; I wonder if gcov is messing with the behavior of that somehow? You could try substituting the C++11-standard std::atomic_int to see if that fixes the problem; if so we should probably use that exclusively in Simbody rather than our pre-C++11 attempt to accomplish the same thing.</p>", "type": "rendered"}, "created_on": "2016-01-29T22:53:49.474037+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": null, "type": "issue_comment", "id": 25102884}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25103163.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25103163"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "I just reproduced this with one of the simbody tests, so I'll move this discussion to the simbody issue tracker.", "markup": "markdown", "html": "<p>I just reproduced this with one of the simbody tests, so I'll move this discussion to the simbody issue tracker.</p>", "type": "rendered"}, "created_on": "2016-01-29T23:17:29.613050+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25103163}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25104056.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25104056"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "Actually I'll keep it here for now. I've reproduced it in simbody using the same [compiler flags](#!/osrf/gazebo/src/7c23991510420e25940bee2c5566b083dc715ed3/cmake/DefaultCFlags.cmake?fileviewer=file-view-default#DefaultCFlags.cmake-28):\n\n~~~\n-g\n-O0\n-Wformat=2\n--coverage\n-fno-inline\n-fno-default-inline\n-fno-implicit-inline-templates\n-fno-elide-constructors\n~~~\n\nI removed `-Wformat=2` since it was giving some warnings. The following selection of compiler flags can reproduce the problem on simbody:\n\n~~~\ncmake .. -DCMAKE_CXX_FLAGS=\"-g --coverage -fno-inline -fno-default-inline -fno-implicit-inline-templates -fno-elide-constructors\"\n~~~\n\nI'm going to try paring it down to see which flags are causing the problems. It could be that these compiler flags shouldn't be used for simbody. Do any jump out at you?", "markup": "markdown", "html": "<p>Actually I'll keep it here for now. I've reproduced it in simbody using the same <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/7c23991510420e25940bee2c5566b083dc715ed3/cmake/DefaultCFlags.cmake?fileviewer=file-view-default#DefaultCFlags.cmake-28\" rel=\"nofollow\">compiler flags</a>:</p>\n<div class=\"codehilite\"><pre><span></span>-g\n-O0\n-Wformat=2\n--coverage\n-fno-inline\n-fno-default-inline\n-fno-implicit-inline-templates\n-fno-elide-constructors\n</pre></div>\n\n\n<p>I removed <code>-Wformat=2</code> since it was giving some warnings. The following selection of compiler flags can reproduce the problem on simbody:</p>\n<div class=\"codehilite\"><pre><span></span>cmake .. -DCMAKE_CXX_FLAGS=&quot;-g --coverage -fno-inline -fno-default-inline -fno-implicit-inline-templates -fno-elide-constructors&quot;\n</pre></div>\n\n\n<p>I'm going to try paring it down to see which flags are causing the problems. It could be that these compiler flags shouldn't be used for simbody. Do any jump out at you?</p>", "type": "rendered"}, "created_on": "2016-01-30T00:46:22.167707+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25104056}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25104065.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25104065"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "`-fno-elide-constructors` seems to be the culprit", "markup": "markdown", "html": "<p><code>-fno-elide-constructors</code> seems to be the culprit</p>", "type": "rendered"}, "created_on": "2016-01-30T00:48:41.544203+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25104065}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25104091.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25104091"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "Ok, I'll submit upstream now.", "markup": "markdown", "html": "<p>Ok, I'll submit upstream now.</p>", "type": "rendered"}, "created_on": "2016-01-30T00:54:23.599859+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25104091}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25104133.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25104133"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "https://github.com/simbody/simbody/issues/468", "markup": "markdown", "html": "<p><a href=\"https://github.com/simbody/simbody/issues/468\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/simbody/simbody/issues/468</a></p>", "type": "rendered"}, "created_on": "2016-01-30T01:00:50.762075+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25104133}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25104257.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25104257"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "Thanks, Steve -- great detective work! Wild guess: this has something to do with atomic integers not being copyable. We'll investigate ...", "markup": "markdown", "html": "<p>Thanks, Steve -- great detective work! Wild guess: this has something to do with atomic integers not being copyable. We'll investigate ...</p>", "type": "rendered"}, "created_on": "2016-01-30T01:16:26.255731+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": null, "type": "issue_comment", "id": 25104257}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/25163269.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-25163269"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": "I'm disabling the tests for now when building in coverage mode in pull request #2113.", "markup": "markdown", "html": "<p>I'm disabling the tests for now when building in coverage mode in <a href=\"#!/osrf/gazebo/pull-requests/2113/fix-coverage-tests\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2113</a>.</p>", "type": "rendered"}, "created_on": "2016-02-02T02:10:05.773515+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25163269}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849/comments/30611021.json"}, "html": {"href": "#!/osrf/gazebo/issues/1849#comment-30611021"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1849.json"}}, "type": "issue", "id": 1849, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "lcov coverage build with simbody causes test failures"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:24:04.273030+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30611021}], "page": 1, "size": 10}