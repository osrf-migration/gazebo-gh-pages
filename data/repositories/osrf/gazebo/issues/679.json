{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/679/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/679.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/679/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/679/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/679/gazebo-server-crashing-at-fixed-runtime"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/679/vote"}}, "reporter": {"display_name": "slremy", "uuid": "{9fc996cd-03e2-4038-9e80-0369498f65d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9fc996cd-03e2-4038-9e80-0369498f65d8%7D"}, "html": {"href": "https://bitbucket.org/%7B9fc996cd-03e2-4038-9e80-0369498f65d8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5a3871631562c10398645cde9750bcdfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-5.png"}}, "nickname": "slremy", "type": "user", "account_id": "557058:41d67f05-ad64-4069-88b4-b5aa4c13ebe8"}, "title": "Gazebo server crashing at fixed runtime with camera and create (or turtlebot)", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Hello,\r\nI'm testing Gazebo1.8 in a virtual machine on a non-Amazon Cloud.\r\nI am using xvfb to provide a virtual framebuffer.\r\n\r\nI've noticed that with the Turtlebot model (from the database) or the combination of the create and a camera that the program segfaults after 11472.50 +/- 0.1 (simulation time) seconds every time (3.2 sim hours). \r\n\r\nThis is observed via piping gzstats to file, so there is some loss of precision. \r\nThere is very little change in the time to failure between the following two VM types:\r\n\r\n*     m2.medium (4vcpu, 4G Ram)\r\n*     m1.xlarge (8vcpu, 16G Ram)\r\n\r\n\r\nI've commented out the camera and seen things run for 108 hours before I terminated the run. I'm currently testing with the create commented out. Surprisingly, the simulator has been running for more than 3.2 simulated hours so far.\r\n\r\nI'm assuming that someone else has tested a robot with a camera and did not experience this time limit?\r\n\r\nSee the world file below.\r\n\r\n\r\n```\r\n#!sdf\r\n\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.3\">\r\n  <world name=\"default\">\r\n    <physics type=\"ode\">\r\n      <gravity>0 0 9.8</gravity>\r\n      <ode>\r\n        <solver>\r\n          <type>quick</type>\r\n          <dt>0.001</dt>\r\n          <iters>40</iters>\r\n          <sor>1.0</sor>\r\n        </solver>\r\n        <constraints>\r\n          <cfm>0.0</cfm>\r\n          <erp>0.2</erp>\r\n          <contact_max_correcting_vel>100.0</contact_max_correcting_vel>\r\n          <contact_surface_layer>0.0</contact_surface_layer>\r\n        </constraints>\r\n      </ode>\r\n    </physics>\r\n    <!-- A global light source -->\r\n    <include>\r\n      <uri>model://sun</uri>\r\n    </include>\r\n    <!-- A ground plane -->\r\n    <include>\r\n      <uri>model://ground_plane</uri>\r\n    </include>\r\n    <include>\r\n      <uri>model://create</uri>\r\n      <pose>0 0 0.5 0 0 0</pose>\r\n    </include>\r\n\r\n    <include>\r\n      <uri>model://camera</uri>\r\n      <pose>0 0 1 0 0 0</pose>\r\n    </include>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\n\r\ngdb gzserver\r\n\r\n```\r\n#!gdb\r\n\r\nProgram received signal SIGABRT, Aborted.\r\n0x00007ffff49c7425 in raise () from /lib/x86_64-linux-gnu/libc.so.6\r\n#0  0x00007ffff49c7425 in raise () from /lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007ffff49cab8b in abort () from /lib/x86_64-linux-gnu/libc.so.6\r\n#2  0x00007ffff49c00ee in ?? () from /lib/x86_64-linux-gnu/libc.so.6\r\n#3  0x00007ffff49c0192 in __assert_fail () from /lib/x86_64-linux-gnu/libc.so.6\r\n#4  0x00007fffee80572c in Ogre::Frustum::updateFrustumImpl() const () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#5  0x00007fffee803529 in Ogre::Frustum::updateFrustumPlanes() const () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#6  0x00007fffee80366e in Ogre::Frustum::isVisible(Ogre::AxisAlignedBox const&, Ogre::FrustumPlane*) const () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.\r\n1.7.4\r\n#7  0x00007fffd469c63a in Ogre::OctreeSceneManager::walkOctree(Ogre::OctreeCamera*, Ogre::RenderQueue*, Ogre::Octree*, Ogre::VisibleObjectsBoundsInfo*, bool\r\n, bool) () from /usr/lib/x86_64-linux-gnu/OGRE-1.7.4/Plugin_OctreeSceneManager.so\r\n#8  0x00007fffd469c7d1 in Ogre::OctreeSceneManager::_findVisibleObjects(Ogre::Camera*, Ogre::VisibleObjectsBoundsInfo*, bool) () from /usr/lib/x86_64-linux-\r\ngnu/OGRE-1.7.4/Plugin_OctreeSceneManager.so\r\n#9  0x00007fffee94df59 in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#10 0x00007fffee7b56ec in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#11 0x00007fffee91a9f8 in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#12 0x00007fffee91a91b in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#13 0x00007fffee91a3be in Ogre::RenderTarget::updateImpl() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#14 0x00007fffee91a95c in Ogre::RenderTarget::update(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#15 0x00007fffee95b976 in Ogre::SceneManager::prepareShadowTextures(Ogre::Camera*, Ogre::Viewport*, Ogre::HashedVector<Ogre::Light*> const*) () from /usr/li\r\nb/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#16 0x00007fffee94e317 in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#17 0x00007fffee7b56ec in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#18 0x00007fffee91a9f8 in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#19 0x00007fffee91a91b in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#20 0x00007fffee91a3be in Ogre::RenderTarget::updateImpl() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#21 0x00007fffee91a95c in Ogre::RenderTarget::update(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\r\n#22 0x00007ffff2b5415c in gazebo::rendering::Camera::RenderImpl (this=0x2aabab0) at /home/ubuntu/gazebo/gazebo/rendering/Camera.cc:393\r\n#23 0x00007ffff2b540f0 in gazebo::rendering::Camera::Render (this=0x2aabab0) at /home/ubuntu/gazebo/gazebo/rendering/Camera.cc:383\r\n#24 0x00007ffff694b33e in gazebo::sensors::CameraSensor::UpdateImpl (this=0xf97cf0) at /home/ubuntu/gazebo/gazebo/sensors/CameraSensor.cc:160\r\n#25 0x00007ffff6983670 in gazebo::sensors::Sensor::Update (this=0xf97cf0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/Sensor.cc:138\r\n#26 0x00007ffff698e18a in gazebo::sensors::SensorManager::SensorContainer::Update (this=0xdb7ce0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/Sensor\r\nManager.cc:532\r\n#27 0x00007ffff698e8f8 in gazebo::sensors::SensorManager::ImageSensorContainer::Update (this=0xdb7ce0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/S\r\nensorManager.cc:644\r\n#28 0x00007ffff698c191 in gazebo::sensors::SensorManager::Update (this=0x7ffff70a79c0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/SensorManager.cc:\r\n156\r\n#29 0x00007ffff6982114 in gazebo::sensors::run_once (_force=false) at /home/ubuntu/gazebo/gazebo/sensors/Sensors.cc:94\r\n#30 0x0000000000470ead in gazebo::Server::Run (this=0x717000) at /home/ubuntu/gazebo/gazebo/Server.cc:460\r\n#31 0x000000000046b454 in main (argc=4, argv=0x7fffffffdb48) at /home/ubuntu/gazebo/gazebo/server_main.cc:43\r\n\r\n```", "markup": "markdown", "html": "<p>Hello,\nI'm testing Gazebo1.8 in a virtual machine on a non-Amazon Cloud.\nI am using xvfb to provide a virtual framebuffer.</p>\n<p>I've noticed that with the Turtlebot model (from the database) or the combination of the create and a camera that the program segfaults after 11472.50 +/- 0.1 (simulation time) seconds every time (3.2 sim hours). </p>\n<p>This is observed via piping gzstats to file, so there is some loss of precision. \nThere is very little change in the time to failure between the following two VM types:</p>\n<ul>\n<li>m2.medium (4vcpu, 4G Ram)</li>\n<li>m1.xlarge (8vcpu, 16G Ram)</li>\n</ul>\n<p>I've commented out the camera and seen things run for 108 hours before I terminated the run. I'm currently testing with the create commented out. Surprisingly, the simulator has been running for more than 3.2 simulated hours so far.</p>\n<p>I'm assuming that someone else has tested a robot with a camera and did not experience this time limit?</p>\n<p>See the world file below.</p>\n<div class=\"codehilite language-sdf\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.3&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;gravity&gt;</span>0 0 9.8<span class=\"nt\">&lt;/gravity&gt;</span>\n      <span class=\"nt\">&lt;ode&gt;</span>\n        <span class=\"nt\">&lt;solver&gt;</span>\n          <span class=\"nt\">&lt;type&gt;</span>quick<span class=\"nt\">&lt;/type&gt;</span>\n          <span class=\"nt\">&lt;dt&gt;</span>0.001<span class=\"nt\">&lt;/dt&gt;</span>\n          <span class=\"nt\">&lt;iters&gt;</span>40<span class=\"nt\">&lt;/iters&gt;</span>\n          <span class=\"nt\">&lt;sor&gt;</span>1.0<span class=\"nt\">&lt;/sor&gt;</span>\n        <span class=\"nt\">&lt;/solver&gt;</span>\n        <span class=\"nt\">&lt;constraints&gt;</span>\n          <span class=\"nt\">&lt;cfm&gt;</span>0.0<span class=\"nt\">&lt;/cfm&gt;</span>\n          <span class=\"nt\">&lt;erp&gt;</span>0.2<span class=\"nt\">&lt;/erp&gt;</span>\n          <span class=\"nt\">&lt;contact_max_correcting_vel&gt;</span>100.0<span class=\"nt\">&lt;/contact_max_correcting_vel&gt;</span>\n          <span class=\"nt\">&lt;contact_surface_layer&gt;</span>0.0<span class=\"nt\">&lt;/contact_surface_layer&gt;</span>\n        <span class=\"nt\">&lt;/constraints&gt;</span>\n      <span class=\"nt\">&lt;/ode&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n    <span class=\"c\">&lt;!-- A global light source --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"c\">&lt;!-- A ground plane --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://create<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://camera<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 1 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>gdb gzserver</p>\n<div class=\"codehilite language-gdb\"><pre><span></span>Program received signal SIGABRT, Aborted.\n0x00007ffff49c7425 in raise () from /lib/x86_64-linux-gnu/libc.so.6\n#0  0x00007ffff49c7425 in raise () from /lib/x86_64-linux-gnu/libc.so.6\n#1  0x00007ffff49cab8b in abort () from /lib/x86_64-linux-gnu/libc.so.6\n#2  0x00007ffff49c00ee in ?? () from /lib/x86_64-linux-gnu/libc.so.6\n#3  0x00007ffff49c0192 in __assert_fail () from /lib/x86_64-linux-gnu/libc.so.6\n#4  0x00007fffee80572c in Ogre::Frustum::updateFrustumImpl() const () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#5  0x00007fffee803529 in Ogre::Frustum::updateFrustumPlanes() const () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#6  0x00007fffee80366e in Ogre::Frustum::isVisible(Ogre::AxisAlignedBox const&amp;, Ogre::FrustumPlane*) const () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.\n1.7.4\n#7  0x00007fffd469c63a in Ogre::OctreeSceneManager::walkOctree(Ogre::OctreeCamera*, Ogre::RenderQueue*, Ogre::Octree*, Ogre::VisibleObjectsBoundsInfo*, bool\n, bool) () from /usr/lib/x86_64-linux-gnu/OGRE-1.7.4/Plugin_OctreeSceneManager.so\n#8  0x00007fffd469c7d1 in Ogre::OctreeSceneManager::_findVisibleObjects(Ogre::Camera*, Ogre::VisibleObjectsBoundsInfo*, bool) () from /usr/lib/x86_64-linux-\ngnu/OGRE-1.7.4/Plugin_OctreeSceneManager.so\n#9  0x00007fffee94df59 in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#10 0x00007fffee7b56ec in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#11 0x00007fffee91a9f8 in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#12 0x00007fffee91a91b in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#13 0x00007fffee91a3be in Ogre::RenderTarget::updateImpl() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#14 0x00007fffee91a95c in Ogre::RenderTarget::update(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#15 0x00007fffee95b976 in Ogre::SceneManager::prepareShadowTextures(Ogre::Camera*, Ogre::Viewport*, Ogre::HashedVector&lt;Ogre::Light*&gt; const*) () from /usr/li\nb/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#16 0x00007fffee94e317 in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#17 0x00007fffee7b56ec in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#18 0x00007fffee91a9f8 in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#19 0x00007fffee91a91b in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#20 0x00007fffee91a3be in Ogre::RenderTarget::updateImpl() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#21 0x00007fffee91a95c in Ogre::RenderTarget::update(bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.7.4\n#22 0x00007ffff2b5415c in gazebo::rendering::Camera::RenderImpl (this=0x2aabab0) at /home/ubuntu/gazebo/gazebo/rendering/Camera.cc:393\n#23 0x00007ffff2b540f0 in gazebo::rendering::Camera::Render (this=0x2aabab0) at /home/ubuntu/gazebo/gazebo/rendering/Camera.cc:383\n#24 0x00007ffff694b33e in gazebo::sensors::CameraSensor::UpdateImpl (this=0xf97cf0) at /home/ubuntu/gazebo/gazebo/sensors/CameraSensor.cc:160\n#25 0x00007ffff6983670 in gazebo::sensors::Sensor::Update (this=0xf97cf0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/Sensor.cc:138\n#26 0x00007ffff698e18a in gazebo::sensors::SensorManager::SensorContainer::Update (this=0xdb7ce0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/Sensor\nManager.cc:532\n#27 0x00007ffff698e8f8 in gazebo::sensors::SensorManager::ImageSensorContainer::Update (this=0xdb7ce0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/S\nensorManager.cc:644\n#28 0x00007ffff698c191 in gazebo::sensors::SensorManager::Update (this=0x7ffff70a79c0, _force=false) at /home/ubuntu/gazebo/gazebo/sensors/SensorManager.cc:\n156\n#29 0x00007ffff6982114 in gazebo::sensors::run_once (_force=false) at /home/ubuntu/gazebo/gazebo/sensors/Sensors.cc:94\n#30 0x0000000000470ead in gazebo::Server::Run (this=0x717000) at /home/ubuntu/gazebo/gazebo/Server.cc:460\n#31 0x000000000046b454 in main (argc=4, argv=0x7fffffffdb48) at /home/ubuntu/gazebo/gazebo/server_main.cc:43\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-05-07T21:19:59.801886+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:49.921373+00:00", "type": "issue", "id": 679}