{"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2303/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2303.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2303/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2303/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2303/getname-vs-getscopedname-default-values"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2303/vote"}}, "reporter": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "title": "GetName vs GetScopedName default values", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The `name` element of `gazebo::physics::Base` is initialized to \"\\_\\_default\\_\\_\" while the `scopedName` element is left as \"\". Neither are set to meaningful values until you call `Load` or `SetName` which in turn calls `ComputeScopedName`. However, it seems like the names should still default to something related (e.g. both \"\\_\\_default\\_\\_\" or both \"\"). What do you think?\r\n\r\nI noticed this because some unit tests use \"dummy\" models that have not been loaded, and thus have no scoped name.", "markup": "markdown", "html": "<p>The <code>name</code> element of <code>gazebo::physics::Base</code> is initialized to \"__default__\" while the <code>scopedName</code> element is left as \"\". Neither are set to meaningful values until you call <code>Load</code> or <code>SetName</code> which in turn calls <code>ComputeScopedName</code>. However, it seems like the names should still default to something related (e.g. both \"__default__\" or both \"\"). What do you think?</p>\n<p>I noticed this because some unit tests use \"dummy\" models that have not been loaded, and thus have no scoped name.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2017-06-19T22:23:45.884534+00:00", "milestone": null, "updated_on": "2017-06-19T22:23:45.884534+00:00", "type": "issue", "id": 2303}