{"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2483/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2483.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2483/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2483/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2483/gazebo-compilation-broken-with-protobuf-36"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2483/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "gazebo compilation broken with protobuf 3.6", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Protobuf 3.6 was recently released into homebrew, and while attempting to rebuild bottles, I found that gazebo versions 7-9 fail to compile with this new version of protobuf.\r\n\r\nHere is an example failed build:\r\n\r\n* https://build.osrfoundation.org/view/os_homebrew/job/gazebo-ci-gazebo9-homebrew-amd64/38/console\r\n\r\nThis a patch that partially fixes it, but not entirely (scoped_ptr was removed in https://github.com/google/protobuf/pull/4387).\r\n\r\n~~~\r\ndiff -r 039509b626b4 gazebo/msgs/generator/GazeboGenerator.cc\r\n--- a/gazebo/msgs/generator/GazeboGenerator.cc  Thu Jun 21 00:17:31 2018 +0000\r\n+++ b/gazebo/msgs/generator/GazeboGenerator.cc  Thu Jun 21 01:43:14 2018 -0700\r\n@@ -22,6 +22,7 @@\r\n #include <google/protobuf/descriptor.pb.h>\r\n #include <boost/algorithm/string/replace.hpp>\r\n \r\n+#include <memory>\r\n #include <vector>\r\n #include <utility>\r\n #include <iostream>\r\n@@ -48,7 +49,7 @@\r\n \r\n   // Add boost shared point include\r\n   {\r\n-    scoped_ptr<io::ZeroCopyOutputStream> output(\r\n+    std::unique_ptr<io::ZeroCopyOutputStream> output(\r\n         _generator_context->OpenForInsert(headerFilename, \"includes\"));\r\n     io::Printer printer(output.get(), '$');\r\n \r\n@@ -57,7 +58,7 @@\r\n \r\n   // Add boost shared point include\r\n   {\r\n-    scoped_ptr<io::ZeroCopyOutputStream> output(\r\n+    std::unique_ptr<io::ZeroCopyOutputStream> output(\r\n         _generator_context->OpenForInsert(sourceFilename, \"includes\"));\r\n     io::Printer printer(output.get(), '$');\r\n \r\n@@ -67,7 +68,7 @@\r\n \r\n \r\n   {\r\n-    scoped_ptr<io::ZeroCopyOutputStream> output(\r\n+    std::unique_ptr<io::ZeroCopyOutputStream> output(\r\n         _generator_context->OpenForInsert(headerFilename, \"includes\"));\r\n     io::Printer printer(output.get(), '$');\r\n \r\n@@ -79,7 +80,7 @@\r\n \r\n   // Add boost shared typedef\r\n   {\r\n-    scoped_ptr<io::ZeroCopyOutputStream> output(\r\n+    std::unique_ptr<io::ZeroCopyOutputStream> output(\r\n         _generator_context->OpenForInsert(headerFilename, \"namespace_scope\"));\r\n     io::Printer printer(output.get(), '$');\r\n \r\n@@ -95,7 +96,7 @@\r\n \r\n   // Add const boost shared typedef\r\n   {\r\n-    scoped_ptr<io::ZeroCopyOutputStream> output(\r\n+    std::unique_ptr<io::ZeroCopyOutputStream> output(\r\n         _generator_context->OpenForInsert(headerFilename, \"global_scope\"));\r\n     io::Printer printer(output.get(), '$');\r\n \r\n@@ -111,7 +112,7 @@\r\n \r\n   // Add Message Factory register\r\n   {\r\n-    scoped_ptr<io::ZeroCopyOutputStream> output(\r\n+    std::unique_ptr<io::ZeroCopyOutputStream> output(\r\n         _generator_context->OpenForInsert(sourceFilename, \"global_scope\"));\r\n     io::Printer printer(output.get(), '$');\r\n \r\n~~~", "markup": "markdown", "html": "<p>Protobuf 3.6 was recently released into homebrew, and while attempting to rebuild bottles, I found that gazebo versions 7-9 fail to compile with this new version of protobuf.</p>\n<p>Here is an example failed build:</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/view/os_homebrew/job/gazebo-ci-gazebo9-homebrew-amd64/38/console\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/view/os_homebrew/job/gazebo-ci-gazebo9-homebrew-amd64/38/console</a></li>\n</ul>\n<p>This a patch that partially fixes it, but not entirely (scoped_ptr was removed in <a href=\"https://github.com/google/protobuf/pull/4387\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/google/protobuf/pull/4387</a>).</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 039509b626b4 gazebo/msgs/generator/GazeboGenerator.cc</span>\n<span class=\"gd\">--- a/gazebo/msgs/generator/GazeboGenerator.cc  Thu Jun 21 00:17:31 2018 +0000</span>\n<span class=\"gi\">+++ b/gazebo/msgs/generator/GazeboGenerator.cc  Thu Jun 21 01:43:14 2018 -0700</span>\n<span class=\"gu\">@@ -22,6 +22,7 @@</span>\n #include &lt;google/protobuf/descriptor.pb.h&gt;\n #include &lt;boost/algorithm/string/replace.hpp&gt;\n\n<span class=\"gi\">+#include &lt;memory&gt;</span>\n #include &lt;vector&gt;\n #include &lt;utility&gt;\n #include &lt;iostream&gt;\n<span class=\"gu\">@@ -48,7 +49,7 @@</span>\n\n   // Add boost shared point include\n   {\n<span class=\"gd\">-    scoped_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n<span class=\"gi\">+    std::unique_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n         _generator_context-&gt;OpenForInsert(headerFilename, &quot;includes&quot;));\n     io::Printer printer(output.get(), &#39;$&#39;);\n\n<span class=\"gu\">@@ -57,7 +58,7 @@</span>\n\n   // Add boost shared point include\n   {\n<span class=\"gd\">-    scoped_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n<span class=\"gi\">+    std::unique_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n         _generator_context-&gt;OpenForInsert(sourceFilename, &quot;includes&quot;));\n     io::Printer printer(output.get(), &#39;$&#39;);\n\n<span class=\"gu\">@@ -67,7 +68,7 @@</span>\n\n\n   {\n<span class=\"gd\">-    scoped_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n<span class=\"gi\">+    std::unique_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n         _generator_context-&gt;OpenForInsert(headerFilename, &quot;includes&quot;));\n     io::Printer printer(output.get(), &#39;$&#39;);\n\n<span class=\"gu\">@@ -79,7 +80,7 @@</span>\n\n   // Add boost shared typedef\n   {\n<span class=\"gd\">-    scoped_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n<span class=\"gi\">+    std::unique_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n         _generator_context-&gt;OpenForInsert(headerFilename, &quot;namespace_scope&quot;));\n     io::Printer printer(output.get(), &#39;$&#39;);\n\n<span class=\"gu\">@@ -95,7 +96,7 @@</span>\n\n   // Add const boost shared typedef\n   {\n<span class=\"gd\">-    scoped_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n<span class=\"gi\">+    std::unique_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n         _generator_context-&gt;OpenForInsert(headerFilename, &quot;global_scope&quot;));\n     io::Printer printer(output.get(), &#39;$&#39;);\n\n<span class=\"gu\">@@ -111,7 +112,7 @@</span>\n\n   // Add Message Factory register\n   {\n<span class=\"gd\">-    scoped_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n<span class=\"gi\">+    std::unique_ptr&lt;io::ZeroCopyOutputStream&gt; output(</span>\n         _generator_context-&gt;OpenForInsert(sourceFilename, &quot;global_scope&quot;));\n     io::Printer printer(output.get(), &#39;$&#39;);\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-06-21T08:47:47.892887+00:00", "milestone": null, "updated_on": "2018-07-02T20:36:39.068404+00:00", "type": "issue", "id": 2483}