{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/421/comments/2848007.json"}, "html": {"href": "#!/osrf/gazebo/issues/421#comment-2848007"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/421.json"}}, "type": "issue", "id": 421, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide Schema for SDF files"}, "content": {"raw": "Not exactly. While this provides a human-readable description of the SDF file format, it cannot be used to validate and parse the SDF file using a general XML parser. \n\nAn example use case I have now is to write a JAXB parser for the SDF format to load it into our Java control software. JAXB is a standard Java loader that populates the fields of a class structure using the contents of an XML file and visa-versa for saving the contents of a class structure.  While I can manually setup a class structure that mimics the SDF file, it would be much easier to use a XML Scheme to generate the structure. If changes are introduced to the specification, it is easy to adapt the loader to the new version.\n\nJAXB introduction\nhttp://www.oracle.com/technetwork/articles/javase/index-140168.html", "markup": "markdown", "html": "<p>Not exactly. While this provides a human-readable description of the SDF file format, it cannot be used to validate and parse the SDF file using a general XML parser. </p>\n<p>An example use case I have now is to write a JAXB parser for the SDF format to load it into our Java control software. JAXB is a standard Java loader that populates the fields of a class structure using the contents of an XML file and visa-versa for saving the contents of a class structure.  While I can manually setup a class structure that mimics the SDF file, it would be much easier to use a XML Scheme to generate the structure. If changes are introduced to the specification, it is easy to adapt the loader to the new version.</p>\n<p>JAXB introduction\n<a href=\"http://www.oracle.com/technetwork/articles/javase/index-140168.html\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.oracle.com/technetwork/articles/javase/index-140168.html</a></p>", "type": "rendered"}, "created_on": "2013-01-15T16:40:17.794478+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 2848007}