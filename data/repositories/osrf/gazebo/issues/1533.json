{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1533/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1533.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1533/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1533/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1533/gzserver-help-should-return-0"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1533/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "gzserver --help should return 0", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently `gzserver --help` does not return 0:\r\n\r\n~~~\r\n$ gzserver --help && echo this message should be echoed\r\ngzserver -- Run the Gazebo server.\r\n\r\n`gzserver` [options] <world_file>\r\n\r\nGazebo server runs simulation and handles commandline options, starts a Master, runs World update and sensor generation loops.\r\n\r\nOptions:\r\n  -v [ --version ]              Output version information.\r\n  --verbose                     Increase the messages written to the terminal.\r\n  -h [ --help ]                 Produce this help message.\r\n  -u [ --pause ]                Start the server in a paused state.\r\n  -e [ --physics ] arg          Specify a physics engine \r\n                                (ode|bullet|dart|simbody).\r\n  -p [ --play ] arg             Play a log file.\r\n  -r [ --record ]               Record state data.\r\n  --record_encoding arg (=zlib) Compression encoding format for log data \r\n                                (zlib|bz2|txt).\r\n  --record_path arg             Absolute path in which to store state data\r\n  --seed arg                    Start with a given random number seed.\r\n  --iters arg                   Number of iterations to simulate.\r\n  --minimal_comms               Reduce the TCP/IP traffic output by gzserver\r\n  -s [ --server-plugin ] arg    Load a plugin.\r\n\r\n~~~\r\n\r\nThis happens because [Server::ParseArgs](#!/osrf/gazebo/src/4dc9b5b7ef3049f4fa7c86a99a22bf579a6cbd72/gazebo/Server.cc#cl-78) returns `bool`. [server_main.cc](#!/osrf/gazebo/src/4dc9b5b7ef3049f4fa7c86a99a22bf579a6cbd72/gazebo/server_main.cc#cl-37) uses the return value of `Server::ParseArgs` to determine if a server should be started.\r\n\r\nInstead, I think `Server::ParseArgs` could return `int`, with a positive value indicating that a server should be started, and otherwise just pass along the returned value:\r\n\r\n~~~\r\ndiff -r 4dc9b5b7ef30 gazebo/server_main.cc\r\n--- a/gazebo/server_main.cc\tFri Mar 20 17:48:04 2015 -0700\r\n+++ b/gazebo/server_main.cc\tMon Mar 23 17:53:15 2015 -0700\r\n@@ -34,8 +34,11 @@\r\n     gazebo::util::LogRecord::Instance()->Init(\"gzserver\");\r\n \r\n     server = new gazebo::Server();\r\n-    if (!server->ParseArgs(argc, argv))\r\n-      return -1;\r\n+    {\r\n+      int parse = server->ParseArgs(argc, argv);\r\n+      if (parse <= 0)\r\n+        return parse;\r\n+    }\r\n \r\n     server->Run();\r\n     server->Fini();\r\n~~~\r\n\r\nThen the return codes in ParseArgs should be changed accordingly.", "markup": "markdown", "html": "<p>Currently <code>gzserver --help</code> does not return 0:</p>\n<div class=\"codehilite\"><pre><span></span>$ gzserver --help <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">echo</span> this message should be echoed\ngzserver -- Run the Gazebo server.\n\n<span class=\"sb\">`</span>gzserver<span class=\"sb\">`</span> <span class=\"o\">[</span>options<span class=\"o\">]</span> &lt;world_file&gt;\n\nGazebo server runs simulation and handles commandline options, starts a Master, runs World update and sensor generation loops.\n\nOptions:\n  -v <span class=\"o\">[</span> --version <span class=\"o\">]</span>              Output version information.\n  --verbose                     Increase the messages written to the terminal.\n  -h <span class=\"o\">[</span> --help <span class=\"o\">]</span>                 Produce this <span class=\"nb\">help</span> message.\n  -u <span class=\"o\">[</span> --pause <span class=\"o\">]</span>                Start the server in a paused state.\n  -e <span class=\"o\">[</span> --physics <span class=\"o\">]</span> arg          Specify a physics engine \n                                <span class=\"o\">(</span>ode<span class=\"p\">|</span>bullet<span class=\"p\">|</span>dart<span class=\"p\">|</span>simbody<span class=\"o\">)</span>.\n  -p <span class=\"o\">[</span> --play <span class=\"o\">]</span> arg             Play a log file.\n  -r <span class=\"o\">[</span> --record <span class=\"o\">]</span>               Record state data.\n  --record_encoding arg <span class=\"o\">(=</span>zlib<span class=\"o\">)</span> Compression encoding format <span class=\"k\">for</span> log data \n                                <span class=\"o\">(</span>zlib<span class=\"p\">|</span>bz2<span class=\"p\">|</span>txt<span class=\"o\">)</span>.\n  --record_path arg             Absolute path in which to store state data\n  --seed arg                    Start with a given random number seed.\n  --iters arg                   Number of iterations to simulate.\n  --minimal_comms               Reduce the TCP/IP traffic output by gzserver\n  -s <span class=\"o\">[</span> --server-plugin <span class=\"o\">]</span> arg    Load a plugin.\n</pre></div>\n\n\n<p>This happens because <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/4dc9b5b7ef3049f4fa7c86a99a22bf579a6cbd72/gazebo/Server.cc#cl-78\" rel=\"nofollow\">Server::ParseArgs</a> returns <code>bool</code>. <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/4dc9b5b7ef3049f4fa7c86a99a22bf579a6cbd72/gazebo/server_main.cc#cl-37\" rel=\"nofollow\">server_main.cc</a> uses the return value of <code>Server::ParseArgs</code> to determine if a server should be started.</p>\n<p>Instead, I think <code>Server::ParseArgs</code> could return <code>int</code>, with a positive value indicating that a server should be started, and otherwise just pass along the returned value:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 4dc9b5b7ef30 gazebo/server_main.cc</span>\n<span class=\"gd\">--- a/gazebo/server_main.cc Fri Mar 20 17:48:04 2015 -0700</span>\n<span class=\"gi\">+++ b/gazebo/server_main.cc Mon Mar 23 17:53:15 2015 -0700</span>\n<span class=\"gu\">@@ -34,8 +34,11 @@</span>\n     gazebo::util::LogRecord::Instance()-&gt;Init(&quot;gzserver&quot;);\n\n     server = new gazebo::Server();\n<span class=\"gd\">-    if (!server-&gt;ParseArgs(argc, argv))</span>\n<span class=\"gd\">-      return -1;</span>\n<span class=\"gi\">+    {</span>\n<span class=\"gi\">+      int parse = server-&gt;ParseArgs(argc, argv);</span>\n<span class=\"gi\">+      if (parse &lt;= 0)</span>\n<span class=\"gi\">+        return parse;</span>\n<span class=\"gi\">+    }</span>\n\n     server-&gt;Run();\n     server-&gt;Fini();\n</pre></div>\n\n\n<p>Then the return codes in ParseArgs should be changed accordingly.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-03-24T00:55:43.066207+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:24.099929+00:00", "type": "issue", "id": 1533}