{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/459/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/459.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/459/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/459/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/459/build-warnings-comparison-between-doubles"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/459/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Build warnings - comparison between doubles", "component": null, "votes": 0, "watches": 1, "content": {"raw": "MsgFactory test spits out warnings on unsafe floating point comparison using the `==` operator which is what gtest uses inside `EXPECT_EQ`. \r\n\r\nA way around this it to do a subtraction between the two and check if the abs value is less than some epsilon.\r\n\r\n```\r\n#!c++\r\n\r\nIn file included from /home/ian/depot/gazebo/gazebo/msgs/test/MsgFactory.cc:18:0:\r\n/home/ian/depot/gazebo/test/gtest/include/gtest/gtest.h: In function \u2018testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, const T1&, const T2&) [with T1 = double, T2 = double]\u2019:\r\n/home/ian/depot/gazebo/test/gtest/include/gtest/gtest.h:1353:30:   instantiated from \u2018static testing::AssertionResult testing::internal::EqHelper<lhs_is_null_literal>::Compare(const char*, const char*, const T1&, const T2&) [with T1 = double, T2 = double, bool lhs_is_null_literal = false]\u2019\r\n/home/ian/depot/gazebo/gazebo/msgs/test/MsgFactory.cc:73:3:   instantiated from here\r\n/home/ian/depot/gazebo/test/gtest/include/gtest/gtest.h:1316:3: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\n\r\n```\r\n\r\n", "markup": "markdown", "html": "<p>MsgFactory test spits out warnings on unsafe floating point comparison using the <code>==</code> operator which is what gtest uses inside <code>EXPECT_EQ</code>. </p>\n<p>A way around this it to do a subtraction between the two and check if the abs value is less than some epsilon.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">In</span> <span class=\"n\">file</span> <span class=\"n\">included</span> <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ian</span><span class=\"o\">/</span><span class=\"n\">depot</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">msgs</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">MsgFactory</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ian</span><span class=\"o\">/</span><span class=\"n\">depot</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span> <span class=\"n\">In</span> <span class=\"n\">function</span> <span class=\"err\">\u2018</span><span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">AssertionResult</span> <span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">internal</span><span class=\"o\">::</span><span class=\"n\">CmpHelperEQ</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">T1</span><span class=\"o\">&amp;</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">T2</span><span class=\"o\">&amp;</span><span class=\"p\">)</span> <span class=\"p\">[</span><span class=\"n\">with</span> <span class=\"n\">T1</span> <span class=\"o\">=</span> <span class=\"kt\">double</span><span class=\"p\">,</span> <span class=\"n\">T2</span> <span class=\"o\">=</span> <span class=\"kt\">double</span><span class=\"p\">]</span><span class=\"err\">\u2019</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ian</span><span class=\"o\">/</span><span class=\"n\">depot</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">1353</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span>   <span class=\"n\">instantiated</span> <span class=\"n\">from</span> <span class=\"err\">\u2018</span><span class=\"k\">static</span> <span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">AssertionResult</span> <span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">internal</span><span class=\"o\">::</span><span class=\"n\">EqHelper</span><span class=\"o\">&lt;</span><span class=\"n\">lhs_is_null_literal</span><span class=\"o\">&gt;::</span><span class=\"n\">Compare</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">T1</span><span class=\"o\">&amp;</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">T2</span><span class=\"o\">&amp;</span><span class=\"p\">)</span> <span class=\"p\">[</span><span class=\"n\">with</span> <span class=\"n\">T1</span> <span class=\"o\">=</span> <span class=\"kt\">double</span><span class=\"p\">,</span> <span class=\"n\">T2</span> <span class=\"o\">=</span> <span class=\"kt\">double</span><span class=\"p\">,</span> <span class=\"kt\">bool</span> <span class=\"n\">lhs_is_null_literal</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">]</span><span class=\"err\">\u2019</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ian</span><span class=\"o\">/</span><span class=\"n\">depot</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">msgs</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">MsgFactory</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">73</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"o\">:</span>   <span class=\"n\">instantiated</span> <span class=\"n\">from</span> <span class=\"n\">here</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">ian</span><span class=\"o\">/</span><span class=\"n\">depot</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"o\">/</span><span class=\"n\">gtest</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">1316</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"o\">:</span> <span class=\"nl\">warning</span><span class=\"p\">:</span> <span class=\"n\">comparing</span> <span class=\"n\">floating</span> <span class=\"n\">point</span> <span class=\"n\">with</span> <span class=\"o\">==</span> <span class=\"n\">or</span> <span class=\"o\">!=</span> <span class=\"n\">is</span> <span class=\"n\">unsafe</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">Wfloat</span><span class=\"o\">-</span><span class=\"n\">equal</span><span class=\"p\">]</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "1.4", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/46357.json"}}}, "edited_on": null, "created_on": "2013-01-29T19:07:10.944747+00:00", "milestone": null, "updated_on": "2016-09-14T19:45:39.867920+00:00", "type": "issue", "id": 459}