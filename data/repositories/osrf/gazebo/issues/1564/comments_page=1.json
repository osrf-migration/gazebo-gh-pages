{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/17334805.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-17334805"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "@paulbovbel (author of pull request #1567) any thoughts?", "markup": "markdown", "html": "<p>@paulbovbel (author of <a href=\"#!/osrf/gazebo/pull-requests/1567/report-inf-for-ranges-outside-of-ray\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1567</a>) any thoughts?</p>", "type": "rendered"}, "created_on": "2015-04-13T04:38:16.552810+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17334805}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/17334846.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-17334846"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "FYI @AlexReimann ", "markup": "markdown", "html": "<p>FYI @AlexReimann </p>", "type": "rendered"}, "created_on": "2015-04-13T04:44:47.084573+00:00", "user": {"display_name": "Marcus Liebhardt", "uuid": "{3450c259-a384-4f55-9804-258a3f313f1d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3450c259-a384-4f55-9804-258a3f313f1d%7D"}, "html": {"href": "https://bitbucket.org/%7B3450c259-a384-4f55-9804-258a3f313f1d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dec89fe7edb3199a81905cc8c0ddd658d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsML-5.png"}}, "nickname": "bit-pirate", "type": "user", "account_id": "557058:207d9111-6236-414f-ba53-cda69d89f223"}, "updated_on": "2017-02-03T23:40:19.412237+00:00", "type": "issue_comment", "id": 17334846}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/17359044.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-17359044"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Haven't encountered this. I didn't dig too deeply into the physics side of the processing, and focused more on post-processing the data correctly before publishing.", "markup": "markdown", "html": "<p>Haven't encountered this. I didn't dig too deeply into the physics side of the processing, and focused more on post-processing the data correctly before publishing.</p>", "type": "rendered"}, "created_on": "2015-04-13T22:56:40.844776+00:00", "user": null, "updated_on": "2017-02-03T23:40:22.114474+00:00", "type": "issue_comment", "id": 17359044}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34105113.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34105113"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Reproduced in gazebo 8\n\n![reproduce_1564.png](data/bitbucket.org/repo/jgXqbo/images/4018950051-reproduce_1564.png)", "markup": "markdown", "html": "<p>Reproduced in gazebo 8</p>\n<p><img alt=\"reproduce_1564.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/4018950051-reproduce_1564.png\" /></p>", "type": "rendered"}, "created_on": "2017-02-01T22:23:01.462986+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34105113}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34105130.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34105130"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2017-02-01T22:23:47.322332+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34105130}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34105194.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34105194"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "World file showing bug with cpu ray sensor", "markup": "markdown", "html": "<p>World file showing bug with cpu ray sensor</p>", "type": "rendered"}, "created_on": "2017-02-01T22:27:59.489474+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34105194}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34105433.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34105433"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Same issue reproduced with GpuRayPlugin", "markup": "markdown", "html": "<p>Same issue reproduced with GpuRayPlugin</p>", "type": "rendered"}, "created_on": "2017-02-01T22:46:42.845291+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34105433}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34106357.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34106357"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "It appears [physics::MultiRayShape starts the raycast at the minimum range](#!/osrf/gazebo/src/d9caf6c36a9f78ce6ab2a1fa2f7ddef06084d889/gazebo/physics/MultiRayShape.cc?at=default&fileviewer=file-view-default#MultiRayShape.cc-108).\n\nI think it does so because otherwise the ray will stop at the sensor's collision geometry. If I set the minimum range on the hokuyo sensor to zero, all readings hit the inside of the sensor instead of geometry outside.\n\n\n\nI think one fix for the CPU sensor would be to make MultiRayShape start the ray cast from the origin, and somehow exclude geometry belonging to the sensor itself.", "markup": "markdown", "html": "<p>It appears <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d9caf6c36a9f78ce6ab2a1fa2f7ddef06084d889/gazebo/physics/MultiRayShape.cc?at=default&amp;fileviewer=file-view-default#MultiRayShape.cc-108\" rel=\"nofollow\">physics::MultiRayShape starts the raycast at the minimum range</a>.</p>\n<p>I think it does so because otherwise the ray will stop at the sensor's collision geometry. If I set the minimum range on the hokuyo sensor to zero, all readings hit the inside of the sensor instead of geometry outside.</p>\n<p>I think one fix for the CPU sensor would be to make MultiRayShape start the ray cast from the origin, and somehow exclude geometry belonging to the sensor itself.</p>", "type": "rendered"}, "created_on": "2017-02-02T00:02:51.905356+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-02T00:03:07.764486+00:00", "type": "issue_comment", "id": 34106357}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34118163.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34118163"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Note there are use cases where the old behavior is actually beneficial. Say you have a spinning LIDAR that is mounted on a robot that uses simplified boxy collision geometry and the LIDAR partly or completely spins inside this geometry. When this bug is fixed, it gets very hard to keep simplified geometry and simultaneously let the sensor ignore it.", "markup": "markdown", "html": "<p>Note there are use cases where the old behavior is actually beneficial. Say you have a spinning LIDAR that is mounted on a robot that uses simplified boxy collision geometry and the LIDAR partly or completely spins inside this geometry. When this bug is fixed, it gets very hard to keep simplified geometry and simultaneously let the sensor ignore it.</p>", "type": "rendered"}, "created_on": "2017-02-02T12:12:04.448260+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": null, "type": "issue_comment", "id": 34118163}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34124881.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34124881"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "It appears the GPU ray sensor has the same behavior because the camera used to generate the points has a near clip distance set at the minimum range. Anything within minimum range is invisible.\n\nIf the minimum range is set to 0 on the GPU ray sensor, the rays terminate at the geometry defined by the visual element of the lidar.", "markup": "markdown", "html": "<p>It appears the GPU ray sensor has the same behavior because the camera used to generate the points has a near clip distance set at the minimum range. Anything within minimum range is invisible.</p>\n<p>If the minimum range is set to 0 on the GPU ray sensor, the rays terminate at the geometry defined by the visual element of the lidar.</p>", "type": "rendered"}, "created_on": "2017-02-02T15:56:12.368432+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34124881}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34135522.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34135522"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "CPU ray sensor is fixed by pull request #2633\n\nGPU ray sensor is not fixed yet", "markup": "markdown", "html": "<p>CPU ray sensor is fixed by <a href=\"#!/osrf/gazebo/pull-requests/2633/ray-sensor-1564-cpu\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2633</a></p>\n<p>GPU ray sensor is not fixed yet</p>", "type": "rendered"}, "created_on": "2017-02-03T03:14:21.049869+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34135522}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34285364.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34285364"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "I created a separate issue for the gpu ray #2188 sensor since the behavior is different, and the fix is definitely different.", "markup": "markdown", "html": "<p>I created a separate issue for the gpu ray <a href=\"#!/osrf/gazebo/issues/2188/gpuraysensor-sees-through-objects-within\" rel=\"nofollow\" title=\"GpuRaySensor sees through objects within minimum range\" class=\"ap-connect-link\">#2188</a> sensor since the behavior is different, and the fix is definitely different.</p>", "type": "rendered"}, "created_on": "2017-02-09T16:24:14.991234+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34285364}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34285854.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34285854"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "After chatting with @scpeters the new behavior will be.\n\n* by default rays will start at minimum range, and gzwarn will notify the user about the problems this has\n* by default rays will collide with all collisions\n* if the user supplies the tag `<cast_from_center/>` the rays will start at the sensor instead of minimum range\n* if the user supplies a list of collision names, those named collisions will be ignored by the sensor\n\nex:\n```\n<cast_from_center/>\n<collisions_to_ignore>\n  <name>lidar_body</name>\n</collisions_to_ignore>\n```", "markup": "markdown", "html": "<p>After chatting with @scpeters the new behavior will be.</p>\n<ul>\n<li>by default rays will start at minimum range, and gzwarn will notify the user about the problems this has</li>\n<li>by default rays will collide with all collisions</li>\n<li>if the user supplies the tag <code>&lt;cast_from_center/&gt;</code> the rays will start at the sensor instead of minimum range</li>\n<li>if the user supplies a list of collision names, those named collisions will be ignored by the sensor</li>\n</ul>\n<p>ex:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;cast_from_center/&gt;</span>\n<span class=\"nt\">&lt;collisions_to_ignore&gt;</span>\n  <span class=\"nt\">&lt;name&gt;</span>lidar_body<span class=\"nt\">&lt;/name&gt;</span>\n<span class=\"nt\">&lt;/collisions_to_ignore&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-02-09T16:44:09.062785+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34285854}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34293884.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34293884"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Does the `<cast_from_center`> tag serve a purpose that a minimum range of zero does not achieve?\n\n`<collisions_to_ignore>` might be difficult to implement on the GPU ray.", "markup": "markdown", "html": "<p>Does the <code>&lt;cast_from_center</code>&gt; tag serve a purpose that a minimum range of zero does not achieve?</p>\n<p><code>&lt;collisions_to_ignore&gt;</code> might be difficult to implement on the GPU ray.</p>", "type": "rendered"}, "created_on": "2017-02-10T00:54:39.828893+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 34293884}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34294010.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34294010"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "There is a concept of collision bitmasks that could be applied to this situation. A CPU ray can have a collision bitmask (I think...), which can be used to define what objects are valid during collision detection.", "markup": "markdown", "html": "<p>There is a concept of collision bitmasks that could be applied to this situation. A CPU ray can have a collision bitmask (I think...), which can be used to define what objects are valid during collision detection.</p>", "type": "rendered"}, "created_on": "2017-02-10T01:07:31.917140+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 34294010}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34294047.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34294047"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "If `<cast_from_center/>` is specified all measurements less than the minimum range will be set to -inf per [rep 117](http://www.ros.org/reps/rep-0117.html)\n\nIf minimum range is set to zero then no measurements will be set -inf.\n\nI'm not sure how feasible it is to fix the GpuRay. It calculates depth using a vertex shader that encodes depth as color, so to ignore something the geometry would have to be temporarily removed from the scene.", "markup": "markdown", "html": "<p>If <code>&lt;cast_from_center/&gt;</code> is specified all measurements less than the minimum range will be set to -inf per <a data-is-external-link=\"true\" href=\"http://www.ros.org/reps/rep-0117.html\" rel=\"nofollow\">rep 117</a></p>\n<p>If minimum range is set to zero then no measurements will be set -inf.</p>\n<p>I'm not sure how feasible it is to fix the GpuRay. It calculates depth using a vertex shader that encodes depth as color, so to ignore something the geometry would have to be temporarily removed from the scene.</p>", "type": "rendered"}, "created_on": "2017-02-10T01:09:58.572787+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34294047}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34312663.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34312663"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "ogre has visibility flags and masks that lets you configure what objects are visible to a camera", "markup": "markdown", "html": "<p>ogre has visibility flags and masks that lets you configure what objects are visible to a camera</p>", "type": "rendered"}, "created_on": "2017-02-10T16:52:43.909992+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 34312663}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34368637.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34368637"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Since making things invisible is possible for both CPU and GPU variants, I think the following plan will work for the CPU ray sensor.\n\nI'm calling the element with the list of things to ignore `<names_to_ignore>` , since it can also be used by the GPU variant for visual elements.\n\n# Gazebo 9 \n\nBy default use current behavior\n\n* Start ray cast from sensor + min_range\n* Print a warning about #1564\n* Print warning that the behavior will change in Gazebo 10\n\nIf physics engine does not support collision bitmasks\n\n* Start ray cast from sensor + min_range\n* Print a warning about #1564\n\nIf `<names_to_ignore>` is present on `<ray>` and the physics engine supports collision bitmasks\n\n * Start ray cast from sensor\n * Use collision bitmasks to ignore every element in the `<model>` that matches a `<name>` in the list\n\n\n# Gazebo 10\nIf physics engine does not support collision bitmasks\n\n* Start ray cast from sensor + min_range\n* Print a warning about #1564\n\nIf `<names_to_ignore>` is present on `<ray>` and the physics engine supports collision bitmasks\n\n * Start ray cast from sensor\n * Use collision bitmasks to ignore every element in the `<model>` that matches a `<name>` in the list", "markup": "markdown", "html": "<p>Since making things invisible is possible for both CPU and GPU variants, I think the following plan will work for the CPU ray sensor.</p>\n<p>I'm calling the element with the list of things to ignore <code>&lt;names_to_ignore&gt;</code> , since it can also be used by the GPU variant for visual elements.</p>\n<h1 id=\"markdown-header-gazebo-9\">Gazebo 9</h1>\n<p>By default use current behavior</p>\n<ul>\n<li>Start ray cast from sensor + min_range</li>\n<li>Print a warning about <a href=\"#!/osrf/gazebo/issues/1564/ray-sensor-looking-through-walls\" rel=\"nofollow\" title=\"Ray sensor looking through walls\" class=\"ap-connect-link\">#1564</a></li>\n<li>Print warning that the behavior will change in Gazebo 10</li>\n</ul>\n<p>If physics engine does not support collision bitmasks</p>\n<ul>\n<li>Start ray cast from sensor + min_range</li>\n<li>Print a warning about <a href=\"#!/osrf/gazebo/issues/1564/ray-sensor-looking-through-walls\" rel=\"nofollow\" title=\"Ray sensor looking through walls\" class=\"ap-connect-link\">#1564</a></li>\n</ul>\n<p>If <code>&lt;names_to_ignore&gt;</code> is present on <code>&lt;ray&gt;</code> and the physics engine supports collision bitmasks</p>\n<ul>\n<li>Start ray cast from sensor</li>\n<li>Use collision bitmasks to ignore every element in the <code>&lt;model&gt;</code> that matches a <code>&lt;name&gt;</code> in the list</li>\n</ul>\n<h1 id=\"markdown-header-gazebo-10\">Gazebo 10</h1>\n<p>If physics engine does not support collision bitmasks</p>\n<ul>\n<li>Start ray cast from sensor + min_range</li>\n<li>Print a warning about <a href=\"#!/osrf/gazebo/issues/1564/ray-sensor-looking-through-walls\" rel=\"nofollow\" title=\"Ray sensor looking through walls\" class=\"ap-connect-link\">#1564</a></li>\n</ul>\n<p>If <code>&lt;names_to_ignore&gt;</code> is present on <code>&lt;ray&gt;</code> and the physics engine supports collision bitmasks</p>\n<ul>\n<li>Start ray cast from sensor</li>\n<li>Use collision bitmasks to ignore every element in the <code>&lt;model&gt;</code> that matches a <code>&lt;name&gt;</code> in the list</li>\n</ul>", "type": "rendered"}, "created_on": "2017-02-13T23:37:00.231476+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34368637}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34369014.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34369014"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Just to confirm, \"ignore every element in the `<model>`\" means it's going to do partial string matching against names of nested models, links, collisions, and visuals?", "markup": "markdown", "html": "<p>Just to confirm, \"ignore every element in the <code>&lt;model&gt;</code>\" means it's going to do partial string matching against names of nested models, links, collisions, and visuals?</p>", "type": "rendered"}, "created_on": "2017-02-14T00:22:55.652253+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 34369014}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34387421.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34387421"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "Is it possible to use a bitmask instead of `<names_to_ignore>`?", "markup": "markdown", "html": "<p>Is it possible to use a bitmask instead of <code>&lt;names_to_ignore&gt;</code>?</p>", "type": "rendered"}, "created_on": "2017-02-14T15:11:27.812861+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 34387421}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564/comments/34401413.json"}, "html": {"href": "#!/osrf/gazebo/issues/1564#comment-34401413"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1564.json"}}, "type": "issue", "id": 1564, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Ray sensor looking through walls"}, "content": {"raw": "@iche033 I was thinking the name would be specified relative to the model (ex: \"linkname::collision_name\"). I think `physics::Base::GetChild(std::string name)` supports this.\n\n@nkoenig When you say use a bitmask, do you mean add `<collied_bitmask>`to `<ray>`, and have the user specify different bitmasks for the collision and ray elements? That should work fine for the CPU ray sensor. I think `<names_to_ignore>` can solve both this and #2188.", "markup": "markdown", "html": "<p>@iche033 I was thinking the name would be specified relative to the model (ex: \"linkname::collision_name\"). I think <code>physics::Base::GetChild(std::string name)</code> supports this.</p>\n<p>@nkoenig When you say use a bitmask, do you mean add <code>&lt;collied_bitmask&gt;</code>to <code>&lt;ray&gt;</code>, and have the user specify different bitmasks for the collision and ray elements? That should work fine for the CPU ray sensor. I think <code>&lt;names_to_ignore&gt;</code> can solve both this and <a href=\"#!/osrf/gazebo/issues/2188/gpuraysensor-sees-through-objects-within\" rel=\"nofollow\" title=\"GpuRaySensor sees through objects within minimum range\" class=\"ap-connect-link\">#2188</a>.</p>", "type": "rendered"}, "created_on": "2017-02-14T17:11:11.985448+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 34401413}], "page": 1, "size": 21}