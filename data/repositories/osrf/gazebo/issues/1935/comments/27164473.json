{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1935/comments/27164473.json"}, "html": {"href": "#!/osrf/gazebo/issues/1935#comment-27164473"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1935.json"}}, "type": "issue", "id": 1935, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Attach two models via CreateJoint crash (reproducible code included)"}, "content": {"raw": "Seems like the problem came from my code, I needed to call SetModel with the second model that the joint needed (I was giving the same model than the one when calling CreateJoint).\n\nThanks for the attention. My final code looks like:\n\n\n```\n#!c++\n// m1 is model1, m2 is model2, l1 is link of model1 and l2 is link of model2\n    this->fixedJoint = this->physics->CreateJoint(\"revolute\", m1);\n    this->fixedJoint->Attach(l1, l2);\n    this->fixedJoint->Load(l1,\n                           l2, math::Pose());\n    this->fixedJoint->SetModel(m2);\n    /*\n     * If SetModel is not done we get:\n     * ***** Internal Program Error - assertion (this->GetParentModel() != __null)\n     failed in void gazebo::physics::Entity::PublishPose():\n     /tmp/buildd/gazebo2-2.2.3/gazebo/physics/Entity.cc(225):\n     An entity without a parent model should not happen\n\n     * If SetModel is given the same model than CreateJoint given\n     * Gazebo crashes with\n     * ***** Internal Program Error - assertion (self->inertial != __null)\n     failed in static void gazebo::physics::ODELink::MoveCallback(dBodyID):\n     /tmp/buildd/gazebo2-2.2.3/gazebo/physics/ode/ODELink.cc(183): Inertial pointer is NULL\n     */\n\n    this->fixedJoint->SetAxis(0, math::Vector3(0, 0, 1));\n    this->fixedJoint->SetHighStop(0, 0);\n    this->fixedJoint->SetLowStop(0, 0);\n    this->fixedJoint->SetName(\"fixedjoint\");\n    this->fixedJoint->Init();\n\n```", "markup": "markdown", "html": "<p>Seems like the problem came from my code, I needed to call SetModel with the second model that the joint needed (I was giving the same model than the one when calling CreateJoint).</p>\n<p>Thanks for the attention. My final code looks like:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">// m1 is model1, m2 is model2, l1 is link of model1 and l2 is link of model2</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">physics</span><span class=\"o\">-&gt;</span><span class=\"n\">CreateJoint</span><span class=\"p\">(</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"p\">,</span> <span class=\"n\">m1</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">Attach</span><span class=\"p\">(</span><span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">l2</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">l1</span><span class=\"p\">,</span>\n                           <span class=\"n\">l2</span><span class=\"p\">,</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span><span class=\"p\">());</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetModel</span><span class=\"p\">(</span><span class=\"n\">m2</span><span class=\"p\">);</span>\n    <span class=\"cm\">/*</span>\n<span class=\"cm\">     * If SetModel is not done we get:</span>\n<span class=\"cm\">     * ***** Internal Program Error - assertion (this-&gt;GetParentModel() != __null)</span>\n<span class=\"cm\">     failed in void gazebo::physics::Entity::PublishPose():</span>\n<span class=\"cm\">     /tmp/buildd/gazebo2-2.2.3/gazebo/physics/Entity.cc(225):</span>\n<span class=\"cm\">     An entity without a parent model should not happen</span>\n\n<span class=\"cm\">     * If SetModel is given the same model than CreateJoint given</span>\n<span class=\"cm\">     * Gazebo crashes with</span>\n<span class=\"cm\">     * ***** Internal Program Error - assertion (self-&gt;inertial != __null)</span>\n<span class=\"cm\">     failed in static void gazebo::physics::ODELink::MoveCallback(dBodyID):</span>\n<span class=\"cm\">     /tmp/buildd/gazebo2-2.2.3/gazebo/physics/ode/ODELink.cc(183): Inertial pointer is NULL</span>\n<span class=\"cm\">     */</span>\n\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetAxis</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">));</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetHighStop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetLowStop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"s\">&quot;fixedjoint&quot;</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">fixedJoint</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">();</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-04-21T10:06:58.176926+00:00", "user": {"display_name": "Sam Pfeiffer", "uuid": "{de0a874a-b569-4840-93e1-ce1590b7ab4b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bde0a874a-b569-4840-93e1-ce1590b7ab4b%7D"}, "html": {"href": "https://bitbucket.org/%7Bde0a874a-b569-4840-93e1-ce1590b7ab4b%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:34577b3a-b3a5-4cbe-a032-e7f00f75244e/e01dd7be-ac01-4d0e-a108-64ae6ec5fb80/128"}}, "nickname": "awesomebytes", "type": "user", "account_id": "557058:34577b3a-b3a5-4cbe-a032-e7f00f75244e"}, "updated_on": null, "type": "issue_comment", "id": 27164473}