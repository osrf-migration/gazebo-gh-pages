{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/538/comments/10550845.json"}, "html": {"href": "#!/osrf/gazebo/issues/538#comment-10550845"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/538.json"}}, "type": "issue", "id": 538, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gazebo actor sdf 1.3 parser error"}, "content": {"raw": "Most of the SDF errors were fixed by updating .world file to comply with actor.sdf of SDF 1.5 version. Then a boost null pointer assertion popped up at following in Actor::AddActorVisual(). Referring to the schemas, I changed GetElement(\"filename\") to GetElement(\"uri\"). \n```\n#!c++\nmeshSdf->GetElement(\"filename\")->Set(this->skinFile);\n\n```\nThen it loaded the actor with skin in Gazebo. Z/Y axis misaligned human character was moved in an approximated circle (as per the trajectory description) without actual walking movements (walk.dae). It seemed only the initial skeleton pose was rendered and thereafter skeleton poses were not processed.  Later it was found, in Scene::PreRender(), it never entered following IF condition, hinting there is no visual bound with pose animation skeleton model.\n\n```\n#!c++\nVisual_M::iterator iter = this->visuals.find((*spIter)->model_id());\nif (iter != this->visuals.end())\n{\n    iter->second->SetSkeletonPose(*(*spIter).get());\n    SkeletonPoseMsgs_L::iterator prev = spIter++;\n    this->skeletonPoseMsgs.erase(prev);\n}\n```\nActually Visual_M map didn't include any visual with the searching ID (unique id). According to below, in Actor::Load(), a different ID was assigned which is not the actual id of actor::actor_pose::actor_visual. Then I modified the ID for that by searching Visual_M for the particular visual name. \n```\n#!c++\nthis->visualId = gazebo::physics::getUniqueId(); \n```\nNow some sort of skeletal animation happens. However the animated human is having a very weird appearance. I verfied the transformations in COLLADA files are passed as is to OrgeNode::SetPosition() and OrgeNode::SetOrientation(). \n\n![skeleton_screenshot.jpeg](data/bitbucket.org/repo/jgXqbo/images/1478468645-skeleton_screenshot.jpeg)\n\nIf I set the bone orientation by;\n\n```\n#!c++\nbone->getInitialOrientation() \n```\nin Visual::SetSkeletonPos() instead of the instantaneous bone transformations, initial pose for the human is loaded correctly, except it is set horizontal than the expected vertical alignment. Curious whether I need to do any operation on raw transformation values read from COLLADA <library_animations> before it is set to OGRE bones. Transformation for each keyframe seems to be local trnasformation, but not the deltas.\n\nA suspicion is whether this is due to the incorrect initial pose setup. That has some explanation why it works if the pose is set to initial pose with unexpected Z/Y direction, but rendered compeletely weird for consecutive frames. Also if the initial pose was not set, some human walk like animation is seen (more recognizable than before), still with scaling and some orientation and fewer deorientation issues.\n![human_like.jpeg](data/bitbucket.org/repo/jgXqbo/images/4114103111-human_like.jpeg)\n\n\nAny suggestion ?\n", "markup": "markdown", "html": "<p>Most of the SDF errors were fixed by updating .world file to comply with actor.sdf of SDF 1.5 version. Then a boost null pointer assertion popped up at following in Actor::AddActorVisual(). Referring to the schemas, I changed GetElement(\"filename\") to GetElement(\"uri\"). </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">meshSdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;filename&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">skinFile</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Then it loaded the actor with skin in Gazebo. Z/Y axis misaligned human character was moved in an approximated circle (as per the trajectory description) without actual walking movements (walk.dae). It seemed only the initial skeleton pose was rendered and thereafter skeleton poses were not processed.  Later it was found, in Scene::PreRender(), it never entered following IF condition, hinting there is no visual bound with pose animation skeleton model.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">Visual_M</span><span class=\"o\">::</span><span class=\"n\">iterator</span> <span class=\"n\">iter</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">visuals</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"n\">spIter</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">model_id</span><span class=\"p\">());</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">iter</span> <span class=\"o\">!=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">visuals</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">iter</span><span class=\"o\">-&gt;</span><span class=\"n\">second</span><span class=\"o\">-&gt;</span><span class=\"n\">SetSkeletonPose</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">spIter</span><span class=\"p\">).</span><span class=\"n\">get</span><span class=\"p\">());</span>\n    <span class=\"n\">SkeletonPoseMsgs_L</span><span class=\"o\">::</span><span class=\"n\">iterator</span> <span class=\"n\">prev</span> <span class=\"o\">=</span> <span class=\"n\">spIter</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">skeletonPoseMsgs</span><span class=\"p\">.</span><span class=\"n\">erase</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Actually Visual_M map didn't include any visual with the searching ID (unique id). According to below, in Actor::Load(), a different ID was assigned which is not the actual id of actor::actor_pose::actor_visual. Then I modified the ID for that by searching Visual_M for the particular visual name. </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">visualId</span> <span class=\"o\">=</span> <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">getUniqueId</span><span class=\"p\">();</span> \n</pre></div>\n\n\n<p>Now some sort of skeletal animation happens. However the animated human is having a very weird appearance. I verfied the transformations in COLLADA files are passed as is to OrgeNode::SetPosition() and OrgeNode::SetOrientation(). </p>\n<p><img alt=\"skeleton_screenshot.jpeg\" src=\"data/bitbucket.org/repo/jgXqbo/images/1478468645-skeleton_screenshot.jpeg\" /></p>\n<p>If I set the bone orientation by;</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">bone</span><span class=\"o\">-&gt;</span><span class=\"n\">getInitialOrientation</span><span class=\"p\">()</span> \n</pre></div>\n\n\n<p>in Visual::SetSkeletonPos() instead of the instantaneous bone transformations, initial pose for the human is loaded correctly, except it is set horizontal than the expected vertical alignment. Curious whether I need to do any operation on raw transformation values read from COLLADA &lt;library_animations&gt; before it is set to OGRE bones. Transformation for each keyframe seems to be local trnasformation, but not the deltas.</p>\n<p>A suspicion is whether this is due to the incorrect initial pose setup. That has some explanation why it works if the pose is set to initial pose with unexpected Z/Y direction, but rendered compeletely weird for consecutive frames. Also if the initial pose was not set, some human walk like animation is seen (more recognizable than before), still with scaling and some orientation and fewer deorientation issues.\n<img alt=\"human_like.jpeg\" src=\"data/bitbucket.org/repo/jgXqbo/images/4114103111-human_like.jpeg\" /></p>\n<p>Any suggestion ?</p>", "type": "rendered"}, "created_on": "2014-06-05T01:07:57.496526+00:00", "user": {"display_name": "Kalana Ishara", "uuid": "{55c0bffa-a4c1-420a-9174-4c350872595d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B55c0bffa-a4c1-420a-9174-4c350872595d%7D"}, "html": {"href": "https://bitbucket.org/%7B55c0bffa-a4c1-420a-9174-4c350872595d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/cc3d42219df7e9cfa7750268845b8ca9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKI-4.png"}}, "nickname": "pwkalana9", "type": "user", "account_id": "557058:64e63659-54e3-4dd5-9f91-2c1424fbc1fe"}, "updated_on": "2014-06-22T00:11:45.645221+00:00", "type": "issue_comment", "id": 10550845}