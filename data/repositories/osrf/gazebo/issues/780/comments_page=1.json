{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/5284515.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-5284515"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "I agree, that this would be very useful. I've had to write gazebo plugins to do exactly this in the past. \n\n@hsu\nI haven't spent too much time looking at the gazebo source, what would be involved in implementing this properly in gazebo itself?", "markup": "markdown", "html": "<p>I agree, that this would be very useful. I've had to write gazebo plugins to do exactly this in the past. </p>\n<p>@hsu\nI haven't spent too much time looking at the gazebo source, what would be involved in implementing this properly in gazebo itself?</p>", "type": "rendered"}, "created_on": "2013-07-22T21:34:45.600865+00:00", "user": {"display_name": "Brian Axelrod", "uuid": "{2a2fa192-0104-45dd-b42d-ad260be7402b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2a2fa192-0104-45dd-b42d-ad260be7402b%7D"}, "html": {"href": "https://bitbucket.org/%7B2a2fa192-0104-45dd-b42d-ad260be7402b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a70afebbb46bad6187bc6628b7ccc319d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBA-1.png"}}, "nickname": "brianaxelrod", "type": "user", "account_id": "557058:f3397300-1cd7-4004-8029-98a62ebe1688"}, "updated_on": null, "type": "issue_comment", "id": 5284515}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/5284651.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-5284651"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "Aside from the issues of choosing the actuator model and parameters, I think it could be implemented by binding a function to the JointUpdate event. There's an example of this in [ODEJoint::SetDamping](#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/ode/ODEJoint.cc#cl-1150), from [lines 1175 to 1179](#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/ode/ODEJoint.cc#cl-1175) when joint damping functions are set up.", "markup": "markdown", "html": "<p>Aside from the issues of choosing the actuator model and parameters, I think it could be implemented by binding a function to the JointUpdate event. There's an example of this in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/ode/ODEJoint.cc#cl-1150\" rel=\"nofollow\">ODEJoint::SetDamping</a>, from <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/ode/ODEJoint.cc#cl-1175\" rel=\"nofollow\">lines 1175 to 1179</a> when joint damping functions are set up.</p>", "type": "rendered"}, "created_on": "2013-07-22T21:49:43.803648+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 5284651}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/5285084.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-5285084"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "Is there documentation that explains what happens every gazebo update?\n\nOn JointUpdate would I simply be able to set max force every single update cycle depending on speed? ```this->SetParam(dParamFMax, _value)```", "markup": "markdown", "html": "<p>Is there documentation that explains what happens every gazebo update?</p>\n<p>On JointUpdate would I simply be able to set max force every single update cycle depending on speed? <code>this-&gt;SetParam(dParamFMax, _value)</code></p>", "type": "rendered"}, "created_on": "2013-07-22T22:13:28.054909+00:00", "user": {"display_name": "Brian Axelrod", "uuid": "{2a2fa192-0104-45dd-b42d-ad260be7402b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2a2fa192-0104-45dd-b42d-ad260be7402b%7D"}, "html": {"href": "https://bitbucket.org/%7B2a2fa192-0104-45dd-b42d-ad260be7402b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a70afebbb46bad6187bc6628b7ccc319d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBA-1.png"}}, "nickname": "brianaxelrod", "type": "user", "account_id": "557058:f3397300-1cd7-4004-8029-98a62ebe1688"}, "updated_on": null, "type": "issue_comment", "id": 5285084}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/5285179.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-5285179"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "I don't think there is documentation about the gazebo update process. I looked at [World::Update](#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/World.cc#cl-558), which calls [Model::Update](#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/Model.cc?at=default#cl-209) on every model. `Model::Update` calls [Joint::Update](#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/Joint.cc?at=default), which currently just triggers the JointUpdate event and returns.\n\nRegarding your second question, that looks like it would work for ODE, though we may have to implement something different for each physics engine.", "markup": "markdown", "html": "<p>I don't think there is documentation about the gazebo update process. I looked at <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/World.cc#cl-558\" rel=\"nofollow\">World::Update</a>, which calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/Model.cc?at=default#cl-209\" rel=\"nofollow\">Model::Update</a> on every model. <code>Model::Update</code> calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/157b677189fac4c6580c9205555973270bd5a65d/gazebo/physics/Joint.cc?at=default\" rel=\"nofollow\">Joint::Update</a>, which currently just triggers the JointUpdate event and returns.</p>\n<p>Regarding your second question, that looks like it would work for ODE, though we may have to implement something different for each physics engine.</p>", "type": "rendered"}, "created_on": "2013-07-22T22:25:34.772105+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 5285179}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/7000224.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-7000224"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "@brianaxelrod  Will it be possible for you to share your past plugin work on this?  Or more detail on what was done in the past?  That will be extremely helpful.\n\n@jespersmith Do you have a real-world example and specification on the use case you have in mind?\n\nThanks!", "markup": "markdown", "html": "<p>@brianaxelrod  Will it be possible for you to share your past plugin work on this?  Or more detail on what was done in the past?  That will be extremely helpful.</p>\n<p>@jespersmith Do you have a real-world example and specification on the use case you have in mind?</p>\n<p>Thanks!</p>", "type": "rendered"}, "created_on": "2013-11-21T17:54:44.114666+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 7000224}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/7000768.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-7000768"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "@hsu We're not using a electric robot at the moment. For Atlas, there is a nice non-linear curve.", "markup": "markdown", "html": "<p>@hsu We're not using a electric robot at the moment. For Atlas, there is a nice non-linear curve.</p>", "type": "rendered"}, "created_on": "2013-11-21T18:42:33.190449+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 7000768}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/7005669.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-7005669"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "@jespersmith I guess we can start by looking at the curves specified in the BDI private file repo for reference.  Do you have any specific preference on which joint might be more interesting or important to model first?", "markup": "markdown", "html": "<p>@jespersmith I guess we can start by looking at the curves specified in the BDI private file repo for reference.  Do you have any specific preference on which joint might be more interesting or important to model first?</p>", "type": "rendered"}, "created_on": "2013-11-22T03:22:40.645812+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 7005669}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/7018938.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-7018938"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "@acrane1970 Is it ok for us to try and implement torque-speed actuation for Atlas joints based on data from the robot hardware?", "markup": "markdown", "html": "<p>@acrane1970 Is it ok for us to try and implement torque-speed actuation for Atlas joints based on data from the robot hardware?</p>", "type": "rendered"}, "created_on": "2013-11-22T20:08:11.740586+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 7018938}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/14630027.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-14630027"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "I'm working on a proof-of-concept plugin for this right now in branch actuator_plugin, in plugins/ActuatorPlugin.\n\nThe actuator plugin is a model plugin enforces a maximum torque based on the current velocity of the \"actuated\" joint. It sets up a callback on the `WorldUpdateBegin` event. In this callback, a maximum torque value is calculated from the torque-speed model, which is configurable by the user. The maximum torque value is enforced if the joint torque exceeds this value. I don't actually use `Joint::SetMaxForce` because it's buggy and doesn't work uniformly for each physics engine.\n\nI also set up a data collection example in examples/stand_alone/actuator/main.cc. It spawns two models that are identical except one has an actuated joint and the other has a passive joint. `Joint::SetForce` is used to enforce a constant force value on each joint for a fixed number of timesteps.\n\nHere are some plots. The maximum torque value for the actuator was set to 2, the maximum velocity was set to 20, and the power was set to 10 (arbitrarily chosen values that worked well together). The torque speed curve is calculated from torque = power/velocity.\n\n![actuator_pos_time.png](data/bitbucket.org/repo/jgXqbo/images/2909633983-actuator_pos_time.png)\n![actuator_vel_time.png](data/bitbucket.org/repo/jgXqbo/images/3474452747-actuator_vel_time.png)\n![actuator_torque_speed_passive.png](data/bitbucket.org/repo/jgXqbo/images/1921123406-actuator_torque_speed_passive.png)\n![actuator_torque_speed_actuated.png](data/bitbucket.org/repo/jgXqbo/images/3100399016-actuator_torque_speed_actuated.png)\n\nNote that in the torque/velocity curve for the actuated joint, the initial flat part of the curve is 2--I was lazy with my joint axes, sorry folks. The plugin doesn't actually enforce a maximum velocity right now, since `Joint::SetVelocity` has some weird behavior. Feedback on that is welcome...\n\n@hsu, @nkoenig: I'd like to pull request this work once it's finished, which Gazebo should I target? @scpeters suggested I pull request it into 4.1, since it's a DRCSim milestone, and make a design document for integrating an Actuator class into the physics library, perhaps for Gazebo 6. Using a plugin creates a lot of limitations for this concept, but I thought it would be good practice to prototype modularly and a plugin seemed convenient for that.", "markup": "markdown", "html": "<p>I'm working on a proof-of-concept plugin for this right now in branch actuator_plugin, in plugins/ActuatorPlugin.</p>\n<p>The actuator plugin is a model plugin enforces a maximum torque based on the current velocity of the \"actuated\" joint. It sets up a callback on the <code>WorldUpdateBegin</code> event. In this callback, a maximum torque value is calculated from the torque-speed model, which is configurable by the user. The maximum torque value is enforced if the joint torque exceeds this value. I don't actually use <code>Joint::SetMaxForce</code> because it's buggy and doesn't work uniformly for each physics engine.</p>\n<p>I also set up a data collection example in examples/stand_alone/actuator/main.cc. It spawns two models that are identical except one has an actuated joint and the other has a passive joint. <code>Joint::SetForce</code> is used to enforce a constant force value on each joint for a fixed number of timesteps.</p>\n<p>Here are some plots. The maximum torque value for the actuator was set to 2, the maximum velocity was set to 20, and the power was set to 10 (arbitrarily chosen values that worked well together). The torque speed curve is calculated from torque = power/velocity.</p>\n<p><img alt=\"actuator_pos_time.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/2909633983-actuator_pos_time.png\" />\n<img alt=\"actuator_vel_time.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3474452747-actuator_vel_time.png\" />\n<img alt=\"actuator_torque_speed_passive.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1921123406-actuator_torque_speed_passive.png\" />\n<img alt=\"actuator_torque_speed_actuated.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3100399016-actuator_torque_speed_actuated.png\" /></p>\n<p>Note that in the torque/velocity curve for the actuated joint, the initial flat part of the curve is 2--I was lazy with my joint axes, sorry folks. The plugin doesn't actually enforce a maximum velocity right now, since <code>Joint::SetVelocity</code> has some weird behavior. Feedback on that is welcome...</p>\n<p>@hsu, @nkoenig: I'd like to pull request this work once it's finished, which Gazebo should I target? @scpeters suggested I pull request it into 4.1, since it's a DRCSim milestone, and make a design document for integrating an Actuator class into the physics library, perhaps for Gazebo 6. Using a plugin creates a lot of limitations for this concept, but I thought it would be good practice to prototype modularly and a plugin seemed convenient for that.</p>", "type": "rendered"}, "created_on": "2015-01-06T02:03:33.531819+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-01-06T02:04:23.824450+00:00", "type": "issue_comment", "id": 14630027}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/14767867.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-14767867"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": "#!/osrf/gazebo/pull-request/1371/actuator-plugin-torque-speed-curve-for\n\nI targeted default, since it seemed like the safe choice...", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-request/1371/actuator-plugin-torque-speed-curve-for\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-request/1371/actuator-plugin-torque-speed-curve-for</a></p>\n<p>I targeted default, since it seemed like the safe choice...</p>", "type": "rendered"}, "created_on": "2015-01-12T23:26:46.875790+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 14767867}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/16051729.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-16051729"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-03-03T09:23:08.423202+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 16051729}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780/comments/30610775.json"}, "html": {"href": "#!/osrf/gazebo/issues/780#comment-30610775"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/780.json"}}, "type": "issue", "id": 780, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Provide torque-speed curve"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:23:27.800900+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30610775}], "page": 1, "size": 12}