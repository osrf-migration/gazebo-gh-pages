{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1906/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1906.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1906/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1906/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1906/integration_depth_camera-failure-on-osx"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1906/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "INTEGRATION_depth_camera failure on osx", "component": {"name": "sensors", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122877.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The `INTEGRATION_depth_camera` test has been [failing on homebrew](http://build.osrfoundation.org/job/gazebo-ci-default-homebrew-amd64/60/testReport/(root)/INTEGRATION_depth_camera/test_ran/) since it was introduced in pull request #2112. It appears to be failing at [DepthCamera.cc:213](#!/osrf/gazebo/src/774c2e0426b6/gazebo/rendering/DepthCamera.cc#DepthCamera.cc-213) when it calls `Ogre::HardwarePixelBuffer::blitToMemory`.\r\n\r\n~~~\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from DepthCameraSensorTest\r\n[ RUN      ] DepthCameraSensorTest.DepthUnitBox\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 192.168.1.24\r\n[Dbg] [ServerFixture.cc:200] ServerFixture load in 2.5 seconds, timeout after 600 seconds\r\n[Wrn] [msgs.cc:1685] Conversion of sensor type[depth] not suppported.\r\nProcess 43667 stopped\r\n* thread #2: tid = 0x3f42d2, 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49, stop reason = EXC_BAD_ACCESS (code=1, address=0x11917d000)\r\n    frame #0: 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49\r\nlibsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge:\r\n->  0x7fff86abe331 <+49>: rep    \r\n    0x7fff86abe332 <+50>: movsb  (%rsi), %es:(%rdi)\r\n    0x7fff86abe333 <+51>: popq   %rbp\r\n    0x7fff86abe334 <+52>: retq   \r\n(lldb)\r\n~~~\r\n\r\n~~~\r\n(lldb) bt\r\nerror: libboost_thread-mt.a(thread.o) failed to load objfile for /usr/local/lib/libboost_thread-mt.a\r\n* thread #2: tid = 0x3f42d2, 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49, stop reason = EXC_BAD_ACCESS (code=1, address=0x11917d000)\r\n  * frame #0: 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49\r\n    frame #1: 0x00007fff847b7329 libGLImage.dylib`glgCopyRowsWithMemCopy(GLGOperationRec const*, unsigned long, GLDPixelModeRec const*) + 67\r\n    frame #2: 0x00007fff847b59d4 libGLImage.dylib`glgProcessPixelsWithProcessor + 1499\r\n    frame #3: 0x00007fff8f00fe93 GLEngine`glGetTexImage_Exec + 1992\r\n    frame #4: 0x000000010a428d1b libRenderSystem_GL.dylib`Ogre::GLTextureBuffer::download(Ogre::PixelBox const&) + 425\r\n    frame #5: 0x0000000102f29660 libgazebo_rendering.7.dylib`gazebo::rendering::DepthCamera::PostRender(this=0x00000001148d2420) + 1376 at DepthCamera.cc:213\r\n    frame #6: 0x00000001001da477 libgazebo_sensors.7.dylib`gazebo::sensors::DepthCameraSensor::UpdateImpl(this=0x000000011487b030, (null)=<unavailable>) + 55 at DepthCameraSensor.cc:141\r\n    frame #7: 0x00000001002102e3 libgazebo_sensors.7.dylib`gazebo::sensors::Sensor::Update(this=0x000000011487b030, _force=false) + 499 at Sensor.cc:250\r\n    frame #8: 0x000000010021a4e0 libgazebo_sensors.7.dylib`gazebo::sensors::SensorManager::SensorContainer::Update(this=0x00000001073da840, _force=<unavailable>) + 128 at SensorManager.cc:585\r\n    frame #9: 0x0000000100217331 libgazebo_sensors.7.dylib`gazebo::sensors::SensorManager::Update(this=<unavailable>, _force=false) + 1601 at SensorManager.cc:171\r\n    frame #10: 0x000000010011ef58 libgazebo.7.dylib`gazebo::Server::Run(this=0x0000000107048090) + 696 at Server.cc:562\r\n    frame #11: 0x0000000100043d02 INTEGRATION_depth_camera`gazebo::ServerFixture::RunServer(this=<unavailable>, _args=<unavailable>) + 834 at ServerFixture.cc:270\r\n    frame #12: 0x0000000102aae9d5 libOgreMain.1.7.4.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 53\r\n    frame #13: 0x00007fff8153105a libsystem_pthread.dylib`_pthread_body + 131\r\n    frame #14: 0x00007fff81530fd7 libsystem_pthread.dylib`_pthread_start + 176\r\n    frame #15: 0x00007fff8152e3ed libsystem_pthread.dylib`thread_start + 13\r\n(lldb)\r\n~~~", "markup": "markdown", "html": "<p>The <code>INTEGRATION_depth_camera</code> test has been <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-default-homebrew-amd64/60/testReport/(root)/INTEGRATION_depth_camera/test_ran/\" rel=\"nofollow\">failing on homebrew</a> since it was introduced in <a href=\"#!/osrf/gazebo/pull-requests/2112/publish-depth-camera-data-to-a-topic\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2112</a>. It appears to be failing at <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/774c2e0426b6/gazebo/rendering/DepthCamera.cc#DepthCamera.cc-213\" rel=\"nofollow\">DepthCamera.cc:213</a> when it calls <code>Ogre::HardwarePixelBuffer::blitToMemory</code>.</p>\n<div class=\"codehilite\"><pre><span></span>[==========] Running 1 test from 1 test case.\n[----------] Global test environment set-up.\n[----------] 1 test from DepthCameraSensorTest\n[ RUN      ] DepthCameraSensorTest.DepthUnitBox\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 192.168.1.24\n[Dbg] [ServerFixture.cc:200] ServerFixture load in 2.5 seconds, timeout after 600 seconds\n[Wrn] [msgs.cc:1685] Conversion of sensor type[depth] not suppported.\nProcess 43667 stopped\n* thread #2: tid = 0x3f42d2, 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49, stop reason = EXC_BAD_ACCESS (code=1, address=0x11917d000)\n    frame #0: 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49\nlibsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge:\n-&gt;  0x7fff86abe331 &lt;+49&gt;: rep    \n    0x7fff86abe332 &lt;+50&gt;: movsb  (%rsi), %es:(%rdi)\n    0x7fff86abe333 &lt;+51&gt;: popq   %rbp\n    0x7fff86abe334 &lt;+52&gt;: retq   \n(lldb)\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>(lldb) bt\nerror: libboost_thread-mt.a(thread.o) failed to load objfile for /usr/local/lib/libboost_thread-mt.a\n* thread #2: tid = 0x3f42d2, 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49, stop reason = EXC_BAD_ACCESS (code=1, address=0x11917d000)\n  * frame #0: 0x00007fff86abe331 libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge + 49\n    frame #1: 0x00007fff847b7329 libGLImage.dylib`glgCopyRowsWithMemCopy(GLGOperationRec const*, unsigned long, GLDPixelModeRec const*) + 67\n    frame #2: 0x00007fff847b59d4 libGLImage.dylib`glgProcessPixelsWithProcessor + 1499\n    frame #3: 0x00007fff8f00fe93 GLEngine`glGetTexImage_Exec + 1992\n    frame #4: 0x000000010a428d1b libRenderSystem_GL.dylib`Ogre::GLTextureBuffer::download(Ogre::PixelBox const&amp;) + 425\n    frame #5: 0x0000000102f29660 libgazebo_rendering.7.dylib`gazebo::rendering::DepthCamera::PostRender(this=0x00000001148d2420) + 1376 at DepthCamera.cc:213\n    frame #6: 0x00000001001da477 libgazebo_sensors.7.dylib`gazebo::sensors::DepthCameraSensor::UpdateImpl(this=0x000000011487b030, (null)=&lt;unavailable&gt;) + 55 at DepthCameraSensor.cc:141\n    frame #7: 0x00000001002102e3 libgazebo_sensors.7.dylib`gazebo::sensors::Sensor::Update(this=0x000000011487b030, _force=false) + 499 at Sensor.cc:250\n    frame #8: 0x000000010021a4e0 libgazebo_sensors.7.dylib`gazebo::sensors::SensorManager::SensorContainer::Update(this=0x00000001073da840, _force=&lt;unavailable&gt;) + 128 at SensorManager.cc:585\n    frame #9: 0x0000000100217331 libgazebo_sensors.7.dylib`gazebo::sensors::SensorManager::Update(this=&lt;unavailable&gt;, _force=false) + 1601 at SensorManager.cc:171\n    frame #10: 0x000000010011ef58 libgazebo.7.dylib`gazebo::Server::Run(this=0x0000000107048090) + 696 at Server.cc:562\n    frame #11: 0x0000000100043d02 INTEGRATION_depth_camera`gazebo::ServerFixture::RunServer(this=&lt;unavailable&gt;, _args=&lt;unavailable&gt;) + 834 at ServerFixture.cc:270\n    frame #12: 0x0000000102aae9d5 libOgreMain.1.7.4.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 53\n    frame #13: 0x00007fff8153105a libsystem_pthread.dylib`_pthread_body + 131\n    frame #14: 0x00007fff81530fd7 libsystem_pthread.dylib`_pthread_start + 176\n    frame #15: 0x00007fff8152e3ed libsystem_pthread.dylib`thread_start + 13\n(lldb)\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-03-26T07:21:30.566099+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:43.347926+00:00", "type": "issue", "id": 1906}