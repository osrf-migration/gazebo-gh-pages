{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1252/comments/11551376.json"}, "html": {"href": "#!/osrf/gazebo/issues/1252#comment-11551376"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1252.json"}}, "type": "issue", "id": 1252, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Collisions cannot be accessed at ConnectWorldCreated event"}, "content": {"raw": "That's right, this is the error/exception I get when trying to access the WorldPtr.\n\nCode snippet(in Load or Init): ```this->world = physics::get_world(this->worldName); ```\n\nError/Exception:\n```\nGazebo multi-robot simulator, version 4.0.0\nCopyright (C) 2012-2014 Open Source Robotics Foundation.\nReleased under the Apache 2 License.\nhttp://gazebosim.org\n\n[Err] [Exception.cc:52] EXCEPTION: Unable to find world by name in physics::get_world(world_name)\n\n[Msg] Waiting for master.\n[Err] [Connection.cc:516] Connection[0] Closed during Read\n[Err] [ConnectionManager.cc:134] Unable to read from master\n[Err] [gazebo.cc:67] Unable to initialize transport.\n[Err] [gazebo.cc:174] Unable to setup Gazebo\n```\n\n##\nBy waiting for the **ConnectWorldCreated** event I can get access to the world, but no collisions.\n\nWhen I switch the event to **ConnectWorldUpdateBegin**, then I can access everything. Why are the collisions not available at the prev event?\n\nCode snippet from the event callback function:\n```\n#!c++\nstd::cout <<\"world:\"<< this->world->GetName() << std::endl;\nstd::cout <<\"model:\"<< this->world->GetModel(\"my_model\")->GetName() << std::endl;\nstd::cout <<\"link:\"<< this->world->GetModel(\"my_model\")->GetLinks().at(0)->GetName() << std::endl;\nstd::cout <<\"coll:\"<< this->world->GetModel(\"my_model\")->GetLinks().at(0)->GetCollisions().at(0)->GetName() << std::endl;\n```\n", "markup": "markdown", "html": "<p>That's right, this is the error/exception I get when trying to access the WorldPtr.</p>\n<p>Code snippet(in Load or Init): <code>this-&gt;world = physics::get_world(this-&gt;worldName);</code></p>\n<p>Error/Exception:</p>\n<div class=\"codehilite\"><pre><span></span>Gazebo multi-robot simulator, version 4.0.0\nCopyright (C) 2012-2014 Open Source Robotics Foundation.\nReleased under the Apache 2 License.\nhttp://gazebosim.org\n\n[Err] [Exception.cc:52] EXCEPTION: Unable to find world by name in physics::get_world(world_name)\n\n[Msg] Waiting for master.\n[Err] [Connection.cc:516] Connection[0] Closed during Read\n[Err] [ConnectionManager.cc:134] Unable to read from master\n[Err] [gazebo.cc:67] Unable to initialize transport.\n[Err] [gazebo.cc:174] Unable to setup Gazebo\n</pre></div>\n\n\n<h2 id=\"markdown-header-\"></h2>\n<p>By waiting for the <strong>ConnectWorldCreated</strong> event I can get access to the world, but no collisions.</p>\n<p>When I switch the event to <strong>ConnectWorldUpdateBegin</strong>, then I can access everything. Why are the collisions not available at the prev event?</p>\n<p>Code snippet from the event callback function:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span><span class=\"s\">&quot;world:&quot;</span><span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span><span class=\"s\">&quot;model:&quot;</span><span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;my_model&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span><span class=\"s\">&quot;link:&quot;</span><span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;my_model&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLinks</span><span class=\"p\">().</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span><span class=\"s\">&quot;coll:&quot;</span><span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModel</span><span class=\"p\">(</span><span class=\"s\">&quot;my_model&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLinks</span><span class=\"p\">().</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetCollisions</span><span class=\"p\">().</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2014-08-01T08:26:46.740643+00:00", "user": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "updated_on": null, "type": "issue_comment", "id": 11551376}