{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/236/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/236.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/236/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/236/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/236/race-condition-in-time-reset-for-sensors"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/236/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Race condition in time reset for sensors", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Sensors may not be successfully reset by a world_control message. There is a race condition between the Sensor::OnControl and World::OnControl functions since they are in different threads. If Sensor::OnControl executes first, then each sensor's lastUpdateTime will be reset to 0. However, a Sensor::Update may run before World::OnControl executes, which may increase the value of lastUpdateTime to the current sim time.\r\n\r\nBasically, the sensors shouldn't be reset until the World has been reset, and these OnControl callbacks don't guarantee that.", "markup": "markdown", "html": "<p>Sensors may not be successfully reset by a world_control message. There is a race condition between the Sensor::OnControl and World::OnControl functions since they are in different threads. If Sensor::OnControl executes first, then each sensor's lastUpdateTime will be reset to 0. However, a Sensor::Update may run before World::OnControl executes, which may increase the value of lastUpdateTime to the current sim time.</p>\n<p>Basically, the sensors shouldn't be reset until the World has been reset, and these OnControl callbacks don't guarantee that.</p>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "closed", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/49332.json"}}}, "edited_on": null, "created_on": "2012-11-17T09:19:30.656413+00:00", "milestone": null, "updated_on": "2016-09-14T19:45:38.908103+00:00", "type": "issue", "id": 236}