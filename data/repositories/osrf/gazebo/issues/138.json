{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/138/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/138.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/138/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/138/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/138/crossed-ogre-configuration-possible"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/138/vote"}}, "reporter": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "title": "crossed OGRE configuration possible", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In the following situation:\r\n\r\n* libogre-1.7.4 is installed\r\n* gazebo is configured to use ogre from ros-fuerte-visualization-common\r\n\r\nGazebo will build against the ROS ogre correctly, but will generate an incorrect `setup.sh` with a line like this:\r\n\r\n        export OGRE_RESOURCE_PATH=/usr/lib/x86_64-linux-gnu/OGRE-1.7.3:/usr/lib/x86_64-linux-gnu/OGRE:\r\n\r\nIt's because Gazebo is finding ogre's library path by searching certain locations in the filesystem, but finding ogre's build flags via pkg-config.  The two results are then mixed into the bad line.\r\n\r\nAn easy workaround is to not have libogre-1.7.4 installed.", "markup": "markdown", "html": "<p>In the following situation:</p>\n<ul>\n<li>libogre-1.7.4 is installed</li>\n<li>gazebo is configured to use ogre from ros-fuerte-visualization-common</li>\n</ul>\n<p>Gazebo will build against the ROS ogre correctly, but will generate an incorrect <code>setup.sh</code> with a line like this:</p>\n<div class=\"codehilite\"><pre><span></span>    export OGRE_RESOURCE_PATH=/usr/lib/x86_64-linux-gnu/OGRE-1.7.3:/usr/lib/x86_64-linux-gnu/OGRE:\n</pre></div>\n\n\n<p>It's because Gazebo is finding ogre's library path by searching certain locations in the filesystem, but finding ogre's build flags via pkg-config.  The two results are then mixed into the bad line.</p>\n<p>An easy workaround is to not have libogre-1.7.4 installed.</p>", "type": "rendered"}, "assignee": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2012-10-22T18:11:02.033507+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:54.451837+00:00", "type": "issue", "id": 138}