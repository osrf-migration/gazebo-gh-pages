{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/602/comments/13150035.json"}, "html": {"href": "#!/osrf/gazebo/issues/602#comment-13150035"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/602.json"}}, "type": "issue", "id": 602, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Unsubscribing then destroying a Subscriber causes problems"}, "content": {"raw": "I got bit by this bug while implementing gazebojs.\nHere's a backtrace of the problem (version 4.0.0) :\n\n\n```\n#!c++\n\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by `node subscribe.js gazebo.msgs.WorldStatistics ~/world_stats 10'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  gazebo::transport::Node::GetMsgType (this=0x1807c80, _topic=...) at /home/hugo/code/gazebo/gazebo/transport/Node.cc:312\n312\t    return iter->second.front()->GetMsgType();\n(gdb) bt\n#0  gazebo::transport::Node::GetMsgType (this=0x1807c80, _topic=...) at /home/hugo/code/gazebo/gazebo/transport/Node.cc:312\n#1  0x00007f9ecf093a6f in gazebo::transport::TopicManager::Unsubscribe (this=this@entry=0x7f9ecf53f200 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t>, _topic=..., _node=...) at /home/hugo/code/gazebo/gazebo/transport/TopicManager.cc:257\n#2  0x00007f9ecf0917d5 in gazebo::transport::Subscriber::Unsubscribe (this=this@entry=0x1803120) at /home/hugo/code/gazebo/gazebo/transport/Subscriber.cc:52\n#3  0x00007f9ecf09188c in gazebo::transport::Subscriber::~Subscriber (this=0x1803120, __in_chrg=<optimized out>) at /home/hugo/code/gazebo/gazebo/transport/Subscriber.cc:37\n#4  0x00007f9ecf091919 in gazebo::transport::Subscriber::~Subscriber (this=0x1803120, __in_chrg=<optimized out>) at /home/hugo/code/gazebo/gazebo/transport/Subscriber.cc:39\n#5  0x00007f9ecf3075c0 in boost::detail::sp_counted_base::release (this=0x17ba930) at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:144\n#6  0x00007f9ecf30764f in boost::detail::shared_count::~shared_count (this=0x180cc98, __in_chrg=<optimized out>) at /usr/include/boost/smart_ptr/detail/shared_count.hpp:369\n#7  0x00007f9ecf3110e2 in boost::shared_ptr<gazebo::transport::Subscriber>::~shared_ptr (this=0x7f9ecf3110e2 <boost::shared_ptr<gazebo::transport::Subscriber>::~shared_ptr()+4>, __in_chrg=<optimized out>) at /usr/include/boost/smart_ptr/shared_ptr.hpp:328\n#8  0x000000000180cc90 in ?? ()\n#9  0x00007ffff0fea050 in ?? ()\n#10 0x00007f9ecf30e6db in gzscript::GzSubscriber::~GzSubscriber (this=<error reading variable: Cannot access memory at address 0xffffffffffffffe8>, __in_chrg=<optimized out>) at ../GazeboPubSub.cc:112\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\n```\n", "markup": "markdown", "html": "<p>I got bit by this bug while implementing gazebojs.\nHere's a backtrace of the problem (version 4.0.0) :</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">Using</span> <span class=\"n\">host</span> <span class=\"n\">libthread_db</span> <span class=\"n\">library</span> <span class=\"s\">&quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;</span><span class=\"p\">.</span>\n<span class=\"n\">Core</span> <span class=\"n\">was</span> <span class=\"n\">generated</span> <span class=\"n\">by</span> <span class=\"err\">`</span><span class=\"n\">node</span> <span class=\"n\">subscribe</span><span class=\"p\">.</span><span class=\"n\">js</span> <span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"n\">msgs</span><span class=\"p\">.</span><span class=\"n\">WorldStatistics</span> <span class=\"o\">~/</span><span class=\"n\">world_stats</span> <span class=\"mi\">10</span><span class=\"err\">&#39;</span><span class=\"p\">.</span>\n<span class=\"n\">Program</span> <span class=\"n\">terminated</span> <span class=\"n\">with</span> <span class=\"n\">signal</span> <span class=\"n\">SIGSEGV</span><span class=\"p\">,</span> <span class=\"n\">Segmentation</span> <span class=\"n\">fault</span><span class=\"p\">.</span>\n<span class=\"cp\">#0  gazebo::transport::Node::GetMsgType (this=0x1807c80, _topic=...) at /home/hugo/code/gazebo/gazebo/transport/Node.cc:312</span>\n<span class=\"mi\">312</span>     <span class=\"k\">return</span> <span class=\"n\">iter</span><span class=\"o\">-&gt;</span><span class=\"n\">second</span><span class=\"p\">.</span><span class=\"n\">front</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GetMsgType</span><span class=\"p\">();</span>\n<span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"n\">bt</span>\n<span class=\"cp\">#0  gazebo::transport::Node::GetMsgType (this=0x1807c80, _topic=...) at /home/hugo/code/gazebo/gazebo/transport/Node.cc:312</span>\n<span class=\"cp\">#1  0x00007f9ecf093a6f in gazebo::transport::TopicManager::Unsubscribe (this=this@entry=0x7f9ecf53f200 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t&gt;, _topic=..., _node=...) at /home/hugo/code/gazebo/gazebo/transport/TopicManager.cc:257</span>\n<span class=\"cp\">#2  0x00007f9ecf0917d5 in gazebo::transport::Subscriber::Unsubscribe (this=this@entry=0x1803120) at /home/hugo/code/gazebo/gazebo/transport/Subscriber.cc:52</span>\n<span class=\"cp\">#3  0x00007f9ecf09188c in gazebo::transport::Subscriber::~Subscriber (this=0x1803120, __in_chrg=&lt;optimized out&gt;) at /home/hugo/code/gazebo/gazebo/transport/Subscriber.cc:37</span>\n<span class=\"cp\">#4  0x00007f9ecf091919 in gazebo::transport::Subscriber::~Subscriber (this=0x1803120, __in_chrg=&lt;optimized out&gt;) at /home/hugo/code/gazebo/gazebo/transport/Subscriber.cc:39</span>\n<span class=\"cp\">#5  0x00007f9ecf3075c0 in boost::detail::sp_counted_base::release (this=0x17ba930) at /usr/include</span><span class=\"cpf\">/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:144</span><span class=\"cp\"></span>\n<span class=\"cp\">#6  0x00007f9ecf30764f in boost::detail::shared_count::~shared_count (this=0x180cc98, __in_chrg=&lt;optimized out&gt;) at /usr/include</span><span class=\"cpf\">/boost/smart_ptr/detail/shared_count.hpp:369</span><span class=\"cp\"></span>\n<span class=\"cp\">#7  0x00007f9ecf3110e2 in boost::shared_ptr&lt;gazebo::transport::Subscriber&gt;::~shared_ptr (this=0x7f9ecf3110e2 &lt;boost::shared_ptr&lt;gazebo::transport::Subscriber&gt;::~shared_ptr()+4&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include</span><span class=\"cpf\">/boost/smart_ptr/shared_ptr.hpp:328</span><span class=\"cp\"></span>\n<span class=\"cp\">#8  0x000000000180cc90 in ?? ()</span>\n<span class=\"cp\">#9  0x00007ffff0fea050 in ?? ()</span>\n<span class=\"cp\">#10 0x00007f9ecf30e6db in gzscript::GzSubscriber::~GzSubscriber (this=&lt;error reading variable: Cannot access memory at address 0xffffffffffffffe8&gt;, __in_chrg=&lt;optimized out&gt;) at ../GazeboPubSub.cc:112</span>\n<span class=\"n\">Backtrace</span> <span class=\"nl\">stopped</span><span class=\"p\">:</span> <span class=\"n\">previous</span> <span class=\"n\">frame</span> <span class=\"n\">inner</span> <span class=\"n\">to</span> <span class=\"k\">this</span> <span class=\"n\">frame</span> <span class=\"p\">(</span><span class=\"n\">corrupt</span> <span class=\"n\">stack</span><span class=\"o\">?</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2014-10-22T18:33:35.984271+00:00", "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "updated_on": null, "type": "issue_comment", "id": 13150035}