{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/857/comments/15634852.json"}, "html": {"href": "#!/osrf/gazebo/issues/857#comment-15634852"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/857.json"}}, "type": "issue", "id": 857, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Fix Screw Joint in Simbody"}, "content": {"raw": "I tested the code in pull request #1423 (branch `simbody_screw_joint_limit`) by creating branch `issue_857` off of the `joint_set_param` branch and enabling a failing portion of `INTEGRATION_joint_spawn` (a01c0c1). I then merged with this branch (9bc8a22), which allowed the test to progress farther, though it still fails.\n\nI grabbed a [backtrace without the fix](https://gist.github.com/scpeters/7b7b6a917e7d29960d6d), which shows a failure in after calling `SimbodyScrewJoint::SetHighStop` from [Joint::Init (line 306)](#!/osrf/gazebo/src/issue_857/gazebo/physics/Joint.cc#cl-306).\n\nAfter merging with `simbody_screw_joint_limit`, it [still seg-faults](https://gist.github.com/scpeters/dcd2d56cfc5910429a3f), though it makes it all the way through `Joint::Init`, and now fails when calling `SimbodyScrewJoint::GetLowStop` in `Joint::FillMsg`. Specifically, it is having trouble when calling [SimbodyScrewJoint::GetThreadPitch from GetLowStop](#!/osrf/gazebo/src/issue_857/gazebo/physics/simbody/SimbodyScrewJoint.cc#cl-519).", "markup": "markdown", "html": "<p>I tested the code in <a href=\"#!/osrf/gazebo/pull-requests/1423/issue-857-fix-segfault-for-simbody-screw\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1423</a> (branch <code>simbody_screw_joint_limit</code>) by creating branch <code>issue_857</code> off of the <code>joint_set_param</code> branch and enabling a failing portion of <code>INTEGRATION_joint_spawn</code> (<a href=\"#!/osrf/gazebo/commits/a01c0c1\" rel=\"nofollow\" class=\"ap-connect-link\">a01c0c1</a>). I then merged with this branch (<a href=\"#!/osrf/gazebo/commits/9bc8a22\" rel=\"nofollow\" class=\"ap-connect-link\">9bc8a22</a>), which allowed the test to progress farther, though it still fails.</p>\n<p>I grabbed a <a data-is-external-link=\"true\" href=\"https://gist.github.com/scpeters/7b7b6a917e7d29960d6d\" rel=\"nofollow\">backtrace without the fix</a>, which shows a failure in after calling <code>SimbodyScrewJoint::SetHighStop</code> from <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/issue_857/gazebo/physics/Joint.cc#cl-306\" rel=\"nofollow\">Joint::Init (line 306)</a>.</p>\n<p>After merging with <code>simbody_screw_joint_limit</code>, it <a data-is-external-link=\"true\" href=\"https://gist.github.com/scpeters/dcd2d56cfc5910429a3f\" rel=\"nofollow\">still seg-faults</a>, though it makes it all the way through <code>Joint::Init</code>, and now fails when calling <code>SimbodyScrewJoint::GetLowStop</code> in <code>Joint::FillMsg</code>. Specifically, it is having trouble when calling <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/issue_857/gazebo/physics/simbody/SimbodyScrewJoint.cc#cl-519\" rel=\"nofollow\">SimbodyScrewJoint::GetThreadPitch from GetLowStop</a>.</p>", "type": "rendered"}, "created_on": "2015-02-11T22:38:33.291000+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 15634852}