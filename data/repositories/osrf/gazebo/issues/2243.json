{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2243/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2243.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2243/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2243/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2243/types-missing-in-msgs-sensor-sensorfromsdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2243/vote"}}, "reporter": {"display_name": "michele hallak", "uuid": "{f8cca72b-2f8a-4372-bcb5-10ea801a3fe9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf8cca72b-2f8a-4372-bcb5-10ea801a3fe9%7D"}, "html": {"href": "https://bitbucket.org/%7Bf8cca72b-2f8a-4372-bcb5-10ea801a3fe9%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d10108e88396c34c2d474c28bba19974d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "mhallak", "type": "user", "account_id": "557058:643e25c4-f0cd-4e12-8c67-7a038a7e7e40"}, "title": "Types missing in msgs::Sensor SensorFromSDF(sdf::ElementPtr _sdf)", "component": {"name": "sensors", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122877.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The types: gpu_ray and imu are missing.\r\nextract from file msgs.cc\r\n\r\n```\r\n#!c++\r\n\r\nmsgs::Sensor SensorFromSDF(sdf::ElementPtr _sdf)\r\n    {\r\n      msgs::Sensor result;\r\n      std::string type = _sdf->Get<std::string>(\"type\");\r\n      result.set_name(_sdf->Get<std::string>(\"name\"));\r\n      result.set_type(type);\r\n\r\n      if (_sdf->HasElement(\"always_on\"))\r\n        result.set_always_on(_sdf->Get<bool>(\"always_on\"));\r\n\r\n      if (_sdf->HasElement(\"update_rate\"))\r\n        result.set_update_rate(_sdf->Get<double>(\"update_rate\"));\r\n\r\n      if (_sdf->HasElement(\"pose\"))\r\n      {\r\n        msgs::Set(result.mutable_pose(),\r\n            _sdf->Get<ignition::math::Pose3d>(\"pose\"));\r\n      }\r\n\r\n      if (_sdf->HasElement(\"visualize\"))\r\n        result.set_visualize(_sdf->Get<bool>(\"visualize\"));\r\n\r\n      if (_sdf->HasElement(\"topic\"))\r\n        result.set_topic(_sdf->Get<std::string>(\"topic\"));\r\n\r\n      if (type == \"camera\")\r\n      {\r\n        result.mutable_camera()->CopyFrom(\r\n            msgs::CameraSensorFromSDF(_sdf->GetElement(\"camera\")));\r\n      }\r\n      else if (type == \"ray\")\r\n      {\r\n        result.mutable_ray()->CopyFrom(msgs::RaySensorFromSDF(\r\n            _sdf->GetElement(\"ray\")));\r\n      }\r\n      else if (type == \"contact\")\r\n      {\r\n        result.mutable_contact()->CopyFrom(\r\n          msgs::ContactSensorFromSDF(_sdf->GetElement(\"contact\")));\r\n      }\r\n      else\r\n      {\r\n        gzwarn << \"Conversion of sensor type[\" << type << \"] not suppported.\"\r\n          << std::endl;\r\n      }\r\n\r\n      return result;\r\n    }\r\n```", "markup": "markdown", "html": "<p>The types: gpu_ray and imu are missing.\nextract from file msgs.cc</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Sensor</span> <span class=\"n\">SensorFromSDF</span><span class=\"p\">(</span><span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">_sdf</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Sensor</span> <span class=\"n\">result</span><span class=\"p\">;</span>\n      <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;type&quot;</span><span class=\"p\">);</span>\n      <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">set_name</span><span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">));</span>\n      <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">set_type</span><span class=\"p\">(</span><span class=\"n\">type</span><span class=\"p\">);</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;always_on&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">set_always_on</span><span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"kt\">bool</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;always_on&quot;</span><span class=\"p\">));</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;update_rate&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">set_update_rate</span><span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"kt\">double</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;update_rate&quot;</span><span class=\"p\">));</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;pose&quot;</span><span class=\"p\">))</span>\n      <span class=\"p\">{</span>\n        <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">mutable_pose</span><span class=\"p\">(),</span>\n            <span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose3d</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;pose&quot;</span><span class=\"p\">));</span>\n      <span class=\"p\">}</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;visualize&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">set_visualize</span><span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"kt\">bool</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;visualize&quot;</span><span class=\"p\">));</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;topic&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">set_topic</span><span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;topic&quot;</span><span class=\"p\">));</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s\">&quot;camera&quot;</span><span class=\"p\">)</span>\n      <span class=\"p\">{</span>\n        <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">mutable_camera</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">CopyFrom</span><span class=\"p\">(</span>\n            <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">CameraSensorFromSDF</span><span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;camera&quot;</span><span class=\"p\">)));</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s\">&quot;ray&quot;</span><span class=\"p\">)</span>\n      <span class=\"p\">{</span>\n        <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">mutable_ray</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">CopyFrom</span><span class=\"p\">(</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">RaySensorFromSDF</span><span class=\"p\">(</span>\n            <span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;ray&quot;</span><span class=\"p\">)));</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s\">&quot;contact&quot;</span><span class=\"p\">)</span>\n      <span class=\"p\">{</span>\n        <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">mutable_contact</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">CopyFrom</span><span class=\"p\">(</span>\n          <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">ContactSensorFromSDF</span><span class=\"p\">(</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;contact&quot;</span><span class=\"p\">)));</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">else</span>\n      <span class=\"p\">{</span>\n        <span class=\"n\">gzwarn</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Conversion of sensor type[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">type</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;] not suppported.&quot;</span>\n          <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span>\n\n      <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": {"name": "7.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/242744.json"}}}, "edited_on": null, "created_on": "2017-03-29T06:00:14.156629+00:00", "milestone": null, "updated_on": "2017-03-29T16:18:55.482656+00:00", "type": "issue", "id": 2243}