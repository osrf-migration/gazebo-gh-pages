{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/4/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/4/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/4/failed-to-spawn-urdf-model-in-gazebo-if"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/4/vote"}}, "reporter": {"display_name": "DavidB", "uuid": "{2e239220-8a5f-4f90-b040-61baf7c0ef6d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e239220-8a5f-4f90-b040-61baf7c0ef6d%7D"}, "html": {"href": "https://bitbucket.org/%7B2e239220-8a5f-4f90-b040-61baf7c0ef6d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/892e4c27f68ab382c5b16446331896a8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsD-0.png"}}, "nickname": "dbworth", "type": "user", "account_id": "5b19f1484c20165700edf7d8"}, "title": "Failed to spawn URDF model in Gazebo, if first link has no inertia properties", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Hi, is this a bug?\r\n\r\nI've created a urdf.xacro file with a robot model.  This first link is an empty dummy link called \"base_link\":\r\n\r\n{{{\r\n    <link name='base_link'>\r\n    </link>\r\n}}}\r\n\r\n which is connected via a fixed joint to the next link, which has visual/collision/inertial properties.\r\n\r\nWhen I try to spawn this model in Gazebo using the standard launch file syntax from the tutorial, it fails with an error.\r\nBelow is the last part of the console messages:\r\n\r\n{{{\r\nMsg Waiting for master.[ INFO] [1343134213.889006519]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...\r\nMsg Waiting for master\r\nMsg Connected to gazebo master @ http://localhost:11345\r\n\r\nMsg Connected to gazebo master @ http://localhost:11345\r\nwaiting for service spawn_urdf_model\r\ngzserver: /usr/include/boost/smart_ptr/shared_ptr.hpp:418: T* boost::shared_ptr<T>::operator->() const [with T = urdf::Inertial]: Assertion `px != 0' failed.\r\nAborted (core dumped)\r\nService call failed: transport error completing service call: unable to receive data from sender, check sender's logs for details\r\n[empty_world_server-2] process has died [pid 14231, exit code 134, cmd /opt/ros/fuerte/stacks/simulator_gazebo/gazebo/scripts/gazebo /home/username/ros_workspace/hubo/hubo_sim_gazebo/worlds/empty.world __name:=empty_world_server __log:=/home/username/.ros/log/19bf9996-d58e-11e1-b234-5c260a0c5681/empty_world_server-2.log].\r\nlog file: /home/username/.ros/log/19bf9996-d58e-11e1-b234-5c260a0c5681/empty_world_server-2*.log\r\n\r\n}}}\r\n\r\nThe error points to an inertial tag, and a ROS Answers post suggests something similar.\r\nAdding some inertial values to the base_link fixes the problem and Gazebo starts and spawns the model:\r\n\r\n \r\n{{{\r\n\r\n   <link name='base_link'>\r\n        <inertial> <!-- dummy values for fixed link -->\r\n            <mass value=\"10\" />\r\n            <origin xyz=\"0 0 0\"/>\r\n            <inertia ixx=\"1.0\" ixy=\"0\"   ixz=\"0\" iyy=\"1.0\" iyz=\"0\" izz=\"1.0\" />\r\n        </inertial>\r\n    </link>\r\n}}}\r\n\r\nOther child links without inertial properties are just ignored, like they should be:\r\n\r\n{{{\r\n\r\n[ WARN] [1343134922.979297087]: urdf2gazebo: link(Tool_link) has no inertia, parent joint(Tool_fixed_joint) is ignored.\r\n[ WARN] [1343134922.979437714]: urdf2gazebo: link(Tool_link) has no inertia, not modeled in gazebo.\r\n\r\n}}}\r\n\r\nSo is this a bug or a feature?\r\n\r\n", "markup": "markdown", "html": "<p>Hi, is this a bug?</p>\n<p>I've created a urdf.xacro file with a robot model.  This first link is an empty dummy link called \"base_link\":</p>\n<p>{{{\n    &lt;link name='base_link'&gt;\n    &lt;/link&gt;\n}}}</p>\n<p>which is connected via a fixed joint to the next link, which has visual/collision/inertial properties.</p>\n<p>When I try to spawn this model in Gazebo using the standard launch file syntax from the tutorial, it fails with an error.\nBelow is the last part of the console messages:</p>\n<p>{{{\nMsg Waiting for master.[ INFO] [<a href=\"#!/osrf/gazebo/commits/1343134213\" rel=\"nofollow\" class=\"ap-connect-link\">1343134213</a>.<a href=\"#!/osrf/gazebo/commits/889006519\" rel=\"nofollow\" class=\"ap-connect-link\">889006519</a>]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...\nMsg Waiting for master\nMsg Connected to gazebo master @ <a href=\"http://localhost:11345\" rel=\"nofollow\" class=\"ap-connect-link\">http://localhost:11345</a></p>\n<p>Msg Connected to gazebo master @ <a href=\"http://localhost:11345\" rel=\"nofollow\" class=\"ap-connect-link\">http://localhost:11345</a>\nwaiting for service spawn_urdf_model\ngzserver: /usr/include/boost/smart_ptr/shared_ptr.hpp:418: T<em> boost::shared_ptr&lt;T&gt;::operator-&gt;() const [with T = urdf::Inertial]: Assertion `px != 0' failed.\nAborted (core dumped)\nService call failed: transport error completing service call: unable to receive data from sender, check sender's logs for details\n[empty_world_server-2] process has died [pid 14231, exit code 134, cmd /opt/ros/fuerte/stacks/simulator_gazebo/gazebo/scripts/gazebo /home/username/ros_workspace/hubo/hubo_sim_gazebo/worlds/empty.world <strong>name:=empty_world_server </strong>log:=/home/username/.ros/log/19bf9996-d58e-11e1-b234-5c260a0c5681/empty_world_server-2.log].\nlog file: /home/username/.ros/log/19bf9996-d58e-11e1-b234-5c260a0c5681/empty_world_server-2</em>.log</p>\n<p>}}}</p>\n<p>The error points to an inertial tag, and a ROS Answers post suggests something similar.\nAdding some inertial values to the base_link fixes the problem and Gazebo starts and spawns the model:</p>\n<p>{{{</p>\n<p>&lt;link name='base_link'&gt;\n        &lt;inertial&gt; &lt;!-- dummy values for fixed link --&gt;\n            &lt;mass value=\"10\" /&gt;\n            &lt;origin xyz=\"0 0 0\"/&gt;\n            &lt;inertia ixx=\"1.0\" ixy=\"0\"   ixz=\"0\" iyy=\"1.0\" iyz=\"0\" izz=\"1.0\" /&gt;\n        &lt;/inertial&gt;\n    &lt;/link&gt;\n}}}</p>\n<p>Other child links without inertial properties are just ignored, like they should be:</p>\n<p>{{{</p>\n<p>[ WARN] [<a href=\"#!/osrf/gazebo/commits/1343134922\" rel=\"nofollow\" class=\"ap-connect-link\">1343134922</a>.<a href=\"#!/osrf/gazebo/commits/979297087\" rel=\"nofollow\" class=\"ap-connect-link\">979297087</a>]: urdf2gazebo: link(Tool_link) has no inertia, parent joint(Tool_fixed_joint) is ignored.\n[ WARN] [<a href=\"#!/osrf/gazebo/commits/1343134922\" rel=\"nofollow\" class=\"ap-connect-link\">1343134922</a>.<a href=\"#!/osrf/gazebo/commits/979437714\" rel=\"nofollow\" class=\"ap-connect-link\">979437714</a>]: urdf2gazebo: link(Tool_link) has no inertia, not modeled in gazebo.</p>\n<p>}}}</p>\n<p>So is this a bug or a feature?</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2012-07-24T13:05:06.382987+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:30.923002+00:00", "type": "issue", "id": 4}