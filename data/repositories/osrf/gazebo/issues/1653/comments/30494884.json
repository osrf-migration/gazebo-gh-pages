{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1653/comments/30494884.json"}, "html": {"href": "#!/osrf/gazebo/issues/1653#comment-30494884"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1653.json"}}, "type": "issue", "id": 1653, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Large heightmaps causes Gazebo to crash"}, "content": {"raw": "I'm debugging issues with large heightmaps. I haven't observed gazebo crash, and I am able to open `gzserver` without obvious console error messages, but I do start to see problems after opening `gzclient`. Specifically, I see the following message multiple times:\n\n~~~\n[libprotobuf ERROR google/protobuf/io/coded_stream.cc:171]\nA protocol message was rejected because it was too big (more than 67108864 bytes).\nTo increase the limit (or to disable these warnings),\nsee CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.\n~~~\n\nTo see what was triggering this message, I set a breakpoint on `google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError` and observed some backtraces. I observed two cases caused by responses to a `scene_info` request, and an additional case caused by parsing a `heightmap_data` response. Maybe `gzclient` should try to load the heightmaps on its own (via the uri) and only resort to a serialized heightmap request if it can't find a matching file?", "markup": "markdown", "html": "<p>I'm debugging issues with large heightmaps. I haven't observed gazebo crash, and I am able to open <code>gzserver</code> without obvious console error messages, but I do start to see problems after opening <code>gzclient</code>. Specifically, I see the following message multiple times:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[libprotobuf ERROR google/protobuf/io/coded_stream.cc:171]</span>\n<span class=\"na\">A protocol message was rejected because it was too big (more than 67108864 bytes).</span>\n<span class=\"na\">To increase the limit (or to disable these warnings),</span>\n<span class=\"na\">see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.</span>\n</pre></div>\n\n\n<p>To see what was triggering this message, I set a breakpoint on <code>google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError</code> and observed some backtraces. I observed two cases caused by responses to a <code>scene_info</code> request, and an additional case caused by parsing a <code>heightmap_data</code> response. Maybe <code>gzclient</code> should try to load the heightmaps on its own (via the uri) and only resort to a serialized heightmap request if it can't find a matching file?</p>", "type": "rendered"}, "created_on": "2016-09-10T00:28:58.111332+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 30494884}