{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2043/comments/30394911.json"}, "html": {"href": "#!/osrf/gazebo/issues/2043#comment-30394911"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2043.json"}}, "type": "issue", "id": 2043, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Incorrect sdf file on saving with duplicated plugin"}, "content": {"raw": "* That might not be the most intuitive behaviour, but that's how the `<include>` tag works. It expands the links and plugins of the included model into the parent model, and then the \"inclusion\" gets lost. \n\n    A workaround would be to place the include tags inside model tags. You'll still lose the includes, but when the links are expanded, they're kept inside nested models. I checked here that a simple example keeps the plugins in place. Instead of directly including inside the parent model:\n\n        <?xml version='1.0'?>\n        <sdf version=\"1.6\">\n          <model name=\"nested_plugins\">\n            <include>\n              <name>A</name>\n              <uri>model://submarine_buoyant</uri>\n            </include>\n            <include>\n              <name>B</name>\n              <uri>model://submarine_buoyant</uri>\n              <pose>0 -0.01 0.070 1.57 0 1.57</pose>\n            </include>\n          </model>\n        </sdf>\n\n    Wrap the includes in model tags:\n\n        <?xml version='1.0'?>\n        <sdf version=\"1.6\">\n          <model name=\"nested_plugins\">\n            <model name=\"A\">\n              <include>\n                <name>A</name>\n                <uri>model://submarine_buoyant</uri>\n              </include>\n            </model>\n            <model name=\"B\">\n              <include>\n                <name>B</name>\n                <uri>model://submarine_buoyant</uri>\n                <pose>0 -0.01 0.070 1.57 0 1.57</pose>\n              </include>\n            </model>\n          </model>\n        </sdf>\n\n* Yes, it looks like the plugin namespaces for included models are not being properly handled. It sounds related to issue #734, although that looks more like a feature request to override plugin parameters. I would consider the bad namespace handling a bug.\n\n* With the nested models approach above, entity names still get scoped, but plugin parameters seem to be kept intact. I don't think there's a way to revert it now. You could try using nested models without the include tags so you have full control of all names.", "markup": "markdown", "html": "<ul>\n<li>\n<p>That might not be the most intuitive behaviour, but that's how the <code>&lt;include&gt;</code> tag works. It expands the links and plugins of the included model into the parent model, and then the \"inclusion\" gets lost. </p>\n<p>A workaround would be to place the include tags inside model tags. You'll still lose the includes, but when the links are expanded, they're kept inside nested models. I checked here that a simple example keeps the plugins in place. Instead of directly including inside the parent model:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&#39;1.0&#39;?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;nested_plugins&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;name&gt;</span>A<span class=\"nt\">&lt;/name&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://submarine_buoyant<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;name&gt;</span>B<span class=\"nt\">&lt;/name&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://submarine_buoyant<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 -0.01 0.070 1.57 0 1.57<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Wrap the includes in model tags:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&#39;1.0&#39;?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;nested_plugins&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;A&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;include&gt;</span>\n        <span class=\"nt\">&lt;name&gt;</span>A<span class=\"nt\">&lt;/name&gt;</span>\n        <span class=\"nt\">&lt;uri&gt;</span>model://submarine_buoyant<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;B&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;include&gt;</span>\n        <span class=\"nt\">&lt;name&gt;</span>B<span class=\"nt\">&lt;/name&gt;</span>\n        <span class=\"nt\">&lt;uri&gt;</span>model://submarine_buoyant<span class=\"nt\">&lt;/uri&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>0 -0.01 0.070 1.57 0 1.57<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n</li>\n<li>\n<p>Yes, it looks like the plugin namespaces for included models are not being properly handled. It sounds related to issue <a href=\"#!/osrf/gazebo/issues/734/adding-robot_namespace-to-sdf-nested\" rel=\"nofollow\" title=\"Adding robot_namespace to sdf nested models\" class=\"ap-connect-link\">#734</a>, although that looks more like a feature request to override plugin parameters. I would consider the bad namespace handling a bug.</p>\n</li>\n<li>\n<p>With the nested models approach above, entity names still get scoped, but plugin parameters seem to be kept intact. I don't think there's a way to revert it now. You could try using nested models without the include tags so you have full control of all names.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2016-09-06T17:12:33.249695+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 30394911}