{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/3/comments/1760212.json"}, "html": {"href": "#!/osrf/gazebo/issues/3#comment-1760212"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "RaySensor race condition"}, "content": {"raw": "Could someone apply this simple patch? It's really annoying to see those warnings displayed every second.\n \n{{{\n#!c++\n\n*** gazebo/sensors/RaySensor.cc     2012-08-03 22:53:38.888807826 +0200\n--- gazebo/sensors/RaySensor.cc     2012-08-03 22:53:06.384805780 +0200\n***************\n*** 201,206 ****\n--- 201,207 ----\n  //////////////////////////////////////////////////\n  double RaySensor::GetRange(int _index)\n  {\n+   boost::mutex::scoped_lock(*this->mutex);\n    if (this->laserMsg.ranges_size() == 0)\n    {\n      gzwarn << \"ranges not constructed yet (zero sized)\\n\";\n***************\n*** 212,218 ****\n      return 0.0;\n    }\n  \n-   boost::mutex::scoped_lock(*this->mutex);\n    return this->laserMsg.ranges(_index);\n  }\n  \n--- 213,218 ----\n\n}}}", "markup": "creole", "html": "<p>Could someone apply this simple patch? It's really annoying to see those warnings displayed every second.</p>\n<div class=\"codehilite highlight\"><pre><span></span><span class=\"o\">***</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">RaySensor</span><span class=\"p\">.</span><span class=\"n\">cc</span>     <span class=\"mi\">2012</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mo\">03</span> <span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">53</span><span class=\"o\">:</span><span class=\"mf\">38.888807826</span> <span class=\"o\">+</span><span class=\"mo\">0200</span>\n<span class=\"o\">---</span> <span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">RaySensor</span><span class=\"p\">.</span><span class=\"n\">cc</span>     <span class=\"mi\">2012</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mo\">03</span> <span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">53</span><span class=\"o\">:</span><span class=\"mf\">06.384805780</span> <span class=\"o\">+</span><span class=\"mo\">0200</span>\n<span class=\"o\">***************</span>\n<span class=\"o\">***</span> <span class=\"mi\">201</span><span class=\"p\">,</span><span class=\"mi\">206</span> <span class=\"o\">****</span>\n<span class=\"o\">---</span> <span class=\"mi\">201</span><span class=\"p\">,</span><span class=\"mi\">207</span> <span class=\"o\">----</span>\n  <span class=\"c1\">//////////////////////////////////////////////////</span>\n  <span class=\"kt\">double</span> <span class=\"n\">RaySensor</span><span class=\"o\">::</span><span class=\"n\">GetRange</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">_index</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n<span class=\"o\">+</span>   <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">::</span><span class=\"n\">scoped_lock</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">mutex</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">laserMsg</span><span class=\"p\">.</span><span class=\"n\">ranges_size</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">gzwarn</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;ranges not constructed yet (zero sized)</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"o\">***************</span>\n<span class=\"o\">***</span> <span class=\"mi\">212</span><span class=\"p\">,</span><span class=\"mi\">218</span> <span class=\"o\">****</span>\n      <span class=\"k\">return</span> <span class=\"mf\">0.0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  \n<span class=\"o\">-</span>   <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">::</span><span class=\"n\">scoped_lock</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">mutex</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">laserMsg</span><span class=\"p\">.</span><span class=\"n\">ranges</span><span class=\"p\">(</span><span class=\"n\">_index</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  \n<span class=\"o\">---</span> <span class=\"mi\">213</span><span class=\"p\">,</span><span class=\"mi\">218</span> <span class=\"o\">----</span>\n</pre></div>\n\n", "type": "rendered"}, "created_on": "2012-08-03T21:01:42.111324+00:00", "user": {"display_name": "jagielka", "uuid": "{7dafa645-28d9-4717-b25b-1ae0eebf1aaa}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7dafa645-28d9-4717-b25b-1ae0eebf1aaa%7D"}, "html": {"href": "https://bitbucket.org/%7B7dafa645-28d9-4717-b25b-1ae0eebf1aaa%7D/"}, "avatar": {"href": "https://bitbucket.org/account/jagielka/avatar/"}}, "nickname": "jagielka", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 1760212}