{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2129/comments/34516133.json"}, "html": {"href": "#!/osrf/gazebo/issues/2129#comment-34516133"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2129.json"}}, "type": "issue", "id": 2129, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Visual Studio 2015 compatibility"}, "content": {"raw": "I am not actively working on this, so I will post an update status if anyone want to continue on this task. \n\nAll the Gazebo required non-osrf required dependencies are now packaged by [`vcpkg`](https://github.com/Microsoft/vcpkg), it should be sufficient to just run: \n~~~\n./vcpkg install --triplet x64-windows boost cppzmq curl freeimage protobuf ogre qt5 qwt tbb zeromq zlib zziplib\n~~~\nto install them. Pay attention to install `vcpkg` in a directory path not too long, otherwise you will face this problem: https://github.com/Microsoft/vcpkg/issues/426 .\n\nIn particular ogre was packaged in a way that (differently from Ubuntu and OS X) `find_package(OGRE)` will work out of the box [1], without the need of relying on `pkg-config` [2] that in Windows is not reliable. \n\nThe basic idea of using vcpkg is that it would be sufficient to add the installation directory of the `x64-windows` vcpkg to the `CMAKE_PREFIX_PATH`, and then configure the project without the use of any additional configure.bat . Given that `CMAKE_PREFIX_PATH` should also contain all the OSRF dependencies not packaged in vcpkg, and most of them do not ship a relocatable CMake config, I typically work with the gazebo-superbuild available at [3] to automatize the process of downloading and building all the osrf dependencies of Gazebo. \n\nThe last time I worked on this, I was blocked on the porting on `ign-transport` to Visual Studio 2015 . Some fixes that I developed and I did not cleanup for a proper PR are available at [4], but there were also problems caused by the integration tests names. They were too long for the path in which I was working, causing a \"path/filename length limitation of Visual Studio\" error. \n\n[1] https://github.com/Microsoft/vcpkg/blob/effbdfbb91e3672e41cfc442ce0244872b1fad8c/ports/ogre/OGREConfig.cmake\n\n[2] #!/osrf/gazebo/src/870752f17055d99371618f5b2114fa52e47f24e4/cmake/SearchForStuff.cmake?at=default&fileviewer=file-view-default#SearchForStuff.cmake-308\n\n[3] https://github.com/traversaro/gazebo-superbuild\n\n[4] https://bitbucket.org/traversaro/ign-transport/src/c82581bc81246690c39c87f95ab9f8276023025b/?at=vs2015_fixes", "markup": "markdown", "html": "<p>I am not actively working on this, so I will post an update status if anyone want to continue on this task. </p>\n<p>All the Gazebo required non-osrf required dependencies are now packaged by <a data-is-external-link=\"true\" href=\"https://github.com/Microsoft/vcpkg\" rel=\"nofollow\"><code>vcpkg</code></a>, it should be sufficient to just run: </p>\n<div class=\"codehilite\"><pre><span></span>./vcpkg install --triplet x64-windows boost cppzmq curl freeimage protobuf ogre qt5 qwt tbb zeromq zlib zziplib\n</pre></div>\n\n\n<p>to install them. Pay attention to install <code>vcpkg</code> in a directory path not too long, otherwise you will face this problem: <a href=\"https://github.com/Microsoft/vcpkg/issues/426\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/Microsoft/vcpkg/issues/426</a> .</p>\n<p>In particular ogre was packaged in a way that (differently from Ubuntu and OS X) <code>find_package(OGRE)</code> will work out of the box [1], without the need of relying on <code>pkg-config</code> [2] that in Windows is not reliable. </p>\n<p>The basic idea of using vcpkg is that it would be sufficient to add the installation directory of the <code>x64-windows</code> vcpkg to the <code>CMAKE_PREFIX_PATH</code>, and then configure the project without the use of any additional configure.bat . Given that <code>CMAKE_PREFIX_PATH</code> should also contain all the OSRF dependencies not packaged in vcpkg, and most of them do not ship a relocatable CMake config, I typically work with the gazebo-superbuild available at [3] to automatize the process of downloading and building all the osrf dependencies of Gazebo. </p>\n<p>The last time I worked on this, I was blocked on the porting on <code>ign-transport</code> to Visual Studio 2015 . Some fixes that I developed and I did not cleanup for a proper PR are available at [4], but there were also problems caused by the integration tests names. They were too long for the path in which I was working, causing a \"path/filename length limitation of Visual Studio\" error. </p>\n<p>[1] <a href=\"https://github.com/Microsoft/vcpkg/blob/effbdfbb91e3672e41cfc442ce0244872b1fad8c/ports/ogre/OGREConfig.cmake\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/Microsoft/vcpkg/blob/effbdfbb91e3672e41cfc442ce0244872b1fad8c/ports/ogre/OGREConfig.cmake</a></p>\n<p>[2] <a href=\"#!/osrf/gazebo/src/870752f17055d99371618f5b2114fa52e47f24e4/cmake/SearchForStuff.cmake?at=default&amp;fileviewer=file-view-default#SearchForStuff.cmake-308\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/870752f17055d99371618f5b2114fa52e47f24e4/cmake/SearchForStuff.cmake?at=default&amp;fileviewer=file-view-default#SearchForStuff.cmake-308</a></p>\n<p>[3] <a href=\"https://github.com/traversaro/gazebo-superbuild\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/traversaro/gazebo-superbuild</a></p>\n<p>[4] <a href=\"https://bitbucket.org/traversaro/ign-transport/src/c82581bc81246690c39c87f95ab9f8276023025b/?at=vs2015_fixes\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/traversaro/ign-transport/src/c82581bc81246690c39c87f95ab9f8276023025b/?at=vs2015_fixes</a></p>", "type": "rendered"}, "created_on": "2017-02-19T09:09:11.736722+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2017-02-19T09:22:14.667493+00:00", "type": "issue_comment", "id": 34516133}