{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1977/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1977.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1977/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1977/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1977/problems-in-unit_gz_test"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1977/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Problems in UNIT_gz_TEST", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "While debugging a regression of `gzTest.Model` after pull request #2301 was merged, I found some weird issues with other parts of the test.\r\n\r\nFirst of all, all of the tests in this file load [test/worlds/simple_arm_test.world](#!/osrf/gazebo/src/5bcd2fe9e3266e0ab15500e65271a3055d0074bf/test/worlds/simple_arm_test.world?fileviewer=file-view-default), but upon inspection, this world file was not being loaded, and the `simple_arm` model was not present. I believe this is caused by the incorrect use of `execlp`, which should have the `gzserver` argument repeated twice. The following patch causes this world to be loaded, but the test is very broken when this happens.\r\n\r\n~~~\r\ndiff -r 5bcd2fe9e326 tools/gz_TEST.cc\r\n--- a/tools/gz_TEST.cc\tTue Jun 07 16:00:03 2016 -0700\r\n+++ b/tools/gz_TEST.cc\tTue Jun 07 17:50:43 2016 -0700\r\n@@ -97,7 +97,7 @@\r\n   {\r\n     boost::filesystem::path worldFilePath = TEST_PATH;\r\n     worldFilePath = worldFilePath / \"worlds\" / \"simple_arm_test.world\";\r\n-    if (execlp(\"gzserver\", worldFilePath.string().c_str(),\r\n+    if (execlp(\"gzserver\", \"gzserver\", worldFilePath.string().c_str(),\r\n         \"--iters\", \"60000\", NULL) < 0)\r\n     {\r\n       gzerr << \"Failed to start the gazebo server.\\n\";\r\n~~~\r\n\r\nI've also noticed that this test can hang, especially on osx. The following debug statement inside a while loop may be helpful:\r\n\r\n~~~\r\ndiff -r e1e609677d74 tools/gz_TEST.cc\r\n--- a/tools/gz_TEST.cc\tTue Jun 07 13:47:50 2016 -0700\r\n+++ b/tools/gz_TEST.cc\tTue Jun 07 17:45:37 2016 -0700\r\n@@ -77,6 +77,7 @@\r\n   int iters = 0;\r\n   while (!good and iters < 20)\r\n   {\r\n+    gzdbg << \"try \" << iters+1 << \": \" << _cmd << std::endl;\r\n     custom_exec(_cmd);\r\n \r\n     good = g_msgCondition.timed_wait(lock,\r\n~~~", "markup": "markdown", "html": "<p>While debugging a regression of <code>gzTest.Model</code> after <a href=\"#!/osrf/gazebo/pull-requests/2301/server-generates-unique-model-names-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2301</a> was merged, I found some weird issues with other parts of the test.</p>\n<p>First of all, all of the tests in this file load <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/5bcd2fe9e3266e0ab15500e65271a3055d0074bf/test/worlds/simple_arm_test.world?fileviewer=file-view-default\" rel=\"nofollow\">test/worlds/simple_arm_test.world</a>, but upon inspection, this world file was not being loaded, and the <code>simple_arm</code> model was not present. I believe this is caused by the incorrect use of <code>execlp</code>, which should have the <code>gzserver</code> argument repeated twice. The following patch causes this world to be loaded, but the test is very broken when this happens.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 5bcd2fe9e326 tools/gz_TEST.cc</span>\n<span class=\"gd\">--- a/tools/gz_TEST.cc  Tue Jun 07 16:00:03 2016 -0700</span>\n<span class=\"gi\">+++ b/tools/gz_TEST.cc  Tue Jun 07 17:50:43 2016 -0700</span>\n<span class=\"gu\">@@ -97,7 +97,7 @@</span>\n   {\n     boost::filesystem::path worldFilePath = TEST_PATH;\n     worldFilePath = worldFilePath / &quot;worlds&quot; / &quot;simple_arm_test.world&quot;;\n<span class=\"gd\">-    if (execlp(&quot;gzserver&quot;, worldFilePath.string().c_str(),</span>\n<span class=\"gi\">+    if (execlp(&quot;gzserver&quot;, &quot;gzserver&quot;, worldFilePath.string().c_str(),</span>\n         &quot;--iters&quot;, &quot;60000&quot;, NULL) &lt; 0)\n     {\n       gzerr &lt;&lt; &quot;Failed to start the gazebo server.\\n&quot;;\n</pre></div>\n\n\n<p>I've also noticed that this test can hang, especially on osx. The following debug statement inside a while loop may be helpful:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r e1e609677d74 tools/gz_TEST.cc</span>\n<span class=\"gd\">--- a/tools/gz_TEST.cc  Tue Jun 07 13:47:50 2016 -0700</span>\n<span class=\"gi\">+++ b/tools/gz_TEST.cc  Tue Jun 07 17:45:37 2016 -0700</span>\n<span class=\"gu\">@@ -77,6 +77,7 @@</span>\n   int iters = 0;\n   while (!good and iters &lt; 20)\n   {\n<span class=\"gi\">+    gzdbg &lt;&lt; &quot;try &quot; &lt;&lt; iters+1 &lt;&lt; &quot;: &quot; &lt;&lt; _cmd &lt;&lt; std::endl;</span>\n     custom_exec(_cmd);\n\n     good = g_msgCondition.timed_wait(lock,\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "state": "resolved", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-06-08T00:52:07.575932+00:00", "milestone": null, "updated_on": "2016-10-12T00:55:16.641147+00:00", "type": "issue", "id": 1977}