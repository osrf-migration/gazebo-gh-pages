{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1745/comments/21969512.json"}, "html": {"href": "#!/osrf/gazebo/issues/1745#comment-21969512"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1745.json"}}, "type": "issue", "id": 1745, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "URDF links without geometry cause spurious contacts."}, "content": {"raw": "In the [tracker_chassis.gazebo.xacro.xml](https://github.com/tu-darmstadt-ros-pkg/taurob_tracker_common/blob/master/taurob_tracker_description/urdf/tracker_chassis.gazebo.xacro.xml#L64) file. I added added the option to switch between two modes of locomotion yesterday as described [here](https://github.com/tu-darmstadt-ros-pkg/taurob_tracker_common/blob/master/taurob_tracker_description/urdf/tracker_chassis.gazebo.xacro.xml#L4) and thus set friction properties inside the macros in case different ones are needed between approaches.\n\nNote that the problem disappeared for my use case after setting the friction properties also for the base_link as a workaround, but it can be expected that the observed behavior can cause hard to debug problems for others in the future. What I haven't tested yet is if the base_link friction params always override the chassis_link settings.", "markup": "markdown", "html": "<p>In the <a data-is-external-link=\"true\" href=\"https://github.com/tu-darmstadt-ros-pkg/taurob_tracker_common/blob/master/taurob_tracker_description/urdf/tracker_chassis.gazebo.xacro.xml#L64\" rel=\"nofollow\">tracker_chassis.gazebo.xacro.xml</a> file. I added added the option to switch between two modes of locomotion yesterday as described <a data-is-external-link=\"true\" href=\"https://github.com/tu-darmstadt-ros-pkg/taurob_tracker_common/blob/master/taurob_tracker_description/urdf/tracker_chassis.gazebo.xacro.xml#L4\" rel=\"nofollow\">here</a> and thus set friction properties inside the macros in case different ones are needed between approaches.</p>\n<p>Note that the problem disappeared for my use case after setting the friction properties also for the base_link as a workaround, but it can be expected that the observed behavior can cause hard to debug problems for others in the future. What I haven't tested yet is if the base_link friction params always override the chassis_link settings.</p>", "type": "rendered"}, "created_on": "2015-09-23T07:00:59.820884+00:00", "user": {"display_name": "Stefan Kohlbrecher", "uuid": "{db06b03e-7b31-4483-9018-534df5bd723f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb06b03e-7b31-4483-9018-534df5bd723f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/414f1c364e6406dde31a6ef70fbd3d21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSK-6.png"}}, "nickname": "Stefan_Kohlbrecher", "type": "user", "account_id": "557058:e39b6a62-9eb0-45ca-b27e-4f6445009d3f"}, "updated_on": null, "type": "issue_comment", "id": 21969512}