{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2605/comments/50993893.json"}, "html": {"href": "#!/osrf/gazebo/issues/2605#comment-50993893"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2605.json"}}, "type": "issue", "id": 2605, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Kinematic loops in dart not working with dart 6.7"}, "content": {"raw": "The root cause of this issue is that [`World::setConstraintSolver()` only register skeletons but doesn't transfer the dynamic joint constraints](https://github.com/dartsim/dart/blob/master/dart/simulation/World.cpp#L532-L545) (e.g., kinematic loop constraint), which is a bug. Let me fix this on DART side.\n\nIn the meantime, a quick fix without changing DART code would be changing the boxed LCP solver without creating a new constraint solver something like:\n```cpp\nauto solver = this->dataPtr->dtWorld->getConstraintSolver();\nif (auto boxedLCPSolver = std::dynamic_pointer_cast<dart::constraint::BoxedLcpConstraintSolver>(solver))\n{\n  boxedLCPSolver->setBoxedLcpSolver(\n    std::make_shared<dart::constraint::DantzigBoxedLcpSolver>()));\n}\n```", "markup": "markdown", "html": "<p>The root cause of this issue is that <a data-is-external-link=\"true\" href=\"https://github.com/dartsim/dart/blob/master/dart/simulation/World.cpp#L532-L545\" rel=\"nofollow\"><code>World::setConstraintSolver()</code> only register skeletons but doesn't transfer the dynamic joint constraints</a> (e.g., kinematic loop constraint), which is a bug. Let me fix this on DART side.</p>\n<p>In the meantime, a quick fix without changing DART code would be changing the boxed LCP solver without creating a new constraint solver something like:</p>\n<div class=\"codehilite language-cpp\"><pre><span></span><span class=\"k\">auto</span> <span class=\"n\">solver</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">dtWorld</span><span class=\"o\">-&gt;</span><span class=\"n\">getConstraintSolver</span><span class=\"p\">();</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">auto</span> <span class=\"n\">boxedLCPSolver</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">dynamic_pointer_cast</span><span class=\"o\">&lt;</span><span class=\"n\">dart</span><span class=\"o\">::</span><span class=\"n\">constraint</span><span class=\"o\">::</span><span class=\"n\">BoxedLcpConstraintSolver</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">solver</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">boxedLCPSolver</span><span class=\"o\">-&gt;</span><span class=\"n\">setBoxedLcpSolver</span><span class=\"p\">(</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_shared</span><span class=\"o\">&lt;</span><span class=\"n\">dart</span><span class=\"o\">::</span><span class=\"n\">constraint</span><span class=\"o\">::</span><span class=\"n\">DantzigBoxedLcpSolver</span><span class=\"o\">&gt;</span><span class=\"p\">()));</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-03-11T09:39:22.696915+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": "2019-03-11T09:39:46.096186+00:00", "type": "issue_comment", "id": 50993893}