{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270/comments/36646930.json"}, "html": {"href": "#!/osrf/gazebo/issues/2270#comment-36646930"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270.json"}}, "type": "issue", "id": 2270, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Errors of time stamp got by getsimtime() function"}, "content": {"raw": "code block", "markup": "markdown", "html": "<p>code block</p>", "type": "rendered"}, "created_on": "2017-05-08T14:23:00.373486+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 36646930}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270/comments/36646985.json"}, "html": {"href": "#!/osrf/gazebo/issues/2270#comment-36646985"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270.json"}}, "type": "issue", "id": 2270, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Errors of time stamp got by getsimtime() function"}, "content": {"raw": "Is this from a plugin? Would you mind posting some example code that reproduces the issue?", "markup": "markdown", "html": "<p>Is this from a plugin? Would you mind posting some example code that reproduces the issue?</p>", "type": "rendered"}, "created_on": "2017-05-08T14:24:46.403802+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 36646985}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270/comments/36649292.json"}, "html": {"href": "#!/osrf/gazebo/issues/2270#comment-36649292"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270.json"}}, "type": "issue", "id": 2270, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Errors of time stamp got by getsimtime() function"}, "content": {"raw": "Yes.  Of course not.\n\n\n```\n#!c++\n  mavlink_hil_gps_t hil_gps_msg_;\n  common::Time current_time  = world_->GetSimTime();\n  math::Pose T_W_I = model_->GetWorldPose(); \n  math::Vector3 pos_W_I = T_W_I.pos;  \n  \n  math::Vector3 velocity_current_W = model_->GetWorldLinearVel();  \n\n  math::Vector3 velocity_current_W_xy = velocity_current_W;\n  velocity_current_W_xy.z = 0;\n\n  // reproject local position to gps coordinates\n  double x_rad = pos_W_I.y / earth_radius;\n  double y_rad = pos_W_I.x / earth_radius;\n  double c = sqrt(x_rad * x_rad + y_rad * y_rad);\n  double sin_c = sin(c);\n  double cos_c = cos(c);\n  if (c != 0.0) {\n    lat_rad = asin(cos_c * sin(lat_zurich) + (x_rad * sin_c * cos(lat_zurich)) / c);\n    lon_rad = (lon_zurich + atan2(y_rad * sin_c, c * cos(lat_zurich) * cos_c - x_rad * sin(lat_zurich) * sin_c));\n  } else {\n   lat_rad = lat_zurich;\n    lon_rad = lon_zurich;\n  }\n  \n  if(current_time.Double() - last_gps_time_.Double() > gps_update_interval_)\n  {  // 5Hz\n\n      hil_gps_msg_.time_usec = current_time.nsec*1000;\n      hil_gps_msg_.fix_type = 3;\n      hil_gps_msg_.lat = lat_rad * 180 / M_PI * 1e7;\n      hil_gps_msg_.lon = lon_rad * 180 / M_PI * 1e7;\n      hil_gps_msg_.alt = (pos_W_I.z + alt_zurich) * 1000;\n      hil_gps_msg_.eph = 100;\n      hil_gps_msg_.epv = 100;\n      hil_gps_msg_.vel = velocity_current_W_xy.GetLength() * 100;\n      hil_gps_msg_.vn = velocity_current_W.x * 100;\n      hil_gps_msg_.ve = -velocity_current_W.y * 100;\n      hil_gps_msg_.vd = -velocity_current_W.z * 100;\n      hil_gps_msg_.cog = atan2(hil_gps_msg_.ve, hil_gps_msg_.vn) * 180.0/3.1416 * 100.0;\n      hil_gps_msg_.satellites_visible = 10;\n}\n```\nThis is part of the code, and the time stamp I printed out before comes from the \n```\n#!c++\n\nhil_gps_msg.time_usec\n```\n.\n Hoping it has the meaningful information.\n[Link Text](Link URL)https://github.com/yajingwang94/fw_sim\n\nThe complete code is the gazebo_mavlink_interface.cpp of the linked package.", "markup": "markdown", "html": "<p>Yes.  Of course not.</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"n\">mavlink_hil_gps_t</span> <span class=\"n\">hil_gps_msg_</span><span class=\"p\">;</span>\n  <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Time</span> <span class=\"n\">current_time</span>  <span class=\"o\">=</span> <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSimTime</span><span class=\"p\">();</span>\n  <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Pose</span> <span class=\"n\">T_W_I</span> <span class=\"o\">=</span> <span class=\"n\">model_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetWorldPose</span><span class=\"p\">();</span> \n  <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"n\">pos_W_I</span> <span class=\"o\">=</span> <span class=\"n\">T_W_I</span><span class=\"p\">.</span><span class=\"n\">pos</span><span class=\"p\">;</span>  \n\n  <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"n\">velocity_current_W</span> <span class=\"o\">=</span> <span class=\"n\">model_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetWorldLinearVel</span><span class=\"p\">();</span>  \n\n  <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"n\">velocity_current_W_xy</span> <span class=\"o\">=</span> <span class=\"n\">velocity_current_W</span><span class=\"p\">;</span>\n  <span class=\"n\">velocity_current_W_xy</span><span class=\"p\">.</span><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"c1\">// reproject local position to gps coordinates</span>\n  <span class=\"kt\">double</span> <span class=\"n\">x_rad</span> <span class=\"o\">=</span> <span class=\"n\">pos_W_I</span><span class=\"p\">.</span><span class=\"n\">y</span> <span class=\"o\">/</span> <span class=\"n\">earth_radius</span><span class=\"p\">;</span>\n  <span class=\"kt\">double</span> <span class=\"n\">y_rad</span> <span class=\"o\">=</span> <span class=\"n\">pos_W_I</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"o\">/</span> <span class=\"n\">earth_radius</span><span class=\"p\">;</span>\n  <span class=\"kt\">double</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">x_rad</span> <span class=\"o\">*</span> <span class=\"n\">x_rad</span> <span class=\"o\">+</span> <span class=\"n\">y_rad</span> <span class=\"o\">*</span> <span class=\"n\">y_rad</span><span class=\"p\">);</span>\n  <span class=\"kt\">double</span> <span class=\"n\">sin_c</span> <span class=\"o\">=</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">);</span>\n  <span class=\"kt\">double</span> <span class=\"n\">cos_c</span> <span class=\"o\">=</span> <span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">!=</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">lat_rad</span> <span class=\"o\">=</span> <span class=\"n\">asin</span><span class=\"p\">(</span><span class=\"n\">cos_c</span> <span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">lat_zurich</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">x_rad</span> <span class=\"o\">*</span> <span class=\"n\">sin_c</span> <span class=\"o\">*</span> <span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">lat_zurich</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"n\">c</span><span class=\"p\">);</span>\n    <span class=\"n\">lon_rad</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">lon_zurich</span> <span class=\"o\">+</span> <span class=\"n\">atan2</span><span class=\"p\">(</span><span class=\"n\">y_rad</span> <span class=\"o\">*</span> <span class=\"n\">sin_c</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">*</span> <span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">lat_zurich</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">cos_c</span> <span class=\"o\">-</span> <span class=\"n\">x_rad</span> <span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">lat_zurich</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">sin_c</span><span class=\"p\">));</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n   <span class=\"n\">lat_rad</span> <span class=\"o\">=</span> <span class=\"n\">lat_zurich</span><span class=\"p\">;</span>\n    <span class=\"n\">lon_rad</span> <span class=\"o\">=</span> <span class=\"n\">lon_zurich</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">current_time</span><span class=\"p\">.</span><span class=\"n\">Double</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">last_gps_time_</span><span class=\"p\">.</span><span class=\"n\">Double</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">gps_update_interval_</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>  <span class=\"c1\">// 5Hz</span>\n\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">time_usec</span> <span class=\"o\">=</span> <span class=\"n\">current_time</span><span class=\"p\">.</span><span class=\"n\">nsec</span><span class=\"o\">*</span><span class=\"mi\">1000</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">fix_type</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"n\">lat_rad</span> <span class=\"o\">*</span> <span class=\"mi\">180</span> <span class=\"o\">/</span> <span class=\"n\">M_PI</span> <span class=\"o\">*</span> <span class=\"mf\">1e7</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"n\">lon_rad</span> <span class=\"o\">*</span> <span class=\"mi\">180</span> <span class=\"o\">/</span> <span class=\"n\">M_PI</span> <span class=\"o\">*</span> <span class=\"mf\">1e7</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">alt</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">pos_W_I</span><span class=\"p\">.</span><span class=\"n\">z</span> <span class=\"o\">+</span> <span class=\"n\">alt_zurich</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">eph</span> <span class=\"o\">=</span> <span class=\"mi\">100</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">epv</span> <span class=\"o\">=</span> <span class=\"mi\">100</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">vel</span> <span class=\"o\">=</span> <span class=\"n\">velocity_current_W_xy</span><span class=\"p\">.</span><span class=\"n\">GetLength</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">vn</span> <span class=\"o\">=</span> <span class=\"n\">velocity_current_W</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">ve</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">velocity_current_W</span><span class=\"p\">.</span><span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">vd</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">velocity_current_W</span><span class=\"p\">.</span><span class=\"n\">z</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">cog</span> <span class=\"o\">=</span> <span class=\"n\">atan2</span><span class=\"p\">(</span><span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">ve</span><span class=\"p\">,</span> <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">vn</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">180.0</span><span class=\"o\">/</span><span class=\"mf\">3.1416</span> <span class=\"o\">*</span> <span class=\"mf\">100.0</span><span class=\"p\">;</span>\n      <span class=\"n\">hil_gps_msg_</span><span class=\"p\">.</span><span class=\"n\">satellites_visible</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>This is part of the code, and the time stamp I printed out before comes from the </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">hil_gps_msg</span><span class=\"p\">.</span><span class=\"n\">time_usec</span>\n</pre></div>\n\n\n<p>.\n Hoping it has the meaningful information.\n<a data-is-external-link=\"true\" href=\"/osrf/gazebo/src/cde54284e90b59a9af9fade096946c0cd4a91c44/Link%20URL\" rel=\"nofollow\">Link Text</a><a href=\"https://github.com/yajingwang94/fw_sim\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/yajingwang94/fw_sim</a></p>\n<p>The complete code is the gazebo_mavlink_interface.cpp of the linked package.</p>", "type": "rendered"}, "created_on": "2017-05-08T15:54:29.886745+00:00", "user": {"display_name": "YajingWang", "uuid": "{8b15585f-9859-485b-be82-03fe20b2fc4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8b15585f-9859-485b-be82-03fe20b2fc4a%7D"}, "html": {"href": "https://bitbucket.org/%7B8b15585f-9859-485b-be82-03fe20b2fc4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/709e3d2174193ab8f09405b52373bdbdd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsY-2.png"}}, "nickname": "Yajing_Wang", "type": "user", "account_id": "557058:70fe4608-6722-4c16-9bff-6e9963727430"}, "updated_on": "2017-05-08T15:59:53.475994+00:00", "type": "issue_comment", "id": 36649292}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270/comments/36649451.json"}, "html": {"href": "#!/osrf/gazebo/issues/2270#comment-36649451"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270.json"}}, "type": "issue", "id": 2270, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Errors of time stamp got by getsimtime() function"}, "content": {"raw": "Looks like just `nsec` is being read. I believe the time object uses the attributes `sec` and `nsec` together. Does it print the correct time after changing the code to this?\n\n```\nhil_gps_msg_.time_usec = current_time.sec * 1e-6 + current_time.nsec*1000;\n```", "markup": "markdown", "html": "<p>Looks like just <code>nsec</code> is being read. I believe the time object uses the attributes <code>sec</code> and <code>nsec</code> together. Does it print the correct time after changing the code to this?</p>\n<div class=\"codehilite\"><pre><span></span>hil_gps_msg_.time_usec = current_time.sec * 1e-6 + current_time.nsec*1000;\n</pre></div>", "type": "rendered"}, "created_on": "2017-05-08T16:00:38.563387+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 36649451}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270/comments/36658435.json"}, "html": {"href": "#!/osrf/gazebo/issues/2270#comment-36658435"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270.json"}}, "type": "issue", "id": 2270, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Errors of time stamp got by getsimtime() function"}, "content": {"raw": "Yes, you are right. I change the code in the way you suggested and it printed the correct time. \n\nThank you very much.", "markup": "markdown", "html": "<p>Yes, you are right. I change the code in the way you suggested and it printed the correct time. </p>\n<p>Thank you very much.</p>", "type": "rendered"}, "created_on": "2017-05-09T02:25:52.666853+00:00", "user": {"display_name": "YajingWang", "uuid": "{8b15585f-9859-485b-be82-03fe20b2fc4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8b15585f-9859-485b-be82-03fe20b2fc4a%7D"}, "html": {"href": "https://bitbucket.org/%7B8b15585f-9859-485b-be82-03fe20b2fc4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/709e3d2174193ab8f09405b52373bdbdd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsY-2.png"}}, "nickname": "Yajing_Wang", "type": "user", "account_id": "557058:70fe4608-6722-4c16-9bff-6e9963727430"}, "updated_on": null, "type": "issue_comment", "id": 36658435}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270/comments/36658672.json"}, "html": {"href": "#!/osrf/gazebo/issues/2270#comment-36658672"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2270.json"}}, "type": "issue", "id": 2270, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Errors of time stamp got by getsimtime() function"}, "content": {"raw": "Misunderstanding resolved.", "markup": "markdown", "html": "<p>Misunderstanding resolved.</p>", "type": "rendered"}, "created_on": "2017-05-09T02:52:46.850854+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 36658672}], "page": 1, "size": 6}