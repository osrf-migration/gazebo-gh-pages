{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1267/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1267.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1267/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1267/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1267/sensormanager-deadlock"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1267/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "SensorManager Deadlock", "component": null, "votes": 0, "watches": 1, "content": {"raw": "this was from launching [grasp_exp.launch](https://bitbucket.org/osrf/drcsim/src/77a9fe36653fb5d8b5aac2b35456e2b515365f94/drcsim_gazebo/launch/grasp_exp.launch?at=grasp_exp_john) followed by running [grasp.bassh](https://bitbucket.org/osrf/drcsim/src/77a9fe36653fb5d8b5aac2b35456e2b515365f94/grasp.bash?at=grasp_exp_john).\r\n\r\n~~~\r\nThread 25 (Thread 0x7f742cbf5700 (LWP 9627)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\r\n#1  0x00007f74b2ae0370 in boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) ()\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:53\r\n#2  0x00007f74b2add750 in gazebo::sensors::SensorManager::SensorContainer::RunLoop() ()\r\n    at /home/hsu/projects/gazebo_asme_2014/gazebo/sensors/SensorManager.cc:457\r\n#3  0x00007f74b2ae51af in boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>::operator()(gazebo::sensors::SensorManager::SensorContainer*) const () at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n#4  0x00007f74b2ae5112 in void boost::_bi::list1<boost::_bi::value<gazebo::sensors::SensorManager::SensorContainer*> >::operator()<boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>&, boost::_bi::list0&, int) ()\r\n    at /usr/include/boost/bind/bind.hpp:253\r\n#5  0x00007f74b2ae50b7 in boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>, boost::_bi::list1<boost::_bi::value<gazebo::sensors::SensorManager::SensorContainer*> > >::operator()() ()\r\n    at /usr/include/boost/bind/bind_template.hpp:20\r\n#6  0x00007f74b2ae507c in boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>, boost::_bi::list1<boost::_bi::value<gazebo::sensors::SensorManager::SensorContainer*> > > >::run() () at /usr/include/boost/thread/detail/thread.hpp:61\r\n#7  0x00007f74b154fce9 in thread_proxy () from /usr/lib/libboost_thread.so.1.46.1\r\n#8  0x00007f74b2399e9a in start_thread (arg=0x7f742cbf5700) at pthread_create.c:308\r\n#9  0x00007f74b08f43fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\r\n#10 0x0000000000000000 in ?? ()\r\n\r\nThread 24 (Thread 0x7f73fbfff700 (LWP 9629)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\r\n#1  0x00007f74b2ae0370 in boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) ()\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:53\r\n#2  0x00007f74b2addb96 in gazebo::sensors::SensorManager::SensorContainer::RunLoop() ()\r\n    at /home/hsu/projects/gazebo_asme_2014/gazebo/sensors/SensorManager.cc:521\r\n#3  0x00007f74b2ae51af in boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>::operator()(gazebo::sensors::SensorManager::SensorContainer*) const () at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n#4  0x00007f74b2ae5112 in void boost::_bi::list1<boost::_bi::value<gazebo::sensors::SensorManager::SensorContainer*> >::operator()<boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>&, boost::_bi::list0&, int) ()\r\n    at /usr/include/boost/bind/bind.hpp:253\r\n#5  0x00007f74b2ae50b7 in boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>, boost::_bi::list1<boost::_bi::value<gazebo::sensors::SensorManager::SensorContainer*> > >::operator()() ()\r\n    at /usr/include/boost/bind/bind_template.hpp:20\r\n#6  0x00007f74b2ae507c in boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, gazebo::sensors::SensorManager::SensorContainer>, boost::_bi::list1<boost::_bi::value<gazebo::sensors::SensorManager::SensorContainer*> > > >::run() () at /usr/include/boost/thread/detail/thread.hpp:61\r\n#7  0x00007f74b154fce9 in thread_proxy () from /usr/lib/libboost_thread.so.1.46.1\r\n#8  0x00007f74b2399e9a in start_thread (arg=0x7f73fbfff700) at pthread_create.c:308\r\n#9  0x00007f74b08f43fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\r\n#10 0x0000000000000000 in ?? ()\r\n~~~", "markup": "markdown", "html": "<p>this was from launching <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/drcsim/src/77a9fe36653fb5d8b5aac2b35456e2b515365f94/drcsim_gazebo/launch/grasp_exp.launch?at=grasp_exp_john\" rel=\"nofollow\">grasp_exp.launch</a> followed by running <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/drcsim/src/77a9fe36653fb5d8b5aac2b35456e2b515365f94/grasp.bash?at=grasp_exp_john\" rel=\"nofollow\">grasp.bassh</a>.</p>\n<div class=\"codehilite\"><pre><span></span>Thread 25 (Thread 0x7f742cbf5700 (LWP 9627)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x00007f74b2ae0370 in boost::condition_variable::wait(boost::unique_lock&lt;boost::mutex&gt;&amp;) ()\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:53\n#2  0x00007f74b2add750 in gazebo::sensors::SensorManager::SensorContainer::RunLoop() ()\n    at /home/hsu/projects/gazebo_asme_2014/gazebo/sensors/SensorManager.cc:457\n#3  0x00007f74b2ae51af in boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;::operator()(gazebo::sensors::SensorManager::SensorContainer*) const () at /usr/include/boost/bind/mem_fn_template.hpp:49\n#4  0x00007f74b2ae5112 in void boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list0&gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;&amp;, boost::_bi::list0&amp;, int) ()\n    at /usr/include/boost/bind/bind.hpp:253\n#5  0x00007f74b2ae50b7 in boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt; &gt;::operator()() ()\n    at /usr/include/boost/bind/bind_template.hpp:20\n#6  0x00007f74b2ae507c in boost::detail::thread_data&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt; &gt; &gt;::run() () at /usr/include/boost/thread/detail/thread.hpp:61\n#7  0x00007f74b154fce9 in thread_proxy () from /usr/lib/libboost_thread.so.1.46.1\n#8  0x00007f74b2399e9a in start_thread (arg=0x7f742cbf5700) at pthread_create.c:308\n#9  0x00007f74b08f43fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#10 0x0000000000000000 in ?? ()\n\nThread 24 (Thread 0x7f73fbfff700 (LWP 9629)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x00007f74b2ae0370 in boost::condition_variable::wait(boost::unique_lock&lt;boost::mutex&gt;&amp;) ()\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:53\n#2  0x00007f74b2addb96 in gazebo::sensors::SensorManager::SensorContainer::RunLoop() ()\n    at /home/hsu/projects/gazebo_asme_2014/gazebo/sensors/SensorManager.cc:521\n#3  0x00007f74b2ae51af in boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;::operator()(gazebo::sensors::SensorManager::SensorContainer*) const () at /usr/include/boost/bind/mem_fn_template.hpp:49\n#4  0x00007f74b2ae5112 in void boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list0&gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;&amp;, boost::_bi::list0&amp;, int) ()\n    at /usr/include/boost/bind/bind.hpp:253\n#5  0x00007f74b2ae50b7 in boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt; &gt;::operator()() ()\n    at /usr/include/boost/bind/bind_template.hpp:20\n#6  0x00007f74b2ae507c in boost::detail::thread_data&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt; &gt; &gt;::run() () at /usr/include/boost/thread/detail/thread.hpp:61\n#7  0x00007f74b154fce9 in thread_proxy () from /usr/lib/libboost_thread.so.1.46.1\n#8  0x00007f74b2399e9a in start_thread (arg=0x7f73fbfff700) at pthread_create.c:308\n#9  0x00007f74b08f43fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#10 0x0000000000000000 in ?? ()\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2014-08-15T23:55:14.058018+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:30.548850+00:00", "type": "issue", "id": 1267}