{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480/comments/16050071.json"}, "html": {"href": "#!/osrf/gazebo/issues/1480#comment-16050071"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480.json"}}, "type": "issue", "id": 1480, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "UNIT_Exception_TEST failure on OS X"}, "content": {"raw": "It's giving an error about doing \"death tests\" in threaded contexts, saying that there are two threads. I grabbed a backtrace; it looks like the other thread is the ModelDatabase cache updater:\n~~~\n(lldb) thread backtrace all\n* thread #1: tid = 0xec6f2, 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1\n  * frame #0: 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79\n    frame #1: 0x0000000100034144 UNIT_Exception_TEST`void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(object=<unavailable>, location=0x000000010004210b, method=<unavailable>)(), char const*) + 148 at gtest.cc:2079\n    frame #2: 0x000000010001f20a UNIT_Exception_TEST`testing::Test::Run(this=0x0000000104340190) + 298 at gtest.cc:2151\n    frame #3: 0x000000010001ff02 UNIT_Exception_TEST`testing::TestInfo::Run(this=0x00000001043400a0) + 370 at gtest.cc:2327\n    frame #4: 0x00000001000205e0 UNIT_Exception_TEST`testing::TestCase::Run(this=0x000000010433fcc0) + 416 at gtest.cc:2445\n    frame #5: 0x0000000100027b67 UNIT_Exception_TEST`testing::internal::UnitTestImpl::RunAllTests(this=0x000000010433fa90) + 919 at gtest.cc:4316\n    frame #6: 0x0000000100034844 UNIT_Exception_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=<unavailable>, location=0x0000000100042786, method=<unavailable>)(), char const*) + 148 at gtest.cc:2079\n    frame #7: 0x000000010002777e UNIT_Exception_TEST`testing::UnitTest::Run(this=0x0000000100048130) + 174 at gtest.cc:3927\n    frame #8: 0x00000001000131f1 UNIT_Exception_TEST`main [inlined] RUN_ALL_TESTS() + 33 at gtest.h:2288\n    frame #9: 0x00000001000131e4 UNIT_Exception_TEST`main(argc=1, argv=<unavailable>) + 20 at Exception_TEST.cc:90\n    frame #10: 0x00007fff935005c9 libdyld.dylib`start + 1\n\n  thread #2: tid = 0xec713, 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #0: 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #1: 0x00007fff88aa1e0c libsystem_pthread.dylib`_pthread_cond_wait + 693\n    frame #2: 0x000000010355b1fb libgazebo_common.5.dylib`boost::condition_variable::wait(this=0x0000000104334688, m=0x0000000104480e78) + 59 at condition_variable.hpp:73\n    frame #3: 0x0000000103556823 libgazebo_common.5.dylib`gazebo::common::ModelDatabase::UpdateModelCache(this=0x00000001000d2448, _fetchImmediately=<unavailable>) + 115 at ModelDatabase.cc:279\n    frame #4: 0x0000000103de5d05 libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 133\n    frame #5: 0x00007fff88aa1268 libsystem_pthread.dylib`_pthread_body + 131\n    frame #6: 0x00007fff88aa11e5 libsystem_pthread.dylib`_pthread_start + 176\n    frame #7: 0x00007fff88a9f41d libsystem_pthread.dylib`thread_start + 13\n~~~", "markup": "markdown", "html": "<p>It's giving an error about doing \"death tests\" in threaded contexts, saying that there are two threads. I grabbed a backtrace; it looks like the other thread is the ModelDatabase cache updater:</p>\n<div class=\"codehilite\"><pre><span></span>(lldb) thread backtrace all\n* thread #1: tid = 0xec6f2, 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79, queue = &#39;com.apple.main-thread&#39;, stop reason = breakpoint 1.1\n  * frame #0: 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79\n    frame #1: 0x0000000100034144 UNIT_Exception_TEST`void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(object=&lt;unavailable&gt;, location=0x000000010004210b, method=&lt;unavailable&gt;)(), char const*) + 148 at gtest.cc:2079\n    frame #2: 0x000000010001f20a UNIT_Exception_TEST`testing::Test::Run(this=0x0000000104340190) + 298 at gtest.cc:2151\n    frame #3: 0x000000010001ff02 UNIT_Exception_TEST`testing::TestInfo::Run(this=0x00000001043400a0) + 370 at gtest.cc:2327\n    frame #4: 0x00000001000205e0 UNIT_Exception_TEST`testing::TestCase::Run(this=0x000000010433fcc0) + 416 at gtest.cc:2445\n    frame #5: 0x0000000100027b67 UNIT_Exception_TEST`testing::internal::UnitTestImpl::RunAllTests(this=0x000000010433fa90) + 919 at gtest.cc:4316\n    frame #6: 0x0000000100034844 UNIT_Exception_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(object=&lt;unavailable&gt;, location=0x0000000100042786, method=&lt;unavailable&gt;)(), char const*) + 148 at gtest.cc:2079\n    frame #7: 0x000000010002777e UNIT_Exception_TEST`testing::UnitTest::Run(this=0x0000000100048130) + 174 at gtest.cc:3927\n    frame #8: 0x00000001000131f1 UNIT_Exception_TEST`main [inlined] RUN_ALL_TESTS() + 33 at gtest.h:2288\n    frame #9: 0x00000001000131e4 UNIT_Exception_TEST`main(argc=1, argv=&lt;unavailable&gt;) + 20 at Exception_TEST.cc:90\n    frame #10: 0x00007fff935005c9 libdyld.dylib`start + 1\n\n  thread #2: tid = 0xec713, 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #0: 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #1: 0x00007fff88aa1e0c libsystem_pthread.dylib`_pthread_cond_wait + 693\n    frame #2: 0x000000010355b1fb libgazebo_common.5.dylib`boost::condition_variable::wait(this=0x0000000104334688, m=0x0000000104480e78) + 59 at condition_variable.hpp:73\n    frame #3: 0x0000000103556823 libgazebo_common.5.dylib`gazebo::common::ModelDatabase::UpdateModelCache(this=0x00000001000d2448, _fetchImmediately=&lt;unavailable&gt;) + 115 at ModelDatabase.cc:279\n    frame #4: 0x0000000103de5d05 libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 133\n    frame #5: 0x00007fff88aa1268 libsystem_pthread.dylib`_pthread_body + 131\n    frame #6: 0x00007fff88aa11e5 libsystem_pthread.dylib`_pthread_start + 176\n    frame #7: 0x00007fff88a9f41d libsystem_pthread.dylib`thread_start + 13\n</pre></div>", "type": "rendered"}, "created_on": "2015-03-03T08:14:14.454287+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 16050071}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480/comments/16050221.json"}, "html": {"href": "#!/osrf/gazebo/issues/1480#comment-16050221"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480.json"}}, "type": "issue", "id": 1480, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "UNIT_Exception_TEST failure on OS X"}, "content": {"raw": "The threading message seems to be a red herring.\n\nI made sure to kill the ModelDatabase thread:\n~~~\ndiff -r 008ba7669a75 gazebo/common/Exception_TEST.cc\n--- a/gazebo/common/Exception_TEST.cc\tMon Mar 02 17:28:08 2015 -0800\n+++ b/gazebo/common/Exception_TEST.cc\tTue Mar 03 00:21:05 2015 -0800\n@@ -19,6 +19,7 @@\n \n #include \"gazebo/common/Assert.hh\"\n #include \"gazebo/common/Exception.hh\"\n+#include \"gazebo/common/ModelDatabase.hh\"\n #include \"test/util.hh\"\n \n using namespace gazebo;\n@@ -76,8 +77,10 @@\n #else\n TEST_F(Exception, GZASSERT_Enabled_ThrowAssertion)\n {\n-    ASSERT_DEATH(\n-      GZ_ASSERT(true == false, \"Assert thrown\"),\n+  common::ModelDatabase::Instance()->Fini();\n+  common::Time::MSleep(100);\n+  ASSERT_DEATH(\n+    GZ_ASSERT(true == false, \"Assert thrown\"),\n       \".*Internal Program Error - assertion.*\");\n }\n #endif\n~~~\nbut it still fails:\n~~~\n[ RUN      ] Exception.GZASSERT_Enabled_ThrowAssertion\n/Users/scpeters/ws/gazebo/src/gazebo/gazebo/common/Exception_TEST.cc:84: Failure\nDeath test: (__builtin_expect(!((true == false)&&(\"Assert thrown\")), 0) ? __assert_rtn(__func__, \"/Users/scpeters/ws/gazebo/src/gazebo/gazebo/common/Exception_TEST.cc\", 83, \"(true == false)&&(\\\"Assert thrown\\\")\") : (void)0)\n    Result: died but not with expected error.\n  Expected: .*Internal Program Error - assertion.*\nActual msg:\n[  DEATH   ] Assertion failed: ((true == false)&&(\"Assert thrown\")), function TestBody, file /Users/scpeters/ws/gazebo/src/gazebo/gazebo/common/Exception_TEST.cc, line 83.\n[  DEATH   ] \n[  FAILED  ] Exception.GZASSERT_Enabled_ThrowAssertion (7649 ms)\n~~~", "markup": "markdown", "html": "<p>The threading message seems to be a red herring.</p>\n<p>I made sure to kill the ModelDatabase thread:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 008ba7669a75 gazebo/common/Exception_TEST.cc</span>\n<span class=\"gd\">--- a/gazebo/common/Exception_TEST.cc   Mon Mar 02 17:28:08 2015 -0800</span>\n<span class=\"gi\">+++ b/gazebo/common/Exception_TEST.cc   Tue Mar 03 00:21:05 2015 -0800</span>\n<span class=\"gu\">@@ -19,6 +19,7 @@</span>\n\n #include &quot;gazebo/common/Assert.hh&quot;\n #include &quot;gazebo/common/Exception.hh&quot;\n<span class=\"gi\">+#include &quot;gazebo/common/ModelDatabase.hh&quot;</span>\n #include &quot;test/util.hh&quot;\n\n using namespace gazebo;\n<span class=\"gu\">@@ -76,8 +77,10 @@</span>\n #else\n TEST_F(Exception, GZASSERT_Enabled_ThrowAssertion)\n {\n<span class=\"gd\">-    ASSERT_DEATH(</span>\n<span class=\"gd\">-      GZ_ASSERT(true == false, &quot;Assert thrown&quot;),</span>\n<span class=\"gi\">+  common::ModelDatabase::Instance()-&gt;Fini();</span>\n<span class=\"gi\">+  common::Time::MSleep(100);</span>\n<span class=\"gi\">+  ASSERT_DEATH(</span>\n<span class=\"gi\">+    GZ_ASSERT(true == false, &quot;Assert thrown&quot;),</span>\n       &quot;.*Internal Program Error - assertion.*&quot;);\n }\n #endif\n</pre></div>\n\n\n<p>but it still fails:</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] Exception.GZASSERT_Enabled_ThrowAssertion\n/Users/scpeters/ws/gazebo/src/gazebo/gazebo/common/Exception_TEST.cc:84: Failure\nDeath test: (__builtin_expect(!((true == false)&amp;&amp;(&quot;Assert thrown&quot;)), 0) ? __assert_rtn(__func__, &quot;/Users/scpeters/ws/gazebo/src/gazebo/gazebo/common/Exception_TEST.cc&quot;, 83, &quot;(true == false)&amp;&amp;(\\&quot;Assert thrown\\&quot;)&quot;) : (void)0)\n    Result: died but not with expected error.\n  Expected: .*Internal Program Error - assertion.*\nActual msg:\n[  DEATH   ] Assertion failed: ((true == false)&amp;&amp;(&quot;Assert thrown&quot;)), function TestBody, file /Users/scpeters/ws/gazebo/src/gazebo/gazebo/common/Exception_TEST.cc, line 83.\n[  DEATH   ] \n[  FAILED  ] Exception.GZASSERT_Enabled_ThrowAssertion (7649 ms)\n</pre></div>", "type": "rendered"}, "created_on": "2015-03-03T08:22:02.239199+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 16050221}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480/comments/25104180.json"}, "html": {"href": "#!/osrf/gazebo/issues/1480#comment-25104180"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480.json"}}, "type": "issue", "id": 1480, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "UNIT_Exception_TEST failure on OS X"}, "content": {"raw": "this test fails on [ubuntu wily](http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-wily-amd64-gpu-none/28/testReport/%28root%29/Exception/GZASSERT_Enabled_ThrowAssertion/) as well", "markup": "markdown", "html": "<p>this test fails on <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-wily-amd64-gpu-none/28/testReport/%28root%29/Exception/GZASSERT_Enabled_ThrowAssertion/\" rel=\"nofollow\">ubuntu wily</a> as well</p>", "type": "rendered"}, "created_on": "2016-01-30T01:05:22.572536+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 25104180}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480/comments/30611028.json"}, "html": {"href": "#!/osrf/gazebo/issues/1480#comment-30611028"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480.json"}}, "type": "issue", "id": 1480, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "UNIT_Exception_TEST failure on OS X"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:24:05.503028+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30611028}], "page": 1, "size": 4}