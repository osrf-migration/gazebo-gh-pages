{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480/comments/16050071.json"}, "html": {"href": "#!/osrf/gazebo/issues/1480#comment-16050071"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1480.json"}}, "type": "issue", "id": 1480, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "UNIT_Exception_TEST failure on OS X"}, "content": {"raw": "It's giving an error about doing \"death tests\" in threaded contexts, saying that there are two threads. I grabbed a backtrace; it looks like the other thread is the ModelDatabase cache updater:\n~~~\n(lldb) thread backtrace all\n* thread #1: tid = 0xec6f2, 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1\n  * frame #0: 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79\n    frame #1: 0x0000000100034144 UNIT_Exception_TEST`void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(object=<unavailable>, location=0x000000010004210b, method=<unavailable>)(), char const*) + 148 at gtest.cc:2079\n    frame #2: 0x000000010001f20a UNIT_Exception_TEST`testing::Test::Run(this=0x0000000104340190) + 298 at gtest.cc:2151\n    frame #3: 0x000000010001ff02 UNIT_Exception_TEST`testing::TestInfo::Run(this=0x00000001043400a0) + 370 at gtest.cc:2327\n    frame #4: 0x00000001000205e0 UNIT_Exception_TEST`testing::TestCase::Run(this=0x000000010433fcc0) + 416 at gtest.cc:2445\n    frame #5: 0x0000000100027b67 UNIT_Exception_TEST`testing::internal::UnitTestImpl::RunAllTests(this=0x000000010433fa90) + 919 at gtest.cc:4316\n    frame #6: 0x0000000100034844 UNIT_Exception_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=<unavailable>, location=0x0000000100042786, method=<unavailable>)(), char const*) + 148 at gtest.cc:2079\n    frame #7: 0x000000010002777e UNIT_Exception_TEST`testing::UnitTest::Run(this=0x0000000100048130) + 174 at gtest.cc:3927\n    frame #8: 0x00000001000131f1 UNIT_Exception_TEST`main [inlined] RUN_ALL_TESTS() + 33 at gtest.h:2288\n    frame #9: 0x00000001000131e4 UNIT_Exception_TEST`main(argc=1, argv=<unavailable>) + 20 at Exception_TEST.cc:90\n    frame #10: 0x00007fff935005c9 libdyld.dylib`start + 1\n\n  thread #2: tid = 0xec713, 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #0: 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #1: 0x00007fff88aa1e0c libsystem_pthread.dylib`_pthread_cond_wait + 693\n    frame #2: 0x000000010355b1fb libgazebo_common.5.dylib`boost::condition_variable::wait(this=0x0000000104334688, m=0x0000000104480e78) + 59 at condition_variable.hpp:73\n    frame #3: 0x0000000103556823 libgazebo_common.5.dylib`gazebo::common::ModelDatabase::UpdateModelCache(this=0x00000001000d2448, _fetchImmediately=<unavailable>) + 115 at ModelDatabase.cc:279\n    frame #4: 0x0000000103de5d05 libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 133\n    frame #5: 0x00007fff88aa1268 libsystem_pthread.dylib`_pthread_body + 131\n    frame #6: 0x00007fff88aa11e5 libsystem_pthread.dylib`_pthread_start + 176\n    frame #7: 0x00007fff88a9f41d libsystem_pthread.dylib`thread_start + 13\n~~~", "markup": "markdown", "html": "<p>It's giving an error about doing \"death tests\" in threaded contexts, saying that there are two threads. I grabbed a backtrace; it looks like the other thread is the ModelDatabase cache updater:</p>\n<div class=\"codehilite\"><pre><span></span>(lldb) thread backtrace all\n* thread #1: tid = 0xec6f2, 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79, queue = &#39;com.apple.main-thread&#39;, stop reason = breakpoint 1.1\n  * frame #0: 0x0000000100012e34 UNIT_Exception_TEST`Exception_GZASSERT_Enabled_ThrowAssertion_Test::TestBody(this=0x0000000104340190) + 4 at Exception_TEST.cc:79\n    frame #1: 0x0000000100034144 UNIT_Exception_TEST`void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(object=&lt;unavailable&gt;, location=0x000000010004210b, method=&lt;unavailable&gt;)(), char const*) + 148 at gtest.cc:2079\n    frame #2: 0x000000010001f20a UNIT_Exception_TEST`testing::Test::Run(this=0x0000000104340190) + 298 at gtest.cc:2151\n    frame #3: 0x000000010001ff02 UNIT_Exception_TEST`testing::TestInfo::Run(this=0x00000001043400a0) + 370 at gtest.cc:2327\n    frame #4: 0x00000001000205e0 UNIT_Exception_TEST`testing::TestCase::Run(this=0x000000010433fcc0) + 416 at gtest.cc:2445\n    frame #5: 0x0000000100027b67 UNIT_Exception_TEST`testing::internal::UnitTestImpl::RunAllTests(this=0x000000010433fa90) + 919 at gtest.cc:4316\n    frame #6: 0x0000000100034844 UNIT_Exception_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(object=&lt;unavailable&gt;, location=0x0000000100042786, method=&lt;unavailable&gt;)(), char const*) + 148 at gtest.cc:2079\n    frame #7: 0x000000010002777e UNIT_Exception_TEST`testing::UnitTest::Run(this=0x0000000100048130) + 174 at gtest.cc:3927\n    frame #8: 0x00000001000131f1 UNIT_Exception_TEST`main [inlined] RUN_ALL_TESTS() + 33 at gtest.h:2288\n    frame #9: 0x00000001000131e4 UNIT_Exception_TEST`main(argc=1, argv=&lt;unavailable&gt;) + 20 at Exception_TEST.cc:90\n    frame #10: 0x00007fff935005c9 libdyld.dylib`start + 1\n\n  thread #2: tid = 0xec713, 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #0: 0x00007fff8663e136 libsystem_kernel.dylib`__psynch_cvwait + 10\n    frame #1: 0x00007fff88aa1e0c libsystem_pthread.dylib`_pthread_cond_wait + 693\n    frame #2: 0x000000010355b1fb libgazebo_common.5.dylib`boost::condition_variable::wait(this=0x0000000104334688, m=0x0000000104480e78) + 59 at condition_variable.hpp:73\n    frame #3: 0x0000000103556823 libgazebo_common.5.dylib`gazebo::common::ModelDatabase::UpdateModelCache(this=0x00000001000d2448, _fetchImmediately=&lt;unavailable&gt;) + 115 at ModelDatabase.cc:279\n    frame #4: 0x0000000103de5d05 libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 133\n    frame #5: 0x00007fff88aa1268 libsystem_pthread.dylib`_pthread_body + 131\n    frame #6: 0x00007fff88aa11e5 libsystem_pthread.dylib`_pthread_start + 176\n    frame #7: 0x00007fff88a9f41d libsystem_pthread.dylib`thread_start + 13\n</pre></div>", "type": "rendered"}, "created_on": "2015-03-03T08:14:14.454287+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 16050071}