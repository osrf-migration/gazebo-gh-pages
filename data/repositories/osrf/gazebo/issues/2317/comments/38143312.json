{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2317/comments/38143312.json"}, "html": {"href": "#!/osrf/gazebo/issues/2317#comment-38143312"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2317.json"}}, "type": "issue", "id": 2317, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "sp_member_access errors all over: use boost::make_shared instead"}, "content": {"raw": "I have some event connections that look like this:\n```\n#!c++\nthis->gazNode = boost::make_shared<transport::Node>(); // the old NodePtr thing was crashing in latest boost versions\nthis->gazNode->Init(nodeName);\nthis->laserDataSub = this->gazNode->Subscribe(gazTopicName, &LaserScanPlugin::OnScanMsg, this);\n```\nThat one almost always throws the error (on Subscribe). It used to throw it on the node allocation before I changed it to use `boost::make_shared`.\nI allocate events like this in some plugins:\n```\n#!c++\nthis->updateConnection = event::Events::ConnectWorldUpdateBegin(\n                    [this](common::UpdateInfo const &) {\n                        this->PhidgetsEncoderRos2Plugin::ContinuousOnUpdate();\n                    });\n```\nIf I call that twice I get the error. I also get the error on shutdown (when the shared pointer runs the destructor). Is there some way to subscribe to laser data using this mechanism?", "markup": "markdown", "html": "<p>I have some event connections that look like this:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">gazNode</span> <span class=\"o\">=</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">make_shared</span><span class=\"o\">&lt;</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span><span class=\"o\">&gt;</span><span class=\"p\">();</span> <span class=\"c1\">// the old NodePtr thing was crashing in latest boost versions</span>\n<span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">gazNode</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">(</span><span class=\"n\">nodeName</span><span class=\"p\">);</span>\n<span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">laserDataSub</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">gazNode</span><span class=\"o\">-&gt;</span><span class=\"n\">Subscribe</span><span class=\"p\">(</span><span class=\"n\">gazTopicName</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">LaserScanPlugin</span><span class=\"o\">::</span><span class=\"n\">OnScanMsg</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>That one almost always throws the error (on Subscribe). It used to throw it on the node allocation before I changed it to use <code>boost::make_shared</code>.\nI allocate events like this in some plugins:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updateConnection</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">::</span><span class=\"n\">Events</span><span class=\"o\">::</span><span class=\"n\">ConnectWorldUpdateBegin</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span><span class=\"k\">this</span><span class=\"p\">](</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">UpdateInfo</span> <span class=\"k\">const</span> <span class=\"o\">&amp;</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">PhidgetsEncoderRos2Plugin</span><span class=\"o\">::</span><span class=\"n\">ContinuousOnUpdate</span><span class=\"p\">();</span>\n                    <span class=\"p\">});</span>\n</pre></div>\n\n\n<p>If I call that twice I get the error. I also get the error on shutdown (when the shared pointer runs the destructor). Is there some way to subscribe to laser data using this mechanism?</p>", "type": "rendered"}, "created_on": "2017-07-11T04:48:39.184697+00:00", "user": {"display_name": "Brannon King", "uuid": "{3ca32111-9d7e-43e2-889d-573ee5947113}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3ca32111-9d7e-43e2-889d-573ee5947113%7D"}, "html": {"href": "https://bitbucket.org/%7B3ca32111-9d7e-43e2-889d-573ee5947113%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d8540673c67cfdaa5c756423a1385ffdd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBK-1.png"}}, "nickname": "brannonking", "type": "user", "account_id": "557058:04241785-a8ac-455f-9aef-7713c5e053e6"}, "updated_on": "2017-07-11T04:49:14.408838+00:00", "type": "issue_comment", "id": 38143312}