{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037/comments/8105228.json"}, "html": {"href": "#!/osrf/gazebo/issues/1037#comment-8105228"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037.json"}}, "type": "issue", "id": 1037, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gzlog echo -r -s sim doesn't print correct timestamps"}, "content": {"raw": "I have a patch; I'm working on a test:\n~~~\ndiff -r 79296f559890 gazebo/physics/WorldState.cc\n--- a/gazebo/physics/WorldState.cc\tWed Feb 05 09:37:43 2014 -0800\n+++ b/gazebo/physics/WorldState.cc\tWed Feb 05 14:43:03 2014 -0800\n@@ -96,8 +96,11 @@\n /////////////////////////////////////////////////\n void WorldState::Load(const sdf::ElementPtr _elem)\n {\n-  // Copy the name\n+  // Copy the name and time information\n   this->name = _elem->Get<std::string>(\"world_name\");\n+  this->simTime = _elem->Get<common::Time>(\"sim_time\");\n+  this->wallTime = _elem->Get<common::Time>(\"wall_time\");\n+  this->realTime = _elem->Get<common::Time>(\"real_time\");\n \n   // Add the model states\n   this->modelStates.clear();\n@@ -107,16 +110,15 @@\n \n     while (childElem)\n     {\n+      std::string modelName = childElem->Get<std::string>(\"name\");\n       this->modelStates.insert(std::make_pair(\n-            childElem->Get<std::string>(\"name\"), ModelState(childElem)));\n+            modelName, ModelState(childElem)));\n+      this->modelStates[modelName].SetSimTime(this->simTime);\n+      this->modelStates[modelName].SetWallTime(this->wallTime);\n+      this->modelStates[modelName].SetRealTime(this->realTime);\n       childElem = childElem->GetNextElement(\"model\");\n     }\n   }\n-\n-  // Copy the name and time information\n-  this->simTime = _elem->Get<common::Time>(\"sim_time\");\n-  this->wallTime = _elem->Get<common::Time>(\"wall_time\");\n-  this->realTime = _elem->Get<common::Time>(\"real_time\");\n }\n \n /////////////////////////////////////////////////\ndiff -r 79296f559890 tools/gzlog.cc\n--- a/tools/gzlog.cc\tWed Feb 05 09:37:43 2014 -0800\n+++ b/tools/gzlog.cc\tWed Feb 05 14:43:03 2014 -0800\n@@ -62,7 +62,7 @@\n               else if (this->stamp == \"real\")\n                 _stream << _state.GetRealTime().Double() << \" \";\n               else if (this->stamp == \"wall\")\n-                _stream << _state.GetWallTime().Double() << \" \";\n+                _stream << _state.GetWallTime() << \" \";\n             }\n \n             return _stream;\n@@ -980,6 +980,17 @@\n /////////////////////////////////////////////////\n int main(int argc, char **argv)\n {\n+  try\n+  {\n+    // Initialize the informational logger. This will log warnings and errors.\n+    gzLogInit(\"gzlog.log\");\n+  }\n+  catch(gazebo::common::Exception &_e)\n+  {\n+    _e.Print();\n+    std::cerr << \"Error initializing log file\" << std::endl;\n+  }\n+\n   // Hidden options\n   po::options_description hiddenOptions(\"hidden options\");\n   hiddenOptions.add_options()\n~~~", "markup": "markdown", "html": "<p>I have a patch; I'm working on a test:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 79296f559890 gazebo/physics/WorldState.cc</span>\n<span class=\"gd\">--- a/gazebo/physics/WorldState.cc  Wed Feb 05 09:37:43 2014 -0800</span>\n<span class=\"gi\">+++ b/gazebo/physics/WorldState.cc  Wed Feb 05 14:43:03 2014 -0800</span>\n<span class=\"gu\">@@ -96,8 +96,11 @@</span>\n /////////////////////////////////////////////////\n void WorldState::Load(const sdf::ElementPtr _elem)\n {\n<span class=\"gd\">-  // Copy the name</span>\n<span class=\"gi\">+  // Copy the name and time information</span>\n   this-&gt;name = _elem-&gt;Get&lt;std::string&gt;(&quot;world_name&quot;);\n<span class=\"gi\">+  this-&gt;simTime = _elem-&gt;Get&lt;common::Time&gt;(&quot;sim_time&quot;);</span>\n<span class=\"gi\">+  this-&gt;wallTime = _elem-&gt;Get&lt;common::Time&gt;(&quot;wall_time&quot;);</span>\n<span class=\"gi\">+  this-&gt;realTime = _elem-&gt;Get&lt;common::Time&gt;(&quot;real_time&quot;);</span>\n\n   // Add the model states\n   this-&gt;modelStates.clear();\n<span class=\"gu\">@@ -107,16 +110,15 @@</span>\n\n     while (childElem)\n     {\n<span class=\"gi\">+      std::string modelName = childElem-&gt;Get&lt;std::string&gt;(&quot;name&quot;);</span>\n       this-&gt;modelStates.insert(std::make_pair(\n<span class=\"gd\">-            childElem-&gt;Get&lt;std::string&gt;(&quot;name&quot;), ModelState(childElem)));</span>\n<span class=\"gi\">+            modelName, ModelState(childElem)));</span>\n<span class=\"gi\">+      this-&gt;modelStates[modelName].SetSimTime(this-&gt;simTime);</span>\n<span class=\"gi\">+      this-&gt;modelStates[modelName].SetWallTime(this-&gt;wallTime);</span>\n<span class=\"gi\">+      this-&gt;modelStates[modelName].SetRealTime(this-&gt;realTime);</span>\n       childElem = childElem-&gt;GetNextElement(&quot;model&quot;);\n     }\n   }\n<span class=\"gd\">-</span>\n<span class=\"gd\">-  // Copy the name and time information</span>\n<span class=\"gd\">-  this-&gt;simTime = _elem-&gt;Get&lt;common::Time&gt;(&quot;sim_time&quot;);</span>\n<span class=\"gd\">-  this-&gt;wallTime = _elem-&gt;Get&lt;common::Time&gt;(&quot;wall_time&quot;);</span>\n<span class=\"gd\">-  this-&gt;realTime = _elem-&gt;Get&lt;common::Time&gt;(&quot;real_time&quot;);</span>\n }\n\n /////////////////////////////////////////////////\n<span class=\"gh\">diff -r 79296f559890 tools/gzlog.cc</span>\n<span class=\"gd\">--- a/tools/gzlog.cc    Wed Feb 05 09:37:43 2014 -0800</span>\n<span class=\"gi\">+++ b/tools/gzlog.cc    Wed Feb 05 14:43:03 2014 -0800</span>\n<span class=\"gu\">@@ -62,7 +62,7 @@</span>\n               else if (this-&gt;stamp == &quot;real&quot;)\n                 _stream &lt;&lt; _state.GetRealTime().Double() &lt;&lt; &quot; &quot;;\n               else if (this-&gt;stamp == &quot;wall&quot;)\n<span class=\"gd\">-                _stream &lt;&lt; _state.GetWallTime().Double() &lt;&lt; &quot; &quot;;</span>\n<span class=\"gi\">+                _stream &lt;&lt; _state.GetWallTime() &lt;&lt; &quot; &quot;;</span>\n             }\n\n             return _stream;\n<span class=\"gu\">@@ -980,6 +980,17 @@</span>\n /////////////////////////////////////////////////\n int main(int argc, char **argv)\n {\n<span class=\"gi\">+  try</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    // Initialize the informational logger. This will log warnings and errors.</span>\n<span class=\"gi\">+    gzLogInit(&quot;gzlog.log&quot;);</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+  catch(gazebo::common::Exception &amp;_e)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    _e.Print();</span>\n<span class=\"gi\">+    std::cerr &lt;&lt; &quot;Error initializing log file&quot; &lt;&lt; std::endl;</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n   // Hidden options\n   po::options_description hiddenOptions(&quot;hidden options&quot;);\n   hiddenOptions.add_options()\n</pre></div>", "type": "rendered"}, "created_on": "2014-02-05T23:02:03.263485+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 8105228}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037/comments/8105975.json"}, "html": {"href": "#!/osrf/gazebo/issues/1037#comment-8105975"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037.json"}}, "type": "issue", "id": 1037, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gzlog echo -r -s sim doesn't print correct timestamps"}, "content": {"raw": "That patch is based off of default. This could potentially go to 1.9 and 2.x as well.", "markup": "markdown", "html": "<p>That patch is based off of default. This could potentially go to 1.9 and 2.x as well.</p>", "type": "rendered"}, "created_on": "2014-02-06T00:28:22.354348+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 8105975}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037/comments/8123398.json"}, "html": {"href": "#!/osrf/gazebo/issues/1037#comment-8123398"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037.json"}}, "type": "issue", "id": 1037, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gzlog echo -r -s sim doesn't print correct timestamps"}, "content": {"raw": "pull request #952", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/952/fix-timestamp-printing-for-gzlog-echo-r-s\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #952</a></p>", "type": "rendered"}, "created_on": "2014-02-06T22:03:12.078596+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 8123398}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037/comments/8275234.json"}, "html": {"href": "#!/osrf/gazebo/issues/1037#comment-8275234"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037.json"}}, "type": "issue", "id": 1037, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gzlog echo -r -s sim doesn't print correct timestamps"}, "content": {"raw": "pull request #952", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/952/fix-timestamp-printing-for-gzlog-echo-r-s\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #952</a></p>", "type": "rendered"}, "created_on": "2014-02-12T16:29:15.126571+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 8275234}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037/comments/30610150.json"}, "html": {"href": "#!/osrf/gazebo/issues/1037#comment-30610150"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037.json"}}, "type": "issue", "id": 1037, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gzlog echo -r -s sim doesn't print correct timestamps"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:21:53.165424+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30610150}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037/comments/30612623.json"}, "html": {"href": "#!/osrf/gazebo/issues/1037#comment-30612623"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1037.json"}}, "type": "issue", "id": 1037, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "gzlog echo -r -s sim doesn't print correct timestamps"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:45:09.882370+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30612623}], "page": 1, "size": 6}