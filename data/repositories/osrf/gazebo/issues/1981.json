{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1981/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1981.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1981/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1981/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1981/moving-the-center-of-gravity-of-a-link"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1981/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "Moving the center of gravity of a link with joints results in false forces (ODE).", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 1, "watches": 5, "content": {"raw": "In Gazebo 7, when I programatically move the CoG of a link that is connected via joints to other links, the model \"freaks out\", flies away, and... you know that :) I do the moving in a model plulgin's Load method, when the simulation is paused (before the very first simulation step).\r\n\r\nI've done a lot of tests, tried changing the CoG using (at least) these methods:\r\n\r\n1)\r\n\r\n    math::Pose pose;\r\n    pose.pos.x = -1.0;\r\n    physics::Inertial in = model->GetChildLink(link)->GetInertial()->GetInertial(pose);\r\n    *model->GetChildLink(link)->GetInertial() = in;\r\n    model->GetChildLink(link)->UpdateMass();\r\n\r\n2)\r\n\r\n    math::Pose pose = model->GetChildLink(link)->GetInertial()->GetPose();\r\n    pose.pos.x += -1.0;\r\n    model->GetChildLink(link)->GetInertial()->SetCoG(pose);\r\n    model->GetChildLink(link)->UpdateMass();\r\n\r\n3)\r\n\r\n    msgs::Model msg;\r\n    msg.set_name(model->GetName());\r\n    msg.add_link();\r\n    auto msgLink = msg.mutable_link(0);\r\n    msgLink->set_name(link);\r\n    msgLink->set_id(odeLink2->GetId());\r\n    auto msgInertial = msgLink->mutable_inertial();\r\n    ignition::math::Vector3d newCoG(odeLink2->GetInertial()->GetCoG().Ign());\r\n    newCoG.X(newCoG.X() - 1.0);\r\n    msgs::Set(msgInertial->mutable_pose(), ignition::math::Pose3d(newCoG, ignition::math::Quaterniond()));\r\n    transport::PublisherPtr modelPub = gazeboNode->Advertise<msgs::Model>(\"~/model/modify\");\r\n    modelPub->WaitForConnection();\r\n    modelPub->Publish(msg, true);\r\n\r\nMaybe I also tried other methods, I don't remember. \r\n\r\nWhen the link of which I'm changing the CoG is not connected with joints to other links, then the CoG moves as expected. When I specify a CoG offset in the SDF file (via `<inertial><pose>` tag), and then load the model, it works in both cases (with joints and without joints).\r\n\r\nThere are thus 4 cases:\r\n\r\n1. CoG set in SDF, joints (ok)\r\n1. CoG set in SDF, no joints (ok)\r\n1. CoG set at runtime, joints (not ok)\r\n1. CoG set at runtime, no joints (ok)\r\n\r\nI think these 4 test cases demonstrate, that what I describe is actually a bug, and not a feature. I've created a failing unit test for this behavior (I'll reference the PR here in a while).\r\n\r\nI gave it 3-4 days to debug what's happening, tried \"fixing\" every relative offset I've found (like the Link's `SetRelativePose()`, `SetInitialRelativePose()`, or the joints' anchors), I tried various physics resets (like `world->ResetPhysicsStates()` or `world->Reset()`) and so on, but I did not succeed finding the root cause. One thing is sure - the CoG always \"wants to\" move to its original location, and that's the false force that disturbs the simulation. After a while it succeds and happily resides in the original position, but the link is shifted (as you can see in the attached images).\r\n\r\nI also tried using the `Link->UpdateParameters` and changing the offset in the Sdf, but it ended up with unrelated errors (probably another bug?). This piece of code:\r\n\r\n    sdf::ElementPtr linkSdf = link->GetSDF();\r\n    if (linkSdf->HasElement(\"inertial\"))  {\r\n        auto inertialElem = linkSdf->GetElement(\"inertial\");\r\n        auto pose = inertialElem->Get<math::Pose>(\"pose\");\r\n        pose.pos.x -= 1.0;\r\n        inertialElem->Set(pose);\r\n        odeLink->GetInertial()->UpdateParameters(inertialElem);\r\n        // or odeLink->UpdateParameters(linkSdf);\r\n    }\r\n\r\nends up with error `Missing description for the gravity element`, and sometimes also with `Could not find value for pose` (but here I think I've found out that it is the link's pose, and not the inertial's pose, what's not found).", "markup": "markdown", "html": "<p>In Gazebo 7, when I programatically move the CoG of a link that is connected via joints to other links, the model \"freaks out\", flies away, and... you know that :) I do the moving in a model plulgin's Load method, when the simulation is paused (before the very first simulation step).</p>\n<p>I've done a lot of tests, tried changing the CoG using (at least) these methods:</p>\n<p>1)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Pose</span> <span class=\"nt\">pose</span><span class=\"o\">;</span>\n<span class=\"nt\">pose</span><span class=\"p\">.</span><span class=\"nc\">pos</span><span class=\"p\">.</span><span class=\"nc\">x</span> <span class=\"o\">=</span> <span class=\"nt\">-1</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">;</span>\n<span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">Inertial</span> <span class=\"nt\">in</span> <span class=\"o\">=</span> <span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetChildLink</span><span class=\"o\">(</span><span class=\"nt\">link</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetInertial</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetInertial</span><span class=\"o\">(</span><span class=\"nt\">pose</span><span class=\"o\">);</span>\n<span class=\"o\">*</span><span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetChildLink</span><span class=\"o\">(</span><span class=\"nt\">link</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetInertial</span><span class=\"o\">()</span> <span class=\"o\">=</span> <span class=\"nt\">in</span><span class=\"o\">;</span>\n<span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetChildLink</span><span class=\"o\">(</span><span class=\"nt\">link</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">UpdateMass</span><span class=\"o\">();</span>\n</pre></div>\n\n\n<p>2)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Pose</span> <span class=\"nt\">pose</span> <span class=\"o\">=</span> <span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetChildLink</span><span class=\"o\">(</span><span class=\"nt\">link</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetInertial</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetPose</span><span class=\"o\">();</span>\n<span class=\"nt\">pose</span><span class=\"p\">.</span><span class=\"nc\">pos</span><span class=\"p\">.</span><span class=\"nc\">x</span> <span class=\"o\">+=</span> <span class=\"nt\">-1</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">;</span>\n<span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetChildLink</span><span class=\"o\">(</span><span class=\"nt\">link</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetInertial</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">SetCoG</span><span class=\"o\">(</span><span class=\"nt\">pose</span><span class=\"o\">);</span>\n<span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetChildLink</span><span class=\"o\">(</span><span class=\"nt\">link</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">UpdateMass</span><span class=\"o\">();</span>\n</pre></div>\n\n\n<p>3)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Model</span> <span class=\"nt\">msg</span><span class=\"o\">;</span>\n<span class=\"nt\">msg</span><span class=\"p\">.</span><span class=\"nc\">set_name</span><span class=\"o\">(</span><span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetName</span><span class=\"o\">());</span>\n<span class=\"nt\">msg</span><span class=\"p\">.</span><span class=\"nc\">add_link</span><span class=\"o\">();</span>\n<span class=\"nt\">auto</span> <span class=\"nt\">msgLink</span> <span class=\"o\">=</span> <span class=\"nt\">msg</span><span class=\"p\">.</span><span class=\"nc\">mutable_link</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">);</span>\n<span class=\"nt\">msgLink-</span><span class=\"o\">&gt;</span><span class=\"nt\">set_name</span><span class=\"o\">(</span><span class=\"nt\">link</span><span class=\"o\">);</span>\n<span class=\"nt\">msgLink-</span><span class=\"o\">&gt;</span><span class=\"nt\">set_id</span><span class=\"o\">(</span><span class=\"nt\">odeLink2-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetId</span><span class=\"o\">());</span>\n<span class=\"nt\">auto</span> <span class=\"nt\">msgInertial</span> <span class=\"o\">=</span> <span class=\"nt\">msgLink-</span><span class=\"o\">&gt;</span><span class=\"nt\">mutable_inertial</span><span class=\"o\">();</span>\n<span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3d</span> <span class=\"nt\">newCoG</span><span class=\"o\">(</span><span class=\"nt\">odeLink2-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetInertial</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetCoG</span><span class=\"o\">()</span><span class=\"p\">.</span><span class=\"nc\">Ign</span><span class=\"o\">());</span>\n<span class=\"nt\">newCoG</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"o\">(</span><span class=\"nt\">newCoG</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"o\">()</span> <span class=\"nt\">-</span> <span class=\"nt\">1</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">);</span>\n<span class=\"nt\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Set</span><span class=\"o\">(</span><span class=\"nt\">msgInertial-</span><span class=\"o\">&gt;</span><span class=\"nt\">mutable_pose</span><span class=\"o\">(),</span> <span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">math</span><span class=\"p\">::</span><span class=\"nd\">Pose3d</span><span class=\"o\">(</span><span class=\"nt\">newCoG</span><span class=\"o\">,</span> <span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">math</span><span class=\"p\">::</span><span class=\"nd\">Quaterniond</span><span class=\"o\">()));</span>\n<span class=\"nt\">transport</span><span class=\"p\">::</span><span class=\"nd\">PublisherPtr</span> <span class=\"nt\">modelPub</span> <span class=\"o\">=</span> <span class=\"nt\">gazeboNode-</span><span class=\"o\">&gt;</span><span class=\"nt\">Advertise</span><span class=\"o\">&lt;</span><span class=\"nt\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Model</span><span class=\"o\">&gt;(</span><span class=\"s2\">&quot;~/model/modify&quot;</span><span class=\"o\">);</span>\n<span class=\"nt\">modelPub-</span><span class=\"o\">&gt;</span><span class=\"nt\">WaitForConnection</span><span class=\"o\">();</span>\n<span class=\"nt\">modelPub-</span><span class=\"o\">&gt;</span><span class=\"nt\">Publish</span><span class=\"o\">(</span><span class=\"nt\">msg</span><span class=\"o\">,</span> <span class=\"nt\">true</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>Maybe I also tried other methods, I don't remember. </p>\n<p>When the link of which I'm changing the CoG is not connected with joints to other links, then the CoG moves as expected. When I specify a CoG offset in the SDF file (via <code>&lt;inertial&gt;&lt;pose&gt;</code> tag), and then load the model, it works in both cases (with joints and without joints).</p>\n<p>There are thus 4 cases:</p>\n<ol>\n<li>CoG set in SDF, joints (ok)</li>\n<li>CoG set in SDF, no joints (ok)</li>\n<li>CoG set at runtime, joints (not ok)</li>\n<li>CoG set at runtime, no joints (ok)</li>\n</ol>\n<p>I think these 4 test cases demonstrate, that what I describe is actually a bug, and not a feature. I've created a failing unit test for this behavior (I'll reference the PR here in a while).</p>\n<p>I gave it 3-4 days to debug what's happening, tried \"fixing\" every relative offset I've found (like the Link's <code>SetRelativePose()</code>, <code>SetInitialRelativePose()</code>, or the joints' anchors), I tried various physics resets (like <code>world-&gt;ResetPhysicsStates()</code> or <code>world-&gt;Reset()</code>) and so on, but I did not succeed finding the root cause. One thing is sure - the CoG always \"wants to\" move to its original location, and that's the false force that disturbs the simulation. After a while it succeds and happily resides in the original position, but the link is shifted (as you can see in the attached images).</p>\n<p>I also tried using the <code>Link-&gt;UpdateParameters</code> and changing the offset in the Sdf, but it ended up with unrelated errors (probably another bug?). This piece of code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">ElementPtr</span> <span class=\"nt\">linkSdf</span> <span class=\"o\">=</span> <span class=\"nt\">link-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetSDF</span><span class=\"o\">();</span>\n<span class=\"nt\">if</span> <span class=\"o\">(</span><span class=\"nt\">linkSdf-</span><span class=\"o\">&gt;</span><span class=\"nt\">HasElement</span><span class=\"o\">(</span><span class=\"s2\">&quot;inertial&quot;</span><span class=\"o\">))</span>  <span class=\"p\">{</span>\n    <span class=\"err\">auto</span> <span class=\"err\">inertialElem</span> <span class=\"err\">=</span> <span class=\"err\">linkSdf-&gt;GetElement(&quot;inertial&quot;)</span><span class=\"p\">;</span>\n    <span class=\"err\">auto</span> <span class=\"err\">pose</span> <span class=\"err\">=</span> <span class=\"err\">inertialElem-&gt;Get&lt;</span><span class=\"n\">math</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">Pose</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s2\">&quot;pose&quot;</span><span class=\"p\">);</span>\n    <span class=\"err\">pose.pos.x</span> <span class=\"err\">-=</span> <span class=\"err\">1.0</span><span class=\"p\">;</span>\n    <span class=\"err\">inertialElem-&gt;Set(pose)</span><span class=\"p\">;</span>\n    <span class=\"err\">odeLink-&gt;GetInertial()-&gt;UpdateParameters(inertialElem)</span><span class=\"p\">;</span>\n    <span class=\"err\">//</span> <span class=\"err\">or</span> <span class=\"err\">odeLink-&gt;UpdateParameters(linkSdf)</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>ends up with error <code>Missing description for the gravity element</code>, and sometimes also with <code>Could not find value for pose</code> (but here I think I've found out that it is the link's pose, and not the inertial's pose, what's not found).</p>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2016-06-10T15:04:05.603433+00:00", "milestone": null, "updated_on": "2017-08-16T00:01:39.959483+00:00", "type": "issue", "id": 1981}