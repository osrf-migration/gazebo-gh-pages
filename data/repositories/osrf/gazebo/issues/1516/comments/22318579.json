{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1516/comments/22318579.json"}, "html": {"href": "#!/osrf/gazebo/issues/1516#comment-22318579"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1516.json"}}, "type": "issue", "id": 1516, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "physics classes call sensors functions"}, "content": {"raw": "AFAIK, the code is being modified to fix this circular dependency problem and all the fixes are not yet in the default branch.\n\nLet's try some dark linker magic as a workaround:\n\n```\ndiff -r 6f51fd02c306 tools/CMakeLists.txt\n--- a/tools/CMakeLists.txt\tSun Aug 02 12:41:12 2015 -0700\n+++ b/tools/CMakeLists.txt\tThu Oct 08 00:58:15 2015 +0200\n@@ -43,6 +43,8 @@\n  gazebo_msgs gazebo_common gazebo_transport gazebo_gui gazebo_physics\n  gazebo_physics_ode gazebo_sensors ${QT_LIBRARIES} ${Boost_LIBRARIES})\n \n+set_target_properties(gz PROPERTIES LINK_FLAGS \"-Wl,--no-as-needed\")\n+\n if(HAVE_BULLET)\n   target_link_libraries(gz gazebo_physics_bullet)\n endif()\n```\n\nMy hypothesis behind this workaround: the linker flag `--as--needed` (enabled by default) automatically detects overlinking (using more libraries than the object code really needs) and ignore the ones not directly related to the source being linked. The gz executable is really using physics symbols (gz_log.cc file) but there is no direct reference in gz code to sensors, so the linker is ignoring sensors library thus the fail since those symbols are needed for the physics library.", "markup": "markdown", "html": "<p>AFAIK, the code is being modified to fix this circular dependency problem and all the fixes are not yet in the default branch.</p>\n<p>Let's try some dark linker magic as a workaround:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 6f51fd02c306 tools/CMakeLists.txt</span>\n<span class=\"gd\">--- a/tools/CMakeLists.txt  Sun Aug 02 12:41:12 2015 -0700</span>\n<span class=\"gi\">+++ b/tools/CMakeLists.txt  Thu Oct 08 00:58:15 2015 +0200</span>\n<span class=\"gu\">@@ -43,6 +43,8 @@</span>\n  gazebo_msgs gazebo_common gazebo_transport gazebo_gui gazebo_physics\n  gazebo_physics_ode gazebo_sensors ${QT_LIBRARIES} ${Boost_LIBRARIES})\n\n<span class=\"gi\">+set_target_properties(gz PROPERTIES LINK_FLAGS &quot;-Wl,--no-as-needed&quot;)</span>\n<span class=\"gi\">+</span>\n if(HAVE_BULLET)\n   target_link_libraries(gz gazebo_physics_bullet)\n endif()\n</pre></div>\n\n\n<p>My hypothesis behind this workaround: the linker flag <code>--as--needed</code> (enabled by default) automatically detects overlinking (using more libraries than the object code really needs) and ignore the ones not directly related to the source being linked. The gz executable is really using physics symbols (gz_log.cc file) but there is no direct reference in gz code to sensors, so the linker is ignoring sensors library thus the fail since those symbols are needed for the physics library.</p>", "type": "rendered"}, "created_on": "2015-10-08T00:39:13.440902+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 22318579}