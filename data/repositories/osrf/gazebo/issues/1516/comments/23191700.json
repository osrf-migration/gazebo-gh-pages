{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1516/comments/23191700.json"}, "html": {"href": "#!/osrf/gazebo/issues/1516#comment-23191700"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1516.json"}}, "type": "issue", "id": 1516, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "physics classes call sensors functions"}, "content": {"raw": "I tried to build gazebo 6.5.1 with cmake 3.3.1 but failed, it gave me the error message: \n[ 94%] Linking CXX executable gz\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::SensorManager::~SensorManager()'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::create_sensor(boost::shared_ptr<sdf::Element>, std::string const&, std::string const&, unsigned int)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::get_sensor(std::string const&)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::Sensor::FillMsg(gazebo::msgs::Sensor&)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::SensorManager::SensorManager()'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::SensorManager::ResetLastUpdateTimes()'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::remove_sensor(std::string const&)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to `gazebo::sensors::SensorManager::SensorsInitialized()'\n\nit seems that, the new cmake remove duplicate libraries automatically, and the work through patch for this bug depends on the old feature of cmake.\n\nMy suggestion is that, if Joint and Link depends on sensor, why not to move them to a new module, say physics_joint?", "markup": "markdown", "html": "<p>I tried to build gazebo 6.5.1 with cmake 3.3.1 but failed, it gave me the error message: \n[ 94%] Linking CXX executable gz\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to <code>gazebo::sensors::SensorManager::~SensorManager()'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to</code>gazebo::sensors::create_sensor(boost::shared_ptr&lt;sdf::Element&gt;, std::string const&amp;, std::string const&amp;, unsigned int)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to <code>gazebo::sensors::get_sensor(std::string const&amp;)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to</code>gazebo::sensors::Sensor::FillMsg(gazebo::msgs::Sensor&amp;)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to <code>gazebo::sensors::SensorManager::SensorManager()'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to</code>gazebo::sensors::SensorManager::ResetLastUpdateTimes()'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to <code>gazebo::sensors::remove_sensor(std::string const&amp;)'\n../gazebo/physics/libgazebo_physics.so.6.5.1: undefined reference to</code>gazebo::sensors::SensorManager::SensorsInitialized()'</p>\n<p>it seems that, the new cmake remove duplicate libraries automatically, and the work through patch for this bug depends on the old feature of cmake.</p>\n<p>My suggestion is that, if Joint and Link depends on sensor, why not to move them to a new module, say physics_joint?</p>", "type": "rendered"}, "created_on": "2015-11-10T02:51:06.136910+00:00", "user": {"display_name": "Ferd Chen", "uuid": "{c7ec7d24-5109-4c54-921d-7745ba2ca6fd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc7ec7d24-5109-4c54-921d-7745ba2ca6fd%7D"}, "html": {"href": "https://bitbucket.org/%7Bc7ec7d24-5109-4c54-921d-7745ba2ca6fd%7D/"}, "avatar": {"href": "https://bitbucket.org/account/freason/avatar/"}}, "nickname": "freason", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 23191700}