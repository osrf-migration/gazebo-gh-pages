{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/820/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/820.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/820/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/820/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/820/multi-parameter-unit-tests"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/820/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Multi-parameter unit tests", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "We recently changed our syntax for instantiating physics tests using multiple physics engines by using the [INSTANTIATE_TEST_CASE_P syntax](http://code.google.com/p/googletest/wiki/AdvancedGuide#How_to_Write_Value-Parameterized_Tests) (see pull request #661). In pull request #672 (which was declined), there were a series of tests that act on several joint types. It was suggested by @_jrivero_ that we consider splitting each joint type into a separate test case. Currently ServerFixture is set up to receive a single `const char*` parameter ([see ServerFixture.hh:61](#!/osrf/gazebo/src/6d1e49939c05cefc71b410b01af289d4eeef6b62/test/ServerFixture.hh?at=default#cl-61)), but it would require a different setup to allow more parameters.\r\n\r\nI've investigated the different options provided by gtest, and there is a very intriguing option in the Combine function (see [comments in gtest-param-test.h](#!/osrf/gazebo/src/6d1e49939c05cefc71b410b01af289d4eeef6b62/test/gtest/include/gtest/gtest-param-test.h?at=default#cl-1224)). If you use tuples in the template type (`tuple<T1, T2,...TN>`) then the Combine function will allow you to specify a list of parameters for each type, like `{\"ode\", \"bullet\", \"simbody\", \"dart\"}` for physics engine and `{\"revolute\",\"prismatic\",\"ball\",\"universal\"}` for joint type, and it will instantiate all combinations of those parameters as test cases (the [Cartesian product](http://en.wikipedia.org/wiki/Cartesian_product) is apparently what they call it).\r\n\r\nThis requires `std::tuple`. I just tried compiling some `std::tuple` code examples, which required compiling with `-std=c++11` in both Linux and OSX. I'm going to try implementing this for a dummy test case and then for the tests from pull request #672.", "markup": "markdown", "html": "<p>We recently changed our syntax for instantiating physics tests using multiple physics engines by using the <a data-is-external-link=\"true\" href=\"http://code.google.com/p/googletest/wiki/AdvancedGuide#How_to_Write_Value-Parameterized_Tests\" rel=\"nofollow\">INSTANTIATE_TEST_CASE_P syntax</a> (see <a href=\"#!/osrf/gazebo/pull-requests/661/switched-ode-bullet-tests-to-value\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #661</a>). In <a href=\"#!/osrf/gazebo/pull-requests/672/add-test-for-rotational-joints-fix-some\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #672</a> (which was declined), there were a series of tests that act on several joint types. It was suggested by @<em>jrivero</em> that we consider splitting each joint type into a separate test case. Currently ServerFixture is set up to receive a single <code>const char*</code> parameter (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/6d1e49939c05cefc71b410b01af289d4eeef6b62/test/ServerFixture.hh?at=default#cl-61\" rel=\"nofollow\">see ServerFixture.hh:61</a>), but it would require a different setup to allow more parameters.</p>\n<p>I've investigated the different options provided by gtest, and there is a very intriguing option in the Combine function (see <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/6d1e49939c05cefc71b410b01af289d4eeef6b62/test/gtest/include/gtest/gtest-param-test.h?at=default#cl-1224\" rel=\"nofollow\">comments in gtest-param-test.h</a>). If you use tuples in the template type (<code>tuple&lt;T1, T2,...TN&gt;</code>) then the Combine function will allow you to specify a list of parameters for each type, like <code>{\"ode\", \"bullet\", \"simbody\", \"dart\"}</code> for physics engine and <code>{\"revolute\",\"prismatic\",\"ball\",\"universal\"}</code> for joint type, and it will instantiate all combinations of those parameters as test cases (the <a data-is-external-link=\"true\" href=\"http://en.wikipedia.org/wiki/Cartesian_product\" rel=\"nofollow\">Cartesian product</a> is apparently what they call it).</p>\n<p>This requires <code>std::tuple</code>. I just tried compiling some <code>std::tuple</code> code examples, which required compiling with <code>-std=c++11</code> in both Linux and OSX. I'm going to try implementing this for a dummy test case and then for the tests from <a href=\"#!/osrf/gazebo/pull-requests/672/add-test-for-rotational-joints-fix-some\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #672</a>.</p>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-08-28T22:11:03.940412+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:52.582147+00:00", "type": "issue", "id": 820}