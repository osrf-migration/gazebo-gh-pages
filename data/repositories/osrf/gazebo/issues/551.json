{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/551/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/551.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/551/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/551/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/551/sensormanager-assert-during-jenkins-test"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/551/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "SensorManager assert during jenkins test failure", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The Sensor_TEST unit test failed on a [recent jenkins build](http://build.osrfoundation.org/view/gazebo_1.5/job/gazebo-gazebo_1.5-devel-precise-amd64/9/testReport/junit/%28root%29/Results/test_ran/). The failure was caused by a GZ_ASSERT failure in SensorManager.cc\r\n\r\n~~~\r\n61: \u001b[1;36mDbg\u001b[0m sent reset world message\r\n61: ***** Internal Program Error - assertion (diffTime >= common::Time::Zero) failed in void gazebo::sensors::SensorManager::SensorContainer::RunLoop():\r\n61: /var/lib/jenkins/workspace/gazebo-gazebo_1.5-devel-precise-amd64/gazebo/gazebo/sensors/SensorManager.cc(479): Took negative time to update a sensor.\r\n~~~\r\n\r\nThis is a race condition, but I've been able to make it more prevalent by stress testing Reset World with an unthrottled ray sensor. The was added in changeset c3ebcf3 to branch [sensor_reset_stress](#!/osrf/gazebo/compare/sensor_reset_stress..gazebo_1.5).", "markup": "markdown", "html": "<p>The Sensor_TEST unit test failed on a <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo_1.5/job/gazebo-gazebo_1.5-devel-precise-amd64/9/testReport/junit/%28root%29/Results/test_ran/\" rel=\"nofollow\">recent jenkins build</a>. The failure was caused by a GZ_ASSERT failure in SensorManager.cc</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">61</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">36</span><span class=\"nx\">mDbg</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span> <span class=\"nx\">sent</span> <span class=\"nx\">reset</span> <span class=\"nx\">world</span> <span class=\"nx\">message</span>\n<span class=\"mi\">61</span><span class=\"p\">:</span> <span class=\"o\">*****</span> <span class=\"nx\">Internal</span> <span class=\"nx\">Program</span> <span class=\"nx\">Error</span> <span class=\"o\">-</span> <span class=\"nx\">assertion</span> <span class=\"p\">(</span><span class=\"nx\">diffTime</span> <span class=\"o\">&gt;=</span> <span class=\"nx\">common</span><span class=\"nl\">::Time::Zero</span><span class=\"p\">)</span> <span class=\"n\">failed</span> <span class=\"k\">in</span> <span class=\"kc\">void</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::sensors::SensorManager::SensorContainer::RunLoop</span><span class=\"p\">():</span>\n<span class=\"mi\">61</span><span class=\"p\">:</span> <span class=\"p\">/</span><span class=\"nb\">var</span><span class=\"p\">/</span><span class=\"nx\">lib</span><span class=\"p\">/</span><span class=\"nx\">jenkins</span><span class=\"p\">/</span><span class=\"nx\">workspace</span><span class=\"p\">/</span><span class=\"nx\">gazebo</span><span class=\"na\">-gazebo_1.5-devel-precise-amd64</span><span class=\"p\">/</span><span class=\"nx\">gazebo</span><span class=\"p\">/</span><span class=\"nx\">gazebo</span><span class=\"p\">/</span><span class=\"nx\">sensors</span><span class=\"p\">/</span><span class=\"nx\">SensorManager.cc</span><span class=\"p\">(</span><span class=\"mi\">479</span><span class=\"p\">):</span> <span class=\"nx\">Took</span> <span class=\"nx\">negative</span> <span class=\"nx\">time</span> <span class=\"k\">to</span> <span class=\"nx\">update</span> <span class=\"nx\">a</span> <span class=\"nx\">sensor.</span>\n</pre></div>\n\n\n<p>This is a race condition, but I've been able to make it more prevalent by stress testing Reset World with an unthrottled ray sensor. The was added in changeset <a href=\"#!/osrf/gazebo/commits/c3ebcf3\" rel=\"nofollow\" class=\"ap-connect-link\">c3ebcf3</a> to branch <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/compare/sensor_reset_stress..gazebo_1.5\" rel=\"nofollow\">sensor_reset_stress</a>.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-03-04T23:15:58.974707+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:49.647950+00:00", "type": "issue", "id": 551}