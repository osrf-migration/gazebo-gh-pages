{"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1722/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1722.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1722/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1722/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1722/empty-message-types-caused-by-entity-fini"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1722/vote"}}, "reporter": {"display_name": "Elte Hupkes", "uuid": "{f23aa1a9-ae57-493f-8169-fbb59b3eae43}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D"}, "html": {"href": "https://bitbucket.org/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8560ee94d50ba277c411499a45b3d732d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEH-5.png"}}, "nickname": "ElteHupkes", "type": "user", "account_id": "557058:b758f523-bdaa-4718-964c-03b825bdea8d"}, "title": "Empty message types caused by `Entity::Fini()` calling `Node::Fini()`", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "While debugging the transport library for a different issue, I noticed that many `unsubscribe` messages were sent with an empty `msg_type` field when deleting objects from the world. This appears to be caused by `Node::Fini()` being called by `Entity::Fini()` when its publishers / subscribers are still active.\r\n\r\nEach has a `visPub`, `requestPub` and `poseSub`, which are all reset in `Entity::~Entity()`. However, at this point `Entity::Fini()` has already been called. Since this method calls `Node::Fini()`, the transport `Node` associated with these publishers / subscribers is now in an uninitialized state. At the very least it results in `Node::callbacks` being empty at this point, meaning `Node::GetMsgType()` will always return an empty string. This in turn means that any `Subscriber::Unsubscribe()` called by `Subscriber::~Subscriber()` will send a message with an empty `msg_type`. There might be consequences for the publishers as well, but that I'm not sure of.\r\n\r\nThe simplest solution to this, I think, is to remove the call to `Node::Fini()` in `Entity::Fini()`. Since `Node::~Node()` already calls `Node::Fini()`, it will simply be finalized when the `Entity` and all of its `Publisher`s / `Subscriber`s are deleted and it is no longer needed.", "markup": "markdown", "html": "<p>While debugging the transport library for a different issue, I noticed that many <code>unsubscribe</code> messages were sent with an empty <code>msg_type</code> field when deleting objects from the world. This appears to be caused by <code>Node::Fini()</code> being called by <code>Entity::Fini()</code> when its publishers / subscribers are still active.</p>\n<p>Each has a <code>visPub</code>, <code>requestPub</code> and <code>poseSub</code>, which are all reset in <code>Entity::~Entity()</code>. However, at this point <code>Entity::Fini()</code> has already been called. Since this method calls <code>Node::Fini()</code>, the transport <code>Node</code> associated with these publishers / subscribers is now in an uninitialized state. At the very least it results in <code>Node::callbacks</code> being empty at this point, meaning <code>Node::GetMsgType()</code> will always return an empty string. This in turn means that any <code>Subscriber::Unsubscribe()</code> called by <code>Subscriber::~Subscriber()</code> will send a message with an empty <code>msg_type</code>. There might be consequences for the publishers as well, but that I'm not sure of.</p>\n<p>The simplest solution to this, I think, is to remove the call to <code>Node::Fini()</code> in <code>Entity::Fini()</code>. Since <code>Node::~Node()</code> already calls <code>Node::Fini()</code>, it will simply be finalized when the <code>Entity</code> and all of its <code>Publisher</code>s / <code>Subscriber</code>s are deleted and it is no longer needed.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-08-29T18:26:13.171808+00:00", "milestone": null, "updated_on": "2016-04-26T21:33:20.978832+00:00", "type": "issue", "id": 1722}