{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382/comments/42707849.json"}, "html": {"href": "#!/osrf/gazebo/issues/2382#comment-42707849"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382.json"}}, "type": "issue", "id": 2382, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sensors failed to initialize when loading model"}, "content": {"raw": "Reproduced inside docker (v17.12.0-ce) every time.  Issue is compounded when multiple models (with multiple plugins) are being initialized at the same time (start of world in world file as well as multiple spawns via API).\n\nI dug around a bit, and didn't find any rationale for the limit of 5 seconds. All actors can wait on indefinitely for the sensor init to be over. It'll increase the time taken in one step, but timer is anyways paused while the check is going on, so it might be able to possible to do away with the arbitrary(?) value of 5 seconds, except maybe to give a debug message informing that gazebo is processing, have patience.\n\nMoreover, gazebo tries again to init the sensors, and sufficient waiting (150 seconds per model) post the error message results in all models loading successfully. But I'm using a model with about 10 plugins, so YMMV on the numbers.\n\nPS: I can confirm that the issue goes away with a higher iteration limit (about 250 seems to do the trick) in the beginning. Or maybe as a workaround for now, use API to spawn the models sequentially, not in parallel in case there's an issue in changing the hardcoded value", "markup": "markdown", "html": "<p>Reproduced inside docker (v17.12.0-ce) every time.  Issue is compounded when multiple models (with multiple plugins) are being initialized at the same time (start of world in world file as well as multiple spawns via API).</p>\n<p>I dug around a bit, and didn't find any rationale for the limit of 5 seconds. All actors can wait on indefinitely for the sensor init to be over. It'll increase the time taken in one step, but timer is anyways paused while the check is going on, so it might be able to possible to do away with the arbitrary(?) value of 5 seconds, except maybe to give a debug message informing that gazebo is processing, have patience.</p>\n<p>Moreover, gazebo tries again to init the sensors, and sufficient waiting (150 seconds per model) post the error message results in all models loading successfully. But I'm using a model with about 10 plugins, so YMMV on the numbers.</p>\n<p>PS: I can confirm that the issue goes away with a higher iteration limit (about 250 seems to do the trick) in the beginning. Or maybe as a workaround for now, use API to spawn the models sequentially, not in parallel in case there's an issue in changing the hardcoded value</p>", "type": "rendered"}, "created_on": "2018-01-18T08:25:00.883564+00:00", "user": {"display_name": "Kunal Tyagi", "uuid": "{549058f2-c154-4c9c-a8ac-be524224888a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B549058f2-c154-4c9c-a8ac-be524224888a%7D"}, "html": {"href": "https://bitbucket.org/%7B549058f2-c154-4c9c-a8ac-be524224888a%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9066091b-9d3b-4f74-a7fe-d994c559b147/d36dc15c-fc09-4288-8b57-d6b17b9f6036/128"}}, "nickname": "kunaltyagi", "type": "user", "account_id": "557058:9066091b-9d3b-4f74-a7fe-d994c559b147"}, "updated_on": null, "type": "issue_comment", "id": 42707849}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382/comments/43088703.json"}, "html": {"href": "#!/osrf/gazebo/issues/2382#comment-43088703"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382.json"}}, "type": "issue", "id": 2382, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sensors failed to initialize when loading model"}, "content": {"raw": "@kunaltyagi: Thanks for trying this out. Based on your comment, I also tested increasing the time limit, and things worked well for me. I'm propagating the fix internally.\n\nI will leave the issue open since I do think it needs to be resolved. 30 or 60 seconds is as arbitrary as 5 seconds, and will likely lead to less problems.  In any case, the loop will break once the sensors are initialized, so having a higher limit seems sane.", "markup": "markdown", "html": "<p>@kunaltyagi: Thanks for trying this out. Based on your comment, I also tested increasing the time limit, and things worked well for me. I'm propagating the fix internally.</p>\n<p>I will leave the issue open since I do think it needs to be resolved. 30 or 60 seconds is as arbitrary as 5 seconds, and will likely lead to less problems.  In any case, the loop will break once the sensors are initialized, so having a higher limit seems sane.</p>", "type": "rendered"}, "created_on": "2018-02-05T12:51:32.566210+00:00", "user": {"display_name": "Piyush Khandelwal", "uuid": "{0aafe920-14b3-4b46-927d-421c6f4e90f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0aafe920-14b3-4b46-927d-421c6f4e90f2%7D"}, "html": {"href": "https://bitbucket.org/%7B0aafe920-14b3-4b46-927d-421c6f4e90f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4c0a1652789850a7953553e6d883eb06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-1.png"}}, "nickname": "piyushk", "type": "user", "account_id": "557058:f6cfe420-cf98-45d4-b1ff-8a554ca13fd0"}, "updated_on": null, "type": "issue_comment", "id": 43088703}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382/comments/49212701.json"}, "html": {"href": "#!/osrf/gazebo/issues/2382#comment-49212701"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382.json"}}, "type": "issue", "id": 2382, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sensors failed to initialize when loading model"}, "content": {"raw": "I experienced the same problem when loading a model with a camera plugin and a model plugin using ROS Lunar, Ubuntu 16.04, and Gazebo 9.5.0.\n\nMy solution: Remove the waiting loop. Without it, it works just fine. Here is the corresponding code snippet, taken from `Model.cc`:\n\n```c\nvoid Model::LoadPlugins()\n{\n  // Check to see if we need to load any model plugins\n  if (this->GetPluginCount() > 0)\n  {\n    // Load the plugins.\n    sdf::ElementPtr pluginElem = this->sdf->GetElement(\"plugin\");\n    while (pluginElem)\n    {\n      this->LoadPlugin(pluginElem);\n      pluginElem = pluginElem->GetNextElement(\"plugin\");\n    }\n  }\n\n  for (auto &model : this->models)\n    model->LoadPlugins();\n}\n```\n\nWhat is the purpose of the waiting loop anyway?", "markup": "markdown", "html": "<p>I experienced the same problem when loading a model with a camera plugin and a model plugin using ROS Lunar, Ubuntu 16.04, and Gazebo 9.5.0.</p>\n<p>My solution: Remove the waiting loop. Without it, it works just fine. Here is the corresponding code snippet, taken from <code>Model.cc</code>:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">Model</span><span class=\"o\">::</span><span class=\"n\">LoadPlugins</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"c1\">// Check to see if we need to load any model plugins</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetPluginCount</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Load the plugins.</span>\n    <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">pluginElem</span> <span class=\"o\">=</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;plugin&quot;</span><span class=\"p\">);</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">pluginElem</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">LoadPlugin</span><span class=\"p\">(</span><span class=\"n\">pluginElem</span><span class=\"p\">);</span>\n      <span class=\"n\">pluginElem</span> <span class=\"o\">=</span> <span class=\"n\">pluginElem</span><span class=\"o\">-&gt;</span><span class=\"n\">GetNextElement</span><span class=\"p\">(</span><span class=\"s\">&quot;plugin&quot;</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"k\">auto</span> <span class=\"o\">&amp;</span><span class=\"nl\">model</span> <span class=\"p\">:</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">models</span><span class=\"p\">)</span>\n    <span class=\"n\">model</span><span class=\"o\">-&gt;</span><span class=\"n\">LoadPlugins</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>What is the purpose of the waiting loop anyway?</p>", "type": "rendered"}, "created_on": "2018-11-30T03:19:37.368497+00:00", "user": {"display_name": "Alexander Schaefer", "uuid": "{9c59ad06-63f0-486d-ad3c-c8cf65fe3756}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9c59ad06-63f0-486d-ad3c-c8cf65fe3756%7D"}, "html": {"href": "https://bitbucket.org/%7B9c59ad06-63f0-486d-ad3c-c8cf65fe3756%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5c00a96dd272d71605b89456/edf41ba7-79dd-46e3-bc39-6ce444763436/128"}}, "nickname": "acschaefer", "type": "user", "account_id": "5c00a96dd272d71605b89456"}, "updated_on": null, "type": "issue_comment", "id": 49212701}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382/comments/53146358.json"}, "html": {"href": "#!/osrf/gazebo/issues/2382#comment-53146358"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382.json"}}, "type": "issue", "id": 2382, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sensors failed to initialize when loading model"}, "content": {"raw": "Hi there!!\n\nI have the same problem :disappointed: . I am trying to follow your advice guys but I am not able to see the [Model.cc](http://Model.cc) file in my physics folder.  I just have the Model.hh Could you please advice me what should I do to solve the problem. \n\nRegards;", "markup": "markdown", "html": "<p>Hi there!!</p>\n<p>I have the same problem <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f61e.png\" alt=\"\ud83d\ude1e\" title=\":disappointed:\" data-emoji-short-name=\":disappointed:\" /> . I am trying to follow your advice guys but I am not able to see the <a data-is-external-link=\"true\" href=\"http://Model.cc\" rel=\"nofollow\">Model.cc</a> file in my physics folder.  I just have the Model.hh Could you please advice me what should I do to solve the problem. </p>\n<p>Regards;</p>", "type": "rendered"}, "created_on": "2019-07-25T16:43:15.603535+00:00", "user": {"display_name": "Yaniel Carreno", "uuid": "{4b300aa0-e8f7-40ea-9a87-e2332f8e0394}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b300aa0-e8f7-40ea-9a87-e2332f8e0394%7D"}, "html": {"href": "https://bitbucket.org/%7B4b300aa0-e8f7-40ea-9a87-e2332f8e0394%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/593929ce833e3fc22f164643ef92db4dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYC-1.png"}}, "nickname": "yanielcarreno", "type": "user", "account_id": "557058:36c61a15-7d91-4120-8a4e-c724d77fc2b4"}, "updated_on": null, "type": "issue_comment", "id": 53146358}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382/comments/53146389.json"}, "html": {"href": "#!/osrf/gazebo/issues/2382#comment-53146389"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2382.json"}}, "type": "issue", "id": 2382, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Sensors failed to initialize when loading model"}, "content": {"raw": "btw I forgot to mention I have UIbuntu 16.04 and Gazebo 8. I installed them following the steps in this link\n\n[https://medium.com/@abhiksingla10/setting-up-ros-kinetic-and-gazebo-8-or-9-70f2231af21a](https://medium.com/@abhiksingla10/setting-up-ros-kinetic-and-gazebo-8-or-9-70f2231af21a)\n\nThanks in advance;\n\nYaniel", "markup": "markdown", "html": "<p>btw I forgot to mention I have UIbuntu 16.04 and Gazebo 8. I installed them following the steps in this link</p>\n<p><a data-is-external-link=\"true\" href=\"https://medium.com/@abhiksingla10/setting-up-ros-kinetic-and-gazebo-8-or-9-70f2231af21a\" rel=\"nofollow\">https://medium.com/@abhiksingla10/setting-up-ros-kinetic-and-gazebo-8-or-9-70f2231af21a</a></p>\n<p>Thanks in advance;</p>\n<p>Yaniel</p>", "type": "rendered"}, "created_on": "2019-07-25T16:45:25.133697+00:00", "user": {"display_name": "Yaniel Carreno", "uuid": "{4b300aa0-e8f7-40ea-9a87-e2332f8e0394}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b300aa0-e8f7-40ea-9a87-e2332f8e0394%7D"}, "html": {"href": "https://bitbucket.org/%7B4b300aa0-e8f7-40ea-9a87-e2332f8e0394%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/593929ce833e3fc22f164643ef92db4dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYC-1.png"}}, "nickname": "yanielcarreno", "type": "user", "account_id": "557058:36c61a15-7d91-4120-8a4e-c724d77fc2b4"}, "updated_on": null, "type": "issue_comment", "id": 53146389}], "page": 1, "size": 5}