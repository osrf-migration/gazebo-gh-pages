{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2323/comments/39082952.json"}, "html": {"href": "#!/osrf/gazebo/issues/2323#comment-39082952"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2323.json"}}, "type": "issue", "id": 2323, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DepthCamera::ConnectNewRGBPointCloud() produces malformed point clouds"}, "content": {"raw": "I finally got to set up vmware and test this in gazebo7. I can confirm that the `depth_points_map` shaders produce incorrect 3D point data. \n\nI did a quick fix:\n\n~~~\ndiff -r 5f41b719c1fe media/materials/programs/depth_points_map.frag\n--- a/media/materials/programs/depth_points_map.frag\tFri Jul 28 00:49:20 2017 +0000\n+++ b/media/materials/programs/depth_points_map.frag\tMon Aug 14 16:24:04 2017 -0700\n@@ -1,4 +1,4 @@\n-#version 130\n+#version 120\n \n uniform sampler2D tex;\n \n@@ -11,6 +11,7 @@\n {\n   //vec3 color = 255 * texture2D(tex, vec2(gl_FragCoord.s / width , gl_FragCoord.t / height)).xyz;\n   vec3 color = vec3(80, 0, 0);\n-  int rgb = int(color.r) << 16 | int(color.g) << 8 | int(color.b);\n-  gl_FragColor = vec4(point.xyz, rgb);\n+  // int rgb = int(color.r) << 16 | int(color.g) << 8 | int(color.b);\n+  int rgb = 1;\n+  gl_FragColor = vec4(point.z, -point.x, point.y, rgb);\n }\n~~~\n\nI downgraded glsl version and commented out the rgb bitwise operation (which only works in glsl 130), and that seems to have fixed the problem in vmware. The point cloud rgb value were already not valid before so I just set it to 1. I also updated the frame of the 3D points returned by this shader. Let me know if that looks to you and I'll create a PR with a test.", "markup": "markdown", "html": "<p>I finally got to set up vmware and test this in gazebo7. I can confirm that the <code>depth_points_map</code> shaders produce incorrect 3D point data. </p>\n<p>I did a quick fix:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 5f41b719c1fe media/materials/programs/depth_points_map.frag</span>\n<span class=\"gd\">--- a/media/materials/programs/depth_points_map.frag    Fri Jul 28 00:49:20 2017 +0000</span>\n<span class=\"gi\">+++ b/media/materials/programs/depth_points_map.frag    Mon Aug 14 16:24:04 2017 -0700</span>\n<span class=\"gu\">@@ -1,4 +1,4 @@</span>\n<span class=\"gd\">-#version 130</span>\n<span class=\"gi\">+#version 120</span>\n\n uniform sampler2D tex;\n\n<span class=\"gu\">@@ -11,6 +11,7 @@</span>\n {\n   //vec3 color = 255 * texture2D(tex, vec2(gl_FragCoord.s / width , gl_FragCoord.t / height)).xyz;\n   vec3 color = vec3(80, 0, 0);\n<span class=\"gd\">-  int rgb = int(color.r) &lt;&lt; 16 | int(color.g) &lt;&lt; 8 | int(color.b);</span>\n<span class=\"gd\">-  gl_FragColor = vec4(point.xyz, rgb);</span>\n<span class=\"gi\">+  // int rgb = int(color.r) &lt;&lt; 16 | int(color.g) &lt;&lt; 8 | int(color.b);</span>\n<span class=\"gi\">+  int rgb = 1;</span>\n<span class=\"gi\">+  gl_FragColor = vec4(point.z, -point.x, point.y, rgb);</span>\n }\n</pre></div>\n\n\n<p>I downgraded glsl version and commented out the rgb bitwise operation (which only works in glsl 130), and that seems to have fixed the problem in vmware. The point cloud rgb value were already not valid before so I just set it to 1. I also updated the frame of the 3D points returned by this shader. Let me know if that looks to you and I'll create a PR with a test.</p>", "type": "rendered"}, "created_on": "2017-08-14T23:34:00.838107+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 39082952}