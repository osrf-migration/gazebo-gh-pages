{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2323/comments/38948831.json"}, "html": {"href": "#!/osrf/gazebo/issues/2323#comment-38948831"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2323.json"}}, "type": "issue", "id": 2323, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DepthCamera::ConnectNewRGBPointCloud() produces malformed point clouds"}, "content": {"raw": "What's quite interesting is that I can see  the ```DepthSensor``` plugin references the Gazebo material ```Gazebo/XYZPoints``` defined in ```gazebo.material``` file (snippet included below). However, editing both the ```depth_points_map.vert``` and ```depth_points_map.frag``` files in the media path has zero effect on the outcome. The point cloud appears the same in all cases. It's almost as if its ignoring the two shaders completely when generating the point cloud...\n\n\n```\n#!txt\n\nvertex_program Gazebo/XYZPointsVS glsl\n{\n  source depth_points_map.vert\n}\n\nfragment_program Gazebo/XYZPointsFS glsl\n{\n  source depth_points_map.frag\n\n  default_params\n  {\n    param_named_auto width viewport_width\n    param_named_auto height viewport_height\n  }\n}\n\nmaterial Gazebo/XYZPoints\n{\n  technique\n  {\n    pass pcd_tex\n    {\n      separate_scene_blend one zero one zero\n\n      vertex_program_ref Gazebo/XYZPointsVS { }\n      fragment_program_ref Gazebo/XYZPointsFS { }\n    }\n  }\n}\n\n```", "markup": "markdown", "html": "<p>What's quite interesting is that I can see  the <code>DepthSensor</code> plugin references the Gazebo material <code>Gazebo/XYZPoints</code> defined in <code>gazebo.material</code> file (snippet included below). However, editing both the <code>depth_points_map.vert</code> and <code>depth_points_map.frag</code> files in the media path has zero effect on the outcome. The point cloud appears the same in all cases. It's almost as if its ignoring the two shaders completely when generating the point cloud...</p>\n<div class=\"codehilite language-txt\"><pre><span></span>vertex_program Gazebo/XYZPointsVS glsl\n{\n  source depth_points_map.vert\n}\n\nfragment_program Gazebo/XYZPointsFS glsl\n{\n  source depth_points_map.frag\n\n  default_params\n  {\n    param_named_auto width viewport_width\n    param_named_auto height viewport_height\n  }\n}\n\nmaterial Gazebo/XYZPoints\n{\n  technique\n  {\n    pass pcd_tex\n    {\n      separate_scene_blend one zero one zero\n\n      vertex_program_ref Gazebo/XYZPointsVS { }\n      fragment_program_ref Gazebo/XYZPointsFS { }\n    }\n  }\n}\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-08T02:02:29.643848+00:00", "user": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "updated_on": "2017-08-08T02:03:46.300574+00:00", "type": "issue_comment", "id": 38948831}