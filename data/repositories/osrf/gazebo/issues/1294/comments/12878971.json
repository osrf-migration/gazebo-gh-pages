{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1294/comments/12878971.json"}, "html": {"href": "#!/osrf/gazebo/issues/1294#comment-12878971"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1294.json"}}, "type": "issue", "id": 1294, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Inclusion of magnetic field strength sensor"}, "content": {"raw": "For CRATES I  have been using the world Magnetic and Geographical models from GeographicLib:\nhttps://bitbucket.org/asymingt/crates/src/ae976a3786cdf5a16cd30c663a7ac3d40b21b841/src/sim/src/plugins/world/Environment.cpp?at=master\n\nMy (clunky) solution was to attach a plugin to the world, siphon off the origin spherical coordinates / simulation time and broadcast realistic gravitational and magnetic vectors on the gazbeo transport. There's probably a neater way to do this, though. \n\nI am reluctant to suggest that we go for this degree of realism as the default Gazebo behaviour, because it would also introduce more dependencies and large geoid / parameter files. I think we should rather keep its behaviour along the same lines as gravity, and the more complex stuff can be added as a sensor plugin. \n\nI've forked gazebo master, and I'm coding up what I think is a nice way of doing things. I'll send through a pull request in the next couple of days. ", "markup": "markdown", "html": "<p>For CRATES I  have been using the world Magnetic and Geographical models from GeographicLib:\n<a href=\"https://bitbucket.org/asymingt/crates/src/ae976a3786cdf5a16cd30c663a7ac3d40b21b841/src/sim/src/plugins/world/Environment.cpp?at=master\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/asymingt/crates/src/ae976a3786cdf5a16cd30c663a7ac3d40b21b841/src/sim/src/plugins/world/Environment.cpp?at=master</a></p>\n<p>My (clunky) solution was to attach a plugin to the world, siphon off the origin spherical coordinates / simulation time and broadcast realistic gravitational and magnetic vectors on the gazbeo transport. There's probably a neater way to do this, though. </p>\n<p>I am reluctant to suggest that we go for this degree of realism as the default Gazebo behaviour, because it would also introduce more dependencies and large geoid / parameter files. I think we should rather keep its behaviour along the same lines as gravity, and the more complex stuff can be added as a sensor plugin. </p>\n<p>I've forked gazebo master, and I'm coding up what I think is a nice way of doing things. I'll send through a pull request in the next couple of days. </p>", "type": "rendered"}, "created_on": "2014-10-09T18:23:06.101122+00:00", "user": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "updated_on": "2014-10-09T18:23:38.463056+00:00", "type": "issue_comment", "id": 12878971}