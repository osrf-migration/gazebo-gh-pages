{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1294/comments/13073883.json"}, "html": {"href": "#!/osrf/gazebo/issues/1294#comment-13073883"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1294.json"}}, "type": "issue", "id": 1294, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Inclusion of magnetic field strength sensor"}, "content": {"raw": "I agree with @johmeyer about keeping the distinction between IMU and MAG sensors. We should give a decent default value (inclination and declination) for the magnetic field. Perhaps we can use the WMM2010-derived field strength at the OSRF office -- ```[5.5645 22.8758 -42.3884] microTesla``` -- for the time the sensor was added, and use that as a default value? This could easily be changed by a user in the world file. We could even write a short tutorial for the Gazebo wiki.\n\nFrom what I can tell, [hector_quadrotor](http://wiki.ros.org/hector_quadrotor) implements all quadrotor-specific sensors (GPS, IMU, barometric pressure, magnetometer) as ```ModelPlugin``` types. I can understand why this is the case for barometric pressure and magnetometer (these sensor types don't yet exist in Gazebo), but not for the GPS and IMU sensors, where a ```SensorPlugin``` type exist. Was there a reason for this design choice? Branching off from my comments in Issue #1285, would it not be a good overall design goal to integrate more sensor base types into SDF / Gazebo, with varying levels of complexity encoded as SensorPlugins.", "markup": "markdown", "html": "<p>I agree with @johmeyer about keeping the distinction between IMU and MAG sensors. We should give a decent default value (inclination and declination) for the magnetic field. Perhaps we can use the WMM2010-derived field strength at the OSRF office -- <code>[5.5645 22.8758 -42.3884] microTesla</code> -- for the time the sensor was added, and use that as a default value? This could easily be changed by a user in the world file. We could even write a short tutorial for the Gazebo wiki.</p>\n<p>From what I can tell, <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/hector_quadrotor\" rel=\"nofollow\">hector_quadrotor</a> implements all quadrotor-specific sensors (GPS, IMU, barometric pressure, magnetometer) as <code>ModelPlugin</code> types. I can understand why this is the case for barometric pressure and magnetometer (these sensor types don't yet exist in Gazebo), but not for the GPS and IMU sensors, where a <code>SensorPlugin</code> type exist. Was there a reason for this design choice? Branching off from my comments in Issue <a href=\"#!/osrf/gazebo/issues/1285/improve-sensor-noise-modeling\" rel=\"nofollow\" title=\"Improve sensor noise modeling\" class=\"ap-connect-link\">#1285</a>, would it not be a good overall design goal to integrate more sensor base types into SDF / Gazebo, with varying levels of complexity encoded as SensorPlugins.</p>", "type": "rendered"}, "created_on": "2014-10-19T12:56:00.963484+00:00", "user": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "updated_on": "2014-10-19T13:30:47.666693+00:00", "type": "issue_comment", "id": 13073883}