{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/427/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/427.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/427/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/427/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/427/sdf-geometry-enhancements"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/427/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "SDF geometry enhancements", "component": null, "votes": 2, "watches": 4, "content": {"raw": "A very common use case of SDF, involves links that have collision and visual elements that use the same geometry properties. Currently this involves duplicated information and manual synchronization. For example:\r\n~~~\r\n<link name=\"ball\">\r\n  <collision name=\"collision\">\r\n    <geometry>\r\n      <sphere>\r\n        <radius>1</radius>\r\n      </sphere>\r\n    </geometry>\r\n  </collision>\r\n  <visual name=\"visual\">\r\n    <geometry>\r\n      <sphere>\r\n        <radius>1</radius>\r\n      </sphere>\r\n    </geometry>\r\n    <material>\r\n      <script>Gazebo/Grey</script>\r\n    </material>\r\n  </visual>\r\n</link>\r\n~~~\r\n\r\nI propose allowing a <geometry> element as a child of <link> that can be referenced by <collision> and <visual> elements. The above example could be re-written as:\r\n\r\n~~~\r\n<link name=\"ball\">\r\n  <geometry name=\"geom\">\r\n    <sphere>\r\n      <radius>1</radius>\r\n    </sphere>\r\n  </geometry>\r\n  <collision name=\"collision\">\r\n    <geometry inherit_from=\"geom\"/>\r\n  </collision>\r\n  <visual name=\"visual\">\r\n    <geometry inherit_from=\"geom\"/>\r\n    <material>\r\n      <script>Gazebo/Grey</script>\r\n    </material>\r\n  </visual>\r\n</link>\r\n~~~\r\n\r\nI would also propose allowing the <inertia> tags to accept some geometry elements, which can be used to automatically compute the moment of inertia terms, assuming uniform density. For meshes, it could be based on the bounding box. For example, a ball with inertial parameters could be specified as:\r\n\r\n~~~\r\n<link name=\"ball\">\r\n  <geometry name=\"geom\">\r\n    <sphere>\r\n      <radius>1</radius>\r\n    </sphere>\r\n  </geometry>\r\n  <inertial>\r\n    <mass>1</mass>\r\n    <geometry inherit_from=\"geom\"/>\r\n  </inertial>\r\n  <collision name=\"collision\">\r\n    <geometry inherit_from=\"geom\"/>\r\n  </collision>\r\n  <visual name=\"visual\">\r\n    <geometry inherit_from=\"geom\"/>\r\n    <material>\r\n      <script>Gazebo/Grey</script>\r\n    </material>\r\n  </visual>\r\n</link>\r\n~~~\r\n\r\nOne could also imagine the utility of allowing <geometry> elements as children of <model> elements so that a stack of identical boxes could each inherit the same geometric properties.", "markup": "markdown", "html": "<p>A very common use case of SDF, involves links that have collision and visual elements that use the same geometry properties. Currently this involves duplicated information and manual synchronization. For example:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ball&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;geometry&gt;</span>\n      <span class=\"nt\">&lt;sphere&gt;</span>\n        <span class=\"nt\">&lt;radius&gt;</span>1<span class=\"nt\">&lt;/radius&gt;</span>\n      <span class=\"nt\">&lt;/sphere&gt;</span>\n    <span class=\"nt\">&lt;/geometry&gt;</span>\n  <span class=\"nt\">&lt;/collision&gt;</span>\n  <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;geometry&gt;</span>\n      <span class=\"nt\">&lt;sphere&gt;</span>\n        <span class=\"nt\">&lt;radius&gt;</span>1<span class=\"nt\">&lt;/radius&gt;</span>\n      <span class=\"nt\">&lt;/sphere&gt;</span>\n    <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;material&gt;</span>\n      <span class=\"nt\">&lt;script&gt;</span>Gazebo/Grey<span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;/material&gt;</span>\n  <span class=\"nt\">&lt;/visual&gt;</span>\n<span class=\"nt\">&lt;/link&gt;</span>\n</pre></div>\n\n\n<p>I propose allowing a &lt;geometry&gt; element as a child of &lt;link&gt; that can be referenced by &lt;collision&gt; and &lt;visual&gt; elements. The above example could be re-written as:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ball&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;geometry</span> <span class=\"na\">name=</span><span class=\"s\">&quot;geom&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;sphere&gt;</span>\n      <span class=\"nt\">&lt;radius&gt;</span>1<span class=\"nt\">&lt;/radius&gt;</span>\n    <span class=\"nt\">&lt;/sphere&gt;</span>\n  <span class=\"nt\">&lt;/geometry&gt;</span>\n  <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;geometry</span> <span class=\"na\">inherit_from=</span><span class=\"s\">&quot;geom&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/collision&gt;</span>\n  <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;geometry</span> <span class=\"na\">inherit_from=</span><span class=\"s\">&quot;geom&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;material&gt;</span>\n      <span class=\"nt\">&lt;script&gt;</span>Gazebo/Grey<span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;/material&gt;</span>\n  <span class=\"nt\">&lt;/visual&gt;</span>\n<span class=\"nt\">&lt;/link&gt;</span>\n</pre></div>\n\n\n<p>I would also propose allowing the &lt;inertia&gt; tags to accept some geometry elements, which can be used to automatically compute the moment of inertia terms, assuming uniform density. For meshes, it could be based on the bounding box. For example, a ball with inertial parameters could be specified as:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ball&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;geometry</span> <span class=\"na\">name=</span><span class=\"s\">&quot;geom&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;sphere&gt;</span>\n      <span class=\"nt\">&lt;radius&gt;</span>1<span class=\"nt\">&lt;/radius&gt;</span>\n    <span class=\"nt\">&lt;/sphere&gt;</span>\n  <span class=\"nt\">&lt;/geometry&gt;</span>\n  <span class=\"nt\">&lt;inertial&gt;</span>\n    <span class=\"nt\">&lt;mass&gt;</span>1<span class=\"nt\">&lt;/mass&gt;</span>\n    <span class=\"nt\">&lt;geometry</span> <span class=\"na\">inherit_from=</span><span class=\"s\">&quot;geom&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/inertial&gt;</span>\n  <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;geometry</span> <span class=\"na\">inherit_from=</span><span class=\"s\">&quot;geom&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/collision&gt;</span>\n  <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;geometry</span> <span class=\"na\">inherit_from=</span><span class=\"s\">&quot;geom&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;material&gt;</span>\n      <span class=\"nt\">&lt;script&gt;</span>Gazebo/Grey<span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;/material&gt;</span>\n  <span class=\"nt\">&lt;/visual&gt;</span>\n<span class=\"nt\">&lt;/link&gt;</span>\n</pre></div>\n\n\n<p>One could also imagine the utility of allowing &lt;geometry&gt; elements as children of &lt;model&gt; elements so that a stack of identical boxes could each inherit the same geometric properties.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-01-17T23:14:46.873768+00:00", "milestone": null, "updated_on": "2018-02-13T18:43:06.800260+00:00", "type": "issue", "id": 427}