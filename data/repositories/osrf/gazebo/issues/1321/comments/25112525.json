{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1321/comments/25112525.json"}, "html": {"href": "#!/osrf/gazebo/issues/1321#comment-25112525"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1321.json"}}, "type": "issue", "id": 1321, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Proper joint torque feedback"}, "content": {"raw": "For the sake of precision: [pull request #2110](#!/osrf/gazebo/pull-requests/2110/changed-the-calculation-of-force-torque-on) is a PR that is solving a bug that was reported in this issue, but it is not solving the issue itself. I will write a brief recap for people that does not want to read all the issue. \n\nTL;DR: This issue is about the simulation of joint torque sensors that measure the torque exerted by the output shaft of the transmission to the robot, i.e. the `joint torque`. This sensors are usually implemented by measuring the deformation of an elastic element mounted between the trasmission and the robot. This deformation can be measured using a pair of encoders (as in Valkyrie [1] or iCub [3] ) or using straingauge sensors (as in the DLR LWR [2]). Depending on the elasticity of the deformed element and its effect on the robot dynamics, it could make sense to explicitly model the elastic element in the simulation as a joint elasticity. In this case, the `joint torque` can then be obtained from simulation using the measure of the two simulated encoders [4][5]. If the elastic element is too stiff to be efficiently simulated, it would then make to get the `joint torques` directly from the physics engine as the difference between the torque given as input to the joint (the `motor torque`) and the friction torques.  \n\n\n\n[1] : http://www.me.utexas.edu/~hcrl/publications/JFR-Valkyrie-Actuator-Control-Final.pdf \n\n[2] : http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1014788\n\n[3] : http://pasa.lira.dist.unige.it/pasapdf/1245_Parmiggiani_etal2012.pdf\n\n[4] : https://github.com/robotology/gazebo-yarp-plugins/issues/192\n\n[5] : #!/osrf/gazebo/pull-request/735/create-spring-damper-in-joints-issue-845/diff#comment-671487\n", "markup": "markdown", "html": "<p>For the sake of precision: <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2110/changed-the-calculation-of-force-torque-on\" rel=\"nofollow\">pull request #2110</a> is a PR that is solving a bug that was reported in this issue, but it is not solving the issue itself. I will write a brief recap for people that does not want to read all the issue. </p>\n<p>TL;DR: This issue is about the simulation of joint torque sensors that measure the torque exerted by the output shaft of the transmission to the robot, i.e. the <code>joint torque</code>. This sensors are usually implemented by measuring the deformation of an elastic element mounted between the trasmission and the robot. This deformation can be measured using a pair of encoders (as in Valkyrie [1] or iCub [3] ) or using straingauge sensors (as in the DLR LWR [2]). Depending on the elasticity of the deformed element and its effect on the robot dynamics, it could make sense to explicitly model the elastic element in the simulation as a joint elasticity. In this case, the <code>joint torque</code> can then be obtained from simulation using the measure of the two simulated encoders [4][5]. If the elastic element is too stiff to be efficiently simulated, it would then make to get the <code>joint torques</code> directly from the physics engine as the difference between the torque given as input to the joint (the <code>motor torque</code>) and the friction torques.  </p>\n<p>[1] : <a href=\"http://www.me.utexas.edu/~hcrl/publications/JFR-Valkyrie-Actuator-Control-Final.pdf\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.me.utexas.edu/~hcrl/publications/JFR-Valkyrie-Actuator-Control-Final.pdf</a> </p>\n<p>[2] : <a href=\"http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1014788\" rel=\"nofollow\" class=\"ap-connect-link\">http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1014788</a></p>\n<p>[3] : <a href=\"http://pasa.lira.dist.unige.it/pasapdf/1245_Parmiggiani_etal2012.pdf\" rel=\"nofollow\" class=\"ap-connect-link\">http://pasa.lira.dist.unige.it/pasapdf/1245_Parmiggiani_etal2012.pdf</a></p>\n<p>[4] : <a href=\"https://github.com/robotology/gazebo-yarp-plugins/issues/192\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/robotology/gazebo-yarp-plugins/issues/192</a></p>\n<p>[5] : <a href=\"#!/osrf/gazebo/pull-request/735/create-spring-damper-in-joints-issue-845/diff#comment-671487\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-request/735/create-spring-damper-in-joints-issue-845/diff#comment-671487</a></p>", "type": "rendered"}, "created_on": "2016-01-30T17:44:26.940253+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2016-01-30T17:51:36.467374+00:00", "type": "issue_comment", "id": 25112525}