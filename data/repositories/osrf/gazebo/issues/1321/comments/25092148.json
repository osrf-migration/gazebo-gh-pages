{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1321/comments/25092148.json"}, "html": {"href": "#!/osrf/gazebo/issues/1321#comment-25092148"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1321.json"}}, "type": "issue", "id": 1321, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Proper joint torque feedback"}, "content": {"raw": "it's #!/osrf/gazebo/src/6e6665bf4ea289af724c87372e3d8d98c09aeca8/gazebo/physics/ode/ODEJoint.cc?at=default&fileviewer=file-view-default in line 656 and 657,\n```\n#!c++\n\n wrenchAppliedWorld.body2Torque =\n        this->GetForce(0u) * this->GetLocalAxis(0u);\n```\n the wrench according to the setted force is calculated in child link frame as it uses GetLocalAxis(), the negative value is set for the parent joint in line 663\n```\n#!c++\n\nwrenchAppliedWorld.body1Torque = -wrenchAppliedWorld.body2Torque;\n```\nand in line 825 this wrench is added to the overall result\n```\n#!c++\n\nthis->wrench = this->wrench - wrenchAppliedWorld;\n```\nbut the result is in the respective jointframes (see lines 711-717\n```\n#!c++\n\n// rotate resulting body2Force in world frame into link frame\n      this->wrench.body2Force = childPose.rot.RotateVectorReverse(\n        -this->wrench.body2Force);\n\n      // rotate resulting body2Torque in world frame into link frame\n      this->wrench.body2Torque = childPose.rot.RotateVectorReverse(\n        -this->wrench.body2Torque);\n```\nand lines 770-776\n```\n#!c++\n\n      // rotate resulting body1Force in world frame into link frame\n      this->wrench.body1Force = parentPose.rot.RotateVectorReverse(\n        -this->wrench.body1Force);\n\n      // rotate resulting body1Torque in world frame into link frame\n      this->wrench.body1Torque = parentPose.rot.RotateVectorReverse(\n        -this->wrench.body1Torque);\n```\n), which means in line 825 we add a torque expressed in child frame to a torque expressed in parent frame.", "markup": "markdown", "html": "<p>it's <a href=\"#!/osrf/gazebo/src/6e6665bf4ea289af724c87372e3d8d98c09aeca8/gazebo/physics/ode/ODEJoint.cc?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/6e6665bf4ea289af724c87372e3d8d98c09aeca8/gazebo/physics/ode/ODEJoint.cc?at=default&amp;fileviewer=file-view-default</a> in line 656 and 657,</p>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span> <span class=\"o\">=</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetForce</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLocalAxis</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>the wrench according to the setted force is calculated in child link frame as it uses GetLocalAxis(), the negative value is set for the parent joint in line 663</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body1Torque</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>and in line 825 this wrench is added to the overall result</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span> <span class=\"o\">-</span> <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>but the result is in the respective jointframes (see lines 711-717</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">// rotate resulting body2Force in world frame into link frame</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Force</span> <span class=\"o\">=</span> <span class=\"n\">childPose</span><span class=\"p\">.</span><span class=\"n\">rot</span><span class=\"p\">.</span><span class=\"n\">RotateVectorReverse</span><span class=\"p\">(</span>\n        <span class=\"o\">-</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Force</span><span class=\"p\">);</span>\n\n      <span class=\"c1\">// rotate resulting body2Torque in world frame into link frame</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span> <span class=\"o\">=</span> <span class=\"n\">childPose</span><span class=\"p\">.</span><span class=\"n\">rot</span><span class=\"p\">.</span><span class=\"n\">RotateVectorReverse</span><span class=\"p\">(</span>\n        <span class=\"o\">-</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>and lines 770-776</p>\n<div class=\"codehilite language-c++\"><pre><span></span>      <span class=\"c1\">// rotate resulting body1Force in world frame into link frame</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body1Force</span> <span class=\"o\">=</span> <span class=\"n\">parentPose</span><span class=\"p\">.</span><span class=\"n\">rot</span><span class=\"p\">.</span><span class=\"n\">RotateVectorReverse</span><span class=\"p\">(</span>\n        <span class=\"o\">-</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body1Force</span><span class=\"p\">);</span>\n\n      <span class=\"c1\">// rotate resulting body1Torque in world frame into link frame</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body1Torque</span> <span class=\"o\">=</span> <span class=\"n\">parentPose</span><span class=\"p\">.</span><span class=\"n\">rot</span><span class=\"p\">.</span><span class=\"n\">RotateVectorReverse</span><span class=\"p\">(</span>\n        <span class=\"o\">-</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body1Torque</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>), which means in line 825 we add a torque expressed in child frame to a torque expressed in parent frame.</p>", "type": "rendered"}, "created_on": "2016-01-29T14:18:50.773466+00:00", "user": {"display_name": "Jonathan Vorndamme", "uuid": "{514987f5-ddb9-4e64-9cb0-498fc6431077}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B514987f5-ddb9-4e64-9cb0-498fc6431077%7D"}, "html": {"href": "https://bitbucket.org/%7B514987f5-ddb9-4e64-9cb0-498fc6431077%7D/"}, "avatar": {"href": "https://bitbucket.org/account/vorndamme/avatar/"}}, "nickname": "vorndamme", "type": "user", "account_id": null}, "updated_on": "2016-01-29T15:08:07.394768+00:00", "type": "issue_comment", "id": 25092148}