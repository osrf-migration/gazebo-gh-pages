{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1321/comments/20728611.json"}, "html": {"href": "#!/osrf/gazebo/issues/1321#comment-20728611"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1321.json"}}, "type": "issue", "id": 1321, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Proper joint torque feedback"}, "content": {"raw": "@Stefan_Kohlbrecher\n Actually I did not progress further on this issue. \n\nCurrently we are simulating the low level torque control with just a simple call to `Joint::SetForce()`, even if in our real robot (the iCub humanoid) we have a joint torque control with \nfeedforward friction compensation and a feedback control closed on a measurement of the `joint torque`. \n\nAnyway I worked a bit on implementing some new tests for the `Joint::GetForceTorque()` as part of the implementation of fixed joints (in #!/osrf/gazebo/pull-requests/1747/support-for-fixed-joints/diff). \nUnfortunatly all this tests are in conditions where the bodies don't move. To actually asses the behaviour of  `Joint::GetForceTorque()` for getting `joint torques` the easiest way would be to set up a simple test scenario of a moving joint, for example a classical pendulum rigidly connected to the world in zero gravity. In that case we could control the joint to spin at constant velocity, and in this simple case we would know the analytical values for viscous friction, coulomb friction (and consequently `motor torque` and `joint torque`) and we could check the value returned by `Joint::GetForceTorque()`. Unfortunatly at the moment I don't have time to do this in the short term, but I would be happy to help if you want try to implement such a test. \n\nAnyway I saw that there is an ongoing gazebo_design document related to simulate transmission and motor properties at #!/osrf/gazebo_design/branch/transmission . I don't know if OSRF folks are already happy to receive a feedback on it, but it is definitly relevant to this issue. \n\nFYI, we are also tryng to understand to which extend we could simulate SEA joint torque control with the existing gazebo infrastructure, our (downstream) issue relevant to this topic is : https://github.com/robotology/gazebo-yarp-plugins/issues/192 .", "markup": "markdown", "html": "<p>@Stefan_Kohlbrecher\n Actually I did not progress further on this issue. </p>\n<p>Currently we are simulating the low level torque control with just a simple call to <code>Joint::SetForce()</code>, even if in our real robot (the iCub humanoid) we have a joint torque control with \nfeedforward friction compensation and a feedback control closed on a measurement of the <code>joint torque</code>. </p>\n<p>Anyway I worked a bit on implementing some new tests for the <code>Joint::GetForceTorque()</code> as part of the implementation of fixed joints (in <a href=\"#!/osrf/gazebo/pull-requests/1747/support-for-fixed-joints/diff\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/1747/support-for-fixed-joints/diff</a>). \nUnfortunatly all this tests are in conditions where the bodies don't move. To actually asses the behaviour of  <code>Joint::GetForceTorque()</code> for getting <code>joint torques</code> the easiest way would be to set up a simple test scenario of a moving joint, for example a classical pendulum rigidly connected to the world in zero gravity. In that case we could control the joint to spin at constant velocity, and in this simple case we would know the analytical values for viscous friction, coulomb friction (and consequently <code>motor torque</code> and <code>joint torque</code>) and we could check the value returned by <code>Joint::GetForceTorque()</code>. Unfortunatly at the moment I don't have time to do this in the short term, but I would be happy to help if you want try to implement such a test. </p>\n<p>Anyway I saw that there is an ongoing gazebo_design document related to simulate transmission and motor properties at <a href=\"#!/osrf/gazebo_design/branch/transmission\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo_design/branch/transmission</a> . I don't know if OSRF folks are already happy to receive a feedback on it, but it is definitly relevant to this issue. </p>\n<p>FYI, we are also tryng to understand to which extend we could simulate SEA joint torque control with the existing gazebo infrastructure, our (downstream) issue relevant to this topic is : <a href=\"https://github.com/robotology/gazebo-yarp-plugins/issues/192\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/robotology/gazebo-yarp-plugins/issues/192</a> .</p>", "type": "rendered"}, "created_on": "2015-08-06T08:43:06.449892+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2015-08-06T08:45:53.870702+00:00", "type": "issue_comment", "id": 20728611}