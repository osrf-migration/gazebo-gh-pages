{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2488/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2488.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2488/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2488/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2488/issue-moving-static-object-in-gazebo-70"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2488/vote"}}, "reporter": {"display_name": "Fabricio Emder", "uuid": "{4b27e2b8-768a-48bc-9ea1-4e27c0ba4009}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b27e2b8-768a-48bc-9ea1-4e27c0ba4009%7D"}, "html": {"href": "https://bitbucket.org/%7B4b27e2b8-768a-48bc-9ea1-4e27c0ba4009%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8912e7da-a655-4a90-8791-b5a103b56580/0ac4377d-89a1-4fa1-9ff1-eb0664ce7007/128"}}, "nickname": "creativa_femder", "type": "user", "account_id": "557058:8912e7da-a655-4a90-8791-b5a103b56580"}, "title": "Issue moving static object in Gazebo 7.0 and Gazebo 8.4.", "component": null, "votes": 1, "watches": 3, "content": {"raw": "I am using Gazebo 7.0 and Gazebo 8.4 for a project where we need to move static object with this command:\r\n\r\n```\r\n#!bash\r\n\r\nrosservice call /gazebo/set_model_state '{model_state: { model_name:model_name_0, pose: { position: { x: 2, y: 0 , z: 0.5 }, orientation: {x: 0, y: 0, z: 0, w: 0 } }, twist: { linear: {x: 0.0 , y: 0 ,z: 0 } , angular: { x: 0.0 , y: 0 , z: 0.0 } } , reference_frame: world } }'\r\n```\r\nWhen the objects are not static, the ros service works ok. But objects have weird behaviors when they are static. The gazebo GUI and Physics engine have synchronization problems when we use ```rosservice call /gazebo/set_model_state```. If we move the models from the GUI using the mouse we don't have any problems. \r\n\r\nThe problems that I have when I use this command with static object you can see in the following.\r\n\r\n![box1.gif](data/bitbucket.org/repo/jgXqbo/images/369896519-box1.gif)\r\n\r\nIn the command I change x between 2 and -2. The weird part is that I can select the object and see the collision and the inertial all the time in -2, but as you see in the gif.\r\n\r\nIn the following gif, a static box is above the dynamic box, but Gazebo doesn\u2019t show it that way. Again, there\u2019s a mismatch between what Gazebo is showing and what the physics engine is doing.\r\n\r\n![box5.gif](data/bitbucket.org/repo/jgXqbo/images/1759789163-box5.gif)\r\n\r\nOther more thing. I tried to change the static flag from a world plugin with model method and if the model starts as static and then I change it to dynamic, Gazebo GUI shows the change in the flag but the physics engine still takes it as static. We have the same problems if the model starts as dynamic; we can\u2019t change it to static.\r\n\r\nThe last thing. Trying to create the gift for this issue. I discover that this happens when I am using a ray plugin. In this case [hokuyo sensor](#!/osrf/gazebo_models/src/6cd587c0a30e/hokuyo/model.sdf?at=default).", "markup": "markdown", "html": "<p>I am using Gazebo 7.0 and Gazebo 8.4 for a project where we need to move static object with this command:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>rosservice call /gazebo/set_model_state <span class=\"s1\">&#39;{model_state: { model_name:model_name_0, pose: { position: { x: 2, y: 0 , z: 0.5 }, orientation: {x: 0, y: 0, z: 0, w: 0 } }, twist: { linear: {x: 0.0 , y: 0 ,z: 0 } , angular: { x: 0.0 , y: 0 , z: 0.0 } } , reference_frame: world } }&#39;</span>\n</pre></div>\n\n\n<p>When the objects are not static, the ros service works ok. But objects have weird behaviors when they are static. The gazebo GUI and Physics engine have synchronization problems when we use <code>rosservice call /gazebo/set_model_state</code>. If we move the models from the GUI using the mouse we don't have any problems. </p>\n<p>The problems that I have when I use this command with static object you can see in the following.</p>\n<p><img alt=\"box1.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/369896519-box1.gif\" /></p>\n<p>In the command I change x between 2 and -2. The weird part is that I can select the object and see the collision and the inertial all the time in -2, but as you see in the gif.</p>\n<p>In the following gif, a static box is above the dynamic box, but Gazebo doesn\u2019t show it that way. Again, there\u2019s a mismatch between what Gazebo is showing and what the physics engine is doing.</p>\n<p><img alt=\"box5.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/1759789163-box5.gif\" /></p>\n<p>Other more thing. I tried to change the static flag from a world plugin with model method and if the model starts as static and then I change it to dynamic, Gazebo GUI shows the change in the flag but the physics engine still takes it as static. We have the same problems if the model starts as dynamic; we can\u2019t change it to static.</p>\n<p>The last thing. Trying to create the gift for this issue. I discover that this happens when I am using a ray plugin. In this case <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/src/6cd587c0a30e/hokuyo/model.sdf?at=default\" rel=\"nofollow\">hokuyo sensor</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-06-27T21:57:35.401518+00:00", "milestone": null, "updated_on": "2018-06-28T14:09:43.676726+00:00", "type": "issue", "id": 2488}