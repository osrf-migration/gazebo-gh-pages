{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/354/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/354.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/354/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/354/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/354/setforce-settorque-in-class-odelink-point"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/354/vote"}}, "reporter": {"display_name": "Johannes Meyer", "uuid": "{58d19163-cefc-479b-b80a-d78fb811b533}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B58d19163-cefc-479b-b80a-d78fb811b533%7D"}, "html": {"href": "https://bitbucket.org/%7B58d19163-cefc-479b-b80a-d78fb811b533%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1363fb056a859ce072c21fdb8da3a710d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJM-6.png"}}, "nickname": "johmeyer", "type": "user", "account_id": "557058:7237c8c3-e637-4ea0-ab9c-d45f303d8fb9"}, "title": "SetForce/SetTorque in class ODELink / Point of application of forces and torques", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 3, "watches": 9, "content": {"raw": "I posted this issue a while ago in the old Trac system on code.ros.org (see [here](https://code.ros.org/trac/ros-pkg/ticket/5573)). As there was no reaction until now and it does not only affect the simulator_gazebo package for ROS, I repost it here:\r\n\r\n> I am using the released version 1.6.16 of ros-fuerte-simulator-gazebo.\r\n\r\n> The [gazebo_ros_force](https://code.ros.org/svn/ros-pkg/stacks/simulator_gazebo/trunk/gazebo_plugins/src/gazebo_ros_force.cpp) plugin calls the SetForce() and SetTorque() methods to apply a wrench to a given link in Gazebo, which is forwarded to dBodySetForce/dBodySetTorque in [ODELink.cc](#!/osrf/gazebo/src/d50d145f8639646720c5c1738bc74b0645614e18/gazebo/physics/ode/ODELink.cc?at=default#cl-376). According to the ODE API documentation the method dBodySetForce is \"mostly useful to zero the force and torque for deactivated bodies before they are reactivated\". I wonder if the lines should be replaced by AddForce()/AddTorque() or AddRelativeForce()/AddRelativeTorque(), what seems to be much more useful to me. Additionally, the result of SetForce/SetTorque calls is totally undetermined unless the exact plugin execution order is known.\r\n> \r\n> The following related problem affects Gazebo itself, not only the gazebo_plugins package. Perhaps I should rather report it on Bitbucket?\r\n> \r\n> I stumbled accross the fact, that ODE's dBodyAddForce/dBodyAddRelForce functions apply the force at the body's center of gravity, not at its origin, which led to a faulty simulation of aerodynamic drag and propulsion in our  [hector_quadrotor_controller](http://ros.org/wiki/hector_quadrotor_controller) package (see [http://ode-wiki.org/wiki/index.php?title=HOWTO_damping#Aerodynamic_Drag](http://ode-wiki.org/wiki/index.php?title=HOWTO_damping#Aerodynamic_Drag) for reference). IMHO this should be documented more clearly in the API documentation, because its not what I would have expected. Additionally, I think AddForce() is used incorrectly in the VehiclePlugin that comes with Gazebo in this case.\r\n\r\nNote that dBodyAddForceAtRelPos() also adds forces relative to the center of mass, too, not relative to the origin of the body.", "markup": "markdown", "html": "<p>I posted this issue a while ago in the old Trac system on code.ros.org (see <a data-is-external-link=\"true\" href=\"https://code.ros.org/trac/ros-pkg/ticket/5573\" rel=\"nofollow\">here</a>). As there was no reaction until now and it does not only affect the simulator_gazebo package for ROS, I repost it here:</p>\n<blockquote>\n<p>I am using the released version 1.6.16 of ros-fuerte-simulator-gazebo.</p>\n<p>The <a data-is-external-link=\"true\" href=\"https://code.ros.org/svn/ros-pkg/stacks/simulator_gazebo/trunk/gazebo_plugins/src/gazebo_ros_force.cpp\" rel=\"nofollow\">gazebo_ros_force</a> plugin calls the SetForce() and SetTorque() methods to apply a wrench to a given link in Gazebo, which is forwarded to dBodySetForce/dBodySetTorque in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d50d145f8639646720c5c1738bc74b0645614e18/gazebo/physics/ode/ODELink.cc?at=default#cl-376\" rel=\"nofollow\">ODELink.cc</a>. According to the ODE API documentation the method dBodySetForce is \"mostly useful to zero the force and torque for deactivated bodies before they are reactivated\". I wonder if the lines should be replaced by AddForce()/AddTorque() or AddRelativeForce()/AddRelativeTorque(), what seems to be much more useful to me. Additionally, the result of SetForce/SetTorque calls is totally undetermined unless the exact plugin execution order is known.</p>\n<p>The following related problem affects Gazebo itself, not only the gazebo_plugins package. Perhaps I should rather report it on Bitbucket?</p>\n<p>I stumbled accross the fact, that ODE's dBodyAddForce/dBodyAddRelForce functions apply the force at the body's center of gravity, not at its origin, which led to a faulty simulation of aerodynamic drag and propulsion in our  <a data-is-external-link=\"true\" href=\"http://ros.org/wiki/hector_quadrotor_controller\" rel=\"nofollow\">hector_quadrotor_controller</a> package (see <a data-is-external-link=\"true\" href=\"http://ode-wiki.org/wiki/index.php?title=HOWTO_damping#Aerodynamic_Drag\" rel=\"nofollow\">http://ode-wiki.org/wiki/index.php?title=HOWTO_damping#Aerodynamic_Drag</a> for reference). IMHO this should be documented more clearly in the API documentation, because its not what I would have expected. Additionally, I think AddForce() is used incorrectly in the VehiclePlugin that comes with Gazebo in this case.</p>\n</blockquote>\n<p>Note that dBodyAddForceAtRelPos() also adds forces relative to the center of mass, too, not relative to the origin of the body.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-01-09T22:59:01.410305+00:00", "milestone": null, "updated_on": "2016-09-14T19:39:16.654914+00:00", "type": "issue", "id": 354}