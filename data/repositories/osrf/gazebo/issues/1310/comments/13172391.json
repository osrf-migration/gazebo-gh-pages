{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1310/comments/13172391.json"}, "html": {"href": "#!/osrf/gazebo/issues/1310#comment-13172391"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1310.json"}}, "type": "issue", "id": 1310, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Cannot change SDF model name prior to insertion in world"}, "content": {"raw": "So, the issue seems to be that ```sdf::readFile``` fails to parse the SDF file, or I don't know how to use it properly. I confirmed this by loading the model file manually with ```std::ifstream``` and ```SDF::SetFromString```. The following snippet works:\n\n```c++\n/// Open the file and copy content to a string, avoiding continuous reallocation\nstd::string filename = common::ModelDatabase::Instance()->GetModelFile(\"model://beer\");\nstd::ifstream fh(filename.c_str());\nstd::string str;\nfh.seekg(0, std::ios::end);\nstr.reserve(fh.tellg());\nfh.seekg(0, std::ios::beg);\nstr.assign((std::istreambuf_iterator<char>(fh)),std::istreambuf_iterator<char>());\nfh.close();\n\n// Create SDF, modify model name\nsdf::SDF tmp;\ntmp.SetFromString(str);\nsdf::ElementPtr model = tmp.root->GetElement(\"model\");\nmodel->GetAttribute(\"name\")->SetFromString(\"my_beer\");\n\n// Insert modified model into world\nthis->worldPtr->InsertModelSDF(tmp);\n```", "markup": "markdown", "html": "<p>So, the issue seems to be that <code>sdf::readFile</code> fails to parse the SDF file, or I don't know how to use it properly. I confirmed this by loading the model file manually with <code>std::ifstream</code> and <code>SDF::SetFromString</code>. The following snippet works:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">/// Open the file and copy content to a string, avoiding continuous reallocation</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">ModelDatabase</span><span class=\"o\">::</span><span class=\"n\">Instance</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModelFile</span><span class=\"p\">(</span><span class=\"s\">&quot;model://beer&quot;</span><span class=\"p\">);</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">ifstream</span> <span class=\"n\">fh</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">());</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">str</span><span class=\"p\">;</span>\n<span class=\"n\">fh</span><span class=\"p\">.</span><span class=\"n\">seekg</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">ios</span><span class=\"o\">::</span><span class=\"n\">end</span><span class=\"p\">);</span>\n<span class=\"n\">str</span><span class=\"p\">.</span><span class=\"n\">reserve</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">.</span><span class=\"n\">tellg</span><span class=\"p\">());</span>\n<span class=\"n\">fh</span><span class=\"p\">.</span><span class=\"n\">seekg</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">ios</span><span class=\"o\">::</span><span class=\"n\">beg</span><span class=\"p\">);</span>\n<span class=\"n\">str</span><span class=\"p\">.</span><span class=\"n\">assign</span><span class=\"p\">((</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">istreambuf_iterator</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">)),</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">istreambuf_iterator</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"p\">());</span>\n<span class=\"n\">fh</span><span class=\"p\">.</span><span class=\"n\">close</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Create SDF, modify model name</span>\n<span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDF</span> <span class=\"n\">tmp</span><span class=\"p\">;</span>\n<span class=\"n\">tmp</span><span class=\"p\">.</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">);</span>\n<span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">tmp</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;model&quot;</span><span class=\"p\">);</span>\n<span class=\"n\">model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetAttribute</span><span class=\"p\">(</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span><span class=\"s\">&quot;my_beer&quot;</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Insert modified model into world</span>\n<span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">worldPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">InsertModelSDF</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">);</span>\n</pre></div>", "type": "rendered"}, "created_on": "2014-10-23T17:11:38.106428+00:00", "user": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "updated_on": null, "type": "issue_comment", "id": 13172391}