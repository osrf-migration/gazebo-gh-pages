{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2257/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2257.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2257/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2257/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2257/odejoint-implicit-joint-damping-disables"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2257/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "ODEJoint: implicit joint damping disables joint friction in between joint limits", "component": {"name": "physics::ODEPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122883.json"}}}, "votes": 2, "watches": 3, "content": {"raw": "I recently discovered that implicit linear joint damping in ODE disables joint friction (the hands of the Valkyrie robot in the Space Robotics Challenge use both). We are using a [powered joint motor to implement joint friction](#!/osrf/gazebo/src/9638498602afec516eefcdd8277adae48bce40b5/gazebo/physics/ode/ODEJoint.cc?fileviewer=file-view-default#ODEJoint.cc-446), and implicit linear joint damping uses a [soft constraint with coincident upper and lower position limits](#!/osrf/gazebo/src/9638498602afec516eefcdd8277adae48bce40b5/gazebo/physics/ode/ODEJoint.cc?fileviewer=file-view-default#ODEJoint.cc-933). The following line of code inside ODE's [joint.cpp](#!/osrf/gazebo/src/4e250e782cf04f70d2db6ad885a59bf6186691af/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-625) turns off the joint motor when the joint is limited high and low simultaneously. We should add a test to confirm this behavior.\r\n\r\nThere are a few options for changing this:\r\n\r\n* add a parameter called `limit_friction`, which is joint friction that only acts when the joint is past its limits (this is currently how it works now)\r\n\r\n* only use explicit damping when the joint motor is in use", "markup": "markdown", "html": "<p>I recently discovered that implicit linear joint damping in ODE disables joint friction (the hands of the Valkyrie robot in the Space Robotics Challenge use both). We are using a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/9638498602afec516eefcdd8277adae48bce40b5/gazebo/physics/ode/ODEJoint.cc?fileviewer=file-view-default#ODEJoint.cc-446\" rel=\"nofollow\">powered joint motor to implement joint friction</a>, and implicit linear joint damping uses a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/9638498602afec516eefcdd8277adae48bce40b5/gazebo/physics/ode/ODEJoint.cc?fileviewer=file-view-default#ODEJoint.cc-933\" rel=\"nofollow\">soft constraint with coincident upper and lower position limits</a>. The following line of code inside ODE's <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/4e250e782cf04f70d2db6ad885a59bf6186691af/deps/opende/src/joints/joint.cpp?at=default&amp;fileviewer=file-view-default#joint.cpp-625\" rel=\"nofollow\">joint.cpp</a> turns off the joint motor when the joint is limited high and low simultaneously. We should add a test to confirm this behavior.</p>\n<p>There are a few options for changing this:</p>\n<ul>\n<li>\n<p>add a parameter called <code>limit_friction</code>, which is joint friction that only acts when the joint is past its limits (this is currently how it works now)</p>\n</li>\n<li>\n<p>only use explicit damping when the joint motor is in use</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-04-20T01:12:07.898849+00:00", "milestone": null, "updated_on": "2017-04-20T01:12:07.898849+00:00", "type": "issue", "id": 2257}