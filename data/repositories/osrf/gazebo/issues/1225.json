{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1225/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1225.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1225/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1225/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1225/contactmanager-needs-to-call-clear"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1225/vote"}}, "reporter": {"display_name": "Andrei Haidu", "uuid": "{825ae8d9-4737-437d-9090-c0b932f32bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D"}, "html": {"href": "https://bitbucket.org/%7B825ae8d9-4737-437d-9090-c0b932f32bf2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1a5e83c62729680f092d723cd0bf4c57d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-4.png"}}, "nickname": "ahaidu", "type": "user", "account_id": "557058:7ed02d0b-401c-4f0c-8500-f87172d5477d"}, "title": "ContactManager needs to call Clear() manually to get rid of old contacts.", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Hi there,\r\n\r\nI noticed that the contact manager holds on to older contacts even though they are not present anymore. As a workaround I always call ContactManager::Clear() to reset all contacts.\r\n\r\nHere is a function to test the behavior, try it with and without calling Clear().\r\nIn order to start contact publishing set the Contact View mode to On: View->Contacts\r\n  \r\n```\r\n#!c++\r\n//////////////////////////////////////////////////\r\nvoid MyClass::DebugOutput(std::string _msg)\r\n{\r\n\tstd::cout << _msg << std::endl;\r\n\r\n\t// get the contact manager\r\n\tphysics::ContactManager* contact_manager = this->world->GetPhysicsEngine()->GetContactManager();\r\n\r\n\tstd::vector<physics::Contact*> contacts = contact_manager->GetContacts();\r\n\r\n\tfor (unsigned int i = 0; i < contacts.size(); i++)\r\n\t{\r\n\t\tphysics::Collision* coll1 = contacts.at(i)->collision1;\r\n\t\tphysics::Collision* coll2 = contacts.at(i)->collision2;\r\n\r\n\t\tstd::cout << coll1->GetName() << \" --> \"<< coll2->GetName() << std::endl;\r\n\t}\r\n\r\n\tcontact_manager->Clear();\r\n}\r\n\r\n```", "markup": "markdown", "html": "<p>Hi there,</p>\n<p>I noticed that the contact manager holds on to older contacts even though they are not present anymore. As a workaround I always call ContactManager::Clear() to reset all contacts.</p>\n<p>Here is a function to test the behavior, try it with and without calling Clear().\nIn order to start contact publishing set the Contact View mode to On: View-&gt;Contacts</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">//////////////////////////////////////////////////</span>\n<span class=\"kt\">void</span> <span class=\"n\">MyClass</span><span class=\"o\">::</span><span class=\"n\">DebugOutput</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">_msg</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_msg</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n\n    <span class=\"c1\">// get the contact manager</span>\n    <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ContactManager</span><span class=\"o\">*</span> <span class=\"n\">contact_manager</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetPhysicsEngine</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GetContactManager</span><span class=\"p\">();</span>\n\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Contact</span><span class=\"o\">*&gt;</span> <span class=\"n\">contacts</span> <span class=\"o\">=</span> <span class=\"n\">contact_manager</span><span class=\"o\">-&gt;</span><span class=\"n\">GetContacts</span><span class=\"p\">();</span>\n\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Collision</span><span class=\"o\">*</span> <span class=\"n\">coll1</span> <span class=\"o\">=</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">collision1</span><span class=\"p\">;</span>\n        <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Collision</span><span class=\"o\">*</span> <span class=\"n\">coll2</span> <span class=\"o\">=</span> <span class=\"n\">contacts</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">collision2</span><span class=\"p\">;</span>\n\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">coll1</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; --&gt; &quot;</span><span class=\"o\">&lt;&lt;</span> <span class=\"n\">coll2</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">contact_manager</span><span class=\"o\">-&gt;</span><span class=\"n\">Clear</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "3.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/100247.json"}}}, "edited_on": null, "created_on": "2014-07-11T08:13:58.840449+00:00", "milestone": null, "updated_on": "2016-06-23T23:40:34.627462+00:00", "type": "issue", "id": 1225}