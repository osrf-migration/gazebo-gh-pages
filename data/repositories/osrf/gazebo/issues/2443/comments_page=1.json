{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443/comments/43986435.json"}, "html": {"href": "#!/osrf/gazebo/issues/2443#comment-43986435"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443.json"}}, "type": "issue", "id": 2443, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DART interface incompatibility and gazebo crashed after insert some model"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2018-03-18T13:44:49.777598+00:00", "user": {"display_name": "Jack Liu", "uuid": "{81945f98-d7ff-46f8-a856-bcfe6bcce018}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B81945f98-d7ff-46f8-a856-bcfe6bcce018%7D"}, "html": {"href": "https://bitbucket.org/%7B81945f98-d7ff-46f8-a856-bcfe6bcce018%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17e5b42085cfb1e0593692b4e30e9ed6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jacknlliu", "type": "user", "account_id": "557058:4ff52431-cce6-42f3-bf55-fefe6d5678ce"}, "updated_on": null, "type": "issue_comment", "id": 43986435}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443/comments/46831366.json"}, "html": {"href": "#!/osrf/gazebo/issues/2443#comment-46831366"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443.json"}}, "type": "issue", "id": 2443, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DART interface incompatibility and gazebo crashed after insert some model"}, "content": {"raw": "I've encountered the same issue. After inserting a PR2 with simulation paused multiple errors showed up, and after resuming the simulation Gazebo became unresponsive and crashed/terminated after few seconds.\n\nGazebo 9.2.0 (from branch `gazebo9`, changeset `37202:72786dfbd2cf`), built with DART 6.5 as present in dartsim's PPA. Up-to-date Ubuntu 18.04.\n\nFull output of `gazebo -e dart --verbose`: https://pastebin.com/wsMW7M2Y\n\nSidenote: inserting static objects (e.g. cube or gazebo) doesn't yield any errors at all and inserting a Cessna C172 yields only a handful of errors like this: `[Err] [DARTJoint.cc:188] DARTJoint: SetAnchor is not implemented.` Other objects that crashed Gazebo:\n\n* Polaris Ranger\n* Turtlebot (though Gazebo was responsive-ish before crashing)", "markup": "markdown", "html": "<p>I've encountered the same issue. After inserting a PR2 with simulation paused multiple errors showed up, and after resuming the simulation Gazebo became unresponsive and crashed/terminated after few seconds.</p>\n<p>Gazebo 9.2.0 (from branch <code>gazebo9</code>, changeset <code>37202:72786dfbd2cf</code>), built with DART 6.5 as present in dartsim's PPA. Up-to-date Ubuntu 18.04.</p>\n<p>Full output of <code>gazebo -e dart --verbose</code>: <a href=\"https://pastebin.com/wsMW7M2Y\" rel=\"nofollow\" class=\"ap-connect-link\">https://pastebin.com/wsMW7M2Y</a></p>\n<p>Sidenote: inserting static objects (e.g. cube or gazebo) doesn't yield any errors at all and inserting a Cessna C172 yields only a handful of errors like this: <code>[Err] [DARTJoint.cc:188] DARTJoint: SetAnchor is not implemented.</code> Other objects that crashed Gazebo:</p>\n<ul>\n<li>Polaris Ranger</li>\n<li>Turtlebot (though Gazebo was responsive-ish before crashing)</li>\n</ul>", "type": "rendered"}, "created_on": "2018-07-19T16:28:41.166555+00:00", "user": {"display_name": "mjbogusz", "uuid": "{1ead58d6-6208-47f8-986f-84edb5efe4ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D"}, "html": {"href": "https://bitbucket.org/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/90af9e84d0be92380217e7caa1720fa5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-0.png"}}, "nickname": "mjbogusz", "type": "user", "account_id": "557058:29c4e542-c7f0-40b1-89a9-544f21e6bd52"}, "updated_on": "2018-07-19T16:28:54.746743+00:00", "type": "issue_comment", "id": 46831366}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443/comments/46979509.json"}, "html": {"href": "#!/osrf/gazebo/issues/2443#comment-46979509"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443.json"}}, "type": "issue", "id": 2443, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DART interface incompatibility and gazebo crashed after insert some model"}, "content": {"raw": "Just an additional note: I've prepared a catkin workspace with Dart and Gazebo and checked different versions in different combinations, all with the same result as above.\n\nChecked versions:\n\n* Dart: from 6.3 (the earliest available release from 6.x tree) up to 6.6 (prerelease)\n* Gazebo: 9.0.0, 9.1.1, 9.2.0 (from main gazebo9 branch). Default is not compiling for me.", "markup": "markdown", "html": "<p>Just an additional note: I've prepared a catkin workspace with Dart and Gazebo and checked different versions in different combinations, all with the same result as above.</p>\n<p>Checked versions:</p>\n<ul>\n<li>Dart: from 6.3 (the earliest available release from 6.x tree) up to 6.6 (prerelease)</li>\n<li>Gazebo: 9.0.0, 9.1.1, 9.2.0 (from main gazebo9 branch). Default is not compiling for me.</li>\n</ul>", "type": "rendered"}, "created_on": "2018-07-27T16:00:29.973319+00:00", "user": {"display_name": "mjbogusz", "uuid": "{1ead58d6-6208-47f8-986f-84edb5efe4ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D"}, "html": {"href": "https://bitbucket.org/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/90af9e84d0be92380217e7caa1720fa5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-0.png"}}, "nickname": "mjbogusz", "type": "user", "account_id": "557058:29c4e542-c7f0-40b1-89a9-544f21e6bd52"}, "updated_on": "2018-07-27T16:00:39.036249+00:00", "type": "issue_comment", "id": 46979509}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443/comments/47105121.json"}, "html": {"href": "#!/osrf/gazebo/issues/2443#comment-47105121"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443.json"}}, "type": "issue", "id": 2443, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DART interface incompatibility and gazebo crashed after insert some model"}, "content": {"raw": "The problem is most likely related to the screw-type joint between the torso link and the torso motor screw link.\n\nI've simplified the PR2 model by removing the arms and the head. All that's left is the base, the wheels and the torso. Commenting out either the screw joint or even some of the wheels results in Gazebo not crashing anymore.\n\nEither it's the handling of screw-type joints itself or handling of circular joint dependencies - between the base link and torso motor screw there are 2 \"paths\": one direct via a revolute-type joint and one via prismatic-type joint, additional link (torso) and then screw-type joint:\n\n```\n     /----------(revolute)-----------\\\n    /                                 \\\nbase                                   torso_motor_screw\n    \\                                 /\n     \\--(prismatic)--torso--(screw)--/\n```\n\nHowever, such a circular dependency is not invalid (or is it?) and it doesn't explain why the removal of wheels solves the crashes.", "markup": "markdown", "html": "<p>The problem is most likely related to the screw-type joint between the torso link and the torso motor screw link.</p>\n<p>I've simplified the PR2 model by removing the arms and the head. All that's left is the base, the wheels and the torso. Commenting out either the screw joint or even some of the wheels results in Gazebo not crashing anymore.</p>\n<p>Either it's the handling of screw-type joints itself or handling of circular joint dependencies - between the base link and torso motor screw there are 2 \"paths\": one direct via a revolute-type joint and one via prismatic-type joint, additional link (torso) and then screw-type joint:</p>\n<div class=\"codehilite\"><pre><span></span>     /----------(revolute)-----------\\\n    /                                 \\\nbase                                   torso_motor_screw\n    \\                                 /\n     \\--(prismatic)--torso--(screw)--/\n</pre></div>\n\n\n<p>However, such a circular dependency is not invalid (or is it?) and it doesn't explain why the removal of wheels solves the crashes.</p>", "type": "rendered"}, "created_on": "2018-08-03T15:36:54.978511+00:00", "user": {"display_name": "mjbogusz", "uuid": "{1ead58d6-6208-47f8-986f-84edb5efe4ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D"}, "html": {"href": "https://bitbucket.org/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/90af9e84d0be92380217e7caa1720fa5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-0.png"}}, "nickname": "mjbogusz", "type": "user", "account_id": "557058:29c4e542-c7f0-40b1-89a9-544f21e6bd52"}, "updated_on": "2018-08-03T15:39:30.678043+00:00", "type": "issue_comment", "id": 47105121}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443/comments/47137222.json"}, "html": {"href": "#!/osrf/gazebo/issues/2443#comment-47137222"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2443.json"}}, "type": "issue", "id": 2443, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "DART interface incompatibility and gazebo crashed after insert some model"}, "content": {"raw": "After compilation with `-DCMAKE_BUILD_TYPE=Debug` Gazebo crashed with following message:\n```\ngzserver: /home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp:1900: void dart::dynamics::BodyNode::addConstraintImpulse(const Vector6d&): Assertion `!math::isNan(_constImp)' failed.\n```\n\nEdit: full stacktrace from GDB (ignore the leading and misleading 2 entries):\n```\n#0  0x00007ffff5cd9e97 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\n#1  0x00007ffff5cdb801 in __GI_abort () at abort.c:79\n#2  0x00007ffff5ccb39a in __assert_fail_base (fmt=0x7ffff5e527d8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x7fffe99fb9b6 \"!math::isNan(_constImp)\", file=file@entry=0x7fffe99fb290 \"/home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp\", line=line@entry=1900, function=function@entry=0x7fffe9a09a40 <dart::dynamics::BodyNode::addConstraintImpulse(Eigen::Matrix<double, 6, 1, 0, 6, 1> const&)::__PRETTY_FUNCTION__> \"void dart::dynamics::BodyNode::addConstraintImpulse(const Vector6d&)\") at assert.c:92\n#3  0x00007ffff5ccb412 in __GI___assert_fail (assertion=0x7fffe99fb9b6 \"!math::isNan(_constImp)\", file=0x7fffe99fb290 \"/home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp\", line=1900, function=0x7fffe9a09a40 <dart::dynamics::BodyNode::addConstraintImpulse(Eigen::Matrix<double, 6, 1, 0, 6, 1> const&)::__PRETTY_FUNCTION__> \"void dart::dynamics::BodyNode::addConstraintImpulse(const Vector6d&)\") at assert.c:101\n#4  0x00007fffe94bf8df in dart::dynamics::BodyNode::addConstraintImpulse(Eigen::Matrix<double, 6, 1, 0, 6, 1> const&) (this=0x7ffedd261600, _constImp=...) at /home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp:1900\n#5  0x00007fffe9962f5a in dart::constraint::WeldJointConstraint::applyImpulse(double*) (this=0x7ffede148a90, _lambda=0x55555699e7d0) at /home/konrad/gazebo-dart/src/dart/dart/constraint/WeldJointConstraint.cpp:342\n#6  0x00007fffe994c5a7 in dart::constraint::DantzigLCPSolver::solve(dart::constraint::ConstrainedGroup*) (this=0x555556b9d6d0, _group=0x7ffede238220) at /home/konrad/gazebo-dart/src/dart/dart/constraint/DantzigLCPSolver.cpp:175\n#7  0x00007fffe992e283 in dart::constraint::ConstraintSolver::solveConstrainedGroups() (this=0x555556a701f0) at /home/konrad/gazebo-dart/src/dart/dart/constraint/ConstraintSolver.cpp:601\n#8  0x00007fffe992cb97 in dart::constraint::ConstraintSolver::solve() (this=0x555556a701f0) at /home/konrad/gazebo-dart/src/dart/dart/constraint/ConstraintSolver.cpp:321\n#9  0x00007fffe996ab94 in dart::simulation::World::step(bool) (this=0x555555bad800, _resetCommand=true) at /home/konrad/gazebo-dart/src/dart/dart/simulation/World.cpp:175\n#10 0x00007ffff502294c in gazebo::physics::DARTPhysics::UpdatePhysics() (this=0x555556375a00) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/dart/DARTPhysics.cc:426\n#11 0x00007ffff51ef090 in gazebo::physics::World::Update() (this=0x555556b95240) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/World.cc:782\n#12 0x00007ffff51ee801 in gazebo::physics::World::Step() (this=0x555556b95240) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/World.cc:671\n#13 0x00007ffff51edba5 in gazebo::physics::World::RunLoop() (this=0x555556b95240) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/World.cc:519\n#14 0x00007ffff522154a in std::__invoke_impl<void, void (gazebo::physics::World::*&)(), gazebo::physics::World*&>(std::__invoke_memfun_deref, void (gazebo::physics::World::*&)(), gazebo::physics::World*&) (__f=@0x555556a6dd48: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff51ed844 <gazebo::physics::World::RunLoop()>, __t=@0x555556a6dd58: 0x555556b95240) at /usr/include/c++/7/bits/invoke.h:73\n#15 0x00007ffff521f63e in std::__invoke<void (gazebo::physics::World::*&)(), gazebo::physics::World*&>(void (gazebo::physics::World::*&)(), gazebo::physics::World*&) (__fn=@0x555556a6dd48: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff51ed844 <gazebo::physics::World::RunLoop()>, __args#0=@0x555556a6dd58: 0x555556b95240) at /usr/include/c++/7/bits/invoke.h:95\n#16 0x00007ffff521ba29 in std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=0x555556a6dd48, __args=...) at /usr/include/c++/7/functional:467\n#17 0x00007ffff5216df5 in std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>::operator()<, void>() (this=0x555556a6dd48) at /usr/include/c++/7/functional:551\n#18 0x00007ffff5211e63 in std::__invoke_impl<void, std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>>(std::__invoke_other, std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>&&) (__f=...) at /usr/include/c++/7/bits/invoke.h:60\n#19 0x00007ffff520981a in std::__invoke<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>>(std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>&&) (__fn=...) at /usr/include/c++/7/bits/invoke.h:95\n#20 0x00007ffff5227e1c in std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x555556a6dd48) at /usr/include/c++/7/thread:234\n#21 0x00007ffff5226d4a in std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > >::operator()() (this=0x555556a6dd48) at /usr/include/c++/7/thread:243\n#22 0x00007ffff5224fc0 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > > >::_M_run() (this=0x555556a6dd40) at /usr/include/c++/7/thread:186\n#23 0x00007ffff6700733 in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#24 0x00007ffff56c86db in start_thread (arg=0x7ffee2ffd700) at pthread_create.c:463\n#25 0x00007ffff5dbc88f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n```\n\nEdit2: This _might_ be related to this bug report: https://github.com/dartsim/dart/issues/892\n\nEdit3: This is _most_ probably the solver issue, as changing the solver by specifying a world SDF with solver type set to `pgs` allowed the simulation to run even with a complete PR2 model. World SDF used:\n```\n<?xml version=\"1.0\" ?>\n<sdf version=\"1.6\">\n  <world name=\"world_dart_pgs\">\n    <physics name=\"dart_1ms\" default=\"true\" type=\"dart\">\n      <max_step_size>0.001</max_step_size>\n      <dart>\n        <solver>\n          <solver_type>pgs</solver_type>\n        </solver>\n      </dart>\n    </physics>\n    <include>\n      <uri>model://sun</uri>\n    </include>\n    <include>\n      <uri>model://ground_plane</uri>\n    </include>\n  </world>\n</sdf>\n```\n\nEdit4: After rebuilding with `CMAKE_BUILD_TYPE=RelWithDebInfo` it ran with reasonable speed (Real Time Factor about 0.5 on an i7-8700K) but crashed after a short while, however just before it crashed one arm of the robot suddenly revolved into a physically unattainable position which could be caused by something entirely different.", "markup": "markdown", "html": "<p>After compilation with <code>-DCMAKE_BUILD_TYPE=Debug</code> Gazebo crashed with following message:</p>\n<div class=\"codehilite\"><pre><span></span>gzserver: /home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp:1900: void dart::dynamics::BodyNode::addConstraintImpulse(const Vector6d&amp;): Assertion `!math::isNan(_constImp)&#39; failed.\n</pre></div>\n\n\n<p>Edit: full stacktrace from GDB (ignore the leading and misleading 2 entries):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#0  0x00007ffff5cd9e97 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51</span>\n<span class=\"cp\">#1  0x00007ffff5cdb801 in __GI_abort () at abort.c:79</span>\n<span class=\"cp\">#2  0x00007ffff5ccb39a in __assert_fail_base (fmt=0x7ffff5e527d8 &quot;%s%s%s:%u: %s%sAssertion `%s&#39; failed.\\n%n&quot;, assertion=assertion@entry=0x7fffe99fb9b6 &quot;!math::isNan(_constImp)&quot;, file=file@entry=0x7fffe99fb290 &quot;/home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp&quot;, line=line@entry=1900, function=function@entry=0x7fffe9a09a40 &lt;dart::dynamics::BodyNode::addConstraintImpulse(Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const&amp;)::__PRETTY_FUNCTION__&gt; &quot;void dart::dynamics::BodyNode::addConstraintImpulse(const Vector6d&amp;)&quot;) at assert.c:92</span>\n<span class=\"cp\">#3  0x00007ffff5ccb412 in __GI___assert_fail (assertion=0x7fffe99fb9b6 &quot;!math::isNan(_constImp)&quot;, file=0x7fffe99fb290 &quot;/home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp&quot;, line=1900, function=0x7fffe9a09a40 &lt;dart::dynamics::BodyNode::addConstraintImpulse(Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const&amp;)::__PRETTY_FUNCTION__&gt; &quot;void dart::dynamics::BodyNode::addConstraintImpulse(const Vector6d&amp;)&quot;) at assert.c:101</span>\n<span class=\"cp\">#4  0x00007fffe94bf8df in dart::dynamics::BodyNode::addConstraintImpulse(Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const&amp;) (this=0x7ffedd261600, _constImp=...) at /home/konrad/gazebo-dart/src/dart/dart/dynamics/BodyNode.cpp:1900</span>\n<span class=\"cp\">#5  0x00007fffe9962f5a in dart::constraint::WeldJointConstraint::applyImpulse(double*) (this=0x7ffede148a90, _lambda=0x55555699e7d0) at /home/konrad/gazebo-dart/src/dart/dart/constraint/WeldJointConstraint.cpp:342</span>\n<span class=\"cp\">#6  0x00007fffe994c5a7 in dart::constraint::DantzigLCPSolver::solve(dart::constraint::ConstrainedGroup*) (this=0x555556b9d6d0, _group=0x7ffede238220) at /home/konrad/gazebo-dart/src/dart/dart/constraint/DantzigLCPSolver.cpp:175</span>\n<span class=\"cp\">#7  0x00007fffe992e283 in dart::constraint::ConstraintSolver::solveConstrainedGroups() (this=0x555556a701f0) at /home/konrad/gazebo-dart/src/dart/dart/constraint/ConstraintSolver.cpp:601</span>\n<span class=\"cp\">#8  0x00007fffe992cb97 in dart::constraint::ConstraintSolver::solve() (this=0x555556a701f0) at /home/konrad/gazebo-dart/src/dart/dart/constraint/ConstraintSolver.cpp:321</span>\n<span class=\"cp\">#9  0x00007fffe996ab94 in dart::simulation::World::step(bool) (this=0x555555bad800, _resetCommand=true) at /home/konrad/gazebo-dart/src/dart/dart/simulation/World.cpp:175</span>\n<span class=\"cp\">#10 0x00007ffff502294c in gazebo::physics::DARTPhysics::UpdatePhysics() (this=0x555556375a00) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/dart/DARTPhysics.cc:426</span>\n<span class=\"cp\">#11 0x00007ffff51ef090 in gazebo::physics::World::Update() (this=0x555556b95240) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/World.cc:782</span>\n<span class=\"cp\">#12 0x00007ffff51ee801 in gazebo::physics::World::Step() (this=0x555556b95240) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/World.cc:671</span>\n<span class=\"cp\">#13 0x00007ffff51edba5 in gazebo::physics::World::RunLoop() (this=0x555556b95240) at /home/konrad/gazebo-dart/src/gazebo/gazebo/physics/World.cc:519</span>\n<span class=\"cp\">#14 0x00007ffff522154a in std::__invoke_impl&lt;void, void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;&gt;(std::__invoke_memfun_deref, void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;) (__f=@0x555556a6dd48: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff51ed844 &lt;gazebo::physics::World::RunLoop()&gt;, __t=@0x555556a6dd58: 0x555556b95240) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:73</span><span class=\"cp\"></span>\n<span class=\"cp\">#15 0x00007ffff521f63e in std::__invoke&lt;void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;&gt;(void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;) (__fn=@0x555556a6dd48: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff51ed844 &lt;gazebo::physics::World::RunLoop()&gt;, __args#0=@0x555556a6dd58: 0x555556b95240) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:95</span><span class=\"cp\"></span>\n<span class=\"cp\">#16 0x00007ffff521ba29 in std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;::__call&lt;void, , 0ul&gt;(std::tuple&lt;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul&gt;) (this=0x555556a6dd48, __args=...) at /usr/include</span><span class=\"cpf\">/c++/7/functional:467</span><span class=\"cp\"></span>\n<span class=\"cp\">#17 0x00007ffff5216df5 in std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;::operator()&lt;, void&gt;() (this=0x555556a6dd48) at /usr/include</span><span class=\"cpf\">/c++/7/functional:551</span><span class=\"cp\"></span>\n<span class=\"cp\">#18 0x00007ffff5211e63 in std::__invoke_impl&lt;void, std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&gt;(std::__invoke_other, std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&amp;&amp;) (__f=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:60</span><span class=\"cp\"></span>\n<span class=\"cp\">#19 0x00007ffff520981a in std::__invoke&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&gt;(std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&amp;&amp;) (__fn=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:95</span><span class=\"cp\"></span>\n<span class=\"cp\">#20 0x00007ffff5227e1c in std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt;::_M_invoke&lt;0ul&gt;(std::_Index_tuple&lt;0ul&gt;) (this=0x555556a6dd48) at /usr/include</span><span class=\"cpf\">/c++/7/thread:234</span><span class=\"cp\"></span>\n<span class=\"cp\">#21 0x00007ffff5226d4a in std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt;::operator()() (this=0x555556a6dd48) at /usr/include</span><span class=\"cpf\">/c++/7/thread:243</span><span class=\"cp\"></span>\n<span class=\"cp\">#22 0x00007ffff5224fc0 in std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt; &gt;::_M_run() (this=0x555556a6dd40) at /usr/include</span><span class=\"cpf\">/c++/7/thread:186</span><span class=\"cp\"></span>\n<span class=\"cp\">#23 0x00007ffff6700733 in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6</span>\n<span class=\"cp\">#24 0x00007ffff56c86db in start_thread (arg=0x7ffee2ffd700) at pthread_create.c:463</span>\n<span class=\"cp\">#25 0x00007ffff5dbc88f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span>\n</pre></div>\n\n\n<p>Edit2: This <em>might</em> be related to this bug report: <a href=\"https://github.com/dartsim/dart/issues/892\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/dartsim/dart/issues/892</a></p>\n<p>Edit3: This is <em>most</em> probably the solver issue, as changing the solver by specifying a world SDF with solver type set to <code>pgs</code> allowed the simulation to run even with a complete PR2 model. World SDF used:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;world_dart_pgs&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;dart_1ms&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;true&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;dart&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n      <span class=\"nt\">&lt;dart&gt;</span>\n        <span class=\"nt\">&lt;solver&gt;</span>\n          <span class=\"nt\">&lt;solver_type&gt;</span>pgs<span class=\"nt\">&lt;/solver_type&gt;</span>\n        <span class=\"nt\">&lt;/solver&gt;</span>\n      <span class=\"nt\">&lt;/dart&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Edit4: After rebuilding with <code>CMAKE_BUILD_TYPE=RelWithDebInfo</code> it ran with reasonable speed (Real Time Factor about 0.5 on an i7-8700K) but crashed after a short while, however just before it crashed one arm of the robot suddenly revolved into a physically unattainable position which could be caused by something entirely different.</p>", "type": "rendered"}, "created_on": "2018-08-06T15:48:18.534007+00:00", "user": {"display_name": "mjbogusz", "uuid": "{1ead58d6-6208-47f8-986f-84edb5efe4ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D"}, "html": {"href": "https://bitbucket.org/%7B1ead58d6-6208-47f8-986f-84edb5efe4ba%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/90af9e84d0be92380217e7caa1720fa5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-0.png"}}, "nickname": "mjbogusz", "type": "user", "account_id": "557058:29c4e542-c7f0-40b1-89a9-544f21e6bd52"}, "updated_on": "2018-08-06T18:00:58.535693+00:00", "type": "issue_comment", "id": 47137222}], "page": 1, "size": 5}