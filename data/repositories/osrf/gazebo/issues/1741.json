{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1741/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1741.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1741/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1741/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1741/launching-headless-gazebo-simulator-as"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1741/vote"}}, "reporter": {"display_name": "Jordan Lack", "uuid": "{a47ca146-169c-4fcf-b59f-8410d9f676ff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba47ca146-169c-4fcf-b59f-8410d9f676ff%7D"}, "html": {"href": "https://bitbucket.org/%7Ba47ca146-169c-4fcf-b59f-8410d9f676ff%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:82c7a832-85b7-45f4-86fc-e63688f35a2d/e5a6704f-a784-4c66-94ff-f7a9c914403a/128"}}, "nickname": "jordanlack", "type": "user", "account_id": "557058:82c7a832-85b7-45f4-86fc-e63688f35a2d"}, "title": "Launching headless gazebo simulator as part of rostest unit test", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In order to comprehensively test things like gazebo plugins, I would like to be able to run a rostest unit test that launches a headless gazebo simulator with a robot in it. From that I would be able to create end to end tests of gazebo plugins as well as other software components such as controllers using gtest. \r\n\r\nI am having a bit of trouble figuring out how to get the gazebo simulator to launch as part of a rostest though. Maybe I am going about this the wrong way and rostest is not the way to do this, but currently its the only way I have found. When I try to launch a gazebo sim as part of a rostest, I get an exception that tells me there has been a keyboard interrupt. \r\n\r\nI have attached a catkin package that can be used to reproduce the issue I am having. To run, put the catkin package in a catkin workspace, then run the following commands from the top level of the catkin workspace,\r\n\r\n\r\n```\r\n#!bash\r\n\r\ncatkin_make\r\nsource devel/setup.bash\r\nrostest gazebo_test gazebo_test.test\r\n```\r\n\r\n\r\n```\r\n#!bash\r\n\r\n[ROSUNIT] Outputting test results to /home/jordan/.ros/test_results/gazebo_test/rostest-test_gazebo_test.xml\r\n[ INFO] [1442407569.357707095]: Finished loading Gazebo ROS API Plugin.\r\n[ INFO] [1442407569.359898067]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...\r\nTraceback (most recent call last):\r\n  File \"/opt/ros/indigo/lib/gazebo_ros/spawn_model\", line 31, in <module>\r\n    import tf.transformations as tft\r\n  File \"/opt/ros/indigo/lib/python2.7/dist-packages/tf/__init__.py\", line 29, in <module>\r\n    from listener import TransformListener, TransformerROS\r\n  File \"/opt/ros/indigo/lib/python2.7/dist-packages/tf/listener.py\", line 30, in <module>\r\n    roslib.load_manifest(PKG)\r\n  File \"/opt/ros/indigo/lib/python2.7/dist-packages/roslib/launcher.py\", line 62, in load_manifest\r\n    sys.path = _generate_python_path(package_name, _rospack) + sys.path\r\n  File \"/opt/ros/indigo/lib/python2.7/dist-packages/roslib/launcher.py\", line 93, in _generate_python_path\r\n    m = rospack.get_manifest(pkg)\r\n  File \"/usr/lib/python2.7/dist-packages/rospkg/rospack.py\", line 163, in get_manifest\r\n    return self._load_manifest(name)\r\n  File \"/usr/lib/python2.7/dist-packages/rospkg/rospack.py\", line 207, in _load_manifest\r\n    retval = self._manifests[name] = parse_manifest_file(self.get_path(name), self._manifest_name, rospack=self)\r\n  File \"/usr/lib/python2.7/dist-packages/rospkg/manifest.py\", line 393, in parse_manifest_file\r\n    _static_rosdep_view = init_rospack_interface()\r\n  File \"/usr/lib/python2.7/dist-packages/rosdep2/rospack.py\", line 59, in init_rospack_interface\r\n    return lookup.get_rosdep_view(DEFAULT_VIEW_KEY)\r\n  File \"/usr/lib/python2.7/dist-packages/rosdep2/lookup.py\", line 595, in get_rosdep_view\r\n    self._load_view_dependencies(view_key, self.loader)\r\n  File \"/usr/lib/python2.7/dist-packages/rosdep2/lookup.py\", line 522, in _load_view_dependencies\r\n    loader.load_view(view_key, db, verbose=self.verbose)\r\n  File \"/usr/lib/python2.7/dist-packages/rosdep2/rospkg_loader.py\", line 92, in load_view\r\n    if not view_name in self.get_loadable_views():\r\n  File \"/usr/lib/python2.7/dist-packages/rosdep2/rospkg_loader.py\", line 110, in get_loadable_views\r\n    return list(self._rosstack.list()) + [DEFAULT_VIEW_KEY]\r\n  File \"/usr/lib/python2.7/dist-packages/rospkg/rospack.py\", line 188, in list\r\n    self._update_location_cache()\r\n  File \"/usr/lib/python2.7/dist-packages/rospkg/rospack.py\", line 180, in _update_location_cache\r\n    list_by_path(self._manifest_name, path, cache)\r\n  File \"/usr/lib/python2.7/dist-packages/rospkg/rospack.py\", line 67, in list_by_path\r\n    root = ElementTree(None, os.path.join(d, PACKAGE_FILE))\r\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 611, in __init__\r\n    self.parse(file)\r\n  File \"<string>\", line 38, in parse\r\nKeyboardInterrupt\r\ntestsim_interface_test ... ok\r\n\r\n[ROSTEST]-----------------------------------------------------------------------\r\n\r\n\r\nSUMMARY\r\n * RESULT: SUCCESS\r\n * TESTS: 0\r\n * ERRORS: 0\r\n * FAILURES: 0\r\n\r\nrostest log file is in /home/jordan/.ros/log/rostest-Jordan-Workstation-22453.log\r\n```", "markup": "markdown", "html": "<p>In order to comprehensively test things like gazebo plugins, I would like to be able to run a rostest unit test that launches a headless gazebo simulator with a robot in it. From that I would be able to create end to end tests of gazebo plugins as well as other software components such as controllers using gtest. </p>\n<p>I am having a bit of trouble figuring out how to get the gazebo simulator to launch as part of a rostest though. Maybe I am going about this the wrong way and rostest is not the way to do this, but currently its the only way I have found. When I try to launch a gazebo sim as part of a rostest, I get an exception that tells me there has been a keyboard interrupt. </p>\n<p>I have attached a catkin package that can be used to reproduce the issue I am having. To run, put the catkin package in a catkin workspace, then run the following commands from the top level of the catkin workspace,</p>\n<div class=\"codehilite language-bash\"><pre><span></span>catkin_make\n<span class=\"nb\">source</span> devel/setup.bash\nrostest gazebo_test gazebo_test.test\n</pre></div>\n\n\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"o\">[</span>ROSUNIT<span class=\"o\">]</span> Outputting <span class=\"nb\">test</span> results to /home/jordan/.ros/test_results/gazebo_test/rostest-test_gazebo_test.xml\n<span class=\"o\">[</span> INFO<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1442407569</span>.357707095<span class=\"o\">]</span>: Finished loading Gazebo ROS API Plugin.\n<span class=\"o\">[</span> INFO<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1442407569</span>.359898067<span class=\"o\">]</span>: waitForService: Service <span class=\"o\">[</span>/gazebo/set_physics_properties<span class=\"o\">]</span> has not been advertised, waiting...\nTraceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n  File <span class=\"s2\">&quot;/opt/ros/indigo/lib/gazebo_ros/spawn_model&quot;</span>, line <span class=\"m\">31</span>, in &lt;module&gt;\n    import tf.transformations as tft\n  File <span class=\"s2\">&quot;/opt/ros/indigo/lib/python2.7/dist-packages/tf/__init__.py&quot;</span>, line <span class=\"m\">29</span>, in &lt;module&gt;\n    from listener import TransformListener, TransformerROS\n  File <span class=\"s2\">&quot;/opt/ros/indigo/lib/python2.7/dist-packages/tf/listener.py&quot;</span>, line <span class=\"m\">30</span>, in &lt;module&gt;\n    roslib.load_manifest<span class=\"o\">(</span>PKG<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/opt/ros/indigo/lib/python2.7/dist-packages/roslib/launcher.py&quot;</span>, line <span class=\"m\">62</span>, in load_manifest\n    sys.path <span class=\"o\">=</span> _generate_python_path<span class=\"o\">(</span>package_name, _rospack<span class=\"o\">)</span> + sys.path\n  File <span class=\"s2\">&quot;/opt/ros/indigo/lib/python2.7/dist-packages/roslib/launcher.py&quot;</span>, line <span class=\"m\">93</span>, in _generate_python_path\n    <span class=\"nv\">m</span> <span class=\"o\">=</span> rospack.get_manifest<span class=\"o\">(</span>pkg<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rospkg/rospack.py&quot;</span>, line <span class=\"m\">163</span>, in get_manifest\n    <span class=\"k\">return</span> self._load_manifest<span class=\"o\">(</span>name<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rospkg/rospack.py&quot;</span>, line <span class=\"m\">207</span>, in _load_manifest\n    <span class=\"nv\">retval</span> <span class=\"o\">=</span> self._manifests<span class=\"o\">[</span>name<span class=\"o\">]</span> <span class=\"o\">=</span> parse_manifest_file<span class=\"o\">(</span>self.get_path<span class=\"o\">(</span>name<span class=\"o\">)</span>, self._manifest_name, <span class=\"nv\">rospack</span><span class=\"o\">=</span>self<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rospkg/manifest.py&quot;</span>, line <span class=\"m\">393</span>, in parse_manifest_file\n    <span class=\"nv\">_static_rosdep_view</span> <span class=\"o\">=</span> init_rospack_interface<span class=\"o\">()</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rosdep2/rospack.py&quot;</span>, line <span class=\"m\">59</span>, in init_rospack_interface\n    <span class=\"k\">return</span> lookup.get_rosdep_view<span class=\"o\">(</span>DEFAULT_VIEW_KEY<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rosdep2/lookup.py&quot;</span>, line <span class=\"m\">595</span>, in get_rosdep_view\n    self._load_view_dependencies<span class=\"o\">(</span>view_key, self.loader<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rosdep2/lookup.py&quot;</span>, line <span class=\"m\">522</span>, in _load_view_dependencies\n    loader.load_view<span class=\"o\">(</span>view_key, db, <span class=\"nv\">verbose</span><span class=\"o\">=</span>self.verbose<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rosdep2/rospkg_loader.py&quot;</span>, line <span class=\"m\">92</span>, in load_view\n    <span class=\"k\">if</span> not view_name in self.get_loadable_views<span class=\"o\">()</span>:\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rosdep2/rospkg_loader.py&quot;</span>, line <span class=\"m\">110</span>, in get_loadable_views\n    <span class=\"k\">return</span> list<span class=\"o\">(</span>self._rosstack.list<span class=\"o\">())</span> + <span class=\"o\">[</span>DEFAULT_VIEW_KEY<span class=\"o\">]</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rospkg/rospack.py&quot;</span>, line <span class=\"m\">188</span>, in list\n    self._update_location_cache<span class=\"o\">()</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rospkg/rospack.py&quot;</span>, line <span class=\"m\">180</span>, in _update_location_cache\n    list_by_path<span class=\"o\">(</span>self._manifest_name, path, cache<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/rospkg/rospack.py&quot;</span>, line <span class=\"m\">67</span>, in list_by_path\n    <span class=\"nv\">root</span> <span class=\"o\">=</span> ElementTree<span class=\"o\">(</span>None, os.path.join<span class=\"o\">(</span>d, PACKAGE_FILE<span class=\"o\">))</span>\n  File <span class=\"s2\">&quot;/usr/lib/python2.7/xml/etree/ElementTree.py&quot;</span>, line <span class=\"m\">611</span>, in __init__\n    self.parse<span class=\"o\">(</span>file<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;&lt;string&gt;&quot;</span>, line <span class=\"m\">38</span>, in parse\nKeyboardInterrupt\ntestsim_interface_test ... ok\n\n<span class=\"o\">[</span>ROSTEST<span class=\"o\">]</span>-----------------------------------------------------------------------\n\n\nSUMMARY\n * RESULT: SUCCESS\n * TESTS: <span class=\"m\">0</span>\n * ERRORS: <span class=\"m\">0</span>\n * FAILURES: <span class=\"m\">0</span>\n\nrostest log file is in /home/jordan/.ros/log/rostest-Jordan-Workstation-22453.log\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-09-16T12:59:59.598528+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:43.640364+00:00", "type": "issue", "id": 1741}