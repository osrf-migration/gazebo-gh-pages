{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/800/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/800.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/800/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/800/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/800/plugin-loading-on-os-x"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/800/vote"}}, "reporter": {"display_name": "William Woodall", "uuid": "{111b81a3-502e-44d1-9cf6-c11de0e697cb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B111b81a3-502e-44d1-9cf6-c11de0e697cb%7D"}, "html": {"href": "https://bitbucket.org/%7B111b81a3-502e-44d1-9cf6-c11de0e697cb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4310348aa750a932bb60165505aaa834d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsWW-1.png"}}, "nickname": "William Woodall", "type": "user", "account_id": "557058:d06abb4a-3b31-45df-9e97-2b48a039ff16"}, "title": "Plugin loading on OS X", "component": {"name": "os::osx", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/126618.json"}}}, "votes": 7, "watches": 14, "content": {"raw": "There are many places where the `.so` extension is assumed through out gazebo and the related packages.\r\n\r\nFor example, when loading a plugin with the `-s` command line option it is recommended that users give `libfoo.so`. On OS X this will not work because the file name is likely called `libfoo.dylib`. This is a problem in the `gazebo_ros` package for example:\r\n\r\nhttps://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/gazebo_ros/scripts/gazebo#L7\r\n\r\nOther places include specifying plugins in the urdf description of robots, for example:\r\n\r\nhttps://github.com/davetcoleman/baxter_common/blob/development/baxter_description/urdf/baxter.urdf#L1230\r\n\r\nAny time `.so` is hardcoded or assumed there will be a break on OS X.\r\n\r\nIn ROS we use pluginlib (which uses class_loader):\r\n\r\nhttps://github.com/ros/pluginlib\r\nhttps://github.com/ros/class_loader\r\n\r\nPluginlib works around this problem by only specifying the first part of the library name, leaving off the suffix. Then pluginlib looks for the correct thing based on the OS:\r\n\r\nSee the path attribute:\r\nhttp://ros.org/wiki/pluginlib#pluginlib.2BAC8-pluginlib_groovy.The_Plugin_Description_File\r\n\r\nI am creating this issue to help track what needs to be done to become agnostic to the dynamic library extension being used.", "markup": "markdown", "html": "<p>There are many places where the <code>.so</code> extension is assumed through out gazebo and the related packages.</p>\n<p>For example, when loading a plugin with the <code>-s</code> command line option it is recommended that users give <code>libfoo.so</code>. On OS X this will not work because the file name is likely called <code>libfoo.dylib</code>. This is a problem in the <code>gazebo_ros</code> package for example:</p>\n<p><a href=\"https://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/gazebo_ros/scripts/gazebo#L7\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/gazebo_ros/scripts/gazebo#L7</a></p>\n<p>Other places include specifying plugins in the urdf description of robots, for example:</p>\n<p><a href=\"https://github.com/davetcoleman/baxter_common/blob/development/baxter_description/urdf/baxter.urdf#L1230\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/davetcoleman/baxter_common/blob/development/baxter_description/urdf/baxter.urdf#L1230</a></p>\n<p>Any time <code>.so</code> is hardcoded or assumed there will be a break on OS X.</p>\n<p>In ROS we use pluginlib (which uses class_loader):</p>\n<p><a href=\"https://github.com/ros/pluginlib\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros/pluginlib</a>\n<a href=\"https://github.com/ros/class_loader\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros/class_loader</a></p>\n<p>Pluginlib works around this problem by only specifying the first part of the library name, leaving off the suffix. Then pluginlib looks for the correct thing based on the OS:</p>\n<p>See the path attribute:\n<a href=\"http://ros.org/wiki/pluginlib#pluginlib.2BAC8-pluginlib_groovy.The_Plugin_Description_File\" rel=\"nofollow\" class=\"ap-connect-link\">http://ros.org/wiki/pluginlib#pluginlib.2BAC8-pluginlib_groovy.The_Plugin_Description_File</a></p>\n<p>I am creating this issue to help track what needs to be done to become agnostic to the dynamic library extension being used.</p>", "type": "rendered"}, "assignee": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2013-08-09T22:15:01.248548+00:00", "milestone": null, "updated_on": "2016-09-14T19:20:44.260692+00:00", "type": "issue", "id": 800}