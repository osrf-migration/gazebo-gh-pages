{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1851/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1851.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1851/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1851/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1851/new-event-beforephysicsupdate"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1851/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "New event: BeforePhysicsUpdate", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "I want to do some advanced usage of ODE in Gazebo, and there is almost a blocker for me.\r\n\r\nIn ODE, you set contact surface parameter after collision checking, but before physics update (and that completely makes sense and I hope the other engines also do it like this).\r\n\r\nThere is no way for me to call custom code in between the UpdateCollision() and UpdatePhysics() calls in the World::Update callback. \r\n\r\nI only have a possible workaround - to disable the physics engine, make an update (which will do the collision checking and not the physics update), then call my custom code, and call UpdatePhysics() manually afterwards. This may however break a lot of things connected to the WolrdUpdateEnd event, since it'd be called before the actual physics update.\r\n\r\nSo I propose creating a new event, called e.g. BeforePhysicsUpdate, that'd be triggered after UpdateCollision and before UpdatePhysics.", "markup": "markdown", "html": "<p>I want to do some advanced usage of ODE in Gazebo, and there is almost a blocker for me.</p>\n<p>In ODE, you set contact surface parameter after collision checking, but before physics update (and that completely makes sense and I hope the other engines also do it like this).</p>\n<p>There is no way for me to call custom code in between the UpdateCollision() and UpdatePhysics() calls in the World::Update callback. </p>\n<p>I only have a possible workaround - to disable the physics engine, make an update (which will do the collision checking and not the physics update), then call my custom code, and call UpdatePhysics() manually afterwards. This may however break a lot of things connected to the WolrdUpdateEnd event, since it'd be called before the actual physics update.</p>\n<p>So I propose creating a new event, called e.g. BeforePhysicsUpdate, that'd be triggered after UpdateCollision and before UpdatePhysics.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-02-01T15:12:12.336268+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:25.560280+00:00", "type": "issue", "id": 1851}