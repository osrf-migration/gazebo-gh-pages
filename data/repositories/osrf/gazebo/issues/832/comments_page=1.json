{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/6026237.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-6026237"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "After installing **ogre-1.8.0** the ```UNIT_Sensor_TEST``` is not failing anymore, but some others are, most of them related to sensors. For example ```UNIT_Sensor_TEST```:\n\n```\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffe4e5b700 (LWP 14825)]\n0x00007fffdc59f34a in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n(gdb) bt\n#0  0x00007fffdc59f34a in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#1  0x00007fffdc5a052b in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#2  0x00007fffdc5bb9b5 in Ogre::GLRenderSystem::GLRenderSystem() ()\n   from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#3  0x00007fffdc5b4b4c in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#4  0x00007ffff28431f1 in Ogre::Root::installPlugin(Ogre::Plugin*) ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.0\n#5  0x00007fffdc5a8415 in dllStartPlugin () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#6  0x00007ffff284338a in Ogre::Root::loadPlugin(std::string const&) ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.0\n#7  0x00007ffff6f75426 in gazebo::rendering::RenderEngine::LoadPlugins (\n    this=this@entry=0x7ffff7519600 <SingletonT<gazebo::rendering::RenderEngine>::GetInstance()::t>)\n    at /home/osrf/gazebo/gazebo/rendering/RenderEngine.cc:377\n#8  0x00007ffff6f78671 in gazebo::rendering::RenderEngine::Load (\n    this=this@entry=0x7ffff7519600 <SingletonT<gazebo::rendering::RenderEngine>::GetInstance()::t>)\n    at /home/osrf/gazebo/gazebo/rendering/RenderEngine.cc:124\n#9  0x00007ffff6f7dc1e in gazebo::rendering::load ()\n    at /home/osrf/gazebo/gazebo/rendering/RenderingIface.cc:33\n#10 0x00007ffff72cbdc2 in gazebo::sensors::load () at /home/osrf/gazebo/gazebo/sensors/SensorsIface.cc:38\n#11 0x00007ffff65fd731 in gazebo::Server::LoadImpl (this=this@entry=0x7fffd80008e0, _elem=..., _physics=...)\n    at /home/osrf/gazebo/gazebo/Server.cc:341\n#12 0x00007ffff65fe95e in gazebo::Server::LoadFile (this=0x7fffd80008e0, _filename=..., _physics=...)\n    at /home/osrf/gazebo/gazebo/Server.cc:297\n#13 0x0000000000436718 in ServerFixture::RunServer (this=0x6b2280, _worldFilename=..., \n    _paused=<optimized out>, _physics=...) at /home/osrf/gazebo/test/ServerFixture.hh:214\n#14 0x00007ffff5eb06e9 in ?? () from /usr/lib/libboost_thread.so.1.49.0\n#15 0x00007ffff63b6f8e in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0\n#16 0x00007ffff54b6e1d in clone () from /lib/x86_64-linux-gnu/libc.so.6\n```\n\nAll them are pointed to ``` gazebo::rendering::RenderEngine::LoadPlugins``` functions as the last gazebo function in the function call stack.\n\n", "markup": "markdown", "html": "<p>After installing <strong>ogre-1.8.0</strong> the <code>UNIT_Sensor_TEST</code> is not failing anymore, but some others are, most of them related to sensors. For example <code>UNIT_Sensor_TEST</code>:</p>\n<div class=\"codehilite\"><pre><span></span>Program received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffe4e5b700 (LWP 14825)]\n0x00007fffdc59f34a in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n(gdb) bt\n#0  0x00007fffdc59f34a in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#1  0x00007fffdc5a052b in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#2  0x00007fffdc5bb9b5 in Ogre::GLRenderSystem::GLRenderSystem() ()\n   from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#3  0x00007fffdc5b4b4c in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#4  0x00007ffff28431f1 in Ogre::Root::installPlugin(Ogre::Plugin*) ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.0\n#5  0x00007fffdc5a8415 in dllStartPlugin () from /usr/lib/x86_64-linux-gnu/OGRE-1.8.0/RenderSystem_GL.so\n#6  0x00007ffff284338a in Ogre::Root::loadPlugin(std::string const&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.0\n#7  0x00007ffff6f75426 in gazebo::rendering::RenderEngine::LoadPlugins (\n    this=this@entry=0x7ffff7519600 &lt;SingletonT&lt;gazebo::rendering::RenderEngine&gt;::GetInstance()::t&gt;)\n    at /home/osrf/gazebo/gazebo/rendering/RenderEngine.cc:377\n#8  0x00007ffff6f78671 in gazebo::rendering::RenderEngine::Load (\n    this=this@entry=0x7ffff7519600 &lt;SingletonT&lt;gazebo::rendering::RenderEngine&gt;::GetInstance()::t&gt;)\n    at /home/osrf/gazebo/gazebo/rendering/RenderEngine.cc:124\n#9  0x00007ffff6f7dc1e in gazebo::rendering::load ()\n    at /home/osrf/gazebo/gazebo/rendering/RenderingIface.cc:33\n#10 0x00007ffff72cbdc2 in gazebo::sensors::load () at /home/osrf/gazebo/gazebo/sensors/SensorsIface.cc:38\n#11 0x00007ffff65fd731 in gazebo::Server::LoadImpl (this=this@entry=0x7fffd80008e0, _elem=..., _physics=...)\n    at /home/osrf/gazebo/gazebo/Server.cc:341\n#12 0x00007ffff65fe95e in gazebo::Server::LoadFile (this=0x7fffd80008e0, _filename=..., _physics=...)\n    at /home/osrf/gazebo/gazebo/Server.cc:297\n#13 0x0000000000436718 in ServerFixture::RunServer (this=0x6b2280, _worldFilename=..., \n    _paused=&lt;optimized out&gt;, _physics=...) at /home/osrf/gazebo/test/ServerFixture.hh:214\n#14 0x00007ffff5eb06e9 in ?? () from /usr/lib/libboost_thread.so.1.49.0\n#15 0x00007ffff63b6f8e in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0\n#16 0x00007ffff54b6e1d in clone () from /lib/x86_64-linux-gnu/libc.so.6\n</pre></div>\n\n\n<p>All them are pointed to <code>gazebo::rendering::RenderEngine::LoadPlugins</code> functions as the last gazebo function in the function call stack.</p>", "type": "rendered"}, "created_on": "2013-09-12T00:18:23.859855+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 6026237}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17583657.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17583657"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "Update: [over 100 tests are currently failing in jenkins with intel gpu](http://build.osrfoundation.org/view/gazebo-gpu/job/gazebo-gazebo_5.0-devel-trusty-amd64-gpu-intel/11/testReport/) (basically any tests that load a server or try to use rendering).\n\nI just did some testing on an [intel NUC](http://www.intel.com/content/www/us/en/nuc/overview.html) that we have connected to a projector in a conference room, and it was able to run gazebo whenever it was actively driving a display. However, it seg-faulted whenever I connected via ssh and the display was inactive. I have a backtrace without debug information:\n~~~\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007fffcba260a8 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n(gdb) bt\n#0  0x00007fffcba260a8 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#1  0x00007fffcba2af69 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#2  0x00007fffcba7a05e in Ogre::GLRenderSystem::GLRenderSystem() () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#3  0x00007fffcba33dc4 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#4  0x00007fffefcf09be in Ogre::Root::installPlugin(Ogre::Plugin*) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#5  0x00007fffcba703d6 in dllStartPlugin () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#6  0x00007fffefcf0c77 in Ogre::Root::loadPlugin(std::string const&) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#7  0x00007ffff02e6408 in gazebo::rendering::RenderEngine::LoadPlugins() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n#8  0x00007ffff02e868a in gazebo::rendering::RenderEngine::Load() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n#9  0x00007ffff02ec903 in gazebo::rendering::load() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n#10 0x000000000042e60d in gazebo::setupServer(int, char**) ()\n#11 0x0000000000416c5f in gazebo::Server::ParseArgs(int, char**) ()\n#12 0x000000000040ddd1 in ?? ()\n#13 0x00007ffff4c1ba40 in __libc_start_main (main=0x40dcd0, argc=2, argv=0x7fffffffe5f8, init=<optimized out>, fini=<optimized out>, \n    rtld_fini=<optimized out>, stack_end=0x7fffffffe5e8) at libc-start.c:289\n#14 0x000000000040fd39 in _start ()\n(gdb)\n~~~\n\nI also compared the `~/.gazebo/ogre.log` for failed and successful runs:\n\nEnd of failed log:\n~~~\n16:30:45: *-*-* OGRE Initialising\n16:30:45: *-*-* Version 1.9.0 (Ghadamon)\n16:30:45: OverlayElementFactory for type Panel registered.\n16:30:45: OverlayElementFactory for type BorderPanel registered.\n16:30:45: OverlayElementFactory for type TextArea registered.\n16:30:45: Registering ResourceManager for type Font\n16:30:45: Loading library /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n16:30:45: Installing plugin: GL RenderSystem\n16:30:45: OpenGL Rendering Subsystem created.\n~~~\n\nMiddle of successful log:\n~~~\n16:33:17: *-*-* OGRE Initialising\n16:33:17: *-*-* Version 1.9.0 (Ghadamon)\n16:33:17: OverlayElementFactory for type Panel registered.\n16:33:17: OverlayElementFactory for type BorderPanel registered.\n16:33:17: OverlayElementFactory for type TextArea registered.\n16:33:17: Registering ResourceManager for type Font\n16:33:17: Loading library /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n16:33:17: Installing plugin: GL RenderSystem\n16:33:17: OpenGL Rendering Subsystem created.\n16:33:17: Plugin successfully installed\n16:33:17: Loading library /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/Plugin_ParticleFX.so\n~~~\n\nIt seems to fail while attempting to install a plugin, as the backtrace seems to indicate.", "markup": "markdown", "html": "<p>Update: <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo-gpu/job/gazebo-gazebo_5.0-devel-trusty-amd64-gpu-intel/11/testReport/\" rel=\"nofollow\">over 100 tests are currently failing in jenkins with intel gpu</a> (basically any tests that load a server or try to use rendering).</p>\n<p>I just did some testing on an <a data-is-external-link=\"true\" href=\"http://www.intel.com/content/www/us/en/nuc/overview.html\" rel=\"nofollow\">intel NUC</a> that we have connected to a projector in a conference room, and it was able to run gazebo whenever it was actively driving a display. However, it seg-faulted whenever I connected via ssh and the display was inactive. I have a backtrace without debug information:</p>\n<div class=\"codehilite\"><pre><span></span>Program received signal SIGSEGV, Segmentation fault.\n0x00007fffcba260a8 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n(gdb) bt\n#0  0x00007fffcba260a8 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#1  0x00007fffcba2af69 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#2  0x00007fffcba7a05e in Ogre::GLRenderSystem::GLRenderSystem() () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#3  0x00007fffcba33dc4 in ?? () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#4  0x00007fffefcf09be in Ogre::Root::installPlugin(Ogre::Plugin*) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#5  0x00007fffcba703d6 in dllStartPlugin () from /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL.so\n#6  0x00007fffefcf0c77 in Ogre::Root::loadPlugin(std::string const&amp;) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#7  0x00007ffff02e6408 in gazebo::rendering::RenderEngine::LoadPlugins() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n#8  0x00007ffff02e868a in gazebo::rendering::RenderEngine::Load() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n#9  0x00007ffff02ec903 in gazebo::rendering::load() () from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n#10 0x000000000042e60d in gazebo::setupServer(int, char**) ()\n#11 0x0000000000416c5f in gazebo::Server::ParseArgs(int, char**) ()\n#12 0x000000000040ddd1 in ?? ()\n#13 0x00007ffff4c1ba40 in __libc_start_main (main=0x40dcd0, argc=2, argv=0x7fffffffe5f8, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, \n    rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffe5e8) at libc-start.c:289\n#14 0x000000000040fd39 in _start ()\n(gdb)\n</pre></div>\n\n\n<p>I also compared the <code>~/.gazebo/ogre.log</code> for failed and successful runs:</p>\n<p>End of failed log:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"o\">*-*-*</span> <span class=\"n\">OGRE</span> <span class=\"n\">Initialising</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"o\">*-*-*</span> <span class=\"n\">Version</span> <span class=\"mf\">1.9</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">Ghadamon</span><span class=\"o\">)</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">OverlayElementFactory</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">Panel</span> <span class=\"n\">registered</span><span class=\"o\">.</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">OverlayElementFactory</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">BorderPanel</span> <span class=\"n\">registered</span><span class=\"o\">.</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">OverlayElementFactory</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">TextArea</span> <span class=\"n\">registered</span><span class=\"o\">.</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">Registering</span> <span class=\"n\">ResourceManager</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">Font</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">Loading</span> <span class=\"n\">library</span> <span class=\"sr\">/usr/lib/x86_64-linux-gnu/OGRE-1.9.0/</span><span class=\"n\">RenderSystem_GL</span><span class=\"o\">.</span><span class=\"na\">so</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">Installing</span> <span class=\"n\">plugin</span><span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"n\">RenderSystem</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">OpenGL</span> <span class=\"n\">Rendering</span> <span class=\"n\">Subsystem</span> <span class=\"n\">created</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>Middle of successful log:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"o\">*-*-*</span> <span class=\"n\">OGRE</span> <span class=\"n\">Initialising</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"o\">*-*-*</span> <span class=\"n\">Version</span> <span class=\"mf\">1.9</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">Ghadamon</span><span class=\"o\">)</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">OverlayElementFactory</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">Panel</span> <span class=\"n\">registered</span><span class=\"o\">.</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">OverlayElementFactory</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">BorderPanel</span> <span class=\"n\">registered</span><span class=\"o\">.</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">OverlayElementFactory</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">TextArea</span> <span class=\"n\">registered</span><span class=\"o\">.</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">Registering</span> <span class=\"n\">ResourceManager</span> <span class=\"k\">for</span> <span class=\"n\">type</span> <span class=\"n\">Font</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">Loading</span> <span class=\"n\">library</span> <span class=\"sr\">/usr/lib/x86_64-linux-gnu/OGRE-1.9.0/</span><span class=\"n\">RenderSystem_GL</span><span class=\"o\">.</span><span class=\"na\">so</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">Installing</span> <span class=\"n\">plugin</span><span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"n\">RenderSystem</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">OpenGL</span> <span class=\"n\">Rendering</span> <span class=\"n\">Subsystem</span> <span class=\"n\">created</span><span class=\"o\">.</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">Plugin</span> <span class=\"n\">successfully</span> <span class=\"n\">installed</span>\n<span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">Loading</span> <span class=\"n\">library</span> <span class=\"sr\">/usr/lib/x86_64-linux-gnu/OGRE-1.9.0/</span><span class=\"n\">Plugin_ParticleFX</span><span class=\"o\">.</span><span class=\"na\">so</span>\n</pre></div>\n\n\n<p>It seems to fail while attempting to install a plugin, as the backtrace seems to indicate.</p>", "type": "rendered"}, "created_on": "2015-04-22T00:24:14.875695+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-04-22T00:24:43.179714+00:00", "type": "issue_comment", "id": 17583657}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17583676.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17583676"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "Also, there doesn't appear to be a noticeable difference in the `glxinfo` output when the screen is active or not.", "markup": "markdown", "html": "<p>Also, there doesn't appear to be a noticeable difference in the <code>glxinfo</code> output when the screen is active or not.</p>", "type": "rendered"}, "created_on": "2015-04-22T00:27:41.046237+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17583676}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17640106.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17640106"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "Interesting. This explains why I can use gazebo most of the times just fine on my laptop with an intel integrated graphic card but the jenkins node is failing.\n\nWe can try a couple of things:\n\n - Use a [fake display](http://askubuntu.com/questions/453109/ubuntu-14-04-add-fake-display-when-no-monitor-is-plugged-in)\n - Use [xvfb](http://answers.gazebosim.org/question/8065/unable-to-create-depthcamerasensor-when-launching/)\n\nI'm not sure about the differences between both approaches, I would say that if we go with the dummy driver, all our simulations that requires rendering (camera, laser, ...) will fail. The xvfb approach, was tested by Ricardo Tellez and seems to work fine.", "markup": "markdown", "html": "<p>Interesting. This explains why I can use gazebo most of the times just fine on my laptop with an intel integrated graphic card but the jenkins node is failing.</p>\n<p>We can try a couple of things:</p>\n<ul>\n<li>Use a <a data-is-external-link=\"true\" href=\"http://askubuntu.com/questions/453109/ubuntu-14-04-add-fake-display-when-no-monitor-is-plugged-in\" rel=\"nofollow\">fake display</a></li>\n<li>Use <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/8065/unable-to-create-depthcamerasensor-when-launching/\" rel=\"nofollow\">xvfb</a></li>\n</ul>\n<p>I'm not sure about the differences between both approaches, I would say that if we go with the dummy driver, all our simulations that requires rendering (camera, laser, ...) will fail. The xvfb approach, was tested by Ricardo Tellez and seems to work fine.</p>", "type": "rendered"}, "created_on": "2015-04-24T00:03:13.623571+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 17640106}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17640193.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17640193"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "Let's try `xvfb` on our `gpu-intel` nodes and see if it helps.", "markup": "markdown", "html": "<p>Let's try <code>xvfb</code> on our <code>gpu-intel</code> nodes and see if it helps.</p>", "type": "rendered"}, "created_on": "2015-04-24T00:16:33.049784+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17640193}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17754360.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17754360"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "For the NUC machines, there are some suggestions in [this thread](https://communities.intel.com/message/223662)", "markup": "markdown", "html": "<p>For the NUC machines, there are some suggestions in <a data-is-external-link=\"true\" href=\"https://communities.intel.com/message/223662\" rel=\"nofollow\">this thread</a></p>", "type": "rendered"}, "created_on": "2015-04-28T22:26:06.741016+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-04-28T22:26:16.001285+00:00", "type": "issue_comment", "id": 17754360}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17782977.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17782977"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "I've installed xvfb on our intel nodes and let jenkins to handle the xvfb startup and finalization through the [xvfb jenkins plugin](https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin), configured to run on DISPLAY :11.\n\n[Here we go](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-intel-debug/6/console), the example It is running jus GpuLaser_TEST but should be enough. Graphic acceleration detection seems to be fine, it is still compiling.\n\n", "markup": "markdown", "html": "<p>I've installed xvfb on our intel nodes and let jenkins to handle the xvfb startup and finalization through the <a data-is-external-link=\"true\" href=\"https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin\" rel=\"nofollow\">xvfb jenkins plugin</a>, configured to run on DISPLAY :11.</p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-intel-debug/6/console\" rel=\"nofollow\">Here we go</a>, the example It is running jus GpuLaser_TEST but should be enough. Graphic acceleration detection seems to be fine, it is still compiling.</p>", "type": "rendered"}, "created_on": "2015-04-30T01:08:32.114247+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 17782977}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17789371.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17789371"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "That test looked good, not sure what all the `LIBGL_DEBUG` messages mean, but this is a big improvement!", "markup": "markdown", "html": "<p>That test looked good, not sure what all the <code>LIBGL_DEBUG</code> messages mean, but this is a big improvement!</p>", "type": "rendered"}, "created_on": "2015-04-30T09:00:15.483598+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17789371}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17799486.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17799486"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "I enabled the `LIBGL_DEBUG` in my previous tests, supposing that the test failures were somewhat related to the rendering support. I've remove it.\n\n[Full testing branch with GPU support](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-intel-debug/7/), 5 failing tests, two of them seems common with our usual nvidia job. The other three are:\n\n** * UNIT_DataLogger_TEST.xml.<init>**\n```\n101: SharePercentChange[0.712652] ShareMaxPercentChange[1]\n101: ResPercentChange[2.12628]ResMaxPercentChange[3]\n101: SharePercentChange[0.0022805] ShareMaxPercentChange[1]\n101: ResPercentChange[0.482817]ResMaxPercentChange[3]\n101/178 Test #101: UNIT_DataLogger_TEST ...................***Timeout 240.02 sec\n```\n\n** * UNIT_GpuRaySensor_TEST.test_ran**\n\n```\n163: Test timeout computed to be: 240\n163: [----------] Global test environment set-up.\n163: [----------] 1 test from GPURaySensor_TEST\n163: [ RUN      ] GPURaySensor_TEST.CreateLaser\n163: \u001b[1;32m[Msg] \u001b[0m\u001b[1;32mWaiting for master.\u001b[0m\u001b[1;32m\n163: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mConnected to gazebo master @ \u001b[0m\u001b[1;32mhttp://127.0.0.1:11345\u001b[0m\u001b[1;32m\n163: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mPublicized address: \u001b[0m\u001b[1;32m172.23.1.170\u001b[0m\u001b[1;32m\n163: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;36m[Dbg] \u001b[0m\u001b[1;36m[\u001b[0m\u001b[1;36mServerFixture.cc\u001b[0m\u001b[1;36m:\u001b[0m\u001b[1;36m154\u001b[0m\u001b[1;36m] \u001b[0m\u001b[1;36mServerFixture load in \u001b[0m\u001b[1;36m0.7\u001b[0m\u001b[1;36m seconds, timeout after \u001b[0m\u001b[1;36m600\u001b[0m\u001b[1;36m seconds\n163: \u001b[0munknown file: Failure\n163: C++ exception with description \"OGRE EXCEPTION(7:InternalErrorException): Cannot create GL vertex buffer in GLHardwareVertexBuffer::GLHardwareVertexBuffer at /build/buildd/ogre-1.8-1.8.1+dfsg/RenderSystems/GL/src/OgreGLHardwareVertexBuffer.cpp (line 46)\" thrown in the test body.\n163/178 Test #163: UNIT_GpuRaySensor_TEST .................***Exception: SegFault 11.23 sec\n```\n\n** * UNIT_ImagesView_TEST.xml.<init>**\n\n```\n\n117: Test command: /var/lib/jenkins/workspace/gazebo-any-devel-trusty-amd64-gpu-intel-debug/build/gazebo/gui/viewers/UNIT_ImagesView_TEST \"-xml\" \"-o\" \"/var/lib/jenkins/workspace/gazebo-any-devel-trusty-amd64-gpu-intel-debug/build/test_results/UNIT_ImagesView_TEST.xml\"\n117: Test timeout computed to be: 240\n117: SharePercentChange[0.679459] ShareMaxPercentChange[1]\n117: ResPercentChange[2.03693]ResMaxPercentChange[3]\n117: SharePercentChange[0.000249273] ShareMaxPercentChange[1]\n117: ResPercentChange[0.494918]ResMaxPercentChange[3]\n117: UNIT_ImagesView_TEST: /usr/include/boost/thread/pthread/mutex.hpp:108: boost::mutex::~mutex(): Assertion `!posix::pthread_mutex_destroy(&m)' failed.\n117/178 Test #117: UNIT_ImagesView_TEST ...................***Exception: Other 85.51 sec\n```\n\nWe are close!", "markup": "markdown", "html": "<p>I enabled the <code>LIBGL_DEBUG</code> in my previous tests, supposing that the test failures were somewhat related to the rendering support. I've remove it.</p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-intel-debug/7/\" rel=\"nofollow\">Full testing branch with GPU support</a>, 5 failing tests, two of them seems common with our usual nvidia job. The other three are:</p>\n<p><strong> * UNIT_DataLogger_TEST.xml.&lt;init&gt;</strong></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">101</span><span class=\"o\">:</span> <span class=\"n\">SharePercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.712652</span><span class=\"o\">]</span> <span class=\"n\">ShareMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"mi\">101</span><span class=\"o\">:</span> <span class=\"n\">ResPercentChange</span><span class=\"o\">[</span><span class=\"mf\">2.12628</span><span class=\"o\">]</span><span class=\"n\">ResMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"mi\">101</span><span class=\"o\">:</span> <span class=\"n\">SharePercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.0022805</span><span class=\"o\">]</span> <span class=\"n\">ShareMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"mi\">101</span><span class=\"o\">:</span> <span class=\"n\">ResPercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.482817</span><span class=\"o\">]</span><span class=\"n\">ResMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"mi\">101</span><span class=\"o\">/</span><span class=\"mi\">178</span> <span class=\"n\">Test</span> <span class=\"err\">#</span><span class=\"mi\">101</span><span class=\"o\">:</span> <span class=\"n\">UNIT_DataLogger_TEST</span> <span class=\"o\">...................***</span><span class=\"n\">Timeout</span> <span class=\"mf\">240.02</span> <span class=\"n\">sec</span>\n</pre></div>\n\n\n<p><strong> * UNIT_GpuRaySensor_TEST.test_ran</strong></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"n\">Test</span> <span class=\"n\">timeout</span> <span class=\"n\">computed</span> <span class=\"n\">to</span> <span class=\"n\">be</span><span class=\"o\">:</span> <span class=\"mi\">240</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"o\">[----------]</span> <span class=\"n\">Global</span> <span class=\"n\">test</span> <span class=\"n\">environment</span> <span class=\"kd\">set</span><span class=\"o\">-</span><span class=\"n\">up</span><span class=\"o\">.</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"o\">[----------]</span> <span class=\"mi\">1</span> <span class=\"n\">test</span> <span class=\"n\">from</span> <span class=\"n\">GPURaySensor_TEST</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"o\">[</span> <span class=\"n\">RUN</span>      <span class=\"o\">]</span> <span class=\"n\">GPURaySensor_TEST</span><span class=\"o\">.</span><span class=\"na\">CreateLaser</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span><span class=\"o\">[</span><span class=\"n\">Msg</span><span class=\"o\">]</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">mWaiting</span> <span class=\"k\">for</span> <span class=\"n\">master</span><span class=\"o\">.</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span><span class=\"o\">[</span><span class=\"n\">Msg</span><span class=\"o\">]</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">mConnected</span> <span class=\"n\">to</span> <span class=\"n\">gazebo</span> <span class=\"n\">master</span> <span class=\"err\">@</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">mhttp</span><span class=\"o\">://</span><span class=\"mf\">127.0</span><span class=\"o\">.</span><span class=\"mf\">0.1</span><span class=\"o\">:</span><span class=\"mi\">11345</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span><span class=\"o\">[</span><span class=\"n\">Msg</span><span class=\"o\">]</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">mPublicized</span> <span class=\"n\">address</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m172</span><span class=\"o\">.</span><span class=\"mf\">23.1</span><span class=\"o\">.</span><span class=\"mi\">170</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m</span><span class=\"o\">[</span><span class=\"n\">Dbg</span><span class=\"o\">]</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m</span><span class=\"o\">[</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">mServerFixture</span><span class=\"o\">.</span><span class=\"na\">cc</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m</span><span class=\"o\">:</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m154</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">mServerFixture</span> <span class=\"n\">load</span> <span class=\"k\">in</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m0</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m</span> <span class=\"n\">seconds</span><span class=\"o\">,</span> <span class=\"n\">timeout</span> <span class=\"n\">after</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m600</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">m</span><span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">;</span><span class=\"mi\">36</span><span class=\"n\">m</span> <span class=\"n\">seconds</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"n\">munknown</span> <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"n\">Failure</span>\n<span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">++</span> <span class=\"n\">exception</span> <span class=\"k\">with</span> <span class=\"n\">description</span> <span class=\"s2\">&quot;OGRE EXCEPTION(7:InternalErrorException): Cannot create GL vertex buffer in GLHardwareVertexBuffer::GLHardwareVertexBuffer at /build/buildd/ogre-1.8-1.8.1+dfsg/RenderSystems/GL/src/OgreGLHardwareVertexBuffer.cpp (line 46)&quot;</span> <span class=\"n\">thrown</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">test</span> <span class=\"n\">body</span><span class=\"o\">.</span>\n<span class=\"mi\">163</span><span class=\"o\">/</span><span class=\"mi\">178</span> <span class=\"n\">Test</span> <span class=\"err\">#</span><span class=\"mi\">163</span><span class=\"o\">:</span> <span class=\"n\">UNIT_GpuRaySensor_TEST</span> <span class=\"o\">.................***</span><span class=\"n\">Exception</span><span class=\"o\">:</span> <span class=\"n\">SegFault</span> <span class=\"mf\">11.23</span> <span class=\"n\">sec</span>\n</pre></div>\n\n\n<p><strong> * UNIT_ImagesView_TEST.xml.&lt;init&gt;</strong></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">Test</span> <span class=\"n\">command</span><span class=\"o\">:</span> <span class=\"sr\">/var/lib/jenkins/workspace/gazebo-any-devel-trusty-amd64-gpu-intel-debug/build/gazebo/gui/viewers/UNIT_ImagesView_TEST &quot;-xml&quot; &quot;-o&quot; &quot;/var/lib/jenkins/workspace/gazebo-any-devel-trusty-amd64-gpu-intel-debug/build/test_results/</span><span class=\"n\">UNIT_ImagesView_TEST</span><span class=\"o\">.</span><span class=\"na\">xml</span><span class=\"err\">&quot;</span>\n<span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">Test</span> <span class=\"n\">timeout</span> <span class=\"n\">computed</span> <span class=\"n\">to</span> <span class=\"n\">be</span><span class=\"o\">:</span> <span class=\"mi\">240</span>\n<span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">SharePercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.679459</span><span class=\"o\">]</span> <span class=\"n\">ShareMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">ResPercentChange</span><span class=\"o\">[</span><span class=\"mf\">2.03693</span><span class=\"o\">]</span><span class=\"n\">ResMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">SharePercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.000249273</span><span class=\"o\">]</span> <span class=\"n\">ShareMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">ResPercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.494918</span><span class=\"o\">]</span><span class=\"n\">ResMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">UNIT_ImagesView_TEST</span><span class=\"o\">:</span> <span class=\"sr\">/usr/include/boost/thread/pthread/</span><span class=\"n\">mutex</span><span class=\"o\">.</span><span class=\"na\">hpp</span><span class=\"o\">:</span><span class=\"mi\">108</span><span class=\"o\">:</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">::~</span><span class=\"n\">mutex</span><span class=\"o\">():</span> <span class=\"n\">Assertion</span> <span class=\"err\">`</span><span class=\"o\">!</span><span class=\"n\">posix</span><span class=\"o\">::</span><span class=\"n\">pthread_mutex_destroy</span><span class=\"o\">(&amp;</span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"err\">&#39;</span> <span class=\"n\">failed</span><span class=\"o\">.</span>\n<span class=\"mi\">117</span><span class=\"o\">/</span><span class=\"mi\">178</span> <span class=\"n\">Test</span> <span class=\"err\">#</span><span class=\"mi\">117</span><span class=\"o\">:</span> <span class=\"n\">UNIT_ImagesView_TEST</span> <span class=\"o\">...................***</span><span class=\"n\">Exception</span><span class=\"o\">:</span> <span class=\"n\">Other</span> <span class=\"mf\">85.51</span> <span class=\"n\">sec</span>\n</pre></div>\n\n\n<p>We are close!</p>", "type": "rendered"}, "created_on": "2015-04-30T15:41:42.310173+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2015-04-30T15:42:21.320175+00:00", "type": "issue_comment", "id": 17799486}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/17802167.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-17802167"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "I get the same `UNIT_GpuRaySensor_TEST` failure in about 60% of my overnight tests", "markup": "markdown", "html": "<p>I get the same <code>UNIT_GpuRaySensor_TEST</code> failure in about 60% of my overnight tests</p>", "type": "rendered"}, "created_on": "2015-04-30T18:08:08.486788+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17802167}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/28466737.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-28466737"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "`UNIT_GpuRaySenor_TEST` been failingon NVidia as well:\n\n    $ ./UNIT_GpuRaySensor_TEST \n    [==========] Running 1 test from 1 test case.\n    [----------] Global test environment set-up.\n    [----------] 1 test from GPURaySensor_TEST\n    [ RUN      ] GPURaySensor_TEST.CreateLaser\n    [Msg] Waiting for master.\n    [Msg] Connected to gazebo master @ http://127.0.0.1:11345\n    [Msg] Publicized address: xxx.xxx.xxx.xxx\n    [Dbg] [ServerFixture.cc:145] ServerFixture load in 1.1 seconds, timeout after 600 seconds\n    unknown file: Failure\n    C++ exception with description \"OGRE EXCEPTION(7:InternalErrorException): Cannot create GL vertex buffer in GLHardwareVertexBuffer::GLHardwareVertexBuffer at     /build/buildd/ogre-1.8-1.8.1+dfsg/RenderSystems/GL/src/OgreGLHardwareVertexBuffer.cpp (line 46)\" thrown in the test body.\n    [Dbg] [ServerFixture.cc:96] ServerFixture::Unload\n    Segmentation fault (core dumped)\n\nThe fact that I couldn't reproduce it on GDB makes it similar to some kind of... race condition. Even thought, `Valgrind` produces following:\n\n    ==18472== Thread 3:\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0x1D289094: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D22F425: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D231C6D: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D3475EF: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D348B1D: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D2691E4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D269561: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D2695F7: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D346FD4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D34FED0: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1CF74875: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1CF74BF7: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0x1D289094: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D22F425: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D22FCDC: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D37B170: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D37C5B0: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D2691E4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D269561: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D2695F7: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D37B456: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D353EEA: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D2260F4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==    by 0x1D208EAB: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E37: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:181)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E60: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:181)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E40: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:181)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E69: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:181)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E37: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:182)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E60: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:182)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E40: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:182)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    ==18472== Conditional jump or move depends on uninitialised value(s)\n    ==18472==    at 0xCF99E69: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n    ==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&, int const&, int const&, int const&) (DataManager.cpp:693)\n    ==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&, int const&, int const&) (DataManager.cpp:182)\n    ==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n    ==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&) (VCloudsManager.cpp:108)\n    ==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n    ==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n    ==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&, bool, bool) (RenderEngine.cc:192)\n    ==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&, bool, bool) (RenderingIface.cc:88)\n    ==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&, bool, std::string const&) (ServerFixture.cc:228)\n    ==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n    ==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n    ==18472==\n    [Dbg] [ServerFixture.cc:145] ServerFixture load in [Wrn] [Publisher.cc:132] 20.8 seconds, timeout after 600 seconds\n    Queue limit reached for topic /gazebo/default/pose/local/info, deleting message. This warning is printed only once.\n    unknown file: Failure\n    C++ exception with description \"OGRE EXCEPTION(7:InternalErrorException): Cannot create GL vertex buffer in GLHardwareVertexBuffer::GLHardwareVertexBuffer at /build/buildd/ogre-1.8-1.8.1+dfsg/RenderSystems/GL/src/OgreGLHardwareVertexBuffer.cpp (line 46)\" thrown in the test body.\n    [Dbg] [ServerFixture.cc:96] ServerFixture::Unload\n    [Wrn] [Publisher.cc:132] Queue limit reached for topic /gazebo/default/physics/contacts, deleting message. This warning is printed only once.\n    [  FAILED  ] GPURaySensor_TEST.CreateLaser (39510 ms)\n    [----------] 1 test from GPURaySensor_TEST (39522 ms total)\n\n    [----------] Global test environment tear-down\n    [==========] 1 test from 1 test case ran. (39568 ms total)\n    [  PASSED  ] 0 tests.\n    [  FAILED  ] 1 test, listed below:\n    [  FAILED  ] GPURaySensor_TEST.CreateLaser\n\n     1 FAILED TEST\n", "markup": "markdown", "html": "<p><code>UNIT_GpuRaySenor_TEST</code> been failingon NVidia as well:</p>\n<div class=\"codehilite\"><pre><span></span>$ ./UNIT_GpuRaySensor_TEST \n<span class=\"o\">[==========]</span> Running <span class=\"m\">1</span> <span class=\"nb\">test</span> from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">1</span> <span class=\"nb\">test</span> from GPURaySensor_TEST\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> GPURaySensor_TEST.CreateLaser\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: xxx.xxx.xxx.xxx\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:145<span class=\"o\">]</span> ServerFixture load in <span class=\"m\">1</span>.1 seconds, timeout after <span class=\"m\">600</span> seconds\nunknown file: Failure\nC++ exception with description <span class=\"s2\">&quot;OGRE EXCEPTION(7:InternalErrorException): Cannot create GL vertex buffer in GLHardwareVertexBuffer::GLHardwareVertexBuffer at     /build/buildd/ogre-1.8-1.8.1+dfsg/RenderSystems/GL/src/OgreGLHardwareVertexBuffer.cpp (line 46)&quot;</span> thrown in the <span class=\"nb\">test</span> body.\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:96<span class=\"o\">]</span> ServerFixture::Unload\nSegmentation fault <span class=\"o\">(</span>core dumped<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>The fact that I couldn't reproduce it on GDB makes it similar to some kind of... race condition. Even thought, <code>Valgrind</code> produces following:</p>\n<div class=\"codehilite\"><pre><span></span>==18472== Thread 3:\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0x1D289094: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D22F425: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D231C6D: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D3475EF: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D348B1D: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D2691E4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D269561: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D2695F7: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D346FD4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D34FED0: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1CF74875: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1CF74BF7: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0x1D289094: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D22F425: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D22FCDC: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D37B170: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D37C5B0: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D2691E4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D269561: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D2695F7: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D37B456: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D353EEA: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D2260F4: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==    by 0x1D208EAB: ??? (in /usr/lib/nvidia-340-updates/libnvidia-glcore.so.340.96)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E37: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:181)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E60: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:181)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E40: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:181)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E69: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41841A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:181)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E37: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:182)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E60: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:182)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E40: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:182)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n==18472== Conditional jump or move depends on uninitialised value(s)\n==18472==    at 0xCF99E69: Ogre::PixelUtil::packColour(float, float, float, float, Ogre::PixelFormat, void*) (in /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1)\n==18472==    by 0xD417EA7: SkyX::VClouds::DataManager::_updateVolTextureData(SkyX::VClouds::DataManager::Cell***, SkyX::VClouds::DataManager::VolTextureId const&amp;, int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:693)\n==18472==    by 0xD41843A: SkyX::VClouds::DataManager::create(int const&amp;, int const&amp;, int const&amp;) (DataManager.cpp:182)\n==18472==    by 0xD421571: SkyX::VClouds::VClouds::create() (VClouds.cpp:82)\n==18472==    by 0xD415E2F: SkyX::VCloudsManager::create(float const&amp;) (VCloudsManager.cpp:108)\n==18472==    by 0x5A2FBA6: gazebo::rendering::Scene::SetSky() (Scene.cc:2667)\n==18472==    by 0x5A3ACFF: gazebo::rendering::Scene::Init() (Scene.cc:329)\n==18472==    by 0x5A20FD5: gazebo::rendering::RenderEngine::CreateScene(std::string const&amp;, bool, bool) (RenderEngine.cc:192)\n==18472==    by 0x5A27212: gazebo::rendering::create_scene(std::string const&amp;, bool, bool) (RenderingIface.cc:88)\n==18472==    by 0x44022B: gazebo::ServerFixture::RunServer(std::string const&amp;, bool, std::string const&amp;) (ServerFixture.cc:228)\n==18472==    by 0x6F58A49: ??? (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0)\n==18472==    by 0x631B183: start_thread (pthread_create.c:312)\n==18472==\n[Dbg] [ServerFixture.cc:145] ServerFixture load in [Wrn] [Publisher.cc:132] 20.8 seconds, timeout after 600 seconds\nQueue limit reached for topic /gazebo/default/pose/local/info, deleting message. This warning is printed only once.\nunknown file: Failure\nC++ exception with description &quot;OGRE EXCEPTION(7:InternalErrorException): Cannot create GL vertex buffer in GLHardwareVertexBuffer::GLHardwareVertexBuffer at /build/buildd/ogre-1.8-1.8.1+dfsg/RenderSystems/GL/src/OgreGLHardwareVertexBuffer.cpp (line 46)&quot; thrown in the test body.\n[Dbg] [ServerFixture.cc:96] ServerFixture::Unload\n[Wrn] [Publisher.cc:132] Queue limit reached for topic /gazebo/default/physics/contacts, deleting message. This warning is printed only once.\n[  FAILED  ] GPURaySensor_TEST.CreateLaser (39510 ms)\n[----------] 1 test from GPURaySensor_TEST (39522 ms total)\n\n[----------] Global test environment tear-down\n[==========] 1 test from 1 test case ran. (39568 ms total)\n[  PASSED  ] 0 tests.\n[  FAILED  ] 1 test, listed below:\n[  FAILED  ] GPURaySensor_TEST.CreateLaser\n\n 1 FAILED TEST\n</pre></div>", "type": "rendered"}, "created_on": "2016-06-13T14:00:28.327241+00:00", "user": {"display_name": "K\u0105 Mykolas", "uuid": "{6f7312df-9b82-4fc5-a64f-d5debc8656e7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f7312df-9b82-4fc5-a64f-d5debc8656e7%7D"}, "html": {"href": "https://bitbucket.org/%7B6f7312df-9b82-4fc5-a64f-d5debc8656e7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/e81acdd9b6273c7860ac440c99eb747cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKM-3.png"}}, "nickname": "Kamiccolo", "type": "user", "account_id": "557058:31e5dcb8-8057-4c90-a8a8-c72e7b624d07"}, "updated_on": null, "type": "issue_comment", "id": 28466737}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/30609440.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-30609440"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-14T19:20:01.575350+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 30609440}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/36551919.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-36551919"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "Don't know if this is related to this bug, but I got a similar crash with backtrace which looked like @Kamiccolo's one. It was due to wrong texture indexing in VClouds::DataManager, and can be fixed with this patch:\n\n```\ndiff -r 7d7c37d66d00 gazebo/rendering/skyx/src/VClouds/DataManager.cpp\n--- a/gazebo/rendering/skyx/src/VClouds/DataManager.cpp Wed May 03 14:44:20 2017 +0000\n+++ b/gazebo/rendering/skyx/src/VClouds/DataManager.cpp Thu May 04 12:33:56 2017 +0500\n@@ -22,6 +22,8 @@\n */\n \n #include <vector>\n+\n+#include <OgrePixelFormat.h>\n #include \"VClouds/DataManager.h\"\n \n #include \"VClouds/VClouds.h\"\n@@ -689,8 +691,9 @@\n       {\n         for (x = pb.left; x < pb.right; x++)\n         {\n+          Ogre::uint8* ptr = (Ogre::uint8 *) pb.data + (x + y * pb.rowPitch + z * pb.slicePitch) * Ogre::PixelUtil::getNumElemBytes(pb.format);\n           Ogre::PixelUtil::packColour(c[x][y][z].dens/* TODO!!!! */,\n-              c[x][y][z].light, 0, 0, pb.format, &pbptr[x]);\n+              c[x][y][z].light, 0, 0, pb.format, ptr);\n         }\n         pbptr += pb.rowPitch;\n       }\n```", "markup": "markdown", "html": "<p>Don't know if this is related to this bug, but I got a similar crash with backtrace which looked like @Kamiccolo's one. It was due to wrong texture indexing in VClouds::DataManager, and can be fixed with this patch:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 7d7c37d66d00 gazebo/rendering/skyx/src/VClouds/DataManager.cpp</span>\n<span class=\"gd\">--- a/gazebo/rendering/skyx/src/VClouds/DataManager.cpp Wed May 03 14:44:20 2017 +0000</span>\n<span class=\"gi\">+++ b/gazebo/rendering/skyx/src/VClouds/DataManager.cpp Thu May 04 12:33:56 2017 +0500</span>\n<span class=\"gu\">@@ -22,6 +22,8 @@</span>\n */\n\n #include &lt;vector&gt;\n<span class=\"gi\">+</span>\n<span class=\"gi\">+#include &lt;OgrePixelFormat.h&gt;</span>\n #include &quot;VClouds/DataManager.h&quot;\n\n #include &quot;VClouds/VClouds.h&quot;\n<span class=\"gu\">@@ -689,8 +691,9 @@</span>\n       {\n         for (x = pb.left; x &lt; pb.right; x++)\n         {\n<span class=\"gi\">+          Ogre::uint8* ptr = (Ogre::uint8 *) pb.data + (x + y * pb.rowPitch + z * pb.slicePitch) * Ogre::PixelUtil::getNumElemBytes(pb.format);</span>\n           Ogre::PixelUtil::packColour(c[x][y][z].dens/* TODO!!!! */,\n<span class=\"gd\">-              c[x][y][z].light, 0, 0, pb.format, &amp;pbptr[x]);</span>\n<span class=\"gi\">+              c[x][y][z].light, 0, 0, pb.format, ptr);</span>\n         }\n         pbptr += pb.rowPitch;\n       }\n</pre></div>", "type": "rendered"}, "created_on": "2017-05-04T07:34:38.893507+00:00", "user": {"display_name": "Alexey Denisov", "uuid": "{8b79413d-7c6c-4bcb-bf5d-8fe40efaff8d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8b79413d-7c6c-4bcb-bf5d-8fe40efaff8d%7D"}, "html": {"href": "https://bitbucket.org/%7B8b79413d-7c6c-4bcb-bf5d-8fe40efaff8d%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:33eb11c8-791a-446b-96de-b19e6f661efe/85400d16-6830-4418-a9e8-6d2cf6edfd9b/128"}}, "nickname": "denisov_alexey", "type": "user", "account_id": "557058:33eb11c8-791a-446b-96de-b19e6f661efe"}, "updated_on": "2017-05-04T18:28:34.379016+00:00", "type": "issue_comment", "id": 36551919}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832/comments/37258483.json"}, "html": {"href": "#!/osrf/gazebo/issues/832#comment-37258483"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/832.json"}}, "type": "issue", "id": 832, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Segfault of tests in Intel video cards"}, "content": {"raw": "@denisov_alexey 's patch is applied to the default branch (gazebo 9) by @kartikmohta on pull request #2719", "markup": "markdown", "html": "<p>@denisov_alexey 's patch is applied to the default branch (gazebo 9) by @kartikmohta on <a href=\"#!/osrf/gazebo/pull-requests/2719/fix-index-error-in-vclouds-datamanagercpp\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2719</a></p>", "type": "rendered"}, "created_on": "2017-05-30T18:10:33.980564+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 37258483}], "page": 1, "size": 14}