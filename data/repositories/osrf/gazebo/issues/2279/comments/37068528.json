{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2279/comments/37068528.json"}, "html": {"href": "#!/osrf/gazebo/issues/2279#comment-37068528"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/2279.json"}}, "type": "issue", "id": 2279, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Core dump with gazebo 8.1 in gazebo_ros_pkgs"}, "content": {"raw": "One thing we could do is update `GAZEBO_REGISTER_*_PLUGIN` macros to add another symbol to the shared library: `char *RegisteredPluginType`. The gazebo plugin loading code would first call `RegisterPlugin()`. That method would set `RegisteredPluginType = \"model\";` before it returned an instance of the plugin. The plugin loading code can check for that symbol, and if it exists change `PluginT::type` to that type. The code responsible for the `-g` option would need to double check the type and cast to the appropriate base class. For backwards compatibility the code handling `-g` should assume `SystemPlugin` to avoid the crash on libraries that have already been built.", "markup": "markdown", "html": "<p>One thing we could do is update <code>GAZEBO_REGISTER_*_PLUGIN</code> macros to add another symbol to the shared library: <code>char *RegisteredPluginType</code>. The gazebo plugin loading code would first call <code>RegisterPlugin()</code>. That method would set <code>RegisteredPluginType = \"model\";</code> before it returned an instance of the plugin. The plugin loading code can check for that symbol, and if it exists change <code>PluginT::type</code> to that type. The code responsible for the <code>-g</code> option would need to double check the type and cast to the appropriate base class. For backwards compatibility the code handling <code>-g</code> should assume <code>SystemPlugin</code> to avoid the crash on libraries that have already been built.</p>", "type": "rendered"}, "created_on": "2017-05-22T19:27:48.741196+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 37068528}