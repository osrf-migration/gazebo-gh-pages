{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1166/comments/10302197.json"}, "html": {"href": "#!/osrf/gazebo/issues/1166#comment-10302197"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1166.json"}}, "type": "issue", "id": 1166, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "API for Inverse Dynamics in Gazebo"}, "content": {"raw": "Preliminary discussion notes:\n\nGeneralized inertia, velocity and Jacobians are used by the controller.\n\nPropose API for Gazebo physics - \n\nLayout of independent coordinates (assuming n joint degrees-of-freedom + 6 DOF base = m DOF total)\n\nModel functions:\n\n~~~\nGetIndependentVelocity(const Pose& P, Vector& v)  // get the velocities of the m degrees-of-freedom of the model (for floating bases, velocity is computed in frame P)\n\nGetIndependentForces(const Pose& P, Vector& f)  // get the forces of the m degrees-of-freedom of the model (for floating bases, force is computed in frame P); forces will include gravity and centrifugal/Coriolis forces\n\nGetIndependentInertia(const Pose& P, Matrix& m)  // get the m x m inertia matrix of the model (for floating bases, inertia is computed in frame P)\n\nGetJacobian(math::Vector3& p, Link startLink, Link endEffector, const Pose& P, Matrix& m) // gets the Jacobian from the start link to the end-effector with respect to point p and defined in pose P\n\nEach Jacobian (J) is a 6xq matrix, where q is determined by the startLink and endEffector; a contact Jacobian would be composed by multiplying [ n s t; zeros(3)] * J, where n, s, and t is the contact normal and the two contact tangents\n~~~\nImplementation - TBD.", "markup": "markdown", "html": "<p>Preliminary discussion notes:</p>\n<p>Generalized inertia, velocity and Jacobians are used by the controller.</p>\n<p>Propose API for Gazebo physics - </p>\n<p>Layout of independent coordinates (assuming n joint degrees-of-freedom + 6 DOF base = m DOF total)</p>\n<p>Model functions:</p>\n<div class=\"codehilite\"><pre><span></span>GetIndependentVelocity(const Pose&amp; P, Vector&amp; v)  // get the velocities of the m degrees-of-freedom of the model (for floating bases, velocity is computed in frame P)\n\nGetIndependentForces(const Pose&amp; P, Vector&amp; f)  // get the forces of the m degrees-of-freedom of the model (for floating bases, force is computed in frame P); forces will include gravity and centrifugal/Coriolis forces\n\nGetIndependentInertia(const Pose&amp; P, Matrix&amp; m)  // get the m x m inertia matrix of the model (for floating bases, inertia is computed in frame P)\n\nGetJacobian(math::Vector3&amp; p, Link startLink, Link endEffector, const Pose&amp; P, Matrix&amp; m) // gets the Jacobian from the start link to the end-effector with respect to point p and defined in pose P\n\nEach Jacobian (J) is a 6xq matrix, where q is determined by the startLink and endEffector; a contact Jacobian would be composed by multiplying [ n s t; zeros(3)] * J, where n, s, and t is the contact normal and the two contact tangents\n</pre></div>\n\n\n<p>Implementation - TBD.</p>", "type": "rendered"}, "created_on": "2014-05-21T22:00:03.226934+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-09-05T18:05:36.542360+00:00", "type": "issue_comment", "id": 10302197}