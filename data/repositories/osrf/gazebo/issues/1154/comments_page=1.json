{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1154/comments/9544459.json"}, "html": {"href": "#!/osrf/gazebo/issues/1154#comment-9544459"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1154.json"}}, "type": "issue", "id": 1154, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Large models break the simulation"}, "content": {"raw": "Looks like a convergence issue.  The long moment arm to the point masses must be making the system difficult to converge.  Increasing the number of iterations will stabilize it.   For example, modify the world file by adding a physics block as below should stabilize it:\n~~~\n<?xml version=\"1.0\"?> \n<sdf version=\"1.4\">\n  <world name=\"animated_box_world\">\n\n    <physics type=\"ode\">\n      <gravity>0.000000 0.000000 -9.810000</gravity>\n      <ode>\n        <solver>\n          <type>quick</type>\n          <iters>1000</iters>\n        </solver>\n      </ode>\n      <bullet>\n        <solver>\n          <type>sequential_impulse</type>\n          <iters>1000</iters>\n        </solver>\n      </bullet>\n      <real_time_update_rate>0.000000</real_time_update_rate>\n      <max_step_size>0.001</max_step_size>\n    </physics>\n\n    <!-- Ground Plane -->\n    <include>\n      <uri>model://ground_plane</uri>\n    </include>\n    ...\n~~~\n\nAlternatively, you can specify inertia values that correspond to real world objects of comparable sizes to stabilize the system as well.  For example,\n~~~\n<?xml version=\"1.0\"?> \n<sdf version=\"1.4\">\n  <world name=\"animated_box_world\">\n\n    <!-- Ground Plane -->\n    <include>\n      <uri>model://ground_plane</uri>\n    </include>\n\n    <include>\n      <uri>model://sun</uri>\n    </include>\n    <model name=\"box\">\n      <pose>0 0 5 0 0 0</pose>\n\n      <link name=\"boxlink\">\n\n        <inertial>\n          <mass>100.0</mass>\n          <inertia>\n            <ixx>1.0</ixx>\n            <iyy>1.0</iyy>\n            <izz>1.0</izz>\n            <ixy>0</ixy>\n            <ixz>0</ixz>\n            <iyz>0</iyz>\n          </inertia>\n        </inertial>\n\n        <collision name=\"collision\">\n          <geometry>\n            <box>\n              <size>7 7 7</size>\n            </box>\n          </geometry>\n        </collision>\n\n        <visual name=\"visual\">\n          <geometry>\n            <box>\n              <size>7 7 7</size>\n            </box>\n          </geometry>\n        </visual>\n      </link>\n      \n      \n      \n      <!-- Top Middle -->\n      <link name=\"point.1\">\n        <gravity>true</gravity>\n        <self_collide>true</self_collide>\n        <pose>7 7 0 0 0 0</pose>\n\n        <inertial>\n          <mass>0.01</mass>\n          <inertia>\n            <ixx>0.0001</ixx>\n            <iyy>0.0001</iyy>\n            <izz>0.0001</izz>\n            <ixy>0</ixy>\n            <ixz>0</ixz>\n            <iyz>0</iyz>\n          </inertia>\n        </inertial>\n\n        <visual name=\"visual-point.1\"><geometry><sphere><radius>0.1</radius></sphere></geometry></visual>\n      </link>\n      <joint name=\"cartlink-point.1\" type=\"revolute\">\n        <axis><xyz>0 0 1</xyz><limit><lower>0</lower><upper>0</upper></limit><use_parent_model_frame>true</use_parent_model_frame></axis>\n        <parent>boxlink</parent>\n        <child>point.1</child>\n      </joint>\n      \n      <!-- Middle Middle, on top of wheel -->\n      <link name=\"point.2\">\n        <gravity>true</gravity>\n        <self_collide>true</self_collide>\n        <pose>7 7 0.5 0 0 0</pose>\n\n        <inertial>\n          <mass>0.01</mass>\n          <inertia>\n            <ixx>0.0001</ixx>\n            <iyy>0.0001</iyy>\n            <izz>0.0001</izz>\n            <ixy>0</ixy>\n            <ixz>0</ixz>\n            <iyz>0</iyz>\n          </inertia>\n        </inertial>\n\n        <visual name=\"visual-point.2\"><geometry><sphere><radius>0.1</radius></sphere></geometry></visual>\n      </link>\n      <joint name=\"cartlink-point.2\" type=\"revolute\">\n        <axis><xyz>0 0 1</xyz><limit><lower>0</lower><upper>0</upper></limit><use_parent_model_frame>true</use_parent_model_frame></axis>\n        <parent>boxlink</parent>\n        <child>point.2</child>\n      </joint>\n      \n      \n      <link name=\"point.3\">\n        <gravity>true</gravity>\n        <self_collide>true</self_collide>\n        <pose>7 7 1 0 0 0</pose>\n\n        <inertial>\n          <mass>0.01</mass>\n          <inertia>\n            <ixx>0.0001</ixx>\n            <iyy>0.0001</iyy>\n            <izz>0.0001</izz>\n            <ixy>0</ixy>\n            <ixz>0</ixz>\n            <iyz>0</iyz>\n          </inertia>\n        </inertial>\n\n        <visual name=\"visual-point.3\"><geometry><sphere><radius>0.1</radius></sphere></geometry></visual>\n      </link>\n      <joint name=\"cartlink-point.3\" type=\"revolute\">\n        <axis><xyz>0 0 1</xyz><limit><lower>0</lower><upper>0</upper></limit><use_parent_model_frame>true</use_parent_model_frame></axis>\n        <parent>boxlink</parent>\n        <child>point.3</child>\n      </joint>\n      \n      \n      \n      \n      <link name=\"point1\">\n        <gravity>true</gravity>\n        <self_collide>true</self_collide>\n        <pose>7 7 2 0 0 0</pose>\n\n        <inertial>\n          <mass>0.01</mass>\n          <inertia>\n            <ixx>0.0001</ixx>\n            <iyy>0.0001</iyy>\n            <izz>0.0001</izz>\n            <ixy>0</ixy>\n            <ixz>0</ixz>\n            <iyz>0</iyz>\n          </inertia>\n        </inertial>\n\n        <!-- \n        <collision name=\"collision\">\n          <geometry>\n            <sphere>\n              <radius>0.01</radius>\n            </sphere>\n          </geometry>\n        </collision>\n        <!-- -->\n        <visual name=\"visual\">\n          <geometry>\n            <sphere>\n              <radius>0.1</radius>\n            </sphere>\n          </geometry>\n        </visual>\n      </link>\n      <joint name=\"boxlink-point1\" type=\"revolute\">\n        <axis>\n           <xyz>0 0 1</xyz>\n           <limit>\n             <lower>0</lower>\n             <upper>0</upper>\n           </limit>\n         </axis>\n         <parent>boxlink</parent>\n         <child>point1</child>\n       </joint>\n      <!--><plugin name=\"animated_box\" filename=\"libanimated_box.so\"/>\n      \n      \n    </model>        \n  </world>\n</sdf>\n~~~\n\nIf you are compiling from source, you can also test out engines such as `simbody` and `dart`.  Simbody will reduce internal time step size to make sure contacts are stable, while DART uses direct solver to resolve contact constraints.  Each engine deal with the dynamics problem differently and may have different resulting behaviors.  Something fun to experiment with.\n\nIssues like this one could probably have been resolved automatically if the GUI provided better feedback to let users understand what's happening under the hood of the engine used.  For example, in this particular test world, if gzclient or gzserver raised a warning about the lack of constraint solver convergence in the dynamics solution, paused simulation and proposed alternative solutions such as raising the number of iterations or using a different solver, it might make it easier to produce better simulation results.  Creating a feature request issue #1155.\n \n", "markup": "markdown", "html": "<p>Looks like a convergence issue.  The long moment arm to the point masses must be making the system difficult to converge.  Increasing the number of iterations will stabilize it.   For example, modify the world file by adding a physics block as below should stabilize it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot;?&gt;</span> \n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.4&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;animated_box_world&quot;</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;gravity&gt;</span>0.000000 0.000000 -9.810000<span class=\"nt\">&lt;/gravity&gt;</span>\n      <span class=\"nt\">&lt;ode&gt;</span>\n        <span class=\"nt\">&lt;solver&gt;</span>\n          <span class=\"nt\">&lt;type&gt;</span>quick<span class=\"nt\">&lt;/type&gt;</span>\n          <span class=\"nt\">&lt;iters&gt;</span>1000<span class=\"nt\">&lt;/iters&gt;</span>\n        <span class=\"nt\">&lt;/solver&gt;</span>\n      <span class=\"nt\">&lt;/ode&gt;</span>\n      <span class=\"nt\">&lt;bullet&gt;</span>\n        <span class=\"nt\">&lt;solver&gt;</span>\n          <span class=\"nt\">&lt;type&gt;</span>sequential_impulse<span class=\"nt\">&lt;/type&gt;</span>\n          <span class=\"nt\">&lt;iters&gt;</span>1000<span class=\"nt\">&lt;/iters&gt;</span>\n        <span class=\"nt\">&lt;/solver&gt;</span>\n      <span class=\"nt\">&lt;/bullet&gt;</span>\n      <span class=\"nt\">&lt;real_time_update_rate&gt;</span>0.000000<span class=\"nt\">&lt;/real_time_update_rate&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n\n    <span class=\"c\">&lt;!-- Ground Plane --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    ...\n</pre></div>\n\n\n<p>Alternatively, you can specify inertia values that correspond to real world objects of comparable sizes to stabilize the system as well.  For example,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot;?&gt;</span> \n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.4&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;animated_box_world&quot;</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"c\">&lt;!-- Ground Plane --&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;box&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;boxlink&quot;</span><span class=\"nt\">&gt;</span>\n\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>100.0<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>1.0<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>1.0<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>1.0<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n\n        <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>7 7 7<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/collision&gt;</span>\n\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>7 7 7<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/visual&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n\n\n\n      <span class=\"c\">&lt;!-- Top Middle --&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;point.1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;gravity&gt;</span>true<span class=\"nt\">&lt;/gravity&gt;</span>\n        <span class=\"nt\">&lt;self_collide&gt;</span>true<span class=\"nt\">&lt;/self_collide&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>7 7 0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>0.01<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>0.0001<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>0.0001<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>0.0001<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual-point.1&quot;</span><span class=\"nt\">&gt;&lt;geometry&gt;&lt;sphere&gt;&lt;radius&gt;</span>0.1<span class=\"nt\">&lt;/radius&gt;&lt;/sphere&gt;&lt;/geometry&gt;&lt;/visual&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n      <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;cartlink-point.1&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;axis&gt;&lt;xyz&gt;</span>0 0 1<span class=\"nt\">&lt;/xyz&gt;&lt;limit&gt;&lt;lower&gt;</span>0<span class=\"nt\">&lt;/lower&gt;&lt;upper&gt;</span>0<span class=\"nt\">&lt;/upper&gt;&lt;/limit&gt;&lt;use_parent_model_frame&gt;</span>true<span class=\"nt\">&lt;/use_parent_model_frame&gt;&lt;/axis&gt;</span>\n        <span class=\"nt\">&lt;parent&gt;</span>boxlink<span class=\"nt\">&lt;/parent&gt;</span>\n        <span class=\"nt\">&lt;child&gt;</span>point.1<span class=\"nt\">&lt;/child&gt;</span>\n      <span class=\"nt\">&lt;/joint&gt;</span>\n\n      <span class=\"c\">&lt;!-- Middle Middle, on top of wheel --&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;point.2&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;gravity&gt;</span>true<span class=\"nt\">&lt;/gravity&gt;</span>\n        <span class=\"nt\">&lt;self_collide&gt;</span>true<span class=\"nt\">&lt;/self_collide&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>7 7 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>0.01<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>0.0001<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>0.0001<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>0.0001<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual-point.2&quot;</span><span class=\"nt\">&gt;&lt;geometry&gt;&lt;sphere&gt;&lt;radius&gt;</span>0.1<span class=\"nt\">&lt;/radius&gt;&lt;/sphere&gt;&lt;/geometry&gt;&lt;/visual&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n      <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;cartlink-point.2&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;axis&gt;&lt;xyz&gt;</span>0 0 1<span class=\"nt\">&lt;/xyz&gt;&lt;limit&gt;&lt;lower&gt;</span>0<span class=\"nt\">&lt;/lower&gt;&lt;upper&gt;</span>0<span class=\"nt\">&lt;/upper&gt;&lt;/limit&gt;&lt;use_parent_model_frame&gt;</span>true<span class=\"nt\">&lt;/use_parent_model_frame&gt;&lt;/axis&gt;</span>\n        <span class=\"nt\">&lt;parent&gt;</span>boxlink<span class=\"nt\">&lt;/parent&gt;</span>\n        <span class=\"nt\">&lt;child&gt;</span>point.2<span class=\"nt\">&lt;/child&gt;</span>\n      <span class=\"nt\">&lt;/joint&gt;</span>\n\n\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;point.3&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;gravity&gt;</span>true<span class=\"nt\">&lt;/gravity&gt;</span>\n        <span class=\"nt\">&lt;self_collide&gt;</span>true<span class=\"nt\">&lt;/self_collide&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>7 7 1 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>0.01<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>0.0001<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>0.0001<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>0.0001<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual-point.3&quot;</span><span class=\"nt\">&gt;&lt;geometry&gt;&lt;sphere&gt;&lt;radius&gt;</span>0.1<span class=\"nt\">&lt;/radius&gt;&lt;/sphere&gt;&lt;/geometry&gt;&lt;/visual&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n      <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;cartlink-point.3&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;axis&gt;&lt;xyz&gt;</span>0 0 1<span class=\"nt\">&lt;/xyz&gt;&lt;limit&gt;&lt;lower&gt;</span>0<span class=\"nt\">&lt;/lower&gt;&lt;upper&gt;</span>0<span class=\"nt\">&lt;/upper&gt;&lt;/limit&gt;&lt;use_parent_model_frame&gt;</span>true<span class=\"nt\">&lt;/use_parent_model_frame&gt;&lt;/axis&gt;</span>\n        <span class=\"nt\">&lt;parent&gt;</span>boxlink<span class=\"nt\">&lt;/parent&gt;</span>\n        <span class=\"nt\">&lt;child&gt;</span>point.3<span class=\"nt\">&lt;/child&gt;</span>\n      <span class=\"nt\">&lt;/joint&gt;</span>\n\n\n\n\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;point1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;gravity&gt;</span>true<span class=\"nt\">&lt;/gravity&gt;</span>\n        <span class=\"nt\">&lt;self_collide&gt;</span>true<span class=\"nt\">&lt;/self_collide&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>7 7 2 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>0.01<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>0.0001<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>0.0001<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>0.0001<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n\n        <span class=\"c\">&lt;!-- </span>\n<span class=\"c\">        &lt;collision name=&quot;collision&quot;&gt;</span>\n<span class=\"c\">          &lt;geometry&gt;</span>\n<span class=\"c\">            &lt;sphere&gt;</span>\n<span class=\"c\">              &lt;radius&gt;0.01&lt;/radius&gt;</span>\n<span class=\"c\">            &lt;/sphere&gt;</span>\n<span class=\"c\">          &lt;/geometry&gt;</span>\n<span class=\"c\">        &lt;/collision&gt;</span>\n<span class=\"c\">        &lt;!-- --&gt;</span>\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;sphere&gt;</span>\n              <span class=\"nt\">&lt;radius&gt;</span>0.1<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;/sphere&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/visual&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n      <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;boxlink-point1&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;axis&gt;</span>\n           <span class=\"nt\">&lt;xyz&gt;</span>0 0 1<span class=\"nt\">&lt;/xyz&gt;</span>\n           <span class=\"nt\">&lt;limit&gt;</span>\n             <span class=\"nt\">&lt;lower&gt;</span>0<span class=\"nt\">&lt;/lower&gt;</span>\n             <span class=\"nt\">&lt;upper&gt;</span>0<span class=\"nt\">&lt;/upper&gt;</span>\n           <span class=\"nt\">&lt;/limit&gt;</span>\n         <span class=\"nt\">&lt;/axis&gt;</span>\n         <span class=\"nt\">&lt;parent&gt;</span>boxlink<span class=\"nt\">&lt;/parent&gt;</span>\n         <span class=\"nt\">&lt;child&gt;</span>point1<span class=\"nt\">&lt;/child&gt;</span>\n       <span class=\"nt\">&lt;/joint&gt;</span>\n      <span class=\"c\">&lt;!--&gt;&lt;plugin name=&quot;animated_box&quot; filename=&quot;libanimated_box.so&quot;/&gt;</span>\n\n\n<span class=\"c\">    &lt;/model&gt;        </span>\n<span class=\"c\">  &lt;/world&gt;</span>\n<span class=\"c\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>If you are compiling from source, you can also test out engines such as <code>simbody</code> and <code>dart</code>.  Simbody will reduce internal time step size to make sure contacts are stable, while DART uses direct solver to resolve contact constraints.  Each engine deal with the dynamics problem differently and may have different resulting behaviors.  Something fun to experiment with.</p>\n<p>Issues like this one could probably have been resolved automatically if the GUI provided better feedback to let users understand what's happening under the hood of the engine used.  For example, in this particular test world, if gzclient or gzserver raised a warning about the lack of constraint solver convergence in the dynamics solution, paused simulation and proposed alternative solutions such as raising the number of iterations or using a different solver, it might make it easier to produce better simulation results.  Creating a feature request issue <a href=\"#!/osrf/gazebo/issues/1155/display-convergence-properties-in-main-gui\" rel=\"nofollow\" title=\"Display convergence properties in main GUI to let users know when constraint solvers failed to converge\" class=\"ap-connect-link\">#1155</a>.</p>", "type": "rendered"}, "created_on": "2014-04-08T06:06:08.778415+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-04-08T06:28:57.282782+00:00", "type": "issue_comment", "id": 9544459}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1154/comments/9555814.json"}, "html": {"href": "#!/osrf/gazebo/issues/1154#comment-9555814"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo/issues/1154.json"}}, "type": "issue", "id": 1154, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "title": "Large models break the simulation"}, "content": {"raw": "Thanks if that works it will help.\n\nIn my particular case the physics of these points isn't very important. I really just need to see them and have them broadcast their pose. They are simulating locations on the robot, not actual physical entities. Therefore, an ideal solution for my use case would be for them to behave as non-actors in the world, but still exist otherwise so I can collect the relevant data, which is my real use case. \n\nThe other information you've provided plus the new issue you created are definitely useful in many situations other than this particular case as well, so I think the issue you brought up is a good and relevant one.", "markup": "markdown", "html": "<p>Thanks if that works it will help.</p>\n<p>In my particular case the physics of these points isn't very important. I really just need to see them and have them broadcast their pose. They are simulating locations on the robot, not actual physical entities. Therefore, an ideal solution for my use case would be for them to behave as non-actors in the world, but still exist otherwise so I can collect the relevant data, which is my real use case. </p>\n<p>The other information you've provided plus the new issue you created are definitely useful in many situations other than this particular case as well, so I think the issue you brought up is a good and relevant one.</p>", "type": "rendered"}, "created_on": "2014-04-08T16:19:46.127071+00:00", "user": {"display_name": "Andrew Hundt", "uuid": "{1e508588-c010-4693-87e5-4923df91390d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1e508588-c010-4693-87e5-4923df91390d%7D"}, "html": {"href": "https://bitbucket.org/%7B1e508588-c010-4693-87e5-4923df91390d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fb975596131ce08ea7e7472f09b8209dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-1.png"}}, "nickname": "ahundt", "type": "user", "account_id": "557058:f565cbf4-e097-4b3f-b4db-4889856f7417"}, "updated_on": "2014-04-08T16:21:40.093067+00:00", "type": "issue_comment", "id": 9555814}], "page": 1, "size": 2}