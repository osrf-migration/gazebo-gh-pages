{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2024/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2024.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2024/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2024/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2024/thread-safety-of-getentity-from-sensor"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2024/vote"}}, "reporter": {"display_name": "William Woodall", "uuid": "{111b81a3-502e-44d1-9cf6-c11de0e697cb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B111b81a3-502e-44d1-9cf6-c11de0e697cb%7D"}, "html": {"href": "https://bitbucket.org/%7B111b81a3-502e-44d1-9cf6-c11de0e697cb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4310348aa750a932bb60165505aaa834d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsWW-1.png"}}, "nickname": "William Woodall", "type": "user", "account_id": "557058:d06abb4a-3b31-45df-9e97-2b48a039ff16"}, "title": "Thread-safety of GetEntity from Sensor plugin OnUpdate()", "component": {"name": "plugins", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/332959.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "We have a custom plugin, which is currently a Sensor plugin, that:\r\n\r\n- gets the objects in contact with a specific link by name\r\n- then uses the name to get the collision entity\r\n- then get the link from the collision entity\r\n- then apply a velocity to each of those contacting links\r\n\r\nSee:\r\n\r\n- https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/SideContactPlugin.cc?at=master&fileviewer=file-view-default#SideContactPlugin.cc-109:137\r\n- https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/SideContactPlugin.cc?at=master&fileviewer=file-view-default#SideContactPlugin.cc-143:149\r\n- https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/ConveyorBeltPlugin.cc?at=master&fileviewer=file-view-default#ConveyorBeltPlugin.cc-108:112\r\n\r\nThis will regularly trigger an assert in the `boost::shared_ptr` code, like this:\r\n\r\n```\r\ngzserver: /usr/include/boost/smart_ptr/shared_ptr.hpp:653: typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::physics::Base; typename boost::detail::sp_member_access<T>::type = gazebo::physics::Base*]: Assertion `px != 0' failed.\r\n\r\nProgram received signal SIGABRT, Aborted.\r\n[Switching to Thread 0x7fff41658700 (LWP 5854)]\r\n0x00007ffff68c3c37 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n56\t../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb) bt\r\n#0  0x00007ffff68c3c37 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n#1  0x00007ffff68c7028 in __GI_abort () at abort.c:89\r\n#2  0x00007ffff68bcbf6 in __assert_fail_base (fmt=0x7ffff6a0d3b8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", \r\n    assertion=assertion@entry=0x7ffff63136c0 \"px != 0\", file=file@entry=0x7ffff6313828 \"/usr/include/boost/smart_ptr/shared_ptr.hpp\", \r\n    line=line@entry=653, \r\n    function=function@entry=0x7ffff6348740 <_ZZNK5boost10shared_ptrIN6gazebo7physics4BaseEEptEvE19__PRETTY_FUNCTION__> \"typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::physics::Base; typename boost::detail::sp_member_access<T>::type = gazebo::physics::Base*]\") at assert.c:92\r\n#3  0x00007ffff68bcca2 in __GI___assert_fail (assertion=0x7ffff63136c0 \"px != 0\", \r\n    file=0x7ffff6313828 \"/usr/include/boost/smart_ptr/shared_ptr.hpp\", line=653, \r\n    function=0x7ffff6348740 <_ZZNK5boost10shared_ptrIN6gazebo7physics4BaseEEptEvE19__PRETTY_FUNCTION__> \"typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::physics::Base; typename boost::detail::sp_member_access<T>::type = gazebo::physics::Base*]\") at assert.c:101\r\n#4  0x00007ffff6261ae3 in boost::shared_ptr<gazebo::physics::Base>::operator-> (this=<optimized out>)\r\n    at /usr/include/boost/smart_ptr/shared_ptr.hpp:653\r\n#5  0x00007ffff6262848 in operator-> (this=<optimized out>) at /usr/include/c++/4.8/bits/basic_string.h:539\r\n#6  gazebo::physics::Base::GetByName (this=0x19ec5a0, _name=\"drill_0::link::collision\")\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/physics/Base.cc:291\r\n#7  0x00007ffff62ec426 in gazebo::physics::World::GetByName (this=<optimized out>, _name=\"drill_0::link::collision\")\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/physics/World.cc:997\r\n#8  0x00007ffff62ec550 in gazebo::physics::World::GetEntity (this=<optimized out>, _name=\"drill_0::link::collision\")\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/physics/World.cc:1026\r\n#9  0x00007fff743a7de3 in gazebo::SideContactPlugin::CalculateContactingLinks (this=0xf369f0)\r\n    at /home/william/universal_robot_ws/src/gear/osrf_gear/src/SideContactPlugin.cc:130\r\n#10 0x00007fff745c71ea in gazebo::ConveyorBeltPlugin::OnUpdate (this=0xf369f0)\r\n    at /home/william/universal_robot_ws/src/gear/osrf_gear/src/ConveyorBeltPlugin.cc:92\r\n#11 0x00007ffff5e9a6d5 in operator() (this=<optimized out>) at /usr/include/boost/function/function_template.hpp:767\r\n#12 gazebo::event::EventT<void ()>::Signal() (this=0x357f408)\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/common/Event.hh:370\r\n#13 0x00007ffff5e97f7e in operator() (this=<optimized out>)\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/common/Event.hh:214\r\n#14 gazebo::sensors::Sensor::Update (this=0x35741c0, _force=_force@entry=false)\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/sensors/Sensor.cc:246\r\n#15 0x00007ffff5e9dba5 in gazebo::sensors::SensorManager::SensorContainer::Update (this=0xf15df0, _force=<optimized out>)\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/sensors/SensorManager.cc:585\r\n#16 0x00007ffff5ea0d88 in gazebo::sensors::SensorManager::SensorContainer::RunLoop (this=0xf15df0)\r\n    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/sensors/SensorManager.cc:539\r\n#17 0x00007ffff42f7a4a in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\r\n#18 0x00007ffff55ce184 in start_thread (arg=0x7fff41658700) at pthread_create.c:312\r\n#19 0x00007ffff698737d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n```\r\n\r\nI believe this is because the Sensor plugin is running in a separate thread from the physics loop, so when our code calls `this->world->GetEntity(collision)`, it ends up iterating over the children of the world object and in a separate thread we have a plugin that is spawning new models periodically into the world.\r\n\r\nMy theory is that the `GetEntity` call ends up here:\r\n\r\n- #!/osrf/gazebo/src/9bc8cb494795842b2b3e237687d95240c3b070d3/gazebo/physics/Base.cc?at=default&fileviewer=file-view-default#Base.cc-289:291\r\n\r\nWhere it is iterating over the world object's children using iterators. If in the other thread objects are being added to this same vector, then these iterators are probably becoming invalid, which eventually results in invalid iterators being interpreted as a boost shared pointer.\r\n\r\nI think an appropriate response to this might be \"sensor plugins are not thread safe with these calls; won't fix\" and we're attempting to work around this now by redesigning the plugin in question to be a model plugin in order to avoid this issue. However, at @scpeters request, I'm opening this issue to keep track of it. Either there needs to be some high level documentation that mentions this thread non-safety and explains how the architecture of the different plugins affects what can be called from where. This documentation may exist, but I looked for a while and didn't find it (please point it out if I missed it).", "markup": "markdown", "html": "<p>We have a custom plugin, which is currently a Sensor plugin, that:</p>\n<ul>\n<li>gets the objects in contact with a specific link by name</li>\n<li>then uses the name to get the collision entity</li>\n<li>then get the link from the collision entity</li>\n<li>then apply a velocity to each of those contacting links</li>\n</ul>\n<p>See:</p>\n<ul>\n<li><a href=\"https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/SideContactPlugin.cc?at=master&amp;fileviewer=file-view-default#SideContactPlugin.cc-109:137\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/SideContactPlugin.cc?at=master&amp;fileviewer=file-view-default#SideContactPlugin.cc-109:137</a></li>\n<li><a href=\"https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/SideContactPlugin.cc?at=master&amp;fileviewer=file-view-default#SideContactPlugin.cc-143:149\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/SideContactPlugin.cc?at=master&amp;fileviewer=file-view-default#SideContactPlugin.cc-143:149</a></li>\n<li><a href=\"https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/ConveyorBeltPlugin.cc?at=master&amp;fileviewer=file-view-default#ConveyorBeltPlugin.cc-108:112\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gear/src/23a3c2c359a294719b296e33644014b85712d556/osrf_gear/src/ConveyorBeltPlugin.cc?at=master&amp;fileviewer=file-view-default#ConveyorBeltPlugin.cc-108:112</a></li>\n</ul>\n<p>This will regularly trigger an assert in the <code>boost::shared_ptr</code> code, like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">gzserver</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">smart_ptr</span><span class=\"o\">/</span><span class=\"nt\">shared_ptr</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">653</span><span class=\"o\">:</span> <span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">detail</span><span class=\"p\">::</span><span class=\"nd\">sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">&gt;()</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Base</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Base</span><span class=\"o\">*</span><span class=\"cp\">]</span><span class=\"o\">:</span> <span class=\"nt\">Assertion</span> <span class=\"err\">`</span><span class=\"nt\">px</span> <span class=\"o\">!=</span> <span class=\"nt\">0</span><span class=\"s1\">&#39; failed.</span>\n\n<span class=\"s1\">Program received signal SIGABRT, Aborted.</span>\n<span class=\"cp\">[</span><span class=\"nx\">Switching</span> <span class=\"k\">to</span> <span class=\"k\">Thread</span> <span class=\"mh\">0x7fff41658700</span> <span class=\"p\">(</span><span class=\"nx\">LWP</span> <span class=\"mi\">5854</span><span class=\"p\">)</span><span class=\"cp\">]</span><span class=\"s1\"></span>\n<span class=\"s1\">0x00007ffff68c3c37 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56</span>\n<span class=\"s1\">56  ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.</span>\n<span class=\"s1\">(gdb) bt</span>\n<span class=\"s1\">#0  0x00007ffff68c3c37 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56</span>\n<span class=\"s1\">#1  0x00007ffff68c7028 in __GI_abort () at abort.c:89</span>\n<span class=\"s1\">#2  0x00007ffff68bcbf6 in __assert_fail_base (fmt=0x7ffff6a0d3b8 &quot;%s%s%s:%u: %s%sAssertion `%s&#39;</span> <span class=\"nt\">failed</span><span class=\"o\">.</span><span class=\"err\">\\</span><span class=\"nt\">n</span><span class=\"o\">%</span><span class=\"nt\">n</span><span class=\"s2\">&quot;, </span>\n<span class=\"s2\">    assertion=assertion@entry=0x7ffff63136c0 &quot;</span><span class=\"nt\">px</span> <span class=\"o\">!=</span> <span class=\"nt\">0</span><span class=\"s2\">&quot;, file=file@entry=0x7ffff6313828 &quot;</span><span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">smart_ptr</span><span class=\"o\">/</span><span class=\"nt\">shared_ptr</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"s2\">&quot;, </span>\n<span class=\"s2\">    line=line@entry=653, </span>\n<span class=\"s2\">    function=function@entry=0x7ffff6348740 &lt;_ZZNK5boost10shared_ptrIN6gazebo7physics4BaseEEptEvE19__PRETTY_FUNCTION__&gt; &quot;</span><span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">detail</span><span class=\"p\">::</span><span class=\"nd\">sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">&gt;()</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Base</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Base</span><span class=\"o\">*</span><span class=\"cp\">]</span><span class=\"s2\">&quot;) at assert.c:92</span>\n<span class=\"s2\">#3  0x00007ffff68bcca2 in __GI___assert_fail (assertion=0x7ffff63136c0 &quot;</span><span class=\"nt\">px</span> <span class=\"o\">!=</span> <span class=\"nt\">0</span><span class=\"s2\">&quot;, </span>\n<span class=\"s2\">    file=0x7ffff6313828 &quot;</span><span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">smart_ptr</span><span class=\"o\">/</span><span class=\"nt\">shared_ptr</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"s2\">&quot;, line=653, </span>\n<span class=\"s2\">    function=0x7ffff6348740 &lt;_ZZNK5boost10shared_ptrIN6gazebo7physics4BaseEEptEvE19__PRETTY_FUNCTION__&gt; &quot;</span><span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">detail</span><span class=\"p\">::</span><span class=\"nd\">sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">&gt;()</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Base</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::physics::Base</span><span class=\"o\">*</span><span class=\"cp\">]</span><span class=\"s2\">&quot;) at assert.c:101</span>\n<span class=\"s2\">#4  0x00007ffff6261ae3 in boost::shared_ptr&lt;gazebo::physics::Base&gt;::operator-&gt; (this=&lt;optimized out&gt;)</span>\n<span class=\"s2\">    at /usr/include/boost/smart_ptr/shared_ptr.hpp:653</span>\n<span class=\"s2\">#5  0x00007ffff6262848 in operator-&gt; (this=&lt;optimized out&gt;) at /usr/include/c++/4.8/bits/basic_string.h:539</span>\n<span class=\"s2\">#6  gazebo::physics::Base::GetByName (this=0x19ec5a0, _name=&quot;</span><span class=\"nt\">drill_0</span><span class=\"p\">::</span><span class=\"nd\">link</span><span class=\"p\">::</span><span class=\"nd\">collision</span><span class=\"s2\">&quot;)</span>\n<span class=\"s2\">    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/physics/Base.cc:291</span>\n<span class=\"s2\">#7  0x00007ffff62ec426 in gazebo::physics::World::GetByName (this=&lt;optimized out&gt;, _name=&quot;</span><span class=\"nt\">drill_0</span><span class=\"p\">::</span><span class=\"nd\">link</span><span class=\"p\">::</span><span class=\"nd\">collision</span><span class=\"s2\">&quot;)</span>\n<span class=\"s2\">    at /var/lib/jenkins/workspace/gazebo7-debbuilder/build/gazebo-7.3.1/gazebo/physics/World.cc:997</span>\n<span class=\"s2\">#8  0x00007ffff62ec550 in gazebo::physics::World::GetEntity (this=&lt;optimized out&gt;, _name=&quot;</span><span class=\"nt\">drill_0</span><span class=\"p\">::</span><span class=\"nd\">link</span><span class=\"p\">::</span><span class=\"nd\">collision</span><span class=\"err\">&quot;</span><span class=\"o\">)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">var</span><span class=\"o\">/</span><span class=\"nt\">lib</span><span class=\"o\">/</span><span class=\"nt\">jenkins</span><span class=\"o\">/</span><span class=\"nt\">workspace</span><span class=\"o\">/</span><span class=\"nt\">gazebo7-debbuilder</span><span class=\"o\">/</span><span class=\"nt\">build</span><span class=\"o\">/</span><span class=\"nt\">gazebo-7</span><span class=\"p\">.</span><span class=\"nc\">3</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">physics</span><span class=\"o\">/</span><span class=\"nt\">World</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">1026</span>\n<span class=\"p\">#</span><span class=\"nn\">9</span>  <span class=\"nt\">0x00007fff743a7de3</span> <span class=\"nt\">in</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">SideContactPlugin</span><span class=\"p\">::</span><span class=\"nd\">CalculateContactingLinks</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=</span><span class=\"nt\">0xf369f0</span><span class=\"o\">)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">home</span><span class=\"o\">/</span><span class=\"nt\">william</span><span class=\"o\">/</span><span class=\"nt\">universal_robot_ws</span><span class=\"o\">/</span><span class=\"nt\">src</span><span class=\"o\">/</span><span class=\"nt\">gear</span><span class=\"o\">/</span><span class=\"nt\">osrf_gear</span><span class=\"o\">/</span><span class=\"nt\">src</span><span class=\"o\">/</span><span class=\"nt\">SideContactPlugin</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">130</span>\n<span class=\"p\">#</span><span class=\"nn\">10</span> <span class=\"nt\">0x00007fff745c71ea</span> <span class=\"nt\">in</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">ConveyorBeltPlugin</span><span class=\"p\">::</span><span class=\"nd\">OnUpdate</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=</span><span class=\"nt\">0xf369f0</span><span class=\"o\">)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">home</span><span class=\"o\">/</span><span class=\"nt\">william</span><span class=\"o\">/</span><span class=\"nt\">universal_robot_ws</span><span class=\"o\">/</span><span class=\"nt\">src</span><span class=\"o\">/</span><span class=\"nt\">gear</span><span class=\"o\">/</span><span class=\"nt\">osrf_gear</span><span class=\"o\">/</span><span class=\"nt\">src</span><span class=\"o\">/</span><span class=\"nt\">ConveyorBeltPlugin</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">92</span>\n<span class=\"p\">#</span><span class=\"nn\">11</span> <span class=\"nt\">0x00007ffff5e9a6d5</span> <span class=\"nt\">in</span> <span class=\"nt\">operator</span><span class=\"o\">()</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=&lt;</span><span class=\"nt\">optimized</span> <span class=\"nt\">out</span><span class=\"o\">&gt;)</span> <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">function</span><span class=\"o\">/</span><span class=\"nt\">function_template</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">767</span>\n<span class=\"p\">#</span><span class=\"nn\">12</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">event</span><span class=\"p\">::</span><span class=\"nd\">EventT</span><span class=\"o\">&lt;</span><span class=\"nt\">void</span> <span class=\"o\">()&gt;</span><span class=\"p\">::</span><span class=\"nd\">Signal</span><span class=\"o\">()</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=</span><span class=\"nt\">0x357f408</span><span class=\"o\">)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">var</span><span class=\"o\">/</span><span class=\"nt\">lib</span><span class=\"o\">/</span><span class=\"nt\">jenkins</span><span class=\"o\">/</span><span class=\"nt\">workspace</span><span class=\"o\">/</span><span class=\"nt\">gazebo7-debbuilder</span><span class=\"o\">/</span><span class=\"nt\">build</span><span class=\"o\">/</span><span class=\"nt\">gazebo-7</span><span class=\"p\">.</span><span class=\"nc\">3</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">common</span><span class=\"o\">/</span><span class=\"nt\">Event</span><span class=\"p\">.</span><span class=\"nc\">hh</span><span class=\"p\">:</span><span class=\"nd\">370</span>\n<span class=\"p\">#</span><span class=\"nn\">13</span> <span class=\"nt\">0x00007ffff5e97f7e</span> <span class=\"nt\">in</span> <span class=\"nt\">operator</span><span class=\"o\">()</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=&lt;</span><span class=\"nt\">optimized</span> <span class=\"nt\">out</span><span class=\"o\">&gt;)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">var</span><span class=\"o\">/</span><span class=\"nt\">lib</span><span class=\"o\">/</span><span class=\"nt\">jenkins</span><span class=\"o\">/</span><span class=\"nt\">workspace</span><span class=\"o\">/</span><span class=\"nt\">gazebo7-debbuilder</span><span class=\"o\">/</span><span class=\"nt\">build</span><span class=\"o\">/</span><span class=\"nt\">gazebo-7</span><span class=\"p\">.</span><span class=\"nc\">3</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">common</span><span class=\"o\">/</span><span class=\"nt\">Event</span><span class=\"p\">.</span><span class=\"nc\">hh</span><span class=\"p\">:</span><span class=\"nd\">214</span>\n<span class=\"p\">#</span><span class=\"nn\">14</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">sensors</span><span class=\"p\">::</span><span class=\"nd\">Sensor</span><span class=\"p\">::</span><span class=\"nd\">Update</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=</span><span class=\"nt\">0x35741c0</span><span class=\"o\">,</span> <span class=\"nt\">_force</span><span class=\"o\">=</span><span class=\"nt\">_force</span><span class=\"p\">@</span><span class=\"k\">entry</span><span class=\"o\">=</span><span class=\"nt\">false</span><span class=\"o\">)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">var</span><span class=\"o\">/</span><span class=\"nt\">lib</span><span class=\"o\">/</span><span class=\"nt\">jenkins</span><span class=\"o\">/</span><span class=\"nt\">workspace</span><span class=\"o\">/</span><span class=\"nt\">gazebo7-debbuilder</span><span class=\"o\">/</span><span class=\"nt\">build</span><span class=\"o\">/</span><span class=\"nt\">gazebo-7</span><span class=\"p\">.</span><span class=\"nc\">3</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">sensors</span><span class=\"o\">/</span><span class=\"nt\">Sensor</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">246</span>\n<span class=\"p\">#</span><span class=\"nn\">15</span> <span class=\"nt\">0x00007ffff5e9dba5</span> <span class=\"nt\">in</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">sensors</span><span class=\"p\">::</span><span class=\"nd\">SensorManager</span><span class=\"p\">::</span><span class=\"nd\">SensorContainer</span><span class=\"p\">::</span><span class=\"nd\">Update</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=</span><span class=\"nt\">0xf15df0</span><span class=\"o\">,</span> <span class=\"nt\">_force</span><span class=\"o\">=&lt;</span><span class=\"nt\">optimized</span> <span class=\"nt\">out</span><span class=\"o\">&gt;)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">var</span><span class=\"o\">/</span><span class=\"nt\">lib</span><span class=\"o\">/</span><span class=\"nt\">jenkins</span><span class=\"o\">/</span><span class=\"nt\">workspace</span><span class=\"o\">/</span><span class=\"nt\">gazebo7-debbuilder</span><span class=\"o\">/</span><span class=\"nt\">build</span><span class=\"o\">/</span><span class=\"nt\">gazebo-7</span><span class=\"p\">.</span><span class=\"nc\">3</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">sensors</span><span class=\"o\">/</span><span class=\"nt\">SensorManager</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">585</span>\n<span class=\"p\">#</span><span class=\"nn\">16</span> <span class=\"nt\">0x00007ffff5ea0d88</span> <span class=\"nt\">in</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">sensors</span><span class=\"p\">::</span><span class=\"nd\">SensorManager</span><span class=\"p\">::</span><span class=\"nd\">SensorContainer</span><span class=\"p\">::</span><span class=\"nd\">RunLoop</span> <span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">=</span><span class=\"nt\">0xf15df0</span><span class=\"o\">)</span>\n    <span class=\"nt\">at</span> <span class=\"o\">/</span><span class=\"nt\">var</span><span class=\"o\">/</span><span class=\"nt\">lib</span><span class=\"o\">/</span><span class=\"nt\">jenkins</span><span class=\"o\">/</span><span class=\"nt\">workspace</span><span class=\"o\">/</span><span class=\"nt\">gazebo7-debbuilder</span><span class=\"o\">/</span><span class=\"nt\">build</span><span class=\"o\">/</span><span class=\"nt\">gazebo-7</span><span class=\"p\">.</span><span class=\"nc\">3</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">sensors</span><span class=\"o\">/</span><span class=\"nt\">SensorManager</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">539</span>\n<span class=\"p\">#</span><span class=\"nn\">17</span> <span class=\"nt\">0x00007ffff42f7a4a</span> <span class=\"nt\">in</span> <span class=\"o\">??</span> <span class=\"o\">()</span> <span class=\"nt\">from</span> <span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">lib</span><span class=\"o\">/</span><span class=\"nt\">x86_64-linux-gnu</span><span class=\"o\">/</span><span class=\"nt\">libboost_thread</span><span class=\"p\">.</span><span class=\"nc\">so</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"p\">.</span><span class=\"nc\">54</span><span class=\"p\">.</span><span class=\"nc\">0</span>\n<span class=\"p\">#</span><span class=\"nn\">18</span> <span class=\"nt\">0x00007ffff55ce184</span> <span class=\"nt\">in</span> <span class=\"nt\">start_thread</span> <span class=\"o\">(</span><span class=\"nt\">arg</span><span class=\"o\">=</span><span class=\"nt\">0x7fff41658700</span><span class=\"o\">)</span> <span class=\"nt\">at</span> <span class=\"nt\">pthread_create</span><span class=\"p\">.</span><span class=\"nc\">c</span><span class=\"p\">:</span><span class=\"nd\">312</span>\n<span class=\"p\">#</span><span class=\"nn\">19</span> <span class=\"nt\">0x00007ffff698737d</span> <span class=\"nt\">in</span> <span class=\"nt\">clone</span> <span class=\"o\">()</span> <span class=\"nt\">at</span> <span class=\"o\">../</span><span class=\"nt\">sysdeps</span><span class=\"o\">/</span><span class=\"nt\">unix</span><span class=\"o\">/</span><span class=\"nt\">sysv</span><span class=\"o\">/</span><span class=\"nt\">linux</span><span class=\"o\">/</span><span class=\"nt\">x86_64</span><span class=\"o\">/</span><span class=\"nt\">clone</span><span class=\"p\">.</span><span class=\"nc\">S</span><span class=\"p\">:</span><span class=\"nd\">111</span>\n</pre></div>\n\n\n<p>I believe this is because the Sensor plugin is running in a separate thread from the physics loop, so when our code calls <code>this-&gt;world-&gt;GetEntity(collision)</code>, it ends up iterating over the children of the world object and in a separate thread we have a plugin that is spawning new models periodically into the world.</p>\n<p>My theory is that the <code>GetEntity</code> call ends up here:</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/src/9bc8cb494795842b2b3e237687d95240c3b070d3/gazebo/physics/Base.cc?at=default&amp;fileviewer=file-view-default#Base.cc-289:291\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/9bc8cb494795842b2b3e237687d95240c3b070d3/gazebo/physics/Base.cc?at=default&amp;fileviewer=file-view-default#Base.cc-289:291</a></li>\n</ul>\n<p>Where it is iterating over the world object's children using iterators. If in the other thread objects are being added to this same vector, then these iterators are probably becoming invalid, which eventually results in invalid iterators being interpreted as a boost shared pointer.</p>\n<p>I think an appropriate response to this might be \"sensor plugins are not thread safe with these calls; won't fix\" and we're attempting to work around this now by redesigning the plugin in question to be a model plugin in order to avoid this issue. However, at @scpeters request, I'm opening this issue to keep track of it. Either there needs to be some high level documentation that mentions this thread non-safety and explains how the architecture of the different plugins affects what can be called from where. This documentation may exist, but I looked for a while and didn't find it (please point it out if I missed it).</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2016-07-29T22:56:46.323580+00:00", "milestone": null, "updated_on": "2016-09-14T19:20:04.623840+00:00", "type": "issue", "id": 2024}