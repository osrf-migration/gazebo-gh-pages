{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/2242/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/2242.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2242/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/2242/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/2242/adding-method-to-physics-world-which"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/2242/vote"}}, "reporter": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "title": "Adding method to physics::World which returns all entities", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "It would be nice to have a method in ``physics::World`` which returns *all* the world's entities, including lights and roads. At the moment, only the entities added to the ``World::models`` vector is returned in ``World::Models()``. ``Actor`` instances are currently also not part of the ``models`` vector, see pull request #2661.\r\n\r\nIt would be nice to have a method which includes *all* entities, including the ones which are no model, such as ``Road`` and ``Light``. For example, this could be ``Entity_M World::Entities()``.\r\n\r\nShould we add this in a PR?", "markup": "markdown", "html": "<p>It would be nice to have a method in <code>physics::World</code> which returns <em>all</em> the world's entities, including lights and roads. At the moment, only the entities added to the <code>World::models</code> vector is returned in <code>World::Models()</code>. <code>Actor</code> instances are currently also not part of the <code>models</code> vector, see <a href=\"#!/osrf/gazebo/pull-requests/2661/added-actors-in-world-as-models-so-they\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2661</a>.</p>\n<p>It would be nice to have a method which includes <em>all</em> entities, including the ones which are no model, such as <code>Road</code> and <code>Light</code>. For example, this could be <code>Entity_M World::Entities()</code>.</p>\n<p>Should we add this in a PR?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-03-27T06:26:22.374452+00:00", "milestone": null, "updated_on": "2017-03-30T05:36:22.364891+00:00", "type": "issue", "id": 2242}