{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1086/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1086.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1086/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1086/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1086/better-documentation-needed-for-joint"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1086/vote"}}, "reporter": {"display_name": "Jonathan Bohren", "uuid": "{588087c1-4405-46da-b019-43f00b894b30}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B588087c1-4405-46da-b019-43f00b894b30%7D"}, "html": {"href": "https://bitbucket.org/%7B588087c1-4405-46da-b019-43f00b894b30%7D/"}, "avatar": {"href": "https://bitbucket.org/account/jbohren/avatar/"}}, "nickname": "jbohren", "type": "user", "account_id": null}, "title": "Better documentation needed for Joint::GetAngle()", "component": {"name": "documentation", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/141921.json"}}}, "votes": 3, "watches": 5, "content": {"raw": "So, `physics::Joint::GetAngle()` returns different quantities for different types of joints, and if one burrowed down into the documentation from the respective libraries, one would arrive at the following conclusions:\r\n\r\n* revolute: The joint angle in the range -pi to pi\r\n* gearbox: The joint angle in the range -pi to pi\r\n* revolute2: The joint angle in the range -pi to pi\r\n* prismatic: The joint's linear position\r\n* ball: (not implemented) (returns Zero)\r\n* universal: One of the joint's angles in the range -pi to pi\r\n* piston: ???\r\n\r\nBut Gazebo patches these libraries to handle unwrapped angles in some cases. Where is the best place to document this behavior, in each joint class's implementation? If it goes there then it might not be visible to someone trying to understand the API. Should it just go in the Joint base class?", "markup": "markdown", "html": "<p>So, <code>physics::Joint::GetAngle()</code> returns different quantities for different types of joints, and if one burrowed down into the documentation from the respective libraries, one would arrive at the following conclusions:</p>\n<ul>\n<li>revolute: The joint angle in the range -pi to pi</li>\n<li>gearbox: The joint angle in the range -pi to pi</li>\n<li>revolute2: The joint angle in the range -pi to pi</li>\n<li>prismatic: The joint's linear position</li>\n<li>ball: (not implemented) (returns Zero)</li>\n<li>universal: One of the joint's angles in the range -pi to pi</li>\n<li>piston: ???</li>\n</ul>\n<p>But Gazebo patches these libraries to handle unwrapped angles in some cases. Where is the best place to document this behavior, in each joint class's implementation? If it goes there then it might not be visible to someone trying to understand the API. Should it just go in the Joint base class?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "2.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/51082.json"}}}, "edited_on": null, "created_on": "2014-03-06T01:03:16.182415+00:00", "milestone": null, "updated_on": "2014-03-07T01:44:23.382479+00:00", "type": "issue", "id": 1086}