{"next": "data/repositories/osrf/gazebo/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=55.json", "values": [{"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2652/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d748dfe15bd1%0D5ee96ab35daa?from_pullrequest_id=2652"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2652/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d748dfe15bd1%0D5ee96ab35daa?from_pullrequest_id=2652"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2652/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/statuses_page=1.json"}}, "title": "Added support for tracked vehicles", "close_source_branch": false, "type": "pullrequest", "id": 2652, "destination": {"commit": {"hash": "5ee96ab35daa", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5ee96ab35daa.json"}, "html": {"href": "#!/osrf/gazebo/commits/5ee96ab35daa"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "created_on": "2017-03-01T05:01:36.692514+00:00", "summary": {"raw": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "markup": "markdown", "html": "<ul>\n<li>Added the base for tracked vehicles.</li>\n<li>Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.</li>\n</ul>\n<p>I'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.</p>\n<p>This is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:</p>\n<ul>\n<li>I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.</li>\n<li>Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).</li>\n<li>I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&amp;paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?</li>\n<li>Is there no 3-valued <code>signum</code> function available in standard C/C++ library or ignition?</li>\n<li>Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?</li>\n</ul>\n<p>If I'll find more time, I'll add the other models suggested in <a href=\"#!/osrf/gazebo/issues/863/tracksdriveplugin\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issues/863/tracksdriveplugin</a> (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling <code>Link::Load()</code> or <code>Joint::Load()</code>. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7e49704008a8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/7e49704008a8"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/7e49704008a8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "comment_count": 146, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2020-03-21T18:15:04.737966+00:00", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "merge_commit": {"hash": "d748dfe15bd1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d748dfe15bd1.json"}, "html": {"href": "#!/osrf/gazebo/commits/d748dfe15bd1"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "While reviewing the pull request for a [force / torque sensor tutorial](#!/osrf/gazebo_tutorials/pull-requests/421/force-torque-sensor-tutorial/diff), it called my attention that that sensor's visualization wasn't working.\r\n\r\nSo I dug a little bit and realized the visualization could work again with just a couple of small changes to `rendering::Scene` (on lines 2254 and 2444).\r\n\r\nThen I started writing a test to make sure we don't break it again and that resulted on all the other changes:\r\n\r\n* Added `Scene::EnableVisualizations` functions to be able to enable sensor visualizations from the test\r\n\r\n* There was a crash on the `WrenchVisual` destructor when trying to delete a dynamic line. I changed the `forceNode` to a `forceVisual` so the visual would be responsible for cleaning up the dynamic line.\r\n\r\n* Using a visual meant it had to be created on `Load` rather than on the constructor (see comment about `shared_from_this`.\r\n\r\n* Also added a `Fini` function to improve the destruction process.\r\n\r\nDemo:\r\n\r\nhttps://github.com/chapulina/gzgif/blob/master/force_torque_sensor.gif", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2653/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:e11697bc4812%0Df7e57d13da38?from_pullrequest_id=2653"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2653/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2653.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2653/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2653/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2653"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2653/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:e11697bc4812%0Df7e57d13da38?from_pullrequest_id=2653"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2653/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2653/statuses_page=1.json"}}, "title": "Force / torque sensor visualization using WrenchVisual", "close_source_branch": true, "type": "pullrequest", "id": 2653, "destination": {"commit": {"hash": "f7e57d13da38", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f7e57d13da38.json"}, "html": {"href": "#!/osrf/gazebo/commits/f7e57d13da38"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-03-08T01:51:30.752737+00:00", "summary": {"raw": "While reviewing the pull request for a [force / torque sensor tutorial](#!/osrf/gazebo_tutorials/pull-requests/421/force-torque-sensor-tutorial/diff), it called my attention that that sensor's visualization wasn't working.\r\n\r\nSo I dug a little bit and realized the visualization could work again with just a couple of small changes to `rendering::Scene` (on lines 2254 and 2444).\r\n\r\nThen I started writing a test to make sure we don't break it again and that resulted on all the other changes:\r\n\r\n* Added `Scene::EnableVisualizations` functions to be able to enable sensor visualizations from the test\r\n\r\n* There was a crash on the `WrenchVisual` destructor when trying to delete a dynamic line. I changed the `forceNode` to a `forceVisual` so the visual would be responsible for cleaning up the dynamic line.\r\n\r\n* Using a visual meant it had to be created on `Load` rather than on the constructor (see comment about `shared_from_this`.\r\n\r\n* Also added a `Fini` function to improve the destruction process.\r\n\r\nDemo:\r\n\r\nhttps://github.com/chapulina/gzgif/blob/master/force_torque_sensor.gif", "markup": "markdown", "html": "<p>While reviewing the pull request for a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_tutorials/pull-requests/421/force-torque-sensor-tutorial/diff\" rel=\"nofollow\">force / torque sensor tutorial</a>, it called my attention that that sensor's visualization wasn't working.</p>\n<p>So I dug a little bit and realized the visualization could work again with just a couple of small changes to <code>rendering::Scene</code> (on lines 2254 and 2444).</p>\n<p>Then I started writing a test to make sure we don't break it again and that resulted on all the other changes:</p>\n<ul>\n<li>\n<p>Added <code>Scene::EnableVisualizations</code> functions to be able to enable sensor visualizations from the test</p>\n</li>\n<li>\n<p>There was a crash on the <code>WrenchVisual</code> destructor when trying to delete a dynamic line. I changed the <code>forceNode</code> to a <code>forceVisual</code> so the visual would be responsible for cleaning up the dynamic line.</p>\n</li>\n<li>\n<p>Using a visual meant it had to be created on <code>Load</code> rather than on the constructor (see comment about <code>shared_from_this</code>.</p>\n</li>\n<li>\n<p>Also added a <code>Fini</code> function to improve the destruction process.</p>\n</li>\n</ul>\n<p>Demo:</p>\n<p><a href=\"https://github.com/chapulina/gzgif/blob/master/force_torque_sensor.gif\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/chapulina/gzgif/blob/master/force_torque_sensor.gif</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "8a7fe55524e9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8a7fe55524e9.json"}, "html": {"href": "#!/osrf/gazebo/commits/8a7fe55524e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "force_torque_vis"}}, "comment_count": 18, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-03-05T18:39:26.077231+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "e11697bc4812", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e11697bc4812.json"}, "html": {"href": "#!/osrf/gazebo/commits/e11697bc4812"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "This includes minor changes to get BULLET to display the same behaviour as ODE when disabling the physics engine.\r\n\r\nWhen running with ODE and disabling the physics, the contact points still get updated when [PhysicsEngine::UpdateCollision()](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/PhysicsEngine.hh?at=default&fileviewer=file-view-default#PhysicsEngine.hh-67) is called. [World::UpdatePhysics()](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/PhysicsEngine.hh?at=default&fileviewer=file-view-default#PhysicsEngine.hh-106) gets [skipped when physics engine is disabled](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/World.cc?at=default&fileviewer=file-view-default#World.cc-798), but for the ODE contact computation this doesn't matter.\r\n\r\nAssuming this is the expected behaviour, BULLET doesn't do the same: it only clears the contact points in [BulletPhysics::UpdateCollision()](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/bullet/BulletPhysics.cc?at=default&fileviewer=file-view-default#BulletPhysics.cc-459) and doesn't compute the updated contact points (*Note:* DART actually doesn't update the collisions either, but that will be treated in a different PR).\r\n\r\nLuckily this can be fixed quite easily to mirror the behaviour of ODE (see suggested changes).\r\n\r\nIt would be extremely useful to have the same behaviour as ODE in the other physics engines. Sometimes one might want to disable physics, move around the bodies (e.g. via gzclient) and see how the contact points change.\r\n\r\nThe suggested change of this PR will only take effect when the physics are disabled. Nothing changes in the default case.\r\n\r\nI suggest to update the documentation of PhysicsEngine as well, to make it more clear how UpdateCollision() and UpdatePhysics() are expected to behave. I have added a rather lengthy comment in PhysicsEngine.hh which could probably be shortened.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2654/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:0d39ebf2b92b%0Dcd526975bc8b?from_pullrequest_id=2654"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2654/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2654.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2654/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2654/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2654"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2654/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:0d39ebf2b92b%0Dcd526975bc8b?from_pullrequest_id=2654"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2654/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2654/statuses_page=1.json"}}, "title": "Bullet should update contact information if the physics engine is disabled", "close_source_branch": false, "type": "pullrequest", "id": 2654, "destination": {"commit": {"hash": "cd526975bc8b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/cd526975bc8b.json"}, "html": {"href": "#!/osrf/gazebo/commits/cd526975bc8b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-08T10:05:38.385312+00:00", "summary": {"raw": "This includes minor changes to get BULLET to display the same behaviour as ODE when disabling the physics engine.\r\n\r\nWhen running with ODE and disabling the physics, the contact points still get updated when [PhysicsEngine::UpdateCollision()](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/PhysicsEngine.hh?at=default&fileviewer=file-view-default#PhysicsEngine.hh-67) is called. [World::UpdatePhysics()](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/PhysicsEngine.hh?at=default&fileviewer=file-view-default#PhysicsEngine.hh-106) gets [skipped when physics engine is disabled](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/World.cc?at=default&fileviewer=file-view-default#World.cc-798), but for the ODE contact computation this doesn't matter.\r\n\r\nAssuming this is the expected behaviour, BULLET doesn't do the same: it only clears the contact points in [BulletPhysics::UpdateCollision()](#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/bullet/BulletPhysics.cc?at=default&fileviewer=file-view-default#BulletPhysics.cc-459) and doesn't compute the updated contact points (*Note:* DART actually doesn't update the collisions either, but that will be treated in a different PR).\r\n\r\nLuckily this can be fixed quite easily to mirror the behaviour of ODE (see suggested changes).\r\n\r\nIt would be extremely useful to have the same behaviour as ODE in the other physics engines. Sometimes one might want to disable physics, move around the bodies (e.g. via gzclient) and see how the contact points change.\r\n\r\nThe suggested change of this PR will only take effect when the physics are disabled. Nothing changes in the default case.\r\n\r\nI suggest to update the documentation of PhysicsEngine as well, to make it more clear how UpdateCollision() and UpdatePhysics() are expected to behave. I have added a rather lengthy comment in PhysicsEngine.hh which could probably be shortened.", "markup": "markdown", "html": "<p>This includes minor changes to get BULLET to display the same behaviour as ODE when disabling the physics engine.</p>\n<p>When running with ODE and disabling the physics, the contact points still get updated when <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/PhysicsEngine.hh?at=default&amp;fileviewer=file-view-default#PhysicsEngine.hh-67\" rel=\"nofollow\">PhysicsEngine::UpdateCollision()</a> is called. <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/PhysicsEngine.hh?at=default&amp;fileviewer=file-view-default#PhysicsEngine.hh-106\" rel=\"nofollow\">World::UpdatePhysics()</a> gets <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/World.cc?at=default&amp;fileviewer=file-view-default#World.cc-798\" rel=\"nofollow\">skipped when physics engine is disabled</a>, but for the ODE contact computation this doesn't matter.</p>\n<p>Assuming this is the expected behaviour, BULLET doesn't do the same: it only clears the contact points in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/cd526975bc8bdf3813e0600e3ece180870602471/gazebo/physics/bullet/BulletPhysics.cc?at=default&amp;fileviewer=file-view-default#BulletPhysics.cc-459\" rel=\"nofollow\">BulletPhysics::UpdateCollision()</a> and doesn't compute the updated contact points (<em>Note:</em> DART actually doesn't update the collisions either, but that will be treated in a different PR).</p>\n<p>Luckily this can be fixed quite easily to mirror the behaviour of ODE (see suggested changes).</p>\n<p>It would be extremely useful to have the same behaviour as ODE in the other physics engines. Sometimes one might want to disable physics, move around the bodies (e.g. via gzclient) and see how the contact points change.</p>\n<p>The suggested change of this PR will only take effect when the physics are disabled. Nothing changes in the default case.</p>\n<p>I suggest to update the documentation of PhysicsEngine as well, to make it more clear how UpdateCollision() and UpdatePhysics() are expected to behave. I have added a rather lengthy comment in PhysicsEngine.hh which could probably be shortened.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b515f2765c28", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/b515f2765c28"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/b515f2765c28"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "bullet_update_collisions_when_disabled"}}, "comment_count": 21, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-20T21:07:30.906273+00:00", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "merge_commit": {"hash": "0d39ebf2b92b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0d39ebf2b92b.json"}, "html": {"href": "#!/osrf/gazebo/commits/0d39ebf2b92b"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "Large heightmaps (resolution  >4096k) are now subdivided into smaller partitions to workaround ogre terrain LOD height glitches. Most of the work is getting the material to render correctly. \r\n\r\nSpecifically, the texture maps should now apply to the global ogre terrain instead of being repeated in each partition. To do that, a transformation matrix is passed to the fragment shader so that the texture UV coordinates are mapped to the corresponding portion of the texture maps. \r\n\r\nThe `HeightmapTest::Material` integration test is now updated to load a custom heightmap material consisting of shaders that are capable of handling LOD, rendering real time shadows, and applying UV transformation.\r\n\r\njenkins:\r\n\r\n[homebrew](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64/992/) - ok", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2655/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:731b32893db6%0D3ca353298daa?from_pullrequest_id=2655"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2655/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2655.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2655/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2655/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2655"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2655/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:731b32893db6%0D3ca353298daa?from_pullrequest_id=2655"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2655/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2655/statuses_page=1.json"}}, "title": "Subdivide large heightmaps to fix LOD and support global texture mapping", "close_source_branch": true, "type": "pullrequest", "id": 2655, "destination": {"commit": {"hash": "3ca353298daa", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ca353298daa.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ca353298daa"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-03-13T21:21:33.714761+00:00", "summary": {"raw": "Large heightmaps (resolution  >4096k) are now subdivided into smaller partitions to workaround ogre terrain LOD height glitches. Most of the work is getting the material to render correctly. \r\n\r\nSpecifically, the texture maps should now apply to the global ogre terrain instead of being repeated in each partition. To do that, a transformation matrix is passed to the fragment shader so that the texture UV coordinates are mapped to the corresponding portion of the texture maps. \r\n\r\nThe `HeightmapTest::Material` integration test is now updated to load a custom heightmap material consisting of shaders that are capable of handling LOD, rendering real time shadows, and applying UV transformation.\r\n\r\njenkins:\r\n\r\n[homebrew](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64/992/) - ok", "markup": "markdown", "html": "<p>Large heightmaps (resolution  &gt;4096k) are now subdivided into smaller partitions to workaround ogre terrain LOD height glitches. Most of the work is getting the material to render correctly. </p>\n<p>Specifically, the texture maps should now apply to the global ogre terrain instead of being repeated in each partition. To do that, a transformation matrix is passed to the fragment shader so that the texture UV coordinates are mapped to the corresponding portion of the texture maps. </p>\n<p>The <code>HeightmapTest::Material</code> integration test is now updated to load a custom heightmap material consisting of shaders that are capable of handling LOD, rendering real time shadows, and applying UV transformation.</p>\n<p>jenkins:</p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64/992/\" rel=\"nofollow\">homebrew</a> - ok</p>", "type": "rendered"}, "source": {"commit": {"hash": "77c5d7c47afb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/77c5d7c47afb.json"}, "html": {"href": "#!/osrf/gazebo/commits/77c5d7c47afb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "heightmap_lodmaterial_7"}}, "comment_count": 22, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-18T15:49:19.959376+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "731b32893db6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/731b32893db6.json"}, "html": {"href": "#!/osrf/gazebo/commits/731b32893db6"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2656/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:f7e57d13da38%0D4643c1f696a8?from_pullrequest_id=2656"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2656/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2656.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2656/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2656/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2656"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2656/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:f7e57d13da38%0D4643c1f696a8?from_pullrequest_id=2656"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2656/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2656/statuses_page=1.json"}}, "title": "Update gazebo7 changelog", "close_source_branch": true, "type": "pullrequest", "id": 2656, "destination": {"commit": {"hash": "4643c1f696a8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4643c1f696a8.json"}, "html": {"href": "#!/osrf/gazebo/commits/4643c1f696a8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-03-15T00:18:29.576603+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "3166d0d6eeca", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3166d0d6eeca.json"}, "html": {"href": "#!/osrf/gazebo/commits/3166d0d6eeca"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gz7_changelog"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-15T21:42:05.700241+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "f7e57d13da38", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f7e57d13da38.json"}, "html": {"href": "#!/osrf/gazebo/commits/f7e57d13da38"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "I believe I stumbled over a bug in the transport system which sometimes stalls the message publishing of a `transport::Publisher`. This can be triggered when using `Publisher::Publish()` in blocking mode (parameter \\_block=true).\r\n\r\nThis is a multi-threading related issue which I think should be fixed in any case (also for non-blocking mode).\r\n\r\nIt's probably easiest to explain the issue on code snippets of the existing code.\r\n\r\nFor easy reference: `OnPublishComplete` is the function which should be called at the time just after a message has just been sent (which can happen from another thread). It decreases a counter for this message ID, and deletes the entry from the buffer if the counter reaches zero. This basically helps to keep track on the number of times this function was called for each message.   \r\nNote that the `this->pubIds` map is protected by `this->mutex`.\r\n\r\n```C++\r\nvoid Publisher::OnPublishComplete(uint32_t _id) \r\n{ \r\n boost::mutex::scoped_lock lock(this->mutex); \r\n \r\n std::map<uint32_t, int>::iterator iter = this->pubIds.find(_id); \r\n if (iter != this->pubIds.end() && (--iter->second) <= 0) \r\n this->pubIds.erase(iter); \r\n} \r\n```\r\n\r\nThen there is the function `SendMessage()` which is called from `Publisher::Publish()` when in blocking mode. The blocking is supposed to wait until the message is \"written out\" (*minor side issue:* this is a phrasing in the comments that could maybe be changed, because the actual \"writing out\" still happens asynchronously from `Publication`, so a call of `Publisher::Publish(..block=true)` will not actually guarantee the message has been written out!).\r\n\r\n```C++\r\nvoid Publisher::SendMessage()                                                   \r\n{                                                                               \r\n  std::list<MessagePtr> localBuffer;                                            \r\n  std::list<uint32_t> localIds;                                                 \r\n                                                                                \r\n  {                                                                             \r\n    boost::mutex::scoped_lock lock(this->mutex);                                \r\n    if (!this->pubIds.empty() || this->messages.empty())                        \r\n      return;                                                                   \r\n                                                                                \r\n    for (unsigned int i = 0; i < this->messages.size(); ++i)                    \r\n    {                                                                           \r\n      this->pubId = (this->pubId + 1) % 10000;                                  \r\n      this->pubIds[this->pubId] = 0;                                            \r\n      localIds.push_back(this->pubId);                                          \r\n    }                                                                           \r\n                                                                                \r\n    std::copy(this->messages.begin(), this->messages.end(),                     \r\n        std::back_inserter(localBuffer));                                       \r\n    this->messages.clear();                                                     \r\n  }\r\n  ...\r\n```\r\n\r\nThis first part basically has copied everything into local buffers (presumably to avoid blocking the mutex too long and to avoid deadlocks). This is all trivial, except one crucial thing to note here: If there are any message ID's still hanging around in `this->pubID`, this function won't do anything more - no \"writing out\" happens. This can be interpreted as *\"if there are any messages which have not finished publishing yet, don't proceed, and instead keep them in the `this->messages `buffer until the next time SendMessage() is called\"*. I guess this was done in order to ensure that messages are sent out in the right order (?).\r\n\r\nNext, the copies of `messages` and `pubIDs` are used to actually publish the messages using `transport::Publication::Publish()`, which will trigger a call to `OnPublishComplete()` **once for each subscriber callback** of `Publication`. A subscriber callback however is used for **remote subscribers** only (started in a separate terminal). It's probably possible to add subscriber callbacks in different ways too. But here it's only important that if we have local subscribers (as in all the gtests as far as I can see), we won't have a subscriber callback.   \r\n*Bottom line:* `Publication::Publish()` basically returns the number of times the `OnPublishComplete()` callback has been triggered per remote subscriber (Note that with remote subscribers, the actual calling of OnPublishComplete() happens asynchronously: the subscriber callback `SubscriptionTransport::HandleData()` only enqueues the message).\r\n\r\n```C++\r\n  ...\r\n  // Only send messages if there is something to send                           \r\n  if (!localBuffer.empty())                                                     \r\n  {                                                                             \r\n    std::list<uint32_t>::iterator pubIter = localIds.begin();                   \r\n                                                                                \r\n    // Send all the current messages                                            \r\n    for (std::list<MessagePtr>::iterator iter = localBuffer.begin();            \r\n        iter != localBuffer.end(); ++iter, ++pubIter)                           \r\n    {                                                                           \r\n      // Send the latest message.                                               \r\n      int result = this->publication->Publish(*iter,                            \r\n          boost::bind(&Publisher::OnPublishComplete, this, _1), *pubIter);\r\n      ...\r\n```\r\n\r\nSo I believe the intention is to expect a certain amount of calls to `OnPublishComplete()`. To achieve this, the `this->pubIds` is set with the message ID as key, and as a value the expected number of calls:\r\n\r\n```C++\r\n      ...\r\n      if (result > 0)                                                           \r\n        this->pubIds[*pubIter] = result;                                        \r\n      else                                                                      \r\n        this->pubIds.erase(*pubIter);                                           \r\n    }\r\n    ...\r\n```\r\n\r\nPlease correct me if I have misunderstood this intention.\r\n\r\nThere is a few issues with the above bit of code:\r\n\r\n*  `pubIds` is not mutex protected as it should be.\r\n* If we have only local subscribers, the counter should still be set to 1, because `OnPublishComplete` will still be called once.\r\n* It is possible (randomly due to threads) that by the time `this->pubIds` is set to the value of `result`, `OnPublishComplete()` has already been called, and the entry in `pubIds` has already been erased. This has happened to me, which brought me onto this issue in the first place. In this case, if we have remote subscribers, we will just re-add it here, and **it will never be removed again**! Which will in turn cause all future calls to `SendMessage()` to not do anything, as per condition `!this->pubIds.empty()` in the beginning of the function. So we have a \"publishing dead-end\".\r\n\r\nThe tricky bit is that this only happens when using remote subscribers, which may be a reason why it has gone unnoticed in the automated tests so far? Because if there are only local subscribers, `result` is 0, and the buffer will just always be cleared (it will not really be used actually). So the issue won't arise at all.\r\n\r\nThis PR proposes a way to fix this up, though it's not ready to be merged as there could be better (but more intrusive) solutions to this. I've put it up for discussion. I added some more comments to the code to explain what's going on. \r\n\r\nI've also added a test file which still requires to start a remote publisher manually (by `gz topic -e <topic>`), which is something that should be simulated instead.  \r\nYou can trigger the failure case by commenting `TEMP_NEW_APPROACH_TEST` in Publisher.cc, which will then use the old code. You may have to try a few times because of the randomness, sometimes it can still succeed with the old code.\r\n\r\nOne last thing: It would be important to let the user know that if they are only using \"blocking\" calls to `Publisher::Publish()`, it is *not* guaranteed that the message has actually already been sent. It may still sit in the queue, and it may actually be necessary to call `Publisher::SendMessage()` again to make sure the queue has been emptied. See also comments in the code.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2657/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:562cf6ef3995%0Dde4206af18d7?from_pullrequest_id=2657"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2657/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2657.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2657/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2657/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2657"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2657/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:562cf6ef3995%0Dde4206af18d7?from_pullrequest_id=2657"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2657/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2657/statuses_page=1.json"}}, "title": "Fixing issue in which publishing of messages gets stuck.", "close_source_branch": false, "type": "pullrequest", "id": 2657, "destination": {"commit": {"hash": "de4206af18d7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/de4206af18d7.json"}, "html": {"href": "#!/osrf/gazebo/commits/de4206af18d7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-15T07:56:23.597604+00:00", "summary": {"raw": "I believe I stumbled over a bug in the transport system which sometimes stalls the message publishing of a `transport::Publisher`. This can be triggered when using `Publisher::Publish()` in blocking mode (parameter \\_block=true).\r\n\r\nThis is a multi-threading related issue which I think should be fixed in any case (also for non-blocking mode).\r\n\r\nIt's probably easiest to explain the issue on code snippets of the existing code.\r\n\r\nFor easy reference: `OnPublishComplete` is the function which should be called at the time just after a message has just been sent (which can happen from another thread). It decreases a counter for this message ID, and deletes the entry from the buffer if the counter reaches zero. This basically helps to keep track on the number of times this function was called for each message.   \r\nNote that the `this->pubIds` map is protected by `this->mutex`.\r\n\r\n```C++\r\nvoid Publisher::OnPublishComplete(uint32_t _id) \r\n{ \r\n boost::mutex::scoped_lock lock(this->mutex); \r\n \r\n std::map<uint32_t, int>::iterator iter = this->pubIds.find(_id); \r\n if (iter != this->pubIds.end() && (--iter->second) <= 0) \r\n this->pubIds.erase(iter); \r\n} \r\n```\r\n\r\nThen there is the function `SendMessage()` which is called from `Publisher::Publish()` when in blocking mode. The blocking is supposed to wait until the message is \"written out\" (*minor side issue:* this is a phrasing in the comments that could maybe be changed, because the actual \"writing out\" still happens asynchronously from `Publication`, so a call of `Publisher::Publish(..block=true)` will not actually guarantee the message has been written out!).\r\n\r\n```C++\r\nvoid Publisher::SendMessage()                                                   \r\n{                                                                               \r\n  std::list<MessagePtr> localBuffer;                                            \r\n  std::list<uint32_t> localIds;                                                 \r\n                                                                                \r\n  {                                                                             \r\n    boost::mutex::scoped_lock lock(this->mutex);                                \r\n    if (!this->pubIds.empty() || this->messages.empty())                        \r\n      return;                                                                   \r\n                                                                                \r\n    for (unsigned int i = 0; i < this->messages.size(); ++i)                    \r\n    {                                                                           \r\n      this->pubId = (this->pubId + 1) % 10000;                                  \r\n      this->pubIds[this->pubId] = 0;                                            \r\n      localIds.push_back(this->pubId);                                          \r\n    }                                                                           \r\n                                                                                \r\n    std::copy(this->messages.begin(), this->messages.end(),                     \r\n        std::back_inserter(localBuffer));                                       \r\n    this->messages.clear();                                                     \r\n  }\r\n  ...\r\n```\r\n\r\nThis first part basically has copied everything into local buffers (presumably to avoid blocking the mutex too long and to avoid deadlocks). This is all trivial, except one crucial thing to note here: If there are any message ID's still hanging around in `this->pubID`, this function won't do anything more - no \"writing out\" happens. This can be interpreted as *\"if there are any messages which have not finished publishing yet, don't proceed, and instead keep them in the `this->messages `buffer until the next time SendMessage() is called\"*. I guess this was done in order to ensure that messages are sent out in the right order (?).\r\n\r\nNext, the copies of `messages` and `pubIDs` are used to actually publish the messages using `transport::Publication::Publish()`, which will trigger a call to `OnPublishComplete()` **once for each subscriber callback** of `Publication`. A subscriber callback however is used for **remote subscribers** only (started in a separate terminal). It's probably possible to add subscriber callbacks in different ways too. But here it's only important that if we have local subscribers (as in all the gtests as far as I can see), we won't have a subscriber callback.   \r\n*Bottom line:* `Publication::Publish()` basically returns the number of times the `OnPublishComplete()` callback has been triggered per remote subscriber (Note that with remote subscribers, the actual calling of OnPublishComplete() happens asynchronously: the subscriber callback `SubscriptionTransport::HandleData()` only enqueues the message).\r\n\r\n```C++\r\n  ...\r\n  // Only send messages if there is something to send                           \r\n  if (!localBuffer.empty())                                                     \r\n  {                                                                             \r\n    std::list<uint32_t>::iterator pubIter = localIds.begin();                   \r\n                                                                                \r\n    // Send all the current messages                                            \r\n    for (std::list<MessagePtr>::iterator iter = localBuffer.begin();            \r\n        iter != localBuffer.end(); ++iter, ++pubIter)                           \r\n    {                                                                           \r\n      // Send the latest message.                                               \r\n      int result = this->publication->Publish(*iter,                            \r\n          boost::bind(&Publisher::OnPublishComplete, this, _1), *pubIter);\r\n      ...\r\n```\r\n\r\nSo I believe the intention is to expect a certain amount of calls to `OnPublishComplete()`. To achieve this, the `this->pubIds` is set with the message ID as key, and as a value the expected number of calls:\r\n\r\n```C++\r\n      ...\r\n      if (result > 0)                                                           \r\n        this->pubIds[*pubIter] = result;                                        \r\n      else                                                                      \r\n        this->pubIds.erase(*pubIter);                                           \r\n    }\r\n    ...\r\n```\r\n\r\nPlease correct me if I have misunderstood this intention.\r\n\r\nThere is a few issues with the above bit of code:\r\n\r\n*  `pubIds` is not mutex protected as it should be.\r\n* If we have only local subscribers, the counter should still be set to 1, because `OnPublishComplete` will still be called once.\r\n* It is possible (randomly due to threads) that by the time `this->pubIds` is set to the value of `result`, `OnPublishComplete()` has already been called, and the entry in `pubIds` has already been erased. This has happened to me, which brought me onto this issue in the first place. In this case, if we have remote subscribers, we will just re-add it here, and **it will never be removed again**! Which will in turn cause all future calls to `SendMessage()` to not do anything, as per condition `!this->pubIds.empty()` in the beginning of the function. So we have a \"publishing dead-end\".\r\n\r\nThe tricky bit is that this only happens when using remote subscribers, which may be a reason why it has gone unnoticed in the automated tests so far? Because if there are only local subscribers, `result` is 0, and the buffer will just always be cleared (it will not really be used actually). So the issue won't arise at all.\r\n\r\nThis PR proposes a way to fix this up, though it's not ready to be merged as there could be better (but more intrusive) solutions to this. I've put it up for discussion. I added some more comments to the code to explain what's going on. \r\n\r\nI've also added a test file which still requires to start a remote publisher manually (by `gz topic -e <topic>`), which is something that should be simulated instead.  \r\nYou can trigger the failure case by commenting `TEMP_NEW_APPROACH_TEST` in Publisher.cc, which will then use the old code. You may have to try a few times because of the randomness, sometimes it can still succeed with the old code.\r\n\r\nOne last thing: It would be important to let the user know that if they are only using \"blocking\" calls to `Publisher::Publish()`, it is *not* guaranteed that the message has actually already been sent. It may still sit in the queue, and it may actually be necessary to call `Publisher::SendMessage()` again to make sure the queue has been emptied. See also comments in the code.", "markup": "markdown", "html": "<p>I believe I stumbled over a bug in the transport system which sometimes stalls the message publishing of a <code>transport::Publisher</code>. This can be triggered when using <code>Publisher::Publish()</code> in blocking mode (parameter _block=true).</p>\n<p>This is a multi-threading related issue which I think should be fixed in any case (also for non-blocking mode).</p>\n<p>It's probably easiest to explain the issue on code snippets of the existing code.</p>\n<p>For easy reference: <code>OnPublishComplete</code> is the function which should be called at the time just after a message has just been sent (which can happen from another thread). It decreases a counter for this message ID, and deletes the entry from the buffer if the counter reaches zero. This basically helps to keep track on the number of times this function was called for each message. <br />\nNote that the <code>this-&gt;pubIds</code> map is protected by <code>this-&gt;mutex</code>.</p>\n<div class=\"codehilite language-C++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">Publisher</span><span class=\"o\">::</span><span class=\"n\">OnPublishComplete</span><span class=\"p\">(</span><span class=\"kt\">uint32_t</span> <span class=\"n\">_id</span><span class=\"p\">)</span> \n<span class=\"p\">{</span> \n <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">::</span><span class=\"n\">scoped_lock</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">mutex</span><span class=\"p\">);</span> \n\n <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">map</span><span class=\"o\">&lt;</span><span class=\"kt\">uint32_t</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\">&gt;::</span><span class=\"n\">iterator</span> <span class=\"n\">iter</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubIds</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">_id</span><span class=\"p\">);</span> \n <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">iter</span> <span class=\"o\">!=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubIds</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"o\">--</span><span class=\"n\">iter</span><span class=\"o\">-&gt;</span><span class=\"n\">second</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> \n <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubIds</span><span class=\"p\">.</span><span class=\"n\">erase</span><span class=\"p\">(</span><span class=\"n\">iter</span><span class=\"p\">);</span> \n<span class=\"p\">}</span> \n</pre></div>\n\n\n<p>Then there is the function <code>SendMessage()</code> which is called from <code>Publisher::Publish()</code> when in blocking mode. The blocking is supposed to wait until the message is \"written out\" (<em>minor side issue:</em> this is a phrasing in the comments that could maybe be changed, because the actual \"writing out\" still happens asynchronously from <code>Publication</code>, so a call of <code>Publisher::Publish(..block=true)</code> will not actually guarantee the message has been written out!).</p>\n<div class=\"codehilite language-C++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">Publisher</span><span class=\"o\">::</span><span class=\"n\">SendMessage</span><span class=\"p\">()</span>                                                   \n<span class=\"p\">{</span>                                                                               \n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"n\">MessagePtr</span><span class=\"o\">&gt;</span> <span class=\"n\">localBuffer</span><span class=\"p\">;</span>                                            \n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"kt\">uint32_t</span><span class=\"o\">&gt;</span> <span class=\"n\">localIds</span><span class=\"p\">;</span>                                                 \n\n  <span class=\"p\">{</span>                                                                             \n    <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">::</span><span class=\"n\">scoped_lock</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">mutex</span><span class=\"p\">);</span>                                \n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubIds</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">()</span> <span class=\"o\">||</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">messages</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">())</span>                        \n      <span class=\"k\">return</span><span class=\"p\">;</span>                                                                   \n\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">messages</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span>                    \n    <span class=\"p\">{</span>                                                                           \n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubId</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubId</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">10000</span><span class=\"p\">;</span>                                  \n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubIds</span><span class=\"p\">[</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubId</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>                                            \n      <span class=\"n\">localIds</span><span class=\"p\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubId</span><span class=\"p\">);</span>                                          \n    <span class=\"p\">}</span>                                                                           \n\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">messages</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">(),</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">messages</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">(),</span>                     \n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">back_inserter</span><span class=\"p\">(</span><span class=\"n\">localBuffer</span><span class=\"p\">));</span>                                       \n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">messages</span><span class=\"p\">.</span><span class=\"n\">clear</span><span class=\"p\">();</span>                                                     \n  <span class=\"p\">}</span>\n  <span class=\"p\">...</span>\n</pre></div>\n\n\n<p>This first part basically has copied everything into local buffers (presumably to avoid blocking the mutex too long and to avoid deadlocks). This is all trivial, except one crucial thing to note here: If there are any message ID's still hanging around in <code>this-&gt;pubID</code>, this function won't do anything more - no \"writing out\" happens. This can be interpreted as <em>\"if there are any messages which have not finished publishing yet, don't proceed, and instead keep them in the <code>this-&gt;messages</code>buffer until the next time SendMessage() is called\"</em>. I guess this was done in order to ensure that messages are sent out in the right order (?).</p>\n<p>Next, the copies of <code>messages</code> and <code>pubIDs</code> are used to actually publish the messages using <code>transport::Publication::Publish()</code>, which will trigger a call to <code>OnPublishComplete()</code> <strong>once for each subscriber callback</strong> of <code>Publication</code>. A subscriber callback however is used for <strong>remote subscribers</strong> only (started in a separate terminal). It's probably possible to add subscriber callbacks in different ways too. But here it's only important that if we have local subscribers (as in all the gtests as far as I can see), we won't have a subscriber callback. <br />\n<em>Bottom line:</em> <code>Publication::Publish()</code> basically returns the number of times the <code>OnPublishComplete()</code> callback has been triggered per remote subscriber (Note that with remote subscribers, the actual calling of OnPublishComplete() happens asynchronously: the subscriber callback <code>SubscriptionTransport::HandleData()</code> only enqueues the message).</p>\n<div class=\"codehilite language-C++\"><pre><span></span>  <span class=\"p\">...</span>\n  <span class=\"c1\">// Only send messages if there is something to send                           </span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">localBuffer</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">())</span>                                                     \n  <span class=\"p\">{</span>                                                                             \n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"kt\">uint32_t</span><span class=\"o\">&gt;::</span><span class=\"n\">iterator</span> <span class=\"n\">pubIter</span> <span class=\"o\">=</span> <span class=\"n\">localIds</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">();</span>                   \n\n    <span class=\"c1\">// Send all the current messages                                            </span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"n\">MessagePtr</span><span class=\"o\">&gt;::</span><span class=\"n\">iterator</span> <span class=\"n\">iter</span> <span class=\"o\">=</span> <span class=\"n\">localBuffer</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">();</span>            \n        <span class=\"n\">iter</span> <span class=\"o\">!=</span> <span class=\"n\">localBuffer</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">iter</span><span class=\"p\">,</span> <span class=\"o\">++</span><span class=\"n\">pubIter</span><span class=\"p\">)</span>                           \n    <span class=\"p\">{</span>                                                                           \n      <span class=\"c1\">// Send the latest message.                                               </span>\n      <span class=\"kt\">int</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">publication</span><span class=\"o\">-&gt;</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">iter</span><span class=\"p\">,</span>                            \n          <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Publisher</span><span class=\"o\">::</span><span class=\"n\">OnPublishComplete</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"n\">_1</span><span class=\"p\">),</span> <span class=\"o\">*</span><span class=\"n\">pubIter</span><span class=\"p\">);</span>\n      <span class=\"p\">...</span>\n</pre></div>\n\n\n<p>So I believe the intention is to expect a certain amount of calls to <code>OnPublishComplete()</code>. To achieve this, the <code>this-&gt;pubIds</code> is set with the message ID as key, and as a value the expected number of calls:</p>\n<div class=\"codehilite language-C++\"><pre><span></span>      <span class=\"p\">...</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span>                                                           \n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubIds</span><span class=\"p\">[</span><span class=\"o\">*</span><span class=\"n\">pubIter</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">;</span>                                        \n      <span class=\"k\">else</span>                                                                      \n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pubIds</span><span class=\"p\">.</span><span class=\"n\">erase</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">pubIter</span><span class=\"p\">);</span>                                           \n    <span class=\"p\">}</span>\n    <span class=\"p\">...</span>\n</pre></div>\n\n\n<p>Please correct me if I have misunderstood this intention.</p>\n<p>There is a few issues with the above bit of code:</p>\n<ul>\n<li><code>pubIds</code> is not mutex protected as it should be.</li>\n<li>If we have only local subscribers, the counter should still be set to 1, because <code>OnPublishComplete</code> will still be called once.</li>\n<li>It is possible (randomly due to threads) that by the time <code>this-&gt;pubIds</code> is set to the value of <code>result</code>, <code>OnPublishComplete()</code> has already been called, and the entry in <code>pubIds</code> has already been erased. This has happened to me, which brought me onto this issue in the first place. In this case, if we have remote subscribers, we will just re-add it here, and <strong>it will never be removed again</strong>! Which will in turn cause all future calls to <code>SendMessage()</code> to not do anything, as per condition <code>!this-&gt;pubIds.empty()</code> in the beginning of the function. So we have a \"publishing dead-end\".</li>\n</ul>\n<p>The tricky bit is that this only happens when using remote subscribers, which may be a reason why it has gone unnoticed in the automated tests so far? Because if there are only local subscribers, <code>result</code> is 0, and the buffer will just always be cleared (it will not really be used actually). So the issue won't arise at all.</p>\n<p>This PR proposes a way to fix this up, though it's not ready to be merged as there could be better (but more intrusive) solutions to this. I've put it up for discussion. I added some more comments to the code to explain what's going on. </p>\n<p>I've also added a test file which still requires to start a remote publisher manually (by <code>gz topic -e &lt;topic&gt;</code>), which is something that should be simulated instead.<br />\nYou can trigger the failure case by commenting <code>TEMP_NEW_APPROACH_TEST</code> in Publisher.cc, which will then use the old code. You may have to try a few times because of the randomness, sometimes it can still succeed with the old code.</p>\n<p>One last thing: It would be important to let the user know that if they are only using \"blocking\" calls to <code>Publisher::Publish()</code>, it is <em>not</em> guaranteed that the message has actually already been sent. It may still sit in the queue, and it may actually be necessary to call <code>Publisher::SendMessage()</code> again to make sure the queue has been emptied. See also comments in the code.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f3a62b47f63b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/f3a62b47f63b"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/f3a62b47f63b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "transport_sendmessage_blocking_issue"}}, "comment_count": 55, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-07T07:27:57.653629+00:00", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "merge_commit": {"hash": "562cf6ef3995", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/562cf6ef3995.json"}, "html": {"href": "#!/osrf/gazebo/commits/562cf6ef3995"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "It seems that having a `CONTRIBUTING.md` file is good practice on open source projects. GitHub [handles](https://help.github.com/articles/setting-guidelines-for-repository-contributors/) these files nicely, but I don't think Bitbucket does, we'll see :)\r\n\r\nUnlike many of the examples of such files out there, I didn't write all the guidelines on the file, but linked to a tutorial we already have.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2658/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:dce8511ea100%0De11697bc4812?from_pullrequest_id=2658"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2658/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2658.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2658/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2658/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2658"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2658/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:dce8511ea100%0De11697bc4812?from_pullrequest_id=2658"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2658/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2658/statuses_page=1.json"}}, "title": "Add CONTRIBUTING.md", "close_source_branch": true, "type": "pullrequest", "id": 2658, "destination": {"commit": {"hash": "e11697bc4812", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e11697bc4812.json"}, "html": {"href": "#!/osrf/gazebo/commits/e11697bc4812"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-03-16T15:06:09.663965+00:00", "summary": {"raw": "It seems that having a `CONTRIBUTING.md` file is good practice on open source projects. GitHub [handles](https://help.github.com/articles/setting-guidelines-for-repository-contributors/) these files nicely, but I don't think Bitbucket does, we'll see :)\r\n\r\nUnlike many of the examples of such files out there, I didn't write all the guidelines on the file, but linked to a tutorial we already have.", "markup": "markdown", "html": "<p>It seems that having a <code>CONTRIBUTING.md</code> file is good practice on open source projects. GitHub <a data-is-external-link=\"true\" href=\"https://help.github.com/articles/setting-guidelines-for-repository-contributors/\" rel=\"nofollow\">handles</a> these files nicely, but I don't think Bitbucket does, we'll see :)</p>\n<p>Unlike many of the examples of such files out there, I didn't write all the guidelines on the file, but linked to a tutorial we already have.</p>", "type": "rendered"}, "source": {"commit": {"hash": "98b51454e225", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/98b51454e225.json"}, "html": {"href": "#!/osrf/gazebo/commits/98b51454e225"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "contributing"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-20T22:21:17.528518+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "dce8511ea100", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dce8511ea100.json"}, "html": {"href": "#!/osrf/gazebo/commits/dce8511ea100"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "PR to start a discussion on an ECS prototype.\r\n\r\nTo make it easier to review, this PR is from one throw-away branch to another throw-away branch (no gtest). The working prototype is on branch `entity_component_system_prototype`\r\n\r\nAreas I'm hoping to get feedback in:\r\n\r\n**All APIs, especially**\r\n\r\n* **main.cc** shows how to interact with the ECS. Thoughts?\r\n* **DivideAndPrintResult.hh** Shows how someone would change gazebo's behavior by adding a system. Thoughts?\r\n* **Triplet.hh**  Components are POD structs. Is there a case where this won't be good enough?\r\n* **EntityQueryResult** is clunky. Ideas?\r\n\r\n**Plugins**\r\n\r\n**PluginLoader** is different from the current Gazebo plugin loader. The benefit is it queries the name and type of plugin when the library is loaded. For example, it could be used to load all libraries in a folder and display a list of available plugins to the user.\r\n\r\n* Are there fundamental flaws with the approach of having a method in a shared library populate a struct?\r\n* will this approach work on all platforms?\r\n* How important is it to support multiple plugins in the same shared library?\r\n\r\n**Misc**\r\n\r\n* I made the System headers \"private\" thinking there is no case where someone would instantiate or inherit from a system, but is there a case? If they are private it's easier to change released versions of gazebo.\r\n\r\nKnown Issues\r\n\r\n* Not integrated with existing gazebo cmake; it was faster to write and test a separate cmake project\r\n* No componentizer - the thing that will turn SDF into components\r\n* SystemManager and EntityManager implementations are very basic and slow\r\n* Coding style\r\n\r\nTo run the prototype\r\n\r\n```\r\nhg update entity_component_system_prototype\r\nmkdir build_ecs && cd build_ecs\r\ncmake ../gz_ecs\r\nmake\r\n# Run unit tests\r\nmake test\r\n# Run without plugins (Division system only)\r\n./gz_ecs\r\n# Run with plugins (adds Addition system)\r\nGAZEBO_PLUGIN_PATH=systems/ ./gz_ecs\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2659/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:b99f32c9ffe2%0D74f72bd8982d?from_pullrequest_id=2659"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2659/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:b99f32c9ffe2%0D74f72bd8982d?from_pullrequest_id=2659"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2659/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/statuses_page=1.json"}}, "title": "ECS Prototype Feedback", "close_source_branch": false, "type": "pullrequest", "id": 2659, "destination": {"commit": {"hash": "74f72bd8982d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/74f72bd8982d.json"}, "html": {"href": "#!/osrf/gazebo/commits/74f72bd8982d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_deadend_dontmerge"}}, "created_on": "2017-03-16T22:16:50.946021+00:00", "summary": {"raw": "PR to start a discussion on an ECS prototype.\r\n\r\nTo make it easier to review, this PR is from one throw-away branch to another throw-away branch (no gtest). The working prototype is on branch `entity_component_system_prototype`\r\n\r\nAreas I'm hoping to get feedback in:\r\n\r\n**All APIs, especially**\r\n\r\n* **main.cc** shows how to interact with the ECS. Thoughts?\r\n* **DivideAndPrintResult.hh** Shows how someone would change gazebo's behavior by adding a system. Thoughts?\r\n* **Triplet.hh**  Components are POD structs. Is there a case where this won't be good enough?\r\n* **EntityQueryResult** is clunky. Ideas?\r\n\r\n**Plugins**\r\n\r\n**PluginLoader** is different from the current Gazebo plugin loader. The benefit is it queries the name and type of plugin when the library is loaded. For example, it could be used to load all libraries in a folder and display a list of available plugins to the user.\r\n\r\n* Are there fundamental flaws with the approach of having a method in a shared library populate a struct?\r\n* will this approach work on all platforms?\r\n* How important is it to support multiple plugins in the same shared library?\r\n\r\n**Misc**\r\n\r\n* I made the System headers \"private\" thinking there is no case where someone would instantiate or inherit from a system, but is there a case? If they are private it's easier to change released versions of gazebo.\r\n\r\nKnown Issues\r\n\r\n* Not integrated with existing gazebo cmake; it was faster to write and test a separate cmake project\r\n* No componentizer - the thing that will turn SDF into components\r\n* SystemManager and EntityManager implementations are very basic and slow\r\n* Coding style\r\n\r\nTo run the prototype\r\n\r\n```\r\nhg update entity_component_system_prototype\r\nmkdir build_ecs && cd build_ecs\r\ncmake ../gz_ecs\r\nmake\r\n# Run unit tests\r\nmake test\r\n# Run without plugins (Division system only)\r\n./gz_ecs\r\n# Run with plugins (adds Addition system)\r\nGAZEBO_PLUGIN_PATH=systems/ ./gz_ecs\r\n```", "markup": "markdown", "html": "<p>PR to start a discussion on an ECS prototype.</p>\n<p>To make it easier to review, this PR is from one throw-away branch to another throw-away branch (no gtest). The working prototype is on branch <code>entity_component_system_prototype</code></p>\n<p>Areas I'm hoping to get feedback in:</p>\n<p><strong>All APIs, especially</strong></p>\n<ul>\n<li><strong>main.cc</strong> shows how to interact with the ECS. Thoughts?</li>\n<li><strong>DivideAndPrintResult.hh</strong> Shows how someone would change gazebo's behavior by adding a system. Thoughts?</li>\n<li><strong>Triplet.hh</strong>  Components are POD structs. Is there a case where this won't be good enough?</li>\n<li><strong>EntityQueryResult</strong> is clunky. Ideas?</li>\n</ul>\n<p><strong>Plugins</strong></p>\n<p><strong>PluginLoader</strong> is different from the current Gazebo plugin loader. The benefit is it queries the name and type of plugin when the library is loaded. For example, it could be used to load all libraries in a folder and display a list of available plugins to the user.</p>\n<ul>\n<li>Are there fundamental flaws with the approach of having a method in a shared library populate a struct?</li>\n<li>will this approach work on all platforms?</li>\n<li>How important is it to support multiple plugins in the same shared library?</li>\n</ul>\n<p><strong>Misc</strong></p>\n<ul>\n<li>I made the System headers \"private\" thinking there is no case where someone would instantiate or inherit from a system, but is there a case? If they are private it's easier to change released versions of gazebo.</li>\n</ul>\n<p>Known Issues</p>\n<ul>\n<li>Not integrated with existing gazebo cmake; it was faster to write and test a separate cmake project</li>\n<li>No componentizer - the thing that will turn SDF into components</li>\n<li>SystemManager and EntityManager implementations are very basic and slow</li>\n<li>Coding style</li>\n</ul>\n<p>To run the prototype</p>\n<div class=\"codehilite\"><pre><span></span>hg update entity_component_system_prototype\nmkdir build_ecs &amp;&amp; cd build_ecs\ncmake ../gz_ecs\nmake\n# Run unit tests\nmake test\n# Run without plugins (Division system only)\n./gz_ecs\n# Run with plugins (adds Addition system)\nGAZEBO_PLUGIN_PATH=systems/ ./gz_ecs\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "b99f32c9ffe2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b99f32c9ffe2.json"}, "html": {"href": "#!/osrf/gazebo/commits/b99f32c9ffe2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_nogtest_broken_dontmerge"}}, "comment_count": 16, "state": "DECLINED", "task_count": 0, "reason": "Moved to #!/osrf/gazebo_experimental", "updated_on": "2017-04-03T21:40:07.634411+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This is only small. I would like to have a function to check whether a world with a certain name has already been created. I could use `get_world()` and check for `nullptr,` but I'd like to not have an error printed (only catching an exception would be fine though, but the error in `get_world()` isn't so nice).\r\n\r\nWhat do you think about just adding the `has_world()` function like this?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2660/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:14b76c61006c%0Db12ce64efb5d?from_pullrequest_id=2660"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2660/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2660.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2660/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2660/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2660"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2660/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:14b76c61006c%0Db12ce64efb5d?from_pullrequest_id=2660"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2660/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2660/statuses_page=1.json"}}, "title": "Add the has_world() function to PhysicsIFace", "close_source_branch": false, "type": "pullrequest", "id": 2660, "destination": {"commit": {"hash": "b12ce64efb5d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b12ce64efb5d.json"}, "html": {"href": "#!/osrf/gazebo/commits/b12ce64efb5d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-18T01:57:17.786203+00:00", "summary": {"raw": "This is only small. I would like to have a function to check whether a world with a certain name has already been created. I could use `get_world()` and check for `nullptr,` but I'd like to not have an error printed (only catching an exception would be fine though, but the error in `get_world()` isn't so nice).\r\n\r\nWhat do you think about just adding the `has_world()` function like this?", "markup": "markdown", "html": "<p>This is only small. I would like to have a function to check whether a world with a certain name has already been created. I could use <code>get_world()</code> and check for <code>nullptr,</code> but I'd like to not have an error printed (only catching an exception would be fine though, but the error in <code>get_world()</code> isn't so nice).</p>\n<p>What do you think about just adding the <code>has_world()</code> function like this?</p>", "type": "rendered"}, "source": {"commit": {"hash": "5c2f04bd7215", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/5c2f04bd7215"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/5c2f04bd7215"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "add_physics_has_world"}}, "comment_count": 13, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-27T16:38:21.912965+00:00", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "merge_commit": {"hash": "14b76c61006c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/14b76c61006c.json"}, "html": {"href": "#!/osrf/gazebo/commits/14b76c61006c"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "This could be either a misunderstanding on my behalf or an inconsistency in `physics::World` in regards to how `physics::Actor` instances are treated.\r\n\r\nThe `Actor` derives from `Model` and as far as I can see, is otherwise treated like a model too. The difference is that it is not added to the `WorldPrivate::models` list in the `World::LoadActor() `method, as it is done in `World::LoadModel()` for the \"normal\" models.\r\n\r\nOften this would actually go unnoticed because in many places, it is not the `models` vector which is used to iterate through the models, but instead the general element pointers, in this form:\r\n\r\n```C++\r\n  // Load the plugins for all the models                                        \r\n  for (unsigned int i = 0; i < this->dataPtr->rootElement->GetChildCount(); ++i)\r\n  {                                                                             \r\n    if (this->dataPtr->rootElement->GetChild(i)->HasType(Base::MODEL))          \r\n    {\r\n       ...\r\n```\r\n\r\nThe `Actor` models are caught with this. Crucially, this approach is also used for `World::BuildSceneMsg`, so that when a new gzclient connects to the world, it will get the model, and everything will run nicely.\r\n\r\nHowever the actors are not returned with `World::Models()`. So if we're using `World`  interface directly (not via messages connection like gzclient), then we miss out on the `Actor` models.\r\n\r\nIs there any particular reason this was done like this for the actors?  \r\nIf not, I suggest treating them as the models and adding the changes of this PR to make the behaviour of `World::LoadActor()` the same as `World::LoadModel()`.\r\n\r\nBy the way: The `Road` is treated as entity only as well, and not registered separately in a similar fashion (see `World::LoadRoad`). But this would have to be treated separately because it's not technically a model (or should it be?). It would be nice to have a method which returns all entities which are no model then, e.g. `Entity_M World::Entities().` It would be good to have a getter which allows to get *all* the objects in the world incl. roads (lights could still be treated separately as it is).\r\n\r\nWhat's your thoughts on this?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2661/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:7522abe66705%0D14b76c61006c?from_pullrequest_id=2661"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2661/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2661.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2661/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2661/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2661"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2661/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:7522abe66705%0D14b76c61006c?from_pullrequest_id=2661"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2661/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2661/statuses_page=1.json"}}, "title": "Added actors in World as models so they get returned with Models()", "close_source_branch": false, "type": "pullrequest", "id": 2661, "destination": {"commit": {"hash": "14b76c61006c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/14b76c61006c.json"}, "html": {"href": "#!/osrf/gazebo/commits/14b76c61006c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-18T04:02:28.001115+00:00", "summary": {"raw": "This could be either a misunderstanding on my behalf or an inconsistency in `physics::World` in regards to how `physics::Actor` instances are treated.\r\n\r\nThe `Actor` derives from `Model` and as far as I can see, is otherwise treated like a model too. The difference is that it is not added to the `WorldPrivate::models` list in the `World::LoadActor() `method, as it is done in `World::LoadModel()` for the \"normal\" models.\r\n\r\nOften this would actually go unnoticed because in many places, it is not the `models` vector which is used to iterate through the models, but instead the general element pointers, in this form:\r\n\r\n```C++\r\n  // Load the plugins for all the models                                        \r\n  for (unsigned int i = 0; i < this->dataPtr->rootElement->GetChildCount(); ++i)\r\n  {                                                                             \r\n    if (this->dataPtr->rootElement->GetChild(i)->HasType(Base::MODEL))          \r\n    {\r\n       ...\r\n```\r\n\r\nThe `Actor` models are caught with this. Crucially, this approach is also used for `World::BuildSceneMsg`, so that when a new gzclient connects to the world, it will get the model, and everything will run nicely.\r\n\r\nHowever the actors are not returned with `World::Models()`. So if we're using `World`  interface directly (not via messages connection like gzclient), then we miss out on the `Actor` models.\r\n\r\nIs there any particular reason this was done like this for the actors?  \r\nIf not, I suggest treating them as the models and adding the changes of this PR to make the behaviour of `World::LoadActor()` the same as `World::LoadModel()`.\r\n\r\nBy the way: The `Road` is treated as entity only as well, and not registered separately in a similar fashion (see `World::LoadRoad`). But this would have to be treated separately because it's not technically a model (or should it be?). It would be nice to have a method which returns all entities which are no model then, e.g. `Entity_M World::Entities().` It would be good to have a getter which allows to get *all* the objects in the world incl. roads (lights could still be treated separately as it is).\r\n\r\nWhat's your thoughts on this?", "markup": "markdown", "html": "<p>This could be either a misunderstanding on my behalf or an inconsistency in <code>physics::World</code> in regards to how <code>physics::Actor</code> instances are treated.</p>\n<p>The <code>Actor</code> derives from <code>Model</code> and as far as I can see, is otherwise treated like a model too. The difference is that it is not added to the <code>WorldPrivate::models</code> list in the <code>World::LoadActor()</code>method, as it is done in <code>World::LoadModel()</code> for the \"normal\" models.</p>\n<p>Often this would actually go unnoticed because in many places, it is not the <code>models</code> vector which is used to iterate through the models, but instead the general element pointers, in this form:</p>\n<div class=\"codehilite language-C++\"><pre><span></span>  <span class=\"c1\">// Load the plugins for all the models                                        </span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">rootElement</span><span class=\"o\">-&gt;</span><span class=\"n\">GetChildCount</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>                                                                             \n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">rootElement</span><span class=\"o\">-&gt;</span><span class=\"n\">GetChild</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"o\">::</span><span class=\"n\">MODEL</span><span class=\"p\">))</span>          \n    <span class=\"p\">{</span>\n       <span class=\"p\">...</span>\n</pre></div>\n\n\n<p>The <code>Actor</code> models are caught with this. Crucially, this approach is also used for <code>World::BuildSceneMsg</code>, so that when a new gzclient connects to the world, it will get the model, and everything will run nicely.</p>\n<p>However the actors are not returned with <code>World::Models()</code>. So if we're using <code>World</code>  interface directly (not via messages connection like gzclient), then we miss out on the <code>Actor</code> models.</p>\n<p>Is there any particular reason this was done like this for the actors?<br />\nIf not, I suggest treating them as the models and adding the changes of this PR to make the behaviour of <code>World::LoadActor()</code> the same as <code>World::LoadModel()</code>.</p>\n<p>By the way: The <code>Road</code> is treated as entity only as well, and not registered separately in a similar fashion (see <code>World::LoadRoad</code>). But this would have to be treated separately because it's not technically a model (or should it be?). It would be nice to have a method which returns all entities which are no model then, e.g. <code>Entity_M World::Entities().</code> It would be good to have a getter which allows to get <em>all</em> the objects in the world incl. roads (lights could still be treated separately as it is).</p>\n<p>What's your thoughts on this?</p>", "type": "rendered"}, "source": {"commit": {"hash": "611ea2a06834", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/611ea2a06834"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/611ea2a06834"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "actor_loaded_as_model"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-28T17:20:54.866699+00:00", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "merge_commit": {"hash": "7522abe66705", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7522abe66705.json"}, "html": {"href": "#!/osrf/gazebo/commits/7522abe66705"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Possible fix for new fail-cases found in recent comments to #!/osrf/gazebo/pull-requests/2268/add-basic-support-for-gnu-precompiled .", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2662/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:bec999d7b4f5%0Dcf634ce004da?from_pullrequest_id=2662"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2662/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2662.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2662/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2662/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2662"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2662/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:bec999d7b4f5%0Dcf634ce004da?from_pullrequest_id=2662"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2662/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2662/statuses_page=1.json"}}, "title": "Fixed precompiled headers to work in more use-cases.", "close_source_branch": false, "type": "pullrequest", "id": 2662, "destination": {"commit": {"hash": "cf634ce004da", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/cf634ce004da.json"}, "html": {"href": "#!/osrf/gazebo/commits/cf634ce004da"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-03-20T15:23:11.013094+00:00", "summary": {"raw": "Possible fix for new fail-cases found in recent comments to #!/osrf/gazebo/pull-requests/2268/add-basic-support-for-gnu-precompiled .", "markup": "markdown", "html": "<p>Possible fix for new fail-cases found in recent comments to <a href=\"#!/osrf/gazebo/pull-requests/2268/add-basic-support-for-gnu-precompiled\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2268/add-basic-support-for-gnu-precompiled</a> .</p>", "type": "rendered"}, "source": {"commit": {"hash": "156bbf54ea9c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/156bbf54ea9c"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/156bbf54ea9c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "fix_precompiled_headers"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-02T20:14:06.723699+00:00", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "merge_commit": {"hash": "bec999d7b4f5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bec999d7b4f5.json"}, "html": {"href": "#!/osrf/gazebo/commits/bec999d7b4f5"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This PR adds a unit test for JointState, validating that serialization and deserialization works.\r\n\r\nAdding this test revealed two bugs (both of which have been fixed):\r\n\r\n* A JointState associated with no axes resulted in malformed SDF output.  (A <joint> element under <state> must have at least one <angle> child element. [http://sdformat.org/spec?ver=1.6&elem=state#joint_angle](http://sdformat.org/spec?ver=1.6&elem=state#joint_angle))\r\n* The 'axis' attribute of the <angle> element was not incremented for each axis, so multi-axis joint states would contain multiple <angle axis='0'> elements.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2663/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:196406d43264%0D3959bbcc1b72?from_pullrequest_id=2663"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2663/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2663.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2663/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2663/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2663"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2663/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:196406d43264%0D3959bbcc1b72?from_pullrequest_id=2663"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2663/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2663/statuses_page=1.json"}}, "title": "Add testing for JointState serialization/deserialization", "close_source_branch": false, "type": "pullrequest", "id": 2663, "destination": {"commit": {"hash": "3959bbcc1b72", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3959bbcc1b72.json"}, "html": {"href": "#!/osrf/gazebo/commits/3959bbcc1b72"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-22T01:12:55.703260+00:00", "summary": {"raw": "This PR adds a unit test for JointState, validating that serialization and deserialization works.\r\n\r\nAdding this test revealed two bugs (both of which have been fixed):\r\n\r\n* A JointState associated with no axes resulted in malformed SDF output.  (A <joint> element under <state> must have at least one <angle> child element. [http://sdformat.org/spec?ver=1.6&elem=state#joint_angle](http://sdformat.org/spec?ver=1.6&elem=state#joint_angle))\r\n* The 'axis' attribute of the <angle> element was not incremented for each axis, so multi-axis joint states would contain multiple <angle axis='0'> elements.", "markup": "markdown", "html": "<p>This PR adds a unit test for JointState, validating that serialization and deserialization works.</p>\n<p>Adding this test revealed two bugs (both of which have been fixed):</p>\n<ul>\n<li>A JointState associated with no axes resulted in malformed SDF output.  (A &lt;joint&gt; element under &lt;state&gt; must have at least one &lt;angle&gt; child element. <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=state#joint_angle\" rel=\"nofollow\">http://sdformat.org/spec?ver=1.6&amp;elem=state#joint_angle</a>)</li>\n<li>The 'axis' attribute of the &lt;angle&gt; element was not incremented for each axis, so multi-axis joint states would contain multiple &lt;angle axis='0'&gt; elements.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "b5ec7dffbfb2", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mbeards/gazebo/commit/b5ec7dffbfb2"}, "html": {"href": "https://bitbucket.org/mbeards/gazebo/commits/b5ec7dffbfb2"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mbeards/gazebo"}, "html": {"href": "https://bitbucket.org/mbeards/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{faf54d50-8b5a-487b-84a0-42bb166a9a0a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "mbeards/gazebo", "uuid": "{faf54d50-8b5a-487b-84a0-42bb166a9a0a}"}, "branch": {"name": "joint_state_serialization_testing"}}, "comment_count": 19, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-19T04:53:59.325332+00:00", "author": {"display_name": "Michael Beardsworth", "uuid": "{6d29b10b-98d1-40a8-9074-c9bbc5ad7a39}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6d29b10b-98d1-40a8-9074-c9bbc5ad7a39%7D"}, "html": {"href": "https://bitbucket.org/%7B6d29b10b-98d1-40a8-9074-c9bbc5ad7a39%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/15c2fe64bea15ed9be13a4bdb5856938d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMB-1.png"}}, "nickname": "mbeards", "type": "user", "account_id": "557058:c7b66d98-2604-4316-9362-ddbfe8280c39"}, "merge_commit": {"hash": "196406d43264", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/196406d43264.json"}, "html": {"href": "#!/osrf/gazebo/commits/196406d43264"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "It has always annoyed me that I can't be more precise. For small robots, this is totally necessary. Obviously we could go further than 5, but at some point it becomes ugly. I think this is a nice compromise.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2664/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:20229b3a9425%0De0036a34fdab?from_pullrequest_id=2664"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2664/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2664.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2664/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2664/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2664"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2664/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:20229b3a9425%0De0036a34fdab?from_pullrequest_id=2664"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2664/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2664/statuses_page=1.json"}}, "title": "add more precision to joint control widget", "close_source_branch": false, "type": "pullrequest", "id": 2664, "destination": {"commit": {"hash": "e0036a34fdab", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e0036a34fdab.json"}, "html": {"href": "#!/osrf/gazebo/commits/e0036a34fdab"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-22T18:51:34.874887+00:00", "summary": {"raw": "It has always annoyed me that I can't be more precise. For small robots, this is totally necessary. Obviously we could go further than 5, but at some point it becomes ugly. I think this is a nice compromise.", "markup": "markdown", "html": "<p>It has always annoyed me that I can't be more precise. For small robots, this is totally necessary. Obviously we could go further than 5, but at some point it becomes ugly. I think this is a nice compromise.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4a75427bdc3d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peter_mitrano/gazebo/commit/4a75427bdc3d"}, "html": {"href": "https://bitbucket.org/peter_mitrano/gazebo/commits/4a75427bdc3d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peter_mitrano/gazebo"}, "html": {"href": "https://bitbucket.org/peter_mitrano/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{cdecb6a0-d35a-4e7b-95fa-f086e345d708}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peter_mitrano/gazebo", "uuid": "{cdecb6a0-d35a-4e7b-95fa-f086e345d708}"}, "branch": {"name": "more_precision"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-10T14:06:33.605498+00:00", "author": {"display_name": "Peter Mitrano", "uuid": "{f79f793e-4f31-4c61-9df2-190b239e0bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:b5298278-299c-4d16-b5aa-449d6d2db98d/e384924a-68d0-4825-9af2-9892e5f3417c/128"}}, "nickname": "peter_mitrano", "type": "user", "account_id": "557058:b5298278-299c-4d16-b5aa-449d6d2db98d"}, "merge_commit": {"hash": "20229b3a9425", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/20229b3a9425.json"}, "html": {"href": "#!/osrf/gazebo/commits/20229b3a9425"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "This fixes issue #2186, please refer to the description there.\r\n\r\nLet me know if you'd like me to apply the changes to all occurrences found throughout the whole code.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2665/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:b12ce64efb5d%0D0d39ebf2b92b?from_pullrequest_id=2665"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2665/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2665.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2665/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2665/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2665"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2665/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:b12ce64efb5d%0D0d39ebf2b92b?from_pullrequest_id=2665"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2665/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2665/statuses_page=1.json"}}, "title": "UserCmdManager using first name which comes up on namespace, not the world name.", "close_source_branch": false, "type": "pullrequest", "id": 2665, "destination": {"commit": {"hash": "0d39ebf2b92b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0d39ebf2b92b.json"}, "html": {"href": "#!/osrf/gazebo/commits/0d39ebf2b92b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-22T22:59:22.222492+00:00", "summary": {"raw": "This fixes issue #2186, please refer to the description there.\r\n\r\nLet me know if you'd like me to apply the changes to all occurrences found throughout the whole code.", "markup": "markdown", "html": "<p>This fixes issue <a href=\"#!/osrf/gazebo/issues/2186/usercmdmanager-does-not-use-world-name-to\" rel=\"nofollow\" title=\"UserCmdManager does not use world name to initialize node\" class=\"ap-connect-link\">#2186</a>, please refer to the description there.</p>\n<p>Let me know if you'd like me to apply the changes to all occurrences found throughout the whole code.</p>", "type": "rendered"}, "source": {"commit": {"hash": "45b633b5078b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/45b633b5078b"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/45b633b5078b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "user_cmd_mangager_using_world_name"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-27T16:37:12.860776+00:00", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "merge_commit": {"hash": "b12ce64efb5d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b12ce64efb5d.json"}, "html": {"href": "#!/osrf/gazebo/commits/b12ce64efb5d"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Diff of Nate's changes to pull request #2659 to make it easier to view", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2666/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:350a7cd26646%0Db99f32c9ffe2?from_pullrequest_id=2666"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2666/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2666.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2666/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2666/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2666"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2666/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:350a7cd26646%0Db99f32c9ffe2?from_pullrequest_id=2666"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2666/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2666/statuses_page=1.json"}}, "title": "Ecs nate", "close_source_branch": false, "type": "pullrequest", "id": 2666, "destination": {"commit": {"hash": "b99f32c9ffe2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b99f32c9ffe2.json"}, "html": {"href": "#!/osrf/gazebo/commits/b99f32c9ffe2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_nogtest_broken_dontmerge"}}, "created_on": "2017-03-23T16:30:30.457174+00:00", "summary": {"raw": "Diff of Nate's changes to pull request #2659 to make it easier to view", "markup": "markdown", "html": "<p>Diff of Nate's changes to <a href=\"#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2659</a> to make it easier to view</p>", "type": "rendered"}, "source": {"commit": {"hash": "350a7cd26646", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/350a7cd26646.json"}, "html": {"href": "#!/osrf/gazebo/commits/350a7cd26646"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_nate"}}, "comment_count": 36, "state": "DECLINED", "task_count": 0, "reason": "#!/osrf/gazebo_experimental", "updated_on": "2017-04-03T21:47:56.824115+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "The `INTEGRATION_model_database` currently has the default timeout of 240 seconds, but it recently started failing via timeout in my overnight builds. Recent builds show that it takes 210-220 seconds to build, but as new models are added, that time increases.\r\n\r\n* http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-homebrew-amd64/210/testReport/(root)/ModelDatabaseTest/\r\n* http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-xenial-amd64-gpu-nvidia/28/testReport/(root)/ModelDatabaseTest/\r\n\r\nSomeday we could rethink the purpose of these tests that download all models multiple times, but here's a bandaid in the meantime.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2667/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:47c3ae759862%0D99529681ed48?from_pullrequest_id=2667"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2667/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2667.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2667/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2667/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2667"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2667/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:47c3ae759862%0D99529681ed48?from_pullrequest_id=2667"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2667/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2667/statuses_page=1.json"}}, "title": "increase timeout for INTEGRATION_model_database", "close_source_branch": true, "type": "pullrequest", "id": 2667, "destination": {"commit": {"hash": "99529681ed48", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/99529681ed48.json"}, "html": {"href": "#!/osrf/gazebo/commits/99529681ed48"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-03-24T17:50:26.224949+00:00", "summary": {"raw": "The `INTEGRATION_model_database` currently has the default timeout of 240 seconds, but it recently started failing via timeout in my overnight builds. Recent builds show that it takes 210-220 seconds to build, but as new models are added, that time increases.\r\n\r\n* http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-homebrew-amd64/210/testReport/(root)/ModelDatabaseTest/\r\n* http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-xenial-amd64-gpu-nvidia/28/testReport/(root)/ModelDatabaseTest/\r\n\r\nSomeday we could rethink the purpose of these tests that download all models multiple times, but here's a bandaid in the meantime.", "markup": "markdown", "html": "<p>The <code>INTEGRATION_model_database</code> currently has the default timeout of 240 seconds, but it recently started failing via timeout in my overnight builds. Recent builds show that it takes 210-220 seconds to build, but as new models are added, that time increases.</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-homebrew-amd64/210/testReport/(root)/ModelDatabaseTest/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-homebrew-amd64/210/testReport/(root)/ModelDatabaseTest/</a></li>\n<li><a href=\"http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-xenial-amd64-gpu-nvidia/28/testReport/(root)/ModelDatabaseTest/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/view/main/view/GazeboDefault/job/gazebo-ci-default-xenial-amd64-gpu-nvidia/28/testReport/(root)/ModelDatabaseTest/</a></li>\n</ul>\n<p>Someday we could rethink the purpose of these tests that download all models multiple times, but here's a bandaid in the meantime.</p>", "type": "rendered"}, "source": {"commit": {"hash": "709c86edac49", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/709c86edac49.json"}, "html": {"href": "#!/osrf/gazebo/commits/709c86edac49"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "model_database_test_timeout"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-30T04:44:17.307934+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "47c3ae759862", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/47c3ae759862.json"}, "html": {"href": "#!/osrf/gazebo/commits/47c3ae759862"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2668/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:f1e79acc1265%0D7522abe66705?from_pullrequest_id=2668"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2668/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2668.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2668/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2668/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2668"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2668/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:f1e79acc1265%0D7522abe66705?from_pullrequest_id=2668"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2668/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2668/statuses_page=1.json"}}, "title": "Population.cc change hardcoded sdf version", "close_source_branch": false, "type": "pullrequest", "id": 2668, "destination": {"commit": {"hash": "7522abe66705", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7522abe66705.json"}, "html": {"href": "#!/osrf/gazebo/commits/7522abe66705"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-29T15:17:10.359593+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "a5aef1708e05", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/vincentrou/gazebo/commit/a5aef1708e05"}, "html": {"href": "https://bitbucket.org/vincentrou/gazebo/commits/a5aef1708e05"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/vincentrou/gazebo"}, "html": {"href": "https://bitbucket.org/vincentrou/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b346c365-8619-4139-a6d0-b505b408e86e}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "vincentrou/gazebo", "uuid": "{b346c365-8619-4139-a6d0-b505b408e86e}"}, "branch": {"name": "vincentrou/populationcc-edited-online-with-bitbucke-1490800291304"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-30T04:00:39.465887+00:00", "author": {"display_name": "vincentrou", "uuid": "{a24abfd6-eba5-4d99-996b-0c779083728a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba24abfd6-eba5-4d99-996b-0c779083728a%7D"}, "html": {"href": "https://bitbucket.org/%7Ba24abfd6-eba5-4d99-996b-0c779083728a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2f6091b5f0f614d27ff1d21b847264c5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsV-3.png"}}, "nickname": "vincentrou", "type": "user", "account_id": "557058:1860ddb2-e1c1-4175-bf2b-82fcfbe0b62b"}, "merge_commit": {"hash": "f1e79acc1265", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f1e79acc1265.json"}, "html": {"href": "#!/osrf/gazebo/commits/f1e79acc1265"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "The HDF5_INSTRUMENT option has been broken (issue #1841 and [gazebo_tutorials issue 40](#!/osrf/gazebo_tutorials/issues/40/hdf-5-tutorial)). From my testing, the feature worked when it was originally merged in pull request #1523, but that pull request caused a bunch of jenkins builds to break, so we merged pull request #1644 that fixed the jenkins builds. Unfortunately, we removed a [a line](#!/osrf/gazebo/pull-requests/1644/fix-jenkins-build-error/diff#Ldeps/opende/CMakeLists.txtF271) that linked with `hdf5_cpp` that I believe causes the linker errors in #1841. Specifying the `CXX` component when finding HDF5 causes this library to be included in the `HDF5_LIBRARIES` cmake variable and fixes the linking error.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2669/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:be25e6a80cfc%0D47c3ae759862?from_pullrequest_id=2669"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2669/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2669.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2669/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2669/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2669"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2669/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:be25e6a80cfc%0D47c3ae759862?from_pullrequest_id=2669"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2669/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2669/statuses_page=1.json"}}, "title": "Fix finding HDF5 for use in ODE data logging (#1841)", "close_source_branch": true, "type": "pullrequest", "id": 2669, "destination": {"commit": {"hash": "47c3ae759862", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/47c3ae759862.json"}, "html": {"href": "#!/osrf/gazebo/commits/47c3ae759862"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-03-29T22:12:33.159281+00:00", "summary": {"raw": "The HDF5_INSTRUMENT option has been broken (issue #1841 and [gazebo_tutorials issue 40](#!/osrf/gazebo_tutorials/issues/40/hdf-5-tutorial)). From my testing, the feature worked when it was originally merged in pull request #1523, but that pull request caused a bunch of jenkins builds to break, so we merged pull request #1644 that fixed the jenkins builds. Unfortunately, we removed a [a line](#!/osrf/gazebo/pull-requests/1644/fix-jenkins-build-error/diff#Ldeps/opende/CMakeLists.txtF271) that linked with `hdf5_cpp` that I believe causes the linker errors in #1841. Specifying the `CXX` component when finding HDF5 causes this library to be included in the `HDF5_LIBRARIES` cmake variable and fixes the linking error.", "markup": "markdown", "html": "<p>The HDF5_INSTRUMENT option has been broken (issue <a href=\"#!/osrf/gazebo/issues/1841/gazebo7-fails-to-build-with-hdf5-on-ubuntu\" rel=\"nofollow\" title=\"Gazebo7 fails to build with hdf5 on Ubuntu Trusty\" class=\"ap-connect-link\"><s>#1841</s></a> and <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_tutorials/issues/40/hdf-5-tutorial\" rel=\"nofollow\">gazebo_tutorials issue 40</a>). From my testing, the feature worked when it was originally merged in <a href=\"#!/osrf/gazebo/pull-requests/1523/hdf5-instrument-tool-integrated\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1523</a>, but that pull request caused a bunch of jenkins builds to break, so we merged <a href=\"#!/osrf/gazebo/pull-requests/1644/fix-jenkins-build-error\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1644</a> that fixed the jenkins builds. Unfortunately, we removed a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/1644/fix-jenkins-build-error/diff#Ldeps/opende/CMakeLists.txtF271\" rel=\"nofollow\">a line</a> that linked with <code>hdf5_cpp</code> that I believe causes the linker errors in <a href=\"#!/osrf/gazebo/issues/1841/gazebo7-fails-to-build-with-hdf5-on-ubuntu\" rel=\"nofollow\" title=\"Gazebo7 fails to build with hdf5 on Ubuntu Trusty\" class=\"ap-connect-link\"><s>#1841</s></a>. Specifying the <code>CXX</code> component when finding HDF5 causes this library to be included in the <code>HDF5_LIBRARIES</code> cmake variable and fixes the linking error.</p>", "type": "rendered"}, "source": {"commit": {"hash": "71a2662f3ce8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/71a2662f3ce8.json"}, "html": {"href": "#!/osrf/gazebo/commits/71a2662f3ce8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "fix_hdf5"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-03-31T18:06:45.082090+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "be25e6a80cfc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/be25e6a80cfc.json"}, "html": {"href": "#!/osrf/gazebo/commits/be25e6a80cfc"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "closes #1285", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2670/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/None?from_pullrequest_id=2670"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2670/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2670.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2670/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2670/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2670"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2670/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/None?from_pullrequest_id=2670"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2670/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2670/statuses_page=1.json"}}, "title": "Extend GaussianNoise to support random walk", "close_source_branch": false, "type": "pullrequest", "id": 2670, "destination": {"commit": {"hash": "01bfc1f85995", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/01bfc1f85995.json"}, "html": {"href": "#!/osrf/gazebo/commits/01bfc1f85995"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-03-29T23:44:00.724114+00:00", "summary": {"raw": "closes #1285", "markup": "markdown", "html": "<p>closes <a href=\"#!/osrf/gazebo/issues/1285/improve-sensor-noise-modeling\" rel=\"nofollow\" title=\"Improve sensor noise modeling\" class=\"ap-connect-link\">#1285</a></p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "randomwalk"}}, "comment_count": 3, "state": "DECLINED", "task_count": 0, "reason": "rebasing on gazebo8", "updated_on": "2017-04-01T19:36:02.626798+00:00", "author": {"display_name": "James Goppert", "uuid": "{b618f3e0-62ee-44c4-bc34-e54b9f05b140}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D"}, "html": {"href": "https://bitbucket.org/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331/c1565592-9846-41bd-836a-8421cebab1f4/128"}}, "nickname": "jgoppert", "type": "user", "account_id": "557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331"}, "merge_commit": null, "closed_by": {"display_name": "James Goppert", "uuid": "{b618f3e0-62ee-44c4-bc34-e54b9f05b140}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D"}, "html": {"href": "https://bitbucket.org/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331/c1565592-9846-41bd-836a-8421cebab1f4/128"}}, "nickname": "jgoppert", "type": "user", "account_id": "557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331"}}, {"description": "Making a PR to have jenkins testing. I will merge if jenkins is clean.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2671/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:82291c85b38f%0D36068ba1bbcb?from_pullrequest_id=2671"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2671/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2671.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2671/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2671/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2671"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2671/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:82291c85b38f%0D36068ba1bbcb?from_pullrequest_id=2671"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2671/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2671/statuses_page=1.json"}}, "title": "Merge gazebo7 to gazebo8 20170330", "close_source_branch": true, "type": "pullrequest", "id": 2671, "destination": {"commit": {"hash": "36068ba1bbcb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36068ba1bbcb.json"}, "html": {"href": "#!/osrf/gazebo/commits/36068ba1bbcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-03-30T21:23:48.546922+00:00", "summary": {"raw": "Making a PR to have jenkins testing. I will merge if jenkins is clean.", "markup": "markdown", "html": "<p>Making a PR to have jenkins testing. I will merge if jenkins is clean.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a231da48aa15", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a231da48aa15.json"}, "html": {"href": "#!/osrf/gazebo/commits/a231da48aa15"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "merge_7_to_8_20170330"}}, "comment_count": 19, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-05T04:50:54.303908+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "82291c85b38f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/82291c85b38f.json"}, "html": {"href": "#!/osrf/gazebo/commits/82291c85b38f"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2672/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/None?from_pullrequest_id=2672"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2672/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2672.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2672/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2672/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2672"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2672/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/None?from_pullrequest_id=2672"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2672/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2672/statuses_page=1.json"}}, "title": "Extend GaussianNoise to support random walk", "close_source_branch": false, "type": "pullrequest", "id": 2672, "destination": {"commit": {"hash": "36068ba1bbcb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36068ba1bbcb.json"}, "html": {"href": "#!/osrf/gazebo/commits/36068ba1bbcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-04-01T19:37:56.008584+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "reason": "", "updated_on": "2017-04-01T20:10:02.595462+00:00", "author": {"display_name": "James Goppert", "uuid": "{b618f3e0-62ee-44c4-bc34-e54b9f05b140}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D"}, "html": {"href": "https://bitbucket.org/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331/c1565592-9846-41bd-836a-8421cebab1f4/128"}}, "nickname": "jgoppert", "type": "user", "account_id": "557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331"}, "merge_commit": null, "closed_by": {"display_name": "James Goppert", "uuid": "{b618f3e0-62ee-44c4-bc34-e54b9f05b140}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D"}, "html": {"href": "https://bitbucket.org/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331/c1565592-9846-41bd-836a-8421cebab1f4/128"}}, "nickname": "jgoppert", "type": "user", "account_id": "557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331"}}, {"description": "Add random walk support to GaussianNoise by extending sdf params.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2673/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/jgoppert/gazebo:26c0e97eff2d%0Db3956dcf4377?from_pullrequest_id=2673"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2673/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2673.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2673/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2673/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2673"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2673/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/jgoppert/gazebo:26c0e97eff2d%0Db3956dcf4377?from_pullrequest_id=2673"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2673/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2673/statuses_page=1.json"}}, "title": "Add random walk support to GaussianNoise", "close_source_branch": false, "type": "pullrequest", "id": 2673, "destination": {"commit": {"hash": "b3956dcf4377", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b3956dcf4377.json"}, "html": {"href": "#!/osrf/gazebo/commits/b3956dcf4377"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-04-01T20:30:43.995155+00:00", "summary": {"raw": "Add random walk support to GaussianNoise by extending sdf params.", "markup": "markdown", "html": "<p>Add random walk support to GaussianNoise by extending sdf params.</p>", "type": "rendered"}, "source": {"commit": {"hash": "26c0e97eff2d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jgoppert/gazebo/commit/26c0e97eff2d"}, "html": {"href": "https://bitbucket.org/jgoppert/gazebo/commits/26c0e97eff2d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jgoppert/gazebo"}, "html": {"href": "https://bitbucket.org/jgoppert/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d39f509f-790d-4f8b-8009-222645254029}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "jgoppert/gazebo", "uuid": "{d39f509f-790d-4f8b-8009-222645254029}"}, "branch": {"name": "randomwalk"}}, "comment_count": 14, "state": "DECLINED", "task_count": 0, "reason": "pull request #3181, for Gazebo 11", "updated_on": "2020-01-22T23:32:15.482775+00:00", "author": {"display_name": "James Goppert", "uuid": "{b618f3e0-62ee-44c4-bc34-e54b9f05b140}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D"}, "html": {"href": "https://bitbucket.org/%7Bb618f3e0-62ee-44c4-bc34-e54b9f05b140%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331/c1565592-9846-41bd-836a-8421cebab1f4/128"}}, "nickname": "jgoppert", "type": "user", "account_id": "557058:169ff364-18d4-4ba3-bf5a-4fd0ab88c331"}, "merge_commit": null, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Taken from ardupilot PR. Credit to John Hsu\r\nThis will simply the integration of ardupilot plugin", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2674/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:8cb5d7a3e96c%0Dce35d9414147?from_pullrequest_id=2674"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2674/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2674.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2674/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2674/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2674"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2674/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8cb5d7a3e96c%0Dce35d9414147?from_pullrequest_id=2674"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2674/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2674/statuses_page=1.json"}}, "title": "Model: add a way to get scoped sensor name.", "close_source_branch": false, "type": "pullrequest", "id": 2674, "destination": {"commit": {"hash": "ce35d9414147", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ce35d9414147.json"}, "html": {"href": "#!/osrf/gazebo/commits/ce35d9414147"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-04-03T10:35:23.228149+00:00", "summary": {"raw": "Taken from ardupilot PR. Credit to John Hsu\r\nThis will simply the integration of ardupilot plugin", "markup": "markdown", "html": "<p>Taken from ardupilot PR. Credit to John Hsu\nThis will simply the integration of ardupilot plugin</p>", "type": "rendered"}, "source": {"commit": {"hash": "04519f1b69c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo/commit/04519f1b69c5"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo/commits/04519f1b69c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{20635e39-8da1-485a-a517-369acb1ee945}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pkancir/gazebo", "uuid": "{20635e39-8da1-485a-a517-369acb1ee945}"}, "branch": {"name": "gazebo7-model-khancyr"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-15T17:48:44.384546+00:00", "author": {"display_name": "pierre kancir", "uuid": "{9a97d859-5959-4a68-af43-bdcceee662f0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D"}, "html": {"href": "https://bitbucket.org/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7e77466a3ea95f7e0b79b1c06a2d4e65d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-3.png"}}, "nickname": "pkancir", "type": "user", "account_id": "557058:be5780af-c696-491c-bf8f-4ffe804dc642"}, "merge_commit": {"hash": "8cb5d7a3e96c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8cb5d7a3e96c.json"}, "html": {"href": "#!/osrf/gazebo/commits/8cb5d7a3e96c"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Taken from ardupilot PR. Credit to John Hsu", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2675/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/pkancir/gazebo:d3c073700f2a%0D82291c85b38f?from_pullrequest_id=2675"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2675/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2675.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2675/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2675/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2675"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2675/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/pkancir/gazebo:d3c073700f2a%0D82291c85b38f?from_pullrequest_id=2675"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2675/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2675/statuses_page=1.json"}}, "title": "Model: add a way to get scoped sensor name.", "close_source_branch": false, "type": "pullrequest", "id": 2675, "destination": {"commit": {"hash": "82291c85b38f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/82291c85b38f.json"}, "html": {"href": "#!/osrf/gazebo/commits/82291c85b38f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-04-03T10:54:05.177044+00:00", "summary": {"raw": "Taken from ardupilot PR. Credit to John Hsu", "markup": "markdown", "html": "<p>Taken from ardupilot PR. Credit to John Hsu</p>", "type": "rendered"}, "source": {"commit": {"hash": "d3c073700f2a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo/commit/d3c073700f2a"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo/commits/d3c073700f2a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{20635e39-8da1-485a-a517-369acb1ee945}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pkancir/gazebo", "uuid": "{20635e39-8da1-485a-a517-369acb1ee945}"}, "branch": {"name": "gazebo8-model-khancyr"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "Closed because it will be merged from gazebo7", "updated_on": "2017-04-05T12:58:34.176275+00:00", "author": {"display_name": "pierre kancir", "uuid": "{9a97d859-5959-4a68-af43-bdcceee662f0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D"}, "html": {"href": "https://bitbucket.org/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7e77466a3ea95f7e0b79b1c06a2d4e65d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-3.png"}}, "nickname": "pkancir", "type": "user", "account_id": "557058:be5780af-c696-491c-bf8f-4ffe804dc642"}, "merge_commit": null, "closed_by": {"display_name": "pierre kancir", "uuid": "{9a97d859-5959-4a68-af43-bdcceee662f0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D"}, "html": {"href": "https://bitbucket.org/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7e77466a3ea95f7e0b79b1c06a2d4e65d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-3.png"}}, "nickname": "pkancir", "type": "user", "account_id": "557058:be5780af-c696-491c-bf8f-4ffe804dc642"}}, {"description": "Taken from ardupilot PR. Credit to John Hsu", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2676/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:e2a94d262595%0Da3a7c53ea929?from_pullrequest_id=2676"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2676/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2676.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2676/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2676/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2676"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2676/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:e2a94d262595%0Da3a7c53ea929?from_pullrequest_id=2676"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2676/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2676/statuses_page=1.json"}}, "title": "Model: add a way to get scoped sensor name.", "close_source_branch": false, "type": "pullrequest", "id": 2676, "destination": {"commit": {"hash": "a3a7c53ea929", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3a7c53ea929.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3a7c53ea929"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-03T10:59:06.914759+00:00", "summary": {"raw": "Taken from ardupilot PR. Credit to John Hsu", "markup": "markdown", "html": "<p>Taken from ardupilot PR. Credit to John Hsu</p>", "type": "rendered"}, "source": {"commit": {"hash": "7bda576f38f6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo/commit/7bda576f38f6"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo/commits/7bda576f38f6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{20635e39-8da1-485a-a517-369acb1ee945}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pkancir/gazebo", "uuid": "{20635e39-8da1-485a-a517-369acb1ee945}"}, "branch": {"name": "default-model-khancyr"}}, "comment_count": 33, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-18T13:47:38.097576+00:00", "author": {"display_name": "pierre kancir", "uuid": "{9a97d859-5959-4a68-af43-bdcceee662f0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D"}, "html": {"href": "https://bitbucket.org/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7e77466a3ea95f7e0b79b1c06a2d4e65d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-3.png"}}, "nickname": "pkancir", "type": "user", "account_id": "557058:be5780af-c696-491c-bf8f-4ffe804dc642"}, "merge_commit": {"hash": "e2a94d262595", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e2a94d262595.json"}, "html": {"href": "#!/osrf/gazebo/commits/e2a94d262595"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "When a gui test would timeout with qt4, it used to leave a blank xml file behind. Now it appears in qt5 that it writes xml incrementally, but it can be invalid if the test has a timeout before it finishes. For example, here's an xml file I got by dumping the contents of the xml file in the middle of a run:\r\n\r\n~~~\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<TestCase name=\"IntrospectionCurveHandler_TEST\">\r\n<Environment>\r\n    <QtVersion>5.5.1</QtVersion>\r\n    <QtBuild>Qt 5.5.1 (x86_64&#x002D;little_endian&#x002D;lp64 shared (dynamic) release build; by GCC 5.4.0 20160609)</QtBuild>\r\n    <QTestVersion>5.5.1</QTestVersion>\r\n</Environment>\r\n<TestFunction name=\"initTestCase\">\r\n<Incident type=\"pass\" file=\"\" line=\"0\" />\r\n    <Duration msecs=\"0.331723\"/>\r\n</TestFunction>\r\n<TestFunction name=\"AddRemoveCurve\">\r\n~~~\r\n\r\nThe check_test_ran script is supposed to write a valid junit file if none is detected, but when given invalid xml, the script currently will overwrite it with a blank file. (This happened recently with a [gui test failure](http://build.osrfoundation.org/view/BuildCopTests/job/gazebo-ci-gazebo8-homebrew-amd64/25/testReport/junit/(root)/UNIT_IntrospectionCurveHandler_TEST/test_ran/). It failed once and passed once, but the flaky test detector couldn't handle a blank junit file, so it marked the whole thing as a failure).\r\n\r\nThis PR updates check_test_ran.py to check for errors when running xsltproc to convert QTest xml to junit and updates the failure message accordingly. This should improve flaky test detection for GUI tests.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2677/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:8a7818c4f51e%0D82291c85b38f?from_pullrequest_id=2677"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2677/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2677.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2677/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2677/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2677"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2677/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8a7818c4f51e%0D82291c85b38f?from_pullrequest_id=2677"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2677/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2677/statuses_page=1.json"}}, "title": "Catch xml parsing errors in check_test_ran.py", "close_source_branch": true, "type": "pullrequest", "id": 2677, "destination": {"commit": {"hash": "82291c85b38f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/82291c85b38f.json"}, "html": {"href": "#!/osrf/gazebo/commits/82291c85b38f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2017-04-07T21:23:19.529449+00:00", "summary": {"raw": "When a gui test would timeout with qt4, it used to leave a blank xml file behind. Now it appears in qt5 that it writes xml incrementally, but it can be invalid if the test has a timeout before it finishes. For example, here's an xml file I got by dumping the contents of the xml file in the middle of a run:\r\n\r\n~~~\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<TestCase name=\"IntrospectionCurveHandler_TEST\">\r\n<Environment>\r\n    <QtVersion>5.5.1</QtVersion>\r\n    <QtBuild>Qt 5.5.1 (x86_64&#x002D;little_endian&#x002D;lp64 shared (dynamic) release build; by GCC 5.4.0 20160609)</QtBuild>\r\n    <QTestVersion>5.5.1</QTestVersion>\r\n</Environment>\r\n<TestFunction name=\"initTestCase\">\r\n<Incident type=\"pass\" file=\"\" line=\"0\" />\r\n    <Duration msecs=\"0.331723\"/>\r\n</TestFunction>\r\n<TestFunction name=\"AddRemoveCurve\">\r\n~~~\r\n\r\nThe check_test_ran script is supposed to write a valid junit file if none is detected, but when given invalid xml, the script currently will overwrite it with a blank file. (This happened recently with a [gui test failure](http://build.osrfoundation.org/view/BuildCopTests/job/gazebo-ci-gazebo8-homebrew-amd64/25/testReport/junit/(root)/UNIT_IntrospectionCurveHandler_TEST/test_ran/). It failed once and passed once, but the flaky test detector couldn't handle a blank junit file, so it marked the whole thing as a failure).\r\n\r\nThis PR updates check_test_ran.py to check for errors when running xsltproc to convert QTest xml to junit and updates the failure message accordingly. This should improve flaky test detection for GUI tests.", "markup": "markdown", "html": "<p>When a gui test would timeout with qt4, it used to leave a blank xml file behind. Now it appears in qt5 that it writes xml incrementally, but it can be invalid if the test has a timeout before it finishes. For example, here's an xml file I got by dumping the contents of the xml file in the middle of a run:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;TestCase</span> <span class=\"na\">name=</span><span class=\"s\">&quot;IntrospectionCurveHandler_TEST&quot;</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;Environment&gt;</span>\n    <span class=\"nt\">&lt;QtVersion&gt;</span>5.5.1<span class=\"nt\">&lt;/QtVersion&gt;</span>\n    <span class=\"nt\">&lt;QtBuild&gt;</span>Qt 5.5.1 (x86_64<span class=\"ni\">&amp;#x002D;</span>little_endian<span class=\"ni\">&amp;#x002D;</span>lp64 shared (dynamic) release build; by GCC 5.4.0 20160609)<span class=\"nt\">&lt;/QtBuild&gt;</span>\n    <span class=\"nt\">&lt;QTestVersion&gt;</span>5.5.1<span class=\"nt\">&lt;/QTestVersion&gt;</span>\n<span class=\"nt\">&lt;/Environment&gt;</span>\n<span class=\"nt\">&lt;TestFunction</span> <span class=\"na\">name=</span><span class=\"s\">&quot;initTestCase&quot;</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;Incident</span> <span class=\"na\">type=</span><span class=\"s\">&quot;pass&quot;</span> <span class=\"na\">file=</span><span class=\"s\">&quot;&quot;</span> <span class=\"na\">line=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;Duration</span> <span class=\"na\">msecs=</span><span class=\"s\">&quot;0.331723&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/TestFunction&gt;</span>\n<span class=\"nt\">&lt;TestFunction</span> <span class=\"na\">name=</span><span class=\"s\">&quot;AddRemoveCurve&quot;</span><span class=\"nt\">&gt;</span>\n</pre></div>\n\n\n<p>The check_test_ran script is supposed to write a valid junit file if none is detected, but when given invalid xml, the script currently will overwrite it with a blank file. (This happened recently with a <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/BuildCopTests/job/gazebo-ci-gazebo8-homebrew-amd64/25/testReport/junit/(root)/UNIT_IntrospectionCurveHandler_TEST/test_ran/\" rel=\"nofollow\">gui test failure</a>. It failed once and passed once, but the flaky test detector couldn't handle a blank junit file, so it marked the whole thing as a failure).</p>\n<p>This PR updates check_test_ran.py to check for errors when running xsltproc to convert QTest xml to junit and updates the failure message accordingly. This should improve flaky test detection for GUI tests.</p>", "type": "rendered"}, "source": {"commit": {"hash": "166244ac763c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/166244ac763c.json"}, "html": {"href": "#!/osrf/gazebo/commits/166244ac763c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "qtest5_xml_parsing"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-10T14:54:43.905999+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "8a7818c4f51e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8a7818c4f51e.json"}, "html": {"href": "#!/osrf/gazebo/commits/8a7818c4f51e"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Added support for pincushion distortion to the lens distortion model.\r\n\r\nThis required several tweaks to the distortion map generation, including using the 8 nearest neighbor pixels for interpolating the map.\r\n\r\nI added a basic unit test for the distortion model, and updated the camera integration test.\r\n\r\nHere is an example of pincushion distortion on the in-world camera preview:\r\n\r\n![Screenshot from 2017-04-12 11-29-45.png](data/bitbucket.org/repo/jgXqbo/images/1276683884-Screenshot_from_2017-04-12_11-29-45.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2678/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:f4974f951404%0D731b32893db6?from_pullrequest_id=2678"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2678/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2678.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2678/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2678/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2678"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2678/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:f4974f951404%0D731b32893db6?from_pullrequest_id=2678"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2678/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2678/statuses_page=1.json"}}, "title": "Pincushion Distortion Model", "close_source_branch": false, "type": "pullrequest", "id": 2678, "destination": {"commit": {"hash": "731b32893db6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/731b32893db6.json"}, "html": {"href": "#!/osrf/gazebo/commits/731b32893db6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-04-12T16:10:33.137784+00:00", "summary": {"raw": "Added support for pincushion distortion to the lens distortion model.\r\n\r\nThis required several tweaks to the distortion map generation, including using the 8 nearest neighbor pixels for interpolating the map.\r\n\r\nI added a basic unit test for the distortion model, and updated the camera integration test.\r\n\r\nHere is an example of pincushion distortion on the in-world camera preview:\r\n\r\n![Screenshot from 2017-04-12 11-29-45.png](data/bitbucket.org/repo/jgXqbo/images/1276683884-Screenshot_from_2017-04-12_11-29-45.png)", "markup": "markdown", "html": "<p>Added support for pincushion distortion to the lens distortion model.</p>\n<p>This required several tweaks to the distortion map generation, including using the 8 nearest neighbor pixels for interpolating the map.</p>\n<p>I added a basic unit test for the distortion model, and updated the camera integration test.</p>\n<p>Here is an example of pincushion distortion on the in-world camera preview:</p>\n<p><img alt=\"Screenshot from 2017-04-12 11-29-45.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1276683884-Screenshot_from_2017-04-12_11-29-45.png\" /></p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "pincushion_distortion"}}, "comment_count": 59, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-05T00:23:25.290421+00:00", "author": {"display_name": "Adam Allevato", "uuid": "{c965e728-d481-47a0-9606-7b6a37c81756}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc965e728-d481-47a0-9606-7b6a37c81756%7D"}, "html": {"href": "https://bitbucket.org/%7Bc965e728-d481-47a0-9606-7b6a37c81756%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9a693453-196b-4239-a73f-1c1196479e6f/df6990f4-3430-4676-bc69-cbe57fc2faf6/128"}}, "nickname": "Kukanani", "type": "user", "account_id": "557058:9a693453-196b-4239-a73f-1c1196479e6f"}, "merge_commit": {"hash": "f4974f951404", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f4974f951404.json"}, "html": {"href": "#!/osrf/gazebo/commits/f4974f951404"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "* Parameterize the wind based force approximation scalar.\r\n\r\n    Default to zero since this is an approximation based on no real value, but if this parameter is set to 1.0 it will provide backwards compatibility.\r\n\r\n* Add bounds check\r\n\r\n* Remove cross coupling of horizontal and vertical wind direction\r\n\r\n* Use Wind inside LiftDrag plugin.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2679/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:a91d4a88058e%0Df60f2f08dadc?from_pullrequest_id=2679"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2679/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2679.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2679/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2679/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2679"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2679/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:a91d4a88058e%0Df60f2f08dadc?from_pullrequest_id=2679"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2679/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2679/statuses_page=1.json"}}, "title": "Ardupilot with wind", "close_source_branch": true, "type": "pullrequest", "id": 2679, "destination": {"commit": {"hash": "f60f2f08dadc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f60f2f08dadc.json"}, "html": {"href": "#!/osrf/gazebo/commits/f60f2f08dadc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ardupilot"}}, "created_on": "2017-04-15T01:22:23.262777+00:00", "summary": {"raw": "* Parameterize the wind based force approximation scalar.\r\n\r\n    Default to zero since this is an approximation based on no real value, but if this parameter is set to 1.0 it will provide backwards compatibility.\r\n\r\n* Add bounds check\r\n\r\n* Remove cross coupling of horizontal and vertical wind direction\r\n\r\n* Use Wind inside LiftDrag plugin.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Parameterize the wind based force approximation scalar.</p>\n<p>Default to zero since this is an approximation based on no real value, but if this parameter is set to 1.0 it will provide backwards compatibility.</p>\n</li>\n<li>\n<p>Add bounds check</p>\n</li>\n<li>\n<p>Remove cross coupling of horizontal and vertical wind direction</p>\n</li>\n<li>\n<p>Use Wind inside LiftDrag plugin.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "62eb2f359a8a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/62eb2f359a8a.json"}, "html": {"href": "#!/osrf/gazebo/commits/62eb2f359a8a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ardupilot_with_wind"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-17T19:06:33.121317+00:00", "author": {"display_name": "Tully Foote", "uuid": "{3d90dbd4-b845-466f-b5bd-068566f7ff50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D"}, "html": {"href": "https://bitbucket.org/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bc6528f8fe1fef6b6ecc7312ee0cf04d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTF-2.png"}}, "nickname": "Tully Foote", "type": "user", "account_id": "557058:e2bf789f-2138-4a4e-ba39-3d618078e20b"}, "merge_commit": {"hash": "a91d4a88058e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a91d4a88058e.json"}, "html": {"href": "#!/osrf/gazebo/commits/a91d4a88058e"}}}, "closed_by": {"display_name": "Tully Foote", "uuid": "{3d90dbd4-b845-466f-b5bd-068566f7ff50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D"}, "html": {"href": "https://bitbucket.org/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bc6528f8fe1fef6b6ecc7312ee0cf04d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTF-2.png"}}, "nickname": "Tully Foote", "type": "user", "account_id": "557058:e2bf789f-2138-4a4e-ba39-3d618078e20b"}}, {"description": "Allow CMake configuration for Visual Studio greater or equal to 2013", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2680/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:ebef2bfd603d%0Db09f8d359477?from_pullrequest_id=2680"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2680/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2680.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2680/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2680/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2680"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2680/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:ebef2bfd603d%0Db09f8d359477?from_pullrequest_id=2680"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2680/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2680/statuses_page=1.json"}}, "title": "Allow CMake configuration for Visual Studio greater or equal to 2013", "close_source_branch": false, "type": "pullrequest", "id": 2680, "destination": {"commit": {"hash": "b09f8d359477", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b09f8d359477.json"}, "html": {"href": "#!/osrf/gazebo/commits/b09f8d359477"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-15T14:26:06.186176+00:00", "summary": {"raw": "Allow CMake configuration for Visual Studio greater or equal to 2013", "markup": "markdown", "html": "<p>Allow CMake configuration for Visual Studio greater or equal to 2013</p>", "type": "rendered"}, "source": {"commit": {"hash": "653333c786bc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-3/commit/653333c786bc"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-3/commits/653333c786bc"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-3"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-3"}, "avatar": {"href": "data/bytebucket.org/ravatar/{016db0ec-1482-442f-96cb-f9b532395925}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-3", "full_name": "traversaro/gazebo-3", "uuid": "{016db0ec-1482-442f-96cb-f9b532395925}"}, "branch": {"name": "traversaro/allow-cmake-configuration-for-visual-stu-1492266337244"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-22T18:59:59.576764+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "ebef2bfd603d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ebef2bfd603d.json"}, "html": {"href": "#!/osrf/gazebo/commits/ebef2bfd603d"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Find CURL using standard CMake find_package", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2681/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d50d5cffcb75%0D9638498602af?from_pullrequest_id=2681"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2681/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2681.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2681/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2681/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2681"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2681/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d50d5cffcb75%0D9638498602af?from_pullrequest_id=2681"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2681/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2681/statuses_page=1.json"}}, "title": "Find CURL using standard CMake find_package", "close_source_branch": false, "type": "pullrequest", "id": 2681, "destination": {"commit": {"hash": "9638498602af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9638498602af.json"}, "html": {"href": "#!/osrf/gazebo/commits/9638498602af"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-15T15:01:32.526627+00:00", "summary": {"raw": "Find CURL using standard CMake find_package", "markup": "markdown", "html": "<p>Find CURL using standard CMake find_package</p>", "type": "rendered"}, "source": {"commit": {"hash": "58152297f7b9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-4/commit/58152297f7b9"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-4/commits/58152297f7b9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-4"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-4"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f74a074c-12c6-4b82-845a-b5489948b5d1}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-4", "full_name": "traversaro/gazebo-4", "uuid": "{f74a074c-12c6-4b82-845a-b5489948b5d1}"}, "branch": {"name": "traversaro/find-curl-using-standard-cmake-find_pack-1492268472331"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-21T06:44:23.215711+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "d50d5cffcb75", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d50d5cffcb75.json"}, "html": {"href": "#!/osrf/gazebo/commits/d50d5cffcb75"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Fix hardcoded binary location in CMake\n\nThis fix is useful for multi-configuration generators in CMake (such as Visual Studio)\nfor which the binary location depends on the configuration .\n\nGazebo port of this ign-msgs PR : https://bitbucket.org/ignitionrobotics/ign-msgs/pull-requests/19/fix-hardcoded-binary-location-in-cmake/diff .", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2682/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:aa22abbfb676%0Dd50d5cffcb75?from_pullrequest_id=2682"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2682/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2682.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2682/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2682/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2682"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2682/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:aa22abbfb676%0Dd50d5cffcb75?from_pullrequest_id=2682"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2682/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2682/statuses_page=1.json"}}, "title": "Fix hardcoded binary location in CMake", "close_source_branch": false, "type": "pullrequest", "id": 2682, "destination": {"commit": {"hash": "d50d5cffcb75", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d50d5cffcb75.json"}, "html": {"href": "#!/osrf/gazebo/commits/d50d5cffcb75"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-16T08:13:47.852468+00:00", "summary": {"raw": "Fix hardcoded binary location in CMake\n\nThis fix is useful for multi-configuration generators in CMake (such as Visual Studio)\nfor which the binary location depends on the configuration .\n\nGazebo port of this ign-msgs PR : https://bitbucket.org/ignitionrobotics/ign-msgs/pull-requests/19/fix-hardcoded-binary-location-in-cmake/diff .", "markup": "markdown", "html": "<p>Fix hardcoded binary location in CMake</p>\n<p>This fix is useful for multi-configuration generators in CMake (such as Visual Studio)\nfor which the binary location depends on the configuration .</p>\n<p>Gazebo port of this ign-msgs PR : <a href=\"https://bitbucket.org/ignitionrobotics/ign-msgs/pull-requests/19/fix-hardcoded-binary-location-in-cmake/diff\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/ignitionrobotics/ign-msgs/pull-requests/19/fix-hardcoded-binary-location-in-cmake/diff</a> .</p>", "type": "rendered"}, "source": {"commit": {"hash": "ee316d847478", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-5/commit/ee316d847478"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-5/commits/ee316d847478"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-5"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-5"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8632d5ec-a363-4377-b188-6be58c0602a9}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-5", "full_name": "traversaro/gazebo-5", "uuid": "{8632d5ec-a363-4377-b188-6be58c0602a9}"}, "branch": {"name": "traversaro/fix-hardcoded-binary-location-in-cmake--1492330394792"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-21T15:23:02.825837+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "aa22abbfb676", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/aa22abbfb676.json"}, "html": {"href": "#!/osrf/gazebo/commits/aa22abbfb676"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Do not redefine snprintf in Visual Studio 2015 or greater\n\nsnprintf is implemented in Visual Studio since VS 2015 . \nSee https://msdn.microsoft.com/en-us/library/bb531344.aspx for more info.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2683/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:fb3d2ab4c53d%0Da9a497272af2?from_pullrequest_id=2683"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2683/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2683.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2683/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2683/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2683"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2683/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:fb3d2ab4c53d%0Da9a497272af2?from_pullrequest_id=2683"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2683/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2683/statuses_page=1.json"}}, "title": "Do not redefine snprintf in Visual Studio 2015 or greater", "close_source_branch": false, "type": "pullrequest", "id": 2683, "destination": {"commit": {"hash": "a9a497272af2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a9a497272af2.json"}, "html": {"href": "#!/osrf/gazebo/commits/a9a497272af2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-16T08:25:01.165234+00:00", "summary": {"raw": "Do not redefine snprintf in Visual Studio 2015 or greater\n\nsnprintf is implemented in Visual Studio since VS 2015 . \nSee https://msdn.microsoft.com/en-us/library/bb531344.aspx for more info.", "markup": "markdown", "html": "<p>Do not redefine snprintf in Visual Studio 2015 or greater</p>\n<p>snprintf is implemented in Visual Studio since VS 2015 . \nSee <a href=\"https://msdn.microsoft.com/en-us/library/bb531344.aspx\" rel=\"nofollow\" class=\"ap-connect-link\">https://msdn.microsoft.com/en-us/library/bb531344.aspx</a> for more info.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9eff46dab13a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-6/commit/9eff46dab13a"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-6/commits/9eff46dab13a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-6"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-6"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f4e43142-1b49-4b8c-b5c0-72de83f5112a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-6", "full_name": "traversaro/gazebo-6", "uuid": "{f4e43142-1b49-4b8c-b5c0-72de83f5112a}"}, "branch": {"name": "traversaro/do-not-redefine-snprintf-in-visual-studi-1492331071814"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-18T18:07:02.500161+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "fb3d2ab4c53d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fb3d2ab4c53d.json"}, "html": {"href": "#!/osrf/gazebo/commits/fb3d2ab4c53d"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Do not redefine struct timespec in Visual Studio 2015 or greater \n\nstruct timespec has been defined in Visual Studio since VS2015, see https://msdn.microsoft.com/en-us/library/bb531344.aspx for more info.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2684/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:a9a497272af2%0D4e250e782cf0?from_pullrequest_id=2684"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2684/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2684.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2684/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2684/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2684"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2684/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:a9a497272af2%0D4e250e782cf0?from_pullrequest_id=2684"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2684/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2684/statuses_page=1.json"}}, "title": "Do not redefine struct timespec in Visual Studio 2015 or greater", "close_source_branch": false, "type": "pullrequest", "id": 2684, "destination": {"commit": {"hash": "4e250e782cf0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4e250e782cf0.json"}, "html": {"href": "#!/osrf/gazebo/commits/4e250e782cf0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-16T08:33:32.708965+00:00", "summary": {"raw": "Do not redefine struct timespec in Visual Studio 2015 or greater \n\nstruct timespec has been defined in Visual Studio since VS2015, see https://msdn.microsoft.com/en-us/library/bb531344.aspx for more info.", "markup": "markdown", "html": "<p>Do not redefine struct timespec in Visual Studio 2015 or greater </p>\n<p>struct timespec has been defined in Visual Studio since VS2015, see <a href=\"https://msdn.microsoft.com/en-us/library/bb531344.aspx\" rel=\"nofollow\" class=\"ap-connect-link\">https://msdn.microsoft.com/en-us/library/bb531344.aspx</a> for more info.</p>", "type": "rendered"}, "source": {"commit": {"hash": "599a22d34d29", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-7/commit/599a22d34d29"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-7/commits/599a22d34d29"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-7"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-7"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c4f996a1-0433-42ef-a3ae-e095089b3aa7}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-7", "full_name": "traversaro/gazebo-7", "uuid": "{c4f996a1-0433-42ef-a3ae-e095089b3aa7}"}, "branch": {"name": "traversaro/do-not-redefine-struct-timespec-in-visua-1492331582166"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-18T18:05:29.738182+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "a9a497272af2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a9a497272af2.json"}, "html": {"href": "#!/osrf/gazebo/commits/a9a497272af2"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Do not redefine copysignf and other functions in VS 2015 or greater \n\nThis functions are defined in Visual Studio since VS 2015, see https://msdn.microsoft.com/en-us/library/bb531344.aspx .", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2685/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:9638498602af%0Dfb3d2ab4c53d?from_pullrequest_id=2685"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2685/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2685.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2685/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2685/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2685"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2685/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:9638498602af%0Dfb3d2ab4c53d?from_pullrequest_id=2685"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2685/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2685/statuses_page=1.json"}}, "title": "Do not redefine copysignf and other functions in VS 2015 or greater", "close_source_branch": false, "type": "pullrequest", "id": 2685, "destination": {"commit": {"hash": "fb3d2ab4c53d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fb3d2ab4c53d.json"}, "html": {"href": "#!/osrf/gazebo/commits/fb3d2ab4c53d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-16T08:37:22.532702+00:00", "summary": {"raw": "Do not redefine copysignf and other functions in VS 2015 or greater \n\nThis functions are defined in Visual Studio since VS 2015, see https://msdn.microsoft.com/en-us/library/bb531344.aspx .", "markup": "markdown", "html": "<p>Do not redefine copysignf and other functions in VS 2015 or greater </p>\n<p>This functions are defined in Visual Studio since VS 2015, see <a href=\"https://msdn.microsoft.com/en-us/library/bb531344.aspx\" rel=\"nofollow\" class=\"ap-connect-link\">https://msdn.microsoft.com/en-us/library/bb531344.aspx</a> .</p>", "type": "rendered"}, "source": {"commit": {"hash": "c6a8d5b343e0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-8/commit/c6a8d5b343e0"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-8/commits/c6a8d5b343e0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-8"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-8"}, "avatar": {"href": "data/bytebucket.org/ravatar/{20e3026d-1dd0-4141-83a6-b2c49ec9d067}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-8", "full_name": "traversaro/gazebo-8", "uuid": "{20e3026d-1dd0-4141-83a6-b2c49ec9d067}"}, "branch": {"name": "traversaro/do-not-redefine-copysignf-and-other-func-1492331812646"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-18T18:11:47.795543+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "9638498602af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9638498602af.json"}, "html": {"href": "#!/osrf/gazebo/commits/9638498602af"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "As per comment by @peci1 in pull request #2622, added deprecation warning prints", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2686/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:57d297c1dd4a%0D5b0cda9e5471?from_pullrequest_id=2686"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2686/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2686.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2686/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2686/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2686"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2686/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:57d297c1dd4a%0D5b0cda9e5471?from_pullrequest_id=2686"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2686/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2686/statuses_page=1.json"}}, "title": "Added deprecation warning prints extending pull request #2622", "close_source_branch": false, "type": "pullrequest", "id": 2686, "destination": {"commit": {"hash": "5b0cda9e5471", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5b0cda9e5471.json"}, "html": {"href": "#!/osrf/gazebo/commits/5b0cda9e5471"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-17T11:43:02.062339+00:00", "summary": {"raw": "As per comment by @peci1 in pull request #2622, added deprecation warning prints", "markup": "markdown", "html": "<p>As per comment by @peci1 in <a href=\"#!/osrf/gazebo/pull-requests/2622/deprecate-functions-to-set-linear-angular\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2622</a>, added deprecation warning prints</p>", "type": "rendered"}, "source": {"commit": {"hash": "b96f5e0265f1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/b96f5e0265f1"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/b96f5e0265f1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "set_linear_angular_deprecation_warnings"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-24T23:34:42.330171+00:00", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "merge_commit": {"hash": "57d297c1dd4a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57d297c1dd4a.json"}, "html": {"href": "#!/osrf/gazebo/commits/57d297c1dd4a"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "* Add bounds check of optimization.\r\n\r\n* Remove cross coupling of horizontal and vertical wind direction\r\n\r\n* Parameterize the wind based force approximation scalar.\r\n\r\n    Default to zero since this is an approximation based on no real value, but if this parameter is set to 1.0 it will provide backwards compatibility.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2687/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:a8180a6d6d46%0D4e250e782cf0?from_pullrequest_id=2687"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2687/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2687.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2687/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2687/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2687"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2687/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:a8180a6d6d46%0D4e250e782cf0?from_pullrequest_id=2687"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2687/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2687/statuses_page=1.json"}}, "title": "Wind patch", "close_source_branch": false, "type": "pullrequest", "id": 2687, "destination": {"commit": {"hash": "4e250e782cf0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4e250e782cf0.json"}, "html": {"href": "#!/osrf/gazebo/commits/4e250e782cf0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-17T18:52:54.916322+00:00", "summary": {"raw": "* Add bounds check of optimization.\r\n\r\n* Remove cross coupling of horizontal and vertical wind direction\r\n\r\n* Parameterize the wind based force approximation scalar.\r\n\r\n    Default to zero since this is an approximation based on no real value, but if this parameter is set to 1.0 it will provide backwards compatibility.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Add bounds check of optimization.</p>\n</li>\n<li>\n<p>Remove cross coupling of horizontal and vertical wind direction</p>\n</li>\n<li>\n<p>Parameterize the wind based force approximation scalar.</p>\n<p>Default to zero since this is an approximation based on no real value, but if this parameter is set to 1.0 it will provide backwards compatibility.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "a8180a6d6d46", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a8180a6d6d46.json"}, "html": {"href": "#!/osrf/gazebo/commits/a8180a6d6d46"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "wind_patch"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "This graft didn't work right. I'll try again.", "updated_on": "2017-04-17T19:29:00.516353+00:00", "author": {"display_name": "Tully Foote", "uuid": "{3d90dbd4-b845-466f-b5bd-068566f7ff50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D"}, "html": {"href": "https://bitbucket.org/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bc6528f8fe1fef6b6ecc7312ee0cf04d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTF-2.png"}}, "nickname": "Tully Foote", "type": "user", "account_id": "557058:e2bf789f-2138-4a4e-ba39-3d618078e20b"}, "merge_commit": null, "closed_by": {"display_name": "Tully Foote", "uuid": "{3d90dbd4-b845-466f-b5bd-068566f7ff50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D"}, "html": {"href": "https://bitbucket.org/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bc6528f8fe1fef6b6ecc7312ee0cf04d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTF-2.png"}}, "nickname": "Tully Foote", "type": "user", "account_id": "557058:e2bf789f-2138-4a4e-ba39-3d618078e20b"}}, {"description": "issue #2049\r\n\r\norbit point should now be on the heightmap and not the occluded entity. \r\n\r\njenkins [homebrew](http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1044/) - ok", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2688/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:edc64bd8e855%0D25c0c744761e?from_pullrequest_id=2688"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2688/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2688.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2688/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2688/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2688"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2688/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:edc64bd8e855%0D25c0c744761e?from_pullrequest_id=2688"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2688/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2688/statuses_page=1.json"}}, "title": "Fix orbiting view around heightmap", "close_source_branch": true, "type": "pullrequest", "id": 2688, "destination": {"commit": {"hash": "25c0c744761e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/25c0c744761e.json"}, "html": {"href": "#!/osrf/gazebo/commits/25c0c744761e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-04-17T21:45:40.453550+00:00", "summary": {"raw": "issue #2049\r\n\r\norbit point should now be on the heightmap and not the occluded entity. \r\n\r\njenkins [homebrew](http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1044/) - ok", "markup": "markdown", "html": "<p>issue <a href=\"#!/osrf/gazebo/issues/2049/orbit-target-passes-through-heightmaps\" rel=\"nofollow\" title=\"Orbit target passes through heightmaps\" class=\"ap-connect-link\"><s>#2049</s></a></p>\n<p>orbit point should now be on the heightmap and not the occluded entity. </p>\n<p>jenkins <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1044/\" rel=\"nofollow\">homebrew</a> - ok</p>", "type": "rendered"}, "source": {"commit": {"hash": "888898f90170", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/888898f90170.json"}, "html": {"href": "#!/osrf/gazebo/commits/888898f90170"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_2049_7"}}, "comment_count": 14, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-08T00:11:11.097300+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "edc64bd8e855", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/edc64bd8e855.json"}, "html": {"href": "#!/osrf/gazebo/commits/edc64bd8e855"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "I went through a phase of writing integration tests that start with an empty world and then spawn all the models programmatically. This keeps the model information in a single place (the c++ test code), but it makes it much harder to open a test world interactively in gazebo. So I've created two world files using erb templates and converted one test case each from `INTEGRATION_physics_collision` and `INTEGRATION_physics_friction`.\r\n\r\nI will follow this PR with some additions to the test worlds that illustrate a portion of #2068 and fix it.\r\n\r\nHere's an animation of the friction test world. This is for testing asymmetric friction values with the pyramid friction model:\r\n\r\n![friction_dir_test_small.gif](data/bitbucket.org/repo/jgXqbo/images/2692916182-friction_dir_test_small.gif)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2689/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:8a11f7f5192d%0Df4974f951404?from_pullrequest_id=2689"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2689/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2689.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2689/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2689/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2689"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2689/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8a11f7f5192d%0Df4974f951404?from_pullrequest_id=2689"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2689/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2689/statuses_page=1.json"}}, "title": "Refactor tests to use models from world file instead of dynamically spawning models", "close_source_branch": true, "type": "pullrequest", "id": 2689, "destination": {"commit": {"hash": "f4974f951404", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f4974f951404.json"}, "html": {"href": "#!/osrf/gazebo/commits/f4974f951404"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-04-21T09:52:49.321107+00:00", "summary": {"raw": "I went through a phase of writing integration tests that start with an empty world and then spawn all the models programmatically. This keeps the model information in a single place (the c++ test code), but it makes it much harder to open a test world interactively in gazebo. So I've created two world files using erb templates and converted one test case each from `INTEGRATION_physics_collision` and `INTEGRATION_physics_friction`.\r\n\r\nI will follow this PR with some additions to the test worlds that illustrate a portion of #2068 and fix it.\r\n\r\nHere's an animation of the friction test world. This is for testing asymmetric friction values with the pyramid friction model:\r\n\r\n![friction_dir_test_small.gif](data/bitbucket.org/repo/jgXqbo/images/2692916182-friction_dir_test_small.gif)", "markup": "markdown", "html": "<p>I went through a phase of writing integration tests that start with an empty world and then spawn all the models programmatically. This keeps the model information in a single place (the c++ test code), but it makes it much harder to open a test world interactively in gazebo. So I've created two world files using erb templates and converted one test case each from <code>INTEGRATION_physics_collision</code> and <code>INTEGRATION_physics_friction</code>.</p>\n<p>I will follow this PR with some additions to the test worlds that illustrate a portion of <a href=\"#!/osrf/gazebo/issues/2068/directional-friction-still-broken\" rel=\"nofollow\" title=\"Directional friction still broken.\" class=\"ap-connect-link\"><s>#2068</s></a> and fix it.</p>\n<p>Here's an animation of the friction test world. This is for testing asymmetric friction values with the pyramid friction model:</p>\n<p><img alt=\"friction_dir_test_small.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/2692916182-friction_dir_test_small.gif\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "ab6b31018253", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ab6b31018253.json"}, "html": {"href": "#!/osrf/gazebo/commits/ab6b31018253"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "test_worlds"}}, "comment_count": 23, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-03T00:09:09.867730+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "8a11f7f5192d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8a11f7f5192d.json"}, "html": {"href": "#!/osrf/gazebo/commits/8a11f7f5192d"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "@tfoote and I resolved conflicts with gazebo8 in 2ec6ecb and also tried to make sure the Windows compatibility improvements are retained. I also fixed some whitespace and minor style issues in f1c07dc. We'll let CI run to make sure things are ok, but I'll wait for @tfoote to merge.\r\n\r\nUpdate: I removed the line from CMakeLists.txt that sets `ENABLE_TESTS_COMPILATION` in d4b83eb, since that causes a hard cmake failure now and tests are not built by default anyway. Use `make tests` now to build tests before running `make test`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2690/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:f94606f5549c%0Da91d4a88058e?from_pullrequest_id=2690"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2690/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2690.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2690/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2690/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2690"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2690/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:f94606f5549c%0Da91d4a88058e?from_pullrequest_id=2690"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2690/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2690/statuses_page=1.json"}}, "title": "Merge ardupilot with gazebo8 (update to pull request #2450)", "close_source_branch": true, "type": "pullrequest", "id": 2690, "destination": {"commit": {"hash": "a91d4a88058e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a91d4a88058e.json"}, "html": {"href": "#!/osrf/gazebo/commits/a91d4a88058e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ardupilot"}}, "created_on": "2017-04-21T20:48:53.699348+00:00", "summary": {"raw": "@tfoote and I resolved conflicts with gazebo8 in 2ec6ecb and also tried to make sure the Windows compatibility improvements are retained. I also fixed some whitespace and minor style issues in f1c07dc. We'll let CI run to make sure things are ok, but I'll wait for @tfoote to merge.\r\n\r\nUpdate: I removed the line from CMakeLists.txt that sets `ENABLE_TESTS_COMPILATION` in d4b83eb, since that causes a hard cmake failure now and tests are not built by default anyway. Use `make tests` now to build tests before running `make test`.", "markup": "markdown", "html": "<p>@tfoote and I resolved conflicts with gazebo8 in <a href=\"#!/osrf/gazebo/commits/2ec6ecb\" rel=\"nofollow\" class=\"ap-connect-link\">2ec6ecb</a> and also tried to make sure the Windows compatibility improvements are retained. I also fixed some whitespace and minor style issues in <a href=\"#!/osrf/gazebo/commits/f1c07dc\" rel=\"nofollow\" class=\"ap-connect-link\">f1c07dc</a>. We'll let CI run to make sure things are ok, but I'll wait for @tfoote to merge.</p>\n<p>Update: I removed the line from CMakeLists.txt that sets <code>ENABLE_TESTS_COMPILATION</code> in <a href=\"#!/osrf/gazebo/commits/d4b83eb\" rel=\"nofollow\" class=\"ap-connect-link\">d4b83eb</a>, since that causes a hard cmake failure now and tests are not built by default anyway. Use <code>make tests</code> now to build tests before running <code>make test</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1df2ecb57e53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1df2ecb57e53.json"}, "html": {"href": "#!/osrf/gazebo/commits/1df2ecb57e53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ardupilot_merge_gazebo8"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-06T09:30:37.789134+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "f94606f5549c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f94606f5549c.json"}, "html": {"href": "#!/osrf/gazebo/commits/f94606f5549c"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This changes the behavior of the Wind Plugin to parameterize the non-realisitic mass based force to default to zero. If the mass based force is approximately zero it skips processing. \r\n\r\nThere was also a bug where the vertical wind speed was cross coupled with the horizontal wind speed. That has been fixed, and the vertical wind speed has it's own parameters and noise support.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2691/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:43aba6951708%0D36a806d7c8f6?from_pullrequest_id=2691"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2691/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2691.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2691/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2691/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2691"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2691/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:43aba6951708%0D36a806d7c8f6?from_pullrequest_id=2691"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2691/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2691/statuses_page=1.json"}}, "title": "Update Wind Plugin to support being used by Lift Drag Plugin", "close_source_branch": true, "type": "pullrequest", "id": 2691, "destination": {"commit": {"hash": "36a806d7c8f6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36a806d7c8f6.json"}, "html": {"href": "#!/osrf/gazebo/commits/36a806d7c8f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-21T21:26:33.912956+00:00", "summary": {"raw": "This changes the behavior of the Wind Plugin to parameterize the non-realisitic mass based force to default to zero. If the mass based force is approximately zero it skips processing. \r\n\r\nThere was also a bug where the vertical wind speed was cross coupled with the horizontal wind speed. That has been fixed, and the vertical wind speed has it's own parameters and noise support.", "markup": "markdown", "html": "<p>This changes the behavior of the Wind Plugin to parameterize the non-realisitic mass based force to default to zero. If the mass based force is approximately zero it skips processing. </p>\n<p>There was also a bug where the vertical wind speed was cross coupled with the horizontal wind speed. That has been fixed, and the vertical wind speed has it's own parameters and noise support.</p>", "type": "rendered"}, "source": {"commit": {"hash": "e1f0833b3d74", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e1f0833b3d74.json"}, "html": {"href": "#!/osrf/gazebo/commits/e1f0833b3d74"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "wind_patch_8a"}}, "comment_count": 22, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-21T01:36:22.780595+00:00", "author": {"display_name": "Tully Foote", "uuid": "{3d90dbd4-b845-466f-b5bd-068566f7ff50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D"}, "html": {"href": "https://bitbucket.org/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bc6528f8fe1fef6b6ecc7312ee0cf04d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTF-2.png"}}, "nickname": "Tully Foote", "type": "user", "account_id": "557058:e2bf789f-2138-4a4e-ba39-3d618078e20b"}, "merge_commit": {"hash": "43aba6951708", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43aba6951708.json"}, "html": {"href": "#!/osrf/gazebo/commits/43aba6951708"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "Find OGRE in CMake also without pkg-config\n\nOgre 1.10 and the version of Ogre 1.9 shipped with vcpkg \n(see https://github.com/Microsoft/vcpkg/blob/effbdfbb91e3672e41cfc442ce0244872b1fad8c/ports/ogre/OGREConfig.cmake) are shipping with a `OGREConfig.cmake` \nthat permits to Find OGRE in CMake without the use of pkg-config. \n\nFor now, only try to find OGRE using the `OGREConfig.cmake` if the pkg-config-based search of OGRE failed. \n\nFurthermore, remove some outdated comment related to some closed Gazebo issues:\n* #!/osrf/gazebo/issues/994\n* #!/osrf/gazebo/issues/995", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2692/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:64a0ed96c32f%0D57d297c1dd4a?from_pullrequest_id=2692"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2692/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2692.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2692/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2692/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2692"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2692/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:64a0ed96c32f%0D57d297c1dd4a?from_pullrequest_id=2692"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2692/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2692/statuses_page=1.json"}}, "title": "Find OGRE in CMake also without pkg-config", "close_source_branch": false, "type": "pullrequest", "id": 2692, "destination": {"commit": {"hash": "57d297c1dd4a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57d297c1dd4a.json"}, "html": {"href": "#!/osrf/gazebo/commits/57d297c1dd4a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-22T16:19:37.086719+00:00", "summary": {"raw": "Find OGRE in CMake also without pkg-config\n\nOgre 1.10 and the version of Ogre 1.9 shipped with vcpkg \n(see https://github.com/Microsoft/vcpkg/blob/effbdfbb91e3672e41cfc442ce0244872b1fad8c/ports/ogre/OGREConfig.cmake) are shipping with a `OGREConfig.cmake` \nthat permits to Find OGRE in CMake without the use of pkg-config. \n\nFor now, only try to find OGRE using the `OGREConfig.cmake` if the pkg-config-based search of OGRE failed. \n\nFurthermore, remove some outdated comment related to some closed Gazebo issues:\n* #!/osrf/gazebo/issues/994\n* #!/osrf/gazebo/issues/995", "markup": "markdown", "html": "<p>Find OGRE in CMake also without pkg-config</p>\n<p>Ogre 1.10 and the version of Ogre 1.9 shipped with vcpkg \n(see <a href=\"https://github.com/Microsoft/vcpkg/blob/effbdfbb91e3672e41cfc442ce0244872b1fad8c/ports/ogre/OGREConfig.cmake\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/Microsoft/vcpkg/blob/effbdfbb91e3672e41cfc442ce0244872b1fad8c/ports/ogre/OGREConfig.cmake</a>) are shipping with a <code>OGREConfig.cmake</code> \nthat permits to Find OGRE in CMake without the use of pkg-config. </p>\n<p>For now, only try to find OGRE using the <code>OGREConfig.cmake</code> if the pkg-config-based search of OGRE failed. </p>\n<p>Furthermore, remove some outdated comment related to some closed Gazebo issues:\n<em> <a href=\"#!/osrf/gazebo/issues/994\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issues/994</a>\n</em> <a href=\"#!/osrf/gazebo/issues/995\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issues/995</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "9d087be5ed92", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-9/commit/9d087be5ed92"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-9/commits/9d087be5ed92"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-9"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-9"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9513d4e9-3367-4a8c-ab58-9f8a927285d1}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-9", "full_name": "traversaro/gazebo-9", "uuid": "{9513d4e9-3367-4a8c-ab58-9f8a927285d1}"}, "branch": {"name": "traversaro/find-ogre-in-cmake-also-without-pkgconfi-1492877942863"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-25T18:08:10.678032+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "64a0ed96c32f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/64a0ed96c32f.json"}, "html": {"href": "#!/osrf/gazebo/commits/64a0ed96c32f"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Remove manual setting of flags for dynamic linking of the Windows CRT library \n\nThe use of `/MDd` for the Debug compilation type and `/MD` for all the other is already ensured by the `Windows-MSVC` CMake Platform [2] file in `NMake Makefiles`, `ninja` and `Visual Studio` generators, \nso those lines should not be necessary. \n\nFurthermore, on Multi Config CMake Generators such as Visual Studio, the `CMAKE_BUILD_TYPE` variables does not contain the actual configuration with which the code is compiled, that is instead specified by the user at compile time rather than configuration time. This mean that \nthe `/MD` flag (linking with the Non-Debug CRT Dynamic Library) is passed even to Debug builds, and this causes linking error with third-party debug dependencies in gazebo . See [2] for a proper way of manipulating config-specific compilation flags for both Single Config and Multiple Config generators. \n\n[1] https://github.com/Kitware/CMake/blob/6dc7262bf77f551a7f3c36d7ca3023c63ef20af8/Modules/Platform/Windows-MSVC.cmake#L292\n\n\n[2] https://cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2693/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5b0cda9e5471%0Daa22abbfb676?from_pullrequest_id=2693"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2693/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2693.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2693/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2693/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2693"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2693/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5b0cda9e5471%0Daa22abbfb676?from_pullrequest_id=2693"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2693/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2693/statuses_page=1.json"}}, "title": "Remove manual setting of flags for dynamic linking of the Windows CRT library", "close_source_branch": false, "type": "pullrequest", "id": 2693, "destination": {"commit": {"hash": "aa22abbfb676", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/aa22abbfb676.json"}, "html": {"href": "#!/osrf/gazebo/commits/aa22abbfb676"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-22T16:55:21.568063+00:00", "summary": {"raw": "Remove manual setting of flags for dynamic linking of the Windows CRT library \n\nThe use of `/MDd` for the Debug compilation type and `/MD` for all the other is already ensured by the `Windows-MSVC` CMake Platform [2] file in `NMake Makefiles`, `ninja` and `Visual Studio` generators, \nso those lines should not be necessary. \n\nFurthermore, on Multi Config CMake Generators such as Visual Studio, the `CMAKE_BUILD_TYPE` variables does not contain the actual configuration with which the code is compiled, that is instead specified by the user at compile time rather than configuration time. This mean that \nthe `/MD` flag (linking with the Non-Debug CRT Dynamic Library) is passed even to Debug builds, and this causes linking error with third-party debug dependencies in gazebo . See [2] for a proper way of manipulating config-specific compilation flags for both Single Config and Multiple Config generators. \n\n[1] https://github.com/Kitware/CMake/blob/6dc7262bf77f551a7f3c36d7ca3023c63ef20af8/Modules/Platform/Windows-MSVC.cmake#L292\n\n\n[2] https://cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F", "markup": "markdown", "html": "<p>Remove manual setting of flags for dynamic linking of the Windows CRT library </p>\n<p>The use of <code>/MDd</code> for the Debug compilation type and <code>/MD</code> for all the other is already ensured by the <code>Windows-MSVC</code> CMake Platform [2] file in <code>NMake Makefiles</code>, <code>ninja</code> and <code>Visual Studio</code> generators, \nso those lines should not be necessary. </p>\n<p>Furthermore, on Multi Config CMake Generators such as Visual Studio, the <code>CMAKE_BUILD_TYPE</code> variables does not contain the actual configuration with which the code is compiled, that is instead specified by the user at compile time rather than configuration time. This mean that \nthe <code>/MD</code> flag (linking with the Non-Debug CRT Dynamic Library) is passed even to Debug builds, and this causes linking error with third-party debug dependencies in gazebo . See [2] for a proper way of manipulating config-specific compilation flags for both Single Config and Multiple Config generators. </p>\n<p>[1] <a href=\"https://github.com/Kitware/CMake/blob/6dc7262bf77f551a7f3c36d7ca3023c63ef20af8/Modules/Platform/Windows-MSVC.cmake#L292\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/Kitware/CMake/blob/6dc7262bf77f551a7f3c36d7ca3023c63ef20af8/Modules/Platform/Windows-MSVC.cmake#L292</a></p>\n<p>[2] <a href=\"https://cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\" rel=\"nofollow\" class=\"ap-connect-link\">https://cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "977af3b1af72", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-10/commit/977af3b1af72"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-10/commits/977af3b1af72"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-10"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-10"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aaaf8d83-f755-4acb-9caf-ddbb0ea919a9}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-10", "full_name": "traversaro/gazebo-10", "uuid": "{aaaf8d83-f755-4acb-9caf-ddbb0ea919a9}"}, "branch": {"name": "traversaro/remove-manual-setting-of-flags-for-dynam-1492880095803"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-24T19:55:42.367697+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "5b0cda9e5471", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5b0cda9e5471.json"}, "html": {"href": "#!/osrf/gazebo/commits/5b0cda9e5471"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "* ArduCopterIRlock: make address and port variable\r\n\r\n* ArduCopterIrlock: Correct addr error and const correctness\r\n\r\n* ArduPilotPlugin: corrections after merge\r\n\r\n* ArduCopterIRLockPlugin: corrections after merge\r\n\r\n* ArduPilotPlugin: update for window compilation from Jose Luis Rivero\r\n\r\n* ArduCopterIRLockPlugin: : update for window compilation from Jose Luis Rivero\r\n\r\n* ArduPilotPlugin: correct style and constcorrectness\r\n\r\n* ArduCopterIRLockPlugin: correct style\r\n\r\n* ArduPilotPlugin: add better error logging\r\n\r\n* ArdupilotPlugin: remove trailing whitespace", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2694/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:9d6c493bc342%0D403504a91d89?from_pullrequest_id=2694"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2694/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2694.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2694/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2694/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2694"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2694/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:9d6c493bc342%0D403504a91d89?from_pullrequest_id=2694"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2694/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2694/statuses_page=1.json"}}, "title": "Ardupilot merge gazebo8 khancyr", "close_source_branch": false, "type": "pullrequest", "id": 2694, "destination": {"commit": {"hash": "403504a91d89", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/403504a91d89.json"}, "html": {"href": "#!/osrf/gazebo/commits/403504a91d89"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ardupilot_merge_gazebo8"}}, "created_on": "2017-04-25T14:55:45.946900+00:00", "summary": {"raw": "* ArduCopterIRlock: make address and port variable\r\n\r\n* ArduCopterIrlock: Correct addr error and const correctness\r\n\r\n* ArduPilotPlugin: corrections after merge\r\n\r\n* ArduCopterIRLockPlugin: corrections after merge\r\n\r\n* ArduPilotPlugin: update for window compilation from Jose Luis Rivero\r\n\r\n* ArduCopterIRLockPlugin: : update for window compilation from Jose Luis Rivero\r\n\r\n* ArduPilotPlugin: correct style and constcorrectness\r\n\r\n* ArduCopterIRLockPlugin: correct style\r\n\r\n* ArduPilotPlugin: add better error logging\r\n\r\n* ArdupilotPlugin: remove trailing whitespace", "markup": "markdown", "html": "<ul>\n<li>\n<p>ArduCopterIRlock: make address and port variable</p>\n</li>\n<li>\n<p>ArduCopterIrlock: Correct addr error and const correctness</p>\n</li>\n<li>\n<p>ArduPilotPlugin: corrections after merge</p>\n</li>\n<li>\n<p>ArduCopterIRLockPlugin: corrections after merge</p>\n</li>\n<li>\n<p>ArduPilotPlugin: update for window compilation from Jose Luis Rivero</p>\n</li>\n<li>\n<p>ArduCopterIRLockPlugin: : update for window compilation from Jose Luis Rivero</p>\n</li>\n<li>\n<p>ArduPilotPlugin: correct style and constcorrectness</p>\n</li>\n<li>\n<p>ArduCopterIRLockPlugin: correct style</p>\n</li>\n<li>\n<p>ArduPilotPlugin: add better error logging</p>\n</li>\n<li>\n<p>ArdupilotPlugin: remove trailing whitespace</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "d98bf0e5cafe", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo/commit/d98bf0e5cafe"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo/commits/d98bf0e5cafe"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pkancir/gazebo"}, "html": {"href": "https://bitbucket.org/pkancir/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{20635e39-8da1-485a-a517-369acb1ee945}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pkancir/gazebo", "uuid": "{20635e39-8da1-485a-a517-369acb1ee945}"}, "branch": {"name": "ardupilot_merge_gazebo8_khancyr"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-25T21:20:07.163971+00:00", "author": {"display_name": "pierre kancir", "uuid": "{9a97d859-5959-4a68-af43-bdcceee662f0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D"}, "html": {"href": "https://bitbucket.org/%7B9a97d859-5959-4a68-af43-bdcceee662f0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7e77466a3ea95f7e0b79b1c06a2d4e65d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-3.png"}}, "nickname": "pkancir", "type": "user", "account_id": "557058:be5780af-c696-491c-bf8f-4ffe804dc642"}, "merge_commit": {"hash": "9d6c493bc342", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9d6c493bc342.json"}, "html": {"href": "#!/osrf/gazebo/commits/9d6c493bc342"}}}, "closed_by": {"display_name": "Tully Foote", "uuid": "{3d90dbd4-b845-466f-b5bd-068566f7ff50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D"}, "html": {"href": "https://bitbucket.org/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bc6528f8fe1fef6b6ecc7312ee0cf04d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTF-2.png"}}, "nickname": "Tully Foote", "type": "user", "account_id": "557058:e2bf789f-2138-4a4e-ba39-3d618078e20b"}}, {"description": "Sensors can be \"turned on and off\" using the `SetActive` method. \r\n\r\n* Sensors are inactive by default and thus require `SetActive` to be called on them to be turned on. \r\n\r\n* If the `<always_on>` flag is set to true on SDF, `SetActive` is [called](#!/osrf/gazebo/src/731b32893db68d522347244d058ddfe284754330/gazebo/sensors/Sensor.cc?at=gazebo7&fileviewer=file-view-default#Sensor.cc-96) the moment the sensor is loaded.\r\n\r\nContact sensors work by:\r\n\r\n* Creating a filter with the `ContactManager`, so the manager publishes filtered contacts on a dedicated topic\r\n\r\n* Subscribing to that topic\r\n\r\n* Republishing the slightly modified filtered contacts on a sensor custom topic\r\n\r\nRight now, even when the sensor is not active, there is a filter on `ContactManager`, the sensor is subscribing to that topic and not doing anything on the callback. For performance improvements, this pull request creates and removes the filter on demand as the sensor is turned on and off.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2695/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:8540ba34ab73%0D69b7cfe50d63?from_pullrequest_id=2695"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2695/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2695.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2695/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2695/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2695"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2695/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8540ba34ab73%0D69b7cfe50d63?from_pullrequest_id=2695"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2695/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2695/statuses_page=1.json"}}, "title": "Contact sensor performance improvement", "close_source_branch": false, "type": "pullrequest", "id": 2695, "destination": {"commit": {"hash": "69b7cfe50d63", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/69b7cfe50d63.json"}, "html": {"href": "#!/osrf/gazebo/commits/69b7cfe50d63"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-04-26T00:29:16.129856+00:00", "summary": {"raw": "Sensors can be \"turned on and off\" using the `SetActive` method. \r\n\r\n* Sensors are inactive by default and thus require `SetActive` to be called on them to be turned on. \r\n\r\n* If the `<always_on>` flag is set to true on SDF, `SetActive` is [called](#!/osrf/gazebo/src/731b32893db68d522347244d058ddfe284754330/gazebo/sensors/Sensor.cc?at=gazebo7&fileviewer=file-view-default#Sensor.cc-96) the moment the sensor is loaded.\r\n\r\nContact sensors work by:\r\n\r\n* Creating a filter with the `ContactManager`, so the manager publishes filtered contacts on a dedicated topic\r\n\r\n* Subscribing to that topic\r\n\r\n* Republishing the slightly modified filtered contacts on a sensor custom topic\r\n\r\nRight now, even when the sensor is not active, there is a filter on `ContactManager`, the sensor is subscribing to that topic and not doing anything on the callback. For performance improvements, this pull request creates and removes the filter on demand as the sensor is turned on and off.", "markup": "markdown", "html": "<p>Sensors can be \"turned on and off\" using the <code>SetActive</code> method. </p>\n<ul>\n<li>\n<p>Sensors are inactive by default and thus require <code>SetActive</code> to be called on them to be turned on. </p>\n</li>\n<li>\n<p>If the <code>&lt;always_on&gt;</code> flag is set to true on SDF, <code>SetActive</code> is <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/731b32893db68d522347244d058ddfe284754330/gazebo/sensors/Sensor.cc?at=gazebo7&amp;fileviewer=file-view-default#Sensor.cc-96\" rel=\"nofollow\">called</a> the moment the sensor is loaded.</p>\n</li>\n</ul>\n<p>Contact sensors work by:</p>\n<ul>\n<li>\n<p>Creating a filter with the <code>ContactManager</code>, so the manager publishes filtered contacts on a dedicated topic</p>\n</li>\n<li>\n<p>Subscribing to that topic</p>\n</li>\n<li>\n<p>Republishing the slightly modified filtered contacts on a sensor custom topic</p>\n</li>\n</ul>\n<p>Right now, even when the sensor is not active, there is a filter on <code>ContactManager</code>, the sensor is subscribing to that topic and not doing anything on the callback. For performance improvements, this pull request creates and removes the filter on demand as the sensor is turned on and off.</p>", "type": "rendered"}, "source": {"commit": {"hash": "8540ba34ab73", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8540ba34ab73.json"}, "html": {"href": "#!/osrf/gazebo/commits/8540ba34ab73"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "contact_sensor_active"}}, "comment_count": 22, "state": "DECLINED", "task_count": 0, "reason": "Triaging pull requests. ARIAC is complete, and our focus is currently on gazebo 11.", "updated_on": "2018-08-10T22:26:23.200528+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "There is still a little bit of a race condition when detaching the HarnessPlugin, since the `winchIndex` can be set to `-1` in the `OnDetach` callback, but that variable is used as an array index in a few places. We check the sign of the variable in those functions, but it could still change in between the check and the array indexing. It's safer to store a local copy of the `winchIndex` and use that.\r\n\r\nI observe this type of failure infrequently in my overnight testing, but the fix is straightforward.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2696/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:3e2eb985da43%0D8a11f7f5192d?from_pullrequest_id=2696"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2696/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2696.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2696/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2696/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2696"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2696/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3e2eb985da43%0D8a11f7f5192d?from_pullrequest_id=2696"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2696/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2696/statuses_page=1.json"}}, "title": "HarnessPlugin fix race condition during Detach", "close_source_branch": true, "type": "pullrequest", "id": 2696, "destination": {"commit": {"hash": "8a11f7f5192d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8a11f7f5192d.json"}, "html": {"href": "#!/osrf/gazebo/commits/8a11f7f5192d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-04-27T00:05:39.122310+00:00", "summary": {"raw": "There is still a little bit of a race condition when detaching the HarnessPlugin, since the `winchIndex` can be set to `-1` in the `OnDetach` callback, but that variable is used as an array index in a few places. We check the sign of the variable in those functions, but it could still change in between the check and the array indexing. It's safer to store a local copy of the `winchIndex` and use that.\r\n\r\nI observe this type of failure infrequently in my overnight testing, but the fix is straightforward.", "markup": "markdown", "html": "<p>There is still a little bit of a race condition when detaching the HarnessPlugin, since the <code>winchIndex</code> can be set to <code>-1</code> in the <code>OnDetach</code> callback, but that variable is used as an array index in a few places. We check the sign of the variable in those functions, but it could still change in between the check and the array indexing. It's safer to store a local copy of the <code>winchIndex</code> and use that.</p>\n<p>I observe this type of failure infrequently in my overnight testing, but the fix is straightforward.</p>", "type": "rendered"}, "source": {"commit": {"hash": "61e3130bc8ac", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/61e3130bc8ac.json"}, "html": {"href": "#!/osrf/gazebo/commits/61e3130bc8ac"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "harness_detach_race"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-03T01:22:11.745583+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "3e2eb985da43", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3e2eb985da43.json"}, "html": {"href": "#!/osrf/gazebo/commits/3e2eb985da43"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "This pull request adds the ability to re-attach the `HarnessPlugin` via a new gazebo topic that accepts a pose message. If the harness joint has already been detached, the model is teleported to the new pose and then re-attached. The new functionality is added to an existing test, and another example standalone program is added for attaching the plugin.\r\n\r\nThere is a fair bit of re-factoring here, so I could split this into multiple pull requests if necessary, ~~though it is fairly urgent for the SRC project, so please let me know soon if I should split it up~~ (Edit: the SRC won't use this version of the plugin; it will be committed into the srcsim repo, so there is less of a rush for this upstream pull request). Here is a summary of the changes:\r\n\r\n* 743d1ac: fix race condition seg-fault (back-ported to gazebo7 in pull request #2696)\r\n* 30a9ac1: use private data pointer\r\n* aaea978: move topic subscriptions to plugin Init so callbacks don't happen too soon (compilation fixed in  e55b7d2)\r\n* e55b7d2: move joint creation from Load to private function Attach()\r\n* 700c90c, 2909d41, acec026: new Attach API\r\n* c7a082b: set pose of detach link instead of canonical link if they are not the same (noticed while testing with Valkyrie in srcsim)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2697/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:1a85a1105d08%0Dbb8abcd6ee11?from_pullrequest_id=2697"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2697/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2697.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2697/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2697/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2697"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2697/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:1a85a1105d08%0Dbb8abcd6ee11?from_pullrequest_id=2697"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2697/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2697/statuses_page=1.json"}}, "title": "HarnessPlugin: PIMPL and allow re-attaching", "close_source_branch": true, "type": "pullrequest", "id": 2697, "destination": {"commit": {"hash": "bb8abcd6ee11", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bb8abcd6ee11.json"}, "html": {"href": "#!/osrf/gazebo/commits/bb8abcd6ee11"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-27T00:12:15.609711+00:00", "summary": {"raw": "This pull request adds the ability to re-attach the `HarnessPlugin` via a new gazebo topic that accepts a pose message. If the harness joint has already been detached, the model is teleported to the new pose and then re-attached. The new functionality is added to an existing test, and another example standalone program is added for attaching the plugin.\r\n\r\nThere is a fair bit of re-factoring here, so I could split this into multiple pull requests if necessary, ~~though it is fairly urgent for the SRC project, so please let me know soon if I should split it up~~ (Edit: the SRC won't use this version of the plugin; it will be committed into the srcsim repo, so there is less of a rush for this upstream pull request). Here is a summary of the changes:\r\n\r\n* 743d1ac: fix race condition seg-fault (back-ported to gazebo7 in pull request #2696)\r\n* 30a9ac1: use private data pointer\r\n* aaea978: move topic subscriptions to plugin Init so callbacks don't happen too soon (compilation fixed in  e55b7d2)\r\n* e55b7d2: move joint creation from Load to private function Attach()\r\n* 700c90c, 2909d41, acec026: new Attach API\r\n* c7a082b: set pose of detach link instead of canonical link if they are not the same (noticed while testing with Valkyrie in srcsim)", "markup": "markdown", "html": "<p>This pull request adds the ability to re-attach the <code>HarnessPlugin</code> via a new gazebo topic that accepts a pose message. If the harness joint has already been detached, the model is teleported to the new pose and then re-attached. The new functionality is added to an existing test, and another example standalone program is added for attaching the plugin.</p>\n<p>There is a fair bit of re-factoring here, so I could split this into multiple pull requests if necessary, <del>though it is fairly urgent for the SRC project, so please let me know soon if I should split it up</del> (Edit: the SRC won't use this version of the plugin; it will be committed into the srcsim repo, so there is less of a rush for this upstream pull request). Here is a summary of the changes:</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/commits/743d1ac\" rel=\"nofollow\" class=\"ap-connect-link\">743d1ac</a>: fix race condition seg-fault (back-ported to gazebo7 in <a href=\"#!/osrf/gazebo/pull-requests/2696/harnessplugin-fix-race-condition-during\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2696</a>)</li>\n<li><a href=\"#!/osrf/gazebo/commits/30a9ac1\" rel=\"nofollow\" class=\"ap-connect-link\">30a9ac1</a>: use private data pointer</li>\n<li><a href=\"#!/osrf/gazebo/commits/aaea978\" rel=\"nofollow\" class=\"ap-connect-link\">aaea978</a>: move topic subscriptions to plugin Init so callbacks don't happen too soon (compilation fixed in  <a href=\"#!/osrf/gazebo/commits/e55b7d2\" rel=\"nofollow\" class=\"ap-connect-link\">e55b7d2</a>)</li>\n<li><a href=\"#!/osrf/gazebo/commits/e55b7d2\" rel=\"nofollow\" class=\"ap-connect-link\">e55b7d2</a>: move joint creation from Load to private function Attach()</li>\n<li><a href=\"#!/osrf/gazebo/commits/700c90c\" rel=\"nofollow\" class=\"ap-connect-link\">700c90c</a>, <a href=\"#!/osrf/gazebo/commits/2909d41\" rel=\"nofollow\" class=\"ap-connect-link\">2909d41</a>, <a href=\"#!/osrf/gazebo/commits/acec026\" rel=\"nofollow\" class=\"ap-connect-link\">acec026</a>: new Attach API</li>\n<li><a href=\"#!/osrf/gazebo/commits/c7a082b\" rel=\"nofollow\" class=\"ap-connect-link\">c7a082b</a>: set pose of detach link instead of canonical link if they are not the same (noticed while testing with Valkyrie in srcsim)</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "b1a26f633ea0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b1a26f633ea0.json"}, "html": {"href": "#!/osrf/gazebo/commits/b1a26f633ea0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "harness_attach_default"}}, "comment_count": 45, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-18T17:52:18.323491+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "1a85a1105d08", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1a85a1105d08.json"}, "html": {"href": "#!/osrf/gazebo/commits/1a85a1105d08"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "I'm not 100% sure that I did this correctly, but the fix appears to work in practice. I copied the method used by the Camera renderer to obtain a list of supported FSAA levels, rather than assuming that 4 is the correct one. I also made the camera respect the provided image format. Finally, I downgraded the minimum GLSL version on the wide angle shaders to 120.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2698/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:ef97d8fb9cbe%0D1a06b15dc957?from_pullrequest_id=2698"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2698/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2698.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2698/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2698/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2698"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2698/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:ef97d8fb9cbe%0D1a06b15dc957?from_pullrequest_id=2698"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2698/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2698/statuses_page=1.json"}}, "title": "[rendering] Various updated to WideAngleCamera.cc for compatibility with a VM environment.", "close_source_branch": false, "type": "pullrequest", "id": 2698, "destination": {"commit": {"hash": "1a06b15dc957", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1a06b15dc957.json"}, "html": {"href": "#!/osrf/gazebo/commits/1a06b15dc957"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-29T01:51:48.229485+00:00", "summary": {"raw": "I'm not 100% sure that I did this correctly, but the fix appears to work in practice. I copied the method used by the Camera renderer to obtain a list of supported FSAA levels, rather than assuming that 4 is the correct one. I also made the camera respect the provided image format. Finally, I downgraded the minimum GLSL version on the wide angle shaders to 120.", "markup": "markdown", "html": "<p>I'm not 100% sure that I did this correctly, but the fix appears to work in practice. I copied the method used by the Camera renderer to obtain a list of supported FSAA levels, rather than assuming that 4 is the correct one. I also made the camera respect the provided image format. Finally, I downgraded the minimum GLSL version on the wide angle shaders to 120.</p>", "type": "rendered"}, "source": {"commit": {"hash": "dfde05946f67", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/asymingt/gazebo/commit/dfde05946f67"}, "html": {"href": "https://bitbucket.org/asymingt/gazebo/commits/dfde05946f67"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/asymingt/gazebo"}, "html": {"href": "https://bitbucket.org/asymingt/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4143e13a-3ed6-4c14-8dcb-e3258d251dcb}ts=703690"}}, "type": "repository", "name": "gazebo", "full_name": "asymingt/gazebo", "uuid": "{4143e13a-3ed6-4c14-8dcb-e3258d251dcb}"}, "branch": {"name": "default"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-03T14:43:55.815177+00:00", "author": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "merge_commit": {"hash": "ef97d8fb9cbe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ef97d8fb9cbe.json"}, "html": {"href": "#!/osrf/gazebo/commits/ef97d8fb9cbe"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "Some tests needed trivial fixes to compile: \r\n\r\n* Remove unused sys/time.h inclusion in SemanticVersion_TEST.cc\r\n* Fix compilation in physics_collision.cc  \r\n* Remove unused unistd.h include in bandwidth.cc\r\n* Remove unused unistd.h include in 1782_unadvertise.cc \r\n* Removed unused unistd.h include in model_database.cc\r\n\r\n\r\nSome others would probably need to be rewritten, so I simply (conditionally) excluded them from compilation: \r\n\r\n* Disable performance tests in Windows\r\n* Disable tools test in Windows", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2699/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:7a6d7da762ca%0D3fef8210ade3?from_pullrequest_id=2699"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2699/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2699.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2699/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2699/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2699"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2699/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:7a6d7da762ca%0D3fef8210ade3?from_pullrequest_id=2699"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2699/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2699/statuses_page=1.json"}}, "title": "Fix compilation of some tests on Windows", "close_source_branch": false, "type": "pullrequest", "id": 2699, "destination": {"commit": {"hash": "3fef8210ade3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3fef8210ade3.json"}, "html": {"href": "#!/osrf/gazebo/commits/3fef8210ade3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-29T07:52:10.984283+00:00", "summary": {"raw": "Some tests needed trivial fixes to compile: \r\n\r\n* Remove unused sys/time.h inclusion in SemanticVersion_TEST.cc\r\n* Fix compilation in physics_collision.cc  \r\n* Remove unused unistd.h include in bandwidth.cc\r\n* Remove unused unistd.h include in 1782_unadvertise.cc \r\n* Removed unused unistd.h include in model_database.cc\r\n\r\n\r\nSome others would probably need to be rewritten, so I simply (conditionally) excluded them from compilation: \r\n\r\n* Disable performance tests in Windows\r\n* Disable tools test in Windows", "markup": "markdown", "html": "<p>Some tests needed trivial fixes to compile: </p>\n<ul>\n<li>Remove unused sys/time.h inclusion in SemanticVersion_TEST.cc</li>\n<li>Fix compilation in physics_collision.cc  </li>\n<li>Remove unused unistd.h include in bandwidth.cc</li>\n<li>Remove unused unistd.h include in 1782_unadvertise.cc </li>\n<li>Removed unused unistd.h include in model_database.cc</li>\n</ul>\n<p>Some others would probably need to be rewritten, so I simply (conditionally) excluded them from compilation: </p>\n<ul>\n<li>Disable performance tests in Windows</li>\n<li>Disable tools test in Windows</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "b61584cb35c8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-11/commit/b61584cb35c8"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-11/commits/b61584cb35c8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-11"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-11"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6fa14be6-0e9d-4f1d-a432-3de7c8960daf}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-11", "full_name": "traversaro/gazebo-11", "uuid": "{6fa14be6-0e9d-4f1d-a432-3de7c8960daf}"}, "branch": {"name": "traversaro/remove-unused-systimeh-inclusion-in-sema-1493452308959"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-12-28T17:47:08.872004+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": {"hash": "7a6d7da762ca", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7a6d7da762ca.json"}, "html": {"href": "#!/osrf/gazebo/commits/7a6d7da762ca"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"description": "Remove preprocessor definition of `BUILDING_DLL` \r\n\r\nThe `BUILDING_DLL` macro is not used anywhere in the Gazebo source, \r\nso it should not be necessary to define it for any reason.\r\nFurthermore, in Windows the `BUILDING_DLL` macro in `sdformat` and in all \r\nthe `ign-*` projects is used to define the respective `<PROJECT_NAME>_VISIBLE`\r\nmacros to be equal  to `__declspec(dllexport)`. \r\nFor this reason, defining the `BUILDING_DLL` macro is actually harmful\r\nbecause in all the `sdformat`/`ign-*` headers that are included \r\nby Gazebo, the `<PROJECT_NAME>_VISIBLE` macros will be equal to \r\n`__declspec(dllexport)` rather then the intended `__declspec(dllimport)`.\r\nNote that in a sense this is a bug of both Gazebo, because it defines\r\nthe `BUILDING_DLL`, and of all `sdformat`/`ign-*` projects, that use a common \r\nmacro to switch their visible macro to be `__declspec(dllexport)`, while \r\neach one should instead use a project-specific macro.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2700/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/traversaro/gazebo-12:a694a279e214%0D02c86f6d70d7?from_pullrequest_id=2700"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2700.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2700/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2700"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/traversaro/gazebo-12:a694a279e214%0D02c86f6d70d7?from_pullrequest_id=2700"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2700/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/statuses_page=1.json"}}, "title": "Remove preprocessor definition of `BUILDING_DLL`", "close_source_branch": false, "type": "pullrequest", "id": 2700, "destination": {"commit": {"hash": "02c86f6d70d7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/02c86f6d70d7.json"}, "html": {"href": "#!/osrf/gazebo/commits/02c86f6d70d7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-29T21:25:55.007231+00:00", "summary": {"raw": "Remove preprocessor definition of `BUILDING_DLL` \r\n\r\nThe `BUILDING_DLL` macro is not used anywhere in the Gazebo source, \r\nso it should not be necessary to define it for any reason.\r\nFurthermore, in Windows the `BUILDING_DLL` macro in `sdformat` and in all \r\nthe `ign-*` projects is used to define the respective `<PROJECT_NAME>_VISIBLE`\r\nmacros to be equal  to `__declspec(dllexport)`. \r\nFor this reason, defining the `BUILDING_DLL` macro is actually harmful\r\nbecause in all the `sdformat`/`ign-*` headers that are included \r\nby Gazebo, the `<PROJECT_NAME>_VISIBLE` macros will be equal to \r\n`__declspec(dllexport)` rather then the intended `__declspec(dllimport)`.\r\nNote that in a sense this is a bug of both Gazebo, because it defines\r\nthe `BUILDING_DLL`, and of all `sdformat`/`ign-*` projects, that use a common \r\nmacro to switch their visible macro to be `__declspec(dllexport)`, while \r\neach one should instead use a project-specific macro.", "markup": "markdown", "html": "<p>Remove preprocessor definition of <code>BUILDING_DLL</code> </p>\n<p>The <code>BUILDING_DLL</code> macro is not used anywhere in the Gazebo source, \nso it should not be necessary to define it for any reason.\nFurthermore, in Windows the <code>BUILDING_DLL</code> macro in <code>sdformat</code> and in all \nthe <code>ign-*</code> projects is used to define the respective <code>&lt;PROJECT_NAME&gt;_VISIBLE</code>\nmacros to be equal  to <code>__declspec(dllexport)</code>. \nFor this reason, defining the <code>BUILDING_DLL</code> macro is actually harmful\nbecause in all the <code>sdformat</code>/<code>ign-*</code> headers that are included \nby Gazebo, the <code>&lt;PROJECT_NAME&gt;_VISIBLE</code> macros will be equal to \n<code>__declspec(dllexport)</code> rather then the intended <code>__declspec(dllimport)</code>.\nNote that in a sense this is a bug of both Gazebo, because it defines\nthe <code>BUILDING_DLL</code>, and of all <code>sdformat</code>/<code>ign-*</code> projects, that use a common \nmacro to switch their visible macro to be <code>__declspec(dllexport)</code>, while \neach one should instead use a project-specific macro.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a694a279e214", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-12/commit/a694a279e214"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-12/commits/a694a279e214"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-12"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-12"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6e119d2f-f486-4dd8-9652-a557a79c45a3}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-12", "full_name": "traversaro/gazebo-12", "uuid": "{6e119d2f-f486-4dd8-9652-a557a79c45a3}"}, "branch": {"name": "traversaro/remove-preprocessor-definition-of-buildi-1493501132601"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "reason": "", "updated_on": "2017-04-29T21:50:09.453716+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": null, "closed_by": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}}, {"description": "The README is ugly:\r\n\r\n#!/osrf/gazebo/src/33a2f98c192b132d2efff3b57db3b07cd2ca2ebb/?at=default\r\n\r\nThis makes it pretty:\r\n\r\n#!/osrf/gazebo/src/81d160287aabe9f399e1bfea7a72f3dd06f192c5/?at=markdown_readme", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2701/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:7d7c37d66d00%0Def97d8fb9cbe?from_pullrequest_id=2701"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2701/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2701.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2701/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2701/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2701"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2701/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:7d7c37d66d00%0Def97d8fb9cbe?from_pullrequest_id=2701"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2701/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2701/statuses_page=1.json"}}, "title": "Markdown README", "close_source_branch": true, "type": "pullrequest", "id": 2701, "destination": {"commit": {"hash": "ef97d8fb9cbe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ef97d8fb9cbe.json"}, "html": {"href": "#!/osrf/gazebo/commits/ef97d8fb9cbe"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-05-03T00:35:59.118989+00:00", "summary": {"raw": "The README is ugly:\r\n\r\n#!/osrf/gazebo/src/33a2f98c192b132d2efff3b57db3b07cd2ca2ebb/?at=default\r\n\r\nThis makes it pretty:\r\n\r\n#!/osrf/gazebo/src/81d160287aabe9f399e1bfea7a72f3dd06f192c5/?at=markdown_readme", "markup": "markdown", "html": "<p>The README is ugly:</p>\n<p><a href=\"#!/osrf/gazebo/src/33a2f98c192b132d2efff3b57db3b07cd2ca2ebb/?at=default\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/33a2f98c192b132d2efff3b57db3b07cd2ca2ebb/?at=default</a></p>\n<p>This makes it pretty:</p>\n<p><a href=\"#!/osrf/gazebo/src/81d160287aabe9f399e1bfea7a72f3dd06f192c5/?at=markdown_readme\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/81d160287aabe9f399e1bfea7a72f3dd06f192c5/?at=markdown_readme</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "81d160287aab", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/81d160287aab.json"}, "html": {"href": "#!/osrf/gazebo/commits/81d160287aab"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "markdown_readme"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-03T14:44:21.509274+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "7d7c37d66d00", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7d7c37d66d00.json"}, "html": {"href": "#!/osrf/gazebo/commits/7d7c37d66d00"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "pagelen": 50, "size": 3211, "page": 54, "previous": "data/repositories/osrf/gazebo/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=53.json"}