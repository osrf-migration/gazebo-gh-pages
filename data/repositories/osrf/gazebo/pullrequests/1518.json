{"rendered": {"description": {"raw": "this allows ConfigWidgets to parse and create widgets for configuring fields of enum type via a Qt combo box. \r\n\r\nAdded a JointMsgWidget test in ConfigWidget_TEST that makes use of the new functions. Specifically   the joint `type` field is an enum in joint.proto. The test shows setting and getting joint type values (as well as testing and verifying all other joint fields).\r\n\r\nThe is needed later by a new joint inspector I am creating for model editor.", "markup": "markdown", "html": "<p>this allows ConfigWidgets to parse and create widgets for configuring fields of enum type via a Qt combo box. </p>\n<p>Added a JointMsgWidget test in ConfigWidget_TEST that makes use of the new functions. Specifically   the joint <code>type</code> field is an enum in joint.proto. The test shows setting and getting joint type values (as well as testing and verifying all other joint fields).</p>\n<p>The is needed later by a new joint inspector I am creating for model editor.</p>", "type": "rendered"}, "title": {"raw": "Supprt enum values in ConfigWidget", "markup": "markdown", "html": "<p>Supprt enum values in ConfigWidget</p>", "type": "rendered"}}, "type": "pullrequest", "description": "this allows ConfigWidgets to parse and create widgets for configuring fields of enum type via a Qt combo box. \r\n\r\nAdded a JointMsgWidget test in ConfigWidget_TEST that makes use of the new functions. Specifically   the joint `type` field is an enum in joint.proto. The test shows setting and getting joint type values (as well as testing and verifying all other joint fields).\r\n\r\nThe is needed later by a new joint inspector I am creating for model editor.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1518/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:daceef4a9afc%0D7e5fd436c2a5?from_pullrequest_id=1518"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1518/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1518.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1518/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1518/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1518"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1518/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:daceef4a9afc%0D7e5fd436c2a5?from_pullrequest_id=1518"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1518/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1518/statuses_page=1.json"}}, "title": "Supprt enum values in ConfigWidget", "close_source_branch": true, "reviewers": [], "id": 1518, "destination": {"commit": {"hash": "7e5fd436c2a5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7e5fd436c2a5.json"}, "html": {"href": "#!/osrf/gazebo/commits/7e5fd436c2a5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2015-03-15T09:27:38.086650+00:00", "summary": {"raw": "this allows ConfigWidgets to parse and create widgets for configuring fields of enum type via a Qt combo box. \r\n\r\nAdded a JointMsgWidget test in ConfigWidget_TEST that makes use of the new functions. Specifically   the joint `type` field is an enum in joint.proto. The test shows setting and getting joint type values (as well as testing and verifying all other joint fields).\r\n\r\nThe is needed later by a new joint inspector I am creating for model editor.", "markup": "markdown", "html": "<p>this allows ConfigWidgets to parse and create widgets for configuring fields of enum type via a Qt combo box. </p>\n<p>Added a JointMsgWidget test in ConfigWidget_TEST that makes use of the new functions. Specifically   the joint <code>type</code> field is an enum in joint.proto. The test shows setting and getting joint type values (as well as testing and verifying all other joint fields).</p>\n<p>The is needed later by a new joint inspector I am creating for model editor.</p>", "type": "rendered"}, "source": {"commit": {"hash": "57e378768255", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57e378768255.json"}, "html": {"href": "#!/osrf/gazebo/commits/57e378768255"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "enum_config"}}, "comment_count": 27, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-03-18T00:25:17.226270+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steffi Paepcke", "uuid": "{88ec2edf-5653-4e93-b139-6f2418d9fde5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B88ec2edf-5653-4e93-b139-6f2418d9fde5%7D"}, "html": {"href": "https://bitbucket.org/%7B88ec2edf-5653-4e93-b139-6f2418d9fde5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/spaepcke/avatar/"}}, "nickname": "spaepcke", "type": "user", "account_id": null}}, {"role": "PARTICIPANT", "participated_on": "2015-03-18T21:48:50.274093+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-18T00:35:05.237480+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-18T21:50:40.285296+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-25T15:19:02.162247+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2015-03-25T17:25:41.267009+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "daceef4a9afc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/daceef4a9afc.json"}, "html": {"href": "#!/osrf/gazebo/commits/daceef4a9afc"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}