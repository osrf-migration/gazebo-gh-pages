{"pagelen": 50, "values": [{"update": {"description": "pull request #1534 presents one approach to integrating the [ignition-math](https://bitbucket.org/ignitionrobotics/ign-math) library into gazebo as an eventual replacement for the `gazebo::math` classes. This pull request presents another approach.\r\n\r\nSwitching to `ignition-math` will require changes to both gazebo code and downstream gazebo plugin code. It's my understanding that the philosophy of pull request #1534 is to encourage everyone to stop using `gazebo/math/*.hh` header files, `gazebo::math::` classes and helper functions, and start using `ignition-math` instead. This will also require adapting to some API differences between `ignition-math` and `gazebo::math`.\r\n\r\nThis will be a lot of work/pain. It would be one thing if it was only pain for us, but it will also affect our downstream users who write gazebo plugins using math classes, which is likely almost 100% since math is our lowest-level library. It would actually be even worse for our users, who would need to use `#ifdef`'s if they want their plugin to support multiple versions of gazebo. I have an alternative in this pull request that could reduce the pain of transition for ourselves and our users.\r\n\r\nCaveat: I haven't fully implemented it; so it might not work, but I think it's worth discussing. I'm willing to support the approach in pull request #1534, but I'd like this approach to at least be considered.\r\n\r\nApproach, focusing only on the `math::Angle` class as an example (see Step 4 for the key idea):\r\n\r\n1. Add `ignition-math` as an optional dependency (6df6b70); it will later be required\r\n\r\n2. Deprecate `gazebo::math::Angle` functions that don't match the `ignition::math::Angle` API and add replacement functions that do match (9d1c07f)\r\n\r\n3. Fix `gazebo::math::Angle` deprecation warnings in gazebo (0558a69)\r\n\r\n4. If `ignition-math` is found, typedef `ignition::math::Angle` as `gazebo::math::Angle` and don't compile Angle.cc; this is the key part that could reduce the pain of transition. Users would still be able to include `gazebo/math/Angle.hh` and use `gazebo::math::Angle`, but it would all simply point to `ignition/math/Angle.hh` and `ignition::math::Angle`.\r\n\r\n5. Eventually make `ignition-math` required and delete all the `.cc` files in `gazebo/math`.\r\n\r\nOther caveats:\r\n\r\n1. I had to remove `class Angle` from `gazebo/math/MathTypes.hh` (a6c6ada) because it was causing problems. I'm not sure if this is a big deal or not or if it will be for other math classes.\r\n\r\n2. I saw a conflict between something in `gazebo/math/Helpers.hh` and `ignition/math/Helpers.hh`, though I can't remember where I saw it. Hopefully jenkins shows it.", "title": "Integrate ignition-math (alternative to pull request #1534)", "destination": {"commit": {"hash": "968df3ac24e9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/968df3ac24e9.json"}, "html": {"href": "#!/osrf/gazebo/commits/968df3ac24e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "Moved to issue #1529.", "source": {"commit": {"hash": "8d05e00177d9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8d05e00177d9.json"}, "html": {"href": "#!/osrf/gazebo/commits/8d05e00177d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ign_math_default_scpeters"}}, "state": "DECLINED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2015-03-20T18:25:16.126074+00:00"}, "pull_request": {"type": "pullrequest", "id": 1535, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1535.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1535"}}, "title": "Integrate ignition-math (alternative to pull request #1534)"}}, {"update": {"description": "pull request #1534 presents one approach to integrating the [ignition-math](https://bitbucket.org/ignitionrobotics/ign-math) library into gazebo as an eventual replacement for the `gazebo::math` classes. This pull request presents another approach.\r\n\r\nSwitching to `ignition-math` will require changes to both gazebo code and downstream gazebo plugin code. It's my understanding that the philosophy of pull request #1534 is to encourage everyone to stop using `gazebo/math/*.hh` header files, `gazebo::math::` classes and helper functions, and start using `ignition-math` instead. This will also require adapting to some API differences between `ignition-math` and `gazebo::math`.\r\n\r\nThis will be a lot of work/pain. It would be one thing if it was only pain for us, but it will also affect our downstream users who write gazebo plugins using math classes, which is likely almost 100% since math is our lowest-level library. It would actually be even worse for our users, who would need to use `#ifdef`'s if they want their plugin to support multiple versions of gazebo. I have an alternative in this pull request that could reduce the pain of transition for ourselves and our users.\r\n\r\nCaveat: I haven't fully implemented it; so it might not work, but I think it's worth discussing. I'm willing to support the approach in pull request #1534, but I'd like this approach to at least be considered.\r\n\r\nApproach, focusing only on the `math::Angle` class as an example (see Step 4 for the key idea):\r\n\r\n1. Add `ignition-math` as an optional dependency (6df6b70); it will later be required\r\n\r\n2. Deprecate `gazebo::math::Angle` functions that don't match the `ignition::math::Angle` API and add replacement functions that do match (9d1c07f)\r\n\r\n3. Fix `gazebo::math::Angle` deprecation warnings in gazebo (0558a69)\r\n\r\n4. If `ignition-math` is found, typedef `ignition::math::Angle` as `gazebo::math::Angle` and don't compile Angle.cc; this is the key part that could reduce the pain of transition. Users would still be able to include `gazebo/math/Angle.hh` and use `gazebo::math::Angle`, but it would all simply point to `ignition/math/Angle.hh` and `ignition::math::Angle`.\r\n\r\n5. Eventually make `ignition-math` required and delete all the `.cc` files in `gazebo/math`.\r\n\r\nOther caveats:\r\n\r\n1. I had to remove `class Angle` from `gazebo/math/MathTypes.hh` (a6c6ada) because it was causing problems. I'm not sure if this is a big deal or not or if it will be for other math classes.\r\n\r\n2. I saw a conflict between something in `gazebo/math/Helpers.hh` and `ignition/math/Helpers.hh`, though I can't remember where I saw it. Hopefully jenkins shows it.", "title": "Integrate ignition-math (alternative to pull request #1534)", "destination": {"commit": {"hash": "968df3ac24e9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/968df3ac24e9.json"}, "html": {"href": "#!/osrf/gazebo/commits/968df3ac24e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8d05e00177d9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8d05e00177d9.json"}, "html": {"href": "#!/osrf/gazebo/commits/8d05e00177d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ign_math_default_scpeters"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-03-20T17:19:39.587061+00:00"}, "pull_request": {"type": "pullrequest", "id": 1535, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1535.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1535"}}, "title": "Integrate ignition-math (alternative to pull request #1534)"}}, {"update": {"description": "pull request #1534 presents one approach to integrating the [ignition-math](https://bitbucket.org/ignitionrobotics/ign-math) library into gazebo as an eventual replacement for the `gazebo::math` classes. This pull request presents another approach.\r\n\r\nSwitching to `ignition-math` will require changes to both gazebo code and downstream gazebo plugin code. It's my understanding that the philosophy of pull request #1534 is to encourage everyone to stop using `gazebo/math/*.hh` header files, `gazebo::math::` classes and helper functions, and start using `ignition-math` instead. This will also require adapting to some API differences between `ignition-math` and `gazebo::math`.\r\n\r\nThis will be a lot of work/pain. It would be one thing if it was only pain for us, but it will also affect our downstream users who write gazebo plugins using math classes, which is likely almost 100% since math is our lowest-level library. It would actually be even worse for our users, who would need to use `#ifdef`'s if they want their plugin to support multiple versions of gazebo. I have an alternative in this pull request that could reduce the pain of transition for ourselves and our users.\r\n\r\nCaveat: I haven't fully implemented it; so it might not work, but I think it's worth discussing. I'm willing to support the approach in pull request #1534, but I'd like this approach to at least be considered.\r\n\r\nApproach, focusing only on the `math::Angle` class as an example (see Step 4 for the key idea):\r\n\r\n1. Add `ignition-math` as an optional dependency (6df6b70); it will later be required\r\n\r\n2. Deprecate `gazebo::math::Angle` functions that don't match the `ignition::math::Angle` API and add replacement functions that do match (9d1c07f)\r\n\r\n3. Fix `gazebo::math::Angle` deprecation warnings in gazebo (0558a69)\r\n\r\n4. If `ignition-math` is found, typedef `ignition::math::Angle` as `gazebo::math::Angle` and don't compile Angle.cc; this is the key part that could reduce the pain of transition. Users would still be able to include `gazebo/math/Angle.hh` and use `gazebo::math::Angle`, but it would all simply point to `ignition/math/Angle.hh` and `ignition::math::Angle`.\r\n\r\n5. Eventually make `ignition-math` required and delete all the `.cc` files in `gazebo/math`.\r\n\r\nOther caveats:\r\n\r\n1. I had to remove `class Angle` from `gazebo/math/MathTypes.hh` (a6c6ada) because it was causing problems. I'm not sure if this is a big deal or not or if it will be for other math classes.\r\n\r\n2. I saw a conflict between something in `gazebo/math/Helpers.hh` and `ignition/math/Helpers.hh`, though I can't remember where I saw it. Hopefully jenkins shows it.", "title": "Integrate ignition-math (alternative to pull request #1534)", "destination": {"commit": {"hash": "968df3ac24e9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/968df3ac24e9.json"}, "html": {"href": "#!/osrf/gazebo/commits/968df3ac24e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8d05e00177d9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8d05e00177d9.json"}, "html": {"href": "#!/osrf/gazebo/commits/8d05e00177d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ign_math_default_scpeters"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-03-20T17:19:39.556278+00:00"}, "pull_request": {"type": "pullrequest", "id": 1535, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1535.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1535"}}, "title": "Integrate ignition-math (alternative to pull request #1534)"}}]}