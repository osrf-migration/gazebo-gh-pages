{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/39120970.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-39120970"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "I have renamed the service and topic using `GetScopedName`. I noticed that one of the unit tests now fails though because `GetScopedName` returns \"\" for the dummy models in the unit tests, which results in an invalid service name. This happens because the `scopedName` field is not initialized by default while the `name` field is initialized to \"\\_\\_default\\_\\_\". You must call `Load` or `SetName` which in turn call `ComputeScopedName`. Should I modify the joint controller to handle empty model names? Alternatively, should the base class initialize scopedName to something? What do you think?", "markup": "markdown", "html": "<p>I have renamed the service and topic using <code>GetScopedName</code>. I noticed that one of the unit tests now fails though because <code>GetScopedName</code> returns \"\" for the dummy models in the unit tests, which results in an invalid service name. This happens because the <code>scopedName</code> field is not initialized by default while the <code>name</code> field is initialized to \"__default__\". You must call <code>Load</code> or <code>SetName</code> which in turn call <code>ComputeScopedName</code>. Should I modify the joint controller to handle empty model names? Alternatively, should the base class initialize scopedName to something? What do you think?</p>", "type": "rendered"}, "created_on": "2017-06-19T21:00:05.604425+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "inline": {}, "updated_on": "2017-06-19T21:00:05.680735+00:00", "type": "pullrequest_comment", "id": 39120970}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38760350.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38760350"}}, "parent": {"id": 38693649, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38693649.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38693649"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "I have renamed the service using `GetScopedName`. I noticed that one of the unit tests now fails though because `GetScopedName` returns \"\" for the dummy models in the unit tests, which results in an invalid service name. This happens because the `scopedName` field is not initialized by default while the `name` field is initialized to \"\\_\\_default\\_\\_\". You must call `Load` or `SetName` which in turn call `ComputeScopedName`. Should I modify the joint controller to handle empty model names? Alternatively, should the base class initialize scopedName to something? What do you think?", "markup": "markdown", "html": "<p>I have renamed the service using <code>GetScopedName</code>. I noticed that one of the unit tests now fails though because <code>GetScopedName</code> returns \"\" for the dummy models in the unit tests, which results in an invalid service name. This happens because the <code>scopedName</code> field is not initialized by default while the <code>name</code> field is initialized to \"__default__\". You must call <code>Load</code> or <code>SetName</code> which in turn call <code>ComputeScopedName</code>. Should I modify the joint controller to handle empty model names? Alternatively, should the base class initialize scopedName to something? What do you think?</p>", "type": "rendered"}, "created_on": "2017-06-13T20:21:14.468201+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "inline": {}, "updated_on": "2017-06-19T20:59:02.555785+00:00", "type": "pullrequest_comment", "id": 38760350}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "0aa4801140cc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/0aa4801140cc"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/0aa4801140cc"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-19T20:36:08.435994+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38760835.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38760835"}}, "parent": {"id": 38693649, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38693649.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38693649"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "It looks like joint controllers currently cannot be set for nested models because the joint control widget creates a `joint_cmd` topic using a scoped model name while the joint controller expects a topic without a scoped name as you have pointed out. Changing the name affects the API, but since the topics are already inconsistent would it be ok as a bug fix?", "markup": "markdown", "html": "<p>It looks like joint controllers currently cannot be set for nested models because the joint control widget creates a <code>joint_cmd</code> topic using a scoped model name while the joint controller expects a topic without a scoped name as you have pointed out. Changing the name affects the API, but since the topics are already inconsistent would it be ok as a bug fix?</p>", "type": "rendered"}, "created_on": "2017-06-13T20:27:46.875165+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "inline": {}, "updated_on": "2017-06-13T20:27:46.938919+00:00", "type": "pullrequest_comment", "id": 38760835}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38693649.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38693649"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "I don't know if you're familiar with nested models (here's a [tutorial](http://gazebosim.org/tutorials?tut=nested_model&cat=build_robot) and an [example world](#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/worlds/nested_model.world?at=default&fileviewer=file-view-default)), but I think to handle them properly we should use `GetScopedName` and replace `::` with `/` like was done in [Link.cc here](#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-1663:1664). The `joint_cmd` topic should be updated too, but we could save that for a separate PR. It would also be nice to use nested models in one of the tests.", "markup": "markdown", "html": "<p>I don't know if you're familiar with nested models (here's a <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=nested_model&amp;cat=build_robot\" rel=\"nofollow\">tutorial</a> and an <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/worlds/nested_model.world?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">example world</a>), but I think to handle them properly we should use <code>GetScopedName</code> and replace <code>::</code> with <code>/</code> like was done in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-1663:1664\" rel=\"nofollow\">Link.cc here</a>. The <code>joint_cmd</code> topic should be updated too, but we could save that for a separate PR. It would also be nice to use nested models in one of the tests.</p>", "type": "rendered"}, "created_on": "2017-06-13T07:39:29.577657+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-06-13T07:39:29.581612+00:00", "type": "pullrequest_comment", "id": 38693649}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38693575.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38693575"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "I don't know if you're familiar with nested models (here's a [tutorial](http://gazebosim.org/tutorials?tut=nested_model&cat=build_robot) and an [example world](#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/worlds/nested_model.world?at=default&fileviewer=file-view-default)), but I think to handle them properly we should use `GetScopedName` and replace `::` with `/` like was done in [Link.cc here](#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-1663:1664). The `joint_cmd` topic should be updated too, but we could save that for a separate PR. It would also be nice to use nested models in one of the tests.", "markup": "markdown", "html": "<p>I don't know if you're familiar with nested models (here's a <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=nested_model&amp;cat=build_robot\" rel=\"nofollow\">tutorial</a> and an <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/worlds/nested_model.world?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">example world</a>), but I think to handle them properly we should use <code>GetScopedName</code> and replace <code>::</code> with <code>/</code> like was done in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-1663:1664\" rel=\"nofollow\">Link.cc here</a>. The <code>joint_cmd</code> topic should be updated too, but we could save that for a separate PR. It would also be nice to use nested models in one of the tests.</p>", "type": "rendered"}, "created_on": "2017-06-13T07:38:33.939120+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-06-13T07:38:33.941398+00:00", "type": "pullrequest_comment", "id": 38693575}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38691763.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38691763"}}, "parent": {"id": 38653928, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38653928.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38653928"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "+1", "markup": "markdown", "html": "<p>+1</p>", "type": "rendered"}, "created_on": "2017-06-13T07:15:19.753980+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-06-13T07:15:19.757538+00:00", "type": "pullrequest_comment", "id": 38691763}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "f92ea12c19b8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/f92ea12c19b8"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/f92ea12c19b8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-12T21:46:16.482001+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38669305.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38669305"}}, "parent": {"id": 38653629, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38653629.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38653629"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "Cool! I didn't know this was an option. I will add this code to reset the controller targets. I will still leave the PID gains unchanged since the gains are currently remembered by the joint controller object even after a reset.", "markup": "markdown", "html": "<p>Cool! I didn't know this was an option. I will add this code to reset the controller targets. I will still leave the PID gains unchanged since the gains are currently remembered by the joint controller object even after a reset.</p>", "type": "rendered"}, "created_on": "2017-06-12T20:29:22.702754+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "inline": {}, "updated_on": "2017-06-12T20:29:22.747262+00:00", "type": "pullrequest_comment", "id": 38669305}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38653928.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38653928"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "Can we make all the input params `const`? Like `const double _dGain`?", "markup": "markdown", "html": "<p>Can we make all the input params <code>const</code>? Like <code>const double _dGain</code>?</p>", "type": "rendered"}, "created_on": "2017-06-12T16:27:43.678572+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-06-12T16:27:43.682310+00:00", "type": "pullrequest_comment", "id": 38653928}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38653839.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38653839"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "Oh interesting, I never noticed that we were calling these \"sliders\". It must be some left-over from a previous implementation.\n\nNo action needed, I just thought it was curious :)", "markup": "markdown", "html": "<p>Oh interesting, I never noticed that we were calling these \"sliders\". It must be some left-over from a previous implementation.</p>\n<p>No action needed, I just thought it was curious :)</p>", "type": "rendered"}, "created_on": "2017-06-12T16:26:40.431964+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-06-12T16:26:40.435174+00:00", "type": "pullrequest_comment", "id": 38653839}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38653629.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38653629"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "Should these functions still reset the values on the spins?\n\nIf these were removed because we don't want the widgets to trigger new signals, we could wrap the `setValue` calls with the [blockSignals](http://doc.qt.io/qt-5/qobject.html#blockSignals) function, for example:\n\n~~~\nvoid JointForceControl::Reset()\n{\n  this->dataPtr->forceSpin->blockSignals(true);\n  this->dataPtr->forceSpin->setValue(0.0);\n  this->dataPtr->forceSpin->blockSignals(false);\n}\n~~~", "markup": "markdown", "html": "<p>Should these functions still reset the values on the spins?</p>\n<p>If these were removed because we don't want the widgets to trigger new signals, we could wrap the <code>setValue</code> calls with the <a data-is-external-link=\"true\" href=\"http://doc.qt.io/qt-5/qobject.html#blockSignals\" rel=\"nofollow\">blockSignals</a> function, for example:</p>\n<div class=\"codehilite\"><pre><span></span>void JointForceControl::Reset()\n{\n  this-&gt;dataPtr-&gt;forceSpin-&gt;blockSignals(true);\n  this-&gt;dataPtr-&gt;forceSpin-&gt;setValue(0.0);\n  this-&gt;dataPtr-&gt;forceSpin-&gt;blockSignals(false);\n}\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-12T16:23:48.216161+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-06-12T16:23:48.219579+00:00", "type": "pullrequest_comment", "id": 38653629}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38653183.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38653183"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "@pchorak , thanks for the PR!\n\nOne of the styles we adopt in this repo is to use `camelCased` member variable names. Do you mind changing it here?\n\nYou can see other style details [here](http://gazebosim.org/tutorials?tut=contrib_code&cat=development#Style)", "markup": "markdown", "html": "<p>@pchorak , thanks for the PR!</p>\n<p>One of the styles we adopt in this repo is to use <code>camelCased</code> member variable names. Do you mind changing it here?</p>\n<p>You can see other style details <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=contrib_code&amp;cat=development#Style\" rel=\"nofollow\">here</a></p>", "type": "rendered"}, "created_on": "2017-06-12T16:17:37.970845+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-06-12T16:17:38.043416+00:00", "type": "pullrequest_comment", "id": 38653183}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38652027.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38652027"}}, "parent": {"id": 38516315, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38516315.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38516315"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "The windows build has been broken for gazebo 8 and default for a long time, don't worry about it ;)", "markup": "markdown", "html": "<p>The windows build has been broken for gazebo 8 and default for a long time, don't worry about it ;)</p>", "type": "rendered"}, "created_on": "2017-06-12T16:02:53.634580+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-06-12T16:02:53.636994+00:00", "type": "pullrequest_comment", "id": 38652027}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "8b29c05369db", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/8b29c05369db"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/8b29c05369db"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-12T15:56:31.099486+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "8b29c05369db", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/8b29c05369db"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/8b29c05369db"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-12T15:56:29.952739+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38601124.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38601124"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "join -> joint", "markup": "markdown", "html": "<p>join -&gt; joint</p>", "type": "rendered"}, "created_on": "2017-06-12T05:16:00.250577+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-06-12T05:16:00.253503+00:00", "type": "pullrequest_comment", "id": 38601124}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "a1059b151516", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/a1059b151516"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/a1059b151516"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-09T18:55:00.222916+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38567818.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38567818"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "While working on the above changes, I noticed that the \"Reset\" button on the joint control widget does not always fully clear the joint controllers. The issue is that after sending a `JointCmd` message with the reset option to the joint controller, the joint control widget sets the displayed control parameters back to their default values. Doing so triggers Qt signals that ultimately cause the joint control widget to send more messages to the joint controller with the changed values. Thus, some of the controllers may be reactivated depending on the order in which callbacks and messages are processed.\n\nI fix this bug in 2b77710 by removing the code that changes the displayed control parameters to their default values. Now all that the reset command does is to clear the control targets and thus deactivate all the controllers. If you would like to set the control parameters, such as the PID gains, to their default values you can do so manually.\n\nTo illustrate the change I have embedded two GIFs below showing a scenario before and after the fix. To set up the scenario:\n\n1. Insert a double pendulum.\n\n2. Set the force, PID position, and PID velocity targets to 10.0, 1.0, and 5.0 respectively for both joints.\n\n3. Let the pendulum reach an equilibrium.\n\n4. Press the \"Reset\" button.\n\nBefore the fix, some controllers are deactivated but not all, causing the pendulum to jump in response to the remaining controllers.\n![before.gif](data/bitbucket.org/repo/jgXqbo/images/1397746372-before.gif)\n\nAfter the fix, all controllers are deactivated, causing the pendulum to swing passively.\n![after.gif](data/bitbucket.org/repo/jgXqbo/images/3864540333-after.gif)", "markup": "markdown", "html": "<p>While working on the above changes, I noticed that the \"Reset\" button on the joint control widget does not always fully clear the joint controllers. The issue is that after sending a <code>JointCmd</code> message with the reset option to the joint controller, the joint control widget sets the displayed control parameters back to their default values. Doing so triggers Qt signals that ultimately cause the joint control widget to send more messages to the joint controller with the changed values. Thus, some of the controllers may be reactivated depending on the order in which callbacks and messages are processed.</p>\n<p>I fix this bug in <a href=\"#!/osrf/gazebo/commits/2b77710\" rel=\"nofollow\" class=\"ap-connect-link\">2b77710</a> by removing the code that changes the displayed control parameters to their default values. Now all that the reset command does is to clear the control targets and thus deactivate all the controllers. If you would like to set the control parameters, such as the PID gains, to their default values you can do so manually.</p>\n<p>To illustrate the change I have embedded two GIFs below showing a scenario before and after the fix. To set up the scenario:</p>\n<ol>\n<li>\n<p>Insert a double pendulum.</p>\n</li>\n<li>\n<p>Set the force, PID position, and PID velocity targets to 10.0, 1.0, and 5.0 respectively for both joints.</p>\n</li>\n<li>\n<p>Let the pendulum reach an equilibrium.</p>\n</li>\n<li>\n<p>Press the \"Reset\" button.</p>\n</li>\n</ol>\n<p>Before the fix, some controllers are deactivated but not all, causing the pendulum to jump in response to the remaining controllers.\n<img alt=\"before.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/1397746372-before.gif\" /></p>\n<p>After the fix, all controllers are deactivated, causing the pendulum to swing passively.\n<img alt=\"after.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/3864540333-after.gif\" /></p>", "type": "rendered"}, "created_on": "2017-06-09T17:45:18.005001+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": "2017-06-09T17:45:18.134447+00:00", "type": "pullrequest_comment", "id": 38567818}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "2b77710fc586", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/2b77710fc586"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/2b77710fc586"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-09T17:21:27.986658+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38516315.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38516315"}}, "parent": {"id": 38511770, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38511770.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38511770"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "thanks. it looks like something happened with the windows test as well?", "markup": "markdown", "html": "<p>thanks. it looks like something happened with the windows test as well?</p>", "type": "rendered"}, "created_on": "2017-06-09T07:02:48.627065+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": "2017-06-09T07:02:48.675453+00:00", "type": "pullrequest_comment", "id": 38516315}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38511770.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38511770"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "the homebrew build failed due to a connection problem, so I queued another build\n\n* https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1122", "markup": "markdown", "html": "<p>the homebrew build failed due to a connection problem, so I queued another build</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1122\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1122</a></li>\n</ul>", "type": "rendered"}, "created_on": "2017-06-09T05:05:54.243723+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-06-09T05:05:54.246092+00:00", "type": "pullrequest_comment", "id": 38511770}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "1874f88ef997", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/1874f88ef997"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/1874f88ef997"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-09T01:10:42.556559+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}, {"update": {"description": "Issue [#295](#!/osrf/gazebo/issues/295/read-controller-joint-values-in-joint) notes that Gazebo's joint control widget does not always show the current values for the corresponding joint controllers. Specifically, if you set control parameters for a model, select a different model, and then select the original model again, the joint control widget will display the default control parameters instead of the actual parameters.\r\n\r\nMy pull request fixes the issue by allowing the `JointControlWidget` to query the `JointController` for the current control parameters. I implemented this behavior with a new service `joint_cmd_req` using `ignition::transport`. I added a node to the private data containers for both the joint controller and joint control widget in order to support the service.\r\n\r\nThe joint control widget requests the current control parameters from the joint controller when the selected model changes and then updates the display accordingly, namely the Qt spin boxes. To facilitate this I added setter functions to the classes that keep track of the spin boxes: `JointForceControl`, `JointPIDPosControl`, and `JointPIDVelControl`. These are all managed by the joint control widget. The code that calls the service and then the setter functions is in `JointControlWidget::SetModelName` because it is called when a new model is selected.\r\n\r\nI added three tests:\r\n\r\n1. The joint controller unit test now checks that the (new) service `joint_cmd_req` returns the correct control parameters.\r\n\r\n2. The joint controller integration test now checks that the control parameters can be set with the `joint_cmd` topic.\r\n\r\n3. The (new) joint control widget integration test checks that the widget reloads the correct control parameters after switching to a different model and back.", "title": "Joint control menu read current values", "destination": {"commit": {"hash": "0a80f1091857", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a80f1091857.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a80f1091857"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "reason": "", "source": {"commit": {"hash": "1874f88ef997", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo/commit/1874f88ef997"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo/commits/1874f88ef997"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/gazebo"}, "html": {"href": "https://bitbucket.org/pchorak/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7130b41e-0983-4752-9e3b-9e2c12cf1268}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "pchorak/gazebo", "uuid": "{7130b41e-0983-4752-9e3b-9e2c12cf1268}"}, "branch": {"name": "joint_control_menu_read_current_values"}}, "state": "OPEN", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "date": "2017-06-09T01:10:42.528154+00:00"}, "pull_request": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}}]}