{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730/comments/38567818.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730/_/diff#comment-38567818"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2730, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2730.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2730"}}, "title": "Joint control menu read current values"}, "content": {"raw": "While working on the above changes, I noticed that the \"Reset\" button on the joint control widget does not always fully clear the joint controllers. The issue is that after sending a `JointCmd` message with the reset option to the joint controller, the joint control widget sets the displayed control parameters back to their default values. Doing so triggers Qt signals that ultimately cause the joint control widget to send more messages to the joint controller with the changed values. Thus, some of the controllers may be reactivated depending on the order in which callbacks and messages are processed.\n\nI fix this bug in 2b77710 by removing the code that changes the displayed control parameters to their default values. Now all that the reset command does is to clear the control targets and thus deactivate all the controllers. If you would like to set the control parameters, such as the PID gains, to their default values you can do so manually.\n\nTo illustrate the change I have embedded two GIFs below showing a scenario before and after the fix. To set up the scenario:\n\n1. Insert a double pendulum.\n\n2. Set the force, PID position, and PID velocity targets to 10.0, 1.0, and 5.0 respectively for both joints.\n\n3. Let the pendulum reach an equilibrium.\n\n4. Press the \"Reset\" button.\n\nBefore the fix, some controllers are deactivated but not all, causing the pendulum to jump in response to the remaining controllers.\n![before.gif](data/bitbucket.org/repo/jgXqbo/images/1397746372-before.gif)\n\nAfter the fix, all controllers are deactivated, causing the pendulum to swing passively.\n![after.gif](data/bitbucket.org/repo/jgXqbo/images/3864540333-after.gif)", "markup": "markdown", "html": "<p>While working on the above changes, I noticed that the \"Reset\" button on the joint control widget does not always fully clear the joint controllers. The issue is that after sending a <code>JointCmd</code> message with the reset option to the joint controller, the joint control widget sets the displayed control parameters back to their default values. Doing so triggers Qt signals that ultimately cause the joint control widget to send more messages to the joint controller with the changed values. Thus, some of the controllers may be reactivated depending on the order in which callbacks and messages are processed.</p>\n<p>I fix this bug in <a href=\"#!/osrf/gazebo/commits/2b77710\" rel=\"nofollow\" class=\"ap-connect-link\">2b77710</a> by removing the code that changes the displayed control parameters to their default values. Now all that the reset command does is to clear the control targets and thus deactivate all the controllers. If you would like to set the control parameters, such as the PID gains, to their default values you can do so manually.</p>\n<p>To illustrate the change I have embedded two GIFs below showing a scenario before and after the fix. To set up the scenario:</p>\n<ol>\n<li>\n<p>Insert a double pendulum.</p>\n</li>\n<li>\n<p>Set the force, PID position, and PID velocity targets to 10.0, 1.0, and 5.0 respectively for both joints.</p>\n</li>\n<li>\n<p>Let the pendulum reach an equilibrium.</p>\n</li>\n<li>\n<p>Press the \"Reset\" button.</p>\n</li>\n</ol>\n<p>Before the fix, some controllers are deactivated but not all, causing the pendulum to jump in response to the remaining controllers.\n<img alt=\"before.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/1397746372-before.gif\" /></p>\n<p>After the fix, all controllers are deactivated, causing the pendulum to swing passively.\n<img alt=\"after.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/3864540333-after.gif\" /></p>", "type": "rendered"}, "created_on": "2017-06-09T17:45:18.005001+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": "2017-06-09T17:45:18.134447+00:00", "type": "pullrequest_comment", "id": 38567818}