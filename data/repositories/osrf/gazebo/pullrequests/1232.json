{"rendered": {"description": {"raw": "As documented in #1299, there can be rogue `gzserver` processes left over from failures of the `INTEGRATION_world_clone` test. It happens only occasionally, but when it does happen, it causes all other tests to fail and ties up the build machine until we manually log in to the machine to kill the process.\r\n\r\nThis pull request modifies the `tools/check_test_ran.py` script to check for leftover `gzserver` processes from the clone test and kill them. It only runs directly after the `INTEGRATION_world_clone` test.\r\n\r\nTo test this, apply the following patch to cause a test failure:\r\n~~~\r\ndiff -r 7cf2bfe6c08a test/integration/CMakeLists.txt\r\n--- a/test/integration/CMakeLists.txt   Fri Oct 10 11:41:12 2014 -0700\r\n+++ b/test/integration/CMakeLists.txt   Tue Oct 14 15:23:37 2014 -0700\r\n@@ -92,6 +92,8 @@\r\n   set_tests_properties(${TEST_TYPE}_factory PROPERTIES TIMEOUT 500)\r\n   set_tests_properties(${TEST_TYPE}_physics PROPERTIES TIMEOUT 500)\r\n\r\n+  set_tests_properties(${TEST_TYPE}_world_clone PROPERTIES TIMEOUT 10)\r\n+\r\n   # Add plugin dependency\r\n   add_dependencies(${TEST_TYPE}_joint_test SpringTestPlugin)\r\n endif()\r\ndiff -r 7cf2bfe6c08a test/integration/world_clone.cc\r\n--- a/test/integration/world_clone.cc   Fri Oct 10 11:41:12 2014 -0700\r\n+++ b/test/integration/world_clone.cc   Tue Oct 14 15:23:37 2014 -0700\r\n@@ -195,7 +195,7 @@\r\n   // Check that the cloned world contains the camera topics.\r\n   output = custom_exec_str(\"gz topic -l\");\r\n   EXPECT_NE(output.find(\"/gazebo/default/camera/\"), std::string::npos);\r\n-\r\n+FAIL();\r\n   // Kill the cloned server. In the case of no presence of gzserver ps will\r\n   // return the own ps process so it probably will do nothing. No effect.\r\n   // This should work on Linux and Mac\r\n~~~\r\nand then run the following command:\r\n~~~\r\n$ make test ARGS=\"-VV -R INTEGRATION_world_clone\"\r\n...\r\n$ ps ax | grep 'gzserver.*clone'\r\n~~~\r\nApply the patch to default to see the failure, apply it to this branch to see the fix.\r\n\r\nI was going to wait for a time when there were fewer open pull requests, but I just had to [fix another build machine](http://build.osrfoundation.org/job/gazebo-default-devel-precise-amd64/1174/), so I decided it would be helpful sooner than later.", "markup": "markdown", "html": "<p>As documented in <a href=\"#!/osrf/gazebo/issues/1299/integration_world_clone-failures-can-leave\" rel=\"nofollow\" title=\"INTEGRATION_world_clone failures can leave rogue gzserver processes\" class=\"ap-connect-link\"><s>#1299</s></a>, there can be rogue <code>gzserver</code> processes left over from failures of the <code>INTEGRATION_world_clone</code> test. It happens only occasionally, but when it does happen, it causes all other tests to fail and ties up the build machine until we manually log in to the machine to kill the process.</p>\n<p>This pull request modifies the <code>tools/check_test_ran.py</code> script to check for leftover <code>gzserver</code> processes from the clone test and kill them. It only runs directly after the <code>INTEGRATION_world_clone</code> test.</p>\n<p>To test this, apply the following patch to cause a test failure:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 7cf2bfe6c08a test/integration/CMakeLists.txt</span>\n<span class=\"gd\">--- a/test/integration/CMakeLists.txt   Fri Oct 10 11:41:12 2014 -0700</span>\n<span class=\"gi\">+++ b/test/integration/CMakeLists.txt   Tue Oct 14 15:23:37 2014 -0700</span>\n<span class=\"gu\">@@ -92,6 +92,8 @@</span>\n   set_tests_properties(${TEST_TYPE}_factory PROPERTIES TIMEOUT 500)\n   set_tests_properties(${TEST_TYPE}_physics PROPERTIES TIMEOUT 500)\n\n<span class=\"gi\">+  set_tests_properties(${TEST_TYPE}_world_clone PROPERTIES TIMEOUT 10)</span>\n<span class=\"gi\">+</span>\n   # Add plugin dependency\n   add_dependencies(${TEST_TYPE}_joint_test SpringTestPlugin)\n endif()\n<span class=\"gh\">diff -r 7cf2bfe6c08a test/integration/world_clone.cc</span>\n<span class=\"gd\">--- a/test/integration/world_clone.cc   Fri Oct 10 11:41:12 2014 -0700</span>\n<span class=\"gi\">+++ b/test/integration/world_clone.cc   Tue Oct 14 15:23:37 2014 -0700</span>\n<span class=\"gu\">@@ -195,7 +195,7 @@</span>\n   // Check that the cloned world contains the camera topics.\n   output = custom_exec_str(&quot;gz topic -l&quot;);\n   EXPECT_NE(output.find(&quot;/gazebo/default/camera/&quot;), std::string::npos);\n<span class=\"gd\">-</span>\n<span class=\"gi\">+FAIL();</span>\n   // Kill the cloned server. In the case of no presence of gzserver ps will\n   // return the own ps process so it probably will do nothing. No effect.\n   // This should work on Linux and Mac\n</pre></div>\n\n\n<p>and then run the following command:</p>\n<div class=\"codehilite\"><pre><span></span>$ make <span class=\"nb\">test</span> <span class=\"nv\">ARGS</span><span class=\"o\">=</span><span class=\"s2\">&quot;-VV -R INTEGRATION_world_clone&quot;</span>\n...\n$ ps ax <span class=\"p\">|</span> grep <span class=\"s1\">&#39;gzserver.*clone&#39;</span>\n</pre></div>\n\n\n<p>Apply the patch to default to see the failure, apply it to this branch to see the fix.</p>\n<p>I was going to wait for a time when there were fewer open pull requests, but I just had to <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-default-devel-precise-amd64/1174/\" rel=\"nofollow\">fix another build machine</a>, so I decided it would be helpful sooner than later.</p>", "type": "rendered"}, "title": {"raw": "Kill rogue gzservers left over from failed INTEGRATION_world_clone tests (#1299)", "markup": "markdown", "html": "<p>Kill rogue gzservers left over from failed INTEGRATION_world_clone tests (<a href=\"#!/osrf/gazebo/issues/1299/integration_world_clone-failures-can-leave\" rel=\"nofollow\" title=\"INTEGRATION_world_clone failures can leave rogue gzserver processes\" class=\"ap-connect-link\"><s>#1299</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "As documented in #1299, there can be rogue `gzserver` processes left over from failures of the `INTEGRATION_world_clone` test. It happens only occasionally, but when it does happen, it causes all other tests to fail and ties up the build machine until we manually log in to the machine to kill the process.\r\n\r\nThis pull request modifies the `tools/check_test_ran.py` script to check for leftover `gzserver` processes from the clone test and kill them. It only runs directly after the `INTEGRATION_world_clone` test.\r\n\r\nTo test this, apply the following patch to cause a test failure:\r\n~~~\r\ndiff -r 7cf2bfe6c08a test/integration/CMakeLists.txt\r\n--- a/test/integration/CMakeLists.txt   Fri Oct 10 11:41:12 2014 -0700\r\n+++ b/test/integration/CMakeLists.txt   Tue Oct 14 15:23:37 2014 -0700\r\n@@ -92,6 +92,8 @@\r\n   set_tests_properties(${TEST_TYPE}_factory PROPERTIES TIMEOUT 500)\r\n   set_tests_properties(${TEST_TYPE}_physics PROPERTIES TIMEOUT 500)\r\n\r\n+  set_tests_properties(${TEST_TYPE}_world_clone PROPERTIES TIMEOUT 10)\r\n+\r\n   # Add plugin dependency\r\n   add_dependencies(${TEST_TYPE}_joint_test SpringTestPlugin)\r\n endif()\r\ndiff -r 7cf2bfe6c08a test/integration/world_clone.cc\r\n--- a/test/integration/world_clone.cc   Fri Oct 10 11:41:12 2014 -0700\r\n+++ b/test/integration/world_clone.cc   Tue Oct 14 15:23:37 2014 -0700\r\n@@ -195,7 +195,7 @@\r\n   // Check that the cloned world contains the camera topics.\r\n   output = custom_exec_str(\"gz topic -l\");\r\n   EXPECT_NE(output.find(\"/gazebo/default/camera/\"), std::string::npos);\r\n-\r\n+FAIL();\r\n   // Kill the cloned server. In the case of no presence of gzserver ps will\r\n   // return the own ps process so it probably will do nothing. No effect.\r\n   // This should work on Linux and Mac\r\n~~~\r\nand then run the following command:\r\n~~~\r\n$ make test ARGS=\"-VV -R INTEGRATION_world_clone\"\r\n...\r\n$ ps ax | grep 'gzserver.*clone'\r\n~~~\r\nApply the patch to default to see the failure, apply it to this branch to see the fix.\r\n\r\nI was going to wait for a time when there were fewer open pull requests, but I just had to [fix another build machine](http://build.osrfoundation.org/job/gazebo-default-devel-precise-amd64/1174/), so I decided it would be helpful sooner than later.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1232/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d990e7acc6c5%0D8300d38fdb9d?from_pullrequest_id=1232"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1232/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1232.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1232/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1232/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1232"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1232/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d990e7acc6c5%0D8300d38fdb9d?from_pullrequest_id=1232"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1232/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1232/statuses_page=1.json"}}, "title": "Kill rogue gzservers left over from failed INTEGRATION_world_clone tests (#1299)", "close_source_branch": true, "reviewers": [{"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}], "id": 1232, "destination": {"commit": {"hash": "8300d38fdb9d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8300d38fdb9d.json"}, "html": {"href": "#!/osrf/gazebo/commits/8300d38fdb9d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2014-10-16T17:31:11.844473+00:00", "summary": {"raw": "As documented in #1299, there can be rogue `gzserver` processes left over from failures of the `INTEGRATION_world_clone` test. It happens only occasionally, but when it does happen, it causes all other tests to fail and ties up the build machine until we manually log in to the machine to kill the process.\r\n\r\nThis pull request modifies the `tools/check_test_ran.py` script to check for leftover `gzserver` processes from the clone test and kill them. It only runs directly after the `INTEGRATION_world_clone` test.\r\n\r\nTo test this, apply the following patch to cause a test failure:\r\n~~~\r\ndiff -r 7cf2bfe6c08a test/integration/CMakeLists.txt\r\n--- a/test/integration/CMakeLists.txt   Fri Oct 10 11:41:12 2014 -0700\r\n+++ b/test/integration/CMakeLists.txt   Tue Oct 14 15:23:37 2014 -0700\r\n@@ -92,6 +92,8 @@\r\n   set_tests_properties(${TEST_TYPE}_factory PROPERTIES TIMEOUT 500)\r\n   set_tests_properties(${TEST_TYPE}_physics PROPERTIES TIMEOUT 500)\r\n\r\n+  set_tests_properties(${TEST_TYPE}_world_clone PROPERTIES TIMEOUT 10)\r\n+\r\n   # Add plugin dependency\r\n   add_dependencies(${TEST_TYPE}_joint_test SpringTestPlugin)\r\n endif()\r\ndiff -r 7cf2bfe6c08a test/integration/world_clone.cc\r\n--- a/test/integration/world_clone.cc   Fri Oct 10 11:41:12 2014 -0700\r\n+++ b/test/integration/world_clone.cc   Tue Oct 14 15:23:37 2014 -0700\r\n@@ -195,7 +195,7 @@\r\n   // Check that the cloned world contains the camera topics.\r\n   output = custom_exec_str(\"gz topic -l\");\r\n   EXPECT_NE(output.find(\"/gazebo/default/camera/\"), std::string::npos);\r\n-\r\n+FAIL();\r\n   // Kill the cloned server. In the case of no presence of gzserver ps will\r\n   // return the own ps process so it probably will do nothing. No effect.\r\n   // This should work on Linux and Mac\r\n~~~\r\nand then run the following command:\r\n~~~\r\n$ make test ARGS=\"-VV -R INTEGRATION_world_clone\"\r\n...\r\n$ ps ax | grep 'gzserver.*clone'\r\n~~~\r\nApply the patch to default to see the failure, apply it to this branch to see the fix.\r\n\r\nI was going to wait for a time when there were fewer open pull requests, but I just had to [fix another build machine](http://build.osrfoundation.org/job/gazebo-default-devel-precise-amd64/1174/), so I decided it would be helpful sooner than later.", "markup": "markdown", "html": "<p>As documented in <a href=\"#!/osrf/gazebo/issues/1299/integration_world_clone-failures-can-leave\" rel=\"nofollow\" title=\"INTEGRATION_world_clone failures can leave rogue gzserver processes\" class=\"ap-connect-link\"><s>#1299</s></a>, there can be rogue <code>gzserver</code> processes left over from failures of the <code>INTEGRATION_world_clone</code> test. It happens only occasionally, but when it does happen, it causes all other tests to fail and ties up the build machine until we manually log in to the machine to kill the process.</p>\n<p>This pull request modifies the <code>tools/check_test_ran.py</code> script to check for leftover <code>gzserver</code> processes from the clone test and kill them. It only runs directly after the <code>INTEGRATION_world_clone</code> test.</p>\n<p>To test this, apply the following patch to cause a test failure:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 7cf2bfe6c08a test/integration/CMakeLists.txt</span>\n<span class=\"gd\">--- a/test/integration/CMakeLists.txt   Fri Oct 10 11:41:12 2014 -0700</span>\n<span class=\"gi\">+++ b/test/integration/CMakeLists.txt   Tue Oct 14 15:23:37 2014 -0700</span>\n<span class=\"gu\">@@ -92,6 +92,8 @@</span>\n   set_tests_properties(${TEST_TYPE}_factory PROPERTIES TIMEOUT 500)\n   set_tests_properties(${TEST_TYPE}_physics PROPERTIES TIMEOUT 500)\n\n<span class=\"gi\">+  set_tests_properties(${TEST_TYPE}_world_clone PROPERTIES TIMEOUT 10)</span>\n<span class=\"gi\">+</span>\n   # Add plugin dependency\n   add_dependencies(${TEST_TYPE}_joint_test SpringTestPlugin)\n endif()\n<span class=\"gh\">diff -r 7cf2bfe6c08a test/integration/world_clone.cc</span>\n<span class=\"gd\">--- a/test/integration/world_clone.cc   Fri Oct 10 11:41:12 2014 -0700</span>\n<span class=\"gi\">+++ b/test/integration/world_clone.cc   Tue Oct 14 15:23:37 2014 -0700</span>\n<span class=\"gu\">@@ -195,7 +195,7 @@</span>\n   // Check that the cloned world contains the camera topics.\n   output = custom_exec_str(&quot;gz topic -l&quot;);\n   EXPECT_NE(output.find(&quot;/gazebo/default/camera/&quot;), std::string::npos);\n<span class=\"gd\">-</span>\n<span class=\"gi\">+FAIL();</span>\n   // Kill the cloned server. In the case of no presence of gzserver ps will\n   // return the own ps process so it probably will do nothing. No effect.\n   // This should work on Linux and Mac\n</pre></div>\n\n\n<p>and then run the following command:</p>\n<div class=\"codehilite\"><pre><span></span>$ make <span class=\"nb\">test</span> <span class=\"nv\">ARGS</span><span class=\"o\">=</span><span class=\"s2\">&quot;-VV -R INTEGRATION_world_clone&quot;</span>\n...\n$ ps ax <span class=\"p\">|</span> grep <span class=\"s1\">&#39;gzserver.*clone&#39;</span>\n</pre></div>\n\n\n<p>Apply the patch to default to see the failure, apply it to this branch to see the fix.</p>\n<p>I was going to wait for a time when there were fewer open pull requests, but I just had to <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-default-devel-precise-amd64/1174/\" rel=\"nofollow\">fix another build machine</a>, so I decided it would be helpful sooner than later.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c3aa63cd6663", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c3aa63cd6663.json"}, "html": {"href": "#!/osrf/gazebo/commits/c3aa63cd6663"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_1299"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2014-10-27T21:37:02.639951+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-24T19:21:36.736975+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-22T19:15:00.155944+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2014-10-27T22:13:33.128339+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "d990e7acc6c5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d990e7acc6c5.json"}, "html": {"href": "#!/osrf/gazebo/commits/d990e7acc6c5"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}