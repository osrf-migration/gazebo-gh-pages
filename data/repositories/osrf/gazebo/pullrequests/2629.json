{"rendered": {"description": {"raw": "This is only a small change which allows more flexibility in the use of ``PhysicsEngine`` (more specifically the ``ContactManager`` which it provides).\r\n\r\nCurrently the policy is that contacts are only processed further if there are subscribers to the contacts topic. Method [ContactMangaer::NewContact()](https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhF99T102) is used by all the ``PhysicsEngine`` implementations to notify about new found contacts. If an object (not NULL) is returned, the contacts processing continues in the ``PhysicsEngine`` implementations, and ``ContactManager`` will have the full information available. However if there are no subscribers, NewContact() returns NULL, effectively skipping to keep the contact point information.\r\n\r\nIt is important (for performance reasons) to have a means to skip further processing, and having the subscriber criterion is one way to proclaim interest in more information about the contacts. However it would be great to have another option to proclaim this interest and allow contacts processing, without the need to create a subscriber to the topic.\r\nThis PR addresses this by adding a method [ContactManager::SetEnforceContacts(true)](https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhT108)  which allows to enforce the contact point handling even if there are no subscribers. By default this behaviour is disabled, so the changes will not have any effects on previous applications which do not explicitly call this function with true.\r\n\r\nExample use case: In the physics engine test framework I'm working on at the moment, I use PhysicsEngine directly and have no subscribers or publishers to communicate with the core Gazebo code. In the tests I need to get the contact points information. I would prefer not having to create a fake subscriber just to be able to get this information out of ContactManager interface. Other users may need the same feature.", "markup": "markdown", "html": "<p>This is only a small change which allows more flexibility in the use of <code>PhysicsEngine</code> (more specifically the <code>ContactManager</code> which it provides).</p>\n<p>Currently the policy is that contacts are only processed further if there are subscribers to the contacts topic. Method <a data-is-external-link=\"true\" href=\"https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhF99T102\" rel=\"nofollow\">ContactMangaer::NewContact()</a> is used by all the <code>PhysicsEngine</code> implementations to notify about new found contacts. If an object (not NULL) is returned, the contacts processing continues in the <code>PhysicsEngine</code> implementations, and <code>ContactManager</code> will have the full information available. However if there are no subscribers, NewContact() returns NULL, effectively skipping to keep the contact point information.</p>\n<p>It is important (for performance reasons) to have a means to skip further processing, and having the subscriber criterion is one way to proclaim interest in more information about the contacts. However it would be great to have another option to proclaim this interest and allow contacts processing, without the need to create a subscriber to the topic.\nThis PR addresses this by adding a method <a data-is-external-link=\"true\" href=\"https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhT108\" rel=\"nofollow\">ContactManager::SetEnforceContacts(true)</a>  which allows to enforce the contact point handling even if there are no subscribers. By default this behaviour is disabled, so the changes will not have any effects on previous applications which do not explicitly call this function with true.</p>\n<p>Example use case: In the physics engine test framework I'm working on at the moment, I use PhysicsEngine directly and have no subscribers or publishers to communicate with the core Gazebo code. In the tests I need to get the contact points information. I would prefer not having to create a fake subscriber just to be able to get this information out of ContactManager interface. Other users may need the same feature.</p>", "type": "rendered"}, "title": {"raw": "Possibility to enforce contact addition in ContactManager even if there are no subscribers", "markup": "markdown", "html": "<p>Possibility to enforce contact addition in ContactManager even if there are no subscribers</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is only a small change which allows more flexibility in the use of ``PhysicsEngine`` (more specifically the ``ContactManager`` which it provides).\r\n\r\nCurrently the policy is that contacts are only processed further if there are subscribers to the contacts topic. Method [ContactMangaer::NewContact()](https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhF99T102) is used by all the ``PhysicsEngine`` implementations to notify about new found contacts. If an object (not NULL) is returned, the contacts processing continues in the ``PhysicsEngine`` implementations, and ``ContactManager`` will have the full information available. However if there are no subscribers, NewContact() returns NULL, effectively skipping to keep the contact point information.\r\n\r\nIt is important (for performance reasons) to have a means to skip further processing, and having the subscriber criterion is one way to proclaim interest in more information about the contacts. However it would be great to have another option to proclaim this interest and allow contacts processing, without the need to create a subscriber to the topic.\r\nThis PR addresses this by adding a method [ContactManager::SetEnforceContacts(true)](https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhT108)  which allows to enforce the contact point handling even if there are no subscribers. By default this behaviour is disabled, so the changes will not have any effects on previous applications which do not explicitly call this function with true.\r\n\r\nExample use case: In the physics engine test framework I'm working on at the moment, I use PhysicsEngine directly and have no subscribers or publishers to communicate with the core Gazebo code. In the tests I need to get the contact points information. I would prefer not having to create a fake subscriber just to be able to get this information out of ContactManager interface. Other users may need the same feature.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2629/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:6f343883a0b2%0D7d7c37d66d00?from_pullrequest_id=2629"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2629/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2629.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2629/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2629/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2629"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2629/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:6f343883a0b2%0D7d7c37d66d00?from_pullrequest_id=2629"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2629/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2629/statuses_page=1.json"}}, "title": "Possibility to enforce contact addition in ContactManager even if there are no subscribers", "close_source_branch": false, "reviewers": [], "id": 2629, "destination": {"commit": {"hash": "7d7c37d66d00", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7d7c37d66d00.json"}, "html": {"href": "#!/osrf/gazebo/commits/7d7c37d66d00"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-01-31T01:53:18.818098+00:00", "summary": {"raw": "This is only a small change which allows more flexibility in the use of ``PhysicsEngine`` (more specifically the ``ContactManager`` which it provides).\r\n\r\nCurrently the policy is that contacts are only processed further if there are subscribers to the contacts topic. Method [ContactMangaer::NewContact()](https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhF99T102) is used by all the ``PhysicsEngine`` implementations to notify about new found contacts. If an object (not NULL) is returned, the contacts processing continues in the ``PhysicsEngine`` implementations, and ``ContactManager`` will have the full information available. However if there are no subscribers, NewContact() returns NULL, effectively skipping to keep the contact point information.\r\n\r\nIt is important (for performance reasons) to have a means to skip further processing, and having the subscriber criterion is one way to proclaim interest in more information about the contacts. However it would be great to have another option to proclaim this interest and allow contacts processing, without the need to create a subscriber to the topic.\r\nThis PR addresses this by adding a method [ContactManager::SetEnforceContacts(true)](https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhT108)  which allows to enforce the contact point handling even if there are no subscribers. By default this behaviour is disabled, so the changes will not have any effects on previous applications which do not explicitly call this function with true.\r\n\r\nExample use case: In the physics engine test framework I'm working on at the moment, I use PhysicsEngine directly and have no subscribers or publishers to communicate with the core Gazebo code. In the tests I need to get the contact points information. I would prefer not having to create a fake subscriber just to be able to get this information out of ContactManager interface. Other users may need the same feature.", "markup": "markdown", "html": "<p>This is only a small change which allows more flexibility in the use of <code>PhysicsEngine</code> (more specifically the <code>ContactManager</code> which it provides).</p>\n<p>Currently the policy is that contacts are only processed further if there are subscribers to the contacts topic. Method <a data-is-external-link=\"true\" href=\"https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhF99T102\" rel=\"nofollow\">ContactMangaer::NewContact()</a> is used by all the <code>PhysicsEngine</code> implementations to notify about new found contacts. If an object (not NULL) is returned, the contacts processing continues in the <code>PhysicsEngine</code> implementations, and <code>ContactManager</code> will have the full information available. However if there are no subscribers, NewContact() returns NULL, effectively skipping to keep the contact point information.</p>\n<p>It is important (for performance reasons) to have a means to skip further processing, and having the subscriber criterion is one way to proclaim interest in more information about the contacts. However it would be great to have another option to proclaim this interest and allow contacts processing, without the need to create a subscriber to the topic.\nThis PR addresses this by adding a method <a data-is-external-link=\"true\" href=\"https://bitbucket.org/JenniferBuehler/gazebo/commits/2251e3885184c88099722869a34d552198e5c728#Lgazebo/physics/ContactManager.hhT108\" rel=\"nofollow\">ContactManager::SetEnforceContacts(true)</a>  which allows to enforce the contact point handling even if there are no subscribers. By default this behaviour is disabled, so the changes will not have any effects on previous applications which do not explicitly call this function with true.</p>\n<p>Example use case: In the physics engine test framework I'm working on at the moment, I use PhysicsEngine directly and have no subscribers or publishers to communicate with the core Gazebo code. In the tests I need to get the contact points information. I would prefer not having to create a fake subscriber just to be able to get this information out of ContactManager interface. Other users may need the same feature.</p>", "type": "rendered"}, "source": {"commit": {"hash": "bcb190a58c3c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/bcb190a58c3c"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/bcb190a58c3c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "contact_manager_enforcable"}}, "comment_count": 67, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-04-24T23:41:42.923003+00:00", "type": "participant", "approved": false, "user": {"display_name": "Adam Allevato", "uuid": "{c965e728-d481-47a0-9606-7b6a37c81756}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc965e728-d481-47a0-9606-7b6a37c81756%7D"}, "html": {"href": "https://bitbucket.org/%7Bc965e728-d481-47a0-9606-7b6a37c81756%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9a693453-196b-4239-a73f-1c1196479e6f/df6990f4-3430-4676-bc69-cbe57fc2faf6/128"}}, "nickname": "Kukanani", "type": "user", "account_id": "557058:9a693453-196b-4239-a73f-1c1196479e6f"}}, {"role": "PARTICIPANT", "participated_on": "2017-04-13T23:21:17.631374+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-05-10T01:04:15.323376+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}}, {"role": "PARTICIPANT", "participated_on": "2017-05-09T00:03:06.088299+00:00", "type": "participant", "approved": true, "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}}, {"role": "PARTICIPANT", "participated_on": "2017-02-23T19:37:13.499745+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-05-10T00:46:50.753033+00:00", "type": "participant", "approved": false, "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}}, {"role": "PARTICIPANT", "participated_on": "2017-02-13T18:32:08.797914+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2017-02-24T01:09:49.084741+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-03-24T02:40:11.837214+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-05-10T01:04:15.349102+00:00", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "merge_commit": {"hash": "6f343883a0b2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6f343883a0b2.json"}, "html": {"href": "#!/osrf/gazebo/commits/6f343883a0b2"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}