{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1818/comments/8464043.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=CMakeLists.txt"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1818/_/diff#comment-8464043"}}, "parent": {"id": 8463722, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1818/comments/8463722.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1818/_/diff#comment-8463722"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1818, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1818.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1818"}}, "title": "Add extra gazebo libraries to config.cmake and pkg_config"}, "content": {"raw": "I believe our case is slightly different than boost because we know that all the libraries are installed and available. I guess the user needs to specify which boost components wants because there are multiple options and not all of them might be installed.\n\nIs there any reason for treating this library differently? If I'm creating a model plugin I probably don't need to link with `libgazebo_rendering` but `GAZEBO_LIBRARIES` includes it. As far as I know the linkers are pretty smart deciding to ignore something that is not needed. The advantage that I see is that for the users Gazebo is easier to use and they don't need to know anything about our implementation details.\n\nI can be convinced otherwise, just wanted to know about this library discrimination :) ", "markup": "markdown", "html": "<p>I believe our case is slightly different than boost because we know that all the libraries are installed and available. I guess the user needs to specify which boost components wants because there are multiple options and not all of them might be installed.</p>\n<p>Is there any reason for treating this library differently? If I'm creating a model plugin I probably don't need to link with <code>libgazebo_rendering</code> but <code>GAZEBO_LIBRARIES</code> includes it. As far as I know the linkers are pretty smart deciding to ignore something that is not needed. The advantage that I see is that for the users Gazebo is easier to use and they don't need to know anything about our implementation details.</p>\n<p>I can be convinced otherwise, just wanted to know about this library discrimination :) </p>", "type": "rendered"}, "created_on": "2015-07-23T00:19:11.427202+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": null, "from": null, "outdated": false, "path": "CMakeLists.txt"}, "updated_on": "2015-07-23T00:19:11.433560+00:00", "type": "pullrequest_comment", "id": 8464043}