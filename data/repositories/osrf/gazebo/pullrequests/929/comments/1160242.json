{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/929/comments/1160242.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/929/_/diff#comment-1160242"}}, "parent": {"id": 1144254, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/929/comments/1144254.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/929/_/diff#comment-1144254"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 929, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/929.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/929"}}, "title": "Simplify the process of using gazebo as a library"}, "content": {"raw": "Looking into this a bit, I'm not sure the waitForNamespaces function is being used properly. Currently it waits a specified period of time and returns true if namespaces are found, otherwise false. None of the places that call that function actually check the return value though.\n\nI did some gdb and the complaint appears to arise from the [LogRecord::Add](#!/osrf/gazebo/src/e3ce31c0f22a22d2d3ec5267a136458443d02378/gazebo/util/LogRecord.cc?at=default#cl-312) function:\n~~~\n    frame #0: 0x00000001000619b1 libgazebo_transport.2.dylib`gazebo::transport::Node::Init(this=0x0000000107e2a9a0, _space=<unavailable>) + 689 at Node.cc:84\n    frame #1: 0x0000000102a3c4da libgazebo_util.2.dylib`gazebo::util::LogRecord::Add(this=0x00000001002984f8, _name=0x00007fff5fbff108, _filename=0x00007fff5fbff100, _logCallback=<unavailable>)>) + 1418 at LogRecord.cc:312\n    frame #2: 0x0000000100215d23 libgazebo_physics.2.dylib`gazebo::physics::World::Init(this=0x0000000108880200) + 1523 at World.cc:341\n    frame #3: 0x000000010114ad1d libgazebo.2.dylib`gazebo::loadWorld(_worldFile=<unavailable>) + 925 at gazebo.cc:278\n    frame #4: 0x0000000100005a12 custom_main`main + 178\n~~~", "markup": "markdown", "html": "<p>Looking into this a bit, I'm not sure the waitForNamespaces function is being used properly. Currently it waits a specified period of time and returns true if namespaces are found, otherwise false. None of the places that call that function actually check the return value though.</p>\n<p>I did some gdb and the complaint appears to arise from the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/e3ce31c0f22a22d2d3ec5267a136458443d02378/gazebo/util/LogRecord.cc?at=default#cl-312\" rel=\"nofollow\">LogRecord::Add</a> function:</p>\n<div class=\"codehilite\"><pre><span></span>    frame #0: 0x00000001000619b1 libgazebo_transport.2.dylib`gazebo::transport::Node::Init(this=0x0000000107e2a9a0, _space=&lt;unavailable&gt;) + 689 at Node.cc:84\n    frame #1: 0x0000000102a3c4da libgazebo_util.2.dylib`gazebo::util::LogRecord::Add(this=0x00000001002984f8, _name=0x00007fff5fbff108, _filename=0x00007fff5fbff100, _logCallback=&lt;unavailable&gt;)&gt;) + 1418 at LogRecord.cc:312\n    frame #2: 0x0000000100215d23 libgazebo_physics.2.dylib`gazebo::physics::World::Init(this=0x0000000108880200) + 1523 at World.cc:341\n    frame #3: 0x000000010114ad1d libgazebo.2.dylib`gazebo::loadWorld(_worldFile=&lt;unavailable&gt;) + 925 at gazebo.cc:278\n    frame #4: 0x0000000100005a12 custom_main`main + 178\n</pre></div>", "type": "rendered"}, "created_on": "2014-02-01T08:19:01.801716+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-02-01T08:19:01.812309+00:00", "type": "pullrequest_comment", "id": 1160242}