{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2420/comments/22121820.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2420/_/diff#comment-22121820"}}, "parent": {"id": 22118085, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2420/comments/22118085.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2420/_/diff#comment-22118085"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2420, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2420.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2420"}}, "title": "Get plugin info with Ignition transport service"}, "content": {"raw": "I see, I agree that it makes sense to do a single entry point for the service. My comment was more related with the `PluginInfo()` function, not the service callback. The `PluginInfo()` function in `World` handles all plugin types. One alternative would be to process the type of the request (model/world plugin) inside `pluginInfoService()`, and then, only call `model->PluginInfo()` or `this->PluginInfo()`. To summarize, we could move part of the logic that parses the request to `PluginInfoService()` and restrict `World::PluginInfo()` to only return information about world plugins.\n\nIn any case, this suggestion is totally optional. If you feel it's better as it is I'm totally OK with that. Just something to think about it.", "markup": "markdown", "html": "<p>I see, I agree that it makes sense to do a single entry point for the service. My comment was more related with the <code>PluginInfo()</code> function, not the service callback. The <code>PluginInfo()</code> function in <code>World</code> handles all plugin types. One alternative would be to process the type of the request (model/world plugin) inside <code>pluginInfoService()</code>, and then, only call <code>model-&gt;PluginInfo()</code> or <code>this-&gt;PluginInfo()</code>. To summarize, we could move part of the logic that parses the request to <code>PluginInfoService()</code> and restrict <code>World::PluginInfo()</code> to only return information about world plugins.</p>\n<p>In any case, this suggestion is totally optional. If you feel it's better as it is I'm totally OK with that. Just something to think about it.</p>", "type": "rendered"}, "created_on": "2016-08-09T17:26:48.464209+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-08-09T17:35:16.135187+00:00", "type": "pullrequest_comment", "id": 22121820}