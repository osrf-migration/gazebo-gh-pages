{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/477/comments/213700.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/477/_/diff#comment-213700"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 477, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/477.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/477"}}, "title": "gpu ray sensor"}, "content": {"raw": "So the good news is: it does run faster on the current heightmaps than the ODE based lidar (this does not mean that gazebo heightmaps are awesome now! there's still 3 or 4 bugs left :| ).\n\nThe bad news however is: it seems to be \"kinda\" buggy when rotating the sensor and/or when using it with Atlas: http://www.youtube.com/watch?v=hqop4k_G4xc\n\nSorry for the laggy video, it was recorded on my laptop which also explains the low real-time factor - the missing textures are due to me mixing this branch with the drcsim textures fork.\n\nAs you can see in the video the lidar seems to \"crop off\" regions / detects obstacles that aren't actually there / whatever is going on as it rotates ... so this seems to be either an issue of the lidar rotating or an issue with Atlas' head model or a combination of both.\n\nThe sensor used for Atlas was\n\n    <sensor name=\"head_hokuyo_sensor\" type=\"gpu_ray\">\n      <pose>0 0 0 0 0 0</pose>\n      <visualize>true</visualize>\n      <update_rate>40</update_rate>\n      <topic>gpu_scan</topic>\n      <ray>\n        <scan>\n          <horizontal>\n            <samples>720</samples>\n            <resolution>1</resolution>\n            <min_angle>-1.570796</min_angle>\n            <max_angle>1.570796</max_angle>\n          </horizontal>\n        </scan>\n        <range>\n          <min>0.10</min>\n          <max>30.0</max>\n          <resolution>0.01</resolution>\n        </range><!--\n        <noise>\n          <type>gaussian</type>\n          <!- Noise parameters based on published spec for Hokuyo laser\n               achieving \"+-30mm\" accuracy at range < 10m.  A mean of 0.0m and\n               stddev of 0.01m will put 99.7% of samples within 0.03m of the true\n               reading.-> \n          <mean>0.0</mean>\n          <stddev>0.01</stddev>\n        </noise>-->\n      </ray><!--\n      <plugin filename=\"libgazebo_ros_laser.so\" name=\"gazebo_ros_head_hokuyo_controller\">\n        <topicName>/multisense_sl/laser/scan</topicName>\n        <frameName>head_hokuyo_frame</frameName>\n      </plugin>-->\n    </sensor>\n\n", "markup": "markdown", "html": "<p>So the good news is: it does run faster on the current heightmaps than the ODE based lidar (this does not mean that gazebo heightmaps are awesome now! there's still 3 or 4 bugs left :| ).</p>\n<p>The bad news however is: it seems to be \"kinda\" buggy when rotating the sensor and/or when using it with Atlas: <a href=\"http://www.youtube.com/watch?v=hqop4k_G4xc\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.youtube.com/watch?v=hqop4k_G4xc</a></p>\n<p>Sorry for the laggy video, it was recorded on my laptop which also explains the low real-time factor - the missing textures are due to me mixing this branch with the drcsim textures fork.</p>\n<p>As you can see in the video the lidar seems to \"crop off\" regions / detects obstacles that aren't actually there / whatever is going on as it rotates ... so this seems to be either an issue of the lidar rotating or an issue with Atlas' head model or a combination of both.</p>\n<p>The sensor used for Atlas was</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sensor</span> <span class=\"na\">name=</span><span class=\"s\">&quot;head_hokuyo_sensor&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;gpu_ray&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;visualize&gt;</span>true<span class=\"nt\">&lt;/visualize&gt;</span>\n  <span class=\"nt\">&lt;update_rate&gt;</span>40<span class=\"nt\">&lt;/update_rate&gt;</span>\n  <span class=\"nt\">&lt;topic&gt;</span>gpu_scan<span class=\"nt\">&lt;/topic&gt;</span>\n  <span class=\"nt\">&lt;ray&gt;</span>\n    <span class=\"nt\">&lt;scan&gt;</span>\n      <span class=\"nt\">&lt;horizontal&gt;</span>\n        <span class=\"nt\">&lt;samples&gt;</span>720<span class=\"nt\">&lt;/samples&gt;</span>\n        <span class=\"nt\">&lt;resolution&gt;</span>1<span class=\"nt\">&lt;/resolution&gt;</span>\n        <span class=\"nt\">&lt;min_angle&gt;</span>-1.570796<span class=\"nt\">&lt;/min_angle&gt;</span>\n        <span class=\"nt\">&lt;max_angle&gt;</span>1.570796<span class=\"nt\">&lt;/max_angle&gt;</span>\n      <span class=\"nt\">&lt;/horizontal&gt;</span>\n    <span class=\"nt\">&lt;/scan&gt;</span>\n    <span class=\"nt\">&lt;range&gt;</span>\n      <span class=\"nt\">&lt;min&gt;</span>0.10<span class=\"nt\">&lt;/min&gt;</span>\n      <span class=\"nt\">&lt;max&gt;</span>30.0<span class=\"nt\">&lt;/max&gt;</span>\n      <span class=\"nt\">&lt;resolution&gt;</span>0.01<span class=\"nt\">&lt;/resolution&gt;</span>\n    <span class=\"nt\">&lt;/range&gt;</span><span class=\"c\">&lt;!--</span>\n<span class=\"c\">    &lt;noise&gt;</span>\n<span class=\"c\">      &lt;type&gt;gaussian&lt;/type&gt;</span>\n<span class=\"c\">      &lt;!- Noise parameters based on published spec for Hokuyo laser</span>\n<span class=\"c\">           achieving &quot;+-30mm&quot; accuracy at range &lt; 10m.  A mean of 0.0m and</span>\n<span class=\"c\">           stddev of 0.01m will put 99.7% of samples within 0.03m of the true</span>\n<span class=\"c\">           reading.-&gt; </span>\n<span class=\"c\">      &lt;mean&gt;0.0&lt;/mean&gt;</span>\n<span class=\"c\">      &lt;stddev&gt;0.01&lt;/stddev&gt;</span>\n<span class=\"c\">    &lt;/noise&gt;--&gt;</span>\n  <span class=\"nt\">&lt;/ray&gt;</span><span class=\"c\">&lt;!--</span>\n<span class=\"c\">  &lt;plugin filename=&quot;libgazebo_ros_laser.so&quot; name=&quot;gazebo_ros_head_hokuyo_controller&quot;&gt;</span>\n<span class=\"c\">    &lt;topicName&gt;/multisense_sl/laser/scan&lt;/topicName&gt;</span>\n<span class=\"c\">    &lt;frameName&gt;head_hokuyo_frame&lt;/frameName&gt;</span>\n<span class=\"c\">  &lt;/plugin&gt;--&gt;</span>\n<span class=\"nt\">&lt;/sensor&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-04-23T06:11:11.661047+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": "2013-04-23T06:11:11.789234+00:00", "type": "pullrequest_comment", "id": 213700}