{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1402/comments/4856569.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=gazebo%2Frendering%2FVisual.hh"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1402/_/diff#comment-4856569"}}, "parent": {"id": 4838934, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1402/comments/4838934.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1402/_/diff#comment-4838934"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1402, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1402.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1402"}}, "title": "Update Visual's get/set functions and add unit tests"}, "content": {"raw": "yes agreed. I added more descriptions to the doxygen comment in 7ceefb5. We could subclass if there's a strong reason to do so. I think our Visual class is like a node in a scene tree where it can have child visuals as well as other objects attached to it (very similar to ogre). We could set the specular of a model visual that overrides (or adds) to the child visual's specular value. `GetSpecular` would then return the value local to the model visual itself. But you are correct that the SDF element in this case would be meaningless. We can think about avoid setting the sdf element if it doesn't have a geometry element for example. Note that there is nothing to limit us from attach an object (e.g. a box) to a model visual on the client side for visualization purposes, and `SetSpecular` would change the specular of the object and `GetSpecular` would actually mean something.", "markup": "markdown", "html": "<p>yes agreed. I added more descriptions to the doxygen comment in <a href=\"#!/osrf/gazebo/commits/7ceefb5\" rel=\"nofollow\" class=\"ap-connect-link\">7ceefb5</a>. We could subclass if there's a strong reason to do so. I think our Visual class is like a node in a scene tree where it can have child visuals as well as other objects attached to it (very similar to ogre). We could set the specular of a model visual that overrides (or adds) to the child visual's specular value. <code>GetSpecular</code> would then return the value local to the model visual itself. But you are correct that the SDF element in this case would be meaningless. We can think about avoid setting the sdf element if it doesn't have a geometry element for example. Note that there is nothing to limit us from attach an object (e.g. a box) to a model visual on the client side for visualization purposes, and <code>SetSpecular</code> would change the specular of the object and <code>GetSpecular</code> would actually mean something.</p>", "type": "rendered"}, "created_on": "2015-01-28T19:44:05.418356+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {"to": null, "from": null, "outdated": false, "path": "gazebo/rendering/Visual.hh"}, "updated_on": "2015-01-28T19:44:05.431827+00:00", "type": "pullrequest_comment", "id": 4856569}