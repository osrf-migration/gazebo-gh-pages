{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1402/comments/4838816.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:ccf4a69536ab..c032cdc3eb01?path=gazebo%2Frendering%2FVisual.hh"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1402/_/diff#comment-4838816"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1402, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1402.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1402"}}, "title": "Update Visual's get/set functions and add unit tests"}, "content": {"raw": "Correct me if I'm wrong, but since `Visual` is a pretty general class, here we could be getting a <model> element, <link> element or <visual> element, right? Come to think of it, there are several subclasses of Visual which don't have SDF counterparts, things like `JointVisual`, for which creating and updating all these sdf elements would be unnecessary.\n\nI guess in the future we could subclass `Visual` into things like `ModelVisual` and `LinkVisual` and implement their specific functions which refer to SDF. Because as of now, I don't think it makes much sense to call, for example, `GetSpecular` on a visual that represents a model, because this visual basically exists to hold the link visuals and has no material of its own, so we might get some meaningless value from this function. Does it make sense?\n\nI guess what I want to say for now is that maybe at least in the documentation we could make it clear that several SDF elements are represented by `Visual`. Something like \"Get the SDF element represented by this visual. It could be, for example, a model, a link or a visual element.\"...\n\nI hope I didn't say a bunch of crazy stuff :]", "markup": "markdown", "html": "<p>Correct me if I'm wrong, but since <code>Visual</code> is a pretty general class, here we could be getting a &lt;model&gt; element, &lt;link&gt; element or &lt;visual&gt; element, right? Come to think of it, there are several subclasses of Visual which don't have SDF counterparts, things like <code>JointVisual</code>, for which creating and updating all these sdf elements would be unnecessary.</p>\n<p>I guess in the future we could subclass <code>Visual</code> into things like <code>ModelVisual</code> and <code>LinkVisual</code> and implement their specific functions which refer to SDF. Because as of now, I don't think it makes much sense to call, for example, <code>GetSpecular</code> on a visual that represents a model, because this visual basically exists to hold the link visuals and has no material of its own, so we might get some meaningless value from this function. Does it make sense?</p>\n<p>I guess what I want to say for now is that maybe at least in the documentation we could make it clear that several SDF elements are represented by <code>Visual</code>. Something like \"Get the SDF element represented by this visual. It could be, for example, a model, a link or a visual element.\"...</p>\n<p>I hope I didn't say a bunch of crazy stuff :]</p>", "type": "rendered"}, "created_on": "2015-01-28T01:53:54.693542+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 109, "from": null, "outdated": true, "path": "gazebo/rendering/Visual.hh"}, "updated_on": "2015-01-28T01:53:54.701456+00:00", "type": "pullrequest_comment", "id": 4838816}