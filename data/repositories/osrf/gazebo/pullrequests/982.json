{"rendered": {"description": {"raw": "In order to compute the joint error, it is necessary to know the original pose offset of the joint anchor point relative to the parent body (currently only the pose offset for the child body is stored). This pull request creates a class variable `Joint::parentAnchorPose` to store this offset, as well as two accessors: `Joint::GetParentWorldPose()` provides the world pose of the anchor on the parent body, while `Joint::GetAnchorErrorPose()` gives the absolute pose offset between the anchor points on the parent and child.\r\n\r\nThe `Joint::GetAnchorErrorPose()` is then used in the INTEGRATION_joint_spawn test to verify no position offset for joints with only rotational degrees of freedom.", "markup": "markdown", "html": "<p>In order to compute the joint error, it is necessary to know the original pose offset of the joint anchor point relative to the parent body (currently only the pose offset for the child body is stored). This pull request creates a class variable <code>Joint::parentAnchorPose</code> to store this offset, as well as two accessors: <code>Joint::GetParentWorldPose()</code> provides the world pose of the anchor on the parent body, while <code>Joint::GetAnchorErrorPose()</code> gives the absolute pose offset between the anchor points on the parent and child.</p>\n<p>The <code>Joint::GetAnchorErrorPose()</code> is then used in the INTEGRATION_joint_spawn test to verify no position offset for joints with only rotational degrees of freedom.</p>", "type": "rendered"}, "title": {"raw": "Compute joint anchor pose relative to parent (#1029)", "markup": "markdown", "html": "<p>Compute joint anchor pose relative to parent (<a href=\"#!/osrf/gazebo/issues/1029/joint-needs-to-save-relative-offset\" rel=\"nofollow\" title=\"Joint needs to save relative offset between anchor and parent\" class=\"ap-connect-link\"><s>#1029</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "In order to compute the joint error, it is necessary to know the original pose offset of the joint anchor point relative to the parent body (currently only the pose offset for the child body is stored). This pull request creates a class variable `Joint::parentAnchorPose` to store this offset, as well as two accessors: `Joint::GetParentWorldPose()` provides the world pose of the anchor on the parent body, while `Joint::GetAnchorErrorPose()` gives the absolute pose offset between the anchor points on the parent and child.\r\n\r\nThe `Joint::GetAnchorErrorPose()` is then used in the INTEGRATION_joint_spawn test to verify no position offset for joints with only rotational degrees of freedom.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/982/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:3424af5bd7c5%0Db80f28a7f869?from_pullrequest_id=982"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/982/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/982.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/982/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/982/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/982"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/982/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3424af5bd7c5%0Db80f28a7f869?from_pullrequest_id=982"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/982/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/982/statuses_page=1.json"}}, "title": "Compute joint anchor pose relative to parent (#1029)", "close_source_branch": true, "reviewers": [], "id": 982, "destination": {"commit": {"hash": "b80f28a7f869", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b80f28a7f869.json"}, "html": {"href": "#!/osrf/gazebo/commits/b80f28a7f869"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2014-02-25T01:14:22.547756+00:00", "summary": {"raw": "In order to compute the joint error, it is necessary to know the original pose offset of the joint anchor point relative to the parent body (currently only the pose offset for the child body is stored). This pull request creates a class variable `Joint::parentAnchorPose` to store this offset, as well as two accessors: `Joint::GetParentWorldPose()` provides the world pose of the anchor on the parent body, while `Joint::GetAnchorErrorPose()` gives the absolute pose offset between the anchor points on the parent and child.\r\n\r\nThe `Joint::GetAnchorErrorPose()` is then used in the INTEGRATION_joint_spawn test to verify no position offset for joints with only rotational degrees of freedom.", "markup": "markdown", "html": "<p>In order to compute the joint error, it is necessary to know the original pose offset of the joint anchor point relative to the parent body (currently only the pose offset for the child body is stored). This pull request creates a class variable <code>Joint::parentAnchorPose</code> to store this offset, as well as two accessors: <code>Joint::GetParentWorldPose()</code> provides the world pose of the anchor on the parent body, while <code>Joint::GetAnchorErrorPose()</code> gives the absolute pose offset between the anchor points on the parent and child.</p>\n<p>The <code>Joint::GetAnchorErrorPose()</code> is then used in the INTEGRATION_joint_spawn test to verify no position offset for joints with only rotational degrees of freedom.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3a91d3d8b6e9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3a91d3d8b6e9.json"}, "html": {"href": "#!/osrf/gazebo/commits/3a91d3d8b6e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_1029_alt"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-02-25T21:16:15.101899+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-02-25T21:36:46.519442+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2014-02-27T23:34:00.058513+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2014-02-27T23:39:58.226707+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "3424af5bd7c5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3424af5bd7c5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3424af5bd7c5"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}