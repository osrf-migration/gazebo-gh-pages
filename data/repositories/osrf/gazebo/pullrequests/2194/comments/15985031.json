{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2194/comments/15985031.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2194/_/diff#comment-15985031"}}, "parent": {"id": 15931362, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2194/comments/15931362.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2194/_/diff#comment-15931362"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2194, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2194.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2194"}}, "title": "Fix UNIT_ImagesView_TEST"}, "content": {"raw": "I would be very careful using smart pointers with Qt objects. In theory, Qt does its own memory management. When a top level Qt object gets deleted, it cleans up all the children. So if a Qt object has a parent we shouldn't be calling `delete` on it or putting it in a smart pointer (unless we release it before adding it to a parent object).", "markup": "markdown", "html": "<p>I would be very careful using smart pointers with Qt objects. In theory, Qt does its own memory management. When a top level Qt object gets deleted, it cleans up all the children. So if a Qt object has a parent we shouldn't be calling <code>delete</code> on it or putting it in a smart pointer (unless we release it before adding it to a parent object).</p>", "type": "rendered"}, "created_on": "2016-03-19T04:19:57.438407+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2016-03-19T04:19:57.440458+00:00", "type": "pullrequest_comment", "id": 15985031}