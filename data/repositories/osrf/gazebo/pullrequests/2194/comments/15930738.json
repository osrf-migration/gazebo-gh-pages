{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2194/comments/15930738.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2194/_/diff#comment-15930738"}}, "parent": {"id": 15930573, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2194/comments/15930573.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2194/_/diff#comment-15930573"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2194, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2194.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2194"}}, "title": "Fix UNIT_ImagesView_TEST"}, "content": {"raw": "It's more about being explicit in our code about ownership. They were recommending against using \"naked\" new and delete calls. The code in that branch creates `unique_ptr`'s instead of `new` raw pointers, then calls `release()` when passing to qt. It's almost like a form of documentation.", "markup": "markdown", "html": "<p>It's more about being explicit in our code about ownership. They were recommending against using \"naked\" new and delete calls. The code in that branch creates <code>unique_ptr</code>'s instead of <code>new</code> raw pointers, then calls <code>release()</code> when passing to qt. It's almost like a form of documentation.</p>", "type": "rendered"}, "created_on": "2016-03-18T00:28:29.644332+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-03-18T00:28:29.646378+00:00", "type": "pullrequest_comment", "id": 15930738}