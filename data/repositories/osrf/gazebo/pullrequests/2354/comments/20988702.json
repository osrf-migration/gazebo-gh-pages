{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2354/comments/20988702.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:a21a931cde9a..b02acd0882fc?path=gazebo%2Frendering%2FInertiaVisual_TEST.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2354/_/diff#comment-20988702"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2354, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2354.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2354"}}, "title": "Fix InertiaVisual for non-diagonal inertia matrices"}, "content": {"raw": "Now that we have a `RenderingFixture` I think we don't need to spawn a camera sensor. Instead we can update the rendering thread in our test to process events / messages. So something like:\n\n~~~\ndiff -r 3c7d57604343 gazebo/rendering/InertiaVisual_TEST.cc\n--- a/gazebo/rendering/InertiaVisual_TEST.cc\tWed Jul 13 12:16:35 2016 -0700\n+++ b/gazebo/rendering/InertiaVisual_TEST.cc\tWed Jul 13 17:35:23 2016 -0700\n@@ -70,12 +70,6 @@\n {\n   Load(\"worlds/inertia_rotations.world\");\n \n-  // FIXME need a camera otherwise test produces a gl vertex buffer error\n-  ignition::math::Pose3d cameraStartPose(0, 0, 0, 0, 0, 0);\n-  std::string cameraName = \"test_camera\";\n-  SpawnCamera(\"test_camera_model\", cameraName,\n-      cameraStartPose.Pos(), cameraStartPose.Rot().Euler());\n-\n   gazebo::rendering::ScenePtr scene = gazebo::rendering::get_scene();\n   ASSERT_NE(scene, nullptr);\n \n@@ -95,6 +89,10 @@\n   const int maxSleep = 50;\n   while (sleep < maxSleep)\n   {\n+    event::Events::preRender();\n+    event::Events::render();\n+    event::Events::postRender();\n+\n     bool found = true;\n     for (const auto name : inertiaVisualNames)\n     {\n~~~", "markup": "markdown", "html": "<p>Now that we have a <code>RenderingFixture</code> I think we don't need to spawn a camera sensor. Instead we can update the rendering thread in our test to process events / messages. So something like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 3c7d57604343 gazebo/rendering/InertiaVisual_TEST.cc</span>\n<span class=\"gd\">--- a/gazebo/rendering/InertiaVisual_TEST.cc    Wed Jul 13 12:16:35 2016 -0700</span>\n<span class=\"gi\">+++ b/gazebo/rendering/InertiaVisual_TEST.cc    Wed Jul 13 17:35:23 2016 -0700</span>\n<span class=\"gu\">@@ -70,12 +70,6 @@</span>\n {\n   Load(&quot;worlds/inertia_rotations.world&quot;);\n\n<span class=\"gd\">-  // FIXME need a camera otherwise test produces a gl vertex buffer error</span>\n<span class=\"gd\">-  ignition::math::Pose3d cameraStartPose(0, 0, 0, 0, 0, 0);</span>\n<span class=\"gd\">-  std::string cameraName = &quot;test_camera&quot;;</span>\n<span class=\"gd\">-  SpawnCamera(&quot;test_camera_model&quot;, cameraName,</span>\n<span class=\"gd\">-      cameraStartPose.Pos(), cameraStartPose.Rot().Euler());</span>\n<span class=\"gd\">-</span>\n   gazebo::rendering::ScenePtr scene = gazebo::rendering::get_scene();\n   ASSERT_NE(scene, nullptr);\n\n<span class=\"gu\">@@ -95,6 +89,10 @@</span>\n   const int maxSleep = 50;\n   while (sleep &lt; maxSleep)\n   {\n<span class=\"gi\">+    event::Events::preRender();</span>\n<span class=\"gi\">+    event::Events::render();</span>\n<span class=\"gi\">+    event::Events::postRender();</span>\n<span class=\"gi\">+</span>\n     bool found = true;\n     for (const auto name : inertiaVisualNames)\n     {\n</pre></div>", "type": "rendered"}, "created_on": "2016-07-14T00:40:26.224886+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {"to": 77, "from": null, "outdated": true, "path": "gazebo/rendering/InertiaVisual_TEST.cc"}, "updated_on": "2016-07-14T00:40:26.230387+00:00", "type": "pullrequest_comment", "id": 20988702}