{"rendered": {"description": {"raw": "For the glory, here is the last pull request to make Gazebo work on Windows.\r\n\r\n1. Read the comments in `GLWidget`, `WindowManager`, and `RenderEngine` to get an idea of the order of operations that is necessary for rendering on Mac, Windows, and Linux.\r\n\r\n1. GLWidget no longer listens to the `OnCreateScene` event. Previously, the `RenderWidget` would trigger the `createScene` event right after the `GLWidget` was constructed. Now scene creation has been moved directly into GLWidget's constructor.\r\n\r\n1. Casting Window ID's to specific types in `GLWidget::GetOgreHandle` is extremely important for Windows and Linux. Mac doesn't seem to care that much.\r\n\r\n1. Added a test to `MainWindow_TEST` that checks setting the UserCamera via SDF. Added this test because Gazebo could (and did) crash on start if the order of operations in `GLWidget`, `MainWindow`, and `RenderEngine` is not correct. Take this as a hint to try out multiple worlds, configurations, etc.\r\n\r\n1. Fixed the `MainWindow_TEST` by disabling `g_stepAct` when it's created in `MainWindow::CreateActions`, and also removing what seems to be an extraneous call to `TimePanel::OnPlayActionChanged` in `TimePanel::TimePanel`.\r\n\r\n1. `gzserver` will crash on Windows if `ODELink` tries to access the `dirtyPoses` list directly. A helper function has been added, which makes the code a bit cleaner at the cost of having an extra function call. The performance impact should be minimal, and I'm running a test now to check. This segfault is also why I'd like to see if there is a memory leak/overwrite somewhere in the code.\r\n\r\n\r\n[Video proof, or it didn't happen](https://www.youtube.com/watch?v=tNnFxSRQmi8)\r\n\r\n[no gpu is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/258/)\r\n\r\n[homebrew looks ok](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/180/)\r\n\r\n[nvidia clean (except for the render widget test that was fixed)](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/194/)", "markup": "markdown", "html": "<p>For the glory, here is the last pull request to make Gazebo work on Windows.</p>\n<ol>\n<li>\n<p>Read the comments in <code>GLWidget</code>, <code>WindowManager</code>, and <code>RenderEngine</code> to get an idea of the order of operations that is necessary for rendering on Mac, Windows, and Linux.</p>\n</li>\n<li>\n<p>GLWidget no longer listens to the <code>OnCreateScene</code> event. Previously, the <code>RenderWidget</code> would trigger the <code>createScene</code> event right after the <code>GLWidget</code> was constructed. Now scene creation has been moved directly into GLWidget's constructor.</p>\n</li>\n<li>\n<p>Casting Window ID's to specific types in <code>GLWidget::GetOgreHandle</code> is extremely important for Windows and Linux. Mac doesn't seem to care that much.</p>\n</li>\n<li>\n<p>Added a test to <code>MainWindow_TEST</code> that checks setting the UserCamera via SDF. Added this test because Gazebo could (and did) crash on start if the order of operations in <code>GLWidget</code>, <code>MainWindow</code>, and <code>RenderEngine</code> is not correct. Take this as a hint to try out multiple worlds, configurations, etc.</p>\n</li>\n<li>\n<p>Fixed the <code>MainWindow_TEST</code> by disabling <code>g_stepAct</code> when it's created in <code>MainWindow::CreateActions</code>, and also removing what seems to be an extraneous call to <code>TimePanel::OnPlayActionChanged</code> in <code>TimePanel::TimePanel</code>.</p>\n</li>\n<li>\n<p><code>gzserver</code> will crash on Windows if <code>ODELink</code> tries to access the <code>dirtyPoses</code> list directly. A helper function has been added, which makes the code a bit cleaner at the cost of having an extra function call. The performance impact should be minimal, and I'm running a test now to check. This segfault is also why I'd like to see if there is a memory leak/overwrite somewhere in the code.</p>\n</li>\n</ol>\n<p><a data-is-external-link=\"true\" href=\"https://www.youtube.com/watch?v=tNnFxSRQmi8\" rel=\"nofollow\">Video proof, or it didn't happen</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/258/\" rel=\"nofollow\">no gpu is clean</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/180/\" rel=\"nofollow\">homebrew looks ok</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/194/\" rel=\"nofollow\">nvidia clean (except for the render widget test that was fixed)</a></p>", "type": "rendered"}, "title": {"raw": "Windows final", "markup": "markdown", "html": "<p>Windows final</p>", "type": "rendered"}}, "type": "pullrequest", "description": "For the glory, here is the last pull request to make Gazebo work on Windows.\r\n\r\n1. Read the comments in `GLWidget`, `WindowManager`, and `RenderEngine` to get an idea of the order of operations that is necessary for rendering on Mac, Windows, and Linux.\r\n\r\n1. GLWidget no longer listens to the `OnCreateScene` event. Previously, the `RenderWidget` would trigger the `createScene` event right after the `GLWidget` was constructed. Now scene creation has been moved directly into GLWidget's constructor.\r\n\r\n1. Casting Window ID's to specific types in `GLWidget::GetOgreHandle` is extremely important for Windows and Linux. Mac doesn't seem to care that much.\r\n\r\n1. Added a test to `MainWindow_TEST` that checks setting the UserCamera via SDF. Added this test because Gazebo could (and did) crash on start if the order of operations in `GLWidget`, `MainWindow`, and `RenderEngine` is not correct. Take this as a hint to try out multiple worlds, configurations, etc.\r\n\r\n1. Fixed the `MainWindow_TEST` by disabling `g_stepAct` when it's created in `MainWindow::CreateActions`, and also removing what seems to be an extraneous call to `TimePanel::OnPlayActionChanged` in `TimePanel::TimePanel`.\r\n\r\n1. `gzserver` will crash on Windows if `ODELink` tries to access the `dirtyPoses` list directly. A helper function has been added, which makes the code a bit cleaner at the cost of having an extra function call. The performance impact should be minimal, and I'm running a test now to check. This segfault is also why I'd like to see if there is a memory leak/overwrite somewhere in the code.\r\n\r\n\r\n[Video proof, or it didn't happen](https://www.youtube.com/watch?v=tNnFxSRQmi8)\r\n\r\n[no gpu is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/258/)\r\n\r\n[homebrew looks ok](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/180/)\r\n\r\n[nvidia clean (except for the render widget test that was fixed)](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/194/)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1687/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:0a5805a544ad%0D77797448ec8b?from_pullrequest_id=1687"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1687/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1687.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1687/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1687/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1687"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1687/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:0a5805a544ad%0D77797448ec8b?from_pullrequest_id=1687"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1687/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1687/statuses_page=1.json"}}, "title": "Windows final", "close_source_branch": true, "reviewers": [{"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}], "id": 1687, "destination": {"commit": {"hash": "77797448ec8b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/77797448ec8b.json"}, "html": {"href": "#!/osrf/gazebo/commits/77797448ec8b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2015-05-14T16:35:03.652166+00:00", "summary": {"raw": "For the glory, here is the last pull request to make Gazebo work on Windows.\r\n\r\n1. Read the comments in `GLWidget`, `WindowManager`, and `RenderEngine` to get an idea of the order of operations that is necessary for rendering on Mac, Windows, and Linux.\r\n\r\n1. GLWidget no longer listens to the `OnCreateScene` event. Previously, the `RenderWidget` would trigger the `createScene` event right after the `GLWidget` was constructed. Now scene creation has been moved directly into GLWidget's constructor.\r\n\r\n1. Casting Window ID's to specific types in `GLWidget::GetOgreHandle` is extremely important for Windows and Linux. Mac doesn't seem to care that much.\r\n\r\n1. Added a test to `MainWindow_TEST` that checks setting the UserCamera via SDF. Added this test because Gazebo could (and did) crash on start if the order of operations in `GLWidget`, `MainWindow`, and `RenderEngine` is not correct. Take this as a hint to try out multiple worlds, configurations, etc.\r\n\r\n1. Fixed the `MainWindow_TEST` by disabling `g_stepAct` when it's created in `MainWindow::CreateActions`, and also removing what seems to be an extraneous call to `TimePanel::OnPlayActionChanged` in `TimePanel::TimePanel`.\r\n\r\n1. `gzserver` will crash on Windows if `ODELink` tries to access the `dirtyPoses` list directly. A helper function has been added, which makes the code a bit cleaner at the cost of having an extra function call. The performance impact should be minimal, and I'm running a test now to check. This segfault is also why I'd like to see if there is a memory leak/overwrite somewhere in the code.\r\n\r\n\r\n[Video proof, or it didn't happen](https://www.youtube.com/watch?v=tNnFxSRQmi8)\r\n\r\n[no gpu is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/258/)\r\n\r\n[homebrew looks ok](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/180/)\r\n\r\n[nvidia clean (except for the render widget test that was fixed)](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/194/)", "markup": "markdown", "html": "<p>For the glory, here is the last pull request to make Gazebo work on Windows.</p>\n<ol>\n<li>\n<p>Read the comments in <code>GLWidget</code>, <code>WindowManager</code>, and <code>RenderEngine</code> to get an idea of the order of operations that is necessary for rendering on Mac, Windows, and Linux.</p>\n</li>\n<li>\n<p>GLWidget no longer listens to the <code>OnCreateScene</code> event. Previously, the <code>RenderWidget</code> would trigger the <code>createScene</code> event right after the <code>GLWidget</code> was constructed. Now scene creation has been moved directly into GLWidget's constructor.</p>\n</li>\n<li>\n<p>Casting Window ID's to specific types in <code>GLWidget::GetOgreHandle</code> is extremely important for Windows and Linux. Mac doesn't seem to care that much.</p>\n</li>\n<li>\n<p>Added a test to <code>MainWindow_TEST</code> that checks setting the UserCamera via SDF. Added this test because Gazebo could (and did) crash on start if the order of operations in <code>GLWidget</code>, <code>MainWindow</code>, and <code>RenderEngine</code> is not correct. Take this as a hint to try out multiple worlds, configurations, etc.</p>\n</li>\n<li>\n<p>Fixed the <code>MainWindow_TEST</code> by disabling <code>g_stepAct</code> when it's created in <code>MainWindow::CreateActions</code>, and also removing what seems to be an extraneous call to <code>TimePanel::OnPlayActionChanged</code> in <code>TimePanel::TimePanel</code>.</p>\n</li>\n<li>\n<p><code>gzserver</code> will crash on Windows if <code>ODELink</code> tries to access the <code>dirtyPoses</code> list directly. A helper function has been added, which makes the code a bit cleaner at the cost of having an extra function call. The performance impact should be minimal, and I'm running a test now to check. This segfault is also why I'd like to see if there is a memory leak/overwrite somewhere in the code.</p>\n</li>\n</ol>\n<p><a data-is-external-link=\"true\" href=\"https://www.youtube.com/watch?v=tNnFxSRQmi8\" rel=\"nofollow\">Video proof, or it didn't happen</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/258/\" rel=\"nofollow\">no gpu is clean</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/180/\" rel=\"nofollow\">homebrew looks ok</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/194/\" rel=\"nofollow\">nvidia clean (except for the render widget test that was fixed)</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "9b8e866059c9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9b8e866059c9.json"}, "html": {"href": "#!/osrf/gazebo/commits/9b8e866059c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "win_nate2"}}, "comment_count": 28, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2015-05-15T00:52:11.547390+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, {"role": "PARTICIPANT", "participated_on": "2015-05-15T17:22:44.340810+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2015-05-15T14:02:57.348391+00:00", "type": "participant", "approved": false, "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}}, {"role": "REVIEWER", "participated_on": "2015-05-15T03:40:17.582587+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2015-05-15T17:01:48.773450+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "REVIEWER", "participated_on": "2015-05-14T23:06:37.907593+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2015-05-15T17:22:44.355796+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": {"hash": "0a5805a544ad", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a5805a544ad.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a5805a544ad"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}