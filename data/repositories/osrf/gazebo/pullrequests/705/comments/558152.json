{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/705/comments/558152.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/705/_/diff#comment-558152"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 705, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/705.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/705"}}, "title": "Improve timeout error reporting in ServerFixture"}, "content": {"raw": "I think better reporting of failures is good.\n\nAs an aside, I think that many of these timeout failures are caused by `ServerFixture::HasEntity` giving false negatives (ie. entities do exist but `HasEntity` says they do not). I've been testing the following fix (applied to backport_fixes_1.9 branch):\n~~~\ndiff -r 4af863cd149d test/ServerFixture.hh\n--- a/test/ServerFixture.hh\tThu Sep 12 02:29:37 2013 +0200\n+++ b/test/ServerFixture.hh\tThu Sep 12 10:22:04 2013 -0700\n@@ -289,10 +289,18 @@\n \n   protected: bool HasEntity(const std::string &_name)\n              {\n-               boost::mutex::scoped_lock lock(this->receiveMutex);\n-               std::map<std::string, math::Pose>::iterator iter;\n-               iter = this->poses.find(_name);\n-               return iter != this->poses.end();\n+               physics::WorldPtr world = physics::get_world();\n+               if (world)\n+               {\n+                 return (world->GetEntity(_name) != NULL);\n+               }\n+               else\n+               {\n+                 boost::mutex::scoped_lock lock(this->receiveMutex);\n+                 std::map<std::string, math::Pose>::iterator iter;\n+                 iter = this->poses.find(_name);\n+                 return iter != this->poses.end();\n+               }\n              }\n \n   protected: void PrintImage(const std::string &_name, unsigned char **_image,\n~~~\nbut I haven't fully tested it yet. I'm just mentioning this because it seems relevant to this pull request.", "markup": "markdown", "html": "<p>I think better reporting of failures is good.</p>\n<p>As an aside, I think that many of these timeout failures are caused by <code>ServerFixture::HasEntity</code> giving false negatives (ie. entities do exist but <code>HasEntity</code> says they do not). I've been testing the following fix (applied to backport_fixes_1.9 branch):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 4af863cd149d test/ServerFixture.hh</span>\n<span class=\"gd\">--- a/test/ServerFixture.hh Thu Sep 12 02:29:37 2013 +0200</span>\n<span class=\"gi\">+++ b/test/ServerFixture.hh Thu Sep 12 10:22:04 2013 -0700</span>\n<span class=\"gu\">@@ -289,10 +289,18 @@</span>\n\n   protected: bool HasEntity(const std::string &amp;_name)\n              {\n<span class=\"gd\">-               boost::mutex::scoped_lock lock(this-&gt;receiveMutex);</span>\n<span class=\"gd\">-               std::map&lt;std::string, math::Pose&gt;::iterator iter;</span>\n<span class=\"gd\">-               iter = this-&gt;poses.find(_name);</span>\n<span class=\"gd\">-               return iter != this-&gt;poses.end();</span>\n<span class=\"gi\">+               physics::WorldPtr world = physics::get_world();</span>\n<span class=\"gi\">+               if (world)</span>\n<span class=\"gi\">+               {</span>\n<span class=\"gi\">+                 return (world-&gt;GetEntity(_name) != NULL);</span>\n<span class=\"gi\">+               }</span>\n<span class=\"gi\">+               else</span>\n<span class=\"gi\">+               {</span>\n<span class=\"gi\">+                 boost::mutex::scoped_lock lock(this-&gt;receiveMutex);</span>\n<span class=\"gi\">+                 std::map&lt;std::string, math::Pose&gt;::iterator iter;</span>\n<span class=\"gi\">+                 iter = this-&gt;poses.find(_name);</span>\n<span class=\"gi\">+                 return iter != this-&gt;poses.end();</span>\n<span class=\"gi\">+               }</span>\n              }\n\n   protected: void PrintImage(const std::string &amp;_name, unsigned char **_image,\n</pre></div>\n\n\n<p>but I haven't fully tested it yet. I'm just mentioning this because it seems relevant to this pull request.</p>", "type": "rendered"}, "created_on": "2013-09-12T05:18:15.123194+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-09-12T17:24:44.234264+00:00", "type": "pullrequest_comment", "id": 558152}