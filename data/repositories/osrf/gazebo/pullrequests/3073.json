{"rendered": {"description": {"raw": "This pull request adds the VariableGearboxPlugin, which uses piecewise cubic Hermite splines to support arbitrary smooth input-output relationships between the input and output angles of a gearbox. This includes the plugin, an example world, a test, and some added API's to ODE to support this feature.\r\n\r\nThe ODE gearbox joint currently supports joint constraints of the form `angle1 = -ratio * angle2`. In order to support arbitrary constraint profiles, reference angles are added to the linear constraint: `angle1 - refAngle1 = -ratio * (angle2 - refAngle2)`. Then at each time step, the smooth input-output curve is linearized at the current joint state to compute refAngle1, refAngle2, and ratio and solved. API's for setting the refAngle's are added to ODE, which can be accessed via `SetParam` / `GetParam` in the physics Joint interface. Tests are added for these new API's to the `joint_spawn` test.\r\n\r\nThe `VariableGearboxPlugin` is a `ModelPlugin` that takes a `gearbox_joint_name` parameter and multiple `x_y_dydx` parameters. The `x_y_dydx` parameters specify points and slopes on the input-output curve. The snippet below is copied from `variable_gearbox_plugin.world`. Documentation of the spline math is provided in the code.\r\n\r\n* x: angle of input joint\r\n* y: angle of output joint\r\n* dy/dx: instantaneous gear ratio of change in output / change in input.\r\n\r\n~~~\r\n<plugin name=\"variable_gearbox\" filename=\"libVariableGearboxPlugin.so\">\r\n  <gearbox_joint_name>demo_joint_types::gearbox_demo</gearbox_joint_name>\r\n  <x_y_dydx>1.2  -1.2  -1.0</x_y_dydx>\r\n  <x_y_dydx>1.8  -7.5 -20.0</x_y_dydx>\r\n</plugin>\r\n~~~\r\n\r\nThe example world uses the `demo_joint_types` model, which has a pendulum connected via a gearbox to a flywheel. This plugin shifts the gear ratio from a low speed of the flywheel to a high speed as the pendulum swings.", "markup": "markdown", "html": "<p>This pull request adds the VariableGearboxPlugin, which uses piecewise cubic Hermite splines to support arbitrary smooth input-output relationships between the input and output angles of a gearbox. This includes the plugin, an example world, a test, and some added API's to ODE to support this feature.</p>\n<p>The ODE gearbox joint currently supports joint constraints of the form <code>angle1 = -ratio * angle2</code>. In order to support arbitrary constraint profiles, reference angles are added to the linear constraint: <code>angle1 - refAngle1 = -ratio * (angle2 - refAngle2)</code>. Then at each time step, the smooth input-output curve is linearized at the current joint state to compute refAngle1, refAngle2, and ratio and solved. API's for setting the refAngle's are added to ODE, which can be accessed via <code>SetParam</code> / <code>GetParam</code> in the physics Joint interface. Tests are added for these new API's to the <code>joint_spawn</code> test.</p>\n<p>The <code>VariableGearboxPlugin</code> is a <code>ModelPlugin</code> that takes a <code>gearbox_joint_name</code> parameter and multiple <code>x_y_dydx</code> parameters. The <code>x_y_dydx</code> parameters specify points and slopes on the input-output curve. The snippet below is copied from <code>variable_gearbox_plugin.world</code>. Documentation of the spline math is provided in the code.</p>\n<ul>\n<li>x: angle of input joint</li>\n<li>y: angle of output joint</li>\n<li>dy/dx: instantaneous gear ratio of change in output / change in input.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;variable_gearbox&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libVariableGearboxPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;gearbox_joint_name&gt;</span>demo_joint_types::gearbox_demo<span class=\"nt\">&lt;/gearbox_joint_name&gt;</span>\n  <span class=\"nt\">&lt;x_y_dydx&gt;</span>1.2  -1.2  -1.0<span class=\"nt\">&lt;/x_y_dydx&gt;</span>\n  <span class=\"nt\">&lt;x_y_dydx&gt;</span>1.8  -7.5 -20.0<span class=\"nt\">&lt;/x_y_dydx&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>The example world uses the <code>demo_joint_types</code> model, which has a pendulum connected via a gearbox to a flywheel. This plugin shifts the gear ratio from a low speed of the flywheel to a high speed as the pendulum swings.</p>", "type": "rendered"}, "title": {"raw": "VariableGearboxPlugin: use splines to support arbitrary smooth input-output gearbox profiles", "markup": "markdown", "html": "<p>VariableGearboxPlugin: use splines to support arbitrary smooth input-output gearbox profiles</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request adds the VariableGearboxPlugin, which uses piecewise cubic Hermite splines to support arbitrary smooth input-output relationships between the input and output angles of a gearbox. This includes the plugin, an example world, a test, and some added API's to ODE to support this feature.\r\n\r\nThe ODE gearbox joint currently supports joint constraints of the form `angle1 = -ratio * angle2`. In order to support arbitrary constraint profiles, reference angles are added to the linear constraint: `angle1 - refAngle1 = -ratio * (angle2 - refAngle2)`. Then at each time step, the smooth input-output curve is linearized at the current joint state to compute refAngle1, refAngle2, and ratio and solved. API's for setting the refAngle's are added to ODE, which can be accessed via `SetParam` / `GetParam` in the physics Joint interface. Tests are added for these new API's to the `joint_spawn` test.\r\n\r\nThe `VariableGearboxPlugin` is a `ModelPlugin` that takes a `gearbox_joint_name` parameter and multiple `x_y_dydx` parameters. The `x_y_dydx` parameters specify points and slopes on the input-output curve. The snippet below is copied from `variable_gearbox_plugin.world`. Documentation of the spline math is provided in the code.\r\n\r\n* x: angle of input joint\r\n* y: angle of output joint\r\n* dy/dx: instantaneous gear ratio of change in output / change in input.\r\n\r\n~~~\r\n<plugin name=\"variable_gearbox\" filename=\"libVariableGearboxPlugin.so\">\r\n  <gearbox_joint_name>demo_joint_types::gearbox_demo</gearbox_joint_name>\r\n  <x_y_dydx>1.2  -1.2  -1.0</x_y_dydx>\r\n  <x_y_dydx>1.8  -7.5 -20.0</x_y_dydx>\r\n</plugin>\r\n~~~\r\n\r\nThe example world uses the `demo_joint_types` model, which has a pendulum connected via a gearbox to a flywheel. This plugin shifts the gear ratio from a low speed of the flywheel to a high speed as the pendulum swings.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3073/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:3bd1cee63a5e%0Df08b775c293e?from_pullrequest_id=3073"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/3073/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/3073.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/3073/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3073/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3073"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/3073/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3bd1cee63a5e%0Df08b775c293e?from_pullrequest_id=3073"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3073/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/3073/statuses_page=1.json"}}, "title": "VariableGearboxPlugin: use splines to support arbitrary smooth input-output gearbox profiles", "close_source_branch": true, "reviewers": [{"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}], "id": 3073, "destination": {"commit": {"hash": "f08b775c293e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f08b775c293e.json"}, "html": {"href": "#!/osrf/gazebo/commits/f08b775c293e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2019-02-08T16:45:42.146822+00:00", "summary": {"raw": "This pull request adds the VariableGearboxPlugin, which uses piecewise cubic Hermite splines to support arbitrary smooth input-output relationships between the input and output angles of a gearbox. This includes the plugin, an example world, a test, and some added API's to ODE to support this feature.\r\n\r\nThe ODE gearbox joint currently supports joint constraints of the form `angle1 = -ratio * angle2`. In order to support arbitrary constraint profiles, reference angles are added to the linear constraint: `angle1 - refAngle1 = -ratio * (angle2 - refAngle2)`. Then at each time step, the smooth input-output curve is linearized at the current joint state to compute refAngle1, refAngle2, and ratio and solved. API's for setting the refAngle's are added to ODE, which can be accessed via `SetParam` / `GetParam` in the physics Joint interface. Tests are added for these new API's to the `joint_spawn` test.\r\n\r\nThe `VariableGearboxPlugin` is a `ModelPlugin` that takes a `gearbox_joint_name` parameter and multiple `x_y_dydx` parameters. The `x_y_dydx` parameters specify points and slopes on the input-output curve. The snippet below is copied from `variable_gearbox_plugin.world`. Documentation of the spline math is provided in the code.\r\n\r\n* x: angle of input joint\r\n* y: angle of output joint\r\n* dy/dx: instantaneous gear ratio of change in output / change in input.\r\n\r\n~~~\r\n<plugin name=\"variable_gearbox\" filename=\"libVariableGearboxPlugin.so\">\r\n  <gearbox_joint_name>demo_joint_types::gearbox_demo</gearbox_joint_name>\r\n  <x_y_dydx>1.2  -1.2  -1.0</x_y_dydx>\r\n  <x_y_dydx>1.8  -7.5 -20.0</x_y_dydx>\r\n</plugin>\r\n~~~\r\n\r\nThe example world uses the `demo_joint_types` model, which has a pendulum connected via a gearbox to a flywheel. This plugin shifts the gear ratio from a low speed of the flywheel to a high speed as the pendulum swings.", "markup": "markdown", "html": "<p>This pull request adds the VariableGearboxPlugin, which uses piecewise cubic Hermite splines to support arbitrary smooth input-output relationships between the input and output angles of a gearbox. This includes the plugin, an example world, a test, and some added API's to ODE to support this feature.</p>\n<p>The ODE gearbox joint currently supports joint constraints of the form <code>angle1 = -ratio * angle2</code>. In order to support arbitrary constraint profiles, reference angles are added to the linear constraint: <code>angle1 - refAngle1 = -ratio * (angle2 - refAngle2)</code>. Then at each time step, the smooth input-output curve is linearized at the current joint state to compute refAngle1, refAngle2, and ratio and solved. API's for setting the refAngle's are added to ODE, which can be accessed via <code>SetParam</code> / <code>GetParam</code> in the physics Joint interface. Tests are added for these new API's to the <code>joint_spawn</code> test.</p>\n<p>The <code>VariableGearboxPlugin</code> is a <code>ModelPlugin</code> that takes a <code>gearbox_joint_name</code> parameter and multiple <code>x_y_dydx</code> parameters. The <code>x_y_dydx</code> parameters specify points and slopes on the input-output curve. The snippet below is copied from <code>variable_gearbox_plugin.world</code>. Documentation of the spline math is provided in the code.</p>\n<ul>\n<li>x: angle of input joint</li>\n<li>y: angle of output joint</li>\n<li>dy/dx: instantaneous gear ratio of change in output / change in input.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;variable_gearbox&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libVariableGearboxPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;gearbox_joint_name&gt;</span>demo_joint_types::gearbox_demo<span class=\"nt\">&lt;/gearbox_joint_name&gt;</span>\n  <span class=\"nt\">&lt;x_y_dydx&gt;</span>1.2  -1.2  -1.0<span class=\"nt\">&lt;/x_y_dydx&gt;</span>\n  <span class=\"nt\">&lt;x_y_dydx&gt;</span>1.8  -7.5 -20.0<span class=\"nt\">&lt;/x_y_dydx&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>The example world uses the <code>demo_joint_types</code> model, which has a pendulum connected via a gearbox to a flywheel. This plugin shifts the gear ratio from a low speed of the flywheel to a high speed as the pendulum swings.</p>", "type": "rendered"}, "source": {"commit": {"hash": "2ae2a4a8dbe9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2ae2a4a8dbe9.json"}, "html": {"href": "#!/osrf/gazebo/commits/2ae2a4a8dbe9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_reference_angles7"}}, "comment_count": 24, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-03-29T01:42:15.989325+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-04T22:07:02.090908+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-05T00:38:22.977937+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2019-09-05T00:38:53.647804+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "3bd1cee63a5e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3bd1cee63a5e.json"}, "html": {"href": "#!/osrf/gazebo/commits/3bd1cee63a5e"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}