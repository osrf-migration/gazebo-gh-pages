{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344/comments/19840493.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/azaclauson/gazebo_win_fixes_fork:None..None?path=CMakeLists.txt"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344/_/diff#comment-19840493"}}, "parent": {"id": 19799444, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344/comments/19799444.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344/_/diff#comment-19799444"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2344, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344"}}, "title": "Config and cmake fixes for Windows build"}, "content": {"raw": "I've spent another 3 hours looking at finding a better solution for this and have had no joy. I don't think it's a particularly valuable fix in any case since all it ends up doing is setting a fallback hard coded GAZEBO_RESOURCE_PATH that points to a directory way down in the build tree (in my case F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models). In Windows most people are going to move their built executables out of their build tree so that path may not end up existing. Plus it's only a fallback and is only used if the GAZEBO_RESOURCE_PATH environment variable is not set.\n\nAs to the actual problem it is on the cmake side and not on the compiler side (this is the third explanation). With a semi-colon used in the top level CMakeLists.txt:\n\n```\n#!c++\nset(GAZEBO_RESOURCE_PATH \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}/gazebo-${GAZEBO_MAJOR_VERSION};${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}/gazebo_models\")\n```\n\nThe value gets correctly carried across to F:\\gazebo-build\\gazebo\\build_debug_nmake\\gazebo\\common\\CMakeFiles\\gazebo_common.dir\\flags.make\n\n\n```\n#!txt\n# Custom defines: gazebo/common/CMakeFiles/gazebo_common.dir/Console.cc.obj_DEFINES = GAZEBO_PLUGIN_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/lib/gazebo-8/plugins\";GAZEBO_MODEL_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8/models\";GAZEBO_RESOURCE_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models\";GAZEBO_MODEL_DATABASE_URI=\"http://gazebosim.org/models\";GAZEBO_DEFAULT_MASTER_PORT=11345;OGRE_RESOURCE_PATH=\"F:\\gazebo-build\\gazebo\\build_debug_nmake\\..\\..\\OGRE-SDK-1.9.0-vc120-x64-12.03.2016\\lib\\Debug\\opt\"\n```\n\nBut when the custom define gets used it ends up in F:\\gazebo-build\\gazebo\\build_debug_nmake\\gazebo\\common\\CMakeFiles\\gazebo_common.dir\\build.make as:\n\n```\n#!txt\ngazebo\\common\\CMakeFiles\\gazebo_common.dir\\Console.cc.obj: gazebo\\common\\CMakeFiles\\gazebo_common.dir\\flags.make\ngazebo\\common\\CMakeFiles\\gazebo_common.dir\\Console.cc.obj: ..\\gazebo\\common\\Console.cc\n\t@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=F:\\gazebo-build\\gazebo\\build_debug_nmake\\CMakeFiles --progress-num=$(CMAKE_PROGRESS_11) \"Building CXX object gazebo/common/CMakeFiles/gazebo_common.dir/Console.cc.obj\"\n\tcd F:\\gazebo-build\\gazebo\\build_debug_nmake\\gazebo\\common\n\tC:\\PROGRA~2\\MICROS~2.0\\VC\\bin\\X86_AM~1\\cl.exe  @<<\n /nologo /TP $(CXX_DEFINES) -DF:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models\" -DGAZEBO_DEFAULT_MASTER_PORT=11345 -DGAZEBO_MODEL_DATABASE_URI=\\\"http://gazebosim.org/models\\\" -DGAZEBO_MODEL_PATH=\\\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8/models\\\" -DGAZEBO_PLUGIN_PATH=\\\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/lib/gazebo-8/plugins\\\" -DGAZEBO_RESOURCE_PATH=\\\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8 -DOGRE_RESOURCE_PATH=\\\"F:\\gazebo-build\\gazebo\\build_debug_nmake\\..\\..\\OGRE-SDK-1.9.0-vc120-x64-12.03.2016\\lib\\Debug\\opt\\\" $(CXX_INCLUDES) $(CXX_FLAGS) /FoCMakeFiles\\gazebo_common.dir\\Console.cc.obj /FdCMakeFiles\\gazebo_common.dir\\ /FS -c F:\\gazebo-build\\gazebo\\gazebo\\common\\Console.cc\n<<\n\tcd F:\\gazebo-build\\gazebo\\build_debug_nmake\n```\n\nAnd that's where the compiler breaks.\n\nI'm admitting defeat on this one.", "markup": "markdown", "html": "<p>I've spent another 3 hours looking at finding a better solution for this and have had no joy. I don't think it's a particularly valuable fix in any case since all it ends up doing is setting a fallback hard coded GAZEBO_RESOURCE_PATH that points to a directory way down in the build tree (in my case F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models). In Windows most people are going to move their built executables out of their build tree so that path may not end up existing. Plus it's only a fallback and is only used if the GAZEBO_RESOURCE_PATH environment variable is not set.</p>\n<p>As to the actual problem it is on the cmake side and not on the compiler side (this is the third explanation). With a semi-colon used in the top level CMakeLists.txt:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">GAZEBO_RESOURCE_PATH</span> <span class=\"s\">&quot;${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}/gazebo-${GAZEBO_MAJOR_VERSION};${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}/gazebo_models&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>The value gets correctly carried across to F:\\gazebo-build\\gazebo\\build_debug_nmake\\gazebo\\common\\CMakeFiles\\gazebo_common.dir\\flags.make</p>\n<div class=\"codehilite language-txt\"><pre><span></span><span class=\"err\">#</span> <span class=\"nt\">Custom</span> <span class=\"nt\">defines</span><span class=\"o\">:</span> <span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">common</span><span class=\"o\">/</span><span class=\"nt\">CMakeFiles</span><span class=\"o\">/</span><span class=\"nt\">gazebo_common</span><span class=\"p\">.</span><span class=\"nc\">dir</span><span class=\"o\">/</span><span class=\"nt\">Console</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">.</span><span class=\"nc\">obj_DEFINES</span> <span class=\"o\">=</span> <span class=\"nt\">GAZEBO_PLUGIN_PATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/lib/gazebo-8/plugins&quot;</span><span class=\"o\">;</span><span class=\"nt\">GAZEBO_MODEL_PATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8/models&quot;</span><span class=\"o\">;</span><span class=\"nt\">GAZEBO_RESOURCE_PATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models&quot;</span><span class=\"o\">;</span><span class=\"nt\">GAZEBO_MODEL_DATABASE_URI</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://gazebosim.org/models&quot;</span><span class=\"o\">;</span><span class=\"nt\">GAZEBO_DEFAULT_MASTER_PORT</span><span class=\"o\">=</span><span class=\"nt\">11345</span><span class=\"o\">;</span><span class=\"nt\">OGRE_RESOURCE_PATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;F:\\gazebo-build\\gazebo\\build_debug_nmake\\..\\..\\OGRE-SDK-1.9.0-vc120-x64-12.03.2016\\lib\\Debug\\opt&quot;</span>\n</pre></div>\n\n\n<p>But when the custom define gets used it ends up in F:\\gazebo-build\\gazebo\\build_debug_nmake\\gazebo\\common\\CMakeFiles\\gazebo_common.dir\\build.make as:</p>\n<div class=\"codehilite language-txt\"><pre><span></span><span class=\"nf\">gazebo\\common\\CMakeFiles\\gazebo_common.dir\\Console.cc.obj</span><span class=\"o\">:</span> <span class=\"n\">gazebo</span>\\<span class=\"n\">common</span>\\<span class=\"n\">CMakeFiles</span>\\<span class=\"n\">gazebo_common</span>.<span class=\"n\">dir</span>\\<span class=\"n\">flags</span>.<span class=\"n\">make</span>\n<span class=\"nf\">gazebo\\common\\CMakeFiles\\gazebo_common.dir\\Console.cc.obj</span><span class=\"o\">:</span> ..\\<span class=\"n\">gazebo</span>\\<span class=\"n\">common</span>\\<span class=\"n\">Console</span>.<span class=\"n\">cc</span>\n    @<span class=\"k\">$(</span>CMAKE_COMMAND<span class=\"k\">)</span> -E cmake_echo_color --switch<span class=\"o\">=</span><span class=\"k\">$(</span>COLOR<span class=\"k\">)</span> --green --progress-dir<span class=\"o\">=</span>F:<span class=\"se\">\\g</span>azebo-build<span class=\"se\">\\g</span>azebo<span class=\"se\">\\b</span>uild_debug_nmake<span class=\"se\">\\C</span>MakeFiles --progress-num<span class=\"o\">=</span><span class=\"k\">$(</span>CMAKE_PROGRESS_11<span class=\"k\">)</span> <span class=\"s2\">&quot;Building CXX object gazebo/common/CMakeFiles/gazebo_common.dir/Console.cc.obj&quot;</span>\n    <span class=\"nb\">cd</span> F:<span class=\"se\">\\g</span>azebo-build<span class=\"se\">\\g</span>azebo<span class=\"se\">\\b</span>uild_debug_nmake<span class=\"se\">\\g</span>azebo<span class=\"se\">\\c</span>ommon\n    C:<span class=\"se\">\\P</span>ROGRA~2<span class=\"se\">\\M</span>ICROS~2.0<span class=\"se\">\\V</span>C<span class=\"se\">\\b</span>in<span class=\"se\">\\X</span>86_AM~1<span class=\"se\">\\c</span>l.exe  @&lt;&lt;\n /nologo /TP <span class=\"k\">$(</span>CXX_DEFINES<span class=\"k\">)</span> -DF:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models<span class=\"s2\">&quot; -DGAZEBO_DEFAULT_MASTER_PORT=11345 -DGAZEBO_MODEL_DATABASE_URI=\\&quot;http://gazebosim.org/models\\&quot; -DGAZEBO_MODEL_PATH=\\&quot;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8/models\\&quot; -DGAZEBO_PLUGIN_PATH=\\&quot;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/lib/gazebo-8/plugins\\&quot; -DGAZEBO_RESOURCE_PATH=\\&quot;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8 -DOGRE_RESOURCE_PATH=\\&quot;F:\\gazebo-build\\gazebo\\build_debug_nmake\\..\\..\\OGRE-SDK-1.9.0-vc120-x64-12.03.2016\\lib\\Debug\\opt\\&quot; </span><span class=\"k\">$(</span>CXX_INCLUDES<span class=\"k\">)</span><span class=\"s2\"> </span><span class=\"k\">$(</span>CXX_FLAGS<span class=\"k\">)</span><span class=\"s2\"> /FoCMakeFiles\\gazebo_common.dir\\Console.cc.obj /FdCMakeFiles\\gazebo_common.dir\\ /FS -c F:\\gazebo-build\\gazebo\\gazebo\\common\\Console.cc</span>\n<span class=\"err\">&lt;&lt;</span>\n    <span class=\"nf\">cd F</span><span class=\"o\">:</span>\\<span class=\"n\">gazebo</span>-<span class=\"n\">build</span>\\<span class=\"n\">gazebo</span>\\<span class=\"n\">build_debug_nmake</span>\n</pre></div>\n\n\n<p>And that's where the compiler breaks.</p>\n<p>I'm admitting defeat on this one.</p>", "type": "rendered"}, "created_on": "2016-06-16T10:53:18.389041+00:00", "user": {"display_name": "Aaron Clauson", "uuid": "{80d9ee60-d587-47a9-baa5-5005304756a7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D"}, "html": {"href": "https://bitbucket.org/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a91a9c7849303cad7efa3423f1feba30d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-5.png"}}, "nickname": "azaclauson", "type": "user", "account_id": "557058:c389a3f4-daff-47aa-8c04-b81dd4520568"}, "inline": {"to": null, "from": null, "outdated": false, "path": "CMakeLists.txt"}, "updated_on": "2016-06-16T10:53:18.512392+00:00", "type": "pullrequest_comment", "id": 19840493}