{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344/comments/19706322.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344/_/diff#comment-19706322"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2344, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344"}}, "title": "Config and cmake fixes for Windows build"}, "content": {"raw": "I checked my notes for my ign-transport build and I ended up getting cmake to generate Visual Studio 2013 project files and built it that way. Since I wasn't that familiar with cmake at that point I found it quicker to fix missing includes and libraries via Visual Studio rather than CMakeLists.txt.\n\nI agree that using the cmake findpackage is a better way then having to explicitly set all the variables for the include and link directories. My goal was to be a light as possible on the CMakeLists.txt changes so as not to affect other platforms but also get the Windows build working.\n\nI'll revisit the ign-transport build now that I can work cmake a bit better and see if it generates a workable cmake config for Windows. \n\nApart from that the biggest problem is protobuf. The protobuf-2.6.0-win64-vc12.zip does not include any cmake config files so the gazebo build is relying on pkgconfig to set the variables for it. That doesn't work easily for Windows (posibly pkgconfig can be set up via cygwin or msys but that's another step). I did build protobuf version 3.0.0 from source and that generated usable cmake config files but gazebo could not compile with that version. I'll re-visit this as well and see if I can build protobuf-2.6.0 from source and get a cmake config.\n\nAnd yes I'm more than happy to keep re-working and testing the build files.", "markup": "markdown", "html": "<p>I checked my notes for my ign-transport build and I ended up getting cmake to generate Visual Studio 2013 project files and built it that way. Since I wasn't that familiar with cmake at that point I found it quicker to fix missing includes and libraries via Visual Studio rather than CMakeLists.txt.</p>\n<p>I agree that using the cmake findpackage is a better way then having to explicitly set all the variables for the include and link directories. My goal was to be a light as possible on the CMakeLists.txt changes so as not to affect other platforms but also get the Windows build working.</p>\n<p>I'll revisit the ign-transport build now that I can work cmake a bit better and see if it generates a workable cmake config for Windows. </p>\n<p>Apart from that the biggest problem is protobuf. The protobuf-2.6.0-win64-vc12.zip does not include any cmake config files so the gazebo build is relying on pkgconfig to set the variables for it. That doesn't work easily for Windows (posibly pkgconfig can be set up via cygwin or msys but that's another step). I did build protobuf version 3.0.0 from source and that generated usable cmake config files but gazebo could not compile with that version. I'll re-visit this as well and see if I can build protobuf-2.6.0 from source and get a cmake config.</p>\n<p>And yes I'm more than happy to keep re-working and testing the build files.</p>", "type": "rendered"}, "created_on": "2016-06-14T07:14:51.202458+00:00", "user": {"display_name": "Aaron Clauson", "uuid": "{80d9ee60-d587-47a9-baa5-5005304756a7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D"}, "html": {"href": "https://bitbucket.org/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a91a9c7849303cad7efa3423f1feba30d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-5.png"}}, "nickname": "azaclauson", "type": "user", "account_id": "557058:c389a3f4-daff-47aa-8c04-b81dd4520568"}, "updated_on": "2016-06-14T07:14:51.281005+00:00", "type": "pullrequest_comment", "id": 19706322}