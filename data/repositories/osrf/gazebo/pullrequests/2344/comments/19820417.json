{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344/comments/19820417.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/azaclauson/gazebo_win_fixes_fork:None..None?path=CMakeLists.txt"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344/_/diff#comment-19820417"}}, "parent": {"id": 19799444, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344/comments/19799444.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344/_/diff#comment-19799444"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2344, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2344.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2344"}}, "title": "Config and cmake fixes for Windows build"}, "content": {"raw": "Sorry not a very scientific description. What happens if the original resource path is used and the colon is replaced with a semi-colon is that the build scripts then end up using the resource path as an include path BUT it's malformed due to a missing double quote. From what I can tell cmake is chopping off the path due to the semi-colon character. I tried quite a few different permutations with the path but as soon as the semi-colon is included the include path is malformed.\n\n**Update:**\n\nI got the description wrong (I was working from memory). cmake is doing it's job correctly the problem is a semi-colon in a pre-processor directive causes cl.exe to experience a fatal error.\n\nFrom F:\\gazebo-build\\gazebo\\build_debug_nmake\\gazebo\\common\\CMakeFiles\\gazebo_common.dir\\flags.make\n\n# Custom defines: gazebo/common/CMakeFiles/gazebo_common.dir/Console.cc.obj_DEFINES = GAZEBO_PLUGIN_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/lib/gazebo-8/plugins\";GAZEBO_MODEL_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8/models\";GAZEBO_RESOURCE_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models\";GAZEBO_MODEL_DATABASE_URI=\"http://gazebosim.org/models\";GAZEBO_DEFAULT_MASTER_PORT=11345;OGRE_RESOURCE_PATH=\"F:\\gazebo-build\\gazebo\\build_debug_nmake\\..\\..\\OGRE-SDK-1.9.0-vc120-x64-12.03.2016\\lib\\Debug\\opt\"\n\nTake out the semi-colon from GAZEBO_RESOURCE_PATH and the compiler is happy. I'm currently looking into how semi-colons can be escaped in pre-processor defines.", "markup": "markdown", "html": "<p>Sorry not a very scientific description. What happens if the original resource path is used and the colon is replaced with a semi-colon is that the build scripts then end up using the resource path as an include path BUT it's malformed due to a missing double quote. From what I can tell cmake is chopping off the path due to the semi-colon character. I tried quite a few different permutations with the path but as soon as the semi-colon is included the include path is malformed.</p>\n<p><strong>Update:</strong></p>\n<p>I got the description wrong (I was working from memory). cmake is doing it's job correctly the problem is a semi-colon in a pre-processor directive causes cl.exe to experience a fatal error.</p>\n<p>From F:\\gazebo-build\\gazebo\\build_debug_nmake\\gazebo\\common\\CMakeFiles\\gazebo_common.dir\\flags.make</p>\n<h1 id=\"markdown-header-custom-defines-gazebocommoncmakefilesgazebo_commondirconsoleccobj_defines-gazebo_plugin_pathfgazebo-buildgazebobuild_debug_nmakeinstalldebuglibgazebo-8pluginsgazebo_model_pathfgazebo-buildgazebobuild_debug_nmakeinstalldebugsharegazebo-8modelsgazebo_resource_pathfgazebo-buildgazebobuild_debug_nmakeinstalldebugsharegazebo-8fgazebo-buildgazebobuild_debug_nmakeinstalldebugsharegazebo_modelsgazebo_model_database_urihttpgazebosimorgmodelsgazebo_default_master_port11345ogre_resource_pathfgazebo-buildgazebobuild_debug_nmake4646ogre-sdk-190-vc120-x64-12032016libdebugopt\">Custom defines: gazebo/common/CMakeFiles/gazebo_common.dir/Console.cc.obj_DEFINES = GAZEBO_PLUGIN_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/lib/gazebo-8/plugins\";GAZEBO_MODEL_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8/models\";GAZEBO_RESOURCE_PATH=\"F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo-8;F:/gazebo-build/gazebo/build_debug_nmake/install/Debug/share/gazebo_models\";GAZEBO_MODEL_DATABASE_URI=\"http://gazebosim.org/models\";GAZEBO_DEFAULT_MASTER_PORT=11345;OGRE_RESOURCE_PATH=\"F:\\gazebo-build\\gazebo\\build_debug_nmake....\\OGRE-SDK-1.9.0-vc120-x64-12.03.2016\\lib\\Debug\\opt\"</h1>\n<p>Take out the semi-colon from GAZEBO_RESOURCE_PATH and the compiler is happy. I'm currently looking into how semi-colons can be escaped in pre-processor defines.</p>", "type": "rendered"}, "created_on": "2016-06-16T00:45:17.201223+00:00", "user": {"display_name": "Aaron Clauson", "uuid": "{80d9ee60-d587-47a9-baa5-5005304756a7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D"}, "html": {"href": "https://bitbucket.org/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a91a9c7849303cad7efa3423f1feba30d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-5.png"}}, "nickname": "azaclauson", "type": "user", "account_id": "557058:c389a3f4-daff-47aa-8c04-b81dd4520568"}, "inline": {"to": null, "from": null, "outdated": false, "path": "CMakeLists.txt"}, "updated_on": "2016-06-16T09:21:10.099666+00:00", "type": "pullrequest_comment", "id": 19820417}