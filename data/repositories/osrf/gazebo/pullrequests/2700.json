{"rendered": {"description": {"raw": "Remove preprocessor definition of `BUILDING_DLL` \r\n\r\nThe `BUILDING_DLL` macro is not used anywhere in the Gazebo source, \r\nso it should not be necessary to define it for any reason.\r\nFurthermore, in Windows the `BUILDING_DLL` macro in `sdformat` and in all \r\nthe `ign-*` projects is used to define the respective `<PROJECT_NAME>_VISIBLE`\r\nmacros to be equal  to `__declspec(dllexport)`. \r\nFor this reason, defining the `BUILDING_DLL` macro is actually harmful\r\nbecause in all the `sdformat`/`ign-*` headers that are included \r\nby Gazebo, the `<PROJECT_NAME>_VISIBLE` macros will be equal to \r\n`__declspec(dllexport)` rather then the intended `__declspec(dllimport)`.\r\nNote that in a sense this is a bug of both Gazebo, because it defines\r\nthe `BUILDING_DLL`, and of all `sdformat`/`ign-*` projects, that use a common \r\nmacro to switch their visible macro to be `__declspec(dllexport)`, while \r\neach one should instead use a project-specific macro.", "markup": "markdown", "html": "<p>Remove preprocessor definition of <code>BUILDING_DLL</code> </p>\n<p>The <code>BUILDING_DLL</code> macro is not used anywhere in the Gazebo source, \nso it should not be necessary to define it for any reason.\nFurthermore, in Windows the <code>BUILDING_DLL</code> macro in <code>sdformat</code> and in all \nthe <code>ign-*</code> projects is used to define the respective <code>&lt;PROJECT_NAME&gt;_VISIBLE</code>\nmacros to be equal  to <code>__declspec(dllexport)</code>. \nFor this reason, defining the <code>BUILDING_DLL</code> macro is actually harmful\nbecause in all the <code>sdformat</code>/<code>ign-*</code> headers that are included \nby Gazebo, the <code>&lt;PROJECT_NAME&gt;_VISIBLE</code> macros will be equal to \n<code>__declspec(dllexport)</code> rather then the intended <code>__declspec(dllimport)</code>.\nNote that in a sense this is a bug of both Gazebo, because it defines\nthe <code>BUILDING_DLL</code>, and of all <code>sdformat</code>/<code>ign-*</code> projects, that use a common \nmacro to switch their visible macro to be <code>__declspec(dllexport)</code>, while \neach one should instead use a project-specific macro.</p>", "type": "rendered"}, "title": {"raw": "Remove preprocessor definition of `BUILDING_DLL`", "markup": "markdown", "html": "<p>Remove preprocessor definition of <code>BUILDING_DLL</code></p>", "type": "rendered"}}, "type": "pullrequest", "description": "Remove preprocessor definition of `BUILDING_DLL` \r\n\r\nThe `BUILDING_DLL` macro is not used anywhere in the Gazebo source, \r\nso it should not be necessary to define it for any reason.\r\nFurthermore, in Windows the `BUILDING_DLL` macro in `sdformat` and in all \r\nthe `ign-*` projects is used to define the respective `<PROJECT_NAME>_VISIBLE`\r\nmacros to be equal  to `__declspec(dllexport)`. \r\nFor this reason, defining the `BUILDING_DLL` macro is actually harmful\r\nbecause in all the `sdformat`/`ign-*` headers that are included \r\nby Gazebo, the `<PROJECT_NAME>_VISIBLE` macros will be equal to \r\n`__declspec(dllexport)` rather then the intended `__declspec(dllimport)`.\r\nNote that in a sense this is a bug of both Gazebo, because it defines\r\nthe `BUILDING_DLL`, and of all `sdformat`/`ign-*` projects, that use a common \r\nmacro to switch their visible macro to be `__declspec(dllexport)`, while \r\neach one should instead use a project-specific macro.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2700/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/traversaro/gazebo-12:a694a279e214%0D02c86f6d70d7?from_pullrequest_id=2700"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2700.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2700/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2700"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/traversaro/gazebo-12:a694a279e214%0D02c86f6d70d7?from_pullrequest_id=2700"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2700/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2700/statuses_page=1.json"}}, "title": "Remove preprocessor definition of `BUILDING_DLL`", "close_source_branch": false, "reviewers": [], "id": 2700, "destination": {"commit": {"hash": "02c86f6d70d7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/02c86f6d70d7.json"}, "html": {"href": "#!/osrf/gazebo/commits/02c86f6d70d7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-04-29T21:25:55.007231+00:00", "summary": {"raw": "Remove preprocessor definition of `BUILDING_DLL` \r\n\r\nThe `BUILDING_DLL` macro is not used anywhere in the Gazebo source, \r\nso it should not be necessary to define it for any reason.\r\nFurthermore, in Windows the `BUILDING_DLL` macro in `sdformat` and in all \r\nthe `ign-*` projects is used to define the respective `<PROJECT_NAME>_VISIBLE`\r\nmacros to be equal  to `__declspec(dllexport)`. \r\nFor this reason, defining the `BUILDING_DLL` macro is actually harmful\r\nbecause in all the `sdformat`/`ign-*` headers that are included \r\nby Gazebo, the `<PROJECT_NAME>_VISIBLE` macros will be equal to \r\n`__declspec(dllexport)` rather then the intended `__declspec(dllimport)`.\r\nNote that in a sense this is a bug of both Gazebo, because it defines\r\nthe `BUILDING_DLL`, and of all `sdformat`/`ign-*` projects, that use a common \r\nmacro to switch their visible macro to be `__declspec(dllexport)`, while \r\neach one should instead use a project-specific macro.", "markup": "markdown", "html": "<p>Remove preprocessor definition of <code>BUILDING_DLL</code> </p>\n<p>The <code>BUILDING_DLL</code> macro is not used anywhere in the Gazebo source, \nso it should not be necessary to define it for any reason.\nFurthermore, in Windows the <code>BUILDING_DLL</code> macro in <code>sdformat</code> and in all \nthe <code>ign-*</code> projects is used to define the respective <code>&lt;PROJECT_NAME&gt;_VISIBLE</code>\nmacros to be equal  to <code>__declspec(dllexport)</code>. \nFor this reason, defining the <code>BUILDING_DLL</code> macro is actually harmful\nbecause in all the <code>sdformat</code>/<code>ign-*</code> headers that are included \nby Gazebo, the <code>&lt;PROJECT_NAME&gt;_VISIBLE</code> macros will be equal to \n<code>__declspec(dllexport)</code> rather then the intended <code>__declspec(dllimport)</code>.\nNote that in a sense this is a bug of both Gazebo, because it defines\nthe <code>BUILDING_DLL</code>, and of all <code>sdformat</code>/<code>ign-*</code> projects, that use a common \nmacro to switch their visible macro to be <code>__declspec(dllexport)</code>, while \neach one should instead use a project-specific macro.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a694a279e214", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-12/commit/a694a279e214"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-12/commits/a694a279e214"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-12"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-12"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6e119d2f-f486-4dd8-9652-a557a79c45a3}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-12", "full_name": "traversaro/gazebo-12", "uuid": "{6e119d2f-f486-4dd8-9652-a557a79c45a3}"}, "branch": {"name": "traversaro/remove-preprocessor-definition-of-buildi-1493501132601"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-04-29T21:49:44.862678+00:00", "type": "participant", "approved": false, "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}}], "reason": "", "updated_on": "2017-04-29T21:50:09.453716+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": null, "closed_by": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}}