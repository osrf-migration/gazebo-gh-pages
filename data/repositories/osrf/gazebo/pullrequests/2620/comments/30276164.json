{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2620/comments/30276164.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2620/_/diff#comment-30276164"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2620, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2620.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2620"}}, "title": "Fix HIDPI issue with GLWidget window size."}, "content": {"raw": "I believe this issue is specific to running gazebo on ubuntu on macbook retina displays. Do you have any problem with mouse picking after making these changes?\n\nThe value of the `devicePixelRatio` is eventually used to create the Ogre render window with the correct width and height in Ogre's Cocoa Window class. However, in this case you're on ubuntu and not OSX so ogre ignores that value. The changes in this patch will likely double the size of the gzclient render window on OSX. \n\nA quick and dirty workaround could be to only do this on non-apple OS's.\n\n~~~\ndiff -r 2e71e0091b49 gazebo/gui/GLWidget.cc\n--- a/gazebo/gui/GLWidget.cc\tFri Jan 20 23:58:49 2017 +0000\n+++ b/gazebo/gui/GLWidget.cc\tTue Jan 24 16:05:25 2017 -0800\n@@ -244,10 +244,21 @@\n     // windowhandle() is available in qt5 only\n     double ratio = this->windowHandle()->devicePixelRatio();\n \n+    int w = this->width();\n+    int h = this->height();\n+\n+#if not defined(__APPLE__)\n+    // handle high dpi rendering on non-apple OS\n+    // e.g. unbuntu on macbook retina display\n+    // ogre will ignore the device ratio param so scale\n+    // the window ourselves\n+    w *= ratio;\n+    h *= ratio;\n+#endif\n     // Create the OGRE render window\n     this->dataPtr->windowId =\n       rendering::RenderEngine::Instance()->GetWindowManager()->\n-        CreateWindow(winHandle, this->width(), this->height(), ratio);\n+        CreateWindow(winHandle, w, h, ratio);\n \n     // Attach the user camera to the window\n     rendering::RenderEngine::Instance()->GetWindowManager()->SetCamera(\n~~~\n\nBut we need to make sure mouse picking still functions correctly with these changes.\n\n\n", "markup": "markdown", "html": "<p>I believe this issue is specific to running gazebo on ubuntu on macbook retina displays. Do you have any problem with mouse picking after making these changes?</p>\n<p>The value of the <code>devicePixelRatio</code> is eventually used to create the Ogre render window with the correct width and height in Ogre's Cocoa Window class. However, in this case you're on ubuntu and not OSX so ogre ignores that value. The changes in this patch will likely double the size of the gzclient render window on OSX. </p>\n<p>A quick and dirty workaround could be to only do this on non-apple OS's.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 2e71e0091b49 gazebo/gui/GLWidget.cc</span>\n<span class=\"gd\">--- a/gazebo/gui/GLWidget.cc    Fri Jan 20 23:58:49 2017 +0000</span>\n<span class=\"gi\">+++ b/gazebo/gui/GLWidget.cc    Tue Jan 24 16:05:25 2017 -0800</span>\n<span class=\"gu\">@@ -244,10 +244,21 @@</span>\n     // windowhandle() is available in qt5 only\n     double ratio = this-&gt;windowHandle()-&gt;devicePixelRatio();\n\n<span class=\"gi\">+    int w = this-&gt;width();</span>\n<span class=\"gi\">+    int h = this-&gt;height();</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+#if not defined(__APPLE__)</span>\n<span class=\"gi\">+    // handle high dpi rendering on non-apple OS</span>\n<span class=\"gi\">+    // e.g. unbuntu on macbook retina display</span>\n<span class=\"gi\">+    // ogre will ignore the device ratio param so scale</span>\n<span class=\"gi\">+    // the window ourselves</span>\n<span class=\"gi\">+    w *= ratio;</span>\n<span class=\"gi\">+    h *= ratio;</span>\n<span class=\"gi\">+#endif</span>\n     // Create the OGRE render window\n     this-&gt;dataPtr-&gt;windowId =\n       rendering::RenderEngine::Instance()-&gt;GetWindowManager()-&gt;\n<span class=\"gd\">-        CreateWindow(winHandle, this-&gt;width(), this-&gt;height(), ratio);</span>\n<span class=\"gi\">+        CreateWindow(winHandle, w, h, ratio);</span>\n\n     // Attach the user camera to the window\n     rendering::RenderEngine::Instance()-&gt;GetWindowManager()-&gt;SetCamera(\n</pre></div>\n\n\n<p>But we need to make sure mouse picking still functions correctly with these changes.</p>", "type": "rendered"}, "created_on": "2017-01-25T00:14:49.575434+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2017-01-25T00:14:49.577806+00:00", "type": "pullrequest_comment", "id": 30276164}