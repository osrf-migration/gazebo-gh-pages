{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2320/comments/19006931.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2320/_/diff#comment-19006931"}}, "parent": {"id": 18969787, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2320/comments/18969787.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2320/_/diff#comment-18969787"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2320, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2320.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2320"}}, "title": "Fix laser collision below min_range"}, "content": {"raw": "I agree having a flag like `<self_collide>` sounds like a better option. I think this will require a bit of effort - we'll probably need to update the ray / multi-ray shape implementation for all four physics engines in Gazebo. Not sure if there is an easy workaround for now, @scpeters?", "markup": "markdown", "html": "<p>I agree having a flag like <code>&lt;self_collide&gt;</code> sounds like a better option. I think this will require a bit of effort - we'll probably need to update the ray / multi-ray shape implementation for all four physics engines in Gazebo. Not sure if there is an easy workaround for now, @scpeters?</p>", "type": "rendered"}, "created_on": "2016-05-26T22:18:49.201076+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2016-05-26T22:18:49.213214+00:00", "type": "pullrequest_comment", "id": 19006931}