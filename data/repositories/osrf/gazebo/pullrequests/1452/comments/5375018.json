{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1452/comments/5375018.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:9ef290d286a1..889426a9de48?path=gazebo%2Fphysics%2Fbullet%2FBulletSliderJoint.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1452/_/diff#comment-5375018"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1452, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1452.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1452"}}, "title": "Coulomb friction for BulletSliderJoint (#1348)"}, "content": {"raw": "This workaround could become a problem when bullet gets fixed. Can we wrap this fix in an `#ifdef` check for bullet <= 2.82, and put the default behavior for bullet > 2.82?\n\nWill a gazebo test fail if bullet is > 2.82 and the patch was not put into bullet?", "markup": "markdown", "html": "<p>This workaround could become a problem when bullet gets fixed. Can we wrap this fix in an <code>#ifdef</code> check for bullet &lt;= 2.82, and put the default behavior for bullet &gt; 2.82?</p>\n<p>Will a gazebo test fail if bullet is &gt; 2.82 and the patch was not put into bullet?</p>", "type": "rendered"}, "created_on": "2015-02-26T19:29:12.061883+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 403, "from": null, "outdated": false, "path": "gazebo/physics/bullet/BulletSliderJoint.cc"}, "updated_on": "2015-02-26T19:30:33.233118+00:00", "type": "pullrequest_comment", "id": 5375018}