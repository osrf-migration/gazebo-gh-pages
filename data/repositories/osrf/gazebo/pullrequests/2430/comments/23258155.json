{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2430/comments/23258155.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2430/_/diff#comment-23258155"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2430, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2430.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2430"}}, "title": "Plugins_ign_almin"}, "content": {"raw": "world tests and the link header should work now.\n\nThings I noticed:\n\n* Not all properties are shown properly (visuals name) with the new visual/sensor SDF function.\nThese are warnings the compiler returned, seems interesting:\n[Err] [IgnMsgSdf.hh:39] Invalid convertion of SDF to type[N8ignition4msgs6VisualE]\n[Wrn] [GuiIface.cc:107] QSpiAccessible::accessibleEvent not handled:  \"8008\"  obj:  QObject(0x0)  \" invalid interface!\" \n[Err] [IgnMsgSdf.hh:39] Invalid convertion of SDF to type[N8ignition4msgs6VisualE]\n[Wrn] [GuiIface.cc:107] QSpiAccessible::accessibleEvent not handled:  \"8008\"  obj:  QObject(0x0)  \" invalid interface!\" \n[Wrn] [GuiIface.cc:107] QSpiAccessible::accessibleEvent not handled:  \"8008\"  obj:  QObject(0x0)  \" invalid interface!\" \n\nIf you want to fix that.\n\n* If you want to keep the standard URI with visuals (not like this: data://visual/box_sim::link::visual) I can transform the URI into the standard URI by splitting this one at character '::'. \nHowever, in the VisualInfo, to get the right visual with GetVisual(scopedname of visual); I would have to split the standard URI up again and form the initial URI with the character '::' to be able to search for the visual. I do not know if this extra work is necessary. In my opinion it is fine to keep a specialized version of the PluginInfo approach. Usually you would have one common PluginInfo function and ,if needed, create specialized versions. I think this approach should be fine.\n\n* Currently, as we can not change the plugin properties info, we can not click onto the property to display the whole string. Usually the plugin property is longer than the placeholder space.\n\n![blink.png](data/bitbucket.org/repo/jgXqbo/images/1227949957-blink.png)\n\nDo you have an idea for that?\n\n* Usually we can open a drag and drop menu in the world tab of e.g. a model with one click. Now for sensors and visuals this is not possible. I would have to search the whole tree with several for-loops to find the clicked visual/sensor. Is this desirable or do you have a better/simpler idea to implement this?\n\n", "markup": "markdown", "html": "<p>world tests and the link header should work now.</p>\n<p>Things I noticed:</p>\n<ul>\n<li>Not all properties are shown properly (visuals name) with the new visual/sensor SDF function.\nThese are warnings the compiler returned, seems interesting:\n[Err] [IgnMsgSdf.hh:39] Invalid convertion of SDF to type[N8ignition4msgs6VisualE]\n[Wrn] [GuiIface.cc:107] QSpiAccessible::accessibleEvent not handled:  \"8008\"  obj:  QObject(0x0)  \" invalid interface!\" \n[Err] [IgnMsgSdf.hh:39] Invalid convertion of SDF to type[N8ignition4msgs6VisualE]\n[Wrn] [GuiIface.cc:107] QSpiAccessible::accessibleEvent not handled:  \"8008\"  obj:  QObject(0x0)  \" invalid interface!\" \n[Wrn] [GuiIface.cc:107] QSpiAccessible::accessibleEvent not handled:  \"8008\"  obj:  QObject(0x0)  \" invalid interface!\" </li>\n</ul>\n<p>If you want to fix that.</p>\n<ul>\n<li>\n<p>If you want to keep the standard URI with visuals (not like this: data://visual/box_sim:<img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f517.png\" alt=\"\ud83d\udd17\" title=\":link:\" data-emoji-short-name=\":link:\" />:visual) I can transform the URI into the standard URI by splitting this one at character '::'. \nHowever, in the VisualInfo, to get the right visual with GetVisual(scopedname of visual); I would have to split the standard URI up again and form the initial URI with the character '::' to be able to search for the visual. I do not know if this extra work is necessary. In my opinion it is fine to keep a specialized version of the PluginInfo approach. Usually you would have one common PluginInfo function and ,if needed, create specialized versions. I think this approach should be fine.</p>\n</li>\n<li>\n<p>Currently, as we can not change the plugin properties info, we can not click onto the property to display the whole string. Usually the plugin property is longer than the placeholder space.</p>\n</li>\n</ul>\n<p><img alt=\"blink.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1227949957-blink.png\" /></p>\n<p>Do you have an idea for that?</p>\n<ul>\n<li>Usually we can open a drag and drop menu in the world tab of e.g. a model with one click. Now for sensors and visuals this is not possible. I would have to search the whole tree with several for-loops to find the clicked visual/sensor. Is this desirable or do you have a better/simpler idea to implement this?</li>\n</ul>", "type": "rendered"}, "created_on": "2016-09-04T12:27:27.018850+00:00", "user": {"display_name": "almin causevic", "uuid": "{742c4b94-517d-4121-b9d4-4db5d7d196d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B742c4b94-517d-4121-b9d4-4db5d7d196d2%7D"}, "html": {"href": "https://bitbucket.org/%7B742c4b94-517d-4121-b9d4-4db5d7d196d2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/e11efa4c0b999aca807842d66278f48bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-1.png"}}, "nickname": "almin", "type": "user", "account_id": "557058:294af8d9-ad1d-4a75-bb9f-33404bfbb24c"}, "updated_on": "2016-09-04T12:29:03.516876+00:00", "type": "pullrequest_comment", "id": 23258155}