{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2430/comments/24956064.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2430/_/diff#comment-24956064"}}, "parent": {"id": 24368340, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2430/comments/24368340.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2430/_/diff#comment-24368340"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2430, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2430.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2430"}}, "title": "Plugins_ign_almin"}, "content": {"raw": "The problem is this:\n\nauto sensor = this->GetSensor(parts[i+1]);\n\nWe fetch a sensor named \"camera\". \n\nFor model camera0 it is \"camera\" and for model camera it is also \"camera\". So 2 live sensors with the same name exist in this world. \nNow in the second case (click sensor from model \"camera0\"), the first sensor with GetSensor is fetched again (because of the same name \"camera\"), thus comparing URI from model \"camera0\" with model \"camera\".\n\nDo you have an idea on how to catch the second sensor in this case? \nWe could maybe iterate over all live sensors somehow until it matches one of them. If not, then return and gzerror.", "markup": "markdown", "html": "<p>The problem is this:</p>\n<p>auto sensor = this-&gt;GetSensor(parts[i+1]);</p>\n<p>We fetch a sensor named \"camera\". </p>\n<p>For model camera0 it is \"camera\" and for model camera it is also \"camera\". So 2 live sensors with the same name exist in this world. \nNow in the second case (click sensor from model \"camera0\"), the first sensor with GetSensor is fetched again (because of the same name \"camera\"), thus comparing URI from model \"camera0\" with model \"camera\".</p>\n<p>Do you have an idea on how to catch the second sensor in this case? \nWe could maybe iterate over all live sensors somehow until it matches one of them. If not, then return and gzerror.</p>", "type": "rendered"}, "created_on": "2016-10-10T16:23:54.399272+00:00", "user": {"display_name": "almin causevic", "uuid": "{742c4b94-517d-4121-b9d4-4db5d7d196d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B742c4b94-517d-4121-b9d4-4db5d7d196d2%7D"}, "html": {"href": "https://bitbucket.org/%7B742c4b94-517d-4121-b9d4-4db5d7d196d2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/e11efa4c0b999aca807842d66278f48bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-1.png"}}, "nickname": "almin", "type": "user", "account_id": "557058:294af8d9-ad1d-4a75-bb9f-33404bfbb24c"}, "updated_on": "2016-10-10T16:23:54.470428+00:00", "type": "pullrequest_comment", "id": 24956064}