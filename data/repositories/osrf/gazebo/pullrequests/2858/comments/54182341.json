{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2858/comments/54182341.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2858/_/diff#comment-54182341"}}, "parent": {"id": 54182177, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2858/comments/54182177.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2858/_/diff#comment-54182177"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2858, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2858.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2858"}}, "title": "Only initialize the marker service in the client (GUI) scene [targeting gazebo8]"}, "content": {"raw": "The issue with having a `MarkerManager` in both processes is that if a service request is emitted from a server or client process, then the other process won't ever receive the message. `ign-transport` doesn't really seem designed to gracefully handle multiple services offering the same service with the same name. I think this has gone unnoticed because we're generally requesting markers using the `gz marker` command line tool, which is always going to be running in its own process.\n\nI think it would be good to be able to request markers from either process and reliably see them appear. I'm working on validating a sensor plugin right now, and I'd like it to be able to spawn a GUI marker at a location whenever the sensor picks up on a certain signal. Without the fix in this PR, that is currently impossible because the request gets eaten up by the `MarkerManager` in the server process and the request is never seen by the client process.", "markup": "markdown", "html": "<p>The issue with having a <code>MarkerManager</code> in both processes is that if a service request is emitted from a server or client process, then the other process won't ever receive the message. <code>ign-transport</code> doesn't really seem designed to gracefully handle multiple services offering the same service with the same name. I think this has gone unnoticed because we're generally requesting markers using the <code>gz marker</code> command line tool, which is always going to be running in its own process.</p>\n<p>I think it would be good to be able to request markers from either process and reliably see them appear. I'm working on validating a sensor plugin right now, and I'd like it to be able to spawn a GUI marker at a location whenever the sensor picks up on a certain signal. Without the fix in this PR, that is currently impossible because the request gets eaten up by the <code>MarkerManager</code> in the server process and the request is never seen by the client process.</p>", "type": "rendered"}, "created_on": "2018-01-20T00:53:39.898119+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-01-20T00:53:56.957613+00:00", "type": "pullrequest_comment", "id": 54182341}