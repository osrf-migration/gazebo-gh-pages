{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2598/comments/34159015.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2598/_/diff#comment-34159015"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2598, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2598.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2598"}}, "title": "Fix2111"}, "content": {"raw": "I think I found the way to dodge the problem. I am also doing the 2 JointPositionInterface for steering. Using directly the Position Interface will result in the << SetPosition>> of the joint which will cause an overwrite of the physics since we are directly setting the state. Instead, in ros_gazebo_pkg, if you define  \n```\n#!c++\n\n<param name=\"/gazebo_ros_control/pid_gains/front_left_angle_joint/p\" type=\"double\" value=\"0.25\" />\n```\nIn the param server, the default_robot_hw_sim will use a POSITION_PID instead and it will do a close loop with the physics.\n\nSure it doesn't solve the freezing problem, but I think the JointPositionInterface must be used that way, but I can see cases ( maybe direct linkage mechanism) that you want to impose joint position.\n\n\n", "markup": "markdown", "html": "<p>I think I found the way to dodge the problem. I am also doing the 2 JointPositionInterface for steering. Using directly the Position Interface will result in the &lt;&lt; SetPosition&gt;&gt; of the joint which will cause an overwrite of the physics since we are directly setting the state. Instead, in ros_gazebo_pkg, if you define  </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">&lt;</span><span class=\"n\">param</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;/gazebo_ros_control/pid_gains/front_left_angle_joint/p&quot;</span> <span class=\"n\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;0.25&quot;</span> <span class=\"o\">/&gt;</span>\n</pre></div>\n\n\n<p>In the param server, the default_robot_hw_sim will use a POSITION_PID instead and it will do a close loop with the physics.</p>\n<p>Sure it doesn't solve the freezing problem, but I think the JointPositionInterface must be used that way, but I can see cases ( maybe direct linkage mechanism) that you want to impose joint position.</p>", "type": "rendered"}, "created_on": "2017-03-30T11:38:57.250530+00:00", "user": {"display_name": "Pier-Marc Comtois-Rivet", "uuid": "{0175b05b-cfdb-42e5-aa09-f785a9507234}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0175b05b-cfdb-42e5-aa09-f785a9507234%7D"}, "html": {"href": "https://bitbucket.org/%7B0175b05b-cfdb-42e5-aa09-f785a9507234%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:88944d93-fa51-47d9-a10b-db77a1ae855d/d8c27000-64d4-47a8-b096-58044725ed25/128"}}, "nickname": "Pier-Marc Comtois Rivet", "type": "user", "account_id": "557058:88944d93-fa51-47d9-a10b-db77a1ae855d"}, "updated_on": "2017-03-30T11:38:57.321056+00:00", "type": "pullrequest_comment", "id": 34159015}