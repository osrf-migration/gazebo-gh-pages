{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2598/comments/44609396.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2598/_/diff#comment-44609396"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2598, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2598.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2598"}}, "title": "Fix2111"}, "content": {"raw": "There would also have to be a `preserveVelocity` flag in `Joint::SetPosition` for the flag solution to be effective, since thats the primary place `Link::MoveFrame` is being called from. It's possible to implement a solution on the use case side by caching the velocity of every frame before the positions are updated and then reapplying them afterwards, but that seems like a much less optimal solution.", "markup": "markdown", "html": "<p>There would also have to be a <code>preserveVelocity</code> flag in <code>Joint::SetPosition</code> for the flag solution to be effective, since thats the primary place <code>Link::MoveFrame</code> is being called from. It's possible to implement a solution on the use case side by caching the velocity of every frame before the positions are updated and then reapplying them afterwards, but that seems like a much less optimal solution.</p>", "type": "rendered"}, "created_on": "2017-09-10T17:32:59.039331+00:00", "user": {"display_name": "Zach Anderson", "uuid": "{9ff24246-615c-4363-b2e9-d4376dc21d60}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9ff24246-615c-4363-b2e9-d4376dc21d60%7D"}, "html": {"href": "https://bitbucket.org/%7B9ff24246-615c-4363-b2e9-d4376dc21d60%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/83817c27892fe04bfd3afa2ea4fd473ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsZA-4.png"}}, "nickname": "zanderson", "type": "user", "account_id": "557058:ddb1c27b-9024-4e29-af53-26129daa9220"}, "updated_on": "2017-09-10T17:32:59.092507+00:00", "type": "pullrequest_comment", "id": 44609396}