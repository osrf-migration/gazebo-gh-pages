{"rendered": {"description": {"raw": "We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit ` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit `, except for `EditorMaterialSwitcher.hh` which needed some lines to be wrapped to stay under 80 characters.\r\n\r\n~~~\r\n$ hg up explicit_constructors_gui\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AlignWidget(QWidget *_parent = 0);\r\n      2       public: ApplyWrenchDialog(QWidget *_parent = 0);\r\n      2       public: CloneWindow(QWidget *_parent = 0);\r\n      2       public: DataLogger(QWidget *_parent = 0);\r\n      2       public: Editor(MainWindow *_mainWindow);\r\n      2       public: GLWidget(QWidget *_parent = 0);\r\n      2       public: InsertModelWidget(QWidget *_parent = 0);\r\n      2       public: JointControlWidget(QWidget *_parent = 0);\r\n      2       public: LayersWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayView(LogPlayWidget *_parent = 0);\r\n      2       public: ModelListWidget(QWidget *_parent = 0);\r\n      2       public: RenderWidget(QWidget *_parent = 0);\r\n      2       public: TimePanel(QWidget *_parent = 0);\r\n      2       public: TimeWidget(QWidget *_parent = 0);\r\n      2       public: ToolsWidget(QWidget *_parent = 0);\r\n      2       public: TopToolbar(QWidget *_parent = 0);\r\n      2       public: TopicSelector(QWidget *_parent = 0);\r\n      2       public: VideoRecorder(QWidget *_parent = 0);\r\n      2       public: ViewAngleWidget(QWidget *_parent = 0);\r\n      2       public: BaseInspectorDialog(QWidget *_parent);\r\n      2       public: BuildingEditor(MainWindow *_mainWindow);\r\n      2       public: BuildingEditorPalette(QWidget *_parent = 0);\r\n      2       public: BuildingEditorWidget(QWidget *_parent = 0);\r\n      2       public: EditorView(QWidget *_parent = 0);\r\n      2       public: ImportImageDialog(QWidget *_parent = 0);\r\n      2       public: ImportImageView(ImportImageDialog *_parent = 0);\r\n      2       public: LevelInspectorDialog(QWidget *_parent = 0);\r\n      2       public: LevelWidget(QWidget *_parent = 0);\r\n      2       public: RotateHandle(QGraphicsItem *_parent = 0);\r\n      2       public: ScaleWidget(QWidget *_parent = 0);\r\n      2       public: SegmentItem(QGraphicsItem *_parent = 0);\r\n      2       public: StairsInspectorDialog(QWidget *_parent = 0);\r\n      2       public: WallInspectorDialog(QWidget *_parent = 0);\r\n      1       public: EditorMaterialSwitcher(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialSwitcher(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: EditorRenderTargetListener(\r\n      1       public: EditorMaterialListener(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialListener(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: GraphScene(QWidget *_parent = 0);\r\n      2       public: GraphView(QWidget *_parent = 0);\r\n      2       public: ImportDialog(QWidget *_parent = 0);\r\n      2       public: LinkInspector(QWidget *_parent = 0);\r\n      2       public: ModelCreator(QObject *_parent = NULL);\r\n      2       public: ModelEditor(MainWindow *_mainWindow);\r\n      2       public: ModelEditorPalette(QWidget *_parent = 0);\r\n      2       public: ModelPluginInspector(QWidget *_parent = 0);\r\n      2       public: ModelTreeWidget(QWidget *_parent = 0);\r\n      2       public: SchematicViewWidget(QWidget *_parent = 0);\r\n      2       public: PlotMagnifier(QwtPlotCanvas *_canvas)\r\n      2       public: PlotMagnifier(QWidget *_canvas)\r\n      2       public: IncrementalPlot(QWidget *_parent = nullptr);\r\n      2       public: Palette(QWidget *_parent);\r\n      2       public: PlotCanvas(QWidget *_parent);\r\n      2       public: PlotCurve(const std::string &_label);\r\n      2       public: PlotTracker(QwtPlotCanvas *_canvas);\r\n      2       public: PlotTracker(QWidget *_canvas);\r\n      2   public: DragableListWidget(QWidget *_parent)\r\n      2       public: PlotWindow(QWidget *_parent = nullptr);\r\n      2       public: TopicCurve(const std::string &_topic);\r\n      2       public: VariablePill(QWidget *_parent = nullptr);\r\n      2       public: VariablePillContainer(QWidget *_parent = nullptr);\r\n      2       public: TerrainEditor(MainWindow *_mainWindow);\r\n      2       public: TerrainEditorPalette(QWidget *_parent = 0);\r\n      2       public: ImageFrame(QWidget *_parent);\r\n      2       public: ImageView(QWidget *_parent = NULL);\r\n      2       public: ImagesView(QWidget *_parent = nullptr);\r\n      2       public: LaserView(QWidget *_parent = NULL);\r\n      2                  public: CustomView(QWidget *_parent)\r\n~~~", "markup": "markdown", "html": "<p>We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.</p>\n<p>This is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes <code>explicit</code> and the first character (<code>-</code> or <code>+</code>), then counts unique adjacent lines. Everything that starts with a <code>2</code> was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of <code>explicit</code>, except for <code>EditorMaterialSwitcher.hh</code> which needed some lines to be wrapped to stay under 80 characters.</p>\n<div class=\"codehilite\"><pre><span></span>$ hg up explicit_constructors_gui\n$ hg diff -r default <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> grep <span class=\"s1\">&#39;^[-+] &#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s@explicit @@&#39;</span> -e <span class=\"s1\">&#39;s@^.@@&#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> uniq -c\n      <span class=\"m\">2</span>       public: AlignWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ApplyWrenchDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: CloneWindow<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DataLogger<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: Editor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GLWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: InsertModelWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: JointControlWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LayersWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LogPlayWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LogPlayView<span class=\"o\">(</span>LogPlayWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelListWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: RenderWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TimePanel<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TimeWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ToolsWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopToolbar<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopicSelector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VideoRecorder<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ViewAngleWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BaseInspectorDialog<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditorWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: EditorView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportImageDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportImageView<span class=\"o\">(</span>ImportImageDialog *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LevelInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LevelWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: RotateHandle<span class=\"o\">(</span>QGraphicsItem *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ScaleWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SegmentItem<span class=\"o\">(</span>QGraphicsItem *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: StairsInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: WallInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialSwitcher<span class=\"o\">(</span>const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialSwitcher<span class=\"o\">(</span>\n      <span class=\"m\">1</span>                   const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: EditorRenderTargetListener<span class=\"o\">(</span>\n      <span class=\"m\">1</span>       public: EditorMaterialListener<span class=\"o\">(</span>const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialListener<span class=\"o\">(</span>\n      <span class=\"m\">1</span>                   const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GraphScene<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GraphView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LinkInspector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelCreator<span class=\"o\">(</span>QObject *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelPluginInspector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelTreeWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SchematicViewWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotMagnifier<span class=\"o\">(</span>QwtPlotCanvas *_canvas<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: PlotMagnifier<span class=\"o\">(</span>QWidget *_canvas<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: IncrementalPlot<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: Palette<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotCanvas<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotCurve<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_label<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotTracker<span class=\"o\">(</span>QwtPlotCanvas *_canvas<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotTracker<span class=\"o\">(</span>QWidget *_canvas<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>   public: DragableListWidget<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: PlotWindow<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopicCurve<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_topic<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VariablePill<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VariablePillContainer<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TerrainEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TerrainEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImageFrame<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImageView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImagesView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LaserView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>                  public: CustomView<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Mark many gui constructors as explicit", "markup": "markdown", "html": "<p>Mark many gui constructors as explicit</p>", "type": "rendered"}}, "type": "pullrequest", "description": "We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit ` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit `, except for `EditorMaterialSwitcher.hh` which needed some lines to be wrapped to stay under 80 characters.\r\n\r\n~~~\r\n$ hg up explicit_constructors_gui\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AlignWidget(QWidget *_parent = 0);\r\n      2       public: ApplyWrenchDialog(QWidget *_parent = 0);\r\n      2       public: CloneWindow(QWidget *_parent = 0);\r\n      2       public: DataLogger(QWidget *_parent = 0);\r\n      2       public: Editor(MainWindow *_mainWindow);\r\n      2       public: GLWidget(QWidget *_parent = 0);\r\n      2       public: InsertModelWidget(QWidget *_parent = 0);\r\n      2       public: JointControlWidget(QWidget *_parent = 0);\r\n      2       public: LayersWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayView(LogPlayWidget *_parent = 0);\r\n      2       public: ModelListWidget(QWidget *_parent = 0);\r\n      2       public: RenderWidget(QWidget *_parent = 0);\r\n      2       public: TimePanel(QWidget *_parent = 0);\r\n      2       public: TimeWidget(QWidget *_parent = 0);\r\n      2       public: ToolsWidget(QWidget *_parent = 0);\r\n      2       public: TopToolbar(QWidget *_parent = 0);\r\n      2       public: TopicSelector(QWidget *_parent = 0);\r\n      2       public: VideoRecorder(QWidget *_parent = 0);\r\n      2       public: ViewAngleWidget(QWidget *_parent = 0);\r\n      2       public: BaseInspectorDialog(QWidget *_parent);\r\n      2       public: BuildingEditor(MainWindow *_mainWindow);\r\n      2       public: BuildingEditorPalette(QWidget *_parent = 0);\r\n      2       public: BuildingEditorWidget(QWidget *_parent = 0);\r\n      2       public: EditorView(QWidget *_parent = 0);\r\n      2       public: ImportImageDialog(QWidget *_parent = 0);\r\n      2       public: ImportImageView(ImportImageDialog *_parent = 0);\r\n      2       public: LevelInspectorDialog(QWidget *_parent = 0);\r\n      2       public: LevelWidget(QWidget *_parent = 0);\r\n      2       public: RotateHandle(QGraphicsItem *_parent = 0);\r\n      2       public: ScaleWidget(QWidget *_parent = 0);\r\n      2       public: SegmentItem(QGraphicsItem *_parent = 0);\r\n      2       public: StairsInspectorDialog(QWidget *_parent = 0);\r\n      2       public: WallInspectorDialog(QWidget *_parent = 0);\r\n      1       public: EditorMaterialSwitcher(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialSwitcher(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: EditorRenderTargetListener(\r\n      1       public: EditorMaterialListener(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialListener(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: GraphScene(QWidget *_parent = 0);\r\n      2       public: GraphView(QWidget *_parent = 0);\r\n      2       public: ImportDialog(QWidget *_parent = 0);\r\n      2       public: LinkInspector(QWidget *_parent = 0);\r\n      2       public: ModelCreator(QObject *_parent = NULL);\r\n      2       public: ModelEditor(MainWindow *_mainWindow);\r\n      2       public: ModelEditorPalette(QWidget *_parent = 0);\r\n      2       public: ModelPluginInspector(QWidget *_parent = 0);\r\n      2       public: ModelTreeWidget(QWidget *_parent = 0);\r\n      2       public: SchematicViewWidget(QWidget *_parent = 0);\r\n      2       public: PlotMagnifier(QwtPlotCanvas *_canvas)\r\n      2       public: PlotMagnifier(QWidget *_canvas)\r\n      2       public: IncrementalPlot(QWidget *_parent = nullptr);\r\n      2       public: Palette(QWidget *_parent);\r\n      2       public: PlotCanvas(QWidget *_parent);\r\n      2       public: PlotCurve(const std::string &_label);\r\n      2       public: PlotTracker(QwtPlotCanvas *_canvas);\r\n      2       public: PlotTracker(QWidget *_canvas);\r\n      2   public: DragableListWidget(QWidget *_parent)\r\n      2       public: PlotWindow(QWidget *_parent = nullptr);\r\n      2       public: TopicCurve(const std::string &_topic);\r\n      2       public: VariablePill(QWidget *_parent = nullptr);\r\n      2       public: VariablePillContainer(QWidget *_parent = nullptr);\r\n      2       public: TerrainEditor(MainWindow *_mainWindow);\r\n      2       public: TerrainEditorPalette(QWidget *_parent = 0);\r\n      2       public: ImageFrame(QWidget *_parent);\r\n      2       public: ImageView(QWidget *_parent = NULL);\r\n      2       public: ImagesView(QWidget *_parent = nullptr);\r\n      2       public: LaserView(QWidget *_parent = NULL);\r\n      2                  public: CustomView(QWidget *_parent)\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2790/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:a3eb517b0fa5%0Df8f238d19f91?from_pullrequest_id=2790"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2790.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2790/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2790"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:a3eb517b0fa5%0Df8f238d19f91?from_pullrequest_id=2790"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2790/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2790/statuses_page=1.json"}}, "title": "Mark many gui constructors as explicit", "close_source_branch": true, "reviewers": [], "id": 2790, "destination": {"commit": {"hash": "f8f238d19f91", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f8f238d19f91.json"}, "html": {"href": "#!/osrf/gazebo/commits/f8f238d19f91"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-10-19T17:58:06.140173+00:00", "summary": {"raw": "We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit ` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit `, except for `EditorMaterialSwitcher.hh` which needed some lines to be wrapped to stay under 80 characters.\r\n\r\n~~~\r\n$ hg up explicit_constructors_gui\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AlignWidget(QWidget *_parent = 0);\r\n      2       public: ApplyWrenchDialog(QWidget *_parent = 0);\r\n      2       public: CloneWindow(QWidget *_parent = 0);\r\n      2       public: DataLogger(QWidget *_parent = 0);\r\n      2       public: Editor(MainWindow *_mainWindow);\r\n      2       public: GLWidget(QWidget *_parent = 0);\r\n      2       public: InsertModelWidget(QWidget *_parent = 0);\r\n      2       public: JointControlWidget(QWidget *_parent = 0);\r\n      2       public: LayersWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayWidget(QWidget *_parent = 0);\r\n      2       public: LogPlayView(LogPlayWidget *_parent = 0);\r\n      2       public: ModelListWidget(QWidget *_parent = 0);\r\n      2       public: RenderWidget(QWidget *_parent = 0);\r\n      2       public: TimePanel(QWidget *_parent = 0);\r\n      2       public: TimeWidget(QWidget *_parent = 0);\r\n      2       public: ToolsWidget(QWidget *_parent = 0);\r\n      2       public: TopToolbar(QWidget *_parent = 0);\r\n      2       public: TopicSelector(QWidget *_parent = 0);\r\n      2       public: VideoRecorder(QWidget *_parent = 0);\r\n      2       public: ViewAngleWidget(QWidget *_parent = 0);\r\n      2       public: BaseInspectorDialog(QWidget *_parent);\r\n      2       public: BuildingEditor(MainWindow *_mainWindow);\r\n      2       public: BuildingEditorPalette(QWidget *_parent = 0);\r\n      2       public: BuildingEditorWidget(QWidget *_parent = 0);\r\n      2       public: EditorView(QWidget *_parent = 0);\r\n      2       public: ImportImageDialog(QWidget *_parent = 0);\r\n      2       public: ImportImageView(ImportImageDialog *_parent = 0);\r\n      2       public: LevelInspectorDialog(QWidget *_parent = 0);\r\n      2       public: LevelWidget(QWidget *_parent = 0);\r\n      2       public: RotateHandle(QGraphicsItem *_parent = 0);\r\n      2       public: ScaleWidget(QWidget *_parent = 0);\r\n      2       public: SegmentItem(QGraphicsItem *_parent = 0);\r\n      2       public: StairsInspectorDialog(QWidget *_parent = 0);\r\n      2       public: WallInspectorDialog(QWidget *_parent = 0);\r\n      1       public: EditorMaterialSwitcher(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialSwitcher(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: EditorRenderTargetListener(\r\n      1       public: EditorMaterialListener(const rendering::CameraPtr &_camera);\r\n      1       public: EditorMaterialListener(\r\n      1                   const rendering::CameraPtr &_camera);\r\n      2       public: GraphScene(QWidget *_parent = 0);\r\n      2       public: GraphView(QWidget *_parent = 0);\r\n      2       public: ImportDialog(QWidget *_parent = 0);\r\n      2       public: LinkInspector(QWidget *_parent = 0);\r\n      2       public: ModelCreator(QObject *_parent = NULL);\r\n      2       public: ModelEditor(MainWindow *_mainWindow);\r\n      2       public: ModelEditorPalette(QWidget *_parent = 0);\r\n      2       public: ModelPluginInspector(QWidget *_parent = 0);\r\n      2       public: ModelTreeWidget(QWidget *_parent = 0);\r\n      2       public: SchematicViewWidget(QWidget *_parent = 0);\r\n      2       public: PlotMagnifier(QwtPlotCanvas *_canvas)\r\n      2       public: PlotMagnifier(QWidget *_canvas)\r\n      2       public: IncrementalPlot(QWidget *_parent = nullptr);\r\n      2       public: Palette(QWidget *_parent);\r\n      2       public: PlotCanvas(QWidget *_parent);\r\n      2       public: PlotCurve(const std::string &_label);\r\n      2       public: PlotTracker(QwtPlotCanvas *_canvas);\r\n      2       public: PlotTracker(QWidget *_canvas);\r\n      2   public: DragableListWidget(QWidget *_parent)\r\n      2       public: PlotWindow(QWidget *_parent = nullptr);\r\n      2       public: TopicCurve(const std::string &_topic);\r\n      2       public: VariablePill(QWidget *_parent = nullptr);\r\n      2       public: VariablePillContainer(QWidget *_parent = nullptr);\r\n      2       public: TerrainEditor(MainWindow *_mainWindow);\r\n      2       public: TerrainEditorPalette(QWidget *_parent = 0);\r\n      2       public: ImageFrame(QWidget *_parent);\r\n      2       public: ImageView(QWidget *_parent = NULL);\r\n      2       public: ImagesView(QWidget *_parent = nullptr);\r\n      2       public: LaserView(QWidget *_parent = NULL);\r\n      2                  public: CustomView(QWidget *_parent)\r\n~~~", "markup": "markdown", "html": "<p>We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the gui classes explicit in this pull request.</p>\n<p>This is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes <code>explicit</code> and the first character (<code>-</code> or <code>+</code>), then counts unique adjacent lines. Everything that starts with a <code>2</code> was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of <code>explicit</code>, except for <code>EditorMaterialSwitcher.hh</code> which needed some lines to be wrapped to stay under 80 characters.</p>\n<div class=\"codehilite\"><pre><span></span>$ hg up explicit_constructors_gui\n$ hg diff -r default <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> grep <span class=\"s1\">&#39;^[-+] &#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s@explicit @@&#39;</span> -e <span class=\"s1\">&#39;s@^.@@&#39;</span> <span class=\"se\">\\</span>\n  <span class=\"p\">|</span> uniq -c\n      <span class=\"m\">2</span>       public: AlignWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ApplyWrenchDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: CloneWindow<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: DataLogger<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: Editor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GLWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: InsertModelWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: JointControlWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LayersWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LogPlayWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LogPlayView<span class=\"o\">(</span>LogPlayWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelListWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: RenderWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TimePanel<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TimeWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ToolsWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopToolbar<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopicSelector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VideoRecorder<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ViewAngleWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BaseInspectorDialog<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: BuildingEditorWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: EditorView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportImageDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportImageView<span class=\"o\">(</span>ImportImageDialog *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LevelInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LevelWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: RotateHandle<span class=\"o\">(</span>QGraphicsItem *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ScaleWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SegmentItem<span class=\"o\">(</span>QGraphicsItem *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: StairsInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: WallInspectorDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialSwitcher<span class=\"o\">(</span>const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialSwitcher<span class=\"o\">(</span>\n      <span class=\"m\">1</span>                   const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: EditorRenderTargetListener<span class=\"o\">(</span>\n      <span class=\"m\">1</span>       public: EditorMaterialListener<span class=\"o\">(</span>const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">1</span>       public: EditorMaterialListener<span class=\"o\">(</span>\n      <span class=\"m\">1</span>                   const rendering::CameraPtr <span class=\"p\">&amp;</span>_camera<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GraphScene<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: GraphView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImportDialog<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LinkInspector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelCreator<span class=\"o\">(</span>QObject *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelPluginInspector<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ModelTreeWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: SchematicViewWidget<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotMagnifier<span class=\"o\">(</span>QwtPlotCanvas *_canvas<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: PlotMagnifier<span class=\"o\">(</span>QWidget *_canvas<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: IncrementalPlot<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: Palette<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotCanvas<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotCurve<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_label<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotTracker<span class=\"o\">(</span>QwtPlotCanvas *_canvas<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: PlotTracker<span class=\"o\">(</span>QWidget *_canvas<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>   public: DragableListWidget<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span>\n      <span class=\"m\">2</span>       public: PlotWindow<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TopicCurve<span class=\"o\">(</span>const std::string <span class=\"p\">&amp;</span>_topic<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VariablePill<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: VariablePillContainer<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TerrainEditor<span class=\"o\">(</span>MainWindow *_mainWindow<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: TerrainEditorPalette<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> <span class=\"m\">0</span><span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImageFrame<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImageView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: ImagesView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> nullptr<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>       public: LaserView<span class=\"o\">(</span>QWidget *_parent <span class=\"o\">=</span> NULL<span class=\"o\">)</span><span class=\"p\">;</span>\n      <span class=\"m\">2</span>                  public: CustomView<span class=\"o\">(</span>QWidget *_parent<span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "d54132fbc649", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d54132fbc649.json"}, "html": {"href": "#!/osrf/gazebo/commits/d54132fbc649"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_gui"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-10-20T00:10:03.058162+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-25T21:09:39.364712+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-11-02T17:34:15.086082+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-11-02T18:22:15.343875+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}