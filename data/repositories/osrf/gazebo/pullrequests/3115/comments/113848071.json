{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115/comments/113848071.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/koonpeng/gazebo:8a858c9a6de5..2b59492f96fc?path=gazebo%2Fcommon%2FColladaLoader.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115/_/diff#comment-113848071"}}, "parent": {"id": 113650410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115/comments/113650410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115/_/diff#comment-113650410"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3115, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115"}}, "title": "fix wrong node weights caused by buffer overflow bug"}, "content": {"raw": "`daeVertIndex`stores the index of a vertex defined in the collada file, this can range from 0 to number of vertices.\n\nAt line 1951, `values` is defined as`unsigned int *values = new unsigned int[offsetSize];` `offsetSize` refers to the number of inputs in a `<triangles>`, this is usually 2-3.\n\nwhen`values[daeVertIndex]` is accessed, if `daeVertIndex > offsetSize`, we a buffer overflow read. Compared to `LoadPolylist`'s implementation \\(line 1755\\), its likely that the intended code is `i < skel->GetNumVertNodeWeights(daeVertIndex); ++i)`.\n\nconverting `values`to a `std::vector`and using `std::vector::at`is just a stop gap solution to prevent other potential buffer overflow from `values`. Should I undo the conversion to `std::vector`can only submit the overflow fixes for PR?", "markup": "markdown", "html": "<p><code>daeVertIndex</code>stores the index of a vertex defined in the collada file, this can range from 0 to number of vertices.</p>\n<p>At line 1951, <code>values</code> is defined as<code>unsigned int *values = new unsigned int[offsetSize];</code> <code>offsetSize</code> refers to the number of inputs in a <code>&lt;triangles&gt;</code>, this is usually 2-3.</p>\n<p>when<code>values[daeVertIndex]</code> is accessed, if <code>daeVertIndex &gt; offsetSize</code>, we a buffer overflow read. Compared to <code>LoadPolylist</code>'s implementation (line 1755), its likely that the intended code is <code>i &lt; skel-&gt;GetNumVertNodeWeights(daeVertIndex); ++i)</code>.</p>\n<p>converting <code>values</code>to a <code>std::vector</code>and using <code>std::vector::at</code>is just a stop gap solution to prevent other potential buffer overflow from <code>values</code>. Should I undo the conversion to <code>std::vector</code>can only submit the overflow fixes for PR?</p>", "type": "rendered"}, "created_on": "2019-08-21T07:26:11.917009+00:00", "user": {"display_name": "Teo Koon Peng", "uuid": "{1ec15fb5-59a2-4750-86ab-0900d87b47c6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ec15fb5-59a2-4750-86ab-0900d87b47c6%7D"}, "html": {"href": "https://bitbucket.org/%7B1ec15fb5-59a2-4750-86ab-0900d87b47c6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56fb2af5c994aba4bbdf23b8eec5e2e4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTP-6.png"}}, "nickname": "koonpeng", "type": "user", "account_id": "5bf383ae368afa1e1c7548ea"}, "inline": {"to": 2049, "from": null, "outdated": true, "path": "gazebo/common/ColladaLoader.cc"}, "updated_on": "2019-08-21T07:28:00.317677+00:00", "type": "pullrequest_comment", "id": 113848071}