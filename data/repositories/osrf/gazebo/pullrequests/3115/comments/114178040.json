{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115/comments/114178040.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/koonpeng/gazebo:8a858c9a6de5..2b59492f96fc?path=gazebo%2Fcommon%2FColladaLoader.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115/_/diff#comment-114178040"}}, "parent": {"id": 114173183, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115/comments/114173183.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115/_/diff#comment-114173183"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3115, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115"}}, "title": "fix wrong node weights caused by buffer overflow bug"}, "content": {"raw": "To expand on this:\n\nSince this code only impacts loading, I would estimate that the very minor performance penalty of `.at()` versus `operator[]` is completely negligible.\n\nUsing `.at()` allows us to completely avoid undefined behavior in situations where the assumptions of the loader are not met by the contents of the collada file.\n\nOf course in an ideal implementation, all of the assumptions made by the loader are valid, and the contents of the collada file comply with those assumptions. But we\u2019ve repeatedly come across cases where the logic in the collada loader is flawed, and it\u2019s hard to identify where those flaws are when it results in undefined behavior instead of exceptions.", "markup": "markdown", "html": "<p>To expand on this:</p>\n<p>Since this code only impacts loading, I would estimate that the very minor performance penalty of <code>.at()</code> versus <code>operator[]</code> is completely negligible.</p>\n<p>Using <code>.at()</code> allows us to completely avoid undefined behavior in situations where the assumptions of the loader are not met by the contents of the collada file.</p>\n<p>Of course in an ideal implementation, all of the assumptions made by the loader are valid, and the contents of the collada file comply with those assumptions. But we\u2019ve repeatedly come across cases where the logic in the collada loader is flawed, and it\u2019s hard to identify where those flaws are when it results in undefined behavior instead of exceptions.</p>", "type": "rendered"}, "created_on": "2019-08-23T03:24:15.380929+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 2049, "from": null, "outdated": true, "path": "gazebo/common/ColladaLoader.cc"}, "updated_on": "2019-08-23T03:24:15.390632+00:00", "type": "pullrequest_comment", "id": 114178040}