{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115/comments/113998599.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/koonpeng/gazebo:8a858c9a6de5..2b59492f96fc?path=gazebo%2Fcommon%2FColladaLoader.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115/_/diff#comment-113998599"}}, "parent": {"id": 113848071, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115/comments/113848071.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115/_/diff#comment-113848071"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3115, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3115.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3115"}}, "title": "fix wrong node weights caused by buffer overflow bug"}, "content": {"raw": "Using a `std::vector` instead of a dynamically allocated array is definitely an improvement in my opinion, so let\u2019s definitely keep that change.\n\nI'm more surprised at the change from `values[daeVertIndex]` to just `daeVertIndex`. That strikes me as a super significant behavioral change, so I\u2019d like to really grok what\u2019s happening and understand how that error could have gotten there in the first place.\n\nIf `offsetSize` usually has a value of 2-3, then my intuition tells me that this code should produce undefined behavior for any .dae that has a skeleton with more than 2-3 vertices. Has it really been that broken all this time?", "markup": "markdown", "html": "<p>Using a <code>std::vector</code> instead of a dynamically allocated array is definitely an improvement in my opinion, so let\u2019s definitely keep that change.</p>\n<p>I'm more surprised at the change from <code>values[daeVertIndex]</code> to just <code>daeVertIndex</code>. That strikes me as a super significant behavioral change, so I\u2019d like to really grok what\u2019s happening and understand how that error could have gotten there in the first place.</p>\n<p>If <code>offsetSize</code> usually has a value of 2-3, then my intuition tells me that this code should produce undefined behavior for any .dae that has a skeleton with more than 2-3 vertices. Has it really been that broken all this time?</p>", "type": "rendered"}, "created_on": "2019-08-22T02:48:11.372570+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 2049, "from": null, "outdated": true, "path": "gazebo/common/ColladaLoader.cc"}, "updated_on": "2019-08-22T02:48:11.384974+00:00", "type": "pullrequest_comment", "id": 113998599}