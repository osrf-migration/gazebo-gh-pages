{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3117/comments/113177560.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3117/_/diff#comment-113177560"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3117, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3117.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3117"}}, "title": "Merge 9 -> 10"}, "content": {"raw": "I'm seeing a lot of test failures in CI with console output like the following:\n\n~~~\nterminate called after throwing an instance of 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >'\n  what():  boost thread: trying joining itself: Resource deadlock avoided\n~~~\n\nI collected some backtraces locally that contain the following:\n\n~~~\n#8  0x00007f9fc22e3190 in boost::thread_exception::~thread_exception (this=<optimized out>, __in_chrg=<optimized out>) at /usr/include/boost/thread/exceptions.hpp:60\n#9  boost::thread_resource_error::~thread_resource_error (this=<optimized out>, __in_chrg=<optimized out>) at /usr/include/boost/thread/exceptions.hpp:145\n#10 boost::thread::join (this=<optimized out>) at /usr/include/boost/thread/detail/thread.hpp:763\n#11 gazebo::transport::IOManager::Stop (this=this@entry=0x7f9f88003610) at gazebo/transport/IOManager.cc:53\n#12 0x00007f9fc22e31b2 in gazebo::transport::IOManager::~IOManager (this=0x7f9f88003610, __in_chrg=<optimized out>) at gazebo/transport/IOManager.cc:37\n#13 0x00007f9fc22c2fee in gazebo::transport::Connection::~Connection (this=0x7f9f80000e30, __in_chrg=<optimized out>) at gazebo/transport/Connection.cc:135\n...\n#27 gazebo::common::details::WeakBinder<boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::transport::Connection, boost::system::error_code const&>, boost::_bi::list2<boost::_bi::value<gazebo::transport::Connection*>, boost::arg<1> (*)()> >, gazebo::transport::Connection>::operator()<boost::system::error_code const&> (this=0x7f9f87ffe030) at gazebo/common/WeakBind.hh:82\n#28 boost::asio::detail::binder1<gazebo::common::details::WeakBinder<boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::transport::Connection, boost::system::error_code const&>, boost::_bi::list2<boost::_bi::value<gazebo::transport::Connection*>, boost::arg<1> (*)()> >, gazebo::transport::Connection>, boost::system::error_code>::operator() (this=0x7f9f87ffe030) at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#29 boost::asio::asio_handler_invoke<boost::asio::detail::binder1<gazebo::common::details::WeakBinder<boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::transport::Connection, boost::system::error_code const&>, boost::_bi::list2<boost::_bi::value<gazebo::transport::Connection*>, boost::arg<1> (*)()> >, gazebo::transport::Connection>, boost::system::error_code> > (function=...) at /usr/include/boost/asio/handler_invoke_hook.hpp:69\n#30 boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder1<gazebo::common::details::WeakBinder<boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::transport::Connection, boost::system::error_code const&>, boost::_bi::list2<boost::_bi::value<gazebo::transport::Connection*>, boost::arg<1> (*)()> >, gazebo::transport::Connection>, boost::system::error_code>, gazebo::common::details::WeakBinder<boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::transport::Connection, boost::system::error_code const&>, boost::_bi::list2<boost::_bi::value<gazebo::transport::Connection*>, boost::arg<1> (*)()> >, gazebo::transport::Connection> > (context=..., function=...) at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#31 boost::asio::detail::reactive_socket_accept_op<boost::asio::basic_socket<boost::asio::ip::tcp, boost::asio::stream_socket_service<boost::asio::ip::tcp> >, boost::asio::ip::tcp, gazebo::common::details::WeakBinder<boost::_bi::bind_t<void, boost::_mfi::mf1<void, gazebo::transport::Connection, boost::system::error_code const&>, boost::_bi::list2<boost::_bi::value<gazebo::transport::Connection*>, boost::arg<1> (*)()> >, gazebo::transport::Connection> >::do_complete (owner=<optimized out>, base=<optimized out>) at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n~~~\n\nI think the main difference on gazebo10 might be from pull request #2922?", "markup": "markdown", "html": "<p>I'm seeing a lot of test failures in CI with console output like the following:</p>\n<div class=\"codehilite\"><pre><span></span>terminate called after throwing an instance of &#39;boost::exception_detail::clone_impl&lt;boost::exception_detail::error_info_injector&lt;boost::thread_resource_error&gt; &gt;&#39;\n  what():  boost thread: trying joining itself: Resource deadlock avoided\n</pre></div>\n\n\n<p>I collected some backtraces locally that contain the following:</p>\n<div class=\"codehilite\"><pre><span></span>#8  0x00007f9fc22e3190 in boost::thread_exception::~thread_exception (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/boost/thread/exceptions.hpp:60\n#9  boost::thread_resource_error::~thread_resource_error (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/boost/thread/exceptions.hpp:145\n#10 boost::thread::join (this=&lt;optimized out&gt;) at /usr/include/boost/thread/detail/thread.hpp:763\n#11 gazebo::transport::IOManager::Stop (this=this@entry=0x7f9f88003610) at gazebo/transport/IOManager.cc:53\n#12 0x00007f9fc22e31b2 in gazebo::transport::IOManager::~IOManager (this=0x7f9f88003610, __in_chrg=&lt;optimized out&gt;) at gazebo/transport/IOManager.cc:37\n#13 0x00007f9fc22c2fee in gazebo::transport::Connection::~Connection (this=0x7f9f80000e30, __in_chrg=&lt;optimized out&gt;) at gazebo/transport/Connection.cc:135\n...\n#27 gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt; (*)()&gt; &gt;, gazebo::transport::Connection&gt;::operator()&lt;boost::system::error_code const&amp;&gt; (this=0x7f9f87ffe030) at gazebo/common/WeakBind.hh:82\n#28 boost::asio::detail::binder1&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt; (*)()&gt; &gt;, gazebo::transport::Connection&gt;, boost::system::error_code&gt;::operator() (this=0x7f9f87ffe030) at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#29 boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt; (*)()&gt; &gt;, gazebo::transport::Connection&gt;, boost::system::error_code&gt; &gt; (function=...) at /usr/include/boost/asio/handler_invoke_hook.hpp:69\n#30 boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt; (*)()&gt; &gt;, gazebo::transport::Connection&gt;, boost::system::error_code&gt;, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt; (*)()&gt; &gt;, gazebo::transport::Connection&gt; &gt; (context=..., function=...) at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#31 boost::asio::detail::reactive_socket_accept_op&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::ip::tcp, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt; (*)()&gt; &gt;, gazebo::transport::Connection&gt; &gt;::do_complete (owner=&lt;optimized out&gt;, base=&lt;optimized out&gt;) at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n</pre></div>\n\n\n<p>I think the main difference on gazebo10 might be from <a href=\"#!/osrf/gazebo/pull-requests/2922/stop-the-world-from-a-plugin\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2922</a>?</p>", "type": "rendered"}, "created_on": "2019-08-14T22:07:43.236390+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-08-14T22:07:43.245890+00:00", "type": "pullrequest_comment", "id": 113177560}