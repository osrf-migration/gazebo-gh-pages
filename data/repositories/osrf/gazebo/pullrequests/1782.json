{"rendered": {"reason": {"raw": "Pull request #1872 replaces this pull request. This is being done primarily to speed up the review process. ", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/1872/add-battery-class-redo-of-pull-request\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #1872</a> replaces this pull request. This is being done primarily to speed up the review process. </p>", "type": "rendered"}, "description": {"raw": "Gazebo does not have a Battery class. This pull request provides an ideal battery model whose behavior can be overriden by a plugin.\r\n\r\nA battery model would be useful to simulate the power consumption of a robot. The amount of power consumed by each component of a robot depends on its usage and must be carefuly simulated to identify eventual design flaws.\r\n\r\nIn the proposed implementation, a plugin can access a battery with Link::GetBattery(). The default battery model is ideal: It just takes the initial voltage value as its constant voltage value. This behavior can be changed by specifying a custom Update function with Battery::SetUpdateFunc(T _updateFunc). The current voltage value can be requested at any time with Battery::GetVoltage().\r\n\r\nThe battery handles a list of consumers. The function Battery::AddConsumer() creates a new consumer and returns a unique consumer identifier. The power load for a consumer can then be specified by calling Battery::SetPowerLoad(uint32_t _consumerId, double _powerLoad).\r\n\r\nThe battery updates itself after each simulation iteration. It takes the power loads for each consumer and current voltage value as inputs and returns a new voltage value.\r\n\r\nIf it gets accepted, this feature would require a new optional section in the link SDF file:\r\n\r\n```\r\n#!xml\r\n<model>\r\n  <link name=\"battery\">\r\n    <battery>\r\n      <voltage>12.0</voltage> <!-- Initial voltage in volts -->\r\n      <initial_power_load>2.0</initial_power_load> <!-- Initial power load in watts -->\r\n    </battery>\r\n  </link>\r\n</model>\r\n```\r\n\r\nAt the client side, battery properties will be displayed in the property tree of a link ONLY if a battery model exists for this link.", "markup": "markdown", "html": "<p>Gazebo does not have a Battery class. This pull request provides an ideal battery model whose behavior can be overriden by a plugin.</p>\n<p>A battery model would be useful to simulate the power consumption of a robot. The amount of power consumed by each component of a robot depends on its usage and must be carefuly simulated to identify eventual design flaws.</p>\n<p>In the proposed implementation, a plugin can access a battery with Link::GetBattery(). The default battery model is ideal: It just takes the initial voltage value as its constant voltage value. This behavior can be changed by specifying a custom Update function with Battery::SetUpdateFunc(T _updateFunc). The current voltage value can be requested at any time with Battery::GetVoltage().</p>\n<p>The battery handles a list of consumers. The function Battery::AddConsumer() creates a new consumer and returns a unique consumer identifier. The power load for a consumer can then be specified by calling Battery::SetPowerLoad(uint32_t _consumerId, double _powerLoad).</p>\n<p>The battery updates itself after each simulation iteration. It takes the power loads for each consumer and current voltage value as inputs and returns a new voltage value.</p>\n<p>If it gets accepted, this feature would require a new optional section in the link SDF file:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;battery&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;battery&gt;</span>\n      <span class=\"nt\">&lt;voltage&gt;</span>12.0<span class=\"nt\">&lt;/voltage&gt;</span> <span class=\"c\">&lt;!-- Initial voltage in volts --&gt;</span>\n      <span class=\"nt\">&lt;initial_power_load&gt;</span>2.0<span class=\"nt\">&lt;/initial_power_load&gt;</span> <span class=\"c\">&lt;!-- Initial power load in watts --&gt;</span>\n    <span class=\"nt\">&lt;/battery&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>At the client side, battery properties will be displayed in the property tree of a link ONLY if a battery model exists for this link.</p>", "type": "rendered"}, "title": {"raw": "Added a Battery class", "markup": "markdown", "html": "<p>Added a Battery class</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Gazebo does not have a Battery class. This pull request provides an ideal battery model whose behavior can be overriden by a plugin.\r\n\r\nA battery model would be useful to simulate the power consumption of a robot. The amount of power consumed by each component of a robot depends on its usage and must be carefuly simulated to identify eventual design flaws.\r\n\r\nIn the proposed implementation, a plugin can access a battery with Link::GetBattery(). The default battery model is ideal: It just takes the initial voltage value as its constant voltage value. This behavior can be changed by specifying a custom Update function with Battery::SetUpdateFunc(T _updateFunc). The current voltage value can be requested at any time with Battery::GetVoltage().\r\n\r\nThe battery handles a list of consumers. The function Battery::AddConsumer() creates a new consumer and returns a unique consumer identifier. The power load for a consumer can then be specified by calling Battery::SetPowerLoad(uint32_t _consumerId, double _powerLoad).\r\n\r\nThe battery updates itself after each simulation iteration. It takes the power loads for each consumer and current voltage value as inputs and returns a new voltage value.\r\n\r\nIf it gets accepted, this feature would require a new optional section in the link SDF file:\r\n\r\n```\r\n#!xml\r\n<model>\r\n  <link name=\"battery\">\r\n    <battery>\r\n      <voltage>12.0</voltage> <!-- Initial voltage in volts -->\r\n      <initial_power_load>2.0</initial_power_load> <!-- Initial power load in watts -->\r\n    </battery>\r\n  </link>\r\n</model>\r\n```\r\n\r\nAt the client side, battery properties will be displayed in the property tree of a link ONLY if a battery model exists for this link.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1782/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/ocrave/gazebo:6cb9c6df91fe%0Db54961341ffb?from_pullrequest_id=1782"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1782/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1782.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1782/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1782/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1782"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1782/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/ocrave/gazebo:6cb9c6df91fe%0Db54961341ffb?from_pullrequest_id=1782"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1782/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1782/statuses_page=1.json"}}, "title": "Added a Battery class", "close_source_branch": false, "reviewers": [{"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}], "id": 1782, "destination": {"commit": {"hash": "b54961341ffb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b54961341ffb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b54961341ffb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2015-07-07T12:30:28.049059+00:00", "summary": {"raw": "Gazebo does not have a Battery class. This pull request provides an ideal battery model whose behavior can be overriden by a plugin.\r\n\r\nA battery model would be useful to simulate the power consumption of a robot. The amount of power consumed by each component of a robot depends on its usage and must be carefuly simulated to identify eventual design flaws.\r\n\r\nIn the proposed implementation, a plugin can access a battery with Link::GetBattery(). The default battery model is ideal: It just takes the initial voltage value as its constant voltage value. This behavior can be changed by specifying a custom Update function with Battery::SetUpdateFunc(T _updateFunc). The current voltage value can be requested at any time with Battery::GetVoltage().\r\n\r\nThe battery handles a list of consumers. The function Battery::AddConsumer() creates a new consumer and returns a unique consumer identifier. The power load for a consumer can then be specified by calling Battery::SetPowerLoad(uint32_t _consumerId, double _powerLoad).\r\n\r\nThe battery updates itself after each simulation iteration. It takes the power loads for each consumer and current voltage value as inputs and returns a new voltage value.\r\n\r\nIf it gets accepted, this feature would require a new optional section in the link SDF file:\r\n\r\n```\r\n#!xml\r\n<model>\r\n  <link name=\"battery\">\r\n    <battery>\r\n      <voltage>12.0</voltage> <!-- Initial voltage in volts -->\r\n      <initial_power_load>2.0</initial_power_load> <!-- Initial power load in watts -->\r\n    </battery>\r\n  </link>\r\n</model>\r\n```\r\n\r\nAt the client side, battery properties will be displayed in the property tree of a link ONLY if a battery model exists for this link.", "markup": "markdown", "html": "<p>Gazebo does not have a Battery class. This pull request provides an ideal battery model whose behavior can be overriden by a plugin.</p>\n<p>A battery model would be useful to simulate the power consumption of a robot. The amount of power consumed by each component of a robot depends on its usage and must be carefuly simulated to identify eventual design flaws.</p>\n<p>In the proposed implementation, a plugin can access a battery with Link::GetBattery(). The default battery model is ideal: It just takes the initial voltage value as its constant voltage value. This behavior can be changed by specifying a custom Update function with Battery::SetUpdateFunc(T _updateFunc). The current voltage value can be requested at any time with Battery::GetVoltage().</p>\n<p>The battery handles a list of consumers. The function Battery::AddConsumer() creates a new consumer and returns a unique consumer identifier. The power load for a consumer can then be specified by calling Battery::SetPowerLoad(uint32_t _consumerId, double _powerLoad).</p>\n<p>The battery updates itself after each simulation iteration. It takes the power loads for each consumer and current voltage value as inputs and returns a new voltage value.</p>\n<p>If it gets accepted, this feature would require a new optional section in the link SDF file:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;battery&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;battery&gt;</span>\n      <span class=\"nt\">&lt;voltage&gt;</span>12.0<span class=\"nt\">&lt;/voltage&gt;</span> <span class=\"c\">&lt;!-- Initial voltage in volts --&gt;</span>\n      <span class=\"nt\">&lt;initial_power_load&gt;</span>2.0<span class=\"nt\">&lt;/initial_power_load&gt;</span> <span class=\"c\">&lt;!-- Initial power load in watts --&gt;</span>\n    <span class=\"nt\">&lt;/battery&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>At the client side, battery properties will be displayed in the property tree of a link ONLY if a battery model exists for this link.</p>", "type": "rendered"}, "source": {"commit": {"hash": "6cb9c6df91fe", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/6cb9c6df91fe"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/6cb9c6df91fe"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "battery"}}, "comment_count": 58, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-07-23T21:10:23.887661+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2015-08-12T12:08:46.829925+00:00", "type": "participant", "approved": false, "user": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}}, {"role": "PARTICIPANT", "participated_on": "2015-07-23T15:25:51.270091+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "REVIEWER", "participated_on": "2015-08-13T16:52:21.548728+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "Pull request #1872 replaces this pull request. This is being done primarily to speed up the review process. ", "updated_on": "2015-08-20T15:59:56.205095+00:00", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}