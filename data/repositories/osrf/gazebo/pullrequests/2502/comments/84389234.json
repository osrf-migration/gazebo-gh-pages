{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2502/comments/84389234.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/ocrave/gazebo:e7a9e5a6073b..782da195da5d?path=gazebo%2Fphysics%2FWorld.hh"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2502/_/diff#comment-84389234"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2502, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2502.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2502"}}, "title": "Make sure camera's FPS is strictly applied, should the real time factor be impacted"}, "content": {"raw": "adding `_func` as a required parameter for this (and the PhysicsIface functions too) breaks the API. Would it be possible to create a default value for this parameter? Or change it to a function pointer that defaults to `nullptr`? That should keep compatibility with the old API.", "markup": "markdown", "html": "<p>adding <code>_func</code> as a required parameter for this (and the PhysicsIface functions too) breaks the API. Would it be possible to create a default value for this parameter? Or change it to a function pointer that defaults to <code>nullptr</code>? That should keep compatibility with the old API.</p>", "type": "rendered"}, "created_on": "2018-12-03T20:45:38.868052+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 110, "from": null, "outdated": false, "path": "gazebo/physics/World.hh"}, "updated_on": "2018-12-03T20:45:38.876700+00:00", "type": "pullrequest_comment", "id": 84389234}