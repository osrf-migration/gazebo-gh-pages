{"rendered": {"reason": {"raw": "be back in github", "markup": "markdown", "html": "<p>be back in github</p>", "type": "rendered"}, "description": {"raw": "Modifications:\r\n\r\n* On Windows put all build executable and dll in build/bin, to make sure that the test executables find all the dll that they need to run \\(only on Windows to avoid  creating problems for all the places in  which the location of the tests as  `${CMAKE_CURRENT_BINARY_DIR}` is hardcoded \r\n* Do not set PATH via ENVIROMENT argument of set\\_tests\\_properties, apparently on Windows it causes the path to fail\r\n* Do not hardcode the location of the test executable \\(the hardcoded location is wrong on multi-config generator such as Visual Studio\\) but use instead the COMMAND argument of add\\_test that automatically substitute a executable target with its absolute location\r\n* Use correct path environment variable separators in Windows\r\n* Do not run the \\`check\\_test\\_ran.py\\` script unless both the Python interpreter and xsltproc are available, and pass it to the  Python interpreter instead of hoping for the shebang to work\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Modifications:</p>\n<ul>\n<li>On Windows put all build executable and dll in build/bin, to make sure that the test executables find all the dll that they need to run (only on Windows to avoid  creating problems for all the places in  which the location of the tests as  <code>${CMAKE_CURRENT_BINARY_DIR}</code> is hardcoded </li>\n<li>Do not set PATH via ENVIROMENT argument of set_tests_properties, apparently on Windows it causes the path to fail</li>\n<li>Do not hardcode the location of the test executable (the hardcoded location is wrong on multi-config generator such as Visual Studio) but use instead the COMMAND argument of add_test that automatically substitute a executable target with its absolute location</li>\n<li>Use correct path environment variable separators in Windows</li>\n<li>Do not run the `check_test_ran.py` script unless both the Python interpreter and xsltproc are available, and pass it to the  Python interpreter instead of hoping for the shebang to work</li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "title": {"raw": "Support for running tests on Windows", "markup": "markdown", "html": "<p>Support for running tests on Windows</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Modifications:\r\n\r\n* On Windows put all build executable and dll in build/bin, to make sure that the test executables find all the dll that they need to run \\(only on Windows to avoid  creating problems for all the places in  which the location of the tests as  `${CMAKE_CURRENT_BINARY_DIR}` is hardcoded \r\n* Do not set PATH via ENVIROMENT argument of set\\_tests\\_properties, apparently on Windows it causes the path to fail\r\n* Do not hardcode the location of the test executable \\(the hardcoded location is wrong on multi-config generator such as Visual Studio\\) but use instead the COMMAND argument of add\\_test that automatically substitute a executable target with its absolute location\r\n* Use correct path environment variable separators in Windows\r\n* Do not run the \\`check\\_test\\_ran.py\\` script unless both the Python interpreter and xsltproc are available, and pass it to the  Python interpreter instead of hoping for the shebang to work\r\n\r\n\u200c", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3203/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/traversaro/gazebo-32:bf7e4532fbdf%0D5f48d294547f?from_pullrequest_id=3203"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/3203/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/3203.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/3203/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3203/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3203"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/3203/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/traversaro/gazebo-32:bf7e4532fbdf%0D5f48d294547f?from_pullrequest_id=3203"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3203/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/3203/statuses_page=1.json"}}, "title": "Support for running tests on Windows", "close_source_branch": false, "reviewers": [], "id": 3203, "destination": {"commit": {"hash": "5f48d294547f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f48d294547f.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f48d294547f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo11"}}, "created_on": "2020-03-15T23:46:09.320809+00:00", "summary": {"raw": "Modifications:\r\n\r\n* On Windows put all build executable and dll in build/bin, to make sure that the test executables find all the dll that they need to run \\(only on Windows to avoid  creating problems for all the places in  which the location of the tests as  `${CMAKE_CURRENT_BINARY_DIR}` is hardcoded \r\n* Do not set PATH via ENVIROMENT argument of set\\_tests\\_properties, apparently on Windows it causes the path to fail\r\n* Do not hardcode the location of the test executable \\(the hardcoded location is wrong on multi-config generator such as Visual Studio\\) but use instead the COMMAND argument of add\\_test that automatically substitute a executable target with its absolute location\r\n* Use correct path environment variable separators in Windows\r\n* Do not run the \\`check\\_test\\_ran.py\\` script unless both the Python interpreter and xsltproc are available, and pass it to the  Python interpreter instead of hoping for the shebang to work\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Modifications:</p>\n<ul>\n<li>On Windows put all build executable and dll in build/bin, to make sure that the test executables find all the dll that they need to run (only on Windows to avoid  creating problems for all the places in  which the location of the tests as  <code>${CMAKE_CURRENT_BINARY_DIR}</code> is hardcoded </li>\n<li>Do not set PATH via ENVIROMENT argument of set_tests_properties, apparently on Windows it causes the path to fail</li>\n<li>Do not hardcode the location of the test executable (the hardcoded location is wrong on multi-config generator such as Visual Studio) but use instead the COMMAND argument of add_test that automatically substitute a executable target with its absolute location</li>\n<li>Use correct path environment variable separators in Windows</li>\n<li>Do not run the `check_test_ran.py` script unless both the Python interpreter and xsltproc are available, and pass it to the  Python interpreter instead of hoping for the shebang to work</li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "source": {"commit": {"hash": "bf7e4532fbdf", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-32/commit/bf7e4532fbdf"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-32/commits/bf7e4532fbdf"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/traversaro/gazebo-32"}, "html": {"href": "https://bitbucket.org/traversaro/gazebo-32"}, "avatar": {"href": "data/bytebucket.org/ravatar/{43783ab4-18a3-4574-86db-6c78a6c362c8}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo-32", "full_name": "traversaro/gazebo-32", "uuid": "{43783ab4-18a3-4574-86db-6c78a6c362c8}"}, "branch": {"name": "Silvio-Traversaro/on-windows-put-all-build-executable-and--1584315914211"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2020-04-17T18:48:51.660486+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}], "reason": "be back in github", "updated_on": "2020-04-17T18:49:04.627184+00:00", "author": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "merge_commit": null, "closed_by": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}