{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2562/comments/29185587.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2562/_/diff#comment-29185587"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2562, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2562.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2562"}}, "title": "Load GUI Plugins with gzclient parameter -g, fixes issue 1311"}, "content": {"raw": "Alright, here comes the update.\n\nI noticed one more flaw while testing with the KeyboardGUIPlugin. When loaded from INI file or from command line (and now calling Load()), there was an error because it could not get the main window which it needs. This is a good example actually of the necessity to always call the Load() function: the Keyboard plugin does nothing without it.\nAnyway the reason for the error was that RenderWidget is created in MainWindow constructor. Now if we initialize the INI plugins from the RenderWidget constructor (and call Load()), the main window is actually not available yet. Therefore I created a RenderWidget::Init() which is called from MainWindow::Init() and now the loading of plugins is done from there.\n\nI tested with following plugins, both in INI and in command line:\n\n* libTimerGUIPlugin.so  (also changed the defaults for empty sdf::Element so it's now displaying ok)\n* libKeyboardGUIPlugin.so (not crashing any more though I didn't test the functionality it provides via the transport node)\n* libCessnaGUIPlugin.so (doesn't crash or print errors but didn't test functionality)\n* libLookAtDemoPlugin.so (works)\n", "markup": "markdown", "html": "<p>Alright, here comes the update.</p>\n<p>I noticed one more flaw while testing with the KeyboardGUIPlugin. When loaded from INI file or from command line (and now calling Load()), there was an error because it could not get the main window which it needs. This is a good example actually of the necessity to always call the Load() function: the Keyboard plugin does nothing without it.\nAnyway the reason for the error was that RenderWidget is created in MainWindow constructor. Now if we initialize the INI plugins from the RenderWidget constructor (and call Load()), the main window is actually not available yet. Therefore I created a RenderWidget::Init() which is called from MainWindow::Init() and now the loading of plugins is done from there.</p>\n<p>I tested with following plugins, both in INI and in command line:</p>\n<ul>\n<li>libTimerGUIPlugin.so  (also changed the defaults for empty sdf::Element so it's now displaying ok)</li>\n<li>libKeyboardGUIPlugin.so (not crashing any more though I didn't test the functionality it provides via the transport node)</li>\n<li>libCessnaGUIPlugin.so (doesn't crash or print errors but didn't test functionality)</li>\n<li>libLookAtDemoPlugin.so (works)</li>\n</ul>", "type": "rendered"}, "created_on": "2017-01-05T00:26:20.975643+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": "2017-01-05T00:26:21.069048+00:00", "type": "pullrequest_comment", "id": 29185587}