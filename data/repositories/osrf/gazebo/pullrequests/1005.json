{"rendered": {"description": {"raw": "This pull request implements functions to get inertial information for a link in the world frame. Currently, the Inertial class does not have a pointer to its parent link, so it can't find its world pose. So these functions are added to the Link class instead.\r\n\r\nI also added a test for the `Link::GetWorldInertialPose` and `Link::GetWorldInertiaMatrix` functions. I added it to the INTEGRATION_physics_friction test, since I had added a useful box spawning function to that test. I made a todo in the code to move the test to a more logical location once the SpawnBox function has been moved up to ServerFixture. I guess the ServerFixture.cc file has gotten so big that I didn't want to add to it. But that's a tangent...\r\n\r\nOther things:\r\n\r\n* I noticed that bullet wasn't using the inertial pose offset, so I fixed that in BulletMotionState.\r\n* Simbody was segfaulting in the GetWorldInertia when calling SetGravity in a blank world. I fixed that in SimbodyPhysics and added a test in physics_thread_safe.\r\n* I added a test for the `Link::SetLinearVel` and `Link::SetAngularVel` functions in physics_link.cc (which is where I intend the GetWorldInertia test to go once the spawner is moved).", "markup": "markdown", "html": "<p>This pull request implements functions to get inertial information for a link in the world frame. Currently, the Inertial class does not have a pointer to its parent link, so it can't find its world pose. So these functions are added to the Link class instead.</p>\n<p>I also added a test for the <code>Link::GetWorldInertialPose</code> and <code>Link::GetWorldInertiaMatrix</code> functions. I added it to the INTEGRATION_physics_friction test, since I had added a useful box spawning function to that test. I made a todo in the code to move the test to a more logical location once the SpawnBox function has been moved up to ServerFixture. I guess the ServerFixture.cc file has gotten so big that I didn't want to add to it. But that's a tangent...</p>\n<p>Other things:</p>\n<ul>\n<li>I noticed that bullet wasn't using the inertial pose offset, so I fixed that in BulletMotionState.</li>\n<li>Simbody was segfaulting in the GetWorldInertia when calling SetGravity in a blank world. I fixed that in SimbodyPhysics and added a test in physics_thread_safe.</li>\n<li>I added a test for the <code>Link::SetLinearVel</code> and <code>Link::SetAngularVel</code> functions in physics_link.cc (which is where I intend the GetWorldInertia test to go once the spawner is moved).</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Link::GetWorldInertia functions and new tests", "markup": "markdown", "html": "<p>Link::GetWorldInertia functions and new tests</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request implements functions to get inertial information for a link in the world frame. Currently, the Inertial class does not have a pointer to its parent link, so it can't find its world pose. So these functions are added to the Link class instead.\r\n\r\nI also added a test for the `Link::GetWorldInertialPose` and `Link::GetWorldInertiaMatrix` functions. I added it to the INTEGRATION_physics_friction test, since I had added a useful box spawning function to that test. I made a todo in the code to move the test to a more logical location once the SpawnBox function has been moved up to ServerFixture. I guess the ServerFixture.cc file has gotten so big that I didn't want to add to it. But that's a tangent...\r\n\r\nOther things:\r\n\r\n* I noticed that bullet wasn't using the inertial pose offset, so I fixed that in BulletMotionState.\r\n* Simbody was segfaulting in the GetWorldInertia when calling SetGravity in a blank world. I fixed that in SimbodyPhysics and added a test in physics_thread_safe.\r\n* I added a test for the `Link::SetLinearVel` and `Link::SetAngularVel` functions in physics_link.cc (which is where I intend the GetWorldInertia test to go once the spawner is moved).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1005/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:e855a5db534c%0D135eb10d5147?from_pullrequest_id=1005"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1005/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1005.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1005/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1005/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1005"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1005/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:e855a5db534c%0D135eb10d5147?from_pullrequest_id=1005"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1005/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1005/statuses_page=1.json"}}, "title": "Link::GetWorldInertia functions and new tests", "close_source_branch": true, "reviewers": [], "id": 1005, "destination": {"commit": {"hash": "135eb10d5147", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/135eb10d5147.json"}, "html": {"href": "#!/osrf/gazebo/commits/135eb10d5147"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2014-03-07T01:58:12.990353+00:00", "summary": {"raw": "This pull request implements functions to get inertial information for a link in the world frame. Currently, the Inertial class does not have a pointer to its parent link, so it can't find its world pose. So these functions are added to the Link class instead.\r\n\r\nI also added a test for the `Link::GetWorldInertialPose` and `Link::GetWorldInertiaMatrix` functions. I added it to the INTEGRATION_physics_friction test, since I had added a useful box spawning function to that test. I made a todo in the code to move the test to a more logical location once the SpawnBox function has been moved up to ServerFixture. I guess the ServerFixture.cc file has gotten so big that I didn't want to add to it. But that's a tangent...\r\n\r\nOther things:\r\n\r\n* I noticed that bullet wasn't using the inertial pose offset, so I fixed that in BulletMotionState.\r\n* Simbody was segfaulting in the GetWorldInertia when calling SetGravity in a blank world. I fixed that in SimbodyPhysics and added a test in physics_thread_safe.\r\n* I added a test for the `Link::SetLinearVel` and `Link::SetAngularVel` functions in physics_link.cc (which is where I intend the GetWorldInertia test to go once the spawner is moved).", "markup": "markdown", "html": "<p>This pull request implements functions to get inertial information for a link in the world frame. Currently, the Inertial class does not have a pointer to its parent link, so it can't find its world pose. So these functions are added to the Link class instead.</p>\n<p>I also added a test for the <code>Link::GetWorldInertialPose</code> and <code>Link::GetWorldInertiaMatrix</code> functions. I added it to the INTEGRATION_physics_friction test, since I had added a useful box spawning function to that test. I made a todo in the code to move the test to a more logical location once the SpawnBox function has been moved up to ServerFixture. I guess the ServerFixture.cc file has gotten so big that I didn't want to add to it. But that's a tangent...</p>\n<p>Other things:</p>\n<ul>\n<li>I noticed that bullet wasn't using the inertial pose offset, so I fixed that in BulletMotionState.</li>\n<li>Simbody was segfaulting in the GetWorldInertia when calling SetGravity in a blank world. I fixed that in SimbodyPhysics and added a test in physics_thread_safe.</li>\n<li>I added a test for the <code>Link::SetLinearVel</code> and <code>Link::SetAngularVel</code> functions in physics_link.cc (which is where I intend the GetWorldInertia test to go once the spawner is moved).</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "401e4b70463d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/401e4b70463d.json"}, "html": {"href": "#!/osrf/gazebo/commits/401e4b70463d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "inertial_world"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-03-10T17:38:10.763746+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-03-10T19:24:48.074698+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2014-03-10T22:45:44.253483+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2014-03-10T22:53:40.132351+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "e855a5db534c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e855a5db534c.json"}, "html": {"href": "#!/osrf/gazebo/commits/e855a5db534c"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}