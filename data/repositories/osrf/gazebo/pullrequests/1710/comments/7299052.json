{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1710/comments/7299052.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=gazebo%2Fcommon%2FTime.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1710/_/diff#comment-7299052"}}, "parent": {"id": 7280440, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1710/comments/7280440.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1710/_/diff#comment-7280440"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1710, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1710.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1710"}}, "title": "Move FormatTime to Time class"}, "content": {"raw": "In pull request #1594, I fixed some clang warnings complaining about using the integer `abs()` with floating point values. This was happening because all literal constants expressed in scientific notation are interpreted as floating point values.\n\nSo to be safe, we should usually stay away from using scientific notation with our integer-based time class. A workaround is to declare constants like `const int32_t nsInSec = 1000000000;` or `const int32_t nsInMs = 1000000;` so we can be sure that integer math is used. In this case:\n\n~~~\nconst int32_t nsInMs = 1000000;\nmsec = this->nsec / nsInMs;\n~~~", "markup": "markdown", "html": "<p>In <a href=\"#!/osrf/gazebo/pull-requests/1594/fix-several-clang-compiler-warnings\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1594</a>, I fixed some clang warnings complaining about using the integer <code>abs()</code> with floating point values. This was happening because all literal constants expressed in scientific notation are interpreted as floating point values.</p>\n<p>So to be safe, we should usually stay away from using scientific notation with our integer-based time class. A workaround is to declare constants like <code>const int32_t nsInSec = 1000000000;</code> or <code>const int32_t nsInMs = 1000000;</code> so we can be sure that integer math is used. In this case:</p>\n<div class=\"codehilite\"><pre><span></span>const int32_t nsInMs = 1000000;\nmsec = this-&gt;nsec / nsInMs;\n</pre></div>", "type": "rendered"}, "created_on": "2015-06-04T08:03:21.925485+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "outdated": false, "path": "gazebo/common/Time.cc"}, "updated_on": "2015-06-04T08:03:21.931672+00:00", "type": "pullrequest_comment", "id": 7299052}