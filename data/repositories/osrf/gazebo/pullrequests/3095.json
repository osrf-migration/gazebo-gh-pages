{"rendered": {"description": {"raw": "The LinkPlot3dPlugin can trace the paths of links in a simulation and is used with a `double_pendulum_with_base` model in [plot3d.world](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/worlds/plot3d.world?at=default&fileviewer=file-view-default). The double pendulum model is `<include>`d into the parent model as a sibling of the plugin element, which causes the double pendulum links to be added to the parent model with model namespacing using the `::` delimiter.\r\n\r\nI tried following this pattern with the example world included in this pull request, which is a modified version of the [friction_cone.world](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/test/worlds/friction_cone.world?at=default&fileviewer=file-view-default), but it didn't work because this world has models [nested with explicit `<model>` tags](#!/osrf/gazebo/src/c2315ca10a801df4edcc174ccd9a5ccdbae4019d/worlds/friction_pyramid.world?fileviewer=file-view-default#friction_pyramid.world-19:20), and the LinkPlot3dPlugin is not able to find the specified links in this case. When I tried using `::` with the nested model name as a prefix, I saw console errors like the following:\r\n\r\n~~~\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_0::link_1] in model [boxes]\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_1::link_1] in model [boxes]\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_2::link_1] in model [boxes]\r\n~~~\r\n\r\nTo find the links, the plugin needs to get a pointer to the nested model using the `Model::NestedModel` function. So if inside a `<plot>` element you specify a `<model>` tag with a model name alongside the `<link>` tag, it will now use that to search for a link inside a nested model.\r\n\r\nHere's an animation of that test world with this branch:\r\n\r\n* https://vimeo.com/327118010\r\n\r\nand here's another animation if you change the `friction_model` tag to `cone_friction`:\r\n\r\n* https://vimeo.com/327117996", "markup": "markdown", "html": "<p>The LinkPlot3dPlugin can trace the paths of links in a simulation and is used with a <code>double_pendulum_with_base</code> model in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/worlds/plot3d.world?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">plot3d.world</a>. The double pendulum model is <code>&lt;include&gt;</code>d into the parent model as a sibling of the plugin element, which causes the double pendulum links to be added to the parent model with model namespacing using the <code>::</code> delimiter.</p>\n<p>I tried following this pattern with the example world included in this pull request, which is a modified version of the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/test/worlds/friction_cone.world?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">friction_cone.world</a>, but it didn't work because this world has models <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/c2315ca10a801df4edcc174ccd9a5ccdbae4019d/worlds/friction_pyramid.world?fileviewer=file-view-default#friction_pyramid.world-19:20\" rel=\"nofollow\">nested with explicit <code>&lt;model&gt;</code> tags</a>, and the LinkPlot3dPlugin is not able to find the specified links in this case. When I tried using <code>::</code> with the nested model name as a prefix, I saw console errors like the following:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[Err] [LinkPlot3DPlugin.cc:150] Couldn&#39;t find link [box_0::link_1] in model [boxes]</span>\n<span class=\"k\">[Err] [LinkPlot3DPlugin.cc:150] Couldn&#39;t find link [box_1::link_1] in model [boxes]</span>\n<span class=\"k\">[Err] [LinkPlot3DPlugin.cc:150] Couldn&#39;t find link [box_2::link_1] in model [boxes]</span>\n</pre></div>\n\n\n<p>To find the links, the plugin needs to get a pointer to the nested model using the <code>Model::NestedModel</code> function. So if inside a <code>&lt;plot&gt;</code> element you specify a <code>&lt;model&gt;</code> tag with a model name alongside the <code>&lt;link&gt;</code> tag, it will now use that to search for a link inside a nested model.</p>\n<p>Here's an animation of that test world with this branch:</p>\n<ul>\n<li><a href=\"https://vimeo.com/327118010\" rel=\"nofollow\" class=\"ap-connect-link\">https://vimeo.com/327118010</a></li>\n</ul>\n<p>and here's another animation if you change the <code>friction_model</code> tag to <code>cone_friction</code>:</p>\n<ul>\n<li><a href=\"https://vimeo.com/327117996\" rel=\"nofollow\" class=\"ap-connect-link\">https://vimeo.com/327117996</a></li>\n</ul>", "type": "rendered"}, "title": {"raw": "LinkPlot3dPlugin: read optional <model> tag to find links in nested models", "markup": "markdown", "html": "<p>LinkPlot3dPlugin: read optional &lt;model&gt; tag to find links in nested models</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The LinkPlot3dPlugin can trace the paths of links in a simulation and is used with a `double_pendulum_with_base` model in [plot3d.world](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/worlds/plot3d.world?at=default&fileviewer=file-view-default). The double pendulum model is `<include>`d into the parent model as a sibling of the plugin element, which causes the double pendulum links to be added to the parent model with model namespacing using the `::` delimiter.\r\n\r\nI tried following this pattern with the example world included in this pull request, which is a modified version of the [friction_cone.world](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/test/worlds/friction_cone.world?at=default&fileviewer=file-view-default), but it didn't work because this world has models [nested with explicit `<model>` tags](#!/osrf/gazebo/src/c2315ca10a801df4edcc174ccd9a5ccdbae4019d/worlds/friction_pyramid.world?fileviewer=file-view-default#friction_pyramid.world-19:20), and the LinkPlot3dPlugin is not able to find the specified links in this case. When I tried using `::` with the nested model name as a prefix, I saw console errors like the following:\r\n\r\n~~~\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_0::link_1] in model [boxes]\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_1::link_1] in model [boxes]\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_2::link_1] in model [boxes]\r\n~~~\r\n\r\nTo find the links, the plugin needs to get a pointer to the nested model using the `Model::NestedModel` function. So if inside a `<plot>` element you specify a `<model>` tag with a model name alongside the `<link>` tag, it will now use that to search for a link inside a nested model.\r\n\r\nHere's an animation of that test world with this branch:\r\n\r\n* https://vimeo.com/327118010\r\n\r\nand here's another animation if you change the `friction_model` tag to `cone_friction`:\r\n\r\n* https://vimeo.com/327117996", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3095/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5ee96ab35daa%0D7e5f4b84705f?from_pullrequest_id=3095"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/3095/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/3095.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/3095/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3095/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3095"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/3095/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5ee96ab35daa%0D7e5f4b84705f?from_pullrequest_id=3095"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3095/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/3095/statuses_page=1.json"}}, "title": "LinkPlot3dPlugin: read optional <model> tag to find links in nested models", "close_source_branch": true, "reviewers": [{"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}], "id": 3095, "destination": {"commit": {"hash": "7e5f4b84705f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7e5f4b84705f.json"}, "html": {"href": "#!/osrf/gazebo/commits/7e5f4b84705f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "created_on": "2019-03-28T22:40:48.012131+00:00", "summary": {"raw": "The LinkPlot3dPlugin can trace the paths of links in a simulation and is used with a `double_pendulum_with_base` model in [plot3d.world](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/worlds/plot3d.world?at=default&fileviewer=file-view-default). The double pendulum model is `<include>`d into the parent model as a sibling of the plugin element, which causes the double pendulum links to be added to the parent model with model namespacing using the `::` delimiter.\r\n\r\nI tried following this pattern with the example world included in this pull request, which is a modified version of the [friction_cone.world](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/test/worlds/friction_cone.world?at=default&fileviewer=file-view-default), but it didn't work because this world has models [nested with explicit `<model>` tags](#!/osrf/gazebo/src/c2315ca10a801df4edcc174ccd9a5ccdbae4019d/worlds/friction_pyramid.world?fileviewer=file-view-default#friction_pyramid.world-19:20), and the LinkPlot3dPlugin is not able to find the specified links in this case. When I tried using `::` with the nested model name as a prefix, I saw console errors like the following:\r\n\r\n~~~\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_0::link_1] in model [boxes]\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_1::link_1] in model [boxes]\r\n[Err] [LinkPlot3DPlugin.cc:150] Couldn't find link [box_2::link_1] in model [boxes]\r\n~~~\r\n\r\nTo find the links, the plugin needs to get a pointer to the nested model using the `Model::NestedModel` function. So if inside a `<plot>` element you specify a `<model>` tag with a model name alongside the `<link>` tag, it will now use that to search for a link inside a nested model.\r\n\r\nHere's an animation of that test world with this branch:\r\n\r\n* https://vimeo.com/327118010\r\n\r\nand here's another animation if you change the `friction_model` tag to `cone_friction`:\r\n\r\n* https://vimeo.com/327117996", "markup": "markdown", "html": "<p>The LinkPlot3dPlugin can trace the paths of links in a simulation and is used with a <code>double_pendulum_with_base</code> model in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/worlds/plot3d.world?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">plot3d.world</a>. The double pendulum model is <code>&lt;include&gt;</code>d into the parent model as a sibling of the plugin element, which causes the double pendulum links to be added to the parent model with model namespacing using the <code>::</code> delimiter.</p>\n<p>I tried following this pattern with the example world included in this pull request, which is a modified version of the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/test/worlds/friction_cone.world?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">friction_cone.world</a>, but it didn't work because this world has models <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/c2315ca10a801df4edcc174ccd9a5ccdbae4019d/worlds/friction_pyramid.world?fileviewer=file-view-default#friction_pyramid.world-19:20\" rel=\"nofollow\">nested with explicit <code>&lt;model&gt;</code> tags</a>, and the LinkPlot3dPlugin is not able to find the specified links in this case. When I tried using <code>::</code> with the nested model name as a prefix, I saw console errors like the following:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[Err] [LinkPlot3DPlugin.cc:150] Couldn&#39;t find link [box_0::link_1] in model [boxes]</span>\n<span class=\"k\">[Err] [LinkPlot3DPlugin.cc:150] Couldn&#39;t find link [box_1::link_1] in model [boxes]</span>\n<span class=\"k\">[Err] [LinkPlot3DPlugin.cc:150] Couldn&#39;t find link [box_2::link_1] in model [boxes]</span>\n</pre></div>\n\n\n<p>To find the links, the plugin needs to get a pointer to the nested model using the <code>Model::NestedModel</code> function. So if inside a <code>&lt;plot&gt;</code> element you specify a <code>&lt;model&gt;</code> tag with a model name alongside the <code>&lt;link&gt;</code> tag, it will now use that to search for a link inside a nested model.</p>\n<p>Here's an animation of that test world with this branch:</p>\n<ul>\n<li><a href=\"https://vimeo.com/327118010\" rel=\"nofollow\" class=\"ap-connect-link\">https://vimeo.com/327118010</a></li>\n</ul>\n<p>and here's another animation if you change the <code>friction_model</code> tag to <code>cone_friction</code>:</p>\n<ul>\n<li><a href=\"https://vimeo.com/327117996\" rel=\"nofollow\" class=\"ap-connect-link\">https://vimeo.com/327117996</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "12d74998d697", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/12d74998d697.json"}, "html": {"href": "#!/osrf/gazebo/commits/12d74998d697"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "link_plot_3d_nested_model"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2019-03-30T01:02:44.161541+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2019-04-11T23:11:14.696307+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2019-04-30T17:41:46.236716+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2019-04-30T17:58:49.595858+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "5ee96ab35daa", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5ee96ab35daa.json"}, "html": {"href": "#!/osrf/gazebo/commits/5ee96ab35daa"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}