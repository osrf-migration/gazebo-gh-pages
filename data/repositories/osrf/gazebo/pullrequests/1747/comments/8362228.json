{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1747/comments/8362228.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1747/_/diff#comment-8362228"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1747, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1747.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1747"}}, "title": " Support for fixed joints"}, "content": {"raw": "I think we could add the `fixed` joint type to the `SpawnJointRotational*` tests. These tests are applied to joints that have all three translational directions constrained (revolute, ball, universal). The `SpawnJointRotational` test creates a parent and child link connected by a joint, applies a linear velocity to the parent link, and verifies that the child follows. The `SpawnJointRotationalWorld` test creates a link and attaches it to the world through a joint, both as parent and child, and then verifies that it doesn't fall with gravity turned on. Here's a patch to enable it:\n\n~~~\ndiff -r bdc3eba2e76b test/integration/joint_spawn.cc\n--- a/test/integration/joint_spawn.cc\tMon Jun 29 10:25:45 2015 -0700\n+++ b/test/integration/joint_spawn.cc\tSun Jul 19 16:10:28 2015 -0700\n@@ -492,6 +492,7 @@\n   ::testing::Combine(PHYSICS_ENGINE_VALUES,\n   ::testing::Values(\"revolute\"\n                   , \"universal\"\n+                  , \"fixed\"\n                   , \"ball\")));\n \n // Skip prismatic, screw, and revolute2 because they allow translation\n@@ -499,6 +500,7 @@\n   ::testing::Combine(PHYSICS_ENGINE_VALUES,\n   ::testing::Values(\"revolute\"\n                   , \"universal\"\n+                  , \"fixed\"\n                   , \"ball\")));\n \n int main(int argc, char **argv)\n~~~", "markup": "markdown", "html": "<p>I think we could add the <code>fixed</code> joint type to the <code>SpawnJointRotational*</code> tests. These tests are applied to joints that have all three translational directions constrained (revolute, ball, universal). The <code>SpawnJointRotational</code> test creates a parent and child link connected by a joint, applies a linear velocity to the parent link, and verifies that the child follows. The <code>SpawnJointRotationalWorld</code> test creates a link and attaches it to the world through a joint, both as parent and child, and then verifies that it doesn't fall with gravity turned on. Here's a patch to enable it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r bdc3eba2e76b test/integration/joint_spawn.cc</span>\n<span class=\"gd\">--- a/test/integration/joint_spawn.cc   Mon Jun 29 10:25:45 2015 -0700</span>\n<span class=\"gi\">+++ b/test/integration/joint_spawn.cc   Sun Jul 19 16:10:28 2015 -0700</span>\n<span class=\"gu\">@@ -492,6 +492,7 @@</span>\n   ::testing::Combine(PHYSICS_ENGINE_VALUES,\n   ::testing::Values(&quot;revolute&quot;\n                   , &quot;universal&quot;\n<span class=\"gi\">+                  , &quot;fixed&quot;</span>\n                   , &quot;ball&quot;)));\n\n // Skip prismatic, screw, and revolute2 because they allow translation\n<span class=\"gu\">@@ -499,6 +500,7 @@</span>\n   ::testing::Combine(PHYSICS_ENGINE_VALUES,\n   ::testing::Values(&quot;revolute&quot;\n                   , &quot;universal&quot;\n<span class=\"gi\">+                  , &quot;fixed&quot;</span>\n                   , &quot;ball&quot;)));\n\n int main(int argc, char **argv)\n</pre></div>", "type": "rendered"}, "created_on": "2015-07-19T23:17:58.749482+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-07-19T23:17:58.757793+00:00", "type": "pullrequest_comment", "id": 8362228}