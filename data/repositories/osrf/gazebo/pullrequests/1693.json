{"rendered": {"reason": {"raw": "Not quite working\r\n", "markup": "markdown", "html": "<p>Not quite working</p>", "type": "rendered"}, "description": {"raw": "Elevator and related events.\r\n\r\nThis expands upon the `events` in `plugins`. I added a new `OccupiedEvent` so that the `InRegionEvent` functionality does not change. The `InRegionEvent` checks for a single model in the region, while `OccupiedEvent` checks any non-static model.\r\n\r\nThe elevator works by putting an object in front of the doors.", "markup": "markdown", "html": "<p>Elevator and related events.</p>\n<p>This expands upon the <code>events</code> in <code>plugins</code>. I added a new <code>OccupiedEvent</code> so that the <code>InRegionEvent</code> functionality does not change. The <code>InRegionEvent</code> checks for a single model in the region, while <code>OccupiedEvent</code> checks any non-static model.</p>\n<p>The elevator works by putting an object in front of the doors.</p>", "type": "rendered"}, "title": {"raw": "Elevator plugin, Occupied sim event", "markup": "markdown", "html": "<p>Elevator plugin, Occupied sim event</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Elevator and related events.\r\n\r\nThis expands upon the `events` in `plugins`. I added a new `OccupiedEvent` so that the `InRegionEvent` functionality does not change. The `InRegionEvent` checks for a single model in the region, while `OccupiedEvent` checks any non-static model.\r\n\r\nThe elevator works by putting an object in front of the doors.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1693/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:bad258ac5106%0D75a962d1adf1?from_pullrequest_id=1693"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1693/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1693.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1693/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1693/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1693"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1693/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:bad258ac5106%0D75a962d1adf1?from_pullrequest_id=1693"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1693/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1693/statuses_page=1.json"}}, "title": "Elevator plugin, Occupied sim event", "close_source_branch": false, "reviewers": [], "id": 1693, "destination": {"commit": {"hash": "75a962d1adf1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/75a962d1adf1.json"}, "html": {"href": "#!/osrf/gazebo/commits/75a962d1adf1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2015-05-15T20:28:34.778570+00:00", "summary": {"raw": "Elevator and related events.\r\n\r\nThis expands upon the `events` in `plugins`. I added a new `OccupiedEvent` so that the `InRegionEvent` functionality does not change. The `InRegionEvent` checks for a single model in the region, while `OccupiedEvent` checks any non-static model.\r\n\r\nThe elevator works by putting an object in front of the doors.", "markup": "markdown", "html": "<p>Elevator and related events.</p>\n<p>This expands upon the <code>events</code> in <code>plugins</code>. I added a new <code>OccupiedEvent</code> so that the <code>InRegionEvent</code> functionality does not change. The <code>InRegionEvent</code> checks for a single model in the region, while <code>OccupiedEvent</code> checks any non-static model.</p>\n<p>The elevator works by putting an object in front of the doors.</p>", "type": "rendered"}, "source": {"commit": {"hash": "bad258ac5106", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bad258ac5106.json"}, "html": {"href": "#!/osrf/gazebo/commits/bad258ac5106"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "elevator_event_plugins"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "participants": [], "reason": "Not quite working\r\n", "updated_on": "2015-05-15T20:36:12.863243+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}