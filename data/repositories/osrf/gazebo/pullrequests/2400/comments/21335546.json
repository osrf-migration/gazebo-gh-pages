{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2400/comments/21335546.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2400/_/diff#comment-21335546"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2400, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2400.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2400"}}, "title": "Add copy accessors to uri path and query"}, "content": {"raw": "I think the test doesn't verify that the const functions are used. Here's a modification to the test that fails without the new const accessors:\n\n~~~\ndiff -r dc8f8420b90f gazebo/common/URI_TEST.cc\n--- a/gazebo/common/URI_TEST.cc\tThu Jul 21 09:12:56 2016 -0700\n+++ b/gazebo/common/URI_TEST.cc\tThu Jul 21 10:11:12 2016 -0700\n@@ -191,8 +191,8 @@\n   uri.SetScheme(\"data\");\n   uri.Path().PushFront(\"world\");\n \n-  auto pathCopy = uri.Path();\n-  pathCopy = pathCopy / \"default\";\n+  const auto uriCopy(uri);\n+  const auto pathCopy(uriCopy.Path() / \"default\");\n \n   EXPECT_NE(uri.Path().Str(), pathCopy.Str());\n   EXPECT_EQ(uri.Path().Str(), \"world\");\n@@ -234,8 +234,10 @@\n   uri.SetScheme(\"data\");\n   uri.Query().Insert(\"a\", \"b\");\n \n-  auto queryCopy = uri.Query();\n-  queryCopy.Insert(\"c\", \"d\");\n+  auto uriTmp(uri);\n+  uriTmp.Query.Insert(\"c\", \"d\");\n+  const auto uriCopy(uriTmp);\n+  const auto queryCopy(uriCopy.Query());\n \n   EXPECT_NE(uri.Query().Str(), queryCopy.Str());\n   EXPECT_EQ(uri.Query().Str(), \"?a=b\");\n~~~\n\nI've committed the test to branch `uri_const_test` (4197802c6e15) based off of default, and it fails to compile", "markup": "markdown", "html": "<p>I think the test doesn't verify that the const functions are used. Here's a modification to the test that fails without the new const accessors:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r dc8f8420b90f gazebo/common/URI_TEST.cc</span>\n<span class=\"gd\">--- a/gazebo/common/URI_TEST.cc Thu Jul 21 09:12:56 2016 -0700</span>\n<span class=\"gi\">+++ b/gazebo/common/URI_TEST.cc Thu Jul 21 10:11:12 2016 -0700</span>\n<span class=\"gu\">@@ -191,8 +191,8 @@</span>\n   uri.SetScheme(&quot;data&quot;);\n   uri.Path().PushFront(&quot;world&quot;);\n\n<span class=\"gd\">-  auto pathCopy = uri.Path();</span>\n<span class=\"gd\">-  pathCopy = pathCopy / &quot;default&quot;;</span>\n<span class=\"gi\">+  const auto uriCopy(uri);</span>\n<span class=\"gi\">+  const auto pathCopy(uriCopy.Path() / &quot;default&quot;);</span>\n\n   EXPECT_NE(uri.Path().Str(), pathCopy.Str());\n   EXPECT_EQ(uri.Path().Str(), &quot;world&quot;);\n<span class=\"gu\">@@ -234,8 +234,10 @@</span>\n   uri.SetScheme(&quot;data&quot;);\n   uri.Query().Insert(&quot;a&quot;, &quot;b&quot;);\n\n<span class=\"gd\">-  auto queryCopy = uri.Query();</span>\n<span class=\"gd\">-  queryCopy.Insert(&quot;c&quot;, &quot;d&quot;);</span>\n<span class=\"gi\">+  auto uriTmp(uri);</span>\n<span class=\"gi\">+  uriTmp.Query.Insert(&quot;c&quot;, &quot;d&quot;);</span>\n<span class=\"gi\">+  const auto uriCopy(uriTmp);</span>\n<span class=\"gi\">+  const auto queryCopy(uriCopy.Query());</span>\n\n   EXPECT_NE(uri.Query().Str(), queryCopy.Str());\n   EXPECT_EQ(uri.Query().Str(), &quot;?a=b&quot;);\n</pre></div>\n\n\n<p>I've committed the test to branch <code>uri_const_test</code> (<a href=\"#!/osrf/gazebo/commits/4197802c6e15\" rel=\"nofollow\" class=\"ap-connect-link\">4197802c6e15</a>) based off of default, and it fails to compile</p>", "type": "rendered"}, "created_on": "2016-07-21T17:12:41.612691+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-07-21T17:12:41.617727+00:00", "type": "pullrequest_comment", "id": 21335546}