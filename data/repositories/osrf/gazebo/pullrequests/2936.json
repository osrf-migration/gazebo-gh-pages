{"rendered": {"description": {"raw": "While merging pull request #2928 forward to gazebo8, I noticed a compiler warning:\r\n\r\n~~~\r\nwarning:\r\n ignoring return value of \u2018constexpr bool qFuzzyCompare(double, double)\u2019,\r\n declared with attribute warn_unused_result [-Wunused-result]\r\n~~~\r\n\r\nIt seems that the test is not actually verifying whether the values are close, since we are not evaluating the return value of `qFuzzyCompare`. So I added `QVERIFY()` around these statements, but there was some trouble with the nearClip comparison. I think the tolerance for `qFuzzyCompare` is too strict, and the value 0.1 has some floating point truncation. To circumvent this, I changed the test value to `0.125` so it will have an exact floating point representation. I thought this was superior to the alternative recommended in the [qt docs](http://doc.qt.io/qt-5/qtglobal.html#qFuzzyCompare) of adding offset values:\r\n\r\n~~~\r\nQVERIFY(qFuzzyCompare(1e4 + cam->NearClip(), 1e4 + nearClip));\r\n~~~", "markup": "markdown", "html": "<p>While merging <a href=\"#!/osrf/gazebo/pull-requests/2928/fix-mouse-movement-ogre-assertion-error\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2928</a> forward to gazebo8, I noticed a compiler warning:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">warning</span><span class=\"o\">:</span>\n <span class=\"n\">ignoring</span> <span class=\"k\">return</span> <span class=\"n\">value</span> <span class=\"n\">of</span> <span class=\"err\">\u2018</span><span class=\"n\">constexpr</span> <span class=\"n\">bool</span> <span class=\"n\">qFuzzyCompare</span><span class=\"o\">(</span><span class=\"n\">double</span><span class=\"o\">,</span> <span class=\"n\">double</span><span class=\"o\">)</span><span class=\"err\">\u2019</span><span class=\"o\">,</span>\n <span class=\"n\">declared</span> <span class=\"k\">with</span> <span class=\"n\">attribute</span> <span class=\"n\">warn_unused_result</span> <span class=\"o\">[-</span><span class=\"n\">Wunused</span><span class=\"o\">-</span><span class=\"n\">result</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>It seems that the test is not actually verifying whether the values are close, since we are not evaluating the return value of <code>qFuzzyCompare</code>. So I added <code>QVERIFY()</code> around these statements, but there was some trouble with the nearClip comparison. I think the tolerance for <code>qFuzzyCompare</code> is too strict, and the value 0.1 has some floating point truncation. To circumvent this, I changed the test value to <code>0.125</code> so it will have an exact floating point representation. I thought this was superior to the alternative recommended in the <a data-is-external-link=\"true\" href=\"http://doc.qt.io/qt-5/qtglobal.html#qFuzzyCompare\" rel=\"nofollow\">qt docs</a> of adding offset values:</p>\n<div class=\"codehilite\"><pre><span></span>QVERIFY(qFuzzyCompare(1e4 + cam-&gt;NearClip(), 1e4 + nearClip));\n</pre></div>", "type": "rendered"}, "title": {"raw": "use QVERIFY() around qFuzzyCompare statements", "markup": "markdown", "html": "<p>use QVERIFY() around qFuzzyCompare statements</p>", "type": "rendered"}}, "type": "pullrequest", "description": "While merging pull request #2928 forward to gazebo8, I noticed a compiler warning:\r\n\r\n~~~\r\nwarning:\r\n ignoring return value of \u2018constexpr bool qFuzzyCompare(double, double)\u2019,\r\n declared with attribute warn_unused_result [-Wunused-result]\r\n~~~\r\n\r\nIt seems that the test is not actually verifying whether the values are close, since we are not evaluating the return value of `qFuzzyCompare`. So I added `QVERIFY()` around these statements, but there was some trouble with the nearClip comparison. I think the tolerance for `qFuzzyCompare` is too strict, and the value 0.1 has some floating point truncation. To circumvent this, I changed the test value to `0.125` so it will have an exact floating point representation. I thought this was superior to the alternative recommended in the [qt docs](http://doc.qt.io/qt-5/qtglobal.html#qFuzzyCompare) of adding offset values:\r\n\r\n~~~\r\nQVERIFY(qFuzzyCompare(1e4 + cam->NearClip(), 1e4 + nearClip));\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2936/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:2fe16223beca%0Daffe13759fbe?from_pullrequest_id=2936"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2936/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2936.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2936/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2936/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2936"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2936/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:2fe16223beca%0Daffe13759fbe?from_pullrequest_id=2936"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2936/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2936/statuses_page=1.json"}}, "title": "use QVERIFY() around qFuzzyCompare statements", "close_source_branch": true, "reviewers": [{"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}], "id": 2936, "destination": {"commit": {"hash": "affe13759fbe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/affe13759fbe.json"}, "html": {"href": "#!/osrf/gazebo/commits/affe13759fbe"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2018-04-17T01:18:51.366647+00:00", "summary": {"raw": "While merging pull request #2928 forward to gazebo8, I noticed a compiler warning:\r\n\r\n~~~\r\nwarning:\r\n ignoring return value of \u2018constexpr bool qFuzzyCompare(double, double)\u2019,\r\n declared with attribute warn_unused_result [-Wunused-result]\r\n~~~\r\n\r\nIt seems that the test is not actually verifying whether the values are close, since we are not evaluating the return value of `qFuzzyCompare`. So I added `QVERIFY()` around these statements, but there was some trouble with the nearClip comparison. I think the tolerance for `qFuzzyCompare` is too strict, and the value 0.1 has some floating point truncation. To circumvent this, I changed the test value to `0.125` so it will have an exact floating point representation. I thought this was superior to the alternative recommended in the [qt docs](http://doc.qt.io/qt-5/qtglobal.html#qFuzzyCompare) of adding offset values:\r\n\r\n~~~\r\nQVERIFY(qFuzzyCompare(1e4 + cam->NearClip(), 1e4 + nearClip));\r\n~~~", "markup": "markdown", "html": "<p>While merging <a href=\"#!/osrf/gazebo/pull-requests/2928/fix-mouse-movement-ogre-assertion-error\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2928</a> forward to gazebo8, I noticed a compiler warning:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">warning</span><span class=\"o\">:</span>\n <span class=\"n\">ignoring</span> <span class=\"k\">return</span> <span class=\"n\">value</span> <span class=\"n\">of</span> <span class=\"err\">\u2018</span><span class=\"n\">constexpr</span> <span class=\"n\">bool</span> <span class=\"n\">qFuzzyCompare</span><span class=\"o\">(</span><span class=\"n\">double</span><span class=\"o\">,</span> <span class=\"n\">double</span><span class=\"o\">)</span><span class=\"err\">\u2019</span><span class=\"o\">,</span>\n <span class=\"n\">declared</span> <span class=\"k\">with</span> <span class=\"n\">attribute</span> <span class=\"n\">warn_unused_result</span> <span class=\"o\">[-</span><span class=\"n\">Wunused</span><span class=\"o\">-</span><span class=\"n\">result</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>It seems that the test is not actually verifying whether the values are close, since we are not evaluating the return value of <code>qFuzzyCompare</code>. So I added <code>QVERIFY()</code> around these statements, but there was some trouble with the nearClip comparison. I think the tolerance for <code>qFuzzyCompare</code> is too strict, and the value 0.1 has some floating point truncation. To circumvent this, I changed the test value to <code>0.125</code> so it will have an exact floating point representation. I thought this was superior to the alternative recommended in the <a data-is-external-link=\"true\" href=\"http://doc.qt.io/qt-5/qtglobal.html#qFuzzyCompare\" rel=\"nofollow\">qt docs</a> of adding offset values:</p>\n<div class=\"codehilite\"><pre><span></span>QVERIFY(qFuzzyCompare(1e4 + cam-&gt;NearClip(), 1e4 + nearClip));\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "153c99a21280", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/153c99a21280.json"}, "html": {"href": "#!/osrf/gazebo/commits/153c99a21280"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "qverify_qfuzzycompare_7"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-04-17T22:59:21.807942+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "REVIEWER", "participated_on": "2018-04-17T17:37:44.634445+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2018-04-17T23:45:36.804717+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "2fe16223beca", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2fe16223beca.json"}, "html": {"href": "#!/osrf/gazebo/commits/2fe16223beca"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}