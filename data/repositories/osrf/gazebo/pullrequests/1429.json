{"rendered": {"description": {"raw": "The last of a long series of `msgs::*ToSDF` pull requests: this one adds `ModelToSDF`, along with several helper functions for adding simple shapes with geometrically consistent inertia values to a `Model` message:\r\n\r\n~~~\r\nmsgs::AddBoxLink(msgs::Model, double mass, math::Vector3 size)\r\nmsgs::AddCylinderLink(msgs::Model, double mass, double radius, double length)\r\nmsgs::AddSphereLink(msgs::Model, double mass, double radius)\r\n~~~\r\n\r\nI included these helper functions because it made it easier to write the test for ModelToSDF. Although to be honest, it just let me write a more complex test, which is building a \"bicycle\" model programmatically with a box for the frame, cylinder for rear wheel, and sphere for the front wheel. I'll make a tutorial based on that code.\r\n\r\nAlso, I created a private helper function `msgs::AddLinkGeom(msgs::Model, msgs::Geometry)` that is used by the simple shape helper function. It adds a link containing a collision and visual, then sets the attached geometry message to both the collision and visual. It also sets some default material properties on the visual. I made it private to encourage use of the other helper functions that provide correct inertia. @iche033 and @chapulina if that function would be more broadly useful, I can make it public.\r\n\r\nThen to demonstrate the utility of `ModelToSDF`, I updated the GUI tools for making simple shapes to use this function. It provides better inertia values in fewer lines of code. I also updated a few of the `ServerFixture::Spawn` functions, and the tests still pass.", "markup": "markdown", "html": "<p>The last of a long series of <code>msgs::*ToSDF</code> pull requests: this one adds <code>ModelToSDF</code>, along with several helper functions for adding simple shapes with geometrically consistent inertia values to a <code>Model</code> message:</p>\n<div class=\"codehilite\"><pre><span></span>msgs::AddBoxLink(msgs::Model, double mass, math::Vector3 size)\nmsgs::AddCylinderLink(msgs::Model, double mass, double radius, double length)\nmsgs::AddSphereLink(msgs::Model, double mass, double radius)\n</pre></div>\n\n\n<p>I included these helper functions because it made it easier to write the test for ModelToSDF. Although to be honest, it just let me write a more complex test, which is building a \"bicycle\" model programmatically with a box for the frame, cylinder for rear wheel, and sphere for the front wheel. I'll make a tutorial based on that code.</p>\n<p>Also, I created a private helper function <code>msgs::AddLinkGeom(msgs::Model, msgs::Geometry)</code> that is used by the simple shape helper function. It adds a link containing a collision and visual, then sets the attached geometry message to both the collision and visual. It also sets some default material properties on the visual. I made it private to encourage use of the other helper functions that provide correct inertia. @iche033 and @chapulina if that function would be more broadly useful, I can make it public.</p>\n<p>Then to demonstrate the utility of <code>ModelToSDF</code>, I updated the GUI tools for making simple shapes to use this function. It provides better inertia values in fewer lines of code. I also updated a few of the <code>ServerFixture::Spawn</code> functions, and the tests still pass.</p>", "type": "rendered"}, "title": {"raw": "Add msgs::ModelToSDF, and simple shape helper functions", "markup": "markdown", "html": "<p>Add msgs::ModelToSDF, and simple shape helper functions</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The last of a long series of `msgs::*ToSDF` pull requests: this one adds `ModelToSDF`, along with several helper functions for adding simple shapes with geometrically consistent inertia values to a `Model` message:\r\n\r\n~~~\r\nmsgs::AddBoxLink(msgs::Model, double mass, math::Vector3 size)\r\nmsgs::AddCylinderLink(msgs::Model, double mass, double radius, double length)\r\nmsgs::AddSphereLink(msgs::Model, double mass, double radius)\r\n~~~\r\n\r\nI included these helper functions because it made it easier to write the test for ModelToSDF. Although to be honest, it just let me write a more complex test, which is building a \"bicycle\" model programmatically with a box for the frame, cylinder for rear wheel, and sphere for the front wheel. I'll make a tutorial based on that code.\r\n\r\nAlso, I created a private helper function `msgs::AddLinkGeom(msgs::Model, msgs::Geometry)` that is used by the simple shape helper function. It adds a link containing a collision and visual, then sets the attached geometry message to both the collision and visual. It also sets some default material properties on the visual. I made it private to encourage use of the other helper functions that provide correct inertia. @iche033 and @chapulina if that function would be more broadly useful, I can make it public.\r\n\r\nThen to demonstrate the utility of `ModelToSDF`, I updated the GUI tools for making simple shapes to use this function. It provides better inertia values in fewer lines of code. I also updated a few of the `ServerFixture::Spawn` functions, and the tests still pass.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1429/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:8ea93d922d19%0D20a9803efc4e?from_pullrequest_id=1429"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1429/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1429.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1429/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1429/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1429"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1429/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8ea93d922d19%0D20a9803efc4e?from_pullrequest_id=1429"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1429/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1429/statuses_page=1.json"}}, "title": "Add msgs::ModelToSDF, and simple shape helper functions", "close_source_branch": true, "reviewers": [], "id": 1429, "destination": {"commit": {"hash": "20a9803efc4e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/20a9803efc4e.json"}, "html": {"href": "#!/osrf/gazebo/commits/20a9803efc4e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "created_on": "2015-02-13T18:59:52.909754+00:00", "summary": {"raw": "The last of a long series of `msgs::*ToSDF` pull requests: this one adds `ModelToSDF`, along with several helper functions for adding simple shapes with geometrically consistent inertia values to a `Model` message:\r\n\r\n~~~\r\nmsgs::AddBoxLink(msgs::Model, double mass, math::Vector3 size)\r\nmsgs::AddCylinderLink(msgs::Model, double mass, double radius, double length)\r\nmsgs::AddSphereLink(msgs::Model, double mass, double radius)\r\n~~~\r\n\r\nI included these helper functions because it made it easier to write the test for ModelToSDF. Although to be honest, it just let me write a more complex test, which is building a \"bicycle\" model programmatically with a box for the frame, cylinder for rear wheel, and sphere for the front wheel. I'll make a tutorial based on that code.\r\n\r\nAlso, I created a private helper function `msgs::AddLinkGeom(msgs::Model, msgs::Geometry)` that is used by the simple shape helper function. It adds a link containing a collision and visual, then sets the attached geometry message to both the collision and visual. It also sets some default material properties on the visual. I made it private to encourage use of the other helper functions that provide correct inertia. @iche033 and @chapulina if that function would be more broadly useful, I can make it public.\r\n\r\nThen to demonstrate the utility of `ModelToSDF`, I updated the GUI tools for making simple shapes to use this function. It provides better inertia values in fewer lines of code. I also updated a few of the `ServerFixture::Spawn` functions, and the tests still pass.", "markup": "markdown", "html": "<p>The last of a long series of <code>msgs::*ToSDF</code> pull requests: this one adds <code>ModelToSDF</code>, along with several helper functions for adding simple shapes with geometrically consistent inertia values to a <code>Model</code> message:</p>\n<div class=\"codehilite\"><pre><span></span>msgs::AddBoxLink(msgs::Model, double mass, math::Vector3 size)\nmsgs::AddCylinderLink(msgs::Model, double mass, double radius, double length)\nmsgs::AddSphereLink(msgs::Model, double mass, double radius)\n</pre></div>\n\n\n<p>I included these helper functions because it made it easier to write the test for ModelToSDF. Although to be honest, it just let me write a more complex test, which is building a \"bicycle\" model programmatically with a box for the frame, cylinder for rear wheel, and sphere for the front wheel. I'll make a tutorial based on that code.</p>\n<p>Also, I created a private helper function <code>msgs::AddLinkGeom(msgs::Model, msgs::Geometry)</code> that is used by the simple shape helper function. It adds a link containing a collision and visual, then sets the attached geometry message to both the collision and visual. It also sets some default material properties on the visual. I made it private to encourage use of the other helper functions that provide correct inertia. @iche033 and @chapulina if that function would be more broadly useful, I can make it public.</p>\n<p>Then to demonstrate the utility of <code>ModelToSDF</code>, I updated the GUI tools for making simple shapes to use this function. It provides better inertia values in fewer lines of code. I also updated a few of the <code>ServerFixture::Spawn</code> functions, and the tests still pass.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7fd731be4bf3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7fd731be4bf3.json"}, "html": {"href": "#!/osrf/gazebo/commits/7fd731be4bf3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "model_to_sdf"}}, "comment_count": 14, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-02-19T23:43:48.336113+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2015-02-20T01:20:47.377348+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2015-02-20T01:15:47.196981+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2015-02-20T01:26:22.068912+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "8ea93d922d19", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8ea93d922d19.json"}, "html": {"href": "#!/osrf/gazebo/commits/8ea93d922d19"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}