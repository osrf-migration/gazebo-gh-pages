{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1144/comments/2512294.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1144/_/diff#comment-2512294"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1144, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1144.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1144"}}, "title": "GUI Align and Snap tools"}, "content": {"raw": "Started new thread for `UNIT_ModelAlign_TEST` failures. The test now only fails occasionally (~20% of time). From a backtrace, it seems to fail during teardown of the test:\n~~~\n********* Start testing of ModelAlign_TEST *********\nConfig: Using QTest library 4.8.6, Qt 4.8.6\nPASS   : ModelAlign_TEST::initTestCase()\nSharePercentChange[0.554668] ShareMaxPercentChange[2]\nResPercentChange[1.49914]ResMaxPercentChange[5]\nPASS   : ModelAlign_TEST::AlignXMin()\nSharePercentChange[0.0142315] ShareMaxPercentChange[2]\nResPercentChange[0.245765]ResMaxPercentChange[5]\nPASS   : ModelAlign_TEST::AlignXCenter()\nSharePercentChange[0.0110047] ShareMaxPercentChange[2]\nResPercentChange[0.184843]ResMaxPercentChange[5]\nPASS   : ModelAlign_TEST::AlignXMax()\nQFATAL : ModelAlign_TEST::AlignYMin() Received signal 11\nFAIL!  : ModelAlign_TEST::AlignYMin() Received a fatal error.\n   Loc: [Unknown file(0)]\nTotals: 4 passed, 1 failed, 0 skipped\n********* Finished testing of ModelAlign_TEST *********\nAborted (core dumped)\n~~~\n~~~\n(gdb) bt\n#0  0x00007f168e04cf79 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n#1  0x00007f168e050388 in __GI_abort () at abort.c:89\n#2  0x00007f168efe0c92 in qt_message_output(QtMsgType, char const*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#3  0x00007f168efe0ff9 in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007f168efe1804 in qFatal(char const*, ...) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  <signal handler called>\n#6  0x00007f168eb054e0 in boost::thread::get_thread_info() const () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#7  0x00007f168eb058d3 in boost::thread::native_handle() () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007f1690b94a5d in get_id (this=0x0) at /usr/include/boost/thread/detail/thread.hpp:730\n#9  join (this=0x0) at /usr/include/boost/thread/detail/thread.hpp:751\n#10 gazebo::sensors::SensorManager::SensorContainer::Stop (this=0x7f16282e1e30)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/sensors/SensorManager.cc:426\n#11 0x00007f1690b94b9a in gazebo::sensors::SensorManager::Stop (\n    this=0x7f16911621e0 <SingletonT<gazebo::sensors::SensorManager>::GetInstance()::t>)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/sensors/SensorManager.cc:94\n#12 0x00007f1690578314 in gazebo::shutdown () at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gazebo.cc:219\n#13 0x00007f16916cefc9 in gazebo::gui::stop () at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/GuiIface.cc:283\n#14 0x0000000000412580 in QTestFixture::cleanup (this=0x7fff450414b0)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/QTestFixture.cc:126\n#15 0x00007f168f0f5908 in QMetaMethod::invoke(QObject*, Qt::ConnectionType, QGenericReturnArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) const () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#16 0x00007f169011108f in ?? () from /usr/lib/x86_64-linux-gnu/libQtTest.so.4\n#17 0x00007f1690113ffa in ?? () from /usr/lib/x86_64-linux-gnu/libQtTest.so.4\n#18 0x00007f1690114ddf in QTest::qExec(QObject*, int, char**) () from /usr/lib/x86_64-linux-gnu/libQtTest.so.4\n#19 0x0000000000407765 in main (argc=1, argv=0x7fff450415e8)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelAlign_TEST.cc:713\n(gdb)\n~~~", "markup": "markdown", "html": "<p>Started new thread for <code>UNIT_ModelAlign_TEST</code> failures. The test now only fails occasionally (~20% of time). From a backtrace, it seems to fail during teardown of the test:</p>\n<div class=\"codehilite\"><pre><span></span>********* Start testing of ModelAlign_TEST *********\nConfig: Using QTest library 4.8.6, Qt 4.8.6\nPASS   : ModelAlign_TEST::initTestCase()\nSharePercentChange[0.554668] ShareMaxPercentChange[2]\nResPercentChange[1.49914]ResMaxPercentChange[5]\nPASS   : ModelAlign_TEST::AlignXMin()\nSharePercentChange[0.0142315] ShareMaxPercentChange[2]\nResPercentChange[0.245765]ResMaxPercentChange[5]\nPASS   : ModelAlign_TEST::AlignXCenter()\nSharePercentChange[0.0110047] ShareMaxPercentChange[2]\nResPercentChange[0.184843]ResMaxPercentChange[5]\nPASS   : ModelAlign_TEST::AlignXMax()\nQFATAL : ModelAlign_TEST::AlignYMin() Received signal 11\nFAIL!  : ModelAlign_TEST::AlignYMin() Received a fatal error.\n   Loc: [Unknown file(0)]\nTotals: 4 passed, 1 failed, 0 skipped\n********* Finished testing of ModelAlign_TEST *********\nAborted (core dumped)\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>(gdb) bt\n#0  0x00007f168e04cf79 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n#1  0x00007f168e050388 in __GI_abort () at abort.c:89\n#2  0x00007f168efe0c92 in qt_message_output(QtMsgType, char const*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#3  0x00007f168efe0ff9 in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007f168efe1804 in qFatal(char const*, ...) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  &lt;signal handler called&gt;\n#6  0x00007f168eb054e0 in boost::thread::get_thread_info() const () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#7  0x00007f168eb058d3 in boost::thread::native_handle() () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007f1690b94a5d in get_id (this=0x0) at /usr/include/boost/thread/detail/thread.hpp:730\n#9  join (this=0x0) at /usr/include/boost/thread/detail/thread.hpp:751\n#10 gazebo::sensors::SensorManager::SensorContainer::Stop (this=0x7f16282e1e30)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/sensors/SensorManager.cc:426\n#11 0x00007f1690b94b9a in gazebo::sensors::SensorManager::Stop (\n    this=0x7f16911621e0 &lt;SingletonT&lt;gazebo::sensors::SensorManager&gt;::GetInstance()::t&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/sensors/SensorManager.cc:94\n#12 0x00007f1690578314 in gazebo::shutdown () at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gazebo.cc:219\n#13 0x00007f16916cefc9 in gazebo::gui::stop () at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/GuiIface.cc:283\n#14 0x0000000000412580 in QTestFixture::cleanup (this=0x7fff450414b0)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/QTestFixture.cc:126\n#15 0x00007f168f0f5908 in QMetaMethod::invoke(QObject*, Qt::ConnectionType, QGenericReturnArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) const () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#16 0x00007f169011108f in ?? () from /usr/lib/x86_64-linux-gnu/libQtTest.so.4\n#17 0x00007f1690113ffa in ?? () from /usr/lib/x86_64-linux-gnu/libQtTest.so.4\n#18 0x00007f1690114ddf in QTest::qExec(QObject*, int, char**) () from /usr/lib/x86_64-linux-gnu/libQtTest.so.4\n#19 0x0000000000407765 in main (argc=1, argv=0x7fff450415e8)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelAlign_TEST.cc:713\n(gdb)\n</pre></div>", "type": "rendered"}, "created_on": "2014-07-24T17:35:46.886185+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-07-24T17:35:46.899112+00:00", "type": "pullrequest_comment", "id": 2512294}