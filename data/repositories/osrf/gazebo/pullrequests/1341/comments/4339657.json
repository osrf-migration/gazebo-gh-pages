{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1341/comments/4339657.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=test%2Fintegration%2Fplugin.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1341/_/diff#comment-4339657"}}, "parent": {"id": 4276134, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1341/comments/4276134.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1341/_/diff#comment-4276134"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1341, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1341.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1341"}}, "title": "Fix INTEGRATION_plugin for gazebo_3.1 (part of #1350)"}, "content": {"raw": "It looks like `gzLogInit(\"default.log\")` gets called after `gzLogInit(\"test.log\")`. The global `FileLogger` in `common::Console` object gets overwritten by the second `gzLogInit` call, which is why the test logs get printed in default.log.\n\nSolutions:\n\nModify ServerFixture so that `gzLogInit(\"test.log\")` comes after the problematic call.\n\nGive `Console` two `FileLogger` objects, log and testlog.\n\nGive `Console` a vector of `FileLogger` objects (or another scalable data structure, maybe a map indexed by filename). I like this solution the best. Though maybe there should be a hard limit on the number of files Gazebo can have open for logging.\n\nModify `FileLogger` to have multiple file streams.", "markup": "markdown", "html": "<p>It looks like <code>gzLogInit(\"default.log\")</code> gets called after <code>gzLogInit(\"test.log\")</code>. The global <code>FileLogger</code> in <code>common::Console</code> object gets overwritten by the second <code>gzLogInit</code> call, which is why the test logs get printed in default.log.</p>\n<p>Solutions:</p>\n<p>Modify ServerFixture so that <code>gzLogInit(\"test.log\")</code> comes after the problematic call.</p>\n<p>Give <code>Console</code> two <code>FileLogger</code> objects, log and testlog.</p>\n<p>Give <code>Console</code> a vector of <code>FileLogger</code> objects (or another scalable data structure, maybe a map indexed by filename). I like this solution the best. Though maybe there should be a hard limit on the number of files Gazebo can have open for logging.</p>\n<p>Modify <code>FileLogger</code> to have multiple file streams.</p>", "type": "rendered"}, "created_on": "2014-12-16T21:03:40.913373+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": null, "from": null, "outdated": false, "path": "test/integration/plugin.cc"}, "updated_on": "2014-12-16T21:14:05.949748+00:00", "type": "pullrequest_comment", "id": 4339657}