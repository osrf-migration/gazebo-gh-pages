{"pagelen": 50, "values": [{"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "c9b3a5ecf30a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c9b3a5ecf30a.json"}, "html": {"href": "#!/osrf/gazebo/commits/c9b3a5ecf30a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ace5deb8ac4e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ace5deb8ac4e.json"}, "html": {"href": "#!/osrf/gazebo/commits/ace5deb8ac4e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-12-07T00:10:53.295578+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27919443.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27919443"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "I've made several changes to this branch, but it looks good to me now.", "markup": "markdown", "html": "<p>I've made several changes to this branch, but it looks good to me now.</p>", "type": "rendered"}, "created_on": "2016-12-06T21:50:01.563955+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-12-06T21:50:01.566107+00:00", "type": "pullrequest_comment", "id": 27919443}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"approval": {"date": "2016-12-06T21:49:42.248143+00:00", "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "c9b3a5ecf30a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c9b3a5ecf30a.json"}, "html": {"href": "#!/osrf/gazebo/commits/c9b3a5ecf30a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ace5deb8ac4e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ace5deb8ac4e.json"}, "html": {"href": "#!/osrf/gazebo/commits/ace5deb8ac4e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-12-06T21:48:52.547912+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "c9b3a5ecf30a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c9b3a5ecf30a.json"}, "html": {"href": "#!/osrf/gazebo/commits/c9b3a5ecf30a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ace5deb8ac4e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ace5deb8ac4e.json"}, "html": {"href": "#!/osrf/gazebo/commits/ace5deb8ac4e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-12-06T21:48:50.518915+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "c9b3a5ecf30a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c9b3a5ecf30a.json"}, "html": {"href": "#!/osrf/gazebo/commits/c9b3a5ecf30a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fa7668505d18", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fa7668505d18.json"}, "html": {"href": "#!/osrf/gazebo/commits/fa7668505d18"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-12-06T01:38:29.862762+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "439da47da0d3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/439da47da0d3.json"}, "html": {"href": "#!/osrf/gazebo/commits/439da47da0d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b40a997e84fb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b40a997e84fb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b40a997e84fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-12-02T01:59:56.929769+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27708878.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27708878"}}, "parent": {"id": 27697316, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27697316.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27697316"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "ok, I just started another round of jenkins jobs to verify clean cppcheck on trusty and denial", "markup": "markdown", "html": "<p>ok, I just started another round of jenkins jobs to verify clean cppcheck on trusty and denial</p>", "type": "rendered"}, "created_on": "2016-12-01T21:40:33.974153+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-12-01T21:40:33.976939+00:00", "type": "pullrequest_comment", "id": 27708878}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "439da47da0d3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/439da47da0d3.json"}, "html": {"href": "#!/osrf/gazebo/commits/439da47da0d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "faf71c0c69e5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/faf71c0c69e5.json"}, "html": {"href": "#!/osrf/gazebo/commits/faf71c0c69e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-12-01T21:28:43.137355+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "85f49b7f52ab", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/85f49b7f52ab.json"}, "html": {"href": "#!/osrf/gazebo/commits/85f49b7f52ab"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3ef97df4c0f5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ef97df4c0f5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ef97df4c0f5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-12-01T20:10:21.207371+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27697316.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27697316"}}, "parent": {"id": 27635725, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27635725.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27635725"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "merged thanks!", "markup": "markdown", "html": "<p>merged thanks!</p>", "type": "rendered"}, "created_on": "2016-12-01T18:04:51.322895+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2016-12-01T18:04:51.331232+00:00", "type": "pullrequest_comment", "id": 27697316}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "85f49b7f52ab", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/85f49b7f52ab.json"}, "html": {"href": "#!/osrf/gazebo/commits/85f49b7f52ab"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3f495e278fef", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3f495e278fef.json"}, "html": {"href": "#!/osrf/gazebo/commits/3f495e278fef"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2016-12-01T18:04:18.530337+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "f7f81616ed86", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f7f81616ed86.json"}, "html": {"href": "#!/osrf/gazebo/commits/f7f81616ed86"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "33b62b0bbe86", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/33b62b0bbe86.json"}, "html": {"href": "#!/osrf/gazebo/commits/33b62b0bbe86"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-30T23:05:14.135922+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27636482.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27636482"}}, "parent": {"id": 27635319, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27635319.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27635319"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "also I removed the suppressions for the gtest files in 33b62b0bbe86", "markup": "markdown", "html": "<p>also I removed the suppressions for the gtest files in <a href=\"#!/osrf/gazebo/commits/33b62b0bbe86\" rel=\"nofollow\" class=\"ap-connect-link\">33b62b0bbe86</a></p>", "type": "rendered"}, "created_on": "2016-11-30T23:05:13.893800+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-11-30T23:05:13.899104+00:00", "type": "pullrequest_comment", "id": 27636482}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27635748.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27635748"}}, "parent": {"id": 27553277, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27553277.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27553277"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "I've added my own fix for this in branch [cppcheck_xenial_scpeters](#!/osrf/gazebo/branches/compare/cppcheck_xenial_scpeters%0Dcppcheck_xenial#diff):\n\n* 9aba4cc: use `string.compare(0, N, str) == 0` instead of find or compare >= 0\n", "markup": "markdown", "html": "<p>I've added my own fix for this in branch <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/cppcheck_xenial_scpeters%0Dcppcheck_xenial#diff\" rel=\"nofollow\">cppcheck_xenial_scpeters</a>:</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/commits/9aba4cc\" rel=\"nofollow\" class=\"ap-connect-link\">9aba4cc</a>: use <code>string.compare(0, N, str) == 0</code> instead of find or compare &gt;= 0</li>\n</ul>", "type": "rendered"}, "created_on": "2016-11-30T22:44:58.010180+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-11-30T22:44:58.012027+00:00", "type": "pullrequest_comment", "id": 27635748}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27635725.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27635725"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "I've added two more fixes in branch [cppcheck_xenial_scpeters](#!/osrf/gazebo/branches/compare/cppcheck_xenial_scpeters%0Dcppcheck_xenial#diff):\n\n* 9aba4cc: use `string.compare(0, N, str) == 0` instead of find or compare >= 0\n* 5e12892: use const reference in Event.hh\n\nplease consider merging with this branch", "markup": "markdown", "html": "<p>I've added two more fixes in branch <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/cppcheck_xenial_scpeters%0Dcppcheck_xenial#diff\" rel=\"nofollow\">cppcheck_xenial_scpeters</a>:</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/commits/9aba4cc\" rel=\"nofollow\" class=\"ap-connect-link\">9aba4cc</a>: use <code>string.compare(0, N, str) == 0</code> instead of find or compare &gt;= 0</li>\n<li><a href=\"#!/osrf/gazebo/commits/5e12892\" rel=\"nofollow\" class=\"ap-connect-link\">5e12892</a>: use const reference in Event.hh</li>\n</ul>\n<p>please consider merging with this branch</p>", "type": "rendered"}, "created_on": "2016-11-30T22:44:23.755564+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-11-30T22:44:23.757761+00:00", "type": "pullrequest_comment", "id": 27635725}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27635511.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27635511"}}, "parent": {"id": 27635319, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27635319.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27635319"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "it was broken, so I fixed the logic in a28d4e298ef1", "markup": "markdown", "html": "<p>it was broken, so I fixed the logic in <a href=\"#!/osrf/gazebo/commits/a28d4e298ef1\" rel=\"nofollow\" class=\"ap-connect-link\">a28d4e298ef1</a></p>", "type": "rendered"}, "created_on": "2016-11-30T22:39:53.621301+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-11-30T22:39:53.623181+00:00", "type": "pullrequest_comment", "id": 27635511}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "f7f81616ed86", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f7f81616ed86.json"}, "html": {"href": "#!/osrf/gazebo/commits/f7f81616ed86"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a28d4e298ef1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a28d4e298ef1.json"}, "html": {"href": "#!/osrf/gazebo/commits/a28d4e298ef1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-30T22:39:41.457916+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27635319.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27635319"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "Suppressing cppcheck warnings can get messy, since there are different cppcheck errors with different versions of cppcheck. On trusty, I was seeing the following output with this branch:\n\n~~~\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n~~~\n\nI've skipped the `noExplicitConstructor` suppression if cppcheck is older than 1.69 in 4d7b981e3da0, which reduces some of this output", "markup": "markdown", "html": "<p>Suppressing cppcheck warnings can get messy, since there are different cppcheck errors with different versions of cppcheck. On trusty, I was seeing the following output with this branch:</p>\n<div class=\"codehilite\"><pre><span></span>[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n[examples/stand_alone/test_fixture/gtest/*]: (information) Unmatched suppression: *\n[*]: (information) Unmatched suppression: noExplicitConstructor\n</pre></div>\n\n\n<p>I've skipped the <code>noExplicitConstructor</code> suppression if cppcheck is older than 1.69 in <a href=\"#!/osrf/gazebo/commits/4d7b981e3da0\" rel=\"nofollow\" class=\"ap-connect-link\">4d7b981e3da0</a>, which reduces some of this output</p>", "type": "rendered"}, "created_on": "2016-11-30T22:34:59.782766+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-11-30T22:34:59.787887+00:00", "type": "pullrequest_comment", "id": 27635319}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "f7f81616ed86", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f7f81616ed86.json"}, "html": {"href": "#!/osrf/gazebo/commits/f7f81616ed86"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4d7b981e3da0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4d7b981e3da0.json"}, "html": {"href": "#!/osrf/gazebo/commits/4d7b981e3da0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-30T22:33:17.808818+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27634834.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27634834"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "There have been some trusty style check errors since the following build:\n\n* http://build.osrfoundation.org/job/gazebo-ci-default-trusty-amd64-gpu-nvidia/244/\n\nI've fixed them in 172ea90dbe0d in this branch", "markup": "markdown", "html": "<p>There have been some trusty style check errors since the following build:</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-ci-default-trusty-amd64-gpu-nvidia/244/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-ci-default-trusty-amd64-gpu-nvidia/244/</a></li>\n</ul>\n<p>I've fixed them in <a href=\"#!/osrf/gazebo/commits/172ea90dbe0d\" rel=\"nofollow\" class=\"ap-connect-link\">172ea90dbe0d</a> in this branch</p>", "type": "rendered"}, "created_on": "2016-11-30T22:24:40.890172+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-11-30T22:24:40.896917+00:00", "type": "pullrequest_comment", "id": 27634834}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "f7f81616ed86", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f7f81616ed86.json"}, "html": {"href": "#!/osrf/gazebo/commits/f7f81616ed86"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "172ea90dbe0d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/172ea90dbe0d.json"}, "html": {"href": "#!/osrf/gazebo/commits/172ea90dbe0d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-30T22:20:46.120457+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "e28db5880817", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e28db5880817.json"}, "html": {"href": "#!/osrf/gazebo/commits/e28db5880817"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "32e713f1822e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/32e713f1822e.json"}, "html": {"href": "#!/osrf/gazebo/commits/32e713f1822e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-30T19:11:46.094630+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "666bf30ad9a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/666bf30ad9a3.json"}, "html": {"href": "#!/osrf/gazebo/commits/666bf30ad9a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "19eff48dcfa4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/19eff48dcfa4.json"}, "html": {"href": "#!/osrf/gazebo/commits/19eff48dcfa4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-29T23:55:04.246533+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27553277.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27553277"}}, "parent": {"id": 27299796, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27299796.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27299796"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "I think it's more precise to use `compare(0, N, str) == 0`, because you can have mismatches that return `>0`", "markup": "markdown", "html": "<p>I think it's more precise to use <code>compare(0, N, str) == 0</code>, because you can have mismatches that return <code>&gt;0</code></p>", "type": "rendered"}, "created_on": "2016-11-29T20:05:23.744266+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-11-29T20:05:23.750997+00:00", "type": "pullrequest_comment", "id": 27553277}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"approval": {"date": "2016-11-23T22:32:14.222613+00:00", "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "5ef70d513ac1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5ef70d513ac1.json"}, "html": {"href": "#!/osrf/gazebo/commits/5ef70d513ac1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1ee61ba5313b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1ee61ba5313b.json"}, "html": {"href": "#!/osrf/gazebo/commits/1ee61ba5313b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-11-23T22:31:01.743644+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27299796.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27299796"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "`find` and `compare` have slightly difference return values. I believe we want `>= 0`, not `== 0`. \n\nTry out this example:\n\n```\n#!c++\n\n\n#include <string>\n#include <iostream>\n\nint main()\n{ \n  std::string full = \"abc\";\n  std::string a = \"a\";\n  std::string b = \"ab\";\n  std::string c = \"abc\";\n  std::string d = \"abcd\";\n\n  if (full.find(a) == 0)\n    std::cout << \"full.find(a) == 0\\n\";\n\n  if (full.find(b) == 0)\n    std::cout << \"full.find(b) == 0\\n\";\n\n  if (full.find(c) == 0)\n    std::cout << \"full.find(c) == 0\\n\";\n\n  if (full.find(d) == 0)\n    std::cout << \"full.find(d) == 0\\n\";\n\n\n  if (full.compare(a) == 0)\n    std::cout << \"full.compare(a) == 0\\n\";\n\n  if (full.compare(a) >= 0)\n    std::cout << \"full.compare(a) >= 0\\n\";\n\n  if (full.compare(a) <= 0)\n    std::cout << \"full.compare(a) <= 0\\n\";\n\n\n  if (full.compare(b) == 0)\n    std::cout << \"full.compare(b) == 0\\n\";\n\n  if (full.compare(b) >= 0)\n    std::cout << \"full.compare(b) >= 0\\n\";\n\n  if (full.compare(b) <= 0)\n    std::cout << \"full.compare(b) <= 0\\n\";\n\n\n  if (full.compare(c) == 0)\n    std::cout << \"full.compare(c) == 0\\n\";\n\n  if (full.compare(c) >= 0)\n    std::cout << \"full.compare(c) >= 0\\n\";\n\n  if (full.compare(c) <= 0)\n    std::cout << \"full.compare(c) <= 0\\n\";\n\n\n  if (full.compare(d) == 0)\n    std::cout << \"full.compare(d) == 0\\n\";\n\n  if (full.compare(d) >= 0)\n    std::cout << \"full.compare(d) >= 0\\n\";\n\n  if (full.compare(d) <= 0)\n    std::cout << \"full.compare(d) <= 0\\n\";\n\n  return 0;\n} \n```\n\n\n", "markup": "markdown", "html": "<p><code>find</code> and <code>compare</code> have slightly difference return values. I believe we want <code>&gt;= 0</code>, not <code>== 0</code>. </p>\n<p>Try out this example:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;string&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span> \n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"s\">&quot;abc&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">&quot;a&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">&quot;ab&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s\">&quot;abc&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"s\">&quot;abcd&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(a) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(b) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(c) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(d) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(a) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(a) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(a) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(b) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(b) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(b) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(c) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(c) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(c) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(d) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(d) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(d) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span> \n</pre></div>", "type": "rendered"}, "created_on": "2016-11-23T22:26:29.340546+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2016-11-23T22:26:29.347559+00:00", "type": "pullrequest_comment", "id": 27299796}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "5ef70d513ac1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5ef70d513ac1.json"}, "html": {"href": "#!/osrf/gazebo/commits/5ef70d513ac1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b94a97ab8ec9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b94a97ab8ec9.json"}, "html": {"href": "#!/osrf/gazebo/commits/b94a97ab8ec9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-11-23T20:41:58.145589+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27296056.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27296056"}}, "parent": {"id": 27152842, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27152842.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27152842"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "`this->++iter` won't compile. The compiler error is not seen because this file is not compiled.", "markup": "markdown", "html": "<p><code>this-&gt;++iter</code> won't compile. The compiler error is not seen because this file is not compiled.</p>", "type": "rendered"}, "created_on": "2016-11-23T20:40:58.426539+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2016-11-23T20:40:58.435059+00:00", "type": "pullrequest_comment", "id": 27296056}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27152842.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27152842"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "oh is this preferred compared to `++this->iter`?", "markup": "markdown", "html": "<p>oh is this preferred compared to <code>++this-&gt;iter</code>?</p>", "type": "rendered"}, "created_on": "2016-11-21T22:40:39.809461+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2016-11-21T22:40:39.811779+00:00", "type": "pullrequest_comment", "id": 27152842}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "43789bfd0f1b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43789bfd0f1b.json"}, "html": {"href": "#!/osrf/gazebo/commits/43789bfd0f1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "23f2fcb0999b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/23f2fcb0999b.json"}, "html": {"href": "#!/osrf/gazebo/commits/23f2fcb0999b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2016-11-19T19:24:30.088635+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "43789bfd0f1b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43789bfd0f1b.json"}, "html": {"href": "#!/osrf/gazebo/commits/43789bfd0f1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "32f684e71ede", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/32f684e71ede.json"}, "html": {"href": "#!/osrf/gazebo/commits/32f684e71ede"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2016-11-19T17:51:31.826050+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27054425.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27054425"}}, "parent": {"id": 27054394, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27054394.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27054394"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "jenkins results:\n\n* http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/768/testReport/", "markup": "markdown", "html": "<p>jenkins results:</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/768/testReport/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/768/testReport/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2016-11-18T17:31:33.459580+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-11-18T17:31:33.464938+00:00", "type": "pullrequest_comment", "id": 27054425}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27054394.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27054394"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "this breaks the test because its looks for strings that start with `pendulum_`\n\nmaybe `name.compare(0, 9, \"pendulum_\") == 0`?", "markup": "markdown", "html": "<p>this breaks the test because its looks for strings that start with <code>pendulum_</code></p>\n<p>maybe <code>name.compare(0, 9, \"pendulum_\") == 0</code>?</p>", "type": "rendered"}, "created_on": "2016-11-18T17:31:03.162735+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-11-18T17:31:03.169245+00:00", "type": "pullrequest_comment", "id": 27054394}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27051647.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27051647"}}, "parent": {"id": 27009088, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27009088.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27009088"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "anything better than my arbitrary value, I change it.", "markup": "markdown", "html": "<p>anything better than my arbitrary value, I change it.</p>", "type": "rendered"}, "created_on": "2016-11-18T16:43:21.215657+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {}, "updated_on": "2016-11-18T16:43:21.220532+00:00", "type": "pullrequest_comment", "id": 27051647}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "43789bfd0f1b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43789bfd0f1b.json"}, "html": {"href": "#!/osrf/gazebo/commits/43789bfd0f1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b8ae6a0410d3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b8ae6a0410d3.json"}, "html": {"href": "#!/osrf/gazebo/commits/b8ae6a0410d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2016-11-18T13:16:31.856743+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27009088.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27009088"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "being pedantic: this could be up to `LINE_MAX_LEN` (`#define`d as 256) instead of 200", "markup": "markdown", "html": "<p>being pedantic: this could be up to <code>LINE_MAX_LEN</code> (<code>#define</code>d as 256) instead of 200</p>", "type": "rendered"}, "created_on": "2016-11-18T01:33:37.658469+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-11-18T01:33:37.660411+00:00", "type": "pullrequest_comment", "id": 27009088}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "43789bfd0f1b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43789bfd0f1b.json"}, "html": {"href": "#!/osrf/gazebo/commits/43789bfd0f1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "71842fdbc953", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/71842fdbc953.json"}, "html": {"href": "#!/osrf/gazebo/commits/71842fdbc953"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-18T01:31:44.443542+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "43789bfd0f1b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43789bfd0f1b.json"}, "html": {"href": "#!/osrf/gazebo/commits/43789bfd0f1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "71842fdbc953", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/71842fdbc953.json"}, "html": {"href": "#!/osrf/gazebo/commits/71842fdbc953"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-11-18T01:31:42.742030+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "43789bfd0f1b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43789bfd0f1b.json"}, "html": {"href": "#!/osrf/gazebo/commits/43789bfd0f1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1bca722f9a65", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1bca722f9a65.json"}, "html": {"href": "#!/osrf/gazebo/commits/1bca722f9a65"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2016-11-18T00:49:37.308654+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}, {"update": {"description": "Some changes looked trivial to me, there were a couple of memory leaks in the tests since we were using raw pointers.\r\n\r\nI've enable the `noExplicitConstructor` globally until we release gazebo8. [I found a weird false positive](#!/osrf/gazebo/pull-requests/new#Lgazebo/common/MovingWindowFilter.hhT69). If I isolate the code and remove the namespaces, cppcheck is happy. If I enable the namespaces again, the warning appears. \r\n\r\nThanks to Steve for mentioning it we are starting to use the inline cppcheck suppressions (enabled via comment). They have the tradeoff of making the code a bit less readable.", "title": "Clean cppcheck result in Xenial", "destination": {"commit": {"hash": "43789bfd0f1b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/43789bfd0f1b.json"}, "html": {"href": "#!/osrf/gazebo/commits/43789bfd0f1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1bca722f9a65", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1bca722f9a65.json"}, "html": {"href": "#!/osrf/gazebo/commits/1bca722f9a65"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cppcheck_xenial"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2016-11-18T00:49:37.288171+00:00"}, "pull_request": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}}]}