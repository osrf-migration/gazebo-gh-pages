{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506/comments/27299796.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:b94a97ab8ec9..5ef70d513ac1?path=plugins%2Frest_web%2FRestUiPlugin.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506/_/diff#comment-27299796"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2506, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2506.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2506"}}, "title": "Clean cppcheck result in Xenial"}, "content": {"raw": "`find` and `compare` have slightly difference return values. I believe we want `>= 0`, not `== 0`. \n\nTry out this example:\n\n```\n#!c++\n\n\n#include <string>\n#include <iostream>\n\nint main()\n{ \n  std::string full = \"abc\";\n  std::string a = \"a\";\n  std::string b = \"ab\";\n  std::string c = \"abc\";\n  std::string d = \"abcd\";\n\n  if (full.find(a) == 0)\n    std::cout << \"full.find(a) == 0\\n\";\n\n  if (full.find(b) == 0)\n    std::cout << \"full.find(b) == 0\\n\";\n\n  if (full.find(c) == 0)\n    std::cout << \"full.find(c) == 0\\n\";\n\n  if (full.find(d) == 0)\n    std::cout << \"full.find(d) == 0\\n\";\n\n\n  if (full.compare(a) == 0)\n    std::cout << \"full.compare(a) == 0\\n\";\n\n  if (full.compare(a) >= 0)\n    std::cout << \"full.compare(a) >= 0\\n\";\n\n  if (full.compare(a) <= 0)\n    std::cout << \"full.compare(a) <= 0\\n\";\n\n\n  if (full.compare(b) == 0)\n    std::cout << \"full.compare(b) == 0\\n\";\n\n  if (full.compare(b) >= 0)\n    std::cout << \"full.compare(b) >= 0\\n\";\n\n  if (full.compare(b) <= 0)\n    std::cout << \"full.compare(b) <= 0\\n\";\n\n\n  if (full.compare(c) == 0)\n    std::cout << \"full.compare(c) == 0\\n\";\n\n  if (full.compare(c) >= 0)\n    std::cout << \"full.compare(c) >= 0\\n\";\n\n  if (full.compare(c) <= 0)\n    std::cout << \"full.compare(c) <= 0\\n\";\n\n\n  if (full.compare(d) == 0)\n    std::cout << \"full.compare(d) == 0\\n\";\n\n  if (full.compare(d) >= 0)\n    std::cout << \"full.compare(d) >= 0\\n\";\n\n  if (full.compare(d) <= 0)\n    std::cout << \"full.compare(d) <= 0\\n\";\n\n  return 0;\n} \n```\n\n\n", "markup": "markdown", "html": "<p><code>find</code> and <code>compare</code> have slightly difference return values. I believe we want <code>&gt;= 0</code>, not <code>== 0</code>. </p>\n<p>Try out this example:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;string&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span> \n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"s\">&quot;abc&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">&quot;a&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">&quot;ab&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s\">&quot;abc&quot;</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"s\">&quot;abcd&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(a) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(b) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(c) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.find(d) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(a) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(a) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(a) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(b) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(b) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(b) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(c) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(c) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(c) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(d) == 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(d) &gt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;full.compare(d) &lt;= 0</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span> \n</pre></div>", "type": "rendered"}, "created_on": "2016-11-23T22:26:29.340546+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 43, "from": null, "outdated": true, "path": "plugins/rest_web/RestUiPlugin.cc"}, "updated_on": "2016-11-23T22:26:29.347559+00:00", "type": "pullrequest_comment", "id": 27299796}