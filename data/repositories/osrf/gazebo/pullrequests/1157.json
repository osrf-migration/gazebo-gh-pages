{"rendered": {"description": {"raw": "Allows to spawn multiple models by specifying its region, distribution and number of objects.\r\n\r\nIt requires [this](https://bitbucket.org/osrf/sdformat/pull-request/112) sdformat pull request.\r\n\r\n**Known limitations:**\r\n\r\n* The objects can collide each other when using a random distribution. \r\n* There are different alternatives for specifying the position of the models, but nothing is ready to specify orientations.\r\n\r\n**Open question:** The Population class needs a pointer to the world and access to the private `rootElement` class member. This is required for spawning the models without using the transport. I included Population as a friend class inside the World class but I'm open for suggestions (create a public accessor to `rootElement`, use the transport for spawning models).\r\n\r\n**Update**: Solved using `InsertModelString()`\r\n\r\n**Update**: A new tutorial has been created [here](#!/osrf/gazebo_tutorials/pull-request/32/new-tutorial-for-model-population).\r\n\r\n![gazebo_population.png](data/bitbucket.org/repo/jgXqbo/images/98514253-gazebo_population.png)", "markup": "markdown", "html": "<p>Allows to spawn multiple models by specifying its region, distribution and number of objects.</p>\n<p>It requires <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-request/112\" rel=\"nofollow\">this</a> sdformat pull request.</p>\n<p><strong>Known limitations:</strong></p>\n<ul>\n<li>The objects can collide each other when using a random distribution. </li>\n<li>There are different alternatives for specifying the position of the models, but nothing is ready to specify orientations.</li>\n</ul>\n<p><strong>Open question:</strong> The Population class needs a pointer to the world and access to the private <code>rootElement</code> class member. This is required for spawning the models without using the transport. I included Population as a friend class inside the World class but I'm open for suggestions (create a public accessor to <code>rootElement</code>, use the transport for spawning models).</p>\n<p><strong>Update</strong>: Solved using <code>InsertModelString()</code></p>\n<p><strong>Update</strong>: A new tutorial has been created <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_tutorials/pull-request/32/new-tutorial-for-model-population\" rel=\"nofollow\">here</a>.</p>\n<p><img alt=\"gazebo_population.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/98514253-gazebo_population.png\" /></p>", "type": "rendered"}, "title": {"raw": "Automatic model population", "markup": "markdown", "html": "<p>Automatic model population</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Allows to spawn multiple models by specifying its region, distribution and number of objects.\r\n\r\nIt requires [this](https://bitbucket.org/osrf/sdformat/pull-request/112) sdformat pull request.\r\n\r\n**Known limitations:**\r\n\r\n* The objects can collide each other when using a random distribution. \r\n* There are different alternatives for specifying the position of the models, but nothing is ready to specify orientations.\r\n\r\n**Open question:** The Population class needs a pointer to the world and access to the private `rootElement` class member. This is required for spawning the models without using the transport. I included Population as a friend class inside the World class but I'm open for suggestions (create a public accessor to `rootElement`, use the transport for spawning models).\r\n\r\n**Update**: Solved using `InsertModelString()`\r\n\r\n**Update**: A new tutorial has been created [here](#!/osrf/gazebo_tutorials/pull-request/32/new-tutorial-for-model-population).\r\n\r\n![gazebo_population.png](data/bitbucket.org/repo/jgXqbo/images/98514253-gazebo_population.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1157/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:2591f9537eae%0D60713b129f6f?from_pullrequest_id=1157"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1157/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1157.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1157/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1157/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1157"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1157/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:2591f9537eae%0D60713b129f6f?from_pullrequest_id=1157"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1157/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1157/statuses_page=1.json"}}, "title": "Automatic model population", "close_source_branch": true, "reviewers": [], "id": 1157, "destination": {"commit": {"hash": "60713b129f6f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/60713b129f6f.json"}, "html": {"href": "#!/osrf/gazebo/commits/60713b129f6f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2014-07-29T00:52:35.557197+00:00", "summary": {"raw": "Allows to spawn multiple models by specifying its region, distribution and number of objects.\r\n\r\nIt requires [this](https://bitbucket.org/osrf/sdformat/pull-request/112) sdformat pull request.\r\n\r\n**Known limitations:**\r\n\r\n* The objects can collide each other when using a random distribution. \r\n* There are different alternatives for specifying the position of the models, but nothing is ready to specify orientations.\r\n\r\n**Open question:** The Population class needs a pointer to the world and access to the private `rootElement` class member. This is required for spawning the models without using the transport. I included Population as a friend class inside the World class but I'm open for suggestions (create a public accessor to `rootElement`, use the transport for spawning models).\r\n\r\n**Update**: Solved using `InsertModelString()`\r\n\r\n**Update**: A new tutorial has been created [here](#!/osrf/gazebo_tutorials/pull-request/32/new-tutorial-for-model-population).\r\n\r\n![gazebo_population.png](data/bitbucket.org/repo/jgXqbo/images/98514253-gazebo_population.png)", "markup": "markdown", "html": "<p>Allows to spawn multiple models by specifying its region, distribution and number of objects.</p>\n<p>It requires <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-request/112\" rel=\"nofollow\">this</a> sdformat pull request.</p>\n<p><strong>Known limitations:</strong></p>\n<ul>\n<li>The objects can collide each other when using a random distribution. </li>\n<li>There are different alternatives for specifying the position of the models, but nothing is ready to specify orientations.</li>\n</ul>\n<p><strong>Open question:</strong> The Population class needs a pointer to the world and access to the private <code>rootElement</code> class member. This is required for spawning the models without using the transport. I included Population as a friend class inside the World class but I'm open for suggestions (create a public accessor to <code>rootElement</code>, use the transport for spawning models).</p>\n<p><strong>Update</strong>: Solved using <code>InsertModelString()</code></p>\n<p><strong>Update</strong>: A new tutorial has been created <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_tutorials/pull-request/32/new-tutorial-for-model-population\" rel=\"nofollow\">here</a>.</p>\n<p><img alt=\"gazebo_population.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/98514253-gazebo_population.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "aa3d9a94e4b9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/aa3d9a94e4b9.json"}, "html": {"href": "#!/osrf/gazebo/commits/aa3d9a94e4b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "env_population"}}, "comment_count": 67, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-08-19T22:30:57.938595+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2014-08-20T21:46:48.804204+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-08-20T22:57:13.948706+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2014-08-22T17:29:57.056642+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2014-08-12T00:46:36.745278+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2014-08-25T15:19:49.893765+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "2591f9537eae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2591f9537eae.json"}, "html": {"href": "#!/osrf/gazebo/commits/2591f9537eae"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}