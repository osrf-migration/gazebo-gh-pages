{"rendered": {"description": {"raw": "Undo for reset commands (reset world, reset model poses, reset time)\r\n\r\nUser commands are handled a bit differently in this pull request than the user commands introduced in pull request #1934. \r\n\r\nBefore, the command action itself and the \"user command\" which is registered for undo were sent in parallel. This was causing issues due to the order in which the messages are handled. The issues are harder to reproduce with some commands.\r\n\r\n![undoSync1.png](data/bitbucket.org/repo/jgXqbo/images/3634482620-undoSync1.png)\r\n\r\nWe want to make sure the user command is registered before the action takes effect (to save the world state before the command). The new approach is to send the \"action\" inside the user command, and republish that message from `UserCmdManager` in the server. \r\n\r\n![undoSync2.png](data/bitbucket.org/repo/jgXqbo/images/743430199-undoSync2.png)\r\n\r\nIf this pull request gets merged, I'll make a new pull request converting the former user commands to the same style.\r\n\r\nSome considerations:\r\n\r\n1. Other subscribers to the \"action\" messages shouldn't be affected\r\n\r\n1. This makes the same information be published twice (the first time it's a message within a message)\r\n\r\n1. `user_cmd.proto` might get very big once all the command types are implemented. Consider extending the message\r\n\r\n[CI](http://build.osrfoundation.org/view/main/view/CI%20coverage%20jobs/job/gazebo-any-coverage-trusty-amd64/477/) ok", "markup": "markdown", "html": "<p>Undo for reset commands (reset world, reset model poses, reset time)</p>\n<p>User commands are handled a bit differently in this pull request than the user commands introduced in <a href=\"#!/osrf/gazebo/pull-requests/1934/undo-user-motion-commands-during\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1934</a>. </p>\n<p>Before, the command action itself and the \"user command\" which is registered for undo were sent in parallel. This was causing issues due to the order in which the messages are handled. The issues are harder to reproduce with some commands.</p>\n<p><img alt=\"undoSync1.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3634482620-undoSync1.png\" /></p>\n<p>We want to make sure the user command is registered before the action takes effect (to save the world state before the command). The new approach is to send the \"action\" inside the user command, and republish that message from <code>UserCmdManager</code> in the server. </p>\n<p><img alt=\"undoSync2.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/743430199-undoSync2.png\" /></p>\n<p>If this pull request gets merged, I'll make a new pull request converting the former user commands to the same style.</p>\n<p>Some considerations:</p>\n<ol>\n<li>\n<p>Other subscribers to the \"action\" messages shouldn't be affected</p>\n</li>\n<li>\n<p>This makes the same information be published twice (the first time it's a message within a message)</p>\n</li>\n<li>\n<p><code>user_cmd.proto</code> might get very big once all the command types are implemented. Consider extending the message</p>\n</li>\n</ol>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20coverage%20jobs/job/gazebo-any-coverage-trusty-amd64/477/\" rel=\"nofollow\">CI</a> ok</p>", "type": "rendered"}, "title": {"raw": "Undo resets", "markup": "markdown", "html": "<p>Undo resets</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Undo for reset commands (reset world, reset model poses, reset time)\r\n\r\nUser commands are handled a bit differently in this pull request than the user commands introduced in pull request #1934. \r\n\r\nBefore, the command action itself and the \"user command\" which is registered for undo were sent in parallel. This was causing issues due to the order in which the messages are handled. The issues are harder to reproduce with some commands.\r\n\r\n![undoSync1.png](data/bitbucket.org/repo/jgXqbo/images/3634482620-undoSync1.png)\r\n\r\nWe want to make sure the user command is registered before the action takes effect (to save the world state before the command). The new approach is to send the \"action\" inside the user command, and republish that message from `UserCmdManager` in the server. \r\n\r\n![undoSync2.png](data/bitbucket.org/repo/jgXqbo/images/743430199-undoSync2.png)\r\n\r\nIf this pull request gets merged, I'll make a new pull request converting the former user commands to the same style.\r\n\r\nSome considerations:\r\n\r\n1. Other subscribers to the \"action\" messages shouldn't be affected\r\n\r\n1. This makes the same information be published twice (the first time it's a message within a message)\r\n\r\n1. `user_cmd.proto` might get very big once all the command types are implemented. Consider extending the message\r\n\r\n[CI](http://build.osrfoundation.org/view/main/view/CI%20coverage%20jobs/job/gazebo-any-coverage-trusty-amd64/477/) ok", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1986/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:6a6d0f94ff5e%0D9cb28f23e523?from_pullrequest_id=1986"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1986/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1986.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1986/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1986/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1986"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1986/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:6a6d0f94ff5e%0D9cb28f23e523?from_pullrequest_id=1986"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1986/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1986/statuses_page=1.json"}}, "title": "Undo resets", "close_source_branch": true, "reviewers": [], "id": 1986, "destination": {"commit": {"hash": "9cb28f23e523", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9cb28f23e523.json"}, "html": {"href": "#!/osrf/gazebo/commits/9cb28f23e523"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2015-11-13T00:47:25.404162+00:00", "summary": {"raw": "Undo for reset commands (reset world, reset model poses, reset time)\r\n\r\nUser commands are handled a bit differently in this pull request than the user commands introduced in pull request #1934. \r\n\r\nBefore, the command action itself and the \"user command\" which is registered for undo were sent in parallel. This was causing issues due to the order in which the messages are handled. The issues are harder to reproduce with some commands.\r\n\r\n![undoSync1.png](data/bitbucket.org/repo/jgXqbo/images/3634482620-undoSync1.png)\r\n\r\nWe want to make sure the user command is registered before the action takes effect (to save the world state before the command). The new approach is to send the \"action\" inside the user command, and republish that message from `UserCmdManager` in the server. \r\n\r\n![undoSync2.png](data/bitbucket.org/repo/jgXqbo/images/743430199-undoSync2.png)\r\n\r\nIf this pull request gets merged, I'll make a new pull request converting the former user commands to the same style.\r\n\r\nSome considerations:\r\n\r\n1. Other subscribers to the \"action\" messages shouldn't be affected\r\n\r\n1. This makes the same information be published twice (the first time it's a message within a message)\r\n\r\n1. `user_cmd.proto` might get very big once all the command types are implemented. Consider extending the message\r\n\r\n[CI](http://build.osrfoundation.org/view/main/view/CI%20coverage%20jobs/job/gazebo-any-coverage-trusty-amd64/477/) ok", "markup": "markdown", "html": "<p>Undo for reset commands (reset world, reset model poses, reset time)</p>\n<p>User commands are handled a bit differently in this pull request than the user commands introduced in <a href=\"#!/osrf/gazebo/pull-requests/1934/undo-user-motion-commands-during\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1934</a>. </p>\n<p>Before, the command action itself and the \"user command\" which is registered for undo were sent in parallel. This was causing issues due to the order in which the messages are handled. The issues are harder to reproduce with some commands.</p>\n<p><img alt=\"undoSync1.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3634482620-undoSync1.png\" /></p>\n<p>We want to make sure the user command is registered before the action takes effect (to save the world state before the command). The new approach is to send the \"action\" inside the user command, and republish that message from <code>UserCmdManager</code> in the server. </p>\n<p><img alt=\"undoSync2.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/743430199-undoSync2.png\" /></p>\n<p>If this pull request gets merged, I'll make a new pull request converting the former user commands to the same style.</p>\n<p>Some considerations:</p>\n<ol>\n<li>\n<p>Other subscribers to the \"action\" messages shouldn't be affected</p>\n</li>\n<li>\n<p>This makes the same information be published twice (the first time it's a message within a message)</p>\n</li>\n<li>\n<p><code>user_cmd.proto</code> might get very big once all the command types are implemented. Consider extending the message</p>\n</li>\n</ol>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20coverage%20jobs/job/gazebo-any-coverage-trusty-amd64/477/\" rel=\"nofollow\">CI</a> ok</p>", "type": "rendered"}, "source": {"commit": {"hash": "94a8364efbd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/94a8364efbd0.json"}, "html": {"href": "#!/osrf/gazebo/commits/94a8364efbd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "undo_resets"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-12-01T01:22:46.426396+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2015-11-30T23:31:27.971651+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2015-11-17T18:14:05.423329+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2015-12-01T02:38:32.682782+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "6a6d0f94ff5e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6a6d0f94ff5e.json"}, "html": {"href": "#!/osrf/gazebo/commits/6a6d0f94ff5e"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}