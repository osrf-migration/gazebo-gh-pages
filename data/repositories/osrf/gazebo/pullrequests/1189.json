{"rendered": {"description": {"raw": "The `Collision::GetShape` function is not const, which was causing a problem with my attempts to make a workaround for #1265 (in [branch issue_1265](#!/osrf/gazebo/commits/branch/issue_1265)).\r\n\r\nHere I'm deprecating the non-const version of `Collision::GetShape` and overloading a const version alongside it. ~~I had to make some funky changes to SimbodyPhysics.cc and factory.cc to force it to use the const version and avoid a deprecation warning (now that I'm writing this, would it be better to try to disable the warnings with a pragma instead?).~~ I'm using pragmas in two places to avoid deprecation warnings.\r\n\r\n[API/ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-precise-amd64/111/)\r\n\r\n[Regular jenkins job](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/188/) has some unrelated test failures\r\n\r\nSee pull request #1191 for the merge forward to default", "markup": "markdown", "html": "<p>The <code>Collision::GetShape</code> function is not const, which was causing a problem with my attempts to make a workaround for <a href=\"#!/osrf/gazebo/issues/1265/bulletplaneshape-bounding-box-always-has\" rel=\"nofollow\" title=\"BulletPlaneShape bounding box always has infinite size\" class=\"ap-connect-link\"><s>#1265</s></a> (in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/commits/branch/issue_1265\" rel=\"nofollow\">branch issue_1265</a>).</p>\n<p>Here I'm deprecating the non-const version of <code>Collision::GetShape</code> and overloading a const version alongside it. <del>I had to make some funky changes to SimbodyPhysics.cc and factory.cc to force it to use the const version and avoid a deprecation warning (now that I'm writing this, would it be better to try to disable the warnings with a pragma instead?).</del> I'm using pragmas in two places to avoid deprecation warnings.</p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-precise-amd64/111/\" rel=\"nofollow\">API/ABI checker</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/188/\" rel=\"nofollow\">Regular jenkins job</a> has some unrelated test failures</p>\n<p>See <a href=\"#!/osrf/gazebo/pull-requests/1191/make-collision-getshapetype-const-default\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1191</a> for the merge forward to default</p>", "type": "rendered"}, "title": {"raw": "Make Collision::GetShape a const function", "markup": "markdown", "html": "<p>Make Collision::GetShape a const function</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The `Collision::GetShape` function is not const, which was causing a problem with my attempts to make a workaround for #1265 (in [branch issue_1265](#!/osrf/gazebo/commits/branch/issue_1265)).\r\n\r\nHere I'm deprecating the non-const version of `Collision::GetShape` and overloading a const version alongside it. ~~I had to make some funky changes to SimbodyPhysics.cc and factory.cc to force it to use the const version and avoid a deprecation warning (now that I'm writing this, would it be better to try to disable the warnings with a pragma instead?).~~ I'm using pragmas in two places to avoid deprecation warnings.\r\n\r\n[API/ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-precise-amd64/111/)\r\n\r\n[Regular jenkins job](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/188/) has some unrelated test failures\r\n\r\nSee pull request #1191 for the merge forward to default", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1189/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:bbfed2b3cba2%0D0c7830ca3341?from_pullrequest_id=1189"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1189/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1189.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1189/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1189/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1189"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1189/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:bbfed2b3cba2%0D0c7830ca3341?from_pullrequest_id=1189"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1189/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1189/statuses_page=1.json"}}, "title": "Make Collision::GetShape a const function", "close_source_branch": true, "reviewers": [], "id": 1189, "destination": {"commit": {"hash": "0c7830ca3341", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0c7830ca3341.json"}, "html": {"href": "#!/osrf/gazebo/commits/0c7830ca3341"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.0"}}, "created_on": "2014-09-05T22:45:12.768275+00:00", "summary": {"raw": "The `Collision::GetShape` function is not const, which was causing a problem with my attempts to make a workaround for #1265 (in [branch issue_1265](#!/osrf/gazebo/commits/branch/issue_1265)).\r\n\r\nHere I'm deprecating the non-const version of `Collision::GetShape` and overloading a const version alongside it. ~~I had to make some funky changes to SimbodyPhysics.cc and factory.cc to force it to use the const version and avoid a deprecation warning (now that I'm writing this, would it be better to try to disable the warnings with a pragma instead?).~~ I'm using pragmas in two places to avoid deprecation warnings.\r\n\r\n[API/ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-precise-amd64/111/)\r\n\r\n[Regular jenkins job](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/188/) has some unrelated test failures\r\n\r\nSee pull request #1191 for the merge forward to default", "markup": "markdown", "html": "<p>The <code>Collision::GetShape</code> function is not const, which was causing a problem with my attempts to make a workaround for <a href=\"#!/osrf/gazebo/issues/1265/bulletplaneshape-bounding-box-always-has\" rel=\"nofollow\" title=\"BulletPlaneShape bounding box always has infinite size\" class=\"ap-connect-link\"><s>#1265</s></a> (in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/commits/branch/issue_1265\" rel=\"nofollow\">branch issue_1265</a>).</p>\n<p>Here I'm deprecating the non-const version of <code>Collision::GetShape</code> and overloading a const version alongside it. <del>I had to make some funky changes to SimbodyPhysics.cc and factory.cc to force it to use the const version and avoid a deprecation warning (now that I'm writing this, would it be better to try to disable the warnings with a pragma instead?).</del> I'm using pragmas in two places to avoid deprecation warnings.</p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-precise-amd64/111/\" rel=\"nofollow\">API/ABI checker</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/188/\" rel=\"nofollow\">Regular jenkins job</a> has some unrelated test failures</p>\n<p>See <a href=\"#!/osrf/gazebo/pull-requests/1191/make-collision-getshapetype-const-default\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1191</a> for the merge forward to default</p>", "type": "rendered"}, "source": {"commit": {"hash": "038000886c5a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/038000886c5a.json"}, "html": {"href": "#!/osrf/gazebo/commits/038000886c5a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "const_GetShapeType"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-09-08T05:35:26.256685+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-09-11T21:13:30.704674+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2014-09-10T00:20:44.275657+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2014-09-11T21:27:21.284581+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "bbfed2b3cba2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bbfed2b3cba2.json"}, "html": {"href": "#!/osrf/gazebo/commits/bbfed2b3cba2"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}