{"rendered": {"description": {"raw": "In many of my physics tests, I like to check things after every timestep. With the world paused, I use loops like the following:\r\n~~~\r\nfor (lots of steps)\r\n{\r\n  world->Step(1);\r\n  // get physics properties and check their validity\r\n}\r\n~~~\r\nI added a test to `INTEGRATION_speed` that shows that this currently can't go faster than real-time. The problem was a 1 ms wait in the `World::Step(unsigned int)` function. I changed it to a 1 ns wait and now the test passes.\r\n\r\nI need this for my accuracy testing branch.", "markup": "markdown", "html": "<p>In many of my physics tests, I like to check things after every timestep. With the world paused, I use loops like the following:</p>\n<div class=\"codehilite\"><pre><span></span>for (lots of steps)\n{\n  world-&gt;Step(1);\n  // get physics properties and check their validity\n}\n</pre></div>\n\n\n<p>I added a test to <code>INTEGRATION_speed</code> that shows that this currently can't go faster than real-time. The problem was a 1 ms wait in the <code>World::Step(unsigned int)</code> function. I changed it to a 1 ns wait and now the test passes.</p>\n<p>I need this for my accuracy testing branch.</p>", "type": "rendered"}, "title": {"raw": "Speed up World::Step in loops", "markup": "markdown", "html": "<p>Speed up World::Step in loops</p>", "type": "rendered"}}, "type": "pullrequest", "description": "In many of my physics tests, I like to check things after every timestep. With the world paused, I use loops like the following:\r\n~~~\r\nfor (lots of steps)\r\n{\r\n  world->Step(1);\r\n  // get physics properties and check their validity\r\n}\r\n~~~\r\nI added a test to `INTEGRATION_speed` that shows that this currently can't go faster than real-time. The problem was a 1 ms wait in the `World::Step(unsigned int)` function. I changed it to a 1 ns wait and now the test passes.\r\n\r\nI need this for my accuracy testing branch.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1492/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:dd2000cf18d5%0Df9f52167dfc6?from_pullrequest_id=1492"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1492/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1492.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1492/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1492/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1492"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1492/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:dd2000cf18d5%0Df9f52167dfc6?from_pullrequest_id=1492"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1492/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1492/statuses_page=1.json"}}, "title": "Speed up World::Step in loops", "close_source_branch": true, "reviewers": [], "id": 1492, "destination": {"commit": {"hash": "f9f52167dfc6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f9f52167dfc6.json"}, "html": {"href": "#!/osrf/gazebo/commits/f9f52167dfc6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "created_on": "2015-03-06T18:57:07.251446+00:00", "summary": {"raw": "In many of my physics tests, I like to check things after every timestep. With the world paused, I use loops like the following:\r\n~~~\r\nfor (lots of steps)\r\n{\r\n  world->Step(1);\r\n  // get physics properties and check their validity\r\n}\r\n~~~\r\nI added a test to `INTEGRATION_speed` that shows that this currently can't go faster than real-time. The problem was a 1 ms wait in the `World::Step(unsigned int)` function. I changed it to a 1 ns wait and now the test passes.\r\n\r\nI need this for my accuracy testing branch.", "markup": "markdown", "html": "<p>In many of my physics tests, I like to check things after every timestep. With the world paused, I use loops like the following:</p>\n<div class=\"codehilite\"><pre><span></span>for (lots of steps)\n{\n  world-&gt;Step(1);\n  // get physics properties and check their validity\n}\n</pre></div>\n\n\n<p>I added a test to <code>INTEGRATION_speed</code> that shows that this currently can't go faster than real-time. The problem was a 1 ms wait in the <code>World::Step(unsigned int)</code> function. I changed it to a 1 ns wait and now the test passes.</p>\n<p>I need this for my accuracy testing branch.</p>", "type": "rendered"}, "source": {"commit": {"hash": "37bb2e6f28d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/37bb2e6f28d8.json"}, "html": {"href": "#!/osrf/gazebo/commits/37bb2e6f28d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "unthrottle_step_4.1"}}, "comment_count": 31, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-03-09T21:15:28.619758+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-10T00:52:45.180094+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-11T00:11:32.382024+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-09T21:47:21.714036+00:00", "type": "participant", "approved": false, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-06T22:34:50.837790+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}}], "reason": "", "updated_on": "2015-03-11T00:33:00.929215+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "dd2000cf18d5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dd2000cf18d5.json"}, "html": {"href": "#!/osrf/gazebo/commits/dd2000cf18d5"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}