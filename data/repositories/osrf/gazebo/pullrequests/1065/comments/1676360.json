{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1065/comments/1676360.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:4d904289565c..fe875274eca5?path=gazebo%2Fgazebo.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1065/_/diff#comment-1676360"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1065, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1065.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1065"}}, "title": "Overload SetupClient() and SetupServer() with std::vector<std::string>"}, "content": {"raw": "strdup allocates but I don't see a corresponding delete. Here is my version of this in case you wish to use some/all of it:\n\n\n```\n#!c++\n\nnamespace detail {\n    char* c_str(std::string & s)\n    {\n        char *pc = new char[s.size()+1];\n        std::strcpy(pc, s.c_str());\n        return pc;\n    }\n    \n    void callWithStringVector(std::vector<std::string> vs, boost::function<bool (int, char**)> function)\n    {\n        std::vector<char*>  vc;\n        std::transform(vs.begin(), vs.end(), std::back_inserter(vc), c_str);\n        function(vc.size(),&vc[0]);\n        for ( size_t i = 0 ; i < vc.size() ; i++ )\n            delete [] vc[i];\n    }\n} // namespace detail\n\n```\n", "markup": "markdown", "html": "<p>strdup allocates but I don't see a corresponding delete. Here is my version of this in case you wish to use some/all of it:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">namespace</span> <span class=\"n\">detail</span> <span class=\"p\">{</span>\n    <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">c_str</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">pc</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">char</span><span class=\"p\">[</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">strcpy</span><span class=\"p\">(</span><span class=\"n\">pc</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">());</span>\n        <span class=\"k\">return</span> <span class=\"n\">pc</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kt\">void</span> <span class=\"n\">callWithStringVector</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span> <span class=\"n\">vs</span><span class=\"p\">,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">function</span><span class=\"o\">&lt;</span><span class=\"kt\">bool</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"kt\">char</span><span class=\"o\">**</span><span class=\"p\">)</span><span class=\"o\">&gt;</span> <span class=\"n\">function</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">*&gt;</span>  <span class=\"n\">vc</span><span class=\"p\">;</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">vs</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">(),</span> <span class=\"n\">vs</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">(),</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">back_inserter</span><span class=\"p\">(</span><span class=\"n\">vc</span><span class=\"p\">),</span> <span class=\"n\">c_str</span><span class=\"p\">);</span>\n        <span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">vc</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">(),</span><span class=\"o\">&amp;</span><span class=\"n\">vc</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]);</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span> <span class=\"kt\">size_t</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> <span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">vc</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()</span> <span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">)</span>\n            <span class=\"k\">delete</span> <span class=\"p\">[]</span> <span class=\"n\">vc</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span> <span class=\"c1\">// namespace detail</span>\n</pre></div>", "type": "rendered"}, "created_on": "2014-04-16T17:54:46.028692+00:00", "user": {"display_name": "Andrew Hundt", "uuid": "{1e508588-c010-4693-87e5-4923df91390d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1e508588-c010-4693-87e5-4923df91390d%7D"}, "html": {"href": "https://bitbucket.org/%7B1e508588-c010-4693-87e5-4923df91390d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fb975596131ce08ea7e7472f09b8209dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-1.png"}}, "nickname": "ahundt", "type": "user", "account_id": "557058:f565cbf4-e097-4b3f-b4db-4889856f7417"}, "inline": {"to": 202, "from": null, "outdated": false, "path": "gazebo/gazebo.cc"}, "updated_on": "2014-04-16T17:54:46.187615+00:00", "type": "pullrequest_comment", "id": 1676360}