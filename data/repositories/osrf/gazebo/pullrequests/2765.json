{"rendered": {"reason": {"raw": "See comments.", "markup": "markdown", "html": "<p>See comments.</p>", "type": "rendered"}, "description": {"raw": "Issue #1981 notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252)). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.\r\n\r\nThe ODE function `dMassSetParameters` allows one to specify an offset for the CoG, so theoretically the changes [here](https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4) would solve the issue. However, ODE does not support setting the CoG offset to anything but zero ([see here](http://ode.org/ode-latest-userguide.html#sec_13_0_0)).\r\n\r\nThis pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when `ODELink::UpdateMass` is called. The collision meshes must also be updated, but this is already handled in `ODELink::UpdateCollisionOffsets`. This pull request includes the tests from pull request #2341, which now succeeds with the changes.\r\n\r\nNote: there are a few reasons it may be better to not support moving link CoGs after initialization:\r\n\r\n1. Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. [Here](https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3) is an example/test illustrating how the joint limits are broken. I made changes [here](https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff) which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).\r\n\r\n1. Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.\r\n\r\n1. Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&fileviewer=file-view-default#Visual.cc-3093)).\r\n\r\n1. If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.", "markup": "markdown", "html": "<p>Issue <a href=\"#!/osrf/gazebo/issues/1981/moving-the-center-of-gravity-of-a-link\" rel=\"nofollow\" title=\"Moving the center of gravity of a link with joints results in false forces (ODE).\" class=\"ap-connect-link\">#1981</a> notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252\" rel=\"nofollow\">see here</a>). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.</p>\n<p>The ODE function <code>dMassSetParameters</code> allows one to specify an offset for the CoG, so theoretically the changes <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4\" rel=\"nofollow\">here</a> would solve the issue. However, ODE does not support setting the CoG offset to anything but zero (<a data-is-external-link=\"true\" href=\"http://ode.org/ode-latest-userguide.html#sec_13_0_0\" rel=\"nofollow\">see here</a>).</p>\n<p>This pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when <code>ODELink::UpdateMass</code> is called. The collision meshes must also be updated, but this is already handled in <code>ODELink::UpdateCollisionOffsets</code>. This pull request includes the tests from <a href=\"#!/osrf/gazebo/pull-requests/2341/added-a-so-far-failing-test-for-moving-cog\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2341</a>, which now succeeds with the changes.</p>\n<p>Note: there are a few reasons it may be better to not support moving link CoGs after initialization:</p>\n<ol>\n<li>\n<p>Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3\" rel=\"nofollow\">Here</a> is an example/test illustrating how the joint limits are broken. I made changes <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff\" rel=\"nofollow\">here</a> which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).</p>\n</li>\n<li>\n<p>Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.</p>\n</li>\n<li>\n<p>Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&amp;fileviewer=file-view-default#Visual.cc-3093\" rel=\"nofollow\">see here</a>).</p>\n</li>\n<li>\n<p>If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.</p>\n</li>\n</ol>", "type": "rendered"}, "title": {"raw": "Moving the center of gravity of a link with joints in ODE", "markup": "markdown", "html": "<p>Moving the center of gravity of a link with joints in ODE</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Issue #1981 notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252)). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.\r\n\r\nThe ODE function `dMassSetParameters` allows one to specify an offset for the CoG, so theoretically the changes [here](https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4) would solve the issue. However, ODE does not support setting the CoG offset to anything but zero ([see here](http://ode.org/ode-latest-userguide.html#sec_13_0_0)).\r\n\r\nThis pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when `ODELink::UpdateMass` is called. The collision meshes must also be updated, but this is already handled in `ODELink::UpdateCollisionOffsets`. This pull request includes the tests from pull request #2341, which now succeeds with the changes.\r\n\r\nNote: there are a few reasons it may be better to not support moving link CoGs after initialization:\r\n\r\n1. Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. [Here](https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3) is an example/test illustrating how the joint limits are broken. I made changes [here](https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff) which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).\r\n\r\n1. Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.\r\n\r\n1. Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&fileviewer=file-view-default#Visual.cc-3093)).\r\n\r\n1. If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2765/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d20d6d0c989a%0D5f41b719c1fe?from_pullrequest_id=2765"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2765.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2765/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2765"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d20d6d0c989a%0D5f41b719c1fe?from_pullrequest_id=2765"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2765/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2765/statuses_page=1.json"}}, "title": "Moving the center of gravity of a link with joints in ODE", "close_source_branch": false, "reviewers": [], "id": 2765, "destination": {"commit": {"hash": "5f41b719c1fe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f41b719c1fe.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f41b719c1fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-08-14T19:34:20.707724+00:00", "summary": {"raw": "Issue #1981 notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252)). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.\r\n\r\nThe ODE function `dMassSetParameters` allows one to specify an offset for the CoG, so theoretically the changes [here](https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4) would solve the issue. However, ODE does not support setting the CoG offset to anything but zero ([see here](http://ode.org/ode-latest-userguide.html#sec_13_0_0)).\r\n\r\nThis pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when `ODELink::UpdateMass` is called. The collision meshes must also be updated, but this is already handled in `ODELink::UpdateCollisionOffsets`. This pull request includes the tests from pull request #2341, which now succeeds with the changes.\r\n\r\nNote: there are a few reasons it may be better to not support moving link CoGs after initialization:\r\n\r\n1. Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. [Here](https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3) is an example/test illustrating how the joint limits are broken. I made changes [here](https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff) which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).\r\n\r\n1. Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.\r\n\r\n1. Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes ([see here](#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&fileviewer=file-view-default#Visual.cc-3093)).\r\n\r\n1. If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.", "markup": "markdown", "html": "<p>Issue <a href=\"#!/osrf/gazebo/issues/1981/moving-the-center-of-gravity-of-a-link\" rel=\"nofollow\" title=\"Moving the center of gravity of a link with joints results in false forces (ODE).\" class=\"ap-connect-link\">#1981</a> notes that if the center of gravity (CoG) of a link with joints is moved after the link, joints, etc. have been initialized, it causes the link to jerk suddenly. The problem occurs because Gazebo sets the origin of the ODE body as the link's CoG (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-252\" rel=\"nofollow\">see here</a>). Thus, when the CoG is moved the ODE body's origin moves as well. Before the ODE joints are attached this is not a problem. However, once the joints have been initialized, moving the CoG causes joint constraints to be violated, so the model jumps to correct them.</p>\n<p>The ODE function <code>dMassSetParameters</code> allows one to specify an offset for the CoG, so theoretically the changes <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/479d04db6f74c12f0ba745abc2dda83f88ac50e4\" rel=\"nofollow\">here</a> would solve the issue. However, ODE does not support setting the CoG offset to anything but zero (<a data-is-external-link=\"true\" href=\"http://ode.org/ode-latest-userguide.html#sec_13_0_0\" rel=\"nofollow\">see here</a>).</p>\n<p>This pull request allows link CoGs to be moved after initialization by re-attaching the ODE joints  when <code>ODELink::UpdateMass</code> is called. The collision meshes must also be updated, but this is already handled in <code>ODELink::UpdateCollisionOffsets</code>. This pull request includes the tests from <a href=\"#!/osrf/gazebo/pull-requests/2341/added-a-so-far-failing-test-for-moving-cog\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2341</a>, which now succeeds with the changes.</p>\n<p>Note: there are a few reasons it may be better to not support moving link CoGs after initialization:</p>\n<ol>\n<li>\n<p>Re-attaching the ODE joints resets the joint angles to zero for the model configuration at that time. This behavior shifts/breaks joint limits and makes the joint angles reported inconsistent. <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/commits/b04036e8294c783faa40e42a2a2ac6fc29595eb3\" rel=\"nofollow\">Here</a> is an example/test illustrating how the joint limits are broken. I made changes <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pchorak/gazebo/branch/ode_move_cog_abi?dest=ode_move_cog#diff\" rel=\"nofollow\">here</a> which maintain the joint limits and angles. However, the changes break ABI and so would need to be targeted at gazebo9 (default).</p>\n</li>\n<li>\n<p>Re-attaching joints when a link's CoG moves could be considered unexpected behavior and an invitation for bugs.</p>\n</li>\n<li>\n<p>Once the CoG visuals are created, their relative position is not updated even if the CoG offset changes (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d20d6d0c989ad10c8912a71c290329892f173f6c/gazebo/rendering/Visual.cc?at=ode_move_cog_abi&amp;fileviewer=file-view-default#Visual.cc-3093\" rel=\"nofollow\">see here</a>).</p>\n</li>\n<li>\n<p>If the link origin is moved it causes the model to jerk suddenly. Moving the link is similar to moving the CoG, especially since ODE's internal representation requires the body (link) origin and CoG to be coincident. So, there is a precedent for the flying behavior when a link's CoG is moved.</p>\n</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "d20d6d0c989a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d20d6d0c989a.json"}, "html": {"href": "#!/osrf/gazebo/commits/d20d6d0c989a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ode_move_cog_abi"}}, "comment_count": 3, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-08-14T20:48:33.677237+00:00", "type": "participant", "approved": false, "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}}, {"role": "PARTICIPANT", "participated_on": "2017-08-14T20:41:01.999825+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "See comments.", "updated_on": "2017-08-14T22:10:33.739432+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": null, "closed_by": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}}