{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2900/comments/63274472.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2900/_/diff#comment-63274472"}}, "parent": {"id": 63212302, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2900/comments/63212302.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2900/_/diff#comment-63212302"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2900, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2900.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2900"}}, "title": "Add method to get the link visual elements"}, "content": {"raw": "The issue that I ran into when I tried publishing visual messages from a plugin is that it doesn't have access to a link visual messages. Therefore, and if you're OK with it, I could modify this PR to add a new Link method:\n\n      /// \\brief Return the link visual elements.\n      /// \\return a map of unique ID to visual message\n      public: const Visuals_M &Visuals() const;\n\nThen, in a plugin, we could hide a model like so:\n\n      for (const auto &link : model->GetLinks())\n      {\n        msgs::Visual msg;\n        msg.set_parent_name(link->GetScopedName());\n        msg.set_parent_id(link->GetId());\n        msg.set_visible(false);\n        for (const auto &iter : link->Visuals())\n        {\n          msg.set_name(iter.second.name());\n          this->visPub->Publish(msg);\n        }\n      }", "markup": "markdown", "html": "<p>The issue that I ran into when I tried publishing visual messages from a plugin is that it doesn't have access to a link visual messages. Therefore, and if you're OK with it, I could modify this PR to add a new Link method:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Return</span> <span class=\"nt\">the</span> <span class=\"nt\">link</span> <span class=\"nt\">visual</span> <span class=\"nt\">elements</span><span class=\"o\">.</span>\n  <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">a</span> <span class=\"nt\">map</span> <span class=\"nt\">of</span> <span class=\"nt\">unique</span> <span class=\"nt\">ID</span> <span class=\"nt\">to</span> <span class=\"nt\">visual</span> <span class=\"nt\">message</span>\n  <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">const</span> <span class=\"nt\">Visuals_M</span> <span class=\"o\">&amp;</span><span class=\"nt\">Visuals</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>Then, in a plugin, we could hide a model like so:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nt\">for</span> <span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">auto</span> <span class=\"o\">&amp;</span><span class=\"nt\">link</span> <span class=\"o\">:</span> <span class=\"nt\">model-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetLinks</span><span class=\"o\">())</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">msgs</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">Visual</span> <span class=\"n\">msg</span><span class=\"p\">;</span>\n    <span class=\"err\">msg.set_parent_name(link-&gt;GetScopedName())</span><span class=\"p\">;</span>\n    <span class=\"err\">msg.set_parent_id(link-&gt;GetId())</span><span class=\"p\">;</span>\n    <span class=\"err\">msg.set_visible(false)</span><span class=\"p\">;</span>\n    <span class=\"err\">for</span> <span class=\"err\">(const</span> <span class=\"err\">auto</span> <span class=\"err\">&amp;</span><span class=\"n\">iter</span> <span class=\"p\">:</span> <span class=\"n\">link-</span><span class=\"o\">&gt;</span><span class=\"nf\">Visuals</span><span class=\"p\">())</span>\n    <span class=\"err\">{</span>\n      <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"nf\">set_name</span><span class=\"p\">(</span><span class=\"n\">iter</span><span class=\"err\">.</span><span class=\"n\">second</span><span class=\"err\">.</span><span class=\"nf\">name</span><span class=\"p\">());</span>\n      <span class=\"err\">this-&gt;visPub-&gt;Publish(msg)</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-05-03T13:22:07.807549+00:00", "user": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "updated_on": "2018-05-03T13:22:07.938366+00:00", "type": "pullrequest_comment", "id": 63274472}