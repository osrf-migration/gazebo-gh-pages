{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/277/comments/110360.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/277/_/diff#comment-110360"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 277, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/277.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/277"}}, "title": "Threaded sensors"}, "content": {"raw": "When I run the test SensorManager_TEST from the command-line, everything passes, but it gives the following errors:\n~~~\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::base_footprint::base_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::base_footprint::base_laser] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::torso_lift_link::torso_lift_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::head_mount_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::head_mount_prosilica_link_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::head_mount_prosilica_link_sim_pcd_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::narrow_stereo_gazebo_l_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::narrow_stereo_gazebo_r_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::wide_stereo_gazebo_l_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::wide_stereo_gazebo_r_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::high_def_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::l_forearm_roll_link::l_forearm_cam_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::l_gripper_l_finger_tip_link::l_gripper_l_finger_tip_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::l_gripper_r_finger_tip_link::l_gripper_r_finger_tip_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::laser_tilt_mount_link::laser_tilt] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::r_forearm_roll_link::r_forearm_cam_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::r_gripper_l_finger_tip_link::r_gripper_l_finger_tip_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::r_gripper_r_finger_tip_link::r_gripper_r_finger_tip_contact_sensor] because it does not exist.\n~~~\nI traced these errors back to Link::Fini line 248, where it attempts to call sensors::remove_sensor with the sensor name. Should links get notified if one of their sensors gets deleted?", "markup": "markdown", "html": "<p>When I run the test SensorManager_TEST from the command-line, everything passes, but it gives the following errors:</p>\n<div class=\"codehilite\"><pre><span></span>Error [SensorManager.cc:285] Unable to remove sensor[default::pr2::base_footprint::base_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::base_footprint::base_laser] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::torso_lift_link::torso_lift_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::head_mount_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::head_mount_prosilica_link_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::head_mount_prosilica_link_sim_pcd_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::narrow_stereo_gazebo_l_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::narrow_stereo_gazebo_r_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::wide_stereo_gazebo_l_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::wide_stereo_gazebo_r_stereo_camera_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::head_tilt_link::high_def_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::l_forearm_roll_link::l_forearm_cam_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::l_gripper_l_finger_tip_link::l_gripper_l_finger_tip_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::l_gripper_r_finger_tip_link::l_gripper_r_finger_tip_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::laser_tilt_mount_link::laser_tilt] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::r_forearm_roll_link::r_forearm_cam_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::r_gripper_l_finger_tip_link::r_gripper_l_finger_tip_contact_sensor] because it does not exist.\nError [SensorManager.cc:285] Unable to remove sensor[default::pr2::r_gripper_r_finger_tip_link::r_gripper_r_finger_tip_contact_sensor] because it does not exist.\n</pre></div>\n\n\n<p>I traced these errors back to Link::Fini line 248, where it attempts to call sensors::remove_sensor with the sensor name. Should links get notified if one of their sensors gets deleted?</p>", "type": "rendered"}, "created_on": "2013-02-08T01:01:02.734168+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-02-08T01:01:02.743663+00:00", "type": "pullrequest_comment", "id": 110360}