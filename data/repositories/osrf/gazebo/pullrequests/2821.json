{"rendered": {"description": {"raw": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "markup": "markdown", "html": "<p>The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in <a href=\"#!/osrf/gazebo/pull-requests/2798/diagnostics-enable-test-and-dont-create-so\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2798</a>, the output before and after this change is shown below:</p>\n<div class=\"codehilite\"><pre><span></span>example_world_stats 1512756096 973857946 3.21399\nexample_world_stats 1512756101 406463508 0.186995\nexample_world_stats 1512756101 606837814 0.387225\nexample_world_stats 1512756101 806248438 0.586562\nexample_world_stats 1512756102 7123061 0.78736\nexample_world_stats 1512756102 207537094 0.987699\nexample_world_stats 1512756102 408224670 1.18831\nexample_world_stats 1512756102 609667446 1.38965\nexample_world_stats 1512756102 809784876 1.58968\nexample_world_stats 1512756103 9455910 1.78928\nexample_world_stats 1512756103 210297429 1.99005\nexample_world_stats 1512756103 411116818 2.19078\nexample_world_stats 1512756103 611458526 2.39103\nexample_world_stats 1512756103 812158760 2.59164\nexample_world_stats 1512756104 12679870 2.79206\nexample_world_stats 1512756104 213363247 2.99258\nexample_world_stats 1512756104 411278253 3.19042\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>example_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\n</pre></div>\n\n\n<p>When running gazebo with diagnostics, the World::Step function generates a file like the following:</p>\n<div class=\"codehilite\"><pre><span></span>World::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \n</pre></div>\n\n\n<p>This also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.</p>", "type": "rendered"}, "title": {"raw": "Diagnostics: record timing statistics instead of all timestamps", "markup": "markdown", "html": "<p>Diagnostics: record timing statistics instead of all timestamps</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2821/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:36b64e6ec633%0D787750b27b75?from_pullrequest_id=2821"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2821/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:36b64e6ec633%0D787750b27b75?from_pullrequest_id=2821"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2821/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/statuses_page=1.json"}}, "title": "Diagnostics: record timing statistics instead of all timestamps", "close_source_branch": true, "reviewers": [{"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}], "id": 2821, "destination": {"commit": {"hash": "787750b27b75", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/787750b27b75.json"}, "html": {"href": "#!/osrf/gazebo/commits/787750b27b75"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-12-08T18:36:35.795567+00:00", "summary": {"raw": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "markup": "markdown", "html": "<p>The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in <a href=\"#!/osrf/gazebo/pull-requests/2798/diagnostics-enable-test-and-dont-create-so\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2798</a>, the output before and after this change is shown below:</p>\n<div class=\"codehilite\"><pre><span></span>example_world_stats 1512756096 973857946 3.21399\nexample_world_stats 1512756101 406463508 0.186995\nexample_world_stats 1512756101 606837814 0.387225\nexample_world_stats 1512756101 806248438 0.586562\nexample_world_stats 1512756102 7123061 0.78736\nexample_world_stats 1512756102 207537094 0.987699\nexample_world_stats 1512756102 408224670 1.18831\nexample_world_stats 1512756102 609667446 1.38965\nexample_world_stats 1512756102 809784876 1.58968\nexample_world_stats 1512756103 9455910 1.78928\nexample_world_stats 1512756103 210297429 1.99005\nexample_world_stats 1512756103 411116818 2.19078\nexample_world_stats 1512756103 611458526 2.39103\nexample_world_stats 1512756103 812158760 2.59164\nexample_world_stats 1512756104 12679870 2.79206\nexample_world_stats 1512756104 213363247 2.99258\nexample_world_stats 1512756104 411278253 3.19042\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>example_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\n</pre></div>\n\n\n<p>When running gazebo with diagnostics, the World::Step function generates a file like the following:</p>\n<div class=\"codehilite\"><pre><span></span>World::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \n</pre></div>\n\n\n<p>This also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3ed08eb5ea9d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ed08eb5ea9d.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ed08eb5ea9d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2018-03-12T23:43:45.216988+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2018-03-24T00:15:59.596536+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2018-03-24T00:54:57.333542+00:00", "type": "participant", "approved": true, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "", "updated_on": "2018-03-26T16:14:46.565031+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "36b64e6ec633", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36b64e6ec633.json"}, "html": {"href": "#!/osrf/gazebo/commits/36b64e6ec633"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}