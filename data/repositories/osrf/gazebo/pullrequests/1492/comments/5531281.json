{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1492/comments/5531281.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1492/_/diff#comment-5531281"}}, "parent": {"id": 5530988, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1492/comments/5530988.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1492/_/diff#comment-5530988"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1492, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1492.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1492"}}, "title": "Speed up World::Step in loops"}, "content": {"raw": "`worldUpdateMutex` is private and doesn't have a public accessor. So the only things that can access it are inside the `World` class:\n\n* [World::Step()](#!/osrf/gazebo/src/571432555923ed898da6726c9a419c82b2c2deeb/gazebo/physics/World.cc#cl-553) locks the mutex to protect against calls to `World::Update`, where the actual physics updates are called. The duration of this mutex lock depends on the physics engine and the complexity of the world.\n* [World::Step(unsigned int)](#!/osrf/gazebo/src/571432555923ed898da6726c9a419c82b2c2deeb/gazebo/physics/World.cc#cl-594) (the function I'm modifying in this pull request) locks the mutex once in order to set `this->stepInc` and then in the polling loop it locks it in order to set a flag if an `if` statement is satisfied. The actual duration of the lock is very short, though it can be called repeatedly.\n* `World::SetPaused`\n* `World::Reset`\n* `World::OnControl`\n\nI'll add more detail if necessary...", "markup": "markdown", "html": "<p><code>worldUpdateMutex</code> is private and doesn't have a public accessor. So the only things that can access it are inside the <code>World</code> class:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/571432555923ed898da6726c9a419c82b2c2deeb/gazebo/physics/World.cc#cl-553\" rel=\"nofollow\">World::Step()</a> locks the mutex to protect against calls to <code>World::Update</code>, where the actual physics updates are called. The duration of this mutex lock depends on the physics engine and the complexity of the world.</li>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/571432555923ed898da6726c9a419c82b2c2deeb/gazebo/physics/World.cc#cl-594\" rel=\"nofollow\">World::Step(unsigned int)</a> (the function I'm modifying in this pull request) locks the mutex once in order to set <code>this-&gt;stepInc</code> and then in the polling loop it locks it in order to set a flag if an <code>if</code> statement is satisfied. The actual duration of the lock is very short, though it can be called repeatedly.</li>\n<li><code>World::SetPaused</code></li>\n<li><code>World::Reset</code></li>\n<li><code>World::OnControl</code></li>\n</ul>\n<p>I'll add more detail if necessary...</p>", "type": "rendered"}, "created_on": "2015-03-06T23:28:58.090704+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-03-06T23:28:58.098588+00:00", "type": "pullrequest_comment", "id": 5531281}