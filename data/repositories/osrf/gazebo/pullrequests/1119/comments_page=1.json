{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200002.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200002"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "This is related to #866, see [jenkins build](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/39/). Pay attention to INTEGRATION_pioneer2dx test.\n\nEDIT: jenkins build aborted until we fix the test", "markup": "markdown", "html": "<p>This is related to <a href=\"#!/osrf/gazebo/issues/866/simbody-has-trouble-with-pioneer2dx-model\" rel=\"nofollow\" title=\"Simbody has trouble with pioneer2dx model and test\" class=\"ap-connect-link\">#866</a>, see <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/39/\" rel=\"nofollow\">jenkins build</a>. Pay attention to INTEGRATION_pioneer2dx test.</p>\n<p>EDIT: jenkins build aborted until we fix the test</p>", "type": "rendered"}, "created_on": "2014-06-21T00:30:30.424542+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-06-21T00:39:28.068665+00:00", "type": "pullrequest_comment", "id": 2200002}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200013.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200013"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "The code changes look good to me, John.\n\nUnrelated to this change, I noticed nearby that we only specify a Rotation (R_XN) for \nhalf space contact (PLANE_SHAPE), meaning that the height is always zero.\nFor the other shapes, we use a Transform (X_LC) which includes an origin point \nin addition to the Rotation. Is this correct as it is, or should we be adding a height\noffset also for the plane? (I'll put some code comments at the lines I'm referring to)", "markup": "markdown", "html": "<p>The code changes look good to me, John.</p>\n<p>Unrelated to this change, I noticed nearby that we only specify a Rotation (R_XN) for \nhalf space contact (PLANE_SHAPE), meaning that the height is always zero.\nFor the other shapes, we use a Transform (X_LC) which includes an origin point \nin addition to the Rotation. Is this correct as it is, or should we be adding a height\noffset also for the plane? (I'll put some code comments at the lines I'm referring to)</p>", "type": "rendered"}, "created_on": "2014-06-21T00:35:37.113746+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2014-06-21T00:35:37.125945+00:00", "type": "pullrequest_comment", "id": 2200013}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200025.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200025"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "actually the pioneer2dx test fails with following message:\n~~~\nterminate called after throwing an instance of 'SimTK::Exception::UnimplementedVirtualMethod'\n  what():  SimTK Exception thrown at ContactGeometryImpl.h:105:\n  The base class ContactGeometryImpl dummy implementation of method calcSupportPoint()() was invoked because a derived class did not provide an implementation.\nAborted (core dumped)\n~~~\n\nTo run it, try\n~~~\n./build_release/test/integration/INTEGRATION_pioneer2dx --gtest_filter=\"*/2\"\n~~~", "markup": "markdown", "html": "<p>actually the pioneer2dx test fails with following message:</p>\n<div class=\"codehilite\"><pre><span></span>terminate called after throwing an instance of &#39;SimTK::Exception::UnimplementedVirtualMethod&#39;\n  what():  SimTK Exception thrown at ContactGeometryImpl.h:105:\n  The base class ContactGeometryImpl dummy implementation of method calcSupportPoint()() was invoked because a derived class did not provide an implementation.\nAborted (core dumped)\n</pre></div>\n\n\n<p>To run it, try</p>\n<div class=\"codehilite\"><pre><span></span>./build_release/test/integration/INTEGRATION_pioneer2dx --gtest_filter=&quot;*/2&quot;\n</pre></div>", "type": "rendered"}, "created_on": "2014-06-21T00:38:18.557742+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-06-21T00:38:44.450116+00:00", "type": "pullrequest_comment", "id": 2200025}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200063.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200063"}}, "parent": {"id": 2200025, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200025.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200025"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "Oh shit -- looks like there is a missing calcSupportPoint() method for some shape.\nI'll add a Simbody issue.\n\nMeanwhile can you fall back to the bounding sphere approach? I know all the shapes have\nbounding spheres because Simbody's broad phase contact uses them.\n", "markup": "markdown", "html": "<p>Oh shit -- looks like there is a missing calcSupportPoint() method for some shape.\nI'll add a Simbody issue.</p>\n<p>Meanwhile can you fall back to the bounding sphere approach? I know all the shapes have\nbounding spheres because Simbody's broad phase contact uses them.</p>", "type": "rendered"}, "created_on": "2014-06-21T00:48:05.839220+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2014-06-21T00:48:05.850555+00:00", "type": "pullrequest_comment", "id": 2200063}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200080.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200080"}}, "parent": {"id": 2200063, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200063.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200063"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "We can fall back on the bounding sphere approach for now. Do you think it will be able to go into simbody-3.4?", "markup": "markdown", "html": "<p>We can fall back on the bounding sphere approach for now. Do you think it will be able to go into simbody-3.4?</p>", "type": "rendered"}, "created_on": "2014-06-21T00:54:56.264156+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-06-21T00:54:56.272845+00:00", "type": "pullrequest_comment", "id": 2200080}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200083.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200083"}}, "parent": {"id": 2200080, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200080.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200080"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "I was just looking through trying to figure out what's missing.\nIs it possible that it is being called on the HalfSpace? Since that\nis an infinite shape it doesn't have support points but it also doesn't\nhave a bounding sphere.\n", "markup": "markdown", "html": "<p>I was just looking through trying to figure out what's missing.\nIs it possible that it is being called on the HalfSpace? Since that\nis an infinite shape it doesn't have support points but it also doesn't\nhave a bounding sphere.</p>", "type": "rendered"}, "created_on": "2014-06-21T00:57:55.687341+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2014-06-21T00:57:55.695932+00:00", "type": "pullrequest_comment", "id": 2200083}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200090.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200090"}}, "parent": {"id": 2200080, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200080.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200080"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "Actually I see that HalfSpace does return a bounding sphere, with\ncenter (0,0,0) and radius=Infinity. That's correct I guess but probably\nnot too useful!", "markup": "markdown", "html": "<p>Actually I see that HalfSpace does return a bounding sphere, with\ncenter (0,0,0) and radius=Infinity. That's correct I guess but probably\nnot too useful!</p>", "type": "rendered"}, "created_on": "2014-06-21T01:01:08.631613+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2014-06-21T01:01:08.638862+00:00", "type": "pullrequest_comment", "id": 2200090}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200094.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200094"}}, "parent": {"id": 2200090, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200090.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200090"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "haha, it's probably fine though", "markup": "markdown", "html": "<p>haha, it's probably fine though</p>", "type": "rendered"}, "created_on": "2014-06-21T01:04:17.010184+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-06-21T01:04:17.019067+00:00", "type": "pullrequest_comment", "id": 2200094}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200108.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200108"}}, "parent": {"id": 2200080, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200080.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200080"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "using bounding sphere of a cylinder to calculate radius of a cylinder might be slightly complicated if the cylinder has finite height.  For this case, we get\n~~~\n$ ../build_release/test/integration/INTEGRATION_pioneer2dx --gtest_filter=\"*/2\"\nNote: Google Test filter = */2\n[==========] Running 1 test from 1 test case.\n[----------] Global test environment set-up.\n[----------] 1 test from PhysicsEngines/Pioneer2dx\n[ RUN      ] PhysicsEngines/Pioneer2dx.StraightLine/2\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 192.168.1.162\n[Err] [SimbodyJoint.cc:386] SimbodyJoint::SetAnchor:  Not implement in Simbody. Anchor is set during joint construction in SimbodyPhysics.cc\n[Dbg] [SimbodyHingeJoint.cc:55] SetAxis: setting axis is not yet implemented.  The axis are set  during joint construction in SimbodyPhysics.cc for now.\n[Err] [SimbodyJoint.cc:386] SimbodyJoint::SetAnchor:  Not implement in Simbody. Anchor is set during joint construction in SimbodyPhysics.cc\n[Dbg] [SimbodyHingeJoint.cc:55] SetAxis: setting axis is not yet implemented.  The axis are set  during joint construction in SimbodyPhysics.cc for now.\n[Dbg] [ServerFixture.cc:144] ServerFixture load in 1.2 seconds, timeout after 600 seconds\n[Err] [pioneer2dx.cc:66] Min[-0.112805 -0.112805 -0.112805] Max[0.112805 0.112805 0.112805]\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/test/integration/pioneer2dx.cc:69: Failure\nThe difference between 0.11 and wheelRadius is 0.0028051417268048773, which exceeds 1e-3, where\n0.11 evaluates to 0.11,\nwheelRadius evaluates to 0.11280514172680488, and\n1e-3 evaluates to 0.001.\nDist[4.0202]\nEndPose.x[3.58825]\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/test/integration/pioneer2dx.cc:102: Failure\nExpected: (fabs(endPose.pos.x - dist)) < (0.1), actual: 0.431949 vs 0.1\n[Dbg] [ServerFixture.cc:95] ServerFixture::Unload\n*** glibc detected *** ../build_release/test/integration/INTEGRATION_pioneer2dx: free(): invalid pointer: 0x00007f0d4d315238 ***\n======= Backtrace: =========\n/lib/x86_64-linux-gnu/libc.so.6(+0x7eb96)[0x7f0d74c52b96]\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/build_release/gazebo/physics/simbody/libgazebo_physics_simbody.so.3(_ZN6gazebo7physics16SimbodyCollisionD1Ev+0x3b)[0x7f0d719a361b]\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/build_release/gazebo/physics/simbody/libgazebo_physics_simbody.so.3(_ZN6gazebo7physics16SimbodyCollisionD0Ev+0x9)[0x7f0d719a3659]\n...\n~~~", "markup": "markdown", "html": "<p>using bounding sphere of a cylinder to calculate radius of a cylinder might be slightly complicated if the cylinder has finite height.  For this case, we get</p>\n<div class=\"codehilite\"><pre><span></span>$ ../build_release/test/integration/INTEGRATION_pioneer2dx --gtest_filter<span class=\"o\">=</span><span class=\"s2\">&quot;*/2&quot;</span>\nNote: Google Test <span class=\"nv\">filter</span> <span class=\"o\">=</span> */2\n<span class=\"o\">[==========]</span> Running <span class=\"m\">1</span> <span class=\"nb\">test</span> from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">1</span> <span class=\"nb\">test</span> from PhysicsEngines/Pioneer2dx\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> PhysicsEngines/Pioneer2dx.StraightLine/2\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">192</span>.168.1.162\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>SimbodyJoint.cc:386<span class=\"o\">]</span> SimbodyJoint::SetAnchor:  Not implement in Simbody. Anchor is <span class=\"nb\">set</span> during joint construction in SimbodyPhysics.cc\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>SimbodyHingeJoint.cc:55<span class=\"o\">]</span> SetAxis: setting axis is not yet implemented.  The axis are <span class=\"nb\">set</span>  during joint construction in SimbodyPhysics.cc <span class=\"k\">for</span> now.\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>SimbodyJoint.cc:386<span class=\"o\">]</span> SimbodyJoint::SetAnchor:  Not implement in Simbody. Anchor is <span class=\"nb\">set</span> during joint construction in SimbodyPhysics.cc\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>SimbodyHingeJoint.cc:55<span class=\"o\">]</span> SetAxis: setting axis is not yet implemented.  The axis are <span class=\"nb\">set</span>  during joint construction in SimbodyPhysics.cc <span class=\"k\">for</span> now.\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:144<span class=\"o\">]</span> ServerFixture load in <span class=\"m\">1</span>.2 seconds, timeout after <span class=\"m\">600</span> seconds\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>pioneer2dx.cc:66<span class=\"o\">]</span> Min<span class=\"o\">[</span>-0.112805 -0.112805 -0.112805<span class=\"o\">]</span> Max<span class=\"o\">[</span><span class=\"m\">0</span>.112805 <span class=\"m\">0</span>.112805 <span class=\"m\">0</span>.112805<span class=\"o\">]</span>\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/test/integration/pioneer2dx.cc:69: Failure\nThe difference between <span class=\"m\">0</span>.11 and wheelRadius is <span class=\"m\">0</span>.0028051417268048773, which exceeds 1e-3, where\n<span class=\"m\">0</span>.11 evaluates to <span class=\"m\">0</span>.11,\nwheelRadius evaluates to <span class=\"m\">0</span>.11280514172680488, and\n1e-3 evaluates to <span class=\"m\">0</span>.001.\nDist<span class=\"o\">[</span><span class=\"m\">4</span>.0202<span class=\"o\">]</span>\nEndPose.x<span class=\"o\">[</span><span class=\"m\">3</span>.58825<span class=\"o\">]</span>\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/test/integration/pioneer2dx.cc:102: Failure\nExpected: <span class=\"o\">(</span>fabs<span class=\"o\">(</span>endPose.pos.x - dist<span class=\"o\">))</span> &lt; <span class=\"o\">(</span><span class=\"m\">0</span>.1<span class=\"o\">)</span>, actual: <span class=\"m\">0</span>.431949 vs <span class=\"m\">0</span>.1\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>ServerFixture.cc:95<span class=\"o\">]</span> ServerFixture::Unload\n*** glibc detected *** ../build_release/test/integration/INTEGRATION_pioneer2dx: free<span class=\"o\">()</span>: invalid pointer: 0x00007f0d4d315238 ***\n<span class=\"o\">=======</span> Backtrace: <span class=\"o\">=========</span>\n/lib/x86_64-linux-gnu/libc.so.6<span class=\"o\">(</span>+0x7eb96<span class=\"o\">)[</span>0x7f0d74c52b96<span class=\"o\">]</span>\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/build_release/gazebo/physics/simbody/libgazebo_physics_simbody.so.3<span class=\"o\">(</span>_ZN6gazebo7physics16SimbodyCollisionD1Ev+0x3b<span class=\"o\">)[</span>0x7f0d719a361b<span class=\"o\">]</span>\n/home/hsu/projects/gazebo_3.1_issue_866_pioneer_2dx/build_release/gazebo/physics/simbody/libgazebo_physics_simbody.so.3<span class=\"o\">(</span>_ZN6gazebo7physics16SimbodyCollisionD0Ev+0x9<span class=\"o\">)[</span>0x7f0d719a3659<span class=\"o\">]</span>\n...\n</pre></div>", "type": "rendered"}, "created_on": "2014-06-21T01:15:01.135561+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-06-21T01:16:32.591632+00:00", "type": "pullrequest_comment", "id": 2200108}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200112.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200112"}}, "parent": {"id": 2200108, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200108.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200108"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "Not yet sure why the code segfaults on exit.", "markup": "markdown", "html": "<p>Not yet sure why the code segfaults on exit.</p>", "type": "rendered"}, "created_on": "2014-06-21T01:19:17.357981+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-06-21T01:19:17.365328+00:00", "type": "pullrequest_comment", "id": 2200112}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200127.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200127"}}, "parent": {"id": 2200112, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200112.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200112"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "why are we using bounding box to compute radius of a cylinder?\nCan't we call `CylinderShape::GetRadius()` instead?", "markup": "markdown", "html": "<p>why are we using bounding box to compute radius of a cylinder?\nCan't we call <code>CylinderShape::GetRadius()</code> instead?</p>", "type": "rendered"}, "created_on": "2014-06-21T01:29:47.076901+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-06-21T01:29:47.086530+00:00", "type": "pullrequest_comment", "id": 2200127}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200356.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200356"}}, "parent": {"id": 2200127, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200127.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200127"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "That's a good point. If we want to get the cylinder radius we'll have to do a little shape casting, like I did in [DRCVehiclePlugin](https://bitbucket.org/osrf/drcsim/src/dfb3482b2caa0c65b4519535e55639a0e3e62ef7/drcsim_gazebo_plugins/src/DRCVehiclePlugin.cc?at=default#cl-960)", "markup": "markdown", "html": "<p>That's a good point. If we want to get the cylinder radius we'll have to do a little shape casting, like I did in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/drcsim/src/dfb3482b2caa0c65b4519535e55639a0e3e62ef7/drcsim_gazebo_plugins/src/DRCVehiclePlugin.cc?at=default#cl-960\" rel=\"nofollow\">DRCVehiclePlugin</a></p>", "type": "rendered"}, "created_on": "2014-06-21T06:07:45.368811+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-06-21T06:07:45.378840+00:00", "type": "pullrequest_comment", "id": 2200356}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200129.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200129"}}, "parent": {"id": 2200080, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200080.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200080"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "Oh, I see another problem with calcSupportPoint() -- it operates in the local\nframe of the ContactGeometry shape. To use it for global directions, those\ndirections have to be transformed into the local frame first. So the current\nimplementation won't work correctly, even if all the methods are there. It\nwouldn't be hard to make that transformation assuming we have access to\nthe body pose there and can get the ContactSurface's transform. But ... \nmight be more practical to use the bounding sphere which is orientation-\nindependent (not to mention fully implemented!).\n\nI also see now from the definition in the ContactGeometry base class that\ncalcSupportPoint() is only defined for convex shapes. That's why it didn't\nget implemented for TriangleMesh, which isn't necessarily convex. But\nI still think we should provide it for all shapes, since the bounding sphere\ncan always be used if nothing better is around.\n", "markup": "markdown", "html": "<p>Oh, I see another problem with calcSupportPoint() -- it operates in the local\nframe of the ContactGeometry shape. To use it for global directions, those\ndirections have to be transformed into the local frame first. So the current\nimplementation won't work correctly, even if all the methods are there. It\nwouldn't be hard to make that transformation assuming we have access to\nthe body pose there and can get the ContactSurface's transform. But ... \nmight be more practical to use the bounding sphere which is orientation-\nindependent (not to mention fully implemented!).</p>\n<p>I also see now from the definition in the ContactGeometry base class that\ncalcSupportPoint() is only defined for convex shapes. That's why it didn't\nget implemented for TriangleMesh, which isn't necessarily convex. But\nI still think we should provide it for all shapes, since the bounding sphere\ncan always be used if nothing better is around.</p>", "type": "rendered"}, "created_on": "2014-06-21T01:31:15.984814+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2014-06-21T01:31:15.991496+00:00", "type": "pullrequest_comment", "id": 2200129}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200097.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200097"}}, "parent": {"id": 2200063, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200063.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200063"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "We're calling it on a cylinder.", "markup": "markdown", "html": "<p>We're calling it on a cylinder.</p>", "type": "rendered"}, "created_on": "2014-06-21T01:05:27.347435+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-06-21T01:05:27.356880+00:00", "type": "pullrequest_comment", "id": 2200097}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200116.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200116"}}, "parent": {"id": 2200097, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200097.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200097"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "If I remember right, we are using a TriangleMesh ContactGeometry \nto implement both Box and Cylinder because Simbody doesn't \ncurrently have those as built-ins (because they aren't smooth).\nSo I think it is probably the missing method from TriangleMesh that\nis breaking things. I can add calcSupportPoint() for TriMesh asap but\nit won't return a very tight point just yet.", "markup": "markdown", "html": "<p>If I remember right, we are using a TriangleMesh ContactGeometry \nto implement both Box and Cylinder because Simbody doesn't \ncurrently have those as built-ins (because they aren't smooth).\nSo I think it is probably the missing method from TriangleMesh that\nis breaking things. I can add calcSupportPoint() for TriMesh asap but\nit won't return a very tight point just yet.</p>", "type": "rendered"}, "created_on": "2014-06-21T01:21:41.973176+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2014-06-21T01:21:41.987735+00:00", "type": "pullrequest_comment", "id": 2200116}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200028.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200028"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "One other note: if the AABB is calculated frequently, then six calls to the support vector method\nis probably not optimal for most shapes. In case that every matters, we could either use the bounding\nsphere (by putting a box around it at +/- radius), or enhance the SimTK::ContactGeometry class to \nreturn an AABB. ", "markup": "markdown", "html": "<p>One other note: if the AABB is calculated frequently, then six calls to the support vector method\nis probably not optimal for most shapes. In case that every matters, we could either use the bounding\nsphere (by putting a box around it at +/- radius), or enhance the SimTK::ContactGeometry class to \nreturn an AABB. </p>", "type": "rendered"}, "created_on": "2014-06-21T00:38:55.664793+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2014-06-21T00:38:55.675197+00:00", "type": "pullrequest_comment", "id": 2200028}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200035.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200035"}}, "parent": {"id": 2200028, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200028.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200028"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "It's currently not called frequently by gazebo. We have a plugin that calls it once at initialization.", "markup": "markdown", "html": "<p>It's currently not called frequently by gazebo. We have a plugin that calls it once at initialization.</p>", "type": "rendered"}, "created_on": "2014-06-21T00:40:14.967722+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-06-21T00:40:14.977622+00:00", "type": "pullrequest_comment", "id": 2200035}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200030.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:da7d7a2f34a7..b991f26d5786?path=gazebo%2Fphysics%2Fsimbody%2FSimbodyPhysics.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200030"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "This Transform X_LC is being used by all the shapes except PLANE_SHAPE.", "markup": "markdown", "html": "<p>This Transform X_LC is being used by all the shapes except PLANE_SHAPE.</p>", "type": "rendered"}, "created_on": "2014-06-21T00:39:33.661428+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": null, "from": 1169, "path": "gazebo/physics/simbody/SimbodyPhysics.cc"}, "updated_on": "2014-06-21T00:39:33.671609+00:00", "type": "pullrequest_comment", "id": 2200030}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200047.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:da7d7a2f34a7..b991f26d5786?path=gazebo%2Fphysics%2Fsimbody%2FSimbodyPhysics.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200047"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "I'm confused as to why we're adding a half space contact surface to ground here, and then\nadding another one just below to _mobod.", "markup": "markdown", "html": "<p>I'm confused as to why we're adding a half space contact surface to ground here, and then\nadding another one just below to _mobod.</p>", "type": "rendered"}, "created_on": "2014-06-21T00:43:04.819121+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": null, "from": 1181, "path": "gazebo/physics/simbody/SimbodyPhysics.cc"}, "updated_on": "2014-06-21T00:43:04.831226+00:00", "type": "pullrequest_comment", "id": 2200047}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200065.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=gazebo%2Fphysics%2Fsimbody%2FSimbodyPhysics.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200065"}}, "parent": {"id": 2200047, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200047.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200047"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "left over from debug?  Looks safe to remove.", "markup": "markdown", "html": "<p>left over from debug?  Looks safe to remove.</p>", "type": "rendered"}, "created_on": "2014-06-21T00:48:45.851570+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "inline": {"to": null, "from": null, "path": "gazebo/physics/simbody/SimbodyPhysics.cc"}, "updated_on": "2014-06-21T00:48:45.862966+00:00", "type": "pullrequest_comment", "id": 2200065}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200054.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:da7d7a2f34a7..b991f26d5786?path=gazebo%2Fphysics%2Fsimbody%2FSimbodyPhysics.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200054"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "Here is where it attaches the half space surface to _mobod, rotating it with R_XN but not\ntranslating it away from (0,0,0). Is that right?", "markup": "markdown", "html": "<p>Here is where it attaches the half space surface to _mobod, rotating it with R_XN but not\ntranslating it away from (0,0,0). Is that right?</p>", "type": "rendered"}, "created_on": "2014-06-21T00:44:18.574750+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": 1197, "from": null, "path": "gazebo/physics/simbody/SimbodyPhysics.cc"}, "updated_on": "2014-06-21T00:44:18.586530+00:00", "type": "pullrequest_comment", "id": 2200054}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200079.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=gazebo%2Fphysics%2Fsimbody%2FSimbodyPhysics.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200079"}}, "parent": {"id": 2200054, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2200054.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2200054"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "you're right, we should do transform by `X_LC` first, then rotation by `R_XN` here", "markup": "markdown", "html": "<p>you're right, we should do transform by <code>X_LC</code> first, then rotation by <code>R_XN</code> here</p>", "type": "rendered"}, "created_on": "2014-06-21T00:53:45.331840+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "inline": {"to": null, "from": null, "path": "gazebo/physics/simbody/SimbodyPhysics.cc"}, "updated_on": "2014-06-21T00:54:18.552676+00:00", "type": "pullrequest_comment", "id": 2200079}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119/comments/2224817.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119/_/diff#comment-2224817"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1119, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1119.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1119"}}, "title": "add code to set SimbodyCollision::collisionShape and SimbodyCollision::GetBoundingBox()"}, "content": {"raw": "Merging into upstream branch, and will formulate a *real* pull request with: 1) Simbody's bounding sphere for getting AABB and 2) type-casting to get wheel radius.", "markup": "markdown", "html": "<p>Merging into upstream branch, and will formulate a <em>real</em> pull request with: 1) Simbody's bounding sphere for getting AABB and 2) type-casting to get wheel radius.</p>", "type": "rendered"}, "created_on": "2014-06-24T21:38:35.227531+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-06-24T21:38:35.239622+00:00", "type": "pullrequest_comment", "id": 2224817}], "page": 1, "size": 23}