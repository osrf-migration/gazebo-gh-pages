{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/815/comments/774105.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/815/_/diff#comment-774105"}}, "parent": {"id": 774029, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/815/comments/774029.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/815/_/diff#comment-774029"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 815, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/815.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/815"}}, "title": "Partial fix for #681: occasional blank gzclient"}, "content": {"raw": "I was able to reproduce it with a very high CPU load on the default branch. To generate the CPU load, I had the INTEGRATION_transceiver test in a loop in one terminal:\n~~~\nwhile test/integration/INTEGRATION_transceiver; do date >> test_timing.txt ; done\n~~~\n\nIn a separate terminal, I set the GAZEBO_MASTER_URI to use a different port and open `gazebo` (default branch) with a complex world, like `test/worlds/laser_vertical.world`. It was very consistently blank. Applying this patch seemed to fix it, though @nkoenig commented that it wasn't a complete fix. He's currently thinking about how to write a proper test for this failure case.\n\nAlso, although I targeted the fix to 1.9, I was not able to consistently reproduce the failure on 1.9. It should help though to have it here.", "markup": "markdown", "html": "<p>I was able to reproduce it with a very high CPU load on the default branch. To generate the CPU load, I had the INTEGRATION_transceiver test in a loop in one terminal:</p>\n<div class=\"codehilite\"><pre><span></span>while test/integration/INTEGRATION_transceiver; do date &gt;&gt; test_timing.txt ; done\n</pre></div>\n\n\n<p>In a separate terminal, I set the GAZEBO_MASTER_URI to use a different port and open <code>gazebo</code> (default branch) with a complex world, like <code>test/worlds/laser_vertical.world</code>. It was very consistently blank. Applying this patch seemed to fix it, though @nkoenig commented that it wasn't a complete fix. He's currently thinking about how to write a proper test for this failure case.</p>\n<p>Also, although I targeted the fix to 1.9, I was not able to consistently reproduce the failure on 1.9. It should help though to have it here.</p>", "type": "rendered"}, "created_on": "2013-11-05T18:40:05.346089+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-11-05T18:40:05.364843+00:00", "type": "pullrequest_comment", "id": 774105}