{"rendered": {"description": {"raw": "This pull request implements the introspection manager as described [in this design](#!/osrf/gazebo_design/pull-requests/29).\r\n\r\nAPI description:\r\n\r\n* `Register()` / `Unregister` / `Items()` functions : Methods to be used by the components that want to register items in the introspection manager (data providers). As the manager is a singleton, the data provider needs to be located in the same process as the manager is running.\r\n\r\n* Services available via Ignition Transport used by the components that want to create filters for receiving updates on some of the registered items (data consumers).\r\n\r\n```\r\n#!c++\r\n\r\n/introspection/<manager_id>/filter_new\r\n/introspection/<manager_id>/filter_update\r\n/introspection/<manager_id>/filter_remove\r\n/introspection/<manager_id>list\r\n```\r\n\r\nI recommend to look into `IntrospectionManager.hh` for details about the expected format message when using the transport services.\r\n\r\nThere's a second part in pull request #2123 that implements an `IntrospectionClient` class. This class is designed to help data consumers, as it offers a function-based API and hides most of the transport and internal details.\r\n", "markup": "markdown", "html": "<p>This pull request implements the introspection manager as described <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/pull-requests/29\" rel=\"nofollow\">in this design</a>.</p>\n<p>API description:</p>\n<ul>\n<li>\n<p><code>Register()</code> / <code>Unregister</code> / <code>Items()</code> functions : Methods to be used by the components that want to register items in the introspection manager (data providers). As the manager is a singleton, the data provider needs to be located in the same process as the manager is running.</p>\n</li>\n<li>\n<p>Services available via Ignition Transport used by the components that want to create filters for receiving updates on some of the registered items (data consumers).</p>\n</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;/</span><span class=\"n\">filter_new</span>\n<span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;/</span><span class=\"n\">filter_update</span>\n<span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;/</span><span class=\"n\">filter_remove</span>\n<span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;</span><span class=\"n\">list</span>\n</pre></div>\n\n\n<p>I recommend to look into <code>IntrospectionManager.hh</code> for details about the expected format message when using the transport services.</p>\n<p>There's a second part in <a href=\"#!/osrf/gazebo/pull-requests/2123/introspection-service-part2-client\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2123</a> that implements an <code>IntrospectionClient</code> class. This class is designed to help data consumers, as it offers a function-based API and hides most of the transport and internal details.</p>", "type": "rendered"}, "title": {"raw": "Introspection service - part1 (manager)", "markup": "markdown", "html": "<p>Introspection service - part1 (manager)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request implements the introspection manager as described [in this design](#!/osrf/gazebo_design/pull-requests/29).\r\n\r\nAPI description:\r\n\r\n* `Register()` / `Unregister` / `Items()` functions : Methods to be used by the components that want to register items in the introspection manager (data providers). As the manager is a singleton, the data provider needs to be located in the same process as the manager is running.\r\n\r\n* Services available via Ignition Transport used by the components that want to create filters for receiving updates on some of the registered items (data consumers).\r\n\r\n```\r\n#!c++\r\n\r\n/introspection/<manager_id>/filter_new\r\n/introspection/<manager_id>/filter_update\r\n/introspection/<manager_id>/filter_remove\r\n/introspection/<manager_id>list\r\n```\r\n\r\nI recommend to look into `IntrospectionManager.hh` for details about the expected format message when using the transport services.\r\n\r\nThere's a second part in pull request #2123 that implements an `IntrospectionClient` class. This class is designed to help data consumers, as it offers a function-based API and hides most of the transport and internal details.\r\n", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2121/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:54a28da5152b%0D9f1d9834a6df?from_pullrequest_id=2121"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2121/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2121.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2121/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2121/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2121"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2121/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:54a28da5152b%0D9f1d9834a6df?from_pullrequest_id=2121"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2121/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2121/statuses_page=1.json"}}, "title": "Introspection service - part1 (manager)", "close_source_branch": true, "reviewers": [], "id": 2121, "destination": {"commit": {"hash": "9f1d9834a6df", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9f1d9834a6df.json"}, "html": {"href": "#!/osrf/gazebo/commits/9f1d9834a6df"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "plotting"}}, "created_on": "2016-02-04T18:15:17.387634+00:00", "summary": {"raw": "This pull request implements the introspection manager as described [in this design](#!/osrf/gazebo_design/pull-requests/29).\r\n\r\nAPI description:\r\n\r\n* `Register()` / `Unregister` / `Items()` functions : Methods to be used by the components that want to register items in the introspection manager (data providers). As the manager is a singleton, the data provider needs to be located in the same process as the manager is running.\r\n\r\n* Services available via Ignition Transport used by the components that want to create filters for receiving updates on some of the registered items (data consumers).\r\n\r\n```\r\n#!c++\r\n\r\n/introspection/<manager_id>/filter_new\r\n/introspection/<manager_id>/filter_update\r\n/introspection/<manager_id>/filter_remove\r\n/introspection/<manager_id>list\r\n```\r\n\r\nI recommend to look into `IntrospectionManager.hh` for details about the expected format message when using the transport services.\r\n\r\nThere's a second part in pull request #2123 that implements an `IntrospectionClient` class. This class is designed to help data consumers, as it offers a function-based API and hides most of the transport and internal details.\r\n", "markup": "markdown", "html": "<p>This pull request implements the introspection manager as described <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/pull-requests/29\" rel=\"nofollow\">in this design</a>.</p>\n<p>API description:</p>\n<ul>\n<li>\n<p><code>Register()</code> / <code>Unregister</code> / <code>Items()</code> functions : Methods to be used by the components that want to register items in the introspection manager (data providers). As the manager is a singleton, the data provider needs to be located in the same process as the manager is running.</p>\n</li>\n<li>\n<p>Services available via Ignition Transport used by the components that want to create filters for receiving updates on some of the registered items (data consumers).</p>\n</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;/</span><span class=\"n\">filter_new</span>\n<span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;/</span><span class=\"n\">filter_update</span>\n<span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;/</span><span class=\"n\">filter_remove</span>\n<span class=\"o\">/</span><span class=\"n\">introspection</span><span class=\"o\">/&lt;</span><span class=\"n\">manager_id</span><span class=\"o\">&gt;</span><span class=\"n\">list</span>\n</pre></div>\n\n\n<p>I recommend to look into <code>IntrospectionManager.hh</code> for details about the expected format message when using the transport services.</p>\n<p>There's a second part in <a href=\"#!/osrf/gazebo/pull-requests/2123/introspection-service-part2-client\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2123</a> that implements an <code>IntrospectionClient</code> class. This class is designed to help data consumers, as it offers a function-based API and hides most of the transport and internal details.</p>", "type": "rendered"}, "source": {"commit": {"hash": "22bcf30b18b6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/22bcf30b18b6.json"}, "html": {"href": "#!/osrf/gazebo/commits/22bcf30b18b6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "introspection_part1"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-02-04T23:18:59.605302+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-02-04T23:23:12.038233+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2016-02-04T22:15:15.487829+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2016-02-04T23:35:35.522212+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "54a28da5152b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54a28da5152b.json"}, "html": {"href": "#!/osrf/gazebo/commits/54a28da5152b"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}