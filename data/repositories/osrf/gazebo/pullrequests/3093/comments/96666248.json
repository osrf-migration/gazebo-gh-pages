{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3093/comments/96666248.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/mogumbo/gazebo:c7e526cda715..e58bb0e3c257?path=gazebo%2Frendering%2FLight.hh"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3093/_/diff#comment-96666248"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3093, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3093.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3093"}}, "title": "Lens flare world pose 9"}, "content": {"raw": "I added a simple test for this function. Could you apply this patch to `gazebo/rendering/RenderingLight_TEST.cc`?\n\n```\ndiff -r e8fe98d704fe gazebo/rendering/RenderingLight_TEST.cc\n--- a/gazebo/rendering/RenderingLight_TEST.cc   Mon Mar 25 19:30:42 2019 +0000\n+++ b/gazebo/rendering/RenderingLight_TEST.cc   Wed Mar 27 16:08:12 2019 -0700\n@@ -28,6 +28,36 @@\n };\n \n /////////////////////////////////////////////////\n+TEST_F(Light_TEST, LightPoseTest)\n+{\n+  Load(\"worlds/empty.world\");\n+\n+  rendering::ScenePtr scene = rendering::get_scene(\"default\");\n+\n+  if (!scene)\n+    scene = rendering::create_scene(\"default\", false);\n+\n+  EXPECT_TRUE(scene != nullptr);\n+\n+  // create a visual as light parent\n+  rendering::VisualPtr parentVis(\n+      new rendering::Visual(\"light_parent\", scene, false));\n+  parentVis->Load();\n+\n+  ignition::math::Pose3d testPose(1, 2, 3, 0, 1.57, 3.14);\n+  parentVis->SetWorldPose(testPose);\n+\n+  // create a light and attach it to parent visual\n+  rendering::LightPtr light(new gazebo::rendering::Light(scene));\n+  msgs::Light msg;\n+  msg.set_name(\"light_parent::light\");\n+  light->LoadFromMsg(msg);\n+\n+  // verify pose\n+  EXPECT_EQ(testPose, light->WorldPose());\n+}\n+\n+/////////////////////////////////////////////////\n TEST_F(Light_TEST, LightVisualTest)\n {\n   Load(\"worlds/empty.world\");\n```", "markup": "markdown", "html": "<p>I added a simple test for this function. Could you apply this patch to <code>gazebo/rendering/RenderingLight_TEST.cc</code>?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r e8fe98d704fe gazebo/rendering/RenderingLight_TEST.cc</span>\n<span class=\"gd\">--- a/gazebo/rendering/RenderingLight_TEST.cc   Mon Mar 25 19:30:42 2019 +0000</span>\n<span class=\"gi\">+++ b/gazebo/rendering/RenderingLight_TEST.cc   Wed Mar 27 16:08:12 2019 -0700</span>\n<span class=\"gu\">@@ -28,6 +28,36 @@</span>\n };\n\n /////////////////////////////////////////////////\n<span class=\"gi\">+TEST_F(Light_TEST, LightPoseTest)</span>\n<span class=\"gi\">+{</span>\n<span class=\"gi\">+  Load(&quot;worlds/empty.world&quot;);</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  rendering::ScenePtr scene = rendering::get_scene(&quot;default&quot;);</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  if (!scene)</span>\n<span class=\"gi\">+    scene = rendering::create_scene(&quot;default&quot;, false);</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  EXPECT_TRUE(scene != nullptr);</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  // create a visual as light parent</span>\n<span class=\"gi\">+  rendering::VisualPtr parentVis(</span>\n<span class=\"gi\">+      new rendering::Visual(&quot;light_parent&quot;, scene, false));</span>\n<span class=\"gi\">+  parentVis-&gt;Load();</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  ignition::math::Pose3d testPose(1, 2, 3, 0, 1.57, 3.14);</span>\n<span class=\"gi\">+  parentVis-&gt;SetWorldPose(testPose);</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  // create a light and attach it to parent visual</span>\n<span class=\"gi\">+  rendering::LightPtr light(new gazebo::rendering::Light(scene));</span>\n<span class=\"gi\">+  msgs::Light msg;</span>\n<span class=\"gi\">+  msg.set_name(&quot;light_parent::light&quot;);</span>\n<span class=\"gi\">+  light-&gt;LoadFromMsg(msg);</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  // verify pose</span>\n<span class=\"gi\">+  EXPECT_EQ(testPose, light-&gt;WorldPose());</span>\n<span class=\"gi\">+}</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+/////////////////////////////////////////////////</span>\n TEST_F(Light_TEST, LightVisualTest)\n {\n   Load(&quot;worlds/empty.world&quot;);\n</pre></div>", "type": "rendered"}, "created_on": "2019-03-27T23:08:47.397238+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {"to": 110, "from": null, "outdated": true, "path": "gazebo/rendering/Light.hh"}, "updated_on": "2019-03-27T23:08:47.405849+00:00", "type": "pullrequest_comment", "id": 96666248}