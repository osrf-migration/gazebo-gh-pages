{"pagelen": 50, "values": [{"update": {"description": "We have noticed in jenkins that `UNIT_gz_TEST` is pretty flaky. It is the most common failure on our homebrew builds, which repeat failing tests once to try to week out flakes. The gazebo7 homebrew build has been failing most often during the [gzTest.Model subtest](http://build.osrfoundation.org/job/gazebo-ci-gazebo7-homebrew-amd64/85/testReport/(root)/gzTest/Model/), but it can also timeout or crash, in which case the [UNIT_gz_TEST.test_ran](http://build.osrfoundation.org/job/gazebo-ci_BTCoverage-default-trusty-amd64-gpu-none/135/testReport/(root)/UNIT_gz_TEST/test_ran/) failure can be seen.\r\n\r\nThis PR reduces the flakiness of the test and disables some troublesome expectations:\r\n\r\n1. Improve initialization by calling `gazebo::client::setup()` instead of `gazebo::transport::init()` and then later `gazebo::transport::run()`. This is the preferred way to write listener programs now. This required linking the test to the `libgazebo_client` library.\r\n\r\n2. Wait for the `~/world_stats` topic to be listed. The `gzTest.Topic` test can fail if the `gzserver` has not finished initializing, so the `transport::getAdvertisedTopics` API is used to wait for that topic. This is helpful for the other tests as well to wait for the gzserver to be ready before proceeding.\r\n\r\n3. Don't start a `gzserver` with the `init()` and `fini()` calls for the SDF test, since it doesn't need it.\r\n\r\n4. When deleting a model, the test currently expects to see an `entity_delete` message on the `~/request` topic with some of the text in the message matching the name of the model to be deleted. This is problematic, however, since `Link::Fini` [publishes entity_delete requests with an integer id of its child visuals](#!/osrf/gazebo/src/31944e8d9da6220d0c90a2fc30b0c1d8c75751b6/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-272), and these messages don't contain the model name, just an integer. There is a [design document](#!/osrf/gazebo_design/pull-requests/31/insertion-and-deletion-flow/diff) about improving model insertion and deletion, so I would like to disable these expectations until that design document is implemented. At that time, it should be easier to write reasonable expectations.\r\n\r\n5. Finally, I observed a problem that `~/factory` messages were being published, and we were later able to get `model_info` about the created model, but the `~/factory` messages were never received by the test, leading to failed expectations. I documented this in #2069 and disabled the expectations.\r\n\r\nThe test should be more reliable now. I have tested it repeatedly on trusty and homebrew and it is passing reliably now. It passed in one [homebrew jenkins build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/693/testReport/(root)/gzTest/) too.\r\n", "title": "Reduce flakiness of UNIT_gz_TEST", "destination": {"commit": {"hash": "f40aa9d40286", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f40aa9d40286.json"}, "html": {"href": "#!/osrf/gazebo/commits/f40aa9d40286"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "00900755a50b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/00900755a50b.json"}, "html": {"href": "#!/osrf/gazebo/commits/00900755a50b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gz_test_race"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-10-13T21:25:10.732980+00:00"}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"approval": {"date": "2016-10-13T20:33:48.235536+00:00", "pullrequest": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"approval": {"date": "2016-10-13T20:30:34.766802+00:00", "pullrequest": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25165006.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25165006"}}, "parent": {"id": 25164449, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25164449.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25164449"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}, "content": {"raw": "\n\t\n0090075 ", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/commits/0090075\" rel=\"nofollow\" class=\"ap-connect-link\">0090075</a> </p>", "type": "rendered"}, "created_on": "2016-10-13T18:29:26.648080+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-10-13T18:29:26.650154+00:00", "type": "pullrequest_comment", "id": 25165006}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"update": {"description": "We have noticed in jenkins that `UNIT_gz_TEST` is pretty flaky. It is the most common failure on our homebrew builds, which repeat failing tests once to try to week out flakes. The gazebo7 homebrew build has been failing most often during the [gzTest.Model subtest](http://build.osrfoundation.org/job/gazebo-ci-gazebo7-homebrew-amd64/85/testReport/(root)/gzTest/Model/), but it can also timeout or crash, in which case the [UNIT_gz_TEST.test_ran](http://build.osrfoundation.org/job/gazebo-ci_BTCoverage-default-trusty-amd64-gpu-none/135/testReport/(root)/UNIT_gz_TEST/test_ran/) failure can be seen.\r\n\r\nThis PR reduces the flakiness of the test and disables some troublesome expectations:\r\n\r\n1. Improve initialization by calling `gazebo::client::setup()` instead of `gazebo::transport::init()` and then later `gazebo::transport::run()`. This is the preferred way to write listener programs now. This required linking the test to the `libgazebo_client` library.\r\n\r\n2. Wait for the `~/world_stats` topic to be listed. The `gzTest.Topic` test can fail if the `gzserver` has not finished initializing, so the `transport::getAdvertisedTopics` API is used to wait for that topic. This is helpful for the other tests as well to wait for the gzserver to be ready before proceeding.\r\n\r\n3. Don't start a `gzserver` with the `init()` and `fini()` calls for the SDF test, since it doesn't need it.\r\n\r\n4. When deleting a model, the test currently expects to see an `entity_delete` message on the `~/request` topic with some of the text in the message matching the name of the model to be deleted. This is problematic, however, since `Link::Fini` [publishes entity_delete requests with an integer id of its child visuals](#!/osrf/gazebo/src/31944e8d9da6220d0c90a2fc30b0c1d8c75751b6/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-272), and these messages don't contain the model name, just an integer. There is a [design document](#!/osrf/gazebo_design/pull-requests/31/insertion-and-deletion-flow/diff) about improving model insertion and deletion, so I would like to disable these expectations until that design document is implemented. At that time, it should be easier to write reasonable expectations.\r\n\r\n5. Finally, I observed a problem that `~/factory` messages were being published, and we were later able to get `model_info` about the created model, but the `~/factory` messages were never received by the test, leading to failed expectations. I documented this in #2069 and disabled the expectations.\r\n\r\nThe test should be more reliable now. I have tested it repeatedly on trusty and homebrew and it is passing reliably now. It passed in one [homebrew jenkins build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/693/testReport/(root)/gzTest/) too.\r\n", "title": "Reduce flakiness of UNIT_gz_TEST", "destination": {"commit": {"hash": "0bd37ad22152", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0bd37ad22152.json"}, "html": {"href": "#!/osrf/gazebo/commits/0bd37ad22152"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "00900755a50b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/00900755a50b.json"}, "html": {"href": "#!/osrf/gazebo/commits/00900755a50b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gz_test_race"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-10-13T18:28:50.384032+00:00"}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"update": {"description": "We have noticed in jenkins that `UNIT_gz_TEST` is pretty flaky. It is the most common failure on our homebrew builds, which repeat failing tests once to try to week out flakes. The gazebo7 homebrew build has been failing most often during the [gzTest.Model subtest](http://build.osrfoundation.org/job/gazebo-ci-gazebo7-homebrew-amd64/85/testReport/(root)/gzTest/Model/), but it can also timeout or crash, in which case the [UNIT_gz_TEST.test_ran](http://build.osrfoundation.org/job/gazebo-ci_BTCoverage-default-trusty-amd64-gpu-none/135/testReport/(root)/UNIT_gz_TEST/test_ran/) failure can be seen.\r\n\r\nThis PR reduces the flakiness of the test and disables some troublesome expectations:\r\n\r\n1. Improve initialization by calling `gazebo::client::setup()` instead of `gazebo::transport::init()` and then later `gazebo::transport::run()`. This is the preferred way to write listener programs now. This required linking the test to the `libgazebo_client` library.\r\n\r\n2. Wait for the `~/world_stats` topic to be listed. The `gzTest.Topic` test can fail if the `gzserver` has not finished initializing, so the `transport::getAdvertisedTopics` API is used to wait for that topic. This is helpful for the other tests as well to wait for the gzserver to be ready before proceeding.\r\n\r\n3. Don't start a `gzserver` with the `init()` and `fini()` calls for the SDF test, since it doesn't need it.\r\n\r\n4. When deleting a model, the test currently expects to see an `entity_delete` message on the `~/request` topic with some of the text in the message matching the name of the model to be deleted. This is problematic, however, since `Link::Fini` [publishes entity_delete requests with an integer id of its child visuals](#!/osrf/gazebo/src/31944e8d9da6220d0c90a2fc30b0c1d8c75751b6/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-272), and these messages don't contain the model name, just an integer. There is a [design document](#!/osrf/gazebo_design/pull-requests/31/insertion-and-deletion-flow/diff) about improving model insertion and deletion, so I would like to disable these expectations until that design document is implemented. At that time, it should be easier to write reasonable expectations.\r\n\r\n5. Finally, I observed a problem that `~/factory` messages were being published, and we were later able to get `model_info` about the created model, but the `~/factory` messages were never received by the test, leading to failed expectations. I documented this in #2069 and disabled the expectations.\r\n\r\nThe test should be more reliable now. I have tested it repeatedly on trusty and homebrew and it is passing reliably now. It passed in one [homebrew jenkins build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/693/testReport/(root)/gzTest/) too.\r\n", "title": "Reduce flakiness of UNIT_gz_TEST", "destination": {"commit": {"hash": "0bd37ad22152", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0bd37ad22152.json"}, "html": {"href": "#!/osrf/gazebo/commits/0bd37ad22152"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "00900755a50b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/00900755a50b.json"}, "html": {"href": "#!/osrf/gazebo/commits/00900755a50b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gz_test_race"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-10-13T18:28:48.258529+00:00"}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25164880.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25164880"}}, "parent": {"id": 25164449, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25164449.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25164449"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}, "content": {"raw": "yes", "markup": "markdown", "html": "<p>yes</p>", "type": "rendered"}, "created_on": "2016-10-13T18:27:09.675751+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-10-13T18:27:09.684356+00:00", "type": "pullrequest_comment", "id": 25164880}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25164871.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25164871"}}, "parent": {"id": 25164449, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25164449.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25164449"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}, "content": {"raw": ":)", "markup": "markdown", "html": "<p>:)</p>", "type": "rendered"}, "created_on": "2016-10-13T18:27:02.158380+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2016-10-13T18:27:02.163810+00:00", "type": "pullrequest_comment", "id": 25164871}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25164449.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25164449"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}, "content": {"raw": "Should we increment `topicWaitCount`?", "markup": "markdown", "html": "<p>Should we increment <code>topicWaitCount</code>?</p>", "type": "rendered"}, "created_on": "2016-10-13T18:19:50.498963+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-10-13T18:19:50.504513+00:00", "type": "pullrequest_comment", "id": 25164449}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"update": {"description": "We have noticed in jenkins that `UNIT_gz_TEST` is pretty flaky. It is the most common failure on our homebrew builds, which repeat failing tests once to try to week out flakes. The gazebo7 homebrew build has been failing most often during the [gzTest.Model subtest](http://build.osrfoundation.org/job/gazebo-ci-gazebo7-homebrew-amd64/85/testReport/(root)/gzTest/Model/), but it can also timeout or crash, in which case the [UNIT_gz_TEST.test_ran](http://build.osrfoundation.org/job/gazebo-ci_BTCoverage-default-trusty-amd64-gpu-none/135/testReport/(root)/UNIT_gz_TEST/test_ran/) failure can be seen.\r\n\r\nThis PR reduces the flakiness of the test and disables some troublesome expectations:\r\n\r\n1. Improve initialization by calling `gazebo::client::setup()` instead of `gazebo::transport::init()` and then later `gazebo::transport::run()`. This is the preferred way to write listener programs now. This required linking the test to the `libgazebo_client` library.\r\n\r\n2. Wait for the `~/world_stats` topic to be listed. The `gzTest.Topic` test can fail if the `gzserver` has not finished initializing, so the `transport::getAdvertisedTopics` API is used to wait for that topic. This is helpful for the other tests as well to wait for the gzserver to be ready before proceeding.\r\n\r\n3. Don't start a `gzserver` with the `init()` and `fini()` calls for the SDF test, since it doesn't need it.\r\n\r\n4. When deleting a model, the test currently expects to see an `entity_delete` message on the `~/request` topic with some of the text in the message matching the name of the model to be deleted. This is problematic, however, since `Link::Fini` [publishes entity_delete requests with an integer id of its child visuals](#!/osrf/gazebo/src/31944e8d9da6220d0c90a2fc30b0c1d8c75751b6/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-272), and these messages don't contain the model name, just an integer. There is a [design document](#!/osrf/gazebo_design/pull-requests/31/insertion-and-deletion-flow/diff) about improving model insertion and deletion, so I would like to disable these expectations until that design document is implemented. At that time, it should be easier to write reasonable expectations.\r\n\r\n5. Finally, I observed a problem that `~/factory` messages were being published, and we were later able to get `model_info` about the created model, but the `~/factory` messages were never received by the test, leading to failed expectations. I documented this in #2069 and disabled the expectations.\r\n\r\nThe test should be more reliable now. I have tested it repeatedly on trusty and homebrew and it is passing reliably now. It passed in one [homebrew jenkins build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/693/testReport/(root)/gzTest/) too.\r\n", "title": "Reduce flakiness of UNIT_gz_TEST", "destination": {"commit": {"hash": "0bd37ad22152", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0bd37ad22152.json"}, "html": {"href": "#!/osrf/gazebo/commits/0bd37ad22152"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "1387d7bff078", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1387d7bff078.json"}, "html": {"href": "#!/osrf/gazebo/commits/1387d7bff078"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gz_test_race"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-10-13T00:49:55.505361+00:00"}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471/comments/25106226.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471/_/diff#comment-25106226"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}, "content": {"raw": "[homebrew build is clean](http://build.osrfoundation.org//job/gazebo-ci-pr_any-homebrew-amd64/696)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org//job/gazebo-ci-pr_any-homebrew-amd64/696\" rel=\"nofollow\">homebrew build is clean</a></p>", "type": "rendered"}, "created_on": "2016-10-12T21:27:20.482369+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-10-12T21:27:20.484428+00:00", "type": "pullrequest_comment", "id": 25106226}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"update": {"description": "We have noticed in jenkins that `UNIT_gz_TEST` is pretty flaky. It is the most common failure on our homebrew builds, which repeat failing tests once to try to week out flakes. The gazebo7 homebrew build has been failing most often during the [gzTest.Model subtest](http://build.osrfoundation.org/job/gazebo-ci-gazebo7-homebrew-amd64/85/testReport/(root)/gzTest/Model/), but it can also timeout or crash, in which case the [UNIT_gz_TEST.test_ran](http://build.osrfoundation.org/job/gazebo-ci_BTCoverage-default-trusty-amd64-gpu-none/135/testReport/(root)/UNIT_gz_TEST/test_ran/) failure can be seen.\r\n\r\nThis PR reduces the flakiness of the test and disables some troublesome expectations:\r\n\r\n1. Improve initialization by calling `gazebo::client::setup()` instead of `gazebo::transport::init()` and then later `gazebo::transport::run()`. This is the preferred way to write listener programs now. This required linking the test to the `libgazebo_client` library.\r\n\r\n2. Wait for the `~/world_stats` topic to be listed. The `gzTest.Topic` test can fail if the `gzserver` has not finished initializing, so the `transport::getAdvertisedTopics` API is used to wait for that topic. This is helpful for the other tests as well to wait for the gzserver to be ready before proceeding.\r\n\r\n3. Don't start a `gzserver` with the `init()` and `fini()` calls for the SDF test, since it doesn't need it.\r\n\r\n4. When deleting a model, the test currently expects to see an `entity_delete` message on the `~/request` topic with some of the text in the message matching the name of the model to be deleted. This is problematic, however, since `Link::Fini` [publishes entity_delete requests with an integer id of its child visuals](#!/osrf/gazebo/src/31944e8d9da6220d0c90a2fc30b0c1d8c75751b6/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-272), and these messages don't contain the model name, just an integer. There is a [design document](#!/osrf/gazebo_design/pull-requests/31/insertion-and-deletion-flow/diff) about improving model insertion and deletion, so I would like to disable these expectations until that design document is implemented. At that time, it should be easier to write reasonable expectations.\r\n\r\n5. Finally, I observed a problem that `~/factory` messages were being published, and we were later able to get `model_info` about the created model, but the `~/factory` messages were never received by the test, leading to failed expectations. I documented this in #2069 and disabled the expectations.\r\n\r\nThe test should be more reliable now. I have tested it repeatedly on trusty and homebrew and it is passing reliably now. It passed in one [homebrew jenkins build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/693/testReport/(root)/gzTest/) too.\r\n", "title": "Reduce flakiness of UNIT_gz_TEST", "destination": {"commit": {"hash": "0bd37ad22152", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0bd37ad22152.json"}, "html": {"href": "#!/osrf/gazebo/commits/0bd37ad22152"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "46354462d255", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/46354462d255.json"}, "html": {"href": "#!/osrf/gazebo/commits/46354462d255"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gz_test_race"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-10-12T19:03:22.502196+00:00"}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}, {"update": {"description": "We have noticed in jenkins that `UNIT_gz_TEST` is pretty flaky. It is the most common failure on our homebrew builds, which repeat failing tests once to try to week out flakes. The gazebo7 homebrew build has been failing most often during the [gzTest.Model subtest](http://build.osrfoundation.org/job/gazebo-ci-gazebo7-homebrew-amd64/85/testReport/(root)/gzTest/Model/), but it can also timeout or crash, in which case the [UNIT_gz_TEST.test_ran](http://build.osrfoundation.org/job/gazebo-ci_BTCoverage-default-trusty-amd64-gpu-none/135/testReport/(root)/UNIT_gz_TEST/test_ran/) failure can be seen.\r\n\r\nThis PR reduces the flakiness of the test and disables some troublesome expectations:\r\n\r\n1. Improve initialization by calling `gazebo::client::setup()` instead of `gazebo::transport::init()` and then later `gazebo::transport::run()`. This is the preferred way to write listener programs now. This required linking the test to the `libgazebo_client` library.\r\n\r\n2. Wait for the `~/world_stats` topic to be listed. The `gzTest.Topic` test can fail if the `gzserver` has not finished initializing, so the `transport::getAdvertisedTopics` API is used to wait for that topic. This is helpful for the other tests as well to wait for the gzserver to be ready before proceeding.\r\n\r\n3. Don't start a `gzserver` with the `init()` and `fini()` calls for the SDF test, since it doesn't need it.\r\n\r\n4. When deleting a model, the test currently expects to see an `entity_delete` message on the `~/request` topic with some of the text in the message matching the name of the model to be deleted. This is problematic, however, since `Link::Fini` [publishes entity_delete requests with an integer id of its child visuals](#!/osrf/gazebo/src/31944e8d9da6220d0c90a2fc30b0c1d8c75751b6/gazebo/physics/Link.cc?fileviewer=file-view-default#Link.cc-272), and these messages don't contain the model name, just an integer. There is a [design document](#!/osrf/gazebo_design/pull-requests/31/insertion-and-deletion-flow/diff) about improving model insertion and deletion, so I would like to disable these expectations until that design document is implemented. At that time, it should be easier to write reasonable expectations.\r\n\r\n5. Finally, I observed a problem that `~/factory` messages were being published, and we were later able to get `model_info` about the created model, but the `~/factory` messages were never received by the test, leading to failed expectations. I documented this in #2069 and disabled the expectations.\r\n\r\nThe test should be more reliable now. I have tested it repeatedly on trusty and homebrew and it is passing reliably now. It passed in one [homebrew jenkins build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/693/testReport/(root)/gzTest/) too.\r\n", "title": "Reduce flakiness of UNIT_gz_TEST", "destination": {"commit": {"hash": "0bd37ad22152", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0bd37ad22152.json"}, "html": {"href": "#!/osrf/gazebo/commits/0bd37ad22152"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "46354462d255", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/46354462d255.json"}, "html": {"href": "#!/osrf/gazebo/commits/46354462d255"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gz_test_race"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2016-10-12T19:03:22.483080+00:00"}, "pull_request": {"type": "pullrequest", "id": 2471, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2471.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2471"}}, "title": "Reduce flakiness of UNIT_gz_TEST"}}]}