{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3073/comments/96840824.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8491fe37f72f..5acd9e76901f?path=plugins%2FVariableGearboxPlugin.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3073/_/diff#comment-96840824"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3073, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3073.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3073"}}, "title": "VariableGearboxPlugin: use splines to support arbitrary smooth input-output gearbox profiles"}, "content": {"raw": "This is the only place I see a gear ratio having it\u2019s sign changed. When a gearbox is loaded from SDF [ODEGearboxJoint::Load](#!/osrf/gazebo/src/8491fe37f72f2dd1623c7c7fc6bd2dce8be14b72/gazebo/physics/ode/ODEGearboxJoint.cc#lines-52:57) calls [GearboxJoint<ODEJoint>::Load](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/physics/GearboxJoint.hh#lines-59:86) which saves `<gearbox_ratio>` [without changing the sign](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/physics/GearboxJoint.hh#lines-64:65). Then [ODEGearboxJoint::SetGearboxRatio](#!/osrf/gazebo/src/8491fe37f72f2dd1623c7c7fc6bd2dce8be14b72/gazebo/physics/ode/ODEGearboxJoint.cc#lines-78:82) calls [dJointSetGearboxRatio](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/deps/opende/src/joints/gearbox.cpp#lines-223:229) which stores it without changing the sign either.\n\nThe [documentation for dJointSetGearboxRatio](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/deps/opende/include/gazebo/ode/objects.h#lines-2931:2935) says:\n\n```\n * This is the ratio of the angular velocity of the first body to that\n * of the second body along the joint axis.  If the ratio is N then\n * the first body is constrained to rotate N times faster than the\n * second body.  Set it to 1 / N or reverse the bodies for the reverse\n * effect.\n```\n\nwhich is opposite of `angle1 = -ratio * angle2` mentioned in the issue body. I guess the negative sign comes from [here](#!/osrf/gazebo/src/69ebf26d1637e203004da12b11e010e7fee4ce08/deps/opende/src/joints/gearbox.cpp#lines-77:78); however as written the ratio in `<x_y_dydx>` would have the opposite sign convention as the existing `<gearbox_ratio>` on a gearbox joint.\n\nIf I create a gearbox with `<gearbox_ratio>1.0</gearbox_ratio>` between two revolute joints with the same joint axis then the output joint rotates in the opposite direction of the input joint. If I add this plugin to the same model with the same gear ratio then the joints spin in the same direction.\n\n```\n      <plugin name=\"variable_gearbox\" filename=\"libVariableGearboxPlugin.so\">\n        <gearbox_joint_name>gearbox_joint</gearbox_joint_name>\n        <x_y_dydx>0 0 1.0</x_y_dydx>\n      </plugin>\n```\n\nFor consistency with the current gearbox code, maybe don\u2019t negate the slope here and document the existing convention?", "markup": "markdown", "html": "<p>This is the only place I see a gear ratio having it\u2019s sign changed. When a gearbox is loaded from SDF <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/8491fe37f72f2dd1623c7c7fc6bd2dce8be14b72/gazebo/physics/ode/ODEGearboxJoint.cc#lines-52:57\" rel=\"nofollow\">ODEGearboxJoint::Load</a> calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/physics/GearboxJoint.hh#lines-59:86\" rel=\"nofollow\">GearboxJoint&lt;ODEJoint&gt;::Load</a> which saves <code>&lt;gearbox_ratio&gt;</code> <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/physics/GearboxJoint.hh#lines-64:65\" rel=\"nofollow\">without changing the sign</a>. Then <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/8491fe37f72f2dd1623c7c7fc6bd2dce8be14b72/gazebo/physics/ode/ODEGearboxJoint.cc#lines-78:82\" rel=\"nofollow\">ODEGearboxJoint::SetGearboxRatio</a> calls <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/deps/opende/src/joints/gearbox.cpp#lines-223:229\" rel=\"nofollow\">dJointSetGearboxRatio</a> which stores it without changing the sign either.</p>\n<p>The <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/deps/opende/include/gazebo/ode/objects.h#lines-2931:2935\" rel=\"nofollow\">documentation for dJointSetGearboxRatio</a> says:</p>\n<div class=\"codehilite\"><pre><span></span> * This is the ratio of the angular velocity of the first body to that\n * of the second body along the joint axis.  If the ratio is N then\n * the first body is constrained to rotate N times faster than the\n * second body.  Set it to 1 / N or reverse the bodies for the reverse\n * effect.\n</pre></div>\n\n\n<p>which is opposite of <code>angle1 = -ratio * angle2</code> mentioned in the issue body. I guess the negative sign comes from <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/69ebf26d1637e203004da12b11e010e7fee4ce08/deps/opende/src/joints/gearbox.cpp#lines-77:78\" rel=\"nofollow\">here</a>; however as written the ratio in <code>&lt;x_y_dydx&gt;</code> would have the opposite sign convention as the existing <code>&lt;gearbox_ratio&gt;</code> on a gearbox joint.</p>\n<p>If I create a gearbox with <code>&lt;gearbox_ratio&gt;1.0&lt;/gearbox_ratio&gt;</code> between two revolute joints with the same joint axis then the output joint rotates in the opposite direction of the input joint. If I add this plugin to the same model with the same gear ratio then the joints spin in the same direction.</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;variable_gearbox&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libVariableGearboxPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;gearbox_joint_name&gt;</span>gearbox_joint<span class=\"nt\">&lt;/gearbox_joint_name&gt;</span>\n        <span class=\"nt\">&lt;x_y_dydx&gt;</span>0 0 1.0<span class=\"nt\">&lt;/x_y_dydx&gt;</span>\n      <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>For consistency with the current gearbox code, maybe don\u2019t negate the slope here and document the existing convention?</p>", "type": "rendered"}, "created_on": "2019-03-28T23:00:58.661908+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 295, "from": null, "outdated": true, "path": "plugins/VariableGearboxPlugin.cc"}, "updated_on": "2019-03-28T23:00:58.672079+00:00", "type": "pullrequest_comment", "id": 96840824}