{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2146/comments/15062627.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2146/_/diff#comment-15062627"}}, "parent": {"id": 14806755, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2146/comments/14806755.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2146/_/diff#comment-14806755"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2146, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2146.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2146"}}, "title": "Internal tinyxml2"}, "content": {"raw": "Using library bundles or shared libraries has historically been a decision taken at a distribution level, you can find MacOSX or Windows (using bundles) or most of the GNU/Linux distributions (not using them). The friends of Gentoo wrote [a page about why not using them](https://wiki.gentoo.org/wiki/Why_not_bundle_dependencies). Both models have pros and cons. Taking the decision of using bundles in Gazebo won't save your downstream distribution maintainers (Fedora, Debian, etc) of having to follow the policy of removing them.\n\nSo yes, we can change the code in this way, but would be good to keep all the logic in cmake that allows downstream maintainers not to require custom patching. A way of doing it would be to keep all the logic in place but default to use the bundle. We can build our own packages using it but downstream can easily select not to do it in the building cmake arguments. \n\n\n\n", "markup": "markdown", "html": "<p>Using library bundles or shared libraries has historically been a decision taken at a distribution level, you can find MacOSX or Windows (using bundles) or most of the GNU/Linux distributions (not using them). The friends of Gentoo wrote <a data-is-external-link=\"true\" href=\"https://wiki.gentoo.org/wiki/Why_not_bundle_dependencies\" rel=\"nofollow\">a page about why not using them</a>. Both models have pros and cons. Taking the decision of using bundles in Gazebo won't save your downstream distribution maintainers (Fedora, Debian, etc) of having to follow the policy of removing them.</p>\n<p>So yes, we can change the code in this way, but would be good to keep all the logic in cmake that allows downstream maintainers not to require custom patching. A way of doing it would be to keep all the logic in place but default to use the bundle. We can build our own packages using it but downstream can easily select not to do it in the building cmake arguments. </p>", "type": "rendered"}, "created_on": "2016-02-26T15:38:08.362825+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2016-02-26T15:38:08.369166+00:00", "type": "pullrequest_comment", "id": 15062627}