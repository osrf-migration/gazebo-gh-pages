{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/48/comments/32701.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:9e1e33d3fb16..54d2e639ba9f?path=gazebo%2Fcommon%2FTime.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/48/_/diff#comment-32701"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 48, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/48.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/48"}}, "title": "changing from gettimeofday to clock_gettime in common::Time class.  Added nanosleep in World::Step, improved cpu load during pause."}, "content": {"raw": "Also for the future, not now: we should do some #ifdefing to make the time functions cross-platform.  For a pretty thorough example, see [rostime](https://github.com/ros/roscpp_core/blob/master/rostime/src/time.cpp).", "markup": "markdown", "html": "<p>Also for the future, not now: we should do some #ifdefing to make the time functions cross-platform.  For a pretty thorough example, see <a data-is-external-link=\"true\" href=\"https://github.com/ros/roscpp_core/blob/master/rostime/src/time.cpp\" rel=\"nofollow\">rostime</a>.</p>", "type": "rendered"}, "created_on": "2012-10-30T03:37:57.730392+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "inline": {"to": 82, "from": null, "outdated": false, "path": "gazebo/common/Time.cc"}, "updated_on": "2012-10-30T03:37:57.739279+00:00", "type": "pullrequest_comment", "id": 32701}