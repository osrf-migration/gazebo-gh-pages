{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3096/comments/97522241.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3096/_/diff#comment-97522241"}}, "parent": {"id": 97521568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3096/comments/97521568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3096/_/diff#comment-97521568"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3096, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3096.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3096"}}, "title": "Lock subscriberMutex anywhere subscribedNodes is used"}, "content": {"raw": "Backtrace\n\n```\n#0  0x00007ffff5e11db4 in __memcmp_avx2_movbe () at ../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S:265\n#1  0x00007ffff6754bf8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#2  0x00007ffff7b68b64 in std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (__lhs=<error: Cannot access memory at address 0x3f>, __rhs=\"/ariac/populate_belt\") at /usr/include/c++/7/bits/basic_string.h:6088\n#3  0x00007ffff7b6b177 in std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (this=0x7ffff7dd33a0 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t+64>, __x=<error: Cannot access memory at address 0x3f>, __y=\"/ariac/populate_belt\") at /usr/include/c++/7/bits/stl_function.h:386\n#4  0x00007ffff4a42e4c in std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (this=0x7ffff7dd33a0 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t+64>, __position=\n        {first = \"/ariac/sensor_enable\", second = std::__cxx11::list = {[0] = {px = 0x7ffef8000b20, pn = {pi_ = 0x7ffef8000cc0}}, [1] = {px = 0x7fff0c000b20, pn = {pi_ = 0x7fff0c000cc0}}, [2] = {px = 0x7fff00000b20, pn = {pi_ = 0x7fff00000cc0}}, [3] = {px = 0x7fff04000b20, pn = {pi_ = 0x7fff04000cc0}}, [4] = {px = 0x7ffeec000b20, pn = {pi_ = 0x7ffeec000cc0}}, [5] = {px = 0x7fff0c003320, pn = {pi_ = 0x7fff0c001e80}}, [6] = {px = 0x7ffee0000b20, pn = {pi_ = 0x7ffee0000cc0}}, [7] = {px = 0x7fff000020e0, pn = {pi_ = 0x7fff00001f30}}, [8] = {px = 0x7ffef0000b20, pn = {pi_ = 0x7ffef0000cc0}}, [9] = {px = 0x7ffee4000b20, pn = {pi_ = 0x7ffee4000cc0}}, [10] = {px = 0x7ffedc000b20, pn = {pi_ = 0x7ffedc000cc0}}, [11] = {px = 0x7ffef4003560, pn = {pi_ = 0x7ffef4001f20}}}}, __k=\"/ariac/populate_belt\") at /usr/include/c++/7/bits/stl_tree.h:2152\n#5  0x00007ffff4a41b2f in std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&) (this=0x7ffff7dd33a0 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t+64>, __pos=\n        {first = \"/ariac/sensor_enable\", second = std::__cxx11::list = {[0] = {px = 0x7ffef8000b20, pn = {pi_ = 0x7ffef8000cc0}}, [1] = {px = 0x7fff0c000b20, pn = {pi_ = 0x7fff0c000cc0}}, [2] = {px = 0x7fff00000b20, pn = {pi_ = 0x7fff00000cc0}}, [3] = {px = 0x7fff04000b20, pn = {pi_ = 0x7fff04000cc0}}, [4] = {px = 0x7ffeec000b20, pn = {pi_ = 0x7ffeec000cc0}}, [5] = {px = 0x7fff0c003320, pn = {pi_ = 0x7fff0c001e80}}, [6] = {px = 0x7ffee0000b20, pn = {pi_ = 0x7ffee0000cc0}}, [7] = {px = 0x7fff000020e0, pn = {pi_ = 0x7fff00001f30}}, [8] = {px = 0x7ffef0000b20, pn = {pi_ = 0x7ffef0000cc0}}, [9] = {px = 0x7ffee4000b20, pn = {pi_ = 0x7ffee4000cc0}}, [10] = {px = 0x7ffedc000b20, pn = {pi_ = 0x7ffedc000cc0}}, [11] = {px = 0x7ffef4003560, pn = {pi_ = 0x7ffef4001f20}}}}, __args#0=..., __args#1=..., __args#2=...)\n    at /usr/include/c++/7/bits/stl_tree.h:2402\n#6  0x00007ffff4a40629 in std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::list<boost::shared_ptr<gazebo::transport::Node>, std::allocator<boost::shared_ptr<gazebo::transport::Node> > > > > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (this=0x7ffff7dd33a0 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t+64>, __k=...) at /usr/include/c++/7/bits/stl_map.h:512\n#7  0x00007ffff4a3db4a in gazebo::transport::TopicManager::Subscribe(gazebo::transport::SubscribeOptions const&) (this=0x7ffff7dd3360 <SingletonT<gazebo::transport::TopicManager>::GetInstance()::t>, _ops=...) at /home/sloretz/ws/ariac/src/gazebo/gazebo/transport/TopicManager.cc:234\n#8  0x00007fff345bb1d1 in gazebo::transport::Node::Subscribe<gazebo::msgs::GzString, gazebo::PopulationPlugin>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (gazebo::PopulationPlugin::*)(boost::shared_ptr<gazebo::msgs::GzString const> const&), gazebo::PopulationPlugin*, bool) (this=0x7fff04009e60, _topic=\"/ariac/populate_belt\", _fp=\n    (void (gazebo::PopulationPlugin::*)(gazebo::PopulationPlugin * const, const boost::shared_ptr<gazebo::msgs::GzString const> &)) 0x7fff345b3078 <gazebo::PopulationPlugin::OnActivation(boost::shared_ptr<gazebo::msgs::GzString const> const&)>, _obj=0x7fff04001eb0, _latching=false)\n    at /usr/include/gazebo-9/gazebo/transport/Node.hh:215\n#9  0x00007fff345b1543 in gazebo::PopulationPlugin::Load(boost::shared_ptr<gazebo::physics::World>, std::shared_ptr<sdf::Element>) (this=0x7fff04001eb0, _world=..., _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 11) = {...})\n    at /home/sloretz/ws/ariac/src/ariac/osrf_gear/src/PopulationPlugin.cc:267\n#10 0x00007fff3c28f35b in gazebo::ROSPopulationPlugin::Load(boost::shared_ptr<gazebo::physics::World>, std::shared_ptr<sdf::Element>) (this=0x7fff04001eb0, _world=..., _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 11) = {...})\n    at /home/sloretz/ws/ariac/src/ariac/osrf_gear/src/ROSPopulationPlugin.cc:91\n#11 0x00007ffff52a12c4 in gazebo::physics::World::LoadPlugin(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<sdf::Element>) (this=0x5555565b5850, _filename=\"libROSPopulationPlugin.so\", _name=\"populate_conveyor\", _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 11) = {...}) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:1617\n#12 0x00007ffff52a1656 in gazebo::physics::World::LoadPlugin(std::shared_ptr<sdf::Element>) (this=0x5555565b5850, _sdf=std::shared_ptr<sdf::Element> (use count 7, weak count 11) = {...}) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:1644\n#13 0x00007ffff52a0e12 in gazebo::physics::World::LoadPlugins() (this=0x5555565b5850) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:1583\n#14 0x00007ffff529b2b1 in gazebo::physics::World::Step() (this=0x5555565b5850) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:620\n#15 0x00007ffff529aba5 in gazebo::physics::World::RunLoop() (this=0x5555565b5850) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:519\n#16 0x00007ffff52ce952 in std::__invoke_impl<void, void (gazebo::physics::World::*&)(), gazebo::physics::World*&>(std::__invoke_memfun_deref, void (gazebo::physics::World::*&)(), gazebo::physics::World*&) (__f=@0x555556649d18: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff529a844 <gazebo::physics::World::RunLoop()>, __t=@0x555556649d28: 0x5555565b5850) at /usr/include/c++/7/bits/invoke.h:73\n#17 0x00007ffff52cca46 in std::__invoke<void (gazebo::physics::World::*&)(), gazebo::physics::World*&>(void (gazebo::physics::World::*&)(), gazebo::physics::World*&) (__fn=@0x555556649d18: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff529a844 <gazebo::physics::World::RunLoop()>, __args#0=@0x555556649d28: 0x5555565b5850) at /usr/include/c++/7/bits/invoke.h:95\n#18 0x00007ffff52c8e31 in std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=0x555556649d18, __args=...) at /usr/include/c++/7/functional:467\n#19 0x00007ffff52c41ef in std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>::operator()<, void>() (this=0x555556649d18) at /usr/include/c++/7/functional:551\n#20 0x00007ffff52bf303 in std::__invoke_impl<void, std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>>(std::__invoke_other, std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>&&) (__f=...) at /usr/include/c++/7/bits/invoke.h:60\n#21 0x00007ffff52b6e4a in std::__invoke<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>>(std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()>&&) (__fn=...) at /usr/include/c++/7/bits/invoke.h:95\n#22 0x00007ffff52d5224 in std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x555556649d18) at /usr/include/c++/7/thread:234\n#23 0x00007ffff52d4152 in std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > >::operator()() (this=0x555556649d18) at /usr/include/c++/7/thread:243\n#24 0x00007ffff52d23c8 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::_Bind<void (gazebo::physics::World::*(gazebo::physics::World*))()> > > >::_M_run() (this=0x555556649d10) at /usr/include/c++/7/thread:186\n#25 0x00007ffff66eb57f in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#26 0x00007ffff56b26db in start_thread (arg=0x7ffed3fff700) at pthread_create.c:463\n#27 0x00007ffff5da888f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n```", "markup": "markdown", "html": "<p>Backtrace</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#0  0x00007ffff5e11db4 in __memcmp_avx2_movbe () at ../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S:265</span>\n<span class=\"cp\">#1  0x00007ffff6754bf8 in std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6</span>\n<span class=\"cp\">#2  0x00007ffff7b68b64 in std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (__lhs=&lt;error: Cannot access memory at address 0x3f&gt;, __rhs=&quot;/ariac/populate_belt&quot;) at /usr/include</span><span class=\"cpf\">/c++/7/bits/basic_string.h:6088</span><span class=\"cp\"></span>\n<span class=\"cp\">#3  0x00007ffff7b6b177 in std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator()(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (this=0x7ffff7dd33a0 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t+64&gt;, __x=&lt;error: Cannot access memory at address 0x3f&gt;, __y=&quot;/ariac/populate_belt&quot;) at /usr/include</span><span class=\"cpf\">/c++/7/bits/stl_function.h:386</span><span class=\"cp\"></span>\n<span class=\"cp\">#4  0x00007ffff4a42e4c in std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (this=0x7ffff7dd33a0 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t+64&gt;, __position=</span>\n        <span class=\"p\">{</span><span class=\"n\">first</span> <span class=\"o\">=</span> <span class=\"s\">&quot;/ariac/sensor_enable&quot;</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__cxx11</span><span class=\"o\">::</span><span class=\"n\">list</span> <span class=\"o\">=</span> <span class=\"p\">{[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef8000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef8000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff00000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff00000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff04000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff04000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffeec000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffeec000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c003320</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c001e80</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee0000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee0000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff000020e0</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff00001f30</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef0000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef0000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee4000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee4000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffedc000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffedc000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef4003560</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef4001f20</span><span class=\"p\">}}}},</span> <span class=\"n\">__k</span><span class=\"o\">=</span><span class=\"s\">&quot;/ariac/populate_belt&quot;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">stl_tree</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">2152</span>\n<span class=\"cp\">#5  0x00007ffff4a41b2f in std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) (this=0x7ffff7dd33a0 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t+64&gt;, __pos=</span>\n        <span class=\"p\">{</span><span class=\"n\">first</span> <span class=\"o\">=</span> <span class=\"s\">&quot;/ariac/sensor_enable&quot;</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__cxx11</span><span class=\"o\">::</span><span class=\"n\">list</span> <span class=\"o\">=</span> <span class=\"p\">{[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef8000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef8000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff00000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff00000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff04000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff04000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffeec000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffeec000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c003320</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff0c001e80</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee0000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee0000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff000020e0</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7fff00001f30</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef0000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef0000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee4000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffee4000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffedc000b20</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffedc000cc0</span><span class=\"p\">}},</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef4003560</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">pi_</span> <span class=\"o\">=</span> <span class=\"mh\">0x7ffef4001f20</span><span class=\"p\">}}}},</span> <span class=\"n\">__args</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"o\">=</span><span class=\"p\">...,</span> <span class=\"n\">__args</span><span class=\"err\">#</span><span class=\"mi\">1</span><span class=\"o\">=</span><span class=\"p\">...,</span> <span class=\"n\">__args</span><span class=\"err\">#</span><span class=\"mi\">2</span><span class=\"o\">=</span><span class=\"p\">...)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">stl_tree</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">2402</span>\n<span class=\"cp\">#6  0x00007ffff4a40629 in std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;) (this=0x7ffff7dd33a0 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t+64&gt;, __k=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/stl_map.h:512</span><span class=\"cp\"></span>\n<span class=\"cp\">#7  0x00007ffff4a3db4a in gazebo::transport::TopicManager::Subscribe(gazebo::transport::SubscribeOptions const&amp;) (this=0x7ffff7dd3360 &lt;SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance()::t&gt;, _ops=...) at /home/sloretz/ws/ariac/src/gazebo/gazebo/transport/TopicManager.cc:234</span>\n<span class=\"cp\">#8  0x00007fff345bb1d1 in gazebo::transport::Node::Subscribe&lt;gazebo::msgs::GzString, gazebo::PopulationPlugin&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, void (gazebo::PopulationPlugin::*)(boost::shared_ptr&lt;gazebo::msgs::GzString const&gt; const&amp;), gazebo::PopulationPlugin*, bool) (this=0x7fff04009e60, _topic=&quot;/ariac/populate_belt&quot;, _fp=</span>\n    <span class=\"p\">(</span><span class=\"kt\">void</span> <span class=\"p\">(</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">PopulationPlugin</span><span class=\"o\">::*</span><span class=\"p\">)(</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">PopulationPlugin</span> <span class=\"o\">*</span> <span class=\"k\">const</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">GzString</span> <span class=\"k\">const</span><span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span><span class=\"p\">))</span> <span class=\"mh\">0x7fff345b3078</span> <span class=\"o\">&lt;</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">PopulationPlugin</span><span class=\"o\">::</span><span class=\"n\">OnActivation</span><span class=\"p\">(</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">GzString</span> <span class=\"k\">const</span><span class=\"o\">&gt;</span> <span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">_obj</span><span class=\"o\">=</span><span class=\"mh\">0x7fff04001eb0</span><span class=\"p\">,</span> <span class=\"n\">_latching</span><span class=\"o\">=</span><span class=\"nb\">false</span><span class=\"p\">)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"mi\">9</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">215</span>\n<span class=\"cp\">#9  0x00007fff345b1543 in gazebo::PopulationPlugin::Load(boost::shared_ptr&lt;gazebo::physics::World&gt;, std::shared_ptr&lt;sdf::Element&gt;) (this=0x7fff04001eb0, _world=..., _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 11) = {...})</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">sloretz</span><span class=\"o\">/</span><span class=\"n\">ws</span><span class=\"o\">/</span><span class=\"n\">ariac</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ariac</span><span class=\"o\">/</span><span class=\"n\">osrf_gear</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">PopulationPlugin</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">267</span>\n<span class=\"cp\">#10 0x00007fff3c28f35b in gazebo::ROSPopulationPlugin::Load(boost::shared_ptr&lt;gazebo::physics::World&gt;, std::shared_ptr&lt;sdf::Element&gt;) (this=0x7fff04001eb0, _world=..., _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 11) = {...})</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">sloretz</span><span class=\"o\">/</span><span class=\"n\">ws</span><span class=\"o\">/</span><span class=\"n\">ariac</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ariac</span><span class=\"o\">/</span><span class=\"n\">osrf_gear</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ROSPopulationPlugin</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">91</span>\n<span class=\"cp\">#11 0x00007ffff52a12c4 in gazebo::physics::World::LoadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::shared_ptr&lt;sdf::Element&gt;) (this=0x5555565b5850, _filename=&quot;libROSPopulationPlugin.so&quot;, _name=&quot;populate_conveyor&quot;, _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 11) = {...}) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:1617</span>\n<span class=\"cp\">#12 0x00007ffff52a1656 in gazebo::physics::World::LoadPlugin(std::shared_ptr&lt;sdf::Element&gt;) (this=0x5555565b5850, _sdf=std::shared_ptr&lt;sdf::Element&gt; (use count 7, weak count 11) = {...}) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:1644</span>\n<span class=\"cp\">#13 0x00007ffff52a0e12 in gazebo::physics::World::LoadPlugins() (this=0x5555565b5850) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:1583</span>\n<span class=\"cp\">#14 0x00007ffff529b2b1 in gazebo::physics::World::Step() (this=0x5555565b5850) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:620</span>\n<span class=\"cp\">#15 0x00007ffff529aba5 in gazebo::physics::World::RunLoop() (this=0x5555565b5850) at /home/sloretz/ws/ariac/src/gazebo/gazebo/physics/World.cc:519</span>\n<span class=\"cp\">#16 0x00007ffff52ce952 in std::__invoke_impl&lt;void, void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;&gt;(std::__invoke_memfun_deref, void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;) (__f=@0x555556649d18: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff529a844 &lt;gazebo::physics::World::RunLoop()&gt;, __t=@0x555556649d28: 0x5555565b5850) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:73</span><span class=\"cp\"></span>\n<span class=\"cp\">#17 0x00007ffff52cca46 in std::__invoke&lt;void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;&gt;(void (gazebo::physics::World::*&amp;)(), gazebo::physics::World*&amp;) (__fn=@0x555556649d18: (void (gazebo::physics::World::*)(gazebo::physics::World * const)) 0x7ffff529a844 &lt;gazebo::physics::World::RunLoop()&gt;, __args#0=@0x555556649d28: 0x5555565b5850) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:95</span><span class=\"cp\"></span>\n<span class=\"cp\">#18 0x00007ffff52c8e31 in std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;::__call&lt;void, , 0ul&gt;(std::tuple&lt;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul&gt;) (this=0x555556649d18, __args=...) at /usr/include</span><span class=\"cpf\">/c++/7/functional:467</span><span class=\"cp\"></span>\n<span class=\"cp\">#19 0x00007ffff52c41ef in std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;::operator()&lt;, void&gt;() (this=0x555556649d18) at /usr/include</span><span class=\"cpf\">/c++/7/functional:551</span><span class=\"cp\"></span>\n<span class=\"cp\">#20 0x00007ffff52bf303 in std::__invoke_impl&lt;void, std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&gt;(std::__invoke_other, std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&amp;&amp;) (__f=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:60</span><span class=\"cp\"></span>\n<span class=\"cp\">#21 0x00007ffff52b6e4a in std::__invoke&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&gt;(std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt;&amp;&amp;) (__fn=...) at /usr/include</span><span class=\"cpf\">/c++/7/bits/invoke.h:95</span><span class=\"cp\"></span>\n<span class=\"cp\">#22 0x00007ffff52d5224 in std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt;::_M_invoke&lt;0ul&gt;(std::_Index_tuple&lt;0ul&gt;) (this=0x555556649d18) at /usr/include</span><span class=\"cpf\">/c++/7/thread:234</span><span class=\"cp\"></span>\n<span class=\"cp\">#23 0x00007ffff52d4152 in std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt;::operator()() (this=0x555556649d18) at /usr/include</span><span class=\"cpf\">/c++/7/thread:243</span><span class=\"cp\"></span>\n<span class=\"cp\">#24 0x00007ffff52d23c8 in std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void (gazebo::physics::World::*(gazebo::physics::World*))()&gt; &gt; &gt; &gt;::_M_run() (this=0x555556649d10) at /usr/include</span><span class=\"cpf\">/c++/7/thread:186</span><span class=\"cp\"></span>\n<span class=\"cp\">#25 0x00007ffff66eb57f in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6</span>\n<span class=\"cp\">#26 0x00007ffff56b26db in start_thread (arg=0x7ffed3fff700) at pthread_create.c:463</span>\n<span class=\"cp\">#27 0x00007ffff5da888f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-04T00:05:46.254518+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2019-04-04T00:05:46.268450+00:00", "type": "pullrequest_comment", "id": 97522241}