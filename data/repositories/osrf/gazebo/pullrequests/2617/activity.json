{"pagelen": 50, "values": [{"update": {"description": "While I was running tests to compare the states of two worlds I noticed two member variables in physics::Link which are never really used anywhere: *linearAccel* and *angularAccel*.\r\n\r\nTo explain how I found this and to reproduce the state comparison failure:\r\n\r\n- get the LinkState of one Link, e.g. ``LinkState s(yourLink);``\r\n- set another Link to the same state, i.e. ``otherLink->SetState(s); ``\r\n- get the new state of the second link, i.e. ``LinkState s2(otherLink);`` - both links should now have the same state.\r\n- compare the states ``s1`` and ``s2`` see that accelerations are *not* the same.\r\n\r\nReason why they are not: The LinkState is created from the states of Link::WorldLinearVel(), Link::WorldLinearAccel() etc., so from the states in *world frame* (see LinkState.cc constructor). However when the link is set to a specific state in Link::SetState, it uses Link::SetLinearAccel and Link::SetAngularAccel, which simply write the values in the member variables *linearAccel* and *angularAccel*. However... *those values are never read anywhere again*, in the whole code base. This is maybe a remnant of old times?\r\n\r\nI removed all functions related to setting accelerations and compiled/tested, which confirmed that the functions were actually never called from anywhere. Another reason for the removal is that setting accelerations explicitly from the Link interface doesn't make sense, this is something the physics engine determines. When an acceleration is to be applied to a body, a *force* should be used instead - this then determines acceleration in the next update step, and the resulting acceleration may (though in the ideal world should not) differ between engines.\r\nI am wondering whether this is also why setting the acceleration is not supported by any of the physics engine's Link subclasses (and which is why Link's SetLinear/AngularAccel is not virtual).\r\n\r\nOne remaining issue with the accelerations is that setting the state of a Link from LinkState will now just skip the acceleration value. But this never was working anyway: as it was, it was just setting the unused member variables; acceleration was always determined by the physics engines.\r\n\r\n**Additional suggestion**\r\n\r\nI would also like to suggest the following trivial changes to the interface, though I haven't included it in this PR yet:\r\nWould it maybe be better to rename functions\r\n\r\n* Link::SetLinearVel\r\n* Link::SetAngularVel\r\n* Link::SetForce and\r\n* Link::SetTorque\r\n\r\nto the following: \r\n\r\n* Link::SetWorldLinearVel\r\n* Link::SetWorldAngularVel\r\n* Link::SetWorldForce and\r\n* Link::SetWorldTorque.\r\n\r\nThis way they match with the getter names (e.g. Link::WorldLinearVel()) which further avoids confusion. From looking at the physics engine's Link implementations, that's what the methods are intended to do anyway: set the world velocity, not the relative velocity.", "title": "Remove two members in Link that are never really used and are confusing", "destination": {"commit": {"hash": "0d39ebf2b92b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0d39ebf2b92b.json"}, "html": {"href": "#!/osrf/gazebo/commits/0d39ebf2b92b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "Closed because outdated.", "source": {"commit": {"hash": "546dc906079c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/546dc906079c"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/546dc906079c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "remove_superfluous_link_acceleration_velocity"}}, "state": "DECLINED", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "date": "2017-03-27T06:29:17.876792+00:00"}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/33873263.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-33873263"}}, "parent": {"id": 33773457, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/33773457.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-33773457"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Yes I would say so. It's outdated. The methods will be removed with the next version anyway, as they are now deprecated.", "markup": "markdown", "html": "<p>Yes I would say so. It's outdated. The methods will be removed with the next version anyway, as they are now deprecated.</p>", "type": "rendered"}, "created_on": "2017-03-27T06:28:57.341684+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": "2017-03-27T06:28:57.377963+00:00", "type": "pullrequest_comment", "id": 33873263}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/33773457.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-33773457"}}, "parent": {"id": 30281270, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30281270.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30281270"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Pull request #2622 has been merged. Shall we decline this PR?", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/pull-requests/2622/deprecate-functions-to-set-linear-angular\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #2622</a> has been merged. Shall we decline this PR?</p>", "type": "rendered"}, "created_on": "2017-03-23T23:08:54.904588+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-03-23T23:08:54.907077+00:00", "type": "pullrequest_comment", "id": 33773457}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30281270.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30281270"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "To start with just deprecating the functions as discussed there is now pull request #2622\n\nWe can close this and re-open a similar PR later for Gazebo 10.", "markup": "markdown", "html": "<p>To start with just deprecating the functions as discussed there is now <a href=\"#!/osrf/gazebo/pull-requests/2622/deprecate-functions-to-set-linear-angular\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2622</a></p>\n<p>We can close this and re-open a similar PR later for Gazebo 10.</p>", "type": "rendered"}, "created_on": "2017-01-25T03:36:02.964052+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": "2017-01-25T03:36:45.221096+00:00", "type": "pullrequest_comment", "id": 30281270}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30256077.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30256077"}}, "parent": {"id": 30193447, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30193447.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30193447"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "So I've been thinking more about this and I'm ok with deprecating these functions if other reviewers are too. There's no point on keeping useless API around, if someone is using it, they will have a cycle to  implement their own functions, which as you said, is not a lot of work.\n\nI'll approve it if you make the changes :) Let me know if you need any guidance on doing the deprecations, it's basically just appending `GAZEBO_DEPRECATED(9.0)` to the function prototypes and adding explanation to the migration guide. Thanks!", "markup": "markdown", "html": "<p>So I've been thinking more about this and I'm ok with deprecating these functions if other reviewers are too. There's no point on keeping useless API around, if someone is using it, they will have a cycle to  implement their own functions, which as you said, is not a lot of work.</p>\n<p>I'll approve it if you make the changes :) Let me know if you need any guidance on doing the deprecations, it's basically just appending <code>GAZEBO_DEPRECATED(9.0)</code> to the function prototypes and adding explanation to the migration guide. Thanks!</p>", "type": "rendered"}, "created_on": "2017-01-24T17:37:00.708338+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-01-24T17:37:00.711127+00:00", "type": "pullrequest_comment", "id": 30256077}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30195295.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30195295"}}, "parent": {"id": 30193447, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30193447.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30193447"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Humm I'm not really sure what's the best thing to do now. The truth is that the physics API may change a lot between now and the gazebo9 release", "markup": "markdown", "html": "<p>Humm I'm not really sure what's the best thing to do now. The truth is that the physics API may change a lot between now and the gazebo9 release</p>", "type": "rendered"}, "created_on": "2017-01-23T23:44:58.019457+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-01-23T23:44:58.023174+00:00", "type": "pullrequest_comment", "id": 30195295}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30193447.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30193447"}}, "parent": {"id": 30106143, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30106143.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30106143"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Ok, sounds reasonable. Suppose the only argument for the radical removal approach is that the functions/variables don't do anything and seem a bit out of place... though one never knows if somebody may be using them anyway, and I totally see the point to give users one cycle to adjust their code. That makes sense and it's a sensible policy to have.\n\nIf you like I can make a PR with the deprecations. Or because it's such a tiny change you maybe prefer to just quickly do it yourself? Just let me know. We can then close this PR and re-submit this cleanup PR in a year or so.\n\n", "markup": "markdown", "html": "<p>Ok, sounds reasonable. Suppose the only argument for the radical removal approach is that the functions/variables don't do anything and seem a bit out of place... though one never knows if somebody may be using them anyway, and I totally see the point to give users one cycle to adjust their code. That makes sense and it's a sensible policy to have.</p>\n<p>If you like I can make a PR with the deprecations. Or because it's such a tiny change you maybe prefer to just quickly do it yourself? Just let me know. We can then close this PR and re-submit this cleanup PR in a year or so.</p>", "type": "rendered"}, "created_on": "2017-01-23T22:57:26.063538+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": "2017-01-23T22:57:26.114666+00:00", "type": "pullrequest_comment", "id": 30193447}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30106143.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30106143"}}, "parent": {"id": 30105946, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30105946.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30105946"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "I would vote for deprecating the functions on gazebo9 and only removing the functions and protected variables on gazebo10. The reasoning is that we give users one release cycle to adapt their code in case they're making use of the protected variables. But we've broken this kind of reasoning before...", "markup": "markdown", "html": "<p>I would vote for deprecating the functions on gazebo9 and only removing the functions and protected variables on gazebo10. The reasoning is that we give users one release cycle to adapt their code in case they're making use of the protected variables. But we've broken this kind of reasoning before...</p>", "type": "rendered"}, "created_on": "2017-01-20T22:28:13.669153+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-01-20T22:28:13.671196+00:00", "type": "pullrequest_comment", "id": 30106143}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30105946.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30105946"}}, "parent": {"id": 30105500, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30105500.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30105500"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "That is a fair point! Though only users who derive from Link could potentially make use of it, as there is no getters for those variables. People using the public accessors may have already noticed that it doesn't have an effect to use the functions...\n\nI agree that deprecating the functions first would be a better way to go. I haven't thought about users deriving from Link... it's probably easier for them to re-implement the simple functionality in their derived Link class though, but they will notice the removed functionality with the deprecation as well - one might hope they look at the warnings.\n\nIf we deprecate the functions, would it be OK to just print a warning and remove the actual functionality, i.e. just leave the function signatures but remove the variables? Or better we leave everything as is and just add deprecation?", "markup": "markdown", "html": "<p>That is a fair point! Though only users who derive from Link could potentially make use of it, as there is no getters for those variables. People using the public accessors may have already noticed that it doesn't have an effect to use the functions...</p>\n<p>I agree that deprecating the functions first would be a better way to go. I haven't thought about users deriving from Link... it's probably easier for them to re-implement the simple functionality in their derived Link class though, but they will notice the removed functionality with the deprecation as well - one might hope they look at the warnings.</p>\n<p>If we deprecate the functions, would it be OK to just print a warning and remove the actual functionality, i.e. just leave the function signatures but remove the variables? Or better we leave everything as is and just add deprecation?</p>", "type": "rendered"}, "created_on": "2017-01-20T22:21:11.587190+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": "2017-01-20T22:21:11.649147+00:00", "type": "pullrequest_comment", "id": 30105946}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30105678.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30105678"}}, "parent": {"id": 30093857, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30093857.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30093857"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Yes, unrelated, but the tests don't compile without it, will probably be fixed with the updated default soon separately?", "markup": "markdown", "html": "<p>Yes, unrelated, but the tests don't compile without it, will probably be fixed with the updated default soon separately?</p>", "type": "rendered"}, "created_on": "2017-01-20T22:12:22.906413+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "inline": {}, "updated_on": "2017-01-20T22:12:22.961392+00:00", "type": "pullrequest_comment", "id": 30105678}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30105500.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30105500"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Hi  @JenniferBuehler , thanks for the PR, we are in real need for more efforts to clean the physics API.\n\nI haven't thought much about the whole pull request yet, but I'll leave some comments here for now:\n\n1. These functions are public and the headers are installed, so users could be using them. This means we need to deprecate them before removing. We follow the [tick-tock](http://gazebosim.org/#status) release cycle, so we deprecate for one major release and remove the functions on the next major release. So in the very least, they need to be deprecated for Gazebo 9 and this should be documented in the `Migration.md` guide.\n\n1. I agree that these variables look like they're not useful. But only checking within the Gazebo source code is not enough indication that they're not used at all. User code could potentially be inheriting from the `Link` class and making use of these protected variables.\n\n", "markup": "markdown", "html": "<p>Hi  @JenniferBuehler , thanks for the PR, we are in real need for more efforts to clean the physics API.</p>\n<p>I haven't thought much about the whole pull request yet, but I'll leave some comments here for now:</p>\n<ol>\n<li>\n<p>These functions are public and the headers are installed, so users could be using them. This means we need to deprecate them before removing. We follow the <a data-is-external-link=\"true\" href=\"http://gazebosim.org/#status\" rel=\"nofollow\">tick-tock</a> release cycle, so we deprecate for one major release and remove the functions on the next major release. So in the very least, they need to be deprecated for Gazebo 9 and this should be documented in the <code>Migration.md</code> guide.</p>\n</li>\n<li>\n<p>I agree that these variables look like they're not useful. But only checking within the Gazebo source code is not enough indication that they're not used at all. User code could potentially be inheriting from the <code>Link</code> class and making use of these protected variables.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2017-01-20T22:06:28.630346+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-01-20T22:06:28.688179+00:00", "type": "pullrequest_comment", "id": 30105500}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30104965.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30104965"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "I think the formula in WorldAngularAccel() can be rewritten as `I * a + w x L`\n\n\n```\n#!c++\n\nthis->SetTorque(this->WorldInertiaMatrix() * _accel + this->WorldAngularVel().Cross(this->WorldAngularMomentum()));\n```\n", "markup": "markdown", "html": "<p>I think the formula in WorldAngularAccel() can be rewritten as <code>I * a + w x L</code></p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">SetTorque</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">WorldInertiaMatrix</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"n\">_accel</span> <span class=\"o\">+</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">WorldAngularVel</span><span class=\"p\">().</span><span class=\"n\">Cross</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">WorldAngularMomentum</span><span class=\"p\">()));</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-01-20T21:51:06.914906+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-01-20T21:51:06.917111+00:00", "type": "pullrequest_comment", "id": 30104965}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30104555.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30104555"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Could SetLinearAccel be made to work by setting the force on the link?\n\n```\n#!c++\n\nthis->SetForce(this->inertial->Mass() * _accel);\n```\n", "markup": "markdown", "html": "<p>Could SetLinearAccel be made to work by setting the force on the link?</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">SetForce</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">inertial</span><span class=\"o\">-&gt;</span><span class=\"n\">Mass</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"n\">_accel</span><span class=\"p\">);</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-01-20T21:40:28.166107+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-01-20T21:40:28.169572+00:00", "type": "pullrequest_comment", "id": 30104555}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30096613.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30096613"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "I think the additional suggestion of renaming the methods should become it's own PR.", "markup": "markdown", "html": "<p>I think the additional suggestion of renaming the methods should become it's own PR.</p>", "type": "rendered"}, "created_on": "2017-01-20T18:37:45.048374+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-01-20T18:37:45.051517+00:00", "type": "pullrequest_comment", "id": 30096613}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617/comments/30093857.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617/_/diff#comment-30093857"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}, "content": {"raw": "Seems unrelated to removing linearAccel and angularAccel, but I don't see anything wrong with these changes either. ", "markup": "markdown", "html": "<p>Seems unrelated to removing linearAccel and angularAccel, but I don't see anything wrong with these changes either. </p>", "type": "rendered"}, "created_on": "2017-01-20T17:33:11.949364+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-01-20T17:33:11.953538+00:00", "type": "pullrequest_comment", "id": 30093857}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"update": {"description": "While I was running tests to compare the states of two worlds I noticed two member variables in physics::Link which are never really used anywhere: *linearAccel* and *angularAccel*.\r\n\r\nTo explain how I found this and to reproduce the state comparison failure:\r\n\r\n- get the LinkState of one Link, e.g. ``LinkState s(yourLink);``\r\n- set another Link to the same state, i.e. ``otherLink->SetState(s); ``\r\n- get the new state of the second link, i.e. ``LinkState s2(otherLink);`` - both links should now have the same state.\r\n- compare the states ``s1`` and ``s2`` see that accelerations are *not* the same.\r\n\r\nReason why they are not: The LinkState is created from the states of Link::WorldLinearVel(), Link::WorldLinearAccel() etc., so from the states in *world frame* (see LinkState.cc constructor). However when the link is set to a specific state in Link::SetState, it uses Link::SetLinearAccel and Link::SetAngularAccel, which simply write the values in the member variables *linearAccel* and *angularAccel*. However... *those values are never read anywhere again*, in the whole code base. This is maybe a remnant of old times?\r\n\r\nI removed all functions related to setting accelerations and compiled/tested, which confirmed that the functions were actually never called from anywhere. Another reason for the removal is that setting accelerations explicitly from the Link interface doesn't make sense, this is something the physics engine determines. When an acceleration is to be applied to a body, a *force* should be used instead - this then determines acceleration in the next update step, and the resulting acceleration may (though in the ideal world should not) differ between engines.\r\nI am wondering whether this is also why setting the acceleration is not supported by any of the physics engine's Link subclasses (and which is why Link's SetLinear/AngularAccel is not virtual).\r\n\r\nOne remaining issue with the accelerations is that setting the state of a Link from LinkState will now just skip the acceleration value. But this never was working anyway: as it was, it was just setting the unused member variables; acceleration was always determined by the physics engines.\r\n\r\n**Additional suggestion**\r\n\r\nI would also like to suggest the following trivial changes to the interface, though I haven't included it in this PR yet:\r\nWould it maybe be better to rename functions\r\n\r\n* Link::SetLinearVel\r\n* Link::SetAngularVel\r\n* Link::SetForce and\r\n* Link::SetTorque\r\n\r\nto the following: \r\n\r\n* Link::SetWorldLinearVel\r\n* Link::SetWorldAngularVel\r\n* Link::SetWorldForce and\r\n* Link::SetWorldTorque.\r\n\r\nThis way they match with the getter names (e.g. Link::WorldLinearVel()) which further avoids confusion. From looking at the physics engine's Link implementations, that's what the methods are intended to do anyway: set the world velocity, not the relative velocity.", "title": "Remove two members in Link that are never really used and are confusing", "destination": {"commit": {"hash": "8d35d7d913a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8d35d7d913a3.json"}, "html": {"href": "#!/osrf/gazebo/commits/8d35d7d913a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "546dc906079c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/546dc906079c"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/546dc906079c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "remove_superfluous_link_acceleration_velocity"}}, "state": "OPEN", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "date": "2017-01-19T06:29:30.221154+00:00"}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}, {"update": {"description": "While I was running tests to compare the states of two worlds I noticed two member variables in physics::Link which are never really used anywhere: *linearAccel* and *angularAccel*.\r\n\r\nTo explain how I found this and to reproduce the state comparison failure:\r\n\r\n- get the LinkState of one Link, e.g. ``LinkState s(yourLink);``\r\n- set another Link to the same state, i.e. ``otherLink->SetState(s); ``\r\n- get the new state of the second link, i.e. ``LinkState s2(otherLink);`` - both links should now have the same state.\r\n- compare the states ``s1`` and ``s2`` see that accelerations are *not* the same.\r\n\r\nReason why they are not: The LinkState is created from the states of Link::WorldLinearVel(), Link::WorldLinearAccel() etc., so from the states in *world frame* (see LinkState.cc constructor). However when the link is set to a specific state in Link::SetState, it uses Link::SetLinearAccel and Link::SetAngularAccel, which simply write the values in the member variables *linearAccel* and *angularAccel*. However... *those values are never read anywhere again*, in the whole code base. This is maybe a remnant of old times?\r\n\r\nI removed all functions related to setting accelerations and compiled/tested, which confirmed that the functions were actually never called from anywhere. Another reason for the removal is that setting accelerations explicitly from the Link interface doesn't make sense, this is something the physics engine determines. When an acceleration is to be applied to a body, a *force* should be used instead - this then determines acceleration in the next update step, and the resulting acceleration may (though in the ideal world should not) differ between engines.\r\nI am wondering whether this is also why setting the acceleration is not supported by any of the physics engine's Link subclasses (and which is why Link's SetLinear/AngularAccel is not virtual).\r\n\r\nOne remaining issue with the accelerations is that setting the state of a Link from LinkState will now just skip the acceleration value. But this never was working anyway: as it was, it was just setting the unused member variables; acceleration was always determined by the physics engines.\r\n\r\n**Additional suggestion**\r\n\r\nI would also like to suggest the following trivial changes to the interface, though I haven't included it in this PR yet:\r\nWould it maybe be better to rename functions\r\n\r\n* Link::SetLinearVel\r\n* Link::SetAngularVel\r\n* Link::SetForce and\r\n* Link::SetTorque\r\n\r\nto the following: \r\n\r\n* Link::SetWorldLinearVel\r\n* Link::SetWorldAngularVel\r\n* Link::SetWorldForce and\r\n* Link::SetWorldTorque.\r\n\r\nThis way they match with the getter names (e.g. Link::WorldLinearVel()) which further avoids confusion. From looking at the physics engine's Link implementations, that's what the methods are intended to do anyway: set the world velocity, not the relative velocity.", "title": "Remove two members in Link that are never really used and are confusing", "destination": {"commit": {"hash": "8d35d7d913a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8d35d7d913a3.json"}, "html": {"href": "#!/osrf/gazebo/commits/8d35d7d913a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "546dc906079c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo/commit/546dc906079c"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo/commits/546dc906079c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/JenniferBuehler/gazebo"}, "html": {"href": "https://bitbucket.org/JenniferBuehler/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{11522dd5-648b-4e9e-b908-d3e1170ba728}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "JenniferBuehler/gazebo", "uuid": "{11522dd5-648b-4e9e-b908-d3e1170ba728}"}, "branch": {"name": "remove_superfluous_link_acceleration_velocity"}}, "state": "OPEN", "author": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "date": "2017-01-19T06:29:30.197949+00:00"}, "pull_request": {"type": "pullrequest", "id": 2617, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2617.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2617"}}, "title": "Remove two members in Link that are never really used and are confusing"}}]}