{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1909/comments/10263161.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1909/_/diff#comment-10263161"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1909, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1909.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1909"}}, "title": "Update inertia properties during simulation: part 1"}, "content": {"raw": "Hi, Steve. Simbody maintains mass properties as (mass, center of mass, *unit* inertia) so changing the mass has the effect of updating the inertia properties also. (Not sure why everyone doesn't do it that way -- everyone stores the COM mass-unweighted; it is inconsistent to apply the mass to the second mass moment but not the first, which is m*COM.)\n\nFor a SimbodyLink, you would get writable access to the corresponding `SimTK::MobilizedBody`, which is (conceptually) a (body,joint) pair. To get writable access to the contained `SimTK::Body`, use mobod.updBody(). Then:\n```c++\nBody& body = mobod.updBody();\nconst MassProperties& old = body.getDefaultRigidBodyMassProperties();\nbody.setDefaultRigidBodyMassProperties(MassProperties(newmass, old.getMassCenter(), old.getUnitInertia());\n``` \n\nCurrently that's the only way to change mass properties in an already-built Simbody MultibodySystem. Because it is changing the \"default\" mass properties it is considered a topological change to the *System* and requires reinitializing the system and state. That might be too extreme for what you have in mind. I have on my things-to-do list to allow changing the mass props within an existing State, leaving the system alone. If that turns out to be necessary, please file a Simbody issue; I don't think there is one currently.\n\nRegards,\nSherm", "markup": "markdown", "html": "<p>Hi, Steve. Simbody maintains mass properties as (mass, center of mass, <em>unit</em> inertia) so changing the mass has the effect of updating the inertia properties also. (Not sure why everyone doesn't do it that way -- everyone stores the COM mass-unweighted; it is inconsistent to apply the mass to the second mass moment but not the first, which is m*COM.)</p>\n<p>For a SimbodyLink, you would get writable access to the corresponding <code>SimTK::MobilizedBody</code>, which is (conceptually) a (body,joint) pair. To get writable access to the contained <code>SimTK::Body</code>, use mobod.updBody(). Then:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">Body</span><span class=\"o\">&amp;</span> <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">mobod</span><span class=\"p\">.</span><span class=\"n\">updBody</span><span class=\"p\">();</span>\n<span class=\"k\">const</span> <span class=\"n\">MassProperties</span><span class=\"o\">&amp;</span> <span class=\"n\">old</span> <span class=\"o\">=</span> <span class=\"n\">body</span><span class=\"p\">.</span><span class=\"n\">getDefaultRigidBodyMassProperties</span><span class=\"p\">();</span>\n<span class=\"n\">body</span><span class=\"p\">.</span><span class=\"n\">setDefaultRigidBodyMassProperties</span><span class=\"p\">(</span><span class=\"n\">MassProperties</span><span class=\"p\">(</span><span class=\"n\">newmass</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">.</span><span class=\"n\">getMassCenter</span><span class=\"p\">(),</span> <span class=\"n\">old</span><span class=\"p\">.</span><span class=\"n\">getUnitInertia</span><span class=\"p\">());</span>\n</pre></div>\n\n\n<p>Currently that's the only way to change mass properties in an already-built Simbody MultibodySystem. Because it is changing the \"default\" mass properties it is considered a topological change to the <em>System</em> and requires reinitializing the system and state. That might be too extreme for what you have in mind. I have on my things-to-do list to allow changing the mass props within an existing State, leaving the system alone. If that turns out to be necessary, please file a Simbody issue; I don't think there is one currently.</p>\n<p>Regards,\nSherm</p>", "type": "rendered"}, "created_on": "2015-09-26T01:31:23.482555+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2015-09-26T01:32:21.230800+00:00", "type": "pullrequest_comment", "id": 10263161}