{"pagelen": 50, "values": [{"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "86b8dcf6a5b1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/86b8dcf6a5b1.json"}, "html": {"href": "#!/osrf/gazebo/commits/86b8dcf6a5b1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e2d982bdbb61", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/e2d982bdbb61"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/e2d982bdbb61"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "MERGED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-07T14:20:05.569689+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "86b8dcf6a5b1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/86b8dcf6a5b1.json"}, "html": {"href": "#!/osrf/gazebo/commits/86b8dcf6a5b1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e2d982bdbb61", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/e2d982bdbb61"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/e2d982bdbb61"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-07T14:18:52.335737+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "07fcf3c9672c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/07fcf3c9672c.json"}, "html": {"href": "#!/osrf/gazebo/commits/07fcf3c9672c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bc3e08061f0f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/bc3e08061f0f"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/bc3e08061f0f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-06T21:22:26.726637+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "07fcf3c9672c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/07fcf3c9672c.json"}, "html": {"href": "#!/osrf/gazebo/commits/07fcf3c9672c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8b3beea4d83c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/8b3beea4d83c"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/8b3beea4d83c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-06T21:21:08.976015+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "07fcf3c9672c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/07fcf3c9672c.json"}, "html": {"href": "#!/osrf/gazebo/commits/07fcf3c9672c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fba82995c704", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/fba82995c704"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/fba82995c704"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-06T21:17:54.265558+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "07fcf3c9672c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/07fcf3c9672c.json"}, "html": {"href": "#!/osrf/gazebo/commits/07fcf3c9672c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "719ddbd3aa99", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/719ddbd3aa99"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/719ddbd3aa99"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-06T15:59:11.778625+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "07fcf3c9672c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/07fcf3c9672c.json"}, "html": {"href": "#!/osrf/gazebo/commits/07fcf3c9672c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dee729df4d60", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/dee729df4d60"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/dee729df4d60"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-06T15:56:27.126185+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16864116.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16864116"}}, "parent": {"id": 16863873, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16863873.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16863873"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "I have commit access to this repo, so I'll make the changes pre-merge.", "markup": "markdown", "html": "<p>I have commit access to this repo, so I'll make the changes pre-merge.</p>", "type": "rendered"}, "created_on": "2016-04-06T14:39:37.881789+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-04-06T14:39:37.890907+00:00", "type": "pullrequest_comment", "id": 16864116}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "07fcf3c9672c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/07fcf3c9672c.json"}, "html": {"href": "#!/osrf/gazebo/commits/07fcf3c9672c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b9e7304d81f5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/b9e7304d81f5"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/b9e7304d81f5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-06T14:39:24.248624+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16863873.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16863873"}}, "parent": {"id": 16827594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16827594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16827594"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Yeah. I'll take care of those right after the merge.", "markup": "markdown", "html": "<p>Yeah. I'll take care of those right after the merge.</p>", "type": "rendered"}, "created_on": "2016-04-06T14:35:52.227716+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-04-06T14:35:52.233060+00:00", "type": "pullrequest_comment", "id": 16863873}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16827594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16827594"}}, "parent": {"id": 16802298, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16802298.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16802298"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "there's a few test failures and warnings\n\n* http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/295/\n\nShould we address those after merging?", "markup": "markdown", "html": "<p>there's a few test failures and warnings</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/295/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/295/</a></li>\n</ul>\n<p>Should we address those after merging?</p>", "type": "rendered"}, "created_on": "2016-04-06T00:05:14.498481+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-04-06T00:05:14.500576+00:00", "type": "pullrequest_comment", "id": 16827594}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16802298.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16802298"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "This will be merged by 4pm today.", "markup": "markdown", "html": "<p>This will be merged by 4pm today.</p>", "type": "rendered"}, "created_on": "2016-04-05T15:34:55.898632+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-04-05T15:35:00.515146+00:00", "type": "pullrequest_comment", "id": 16802298}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "0cc955fdbe12", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0cc955fdbe12.json"}, "html": {"href": "#!/osrf/gazebo/commits/0cc955fdbe12"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e41e47f5ecc4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/e41e47f5ecc4"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/e41e47f5ecc4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-04-05T14:53:53.875452+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "0cc955fdbe12", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0cc955fdbe12.json"}, "html": {"href": "#!/osrf/gazebo/commits/0cc955fdbe12"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "81fe8bb3b9e7", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/81fe8bb3b9e7"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/81fe8bb3b9e7"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-04-05T14:51:40.798785+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "13a4b72180d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/13a4b72180d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/13a4b72180d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "96bf774f5a70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/96bf774f5a70"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/96bf774f5a70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-01T15:33:33.272578+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16588953.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16588953"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "[No gpu](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-trusty-amd64-gpu-none/281/)\n\n[Homebrew](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64/295/)\n\n[Nvidia](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-trusty-amd64-gpu-nvidia/271/]", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-trusty-amd64-gpu-none/281/\" rel=\"nofollow\">No gpu</a></p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64/295/\" rel=\"nofollow\">Homebrew</a></p>\n<p>[Nvidia](<a href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-trusty-amd64-gpu-nvidia/271/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-trusty-amd64-gpu-nvidia/271/</a>]</p>", "type": "rendered"}, "created_on": "2016-04-01T15:05:36.517037+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-04-01T15:05:36.523668+00:00", "type": "pullrequest_comment", "id": 16588953}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "13a4b72180d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/13a4b72180d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/13a4b72180d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0f4e8c81e29d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/0f4e8c81e29d"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/0f4e8c81e29d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-01T15:00:24.740498+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "13a4b72180d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/13a4b72180d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/13a4b72180d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9dba2ad76057", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/9dba2ad76057"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/9dba2ad76057"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-01T14:48:57.476440+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16586272.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16586272"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Can we have another person look at this pull request please?", "markup": "markdown", "html": "<p>Can we have another person look at this pull request please?</p>", "type": "rendered"}, "created_on": "2016-04-01T14:28:34.678578+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-04-01T14:28:34.681545+00:00", "type": "pullrequest_comment", "id": 16586272}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16272148.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16272148"}}, "parent": {"id": 16261797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16261797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16261797"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Yes, it will go into gazebo 8.", "markup": "markdown", "html": "<p>Yes, it will go into gazebo 8.</p>", "type": "rendered"}, "created_on": "2016-03-25T14:25:16.488879+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-03-25T14:25:16.490997+00:00", "type": "pullrequest_comment", "id": 16272148}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/16261797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-16261797"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "This is a great feature! Is it targeted for Gazebo 8?", "markup": "markdown", "html": "<p>This is a great feature! Is it targeted for Gazebo 8?</p>", "type": "rendered"}, "created_on": "2016-03-25T09:23:37.525199+00:00", "user": {"display_name": "Nicolae Rosia", "uuid": "{47441263-bb15-495f-b324-58a1e3c7b35f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D"}, "html": {"href": "https://bitbucket.org/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1b61ff7ec618b3e8743b8ab9743e4108d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNR-6.png"}}, "nickname": "nicolaerosia", "type": "user", "account_id": "557058:2ea02a3a-4b8d-4620-8154-81f2eb2f71af"}, "updated_on": "2016-03-25T09:23:37.575188+00:00", "type": "pullrequest_comment", "id": 16261797}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"approval": {"date": "2016-03-15T16:43:19.078554+00:00", "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "5f6e4ad4f747", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f6e4ad4f747.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f6e4ad4f747"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c3a982dbecad", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/c3a982dbecad"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/c3a982dbecad"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-03-15T16:20:37.077435+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "5f6e4ad4f747", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f6e4ad4f747.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f6e4ad4f747"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d5089893c4f7", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/d5089893c4f7"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/d5089893c4f7"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-03-15T16:16:03.111792+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "915cdf08e97c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/915cdf08e97c.json"}, "html": {"href": "#!/osrf/gazebo/commits/915cdf08e97c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f7bf0e42d5ba", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/f7bf0e42d5ba"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/f7bf0e42d5ba"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-03-14T17:47:01.712559+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "915cdf08e97c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/915cdf08e97c.json"}, "html": {"href": "#!/osrf/gazebo/commits/915cdf08e97c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f7bf0e42d5ba", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/f7bf0e42d5ba"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/f7bf0e42d5ba"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-03-14T17:47:01.599172+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "61136bf84197", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/61136bf84197.json"}, "html": {"href": "#!/osrf/gazebo/commits/61136bf84197"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f7bf0e42d5ba", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/f7bf0e42d5ba"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/f7bf0e42d5ba"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-24T14:28:45.673846+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14512373.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14512373"}}, "parent": {"id": 14474326, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14474326.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14474326"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Thanks, it has now been fixed. The algorithm assumes a direction in degrees but it was given in radians.", "markup": "markdown", "html": "<p>Thanks, it has now been fixed. The algorithm assumes a direction in degrees but it was given in radians.</p>", "type": "rendered"}, "created_on": "2016-02-12T13:27:43.856496+00:00", "user": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "updated_on": "2016-02-12T13:27:44.003640+00:00", "type": "pullrequest_comment", "id": 14512373}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "d96b95902724", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d96b95902724.json"}, "html": {"href": "#!/osrf/gazebo/commits/d96b95902724"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5a5a2a7df238", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/5a5a2a7df238"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/5a5a2a7df238"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-12T13:25:59.238324+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14474326.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14474326"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Do you know why the `wind_demo_model` will only move along the `x-axis`? For example, if I set the wind speed to be `<0, 100, 0>` the demo model will still point along the x-axis.", "markup": "markdown", "html": "<p>Do you know why the <code>wind_demo_model</code> will only move along the <code>x-axis</code>? For example, if I set the wind speed to be <code>&lt;0, 100, 0&gt;</code> the demo model will still point along the x-axis.</p>", "type": "rendered"}, "created_on": "2016-02-11T17:49:50.502403+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-02-11T17:49:50.504860+00:00", "type": "pullrequest_comment", "id": 14474326}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14474268.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14474268"}}, "parent": {"id": 14447743, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14447743.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14447743"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Thanks.", "markup": "markdown", "html": "<p>Thanks.</p>", "type": "rendered"}, "created_on": "2016-02-11T17:48:28.635415+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-02-11T17:48:28.643148+00:00", "type": "pullrequest_comment", "id": 14474268}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14447743.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14447743"}}, "parent": {"id": 14420662, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14420662.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14420662"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Done.", "markup": "markdown", "html": "<p>Done.</p>", "type": "rendered"}, "created_on": "2016-02-11T09:04:47.530913+00:00", "user": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "updated_on": "2016-02-11T09:04:47.566450+00:00", "type": "pullrequest_comment", "id": 14447743}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "d96b95902724", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d96b95902724.json"}, "html": {"href": "#!/osrf/gazebo/commits/d96b95902724"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3060696f457a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/3060696f457a"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/3060696f457a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-11T09:04:10.674965+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14420662.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14420662"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "@ocrave is it possible to enable the `enable_wind` check box at the model level? For example, if I select `wind_demo_model`, I can only check/uncheck `enable_wind` for each individual link but not the whole model.", "markup": "markdown", "html": "<p>@ocrave is it possible to enable the <code>enable_wind</code> check box at the model level? For example, if I select <code>wind_demo_model</code>, I can only check/uncheck <code>enable_wind</code> for each individual link but not the whole model.</p>", "type": "rendered"}, "created_on": "2016-02-10T17:06:47.950322+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-02-10T17:06:47.958382+00:00", "type": "pullrequest_comment", "id": 14420662}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "d96b95902724", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d96b95902724.json"}, "html": {"href": "#!/osrf/gazebo/commits/d96b95902724"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a691f47c93e5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/a691f47c93e5"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/a691f47c93e5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-05T10:10:14.701667+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14136998.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14136998"}}, "parent": {"id": 13866582, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13866582.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13866582"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "cc176d8", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/commits/cc176d8\" rel=\"nofollow\" class=\"ap-connect-link\">cc176d8</a></p>", "type": "rendered"}, "created_on": "2016-02-02T21:21:27.820209+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-02-02T21:21:27.822332+00:00", "type": "pullrequest_comment", "id": 14136998}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "a3381efd37af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3381efd37af.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3381efd37af"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cc176d83201f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/cc176d83201f"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/cc176d83201f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-02T08:55:52.046908+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14099591.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14099591"}}, "parent": {"id": 13865202, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13865202.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13865202"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "I don't see any reason to have two ways to access wind parameters. The `SetParam()/Param()` accessors have been removed.", "markup": "markdown", "html": "<p>I don't see any reason to have two ways to access wind parameters. The <code>SetParam()/Param()</code> accessors have been removed.</p>", "type": "rendered"}, "created_on": "2016-02-02T08:34:54.253756+00:00", "user": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "updated_on": "2016-02-02T08:34:54.305310+00:00", "type": "pullrequest_comment", "id": 14099591}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "a3381efd37af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3381efd37af.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3381efd37af"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5de376e2c5aa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/5de376e2c5aa"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/5de376e2c5aa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-02T08:30:59.642481+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "a3381efd37af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3381efd37af.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3381efd37af"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "de9b6ce05e89", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/de9b6ce05e89"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/de9b6ce05e89"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-02T08:27:59.035917+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "a3381efd37af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3381efd37af.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3381efd37af"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cc32d0b679dd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/cc32d0b679dd"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/cc32d0b679dd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-02-02T08:21:28.826182+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "798806a5ccd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/798806a5ccd0.json"}, "html": {"href": "#!/osrf/gazebo/commits/798806a5ccd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "96707bdbcab5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/96707bdbcab5"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/96707bdbcab5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-01-29T15:12:04.455459+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/14003639.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-14003639"}}, "parent": {"id": 13779021, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13779021.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13779021"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "The wind example has been updated. It now consists of 10 spheres attached to each others with ball joints. The LiftDragPlugin is not used anymore. Any changes are welcome.", "markup": "markdown", "html": "<p>The wind example has been updated. It now consists of 10 spheres attached to each others with ball joints. The LiftDragPlugin is not used anymore. Any changes are welcome.</p>", "type": "rendered"}, "created_on": "2016-01-29T14:42:37.637169+00:00", "user": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "inline": {}, "updated_on": "2016-01-29T14:42:37.760900+00:00", "type": "pullrequest_comment", "id": 14003639}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"update": {"description": "Gazebo does not have a Wind class. This pull request provides a simple Wind class whose default behavior can be overriden by a plugin.\r\n\r\nThe global wind parameters are defined in the SDF file, they consist of the wind linear velocity. The Wind class is instantiated once during World initialization. A plugin can access the Wind singleton with ```World::GetWind()``` and change its method of computation by specifying a custom function with ```Wind::SetLinearVelFunc(std::function<ignition::math::Vector3d (const WindPtr &, const Entity *_entity)> _linearVelFunc)```.\r\n\r\nThe wind velocity at a link position in space is updated before each simulation iteration by calling ```Wind::WorldLinearVel(const Entity *_entity)``` during world update. This method takes the entity itself as a parameter and returns the wind linear velocity at entity's current location. This operation is only performed if the wind is enabled globally and if the link is defined to be affected by it. Internally, this method calls the function that was determined by ```Wind::SetLinearVelFunc(...)```.\r\n\r\nIf it gets accepted, this feature would require two new optional sections in the link and world SDF files  (see related pull request [#240](https://bitbucket.org/osrf/sdformat/pull-requests/240/new-element/diff) in sdformat):\r\n\r\n```\r\n#!xml\r\n<world name=\"default\">\r\n  <wind>\r\n    <linear_velocity>11 11 0</linear_velocity> <!-- Wind linear velocity -->\r\n  </wind>\r\n  <model name=\"model\">\r\n    <link name=\"link\">\r\n      <wind>true</<wind>\r\n    </link>\r\n  </model>\r\n</world>\r\n```\r\n\r\nAt the client side, the wind parameters are displayed in the property tree browser. Wind velocity for a selected link only appears in its corresponding property tree if the wind is enabled for this link.\r\n\r\nA plugin example can be found in `plugins/WindPlugin.cc`. Its corresponding world is `worlds/wind_demo.world`.", "title": "Added wind support", "destination": {"commit": {"hash": "798806a5ccd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/798806a5ccd0.json"}, "html": {"href": "#!/osrf/gazebo/commits/798806a5ccd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0bd92fb95f3a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo/commit/0bd92fb95f3a"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo/commits/0bd92fb95f3a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ocrave/gazebo"}, "html": {"href": "https://bitbucket.org/ocrave/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f2b7e0a0-04ff-4851-9879-a852a70325b2}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ocrave/gazebo", "uuid": "{f2b7e0a0-04ff-4851-9879-a852a70325b2}"}, "branch": {"name": "wind"}}, "state": "OPEN", "author": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "date": "2016-01-29T14:29:49.606590+00:00"}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13866582.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13866582"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "A few minor style errors when running `sh toos/code_check.sh`:\n\n```\n./plugins/WindPlugin.cc:51:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:55:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:59:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:63:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:67:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:71:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:79:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:83:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:87:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:91:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:95:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:100:  Missing space before ( in if(  [whitespace/parens] [5]\n./gazebo/physics/Wind.hh:121:  Missing spaces around <  [whitespace/operators] [3]\n./gazebo/physics/WindPrivate.hh:58:  Missing spaces around <  [whitespace/operators] [3]\nTotal errors found: 14\n#!c++\n\n\n```", "markup": "markdown", "html": "<p>A few minor style errors when running <code>sh toos/code_check.sh</code>:</p>\n<div class=\"codehilite\"><pre><span></span>./plugins/WindPlugin.cc:51:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:55:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:59:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:63:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:67:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:71:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:79:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:83:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:87:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:91:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:95:  Missing space before ( in if(  [whitespace/parens] [5]\n./plugins/WindPlugin.cc:100:  Missing space before ( in if(  [whitespace/parens] [5]\n./gazebo/physics/Wind.hh:121:  Missing spaces around &lt;  [whitespace/operators] [3]\n./gazebo/physics/WindPrivate.hh:58:  Missing spaces around &lt;  [whitespace/operators] [3]\nTotal errors found: 14\n#!c++\n</pre></div>", "type": "rendered"}, "created_on": "2016-01-26T18:29:23.416779+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-01-26T18:29:33.064029+00:00", "type": "pullrequest_comment", "id": 13866582}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13865644.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13865644"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Could you add the `#include <boost/any.hpp>` in the files that use `boost::any`?", "markup": "markdown", "html": "<p>Could you add the <code>#include &lt;boost/any.hpp&gt;</code> in the files that use <code>boost::any</code>?</p>", "type": "rendered"}, "created_on": "2016-01-26T18:09:14.912114+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-01-26T18:09:14.914118+00:00", "type": "pullrequest_comment", "id": 13865644}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13865456.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13865456"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Could you document these member variables for consistency?", "markup": "markdown", "html": "<p>Could you document these member variables for consistency?</p>", "type": "rendered"}, "created_on": "2016-01-26T18:04:39.896974+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-01-26T18:04:39.900008+00:00", "type": "pullrequest_comment", "id": 13865456}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13865436.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13865436"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Replace `_wind` with `_entity`.", "markup": "markdown", "html": "<p>Replace <code>_wind</code> with <code>_entity</code>.</p>", "type": "rendered"}, "created_on": "2016-01-26T18:04:13.240080+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-01-26T18:04:13.243593+00:00", "type": "pullrequest_comment", "id": 13865436}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13865348.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13865348"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "`_entity` instead of `_wind`.", "markup": "markdown", "html": "<p><code>_entity</code> instead of <code>_wind</code>.</p>", "type": "rendered"}, "created_on": "2016-01-26T18:01:45.740414+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-01-26T18:01:45.742795+00:00", "type": "pullrequest_comment", "id": 13865348}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985/comments/13865249.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985/_/diff#comment-13865249"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}, "content": {"raw": "Just use 2016 instead of 2012-2015 for new files.", "markup": "markdown", "html": "<p>Just use 2016 instead of 2012-2015 for new files.</p>", "type": "rendered"}, "created_on": "2016-01-26T17:59:19.001673+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-01-26T17:59:19.004028+00:00", "type": "pullrequest_comment", "id": 13865249}, "pull_request": {"type": "pullrequest", "id": 1985, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1985.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1985"}}, "title": "Added wind support"}}], "next": "data/repositories/osrf/gazebo/pullrequests/1985/activity_ctx=qkujsrUo.json"}