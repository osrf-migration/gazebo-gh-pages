{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1008/comments/1421703.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1008/_/diff#comment-1421703"}}, "parent": {"id": 1421607, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1008/comments/1421607.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1008/_/diff#comment-1421607"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1008, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1008.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1008"}}, "title": "implement bullet screw joint"}, "content": {"raw": "Take a look at 5eda34b for a different fix.\n\nThe `math::equal` function defaults to a resolution of 1e-6. For this pull request, that would 1e-6 radians. If that's not a fine enough resolution, you can add a third parameter to `math::equal` with a different resolution.", "markup": "markdown", "html": "<p>Take a look at <a href=\"#!/osrf/gazebo/commits/5eda34b\" rel=\"nofollow\" class=\"ap-connect-link\">5eda34b</a> for a different fix.</p>\n<p>The <code>math::equal</code> function defaults to a resolution of 1e-6. For this pull request, that would 1e-6 radians. If that's not a fine enough resolution, you can add a third parameter to <code>math::equal</code> with a different resolution.</p>", "type": "rendered"}, "created_on": "2014-03-13T22:34:05.109695+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2014-03-13T22:34:05.118417+00:00", "type": "pullrequest_comment", "id": 1421703}