{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1970/comments/11370721.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/engine90/gazebo:d464d0cc55e6..45e243efd528?path=gazebo%2Fphysics%2FJointController.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1970/_/diff#comment-11370721"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1970, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1970.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1970"}}, "title": "issue936"}, "content": {"raw": "Just out of curiosity: why don't you directly use `iter->second` ? \n\nSearching the map with `iter->first` the for will have a asymptotic time complexity of O(n log(n)), while using `iter->second` you have a complexity of O(n), where n is the size of posPids . ", "markup": "markdown", "html": "<p>Just out of curiosity: why don't you directly use <code>iter-&gt;second</code> ? </p>\n<p>Searching the map with <code>iter-&gt;first</code> the for will have a asymptotic time complexity of O(n log(n)), while using <code>iter-&gt;second</code> you have a complexity of O(n), where n is the size of posPids . </p>", "type": "rendered"}, "created_on": "2015-11-02T11:46:18.299189+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "inline": {"to": 90, "from": null, "outdated": true, "path": "gazebo/physics/JointController.cc"}, "updated_on": "2015-11-02T11:46:28.404235+00:00", "type": "pullrequest_comment", "id": 11370721}