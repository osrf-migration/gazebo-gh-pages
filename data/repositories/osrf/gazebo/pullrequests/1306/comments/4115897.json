{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1306/comments/4115897.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1306/_/diff#comment-4115897"}}, "parent": {"id": 4107128, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1306/comments/4107128.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1306/_/diff#comment-4107128"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1306, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1306.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1306"}}, "title": "Building Editor: Pick wall / floor / stairs texture from a pre-set list on inspector"}, "content": {"raw": "It doesn't seem to reset the transparency, `visual->GetTransparency()` keeps returning the semi-transparent value, even though the visual looks opaque.\n\nI merged this branch with pull request #1308 on branch `hitl_textures_inspector_transp`. There I observed this:\n\n1. Draw a wall, open its inspector, deselect the wall (clicking on the background for example).\n\n2. On the inspector, choose the wooden texture and apply. The wall becomes opaque even though its transparency is still 0.4\n\n3. Select the wall (click on it), deselect it (click outside), it becomes semi-transparent, good.\n\n4. On the inspector, select the tiles and apply, again it is opaque even though it's not selected.\n\n5. Now the fun part: on the inspector, select the wood and apply (the wall is still unselected) - and now it shows semi-transparent - and this happens independently of whether the wall is selected or not. So there's some memory there regarding the materials. When we selected->deselected the wall, the wooden texture for this specific wall only became transparent... I'm still learning about the `rendering::Visual` class, not sure if there's an issue with `Visual::SetMaterial` or I'm just using it wrong. @iche033 ?", "markup": "markdown", "html": "<p>It doesn't seem to reset the transparency, <code>visual-&gt;GetTransparency()</code> keeps returning the semi-transparent value, even though the visual looks opaque.</p>\n<p>I merged this branch with <a href=\"#!/osrf/gazebo/pull-requests/1308/building-editor-some-fixes-to-highlighting\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1308</a> on branch <code>hitl_textures_inspector_transp</code>. There I observed this:</p>\n<ol>\n<li>\n<p>Draw a wall, open its inspector, deselect the wall (clicking on the background for example).</p>\n</li>\n<li>\n<p>On the inspector, choose the wooden texture and apply. The wall becomes opaque even though its transparency is still 0.4</p>\n</li>\n<li>\n<p>Select the wall (click on it), deselect it (click outside), it becomes semi-transparent, good.</p>\n</li>\n<li>\n<p>On the inspector, select the tiles and apply, again it is opaque even though it's not selected.</p>\n</li>\n<li>\n<p>Now the fun part: on the inspector, select the wood and apply (the wall is still unselected) - and now it shows semi-transparent - and this happens independently of whether the wall is selected or not. So there's some memory there regarding the materials. When we selected-&gt;deselected the wall, the wooden texture for this specific wall only became transparent... I'm still learning about the <code>rendering::Visual</code> class, not sure if there's an issue with <code>Visual::SetMaterial</code> or I'm just using it wrong. @iche033 ?</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2014-12-02T13:57:07.271004+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2014-12-02T13:57:07.292118+00:00", "type": "pullrequest_comment", "id": 4115897}