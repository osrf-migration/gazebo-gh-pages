{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2431/comments/23250256.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d83feea41ab9..225036f6ff77?path=gazebo%2Ftest%2FServerFixture.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2431/_/diff#comment-23250256"}}, "parent": {"id": 23249728, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2431/comments/23249728.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2431/_/diff#comment-23249728"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2431, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2431.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2431"}}, "title": "Add test for HarnessPlugin, reduce likelihood of race condition (#2034)"}, "content": {"raw": "there were test failures when running `DetachUnpaused` in which it couldn't find the harness joint. it was especially pronounced on machines without a gpu, since the tests load much faster when it doesn't have to load the rendering subsystem. what would happen is that this function (`ServerFixture::LoadArgs`) would start a `Server` in a separate thread and this loop waits for it to be ready before returning. If you wait for `physics::get_world()` to return a non-null pointer, it can return during the World constructor, but before `World::Load` and `World::Init` have been called. If you wait for `Server::GetInitialized` to be true, then `World::Init` will have finished, which seemed to be enough for the HarnessPlugin and harness joint to be created", "markup": "markdown", "html": "<p>there were test failures when running <code>DetachUnpaused</code> in which it couldn't find the harness joint. it was especially pronounced on machines without a gpu, since the tests load much faster when it doesn't have to load the rendering subsystem. what would happen is that this function (<code>ServerFixture::LoadArgs</code>) would start a <code>Server</code> in a separate thread and this loop waits for it to be ready before returning. If you wait for <code>physics::get_world()</code> to return a non-null pointer, it can return during the World constructor, but before <code>World::Load</code> and <code>World::Init</code> have been called. If you wait for <code>Server::GetInitialized</code> to be true, then <code>World::Init</code> will have finished, which seemed to be enough for the HarnessPlugin and harness joint to be created</p>", "type": "rendered"}, "created_on": "2016-09-02T22:45:19.530151+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "outdated": true, "path": "gazebo/test/ServerFixture.cc"}, "updated_on": "2016-09-02T22:45:19.536549+00:00", "type": "pullrequest_comment", "id": 23250256}