{"rendered": {"reason": {"raw": "it's broken", "markup": "markdown", "html": "<p>it's broken</p>", "type": "rendered"}, "description": {"raw": "It's bad practice to use `using namespace gazebo;` in header files. This pull request replaces this with `namespace gazebo` and brackets in 580691b. The following commit (6e10861) is purely indentation and fixing long line lengths.\r\n\r\nA more concise diff that ignores most of the whitespace using the `-b` flag:\r\n~~~\r\n$ hg up serverfixture_namespace2\r\n$ hg diff -r gazebo5 -b\r\ndiff -r afb30274a742 test/ServerFixture.hh\r\n--- a/test/ServerFixture.hh\tFri Feb 20 18:10:50 2015 -0800\r\n+++ b/test/ServerFixture.hh\tMon Feb 23 14:09:27 2015 -0800\r\n@@ -52,12 +52,12 @@\r\n \r\n #include \"test_config.h\"\r\n \r\n-using namespace gazebo;\r\n+namespace gazebo\r\n+{\r\n+  std::string custom_exec(std::string _cmd);\r\n \r\n-std::string custom_exec(std::string _cmd);\r\n-\r\n-class ServerFixture : public testing::Test\r\n-{\r\n+  class ServerFixture : public testing::Test\r\n+  {\r\n   /// \\brief Constructor\r\n   protected: ServerFixture();\r\n \r\n@@ -75,7 +75,8 @@\r\n   /// paused/un-paused.\r\n   /// \\param[in] _worldFilename Name of the world to load.\r\n   /// \\param[in] _paused True to start the world paused.\r\n-  protected: virtual void Load(const std::string &_worldFilename, bool _paused);\r\n+    protected: virtual void Load(const std::string &_worldFilename,\r\n+                                 bool _paused);\r\n \r\n   /// \\brief Load a world based on a filename and set simulation\r\n   /// paused/un-paused, and specify physics engine.\r\n@@ -135,7 +136,8 @@\r\n   /// \\param[in] _height Height of the image.\r\n   /// \\param[in] _depth Pixel depth.\r\n   protected: void PrintImage(const std::string &_name, unsigned char **_image,\r\n-                unsigned int _width, unsigned int _height, unsigned int _depth);\r\n+                  unsigned int _width, unsigned int _height,\r\n+                  unsigned int _depth);\r\n \r\n   /// \\brief Print laser scan to screen. This is used to generate test data.\r\n   /// \\param[in] _name Name to associate with the printed data.\r\n@@ -179,7 +181,8 @@\r\n   /// \\param[out] _diffAvg Average difference between the two arrays.\r\n   protected: void ImageCompare(unsigned char *_imageA,\r\n                  unsigned char *_imageB,\r\n-                 unsigned int _width, unsigned int _height, unsigned int _depth,\r\n+                   unsigned int _width, unsigned int _height,\r\n+                   unsigned int _depth,\r\n                  unsigned int &_diffMax, unsigned int &_diffSum,\r\n                  double &_diffAvg);\r\n \r\n@@ -336,7 +339,8 @@\r\n   /// log message about the problem.\r\n   /// \\param[in] log_msg: error msg related to the timeout\r\n   /// \\param[in] timeoutCS: failing period (in centiseconds)\r\n-  private: void launchTimeoutFailure(const char *_logMsg, const int _timeoutCS);\r\n+    private: void launchTimeoutFailure(const char *_logMsg,\r\n+                                       const int _timeoutCS);\r\n \r\n   /// \\brief Spawn an Wireless transmitter sensor on a link\r\n   /// \\param[in] _name Model name\r\n@@ -412,7 +416,8 @@\r\n   /// \\param[in] _spotOuterAngle Outer angle (\"spot\" only).\r\n   /// \\param[in] _spotFallOff Fall off (\"spot\" only).\r\n   /// \\param[in] _castShadows True to cast shadows.\r\n-  protected: void SpawnLight(const std::string &_name, const std::string &_type,\r\n+    protected: void SpawnLight(const std::string &_name,\r\n+                   const std::string &_type,\r\n                  const math::Vector3 &_pos, const math::Vector3 &_rpy,\r\n                  const common::Color &_diffuse = common::Color::White,\r\n                  const common::Color &_specular = common::Color::White,\r\n@@ -567,5 +572,6 @@\r\n \r\n   /// \\brief True if server is running.\r\n   private: bool serverRunning;\r\n-};\r\n+  };\r\n+}       // namespace gazebo\r\n #endif  // define _GAZEBO_SERVER_FIXTURE_HH_\r\n~~~", "markup": "markdown", "html": "<p>It's bad practice to use <code>using namespace gazebo;</code> in header files. This pull request replaces this with <code>namespace gazebo</code> and brackets in <a href=\"#!/osrf/gazebo/commits/580691b\" rel=\"nofollow\" class=\"ap-connect-link\">580691b</a>. The following commit (<a href=\"#!/osrf/gazebo/commits/6e10861\" rel=\"nofollow\" class=\"ap-connect-link\">6e10861</a>) is purely indentation and fixing long line lengths.</p>\n<p>A more concise diff that ignores most of the whitespace using the <code>-b</code> flag:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"err\">$</span> <span class=\"n\">hg</span> <span class=\"n\">up</span> <span class=\"n\">serverfixture_namespace2</span>\n<span class=\"err\">$</span> <span class=\"n\">hg</span> <span class=\"n\">diff</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"n\">gazebo5</span> <span class=\"o\">-</span><span class=\"n\">b</span>\n<span class=\"n\">diff</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"n\">afb30274a742</span> <span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ServerFixture</span><span class=\"p\">.</span><span class=\"n\">hh</span>\n<span class=\"o\">---</span> <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ServerFixture</span><span class=\"p\">.</span><span class=\"n\">hh</span> <span class=\"n\">Fri</span> <span class=\"n\">Feb</span> <span class=\"mi\">20</span> <span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"mi\">2015</span> <span class=\"o\">-</span><span class=\"mi\">0800</span>\n<span class=\"o\">+++</span> <span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ServerFixture</span><span class=\"p\">.</span><span class=\"n\">hh</span> <span class=\"n\">Mon</span> <span class=\"n\">Feb</span> <span class=\"mi\">23</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">27</span> <span class=\"mi\">2015</span> <span class=\"o\">-</span><span class=\"mi\">0800</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">12</span> <span class=\"o\">+</span><span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">12</span> <span class=\"err\">@@</span>\n\n <span class=\"cp\">#include</span> <span class=\"cpf\">&quot;test_config.h&quot;</span><span class=\"cp\"></span>\n\n<span class=\"o\">-</span><span class=\"n\">using</span> <span class=\"n\">namespace</span> <span class=\"n\">gazebo</span><span class=\"p\">;</span>\n<span class=\"o\">+</span><span class=\"n\">namespace</span> <span class=\"n\">gazebo</span>\n<span class=\"o\">+</span><span class=\"p\">{</span>\n<span class=\"o\">+</span>  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">custom_exec</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">_cmd</span><span class=\"p\">);</span>\n\n<span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">custom_exec</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">_cmd</span><span class=\"p\">);</span>\n<span class=\"o\">-</span>\n<span class=\"o\">-</span><span class=\"kr\">class</span> <span class=\"nc\">ServerFixture</span> <span class=\"o\">:</span> <span class=\"kr\">public</span> <span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">Test</span>\n<span class=\"o\">-</span><span class=\"p\">{</span>\n<span class=\"o\">+</span>  <span class=\"kr\">class</span> <span class=\"nc\">ServerFixture</span> <span class=\"o\">:</span> <span class=\"kr\">public</span> <span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">Test</span>\n<span class=\"o\">+</span>  <span class=\"p\">{</span>\n   <span class=\"c1\">/// \\brief Constructor</span>\n   <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"n\">ServerFixture</span><span class=\"p\">();</span>\n\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">75</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">75</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// paused/un-paused.</span>\n   <span class=\"c1\">/// \\param[in] _worldFilename Name of the world to load.</span>\n   <span class=\"c1\">/// \\param[in] _paused True to start the world paused.</span>\n<span class=\"o\">-</span>  <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">virtual</span> <span class=\"kr\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_worldFilename</span><span class=\"p\">,</span> <span class=\"kr\">bool</span> <span class=\"n\">_paused</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>    <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">virtual</span> <span class=\"kr\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_worldFilename</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                                 <span class=\"kr\">bool</span> <span class=\"n\">_paused</span><span class=\"p\">);</span>\n\n   <span class=\"c1\">/// \\brief Load a world based on a filename and set simulation</span>\n   <span class=\"c1\">/// paused/un-paused, and specify physics engine.</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">135</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">136</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// \\param[in] _height Height of the image.</span>\n   <span class=\"c1\">/// \\param[in] _depth Pixel depth.</span>\n   <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">PrintImage</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_name</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">char</span> <span class=\"o\">**</span><span class=\"n\">_image</span><span class=\"p\">,</span>\n<span class=\"o\">-</span>                <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>                  <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                  <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">);</span>\n\n   <span class=\"c1\">/// \\brief Print laser scan to screen. This is used to generate test data.</span>\n   <span class=\"c1\">/// \\param[in] _name Name to associate with the printed data.</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">179</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">181</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// \\param[out] _diffAvg Average difference between the two arrays.</span>\n   <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">ImageCompare</span><span class=\"p\">(</span><span class=\"kr\">unsigned</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_imageA</span><span class=\"p\">,</span>\n                  <span class=\"kr\">unsigned</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_imageB</span><span class=\"p\">,</span>\n<span class=\"o\">-</span>                 <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                   <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                   <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">,</span>\n                  <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffMax</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffSum</span><span class=\"p\">,</span>\n                  <span class=\"kr\">double</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffAvg</span><span class=\"p\">);</span>\n\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">336</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">339</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// log message about the problem.</span>\n   <span class=\"c1\">/// \\param[in] log_msg: error msg related to the timeout</span>\n   <span class=\"c1\">/// \\param[in] timeoutCS: failing period (in centiseconds)</span>\n<span class=\"o\">-</span>  <span class=\"kr\">private</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">launchTimeoutFailure</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_logMsg</span><span class=\"p\">,</span> <span class=\"kr\">const</span> <span class=\"kr\">int</span> <span class=\"n\">_timeoutCS</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>    <span class=\"kr\">private</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">launchTimeoutFailure</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_logMsg</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                                       <span class=\"kr\">const</span> <span class=\"kr\">int</span> <span class=\"n\">_timeoutCS</span><span class=\"p\">);</span>\n\n   <span class=\"c1\">/// \\brief Spawn an Wireless transmitter sensor on a link</span>\n   <span class=\"c1\">/// \\param[in] _name Model name</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">412</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">416</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// \\param[in] _spotOuterAngle Outer angle (&quot;spot&quot; only).</span>\n   <span class=\"c1\">/// \\param[in] _spotFallOff Fall off (&quot;spot&quot; only).</span>\n   <span class=\"c1\">/// \\param[in] _castShadows True to cast shadows.</span>\n<span class=\"o\">-</span>  <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">SpawnLight</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_name</span><span class=\"p\">,</span> <span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_type</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>    <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">SpawnLight</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                   <span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_type</span><span class=\"p\">,</span>\n                  <span class=\"kr\">const</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"n\">_pos</span><span class=\"p\">,</span> <span class=\"kr\">const</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"n\">_rpy</span><span class=\"p\">,</span>\n                  <span class=\"kr\">const</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffuse</span> <span class=\"o\">=</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span><span class=\"o\">::</span><span class=\"n\">White</span><span class=\"p\">,</span>\n                  <span class=\"kr\">const</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span> <span class=\"o\">&amp;</span><span class=\"n\">_specular</span> <span class=\"o\">=</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span><span class=\"o\">::</span><span class=\"n\">White</span><span class=\"p\">,</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">567</span><span class=\"p\">,</span><span class=\"mi\">5</span> <span class=\"o\">+</span><span class=\"mi\">572</span><span class=\"p\">,</span><span class=\"mi\">6</span> <span class=\"err\">@@</span>\n\n   <span class=\"c1\">/// \\brief True if server is running.</span>\n   <span class=\"kr\">private</span><span class=\"o\">:</span> <span class=\"kr\">bool</span> <span class=\"n\">serverRunning</span><span class=\"p\">;</span>\n<span class=\"o\">-</span><span class=\"p\">};</span>\n<span class=\"o\">+</span>  <span class=\"p\">};</span>\n<span class=\"o\">+</span><span class=\"p\">}</span>       <span class=\"c1\">// namespace gazebo</span>\n <span class=\"cp\">#endif  </span><span class=\"c1\">// define _GAZEBO_SERVER_FIXTURE_HH_</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" ", "markup": "markdown", "html": "<p>ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" </p>", "type": "rendered"}}, "type": "pullrequest", "description": "It's bad practice to use `using namespace gazebo;` in header files. This pull request replaces this with `namespace gazebo` and brackets in 580691b. The following commit (6e10861) is purely indentation and fixing long line lengths.\r\n\r\nA more concise diff that ignores most of the whitespace using the `-b` flag:\r\n~~~\r\n$ hg up serverfixture_namespace2\r\n$ hg diff -r gazebo5 -b\r\ndiff -r afb30274a742 test/ServerFixture.hh\r\n--- a/test/ServerFixture.hh\tFri Feb 20 18:10:50 2015 -0800\r\n+++ b/test/ServerFixture.hh\tMon Feb 23 14:09:27 2015 -0800\r\n@@ -52,12 +52,12 @@\r\n \r\n #include \"test_config.h\"\r\n \r\n-using namespace gazebo;\r\n+namespace gazebo\r\n+{\r\n+  std::string custom_exec(std::string _cmd);\r\n \r\n-std::string custom_exec(std::string _cmd);\r\n-\r\n-class ServerFixture : public testing::Test\r\n-{\r\n+  class ServerFixture : public testing::Test\r\n+  {\r\n   /// \\brief Constructor\r\n   protected: ServerFixture();\r\n \r\n@@ -75,7 +75,8 @@\r\n   /// paused/un-paused.\r\n   /// \\param[in] _worldFilename Name of the world to load.\r\n   /// \\param[in] _paused True to start the world paused.\r\n-  protected: virtual void Load(const std::string &_worldFilename, bool _paused);\r\n+    protected: virtual void Load(const std::string &_worldFilename,\r\n+                                 bool _paused);\r\n \r\n   /// \\brief Load a world based on a filename and set simulation\r\n   /// paused/un-paused, and specify physics engine.\r\n@@ -135,7 +136,8 @@\r\n   /// \\param[in] _height Height of the image.\r\n   /// \\param[in] _depth Pixel depth.\r\n   protected: void PrintImage(const std::string &_name, unsigned char **_image,\r\n-                unsigned int _width, unsigned int _height, unsigned int _depth);\r\n+                  unsigned int _width, unsigned int _height,\r\n+                  unsigned int _depth);\r\n \r\n   /// \\brief Print laser scan to screen. This is used to generate test data.\r\n   /// \\param[in] _name Name to associate with the printed data.\r\n@@ -179,7 +181,8 @@\r\n   /// \\param[out] _diffAvg Average difference between the two arrays.\r\n   protected: void ImageCompare(unsigned char *_imageA,\r\n                  unsigned char *_imageB,\r\n-                 unsigned int _width, unsigned int _height, unsigned int _depth,\r\n+                   unsigned int _width, unsigned int _height,\r\n+                   unsigned int _depth,\r\n                  unsigned int &_diffMax, unsigned int &_diffSum,\r\n                  double &_diffAvg);\r\n \r\n@@ -336,7 +339,8 @@\r\n   /// log message about the problem.\r\n   /// \\param[in] log_msg: error msg related to the timeout\r\n   /// \\param[in] timeoutCS: failing period (in centiseconds)\r\n-  private: void launchTimeoutFailure(const char *_logMsg, const int _timeoutCS);\r\n+    private: void launchTimeoutFailure(const char *_logMsg,\r\n+                                       const int _timeoutCS);\r\n \r\n   /// \\brief Spawn an Wireless transmitter sensor on a link\r\n   /// \\param[in] _name Model name\r\n@@ -412,7 +416,8 @@\r\n   /// \\param[in] _spotOuterAngle Outer angle (\"spot\" only).\r\n   /// \\param[in] _spotFallOff Fall off (\"spot\" only).\r\n   /// \\param[in] _castShadows True to cast shadows.\r\n-  protected: void SpawnLight(const std::string &_name, const std::string &_type,\r\n+    protected: void SpawnLight(const std::string &_name,\r\n+                   const std::string &_type,\r\n                  const math::Vector3 &_pos, const math::Vector3 &_rpy,\r\n                  const common::Color &_diffuse = common::Color::White,\r\n                  const common::Color &_specular = common::Color::White,\r\n@@ -567,5 +572,6 @@\r\n \r\n   /// \\brief True if server is running.\r\n   private: bool serverRunning;\r\n-};\r\n+  };\r\n+}       // namespace gazebo\r\n #endif  // define _GAZEBO_SERVER_FIXTURE_HH_\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1451/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:6e108614711a%0Dafb30274a742?from_pullrequest_id=1451"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1451/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1451.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1451/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1451/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1451"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1451/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:6e108614711a%0Dafb30274a742?from_pullrequest_id=1451"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1451/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1451/statuses_page=1.json"}}, "title": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" ", "close_source_branch": false, "reviewers": [], "id": 1451, "destination": {"commit": {"hash": "afb30274a742", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/afb30274a742.json"}, "html": {"href": "#!/osrf/gazebo/commits/afb30274a742"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "created_on": "2015-02-23T22:13:04.084660+00:00", "summary": {"raw": "It's bad practice to use `using namespace gazebo;` in header files. This pull request replaces this with `namespace gazebo` and brackets in 580691b. The following commit (6e10861) is purely indentation and fixing long line lengths.\r\n\r\nA more concise diff that ignores most of the whitespace using the `-b` flag:\r\n~~~\r\n$ hg up serverfixture_namespace2\r\n$ hg diff -r gazebo5 -b\r\ndiff -r afb30274a742 test/ServerFixture.hh\r\n--- a/test/ServerFixture.hh\tFri Feb 20 18:10:50 2015 -0800\r\n+++ b/test/ServerFixture.hh\tMon Feb 23 14:09:27 2015 -0800\r\n@@ -52,12 +52,12 @@\r\n \r\n #include \"test_config.h\"\r\n \r\n-using namespace gazebo;\r\n+namespace gazebo\r\n+{\r\n+  std::string custom_exec(std::string _cmd);\r\n \r\n-std::string custom_exec(std::string _cmd);\r\n-\r\n-class ServerFixture : public testing::Test\r\n-{\r\n+  class ServerFixture : public testing::Test\r\n+  {\r\n   /// \\brief Constructor\r\n   protected: ServerFixture();\r\n \r\n@@ -75,7 +75,8 @@\r\n   /// paused/un-paused.\r\n   /// \\param[in] _worldFilename Name of the world to load.\r\n   /// \\param[in] _paused True to start the world paused.\r\n-  protected: virtual void Load(const std::string &_worldFilename, bool _paused);\r\n+    protected: virtual void Load(const std::string &_worldFilename,\r\n+                                 bool _paused);\r\n \r\n   /// \\brief Load a world based on a filename and set simulation\r\n   /// paused/un-paused, and specify physics engine.\r\n@@ -135,7 +136,8 @@\r\n   /// \\param[in] _height Height of the image.\r\n   /// \\param[in] _depth Pixel depth.\r\n   protected: void PrintImage(const std::string &_name, unsigned char **_image,\r\n-                unsigned int _width, unsigned int _height, unsigned int _depth);\r\n+                  unsigned int _width, unsigned int _height,\r\n+                  unsigned int _depth);\r\n \r\n   /// \\brief Print laser scan to screen. This is used to generate test data.\r\n   /// \\param[in] _name Name to associate with the printed data.\r\n@@ -179,7 +181,8 @@\r\n   /// \\param[out] _diffAvg Average difference between the two arrays.\r\n   protected: void ImageCompare(unsigned char *_imageA,\r\n                  unsigned char *_imageB,\r\n-                 unsigned int _width, unsigned int _height, unsigned int _depth,\r\n+                   unsigned int _width, unsigned int _height,\r\n+                   unsigned int _depth,\r\n                  unsigned int &_diffMax, unsigned int &_diffSum,\r\n                  double &_diffAvg);\r\n \r\n@@ -336,7 +339,8 @@\r\n   /// log message about the problem.\r\n   /// \\param[in] log_msg: error msg related to the timeout\r\n   /// \\param[in] timeoutCS: failing period (in centiseconds)\r\n-  private: void launchTimeoutFailure(const char *_logMsg, const int _timeoutCS);\r\n+    private: void launchTimeoutFailure(const char *_logMsg,\r\n+                                       const int _timeoutCS);\r\n \r\n   /// \\brief Spawn an Wireless transmitter sensor on a link\r\n   /// \\param[in] _name Model name\r\n@@ -412,7 +416,8 @@\r\n   /// \\param[in] _spotOuterAngle Outer angle (\"spot\" only).\r\n   /// \\param[in] _spotFallOff Fall off (\"spot\" only).\r\n   /// \\param[in] _castShadows True to cast shadows.\r\n-  protected: void SpawnLight(const std::string &_name, const std::string &_type,\r\n+    protected: void SpawnLight(const std::string &_name,\r\n+                   const std::string &_type,\r\n                  const math::Vector3 &_pos, const math::Vector3 &_rpy,\r\n                  const common::Color &_diffuse = common::Color::White,\r\n                  const common::Color &_specular = common::Color::White,\r\n@@ -567,5 +572,6 @@\r\n \r\n   /// \\brief True if server is running.\r\n   private: bool serverRunning;\r\n-};\r\n+  };\r\n+}       // namespace gazebo\r\n #endif  // define _GAZEBO_SERVER_FIXTURE_HH_\r\n~~~", "markup": "markdown", "html": "<p>It's bad practice to use <code>using namespace gazebo;</code> in header files. This pull request replaces this with <code>namespace gazebo</code> and brackets in <a href=\"#!/osrf/gazebo/commits/580691b\" rel=\"nofollow\" class=\"ap-connect-link\">580691b</a>. The following commit (<a href=\"#!/osrf/gazebo/commits/6e10861\" rel=\"nofollow\" class=\"ap-connect-link\">6e10861</a>) is purely indentation and fixing long line lengths.</p>\n<p>A more concise diff that ignores most of the whitespace using the <code>-b</code> flag:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"err\">$</span> <span class=\"n\">hg</span> <span class=\"n\">up</span> <span class=\"n\">serverfixture_namespace2</span>\n<span class=\"err\">$</span> <span class=\"n\">hg</span> <span class=\"n\">diff</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"n\">gazebo5</span> <span class=\"o\">-</span><span class=\"n\">b</span>\n<span class=\"n\">diff</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"n\">afb30274a742</span> <span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ServerFixture</span><span class=\"p\">.</span><span class=\"n\">hh</span>\n<span class=\"o\">---</span> <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ServerFixture</span><span class=\"p\">.</span><span class=\"n\">hh</span> <span class=\"n\">Fri</span> <span class=\"n\">Feb</span> <span class=\"mi\">20</span> <span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"mi\">2015</span> <span class=\"o\">-</span><span class=\"mi\">0800</span>\n<span class=\"o\">+++</span> <span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ServerFixture</span><span class=\"p\">.</span><span class=\"n\">hh</span> <span class=\"n\">Mon</span> <span class=\"n\">Feb</span> <span class=\"mi\">23</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">27</span> <span class=\"mi\">2015</span> <span class=\"o\">-</span><span class=\"mi\">0800</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">12</span> <span class=\"o\">+</span><span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">12</span> <span class=\"err\">@@</span>\n\n <span class=\"cp\">#include</span> <span class=\"cpf\">&quot;test_config.h&quot;</span><span class=\"cp\"></span>\n\n<span class=\"o\">-</span><span class=\"n\">using</span> <span class=\"n\">namespace</span> <span class=\"n\">gazebo</span><span class=\"p\">;</span>\n<span class=\"o\">+</span><span class=\"n\">namespace</span> <span class=\"n\">gazebo</span>\n<span class=\"o\">+</span><span class=\"p\">{</span>\n<span class=\"o\">+</span>  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">custom_exec</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">_cmd</span><span class=\"p\">);</span>\n\n<span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">custom_exec</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">_cmd</span><span class=\"p\">);</span>\n<span class=\"o\">-</span>\n<span class=\"o\">-</span><span class=\"kr\">class</span> <span class=\"nc\">ServerFixture</span> <span class=\"o\">:</span> <span class=\"kr\">public</span> <span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">Test</span>\n<span class=\"o\">-</span><span class=\"p\">{</span>\n<span class=\"o\">+</span>  <span class=\"kr\">class</span> <span class=\"nc\">ServerFixture</span> <span class=\"o\">:</span> <span class=\"kr\">public</span> <span class=\"n\">testing</span><span class=\"o\">::</span><span class=\"n\">Test</span>\n<span class=\"o\">+</span>  <span class=\"p\">{</span>\n   <span class=\"c1\">/// \\brief Constructor</span>\n   <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"n\">ServerFixture</span><span class=\"p\">();</span>\n\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">75</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">75</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// paused/un-paused.</span>\n   <span class=\"c1\">/// \\param[in] _worldFilename Name of the world to load.</span>\n   <span class=\"c1\">/// \\param[in] _paused True to start the world paused.</span>\n<span class=\"o\">-</span>  <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">virtual</span> <span class=\"kr\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_worldFilename</span><span class=\"p\">,</span> <span class=\"kr\">bool</span> <span class=\"n\">_paused</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>    <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">virtual</span> <span class=\"kr\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_worldFilename</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                                 <span class=\"kr\">bool</span> <span class=\"n\">_paused</span><span class=\"p\">);</span>\n\n   <span class=\"c1\">/// \\brief Load a world based on a filename and set simulation</span>\n   <span class=\"c1\">/// paused/un-paused, and specify physics engine.</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">135</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">136</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// \\param[in] _height Height of the image.</span>\n   <span class=\"c1\">/// \\param[in] _depth Pixel depth.</span>\n   <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">PrintImage</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_name</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">char</span> <span class=\"o\">**</span><span class=\"n\">_image</span><span class=\"p\">,</span>\n<span class=\"o\">-</span>                <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>                  <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                  <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">);</span>\n\n   <span class=\"c1\">/// \\brief Print laser scan to screen. This is used to generate test data.</span>\n   <span class=\"c1\">/// \\param[in] _name Name to associate with the printed data.</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">179</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">181</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// \\param[out] _diffAvg Average difference between the two arrays.</span>\n   <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">ImageCompare</span><span class=\"p\">(</span><span class=\"kr\">unsigned</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_imageA</span><span class=\"p\">,</span>\n                  <span class=\"kr\">unsigned</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_imageB</span><span class=\"p\">,</span>\n<span class=\"o\">-</span>                 <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                   <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_width</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_height</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                   <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"n\">_depth</span><span class=\"p\">,</span>\n                  <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffMax</span><span class=\"p\">,</span> <span class=\"kr\">unsigned</span> <span class=\"kr\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffSum</span><span class=\"p\">,</span>\n                  <span class=\"kr\">double</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffAvg</span><span class=\"p\">);</span>\n\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">336</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">339</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// log message about the problem.</span>\n   <span class=\"c1\">/// \\param[in] log_msg: error msg related to the timeout</span>\n   <span class=\"c1\">/// \\param[in] timeoutCS: failing period (in centiseconds)</span>\n<span class=\"o\">-</span>  <span class=\"kr\">private</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">launchTimeoutFailure</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_logMsg</span><span class=\"p\">,</span> <span class=\"kr\">const</span> <span class=\"kr\">int</span> <span class=\"n\">_timeoutCS</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>    <span class=\"kr\">private</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">launchTimeoutFailure</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"kr\">char</span> <span class=\"o\">*</span><span class=\"n\">_logMsg</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                                       <span class=\"kr\">const</span> <span class=\"kr\">int</span> <span class=\"n\">_timeoutCS</span><span class=\"p\">);</span>\n\n   <span class=\"c1\">/// \\brief Spawn an Wireless transmitter sensor on a link</span>\n   <span class=\"c1\">/// \\param[in] _name Model name</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">412</span><span class=\"p\">,</span><span class=\"mi\">7</span> <span class=\"o\">+</span><span class=\"mi\">416</span><span class=\"p\">,</span><span class=\"mi\">8</span> <span class=\"err\">@@</span>\n   <span class=\"c1\">/// \\param[in] _spotOuterAngle Outer angle (&quot;spot&quot; only).</span>\n   <span class=\"c1\">/// \\param[in] _spotFallOff Fall off (&quot;spot&quot; only).</span>\n   <span class=\"c1\">/// \\param[in] _castShadows True to cast shadows.</span>\n<span class=\"o\">-</span>  <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">SpawnLight</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_name</span><span class=\"p\">,</span> <span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_type</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>    <span class=\"kr\">protected</span><span class=\"o\">:</span> <span class=\"kr\">void</span> <span class=\"n\">SpawnLight</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n<span class=\"o\">+</span>                   <span class=\"kr\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_type</span><span class=\"p\">,</span>\n                  <span class=\"kr\">const</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"n\">_pos</span><span class=\"p\">,</span> <span class=\"kr\">const</span> <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3</span> <span class=\"o\">&amp;</span><span class=\"n\">_rpy</span><span class=\"p\">,</span>\n                  <span class=\"kr\">const</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span> <span class=\"o\">&amp;</span><span class=\"n\">_diffuse</span> <span class=\"o\">=</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span><span class=\"o\">::</span><span class=\"n\">White</span><span class=\"p\">,</span>\n                  <span class=\"kr\">const</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span> <span class=\"o\">&amp;</span><span class=\"n\">_specular</span> <span class=\"o\">=</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Color</span><span class=\"o\">::</span><span class=\"n\">White</span><span class=\"p\">,</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">567</span><span class=\"p\">,</span><span class=\"mi\">5</span> <span class=\"o\">+</span><span class=\"mi\">572</span><span class=\"p\">,</span><span class=\"mi\">6</span> <span class=\"err\">@@</span>\n\n   <span class=\"c1\">/// \\brief True if server is running.</span>\n   <span class=\"kr\">private</span><span class=\"o\">:</span> <span class=\"kr\">bool</span> <span class=\"n\">serverRunning</span><span class=\"p\">;</span>\n<span class=\"o\">-</span><span class=\"p\">};</span>\n<span class=\"o\">+</span>  <span class=\"p\">};</span>\n<span class=\"o\">+</span><span class=\"p\">}</span>       <span class=\"c1\">// namespace gazebo</span>\n <span class=\"cp\">#endif  </span><span class=\"c1\">// define _GAZEBO_SERVER_FIXTURE_HH_</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "6e108614711a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6e108614711a.json"}, "html": {"href": "#!/osrf/gazebo/commits/6e108614711a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "serverfixture_namespace2"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "participants": [], "reason": "it's broken", "updated_on": "2015-02-23T22:38:42.920238+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": null, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}