{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3193/comments/136061206.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3193/_/diff#comment-136061206"}}, "parent": {"id": 136054630, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3193/comments/136054630.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3193/_/diff#comment-136054630"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3193, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3193.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3193"}}, "title": "Added normals in depth camera sensor"}, "content": {"raw": "we can probably relax the check for number of msgs received and just have logic to make sure images are received:\n\n```\ndiff -r ababc972854c gazebo/sensors/DepthCameraSensor_TEST.cc\n--- a/gazebo/sensors/DepthCameraSensor_TEST.cc  Thu Feb 13 10:39:20 2020 +0100\n+++ b/gazebo/sensors/DepthCameraSensor_TEST.cc  Fri Feb 14 13:14:50 2020 -0800\n@@ -178,16 +178,15 @@\n       std::placeholders::_2, std::placeholders::_3, std::placeholders::_4,\n       std::placeholders::_5));\n \n-  double updateRate = sensor->UpdateRate();\n-  EXPECT_DOUBLE_EQ(10.0, updateRate);\n   // wait for a few depth camera frames\n   int i = 0;\n-  while (i < 300)\n+  unsigned int framesToWait = 10;\n+  while (i < 300 && g_normalsCounter < 10)\n   {\n-    common::Time::MSleep(10);\n+    common::Time::MSleep(20);\n     i++;\n   }\n-  EXPECT_GE(g_normalsCounter, 3 * updateRate);\n+  EXPECT_GE(g_normalsCounter, framesToWait);\n }\n```\n\n\u200c", "markup": "markdown", "html": "<p>we can probably relax the check for number of msgs received and just have logic to make sure images are received:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r ababc972854c gazebo/sensors/DepthCameraSensor_TEST.cc</span>\n<span class=\"gd\">--- a/gazebo/sensors/DepthCameraSensor_TEST.cc  Thu Feb 13 10:39:20 2020 +0100</span>\n<span class=\"gi\">+++ b/gazebo/sensors/DepthCameraSensor_TEST.cc  Fri Feb 14 13:14:50 2020 -0800</span>\n<span class=\"gu\">@@ -178,16 +178,15 @@</span>\n       std::placeholders::_2, std::placeholders::_3, std::placeholders::_4,\n       std::placeholders::_5));\n\n<span class=\"gd\">-  double updateRate = sensor-&gt;UpdateRate();</span>\n<span class=\"gd\">-  EXPECT_DOUBLE_EQ(10.0, updateRate);</span>\n   // wait for a few depth camera frames\n   int i = 0;\n<span class=\"gd\">-  while (i &lt; 300)</span>\n<span class=\"gi\">+  unsigned int framesToWait = 10;</span>\n<span class=\"gi\">+  while (i &lt; 300 &amp;&amp; g_normalsCounter &lt; 10)</span>\n   {\n<span class=\"gd\">-    common::Time::MSleep(10);</span>\n<span class=\"gi\">+    common::Time::MSleep(20);</span>\n     i++;\n   }\n<span class=\"gd\">-  EXPECT_GE(g_normalsCounter, 3 * updateRate);</span>\n<span class=\"gi\">+  EXPECT_GE(g_normalsCounter, framesToWait);</span>\n }\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-02-14T21:15:12.928400+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-02-14T21:15:12.938643+00:00", "type": "pullrequest_comment", "id": 136061206}