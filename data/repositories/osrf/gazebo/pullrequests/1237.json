{"rendered": {"description": {"raw": "This is one of multiple pull requests from my accuracy testing branch.\r\n\r\nSince loading physics state is still not working (issue #312), we cannot set initial velocities for links in a world file. This pull request introduces a simple ModelPlugin for setting the initial angular and linear velocity of a model. It takes `<linear>` and `<angular>` tags as sdf parameters and sets the model velocity accordingly (note that model velocity actually means the velocity of the canonical link of the model).\r\n~~~\r\n<plugin name=\"large_wz\" filename=\"libInitialVelocityPlugin.so\">\r\n  <linear>-1 -1 5</linear>\r\n  <angular>0.1 5.0 0.1</angular>\r\n</plugin>\r\n~~~\r\nThis is not a general solution, since it doesn't set velocity for multiple links. For the general solution, we should fix loading physics state (#312). I think it is worthwhile, though, because I discovered that plugins could not set the initial velocity during the `Reset` function due to the order of function calls in `Model::Reset`. This fixes the order and provides a simple plugin that will work for single link models.", "markup": "markdown", "html": "<p>This is one of multiple pull requests from my accuracy testing branch.</p>\n<p>Since loading physics state is still not working (issue <a href=\"#!/osrf/gazebo/issues/312/re-enable-physics-states-test\" rel=\"nofollow\" title=\"re-enable physics states test\" class=\"ap-connect-link\">#312</a>), we cannot set initial velocities for links in a world file. This pull request introduces a simple ModelPlugin for setting the initial angular and linear velocity of a model. It takes <code>&lt;linear&gt;</code> and <code>&lt;angular&gt;</code> tags as sdf parameters and sets the model velocity accordingly (note that model velocity actually means the velocity of the canonical link of the model).</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;large_wz&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libInitialVelocityPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;linear&gt;</span>-1 -1 5<span class=\"nt\">&lt;/linear&gt;</span>\n  <span class=\"nt\">&lt;angular&gt;</span>0.1 5.0 0.1<span class=\"nt\">&lt;/angular&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>This is not a general solution, since it doesn't set velocity for multiple links. For the general solution, we should fix loading physics state (<a href=\"#!/osrf/gazebo/issues/312/re-enable-physics-states-test\" rel=\"nofollow\" title=\"re-enable physics states test\" class=\"ap-connect-link\">#312</a>). I think it is worthwhile, though, because I discovered that plugins could not set the initial velocity during the <code>Reset</code> function due to the order of function calls in <code>Model::Reset</code>. This fixes the order and provides a simple plugin that will work for single link models.</p>", "type": "rendered"}, "title": {"raw": "InitialVelocityPlugin: set initial state of links", "markup": "markdown", "html": "<p>InitialVelocityPlugin: set initial state of links</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is one of multiple pull requests from my accuracy testing branch.\r\n\r\nSince loading physics state is still not working (issue #312), we cannot set initial velocities for links in a world file. This pull request introduces a simple ModelPlugin for setting the initial angular and linear velocity of a model. It takes `<linear>` and `<angular>` tags as sdf parameters and sets the model velocity accordingly (note that model velocity actually means the velocity of the canonical link of the model).\r\n~~~\r\n<plugin name=\"large_wz\" filename=\"libInitialVelocityPlugin.so\">\r\n  <linear>-1 -1 5</linear>\r\n  <angular>0.1 5.0 0.1</angular>\r\n</plugin>\r\n~~~\r\nThis is not a general solution, since it doesn't set velocity for multiple links. For the general solution, we should fix loading physics state (#312). I think it is worthwhile, though, because I discovered that plugins could not set the initial velocity during the `Reset` function due to the order of function calls in `Model::Reset`. This fixes the order and provides a simple plugin that will work for single link models.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1237/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:179e7abd498d%0Da8d5edbb44ff?from_pullrequest_id=1237"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1237/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1237.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1237/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1237/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1237"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1237/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:179e7abd498d%0Da8d5edbb44ff?from_pullrequest_id=1237"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1237/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1237/statuses_page=1.json"}}, "title": "InitialVelocityPlugin: set initial state of links", "close_source_branch": true, "reviewers": [], "id": 1237, "destination": {"commit": {"hash": "a8d5edbb44ff", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a8d5edbb44ff.json"}, "html": {"href": "#!/osrf/gazebo/commits/a8d5edbb44ff"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.0"}}, "created_on": "2014-10-17T23:59:14.683080+00:00", "summary": {"raw": "This is one of multiple pull requests from my accuracy testing branch.\r\n\r\nSince loading physics state is still not working (issue #312), we cannot set initial velocities for links in a world file. This pull request introduces a simple ModelPlugin for setting the initial angular and linear velocity of a model. It takes `<linear>` and `<angular>` tags as sdf parameters and sets the model velocity accordingly (note that model velocity actually means the velocity of the canonical link of the model).\r\n~~~\r\n<plugin name=\"large_wz\" filename=\"libInitialVelocityPlugin.so\">\r\n  <linear>-1 -1 5</linear>\r\n  <angular>0.1 5.0 0.1</angular>\r\n</plugin>\r\n~~~\r\nThis is not a general solution, since it doesn't set velocity for multiple links. For the general solution, we should fix loading physics state (#312). I think it is worthwhile, though, because I discovered that plugins could not set the initial velocity during the `Reset` function due to the order of function calls in `Model::Reset`. This fixes the order and provides a simple plugin that will work for single link models.", "markup": "markdown", "html": "<p>This is one of multiple pull requests from my accuracy testing branch.</p>\n<p>Since loading physics state is still not working (issue <a href=\"#!/osrf/gazebo/issues/312/re-enable-physics-states-test\" rel=\"nofollow\" title=\"re-enable physics states test\" class=\"ap-connect-link\">#312</a>), we cannot set initial velocities for links in a world file. This pull request introduces a simple ModelPlugin for setting the initial angular and linear velocity of a model. It takes <code>&lt;linear&gt;</code> and <code>&lt;angular&gt;</code> tags as sdf parameters and sets the model velocity accordingly (note that model velocity actually means the velocity of the canonical link of the model).</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;large_wz&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libInitialVelocityPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;linear&gt;</span>-1 -1 5<span class=\"nt\">&lt;/linear&gt;</span>\n  <span class=\"nt\">&lt;angular&gt;</span>0.1 5.0 0.1<span class=\"nt\">&lt;/angular&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>This is not a general solution, since it doesn't set velocity for multiple links. For the general solution, we should fix loading physics state (<a href=\"#!/osrf/gazebo/issues/312/re-enable-physics-states-test\" rel=\"nofollow\" title=\"re-enable physics states test\" class=\"ap-connect-link\">#312</a>). I think it is worthwhile, though, because I discovered that plugins could not set the initial velocity during the <code>Reset</code> function due to the order of function calls in <code>Model::Reset</code>. This fixes the order and provides a simple plugin that will work for single link models.</p>", "type": "rendered"}, "source": {"commit": {"hash": "841b3be5c8c7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/841b3be5c8c7.json"}, "html": {"href": "#!/osrf/gazebo/commits/841b3be5c8c7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "initial_velocity_plugin"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-10-19T08:15:54.074154+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-28T17:13:38.805779+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-22T03:43:44.273232+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2014-10-28T17:17:43.816073+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "179e7abd498d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/179e7abd498d.json"}, "html": {"href": "#!/osrf/gazebo/commits/179e7abd498d"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}