{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2955/comments/65247469.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2955/_/diff#comment-65247469"}}, "parent": {"id": 65123803, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2955/comments/65123803.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2955/_/diff#comment-65123803"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2955, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2955.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2955"}}, "title": "Fix GpuRaySensor vertical rays"}, "content": {"raw": "This is the backtrace with gdb:\n\n```plaintext\n[       OK ] GPURaySensorTest.LaserUnitBox (2542 ms)\n[ RUN      ] GPURaySensorTest.NameCollision\n\nThread 1 \"INTEGRATION_gpu\" received signal SIGSEGV, Segmentation fault.\n0x00007ffff3dcd545 in _int_malloc (av=av@entry=0x7ffff410fb20 <main_arena>, bytes=bytes@entry=8192) at malloc.c:3727\n3727    malloc.c: No such file or directory.\n(gdb) backtrace\n#0  0x00007ffff3dcd545 in _int_malloc (av=av@entry=0x7ffff410fb20 <main_arena>, bytes=bytes@entry=8192) at malloc.c:3727\n#1  0x00007ffff3dcf184 in __GI___libc_malloc (bytes=8192) at malloc.c:2913\n#2  0x00007ffff46c1e78 in operator new(unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#3  0x00007ffff46c1f19 in operator new[](unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#4  0x00007ffff4720468 in std::basic_filebuf<char, std::char_traits<char> >::_M_allocate_internal_buffer() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#5  0x00007ffff47246b2 in std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#6  0x00007ffff47248c0 in std::basic_ofstream<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#7  0x00007ffff5babd25 in gazebo::common::FileLogger::Init (this=0x7ffff5ec6c60 <gazebo::common::Console::log>, _prefix=\"test-\", _filename=\"test.log\") at /home/docker/gazebo/gazebo/common/Console.cc:211\n#8  0x0000000000477961 in gazebo::ServerFixture::ServerFixture (this=0x7cb5b0) at /home/docker/gazebo/gazebo/test/ServerFixture.cc:91\n#9  0x000000000043faba in GPURaySensorTest::GPURaySensorTest (this=0x7cb5b0) at /home/docker/gazebo/test/integration/gpu_laser.cc:28\n#10 0x000000000043fc90 in GPURaySensorTest_NameCollision_Test::GPURaySensorTest_NameCollision_Test (this=0x7cb5b0) at /home/docker/gazebo/test/integration/gpu_laser.cc:216\n#11 0x000000000044606e in testing::internal::TestFactoryImpl<GPURaySensorTest_NameCollision_Test>::CreateTest (this=0x7b8dd0) at /home/docker/gazebo/test/gtest/include/gtest/internal/gtest-internal.h:454\n#12 0x000000000046bc3f in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*> (object=0x7b8dd0, \n    method=&virtual testing::internal::TestFactoryBase::CreateTest(), location=0x4b4468 \"the test fixture's constructor\") at /home/docker/gazebo/test/gtest/src/gtest.cc:2079\n#13 0x0000000000466fa3 in testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*> (object=0x7b8dd0, \n    method=&virtual testing::internal::TestFactoryBase::CreateTest(), location=0x4b4468 \"the test fixture's constructor\") at /home/docker/gazebo/test/gtest/src/gtest.cc:2115\n#14 0x000000000044cc13 in testing::TestInfo::Run (this=0x7c9ee0) at /home/docker/gazebo/test/gtest/src/gtest.cc:2320\n#15 0x000000000044d2c6 in testing::TestCase::Run (this=0x7b8cb0) at /home/docker/gazebo/test/gtest/src/gtest.cc:2445\n#16 0x00000000004543a4 in testing::internal::UnitTestImpl::RunAllTests (this=0x7b9670) at /home/docker/gazebo/test/gtest/src/gtest.cc:4316\n#17 0x000000000046cad1 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x7b9670, \n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x4540e4 <testing::internal::UnitTestImpl::RunAllTests()>, \n    location=0x4b4b08 \"auxiliary test code (environments or event listeners)\") at /home/docker/gazebo/test/gtest/src/gtest.cc:2079\n#18 0x0000000000467b5f in testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x7b9670, \n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x4540e4 <testing::internal::UnitTestImpl::RunAllTests()>, \n    location=0x4b4b08 \"auxiliary test code (environments or event listeners)\") at /home/docker/gazebo/test/gtest/src/gtest.cc:2115\n#19 0x0000000000452f6f in testing::UnitTest::Run (this=0x6f5820 <testing::UnitTest::GetInstance()::instance>) at /home/docker/gazebo/test/gtest/src/gtest.cc:3927\n#20 0x000000000043eb00 in RUN_ALL_TESTS () at /home/docker/gazebo/test/gtest/include/gtest/gtest.h:2288\n#21 0x000000000043d056 in main (argc=1, argv=0x7fffffffea78) at /home/docker/gazebo/test/integration/gpu_laser.cc:602\n(gdb) \n```\n\nThe issue seems to be that it fails to open the test log from time to time. Because of this I have SIGSEGVS from time to time. EDIT: The malloc error seems to be from a heap corruption.", "markup": "markdown", "html": "<p>This is the backtrace with gdb:</p>\n<div class=\"codehilite language-plaintext\"><pre><span></span>[       OK ] GPURaySensorTest.LaserUnitBox (2542 ms)\n[ RUN      ] GPURaySensorTest.NameCollision\n\nThread 1 &quot;INTEGRATION_gpu&quot; received signal SIGSEGV, Segmentation fault.\n0x00007ffff3dcd545 in _int_malloc (av=av@entry=0x7ffff410fb20 &lt;main_arena&gt;, bytes=bytes@entry=8192) at malloc.c:3727\n3727    malloc.c: No such file or directory.\n(gdb) backtrace\n#0  0x00007ffff3dcd545 in _int_malloc (av=av@entry=0x7ffff410fb20 &lt;main_arena&gt;, bytes=bytes@entry=8192) at malloc.c:3727\n#1  0x00007ffff3dcf184 in __GI___libc_malloc (bytes=8192) at malloc.c:2913\n#2  0x00007ffff46c1e78 in operator new(unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#3  0x00007ffff46c1f19 in operator new[](unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#4  0x00007ffff4720468 in std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#5  0x00007ffff47246b2 in std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open(char const*, std::_Ios_Openmode) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#6  0x00007ffff47248c0 in std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::open(char const*, std::_Ios_Openmode) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#7  0x00007ffff5babd25 in gazebo::common::FileLogger::Init (this=0x7ffff5ec6c60 &lt;gazebo::common::Console::log&gt;, _prefix=&quot;test-&quot;, _filename=&quot;test.log&quot;) at /home/docker/gazebo/gazebo/common/Console.cc:211\n#8  0x0000000000477961 in gazebo::ServerFixture::ServerFixture (this=0x7cb5b0) at /home/docker/gazebo/gazebo/test/ServerFixture.cc:91\n#9  0x000000000043faba in GPURaySensorTest::GPURaySensorTest (this=0x7cb5b0) at /home/docker/gazebo/test/integration/gpu_laser.cc:28\n#10 0x000000000043fc90 in GPURaySensorTest_NameCollision_Test::GPURaySensorTest_NameCollision_Test (this=0x7cb5b0) at /home/docker/gazebo/test/integration/gpu_laser.cc:216\n#11 0x000000000044606e in testing::internal::TestFactoryImpl&lt;GPURaySensorTest_NameCollision_Test&gt;::CreateTest (this=0x7b8dd0) at /home/docker/gazebo/test/gtest/include/gtest/internal/gtest-internal.h:454\n#12 0x000000000046bc3f in testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::TestFactoryBase, testing::Test*&gt; (object=0x7b8dd0, \n    method=&amp;virtual testing::internal::TestFactoryBase::CreateTest(), location=0x4b4468 &quot;the test fixture&#39;s constructor&quot;) at /home/docker/gazebo/test/gtest/src/gtest.cc:2079\n#13 0x0000000000466fa3 in testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::TestFactoryBase, testing::Test*&gt; (object=0x7b8dd0, \n    method=&amp;virtual testing::internal::TestFactoryBase::CreateTest(), location=0x4b4468 &quot;the test fixture&#39;s constructor&quot;) at /home/docker/gazebo/test/gtest/src/gtest.cc:2115\n#14 0x000000000044cc13 in testing::TestInfo::Run (this=0x7c9ee0) at /home/docker/gazebo/test/gtest/src/gtest.cc:2320\n#15 0x000000000044d2c6 in testing::TestCase::Run (this=0x7b8cb0) at /home/docker/gazebo/test/gtest/src/gtest.cc:2445\n#16 0x00000000004543a4 in testing::internal::UnitTestImpl::RunAllTests (this=0x7b9670) at /home/docker/gazebo/test/gtest/src/gtest.cc:4316\n#17 0x000000000046cad1 in testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (object=0x7b9670, \n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x4540e4 &lt;testing::internal::UnitTestImpl::RunAllTests()&gt;, \n    location=0x4b4b08 &quot;auxiliary test code (environments or event listeners)&quot;) at /home/docker/gazebo/test/gtest/src/gtest.cc:2079\n#18 0x0000000000467b5f in testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (object=0x7b9670, \n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x4540e4 &lt;testing::internal::UnitTestImpl::RunAllTests()&gt;, \n    location=0x4b4b08 &quot;auxiliary test code (environments or event listeners)&quot;) at /home/docker/gazebo/test/gtest/src/gtest.cc:2115\n#19 0x0000000000452f6f in testing::UnitTest::Run (this=0x6f5820 &lt;testing::UnitTest::GetInstance()::instance&gt;) at /home/docker/gazebo/test/gtest/src/gtest.cc:3927\n#20 0x000000000043eb00 in RUN_ALL_TESTS () at /home/docker/gazebo/test/gtest/include/gtest/gtest.h:2288\n#21 0x000000000043d056 in main (argc=1, argv=0x7fffffffea78) at /home/docker/gazebo/test/integration/gpu_laser.cc:602\n(gdb) \n</pre></div>\n\n\n<p>The issue seems to be that it fails to open the test log from time to time. Because of this I have SIGSEGVS from time to time. EDIT: The malloc error seems to be from a heap corruption.</p>", "type": "rendered"}, "created_on": "2018-05-24T18:29:07.905656+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-05-24T18:37:19.479366+00:00", "type": "pullrequest_comment", "id": 65247469}