{"rendered": {"description": {"raw": "This is based on a [design document for graphical inertia modification](#!/osrf/gazebo_design/src/default/inertia_resize/inertia_resize.md). This adds tests to confirm that modifying mass and center-of-mass location with a `~/model/modify` message will actually update the inertia. Updating the inertia matrix will follow in a subsequent pull request.\r\n\r\nThe first test `InertialAccessors` updates inertial properties with a message and verifies that the C++ API reflects the change. This tests passes with each physics engine, since it is only checking the `physics::Inertial` object.\r\n\r\nThe `SetMass` and `SetCoG` tests use the `seesaw.world`, which has a few boxes stacked together and balancing:\r\n\r\n![seesaw.png](data/bitbucket.org/repo/jgXqbo/images/4131299900-seesaw.png)\r\n\r\nOne test increases the mass on one of the balanced boxes, and the other test moves the center-of-mass of the balancing plank away from the center. Each test assumes that the seesaw will tip over.\r\n\r\nThese tests require the `Link::UpdateMass` virtual function to be implemented for each physics engine. I added `BulletLink::UpdateMass`, `SimbodyLink::UpdateMass` and `DARTLink::UpdateMass` since they did not exist. I verified that the [ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/) is clean.\r\n\r\nI fixed `SetMass` for bullet in ca3b4789ed0b and for DART in b2fd97c7b7b4. As a bonus, `SetCoG` was fixed for DART by those changes as well.\r\n\r\nThe `SetCoG` test was broken for ODE; fixing it required updating all the collision offsets. Bullet will require something similar, though I haven\u2019t attempted it yet.\r\n\r\nFor the ODE fix, I also reduced some code duplication by calling `ODELink::UpdateSurface` from `ODELink::Init` and creating `ODELink::UpdateCollisionOffsets` that could be called from `Init` and `UpdateMass`. \r\n\r\nI haven\u2019t tried with Simbody. I\u2019ll cc @sherm1 to see what he recommends.\r\n\r\nJenkins results:\r\n\r\n* [ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/) is clean\r\n\r\n* [trusty no-gpu](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-no-gpu/680/) is clean\r\n\r\n* [trusty nvidia dart4](http://build.osrfoundation.org/view/gazebo/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia/85) is clean\r\n\r\nUpdate: more happy jenkins builds\r\n\r\n* http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/532/\r\n* http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/524/", "markup": "markdown", "html": "<p>This is based on a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/src/default/inertia_resize/inertia_resize.md\" rel=\"nofollow\">design document for graphical inertia modification</a>. This adds tests to confirm that modifying mass and center-of-mass location with a <code>~/model/modify</code> message will actually update the inertia. Updating the inertia matrix will follow in a subsequent pull request.</p>\n<p>The first test <code>InertialAccessors</code> updates inertial properties with a message and verifies that the C++ API reflects the change. This tests passes with each physics engine, since it is only checking the <code>physics::Inertial</code> object.</p>\n<p>The <code>SetMass</code> and <code>SetCoG</code> tests use the <code>seesaw.world</code>, which has a few boxes stacked together and balancing:</p>\n<p><img alt=\"seesaw.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/4131299900-seesaw.png\" /></p>\n<p>One test increases the mass on one of the balanced boxes, and the other test moves the center-of-mass of the balancing plank away from the center. Each test assumes that the seesaw will tip over.</p>\n<p>These tests require the <code>Link::UpdateMass</code> virtual function to be implemented for each physics engine. I added <code>BulletLink::UpdateMass</code>, <code>SimbodyLink::UpdateMass</code> and <code>DARTLink::UpdateMass</code> since they did not exist. I verified that the <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/\" rel=\"nofollow\">ABI checker</a> is clean.</p>\n<p>I fixed <code>SetMass</code> for bullet in <a href=\"#!/osrf/gazebo/commits/ca3b4789ed0b\" rel=\"nofollow\" class=\"ap-connect-link\">ca3b4789ed0b</a> and for DART in <a href=\"#!/osrf/gazebo/commits/b2fd97c7b7b4\" rel=\"nofollow\" class=\"ap-connect-link\">b2fd97c7b7b4</a>. As a bonus, <code>SetCoG</code> was fixed for DART by those changes as well.</p>\n<p>The <code>SetCoG</code> test was broken for ODE; fixing it required updating all the collision offsets. Bullet will require something similar, though I haven\u2019t attempted it yet.</p>\n<p>For the ODE fix, I also reduced some code duplication by calling <code>ODELink::UpdateSurface</code> from <code>ODELink::Init</code> and creating <code>ODELink::UpdateCollisionOffsets</code> that could be called from <code>Init</code> and <code>UpdateMass</code>. </p>\n<p>I haven\u2019t tried with Simbody. I\u2019ll cc @sherm1 to see what he recommends.</p>\n<p>Jenkins results:</p>\n<ul>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/\" rel=\"nofollow\">ABI checker</a> is clean</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-no-gpu/680/\" rel=\"nofollow\">trusty no-gpu</a> is clean</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia/85\" rel=\"nofollow\">trusty nvidia dart4</a> is clean</p>\n</li>\n</ul>\n<p>Update: more happy jenkins builds</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/532/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/532/</a></li>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/524/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/524/</a></li>\n</ul>", "type": "rendered"}, "title": {"raw": "Update inertia properties during simulation: part 1", "markup": "markdown", "html": "<p>Update inertia properties during simulation: part 1</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is based on a [design document for graphical inertia modification](#!/osrf/gazebo_design/src/default/inertia_resize/inertia_resize.md). This adds tests to confirm that modifying mass and center-of-mass location with a `~/model/modify` message will actually update the inertia. Updating the inertia matrix will follow in a subsequent pull request.\r\n\r\nThe first test `InertialAccessors` updates inertial properties with a message and verifies that the C++ API reflects the change. This tests passes with each physics engine, since it is only checking the `physics::Inertial` object.\r\n\r\nThe `SetMass` and `SetCoG` tests use the `seesaw.world`, which has a few boxes stacked together and balancing:\r\n\r\n![seesaw.png](data/bitbucket.org/repo/jgXqbo/images/4131299900-seesaw.png)\r\n\r\nOne test increases the mass on one of the balanced boxes, and the other test moves the center-of-mass of the balancing plank away from the center. Each test assumes that the seesaw will tip over.\r\n\r\nThese tests require the `Link::UpdateMass` virtual function to be implemented for each physics engine. I added `BulletLink::UpdateMass`, `SimbodyLink::UpdateMass` and `DARTLink::UpdateMass` since they did not exist. I verified that the [ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/) is clean.\r\n\r\nI fixed `SetMass` for bullet in ca3b4789ed0b and for DART in b2fd97c7b7b4. As a bonus, `SetCoG` was fixed for DART by those changes as well.\r\n\r\nThe `SetCoG` test was broken for ODE; fixing it required updating all the collision offsets. Bullet will require something similar, though I haven\u2019t attempted it yet.\r\n\r\nFor the ODE fix, I also reduced some code duplication by calling `ODELink::UpdateSurface` from `ODELink::Init` and creating `ODELink::UpdateCollisionOffsets` that could be called from `Init` and `UpdateMass`. \r\n\r\nI haven\u2019t tried with Simbody. I\u2019ll cc @sherm1 to see what he recommends.\r\n\r\nJenkins results:\r\n\r\n* [ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/) is clean\r\n\r\n* [trusty no-gpu](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-no-gpu/680/) is clean\r\n\r\n* [trusty nvidia dart4](http://build.osrfoundation.org/view/gazebo/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia/85) is clean\r\n\r\nUpdate: more happy jenkins builds\r\n\r\n* http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/532/\r\n* http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/524/", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1909/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:38511daff63b%0D96835b3fdd03?from_pullrequest_id=1909"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1909/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1909.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1909/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1909/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1909"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1909/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:38511daff63b%0D96835b3fdd03?from_pullrequest_id=1909"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1909/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1909/statuses_page=1.json"}}, "title": "Update inertia properties during simulation: part 1", "close_source_branch": true, "reviewers": [{"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}], "id": 1909, "destination": {"commit": {"hash": "96835b3fdd03", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/96835b3fdd03.json"}, "html": {"href": "#!/osrf/gazebo/commits/96835b3fdd03"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo6"}}, "created_on": "2015-09-25T23:30:53.067122+00:00", "summary": {"raw": "This is based on a [design document for graphical inertia modification](#!/osrf/gazebo_design/src/default/inertia_resize/inertia_resize.md). This adds tests to confirm that modifying mass and center-of-mass location with a `~/model/modify` message will actually update the inertia. Updating the inertia matrix will follow in a subsequent pull request.\r\n\r\nThe first test `InertialAccessors` updates inertial properties with a message and verifies that the C++ API reflects the change. This tests passes with each physics engine, since it is only checking the `physics::Inertial` object.\r\n\r\nThe `SetMass` and `SetCoG` tests use the `seesaw.world`, which has a few boxes stacked together and balancing:\r\n\r\n![seesaw.png](data/bitbucket.org/repo/jgXqbo/images/4131299900-seesaw.png)\r\n\r\nOne test increases the mass on one of the balanced boxes, and the other test moves the center-of-mass of the balancing plank away from the center. Each test assumes that the seesaw will tip over.\r\n\r\nThese tests require the `Link::UpdateMass` virtual function to be implemented for each physics engine. I added `BulletLink::UpdateMass`, `SimbodyLink::UpdateMass` and `DARTLink::UpdateMass` since they did not exist. I verified that the [ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/) is clean.\r\n\r\nI fixed `SetMass` for bullet in ca3b4789ed0b and for DART in b2fd97c7b7b4. As a bonus, `SetCoG` was fixed for DART by those changes as well.\r\n\r\nThe `SetCoG` test was broken for ODE; fixing it required updating all the collision offsets. Bullet will require something similar, though I haven\u2019t attempted it yet.\r\n\r\nFor the ODE fix, I also reduced some code duplication by calling `ODELink::UpdateSurface` from `ODELink::Init` and creating `ODELink::UpdateCollisionOffsets` that could be called from `Init` and `UpdateMass`. \r\n\r\nI haven\u2019t tried with Simbody. I\u2019ll cc @sherm1 to see what he recommends.\r\n\r\nJenkins results:\r\n\r\n* [ABI checker](http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/) is clean\r\n\r\n* [trusty no-gpu](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-no-gpu/680/) is clean\r\n\r\n* [trusty nvidia dart4](http://build.osrfoundation.org/view/gazebo/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia/85) is clean\r\n\r\nUpdate: more happy jenkins builds\r\n\r\n* http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/532/\r\n* http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/524/", "markup": "markdown", "html": "<p>This is based on a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/src/default/inertia_resize/inertia_resize.md\" rel=\"nofollow\">design document for graphical inertia modification</a>. This adds tests to confirm that modifying mass and center-of-mass location with a <code>~/model/modify</code> message will actually update the inertia. Updating the inertia matrix will follow in a subsequent pull request.</p>\n<p>The first test <code>InertialAccessors</code> updates inertial properties with a message and verifies that the C++ API reflects the change. This tests passes with each physics engine, since it is only checking the <code>physics::Inertial</code> object.</p>\n<p>The <code>SetMass</code> and <code>SetCoG</code> tests use the <code>seesaw.world</code>, which has a few boxes stacked together and balancing:</p>\n<p><img alt=\"seesaw.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/4131299900-seesaw.png\" /></p>\n<p>One test increases the mass on one of the balanced boxes, and the other test moves the center-of-mass of the balancing plank away from the center. Each test assumes that the seesaw will tip over.</p>\n<p>These tests require the <code>Link::UpdateMass</code> virtual function to be implemented for each physics engine. I added <code>BulletLink::UpdateMass</code>, <code>SimbodyLink::UpdateMass</code> and <code>DARTLink::UpdateMass</code> since they did not exist. I verified that the <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/\" rel=\"nofollow\">ABI checker</a> is clean.</p>\n<p>I fixed <code>SetMass</code> for bullet in <a href=\"#!/osrf/gazebo/commits/ca3b4789ed0b\" rel=\"nofollow\" class=\"ap-connect-link\">ca3b4789ed0b</a> and for DART in <a href=\"#!/osrf/gazebo/commits/b2fd97c7b7b4\" rel=\"nofollow\" class=\"ap-connect-link\">b2fd97c7b7b4</a>. As a bonus, <code>SetCoG</code> was fixed for DART by those changes as well.</p>\n<p>The <code>SetCoG</code> test was broken for ODE; fixing it required updating all the collision offsets. Bullet will require something similar, though I haven\u2019t attempted it yet.</p>\n<p>For the ODE fix, I also reduced some code duplication by calling <code>ODELink::UpdateSurface</code> from <code>ODELink::Init</code> and creating <code>ODELink::UpdateCollisionOffsets</code> that could be called from <code>Init</code> and <code>UpdateMass</code>. </p>\n<p>I haven\u2019t tried with Simbody. I\u2019ll cc @sherm1 to see what he recommends.</p>\n<p>Jenkins results:</p>\n<ul>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/gazebo-any_to_any-abichecker-vivid-amd64/24/API_ABI_report/\" rel=\"nofollow\">ABI checker</a> is clean</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-no-gpu/680/\" rel=\"nofollow\">trusty no-gpu</a> is clean</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia/85\" rel=\"nofollow\">trusty nvidia dart4</a> is clean</p>\n</li>\n</ul>\n<p>Update: more happy jenkins builds</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/532/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/532/</a></li>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/524/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/524/</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f6ac5f6c6578", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f6ac5f6c6578.json"}, "html": {"href": "#!/osrf/gazebo/commits/f6ac5f6c6578"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "inertia_msgs"}}, "comment_count": 31, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2015-10-02T19:02:30.239378+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}}, {"role": "PARTICIPANT", "participated_on": "2015-10-07T18:47:30.340972+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2015-10-02T18:27:11.915065+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2015-10-07T18:38:08.028640+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}], "reason": "", "updated_on": "2015-10-07T18:55:49.764643+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "38511daff63b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/38511daff63b.json"}, "html": {"href": "#!/osrf/gazebo/commits/38511daff63b"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}