{"pagelen": 50, "values": [{"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "6bdf22079f13", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6bdf22079f13.json"}, "html": {"href": "#!/osrf/gazebo/commits/6bdf22079f13"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5a4fef46a250", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5a4fef46a250.json"}, "html": {"href": "#!/osrf/gazebo/commits/5a4fef46a250"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-09-05T23:04:16.001046+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/536753.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-536753"}}, "parent": {"id": 535860, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/535860.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-535860"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "I added this in  5a4fef4\n\t\nI've run the test suite and code check and I think it's safe to merge.", "markup": "markdown", "html": "<p>I added this in  <a href=\"#!/osrf/gazebo/commits/5a4fef4\" rel=\"nofollow\" class=\"ap-connect-link\">5a4fef4</a></p>\n<p>I've run the test suite and code check and I think it's safe to merge.</p>", "type": "rendered"}, "created_on": "2013-09-05T23:00:21.108233+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2013-09-05T23:00:21.124604+00:00", "type": "pullrequest_comment", "id": 536753}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "6bdf22079f13", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6bdf22079f13.json"}, "html": {"href": "#!/osrf/gazebo/commits/6bdf22079f13"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5a4fef46a250", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5a4fef46a250.json"}, "html": {"href": "#!/osrf/gazebo/commits/5a4fef46a250"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-09-05T22:59:42.296386+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/536672.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-536672"}}, "parent": {"id": 536570, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/536570.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-536570"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "I started #827 for this issue.\n\nThanks for the review.", "markup": "markdown", "html": "<p>I started <a href=\"#!/osrf/gazebo/issues/827/unit_sensor_test-and-others-depend-on\" rel=\"nofollow\" title=\"UNIT_Sensor_TEST and others depend on machine performance\" class=\"ap-connect-link\">#827</a> for this issue.</p>\n<p>Thanks for the review.</p>", "type": "rendered"}, "created_on": "2013-09-05T22:25:46.460106+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2013-09-05T22:31:20.114788+00:00", "type": "pullrequest_comment", "id": 536672}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/536682.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-536682"}}, "parent": {"id": 535860, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/535860.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-535860"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "Good suggestion; I'm going to try it out.", "markup": "markdown", "html": "<p>Good suggestion; I'm going to try it out.</p>", "type": "rendered"}, "created_on": "2013-09-05T22:30:29.972733+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2013-09-05T22:30:29.981103+00:00", "type": "pullrequest_comment", "id": 536682}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"approval": {"date": "2013-09-05T21:47:35.578928+00:00", "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/536570.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-536570"}}, "parent": {"id": 535426, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/535426.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-535426"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "Let's handle this effect in all our unit tests as a whole, issue tracker with reference to this particular case is a good starting point.\nThanks.", "markup": "markdown", "html": "<p>Let's handle this effect in all our unit tests as a whole, issue tracker with reference to this particular case is a good starting point.\nThanks.</p>", "type": "rendered"}, "created_on": "2013-09-05T21:47:30.365438+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {}, "updated_on": "2013-09-05T21:47:30.375119+00:00", "type": "pullrequest_comment", "id": 536570}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/535860.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-535860"}}, "parent": {"id": 526213, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/526213.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-526213"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "If we prefer to wrap the lock we could invert the condition that surrounds the unlock() and write a return statement. Something like this:\n\n\n```\n#!c++\n\n//////////////////////////////////////////////////\nvoid Sensor::Update(bool _force)\n{\n  if (this->IsActive() || _force)\n  {\n    {\n      boost::mutex::scoped_lock lock(this->mutexLastUpdateTime);\n      common::Time simTime;\n      if (this->category == IMAGE && this->scene)\n        simTime = this->scene->GetSimTime();\n      else\n        simTime = this->world->GetSimTime();\n\n      if (simTime == this->lastUpdateTime && !_force)\n        return;\n\n      // Adjust time-to-update period to compensate for delays caused by another\n      // sensor's update in the same thread.\n      common::Time adjustedElapsed = simTime - this->lastUpdateTime +\n          this->updateDelay;\n\n      if (adjustedElapsed < this->updatePeriod && !_force)\n        return;\n\n      this->updateDelay = std::max(common::Time::Zero,\n          adjustedElapsed - this->updatePeriod);\n\n      // if delay is more than a full update period, then give up trying\n      // to catch up. This happens normally when the sensor just changed from\n      // an inactive to an active state, or the sensor just cannot hit its\n      // target update rate (worst case).\n      if (this->updateDelay >= this->updatePeriod)\n        this->updateDelay = common::Time::Zero;\n\n      this->lastUpdateTime = simTime;\n    }\n    this->UpdateImpl(_force);\n    this->updated();\n  }\n}\n```", "markup": "markdown", "html": "<p>If we prefer to wrap the lock we could invert the condition that surrounds the unlock() and write a return statement. Something like this:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">//////////////////////////////////////////////////</span>\n<span class=\"kt\">void</span> <span class=\"n\">Sensor</span><span class=\"o\">::</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"kt\">bool</span> <span class=\"n\">_force</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">IsActive</span><span class=\"p\">()</span> <span class=\"o\">||</span> <span class=\"n\">_force</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">::</span><span class=\"n\">scoped_lock</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">mutexLastUpdateTime</span><span class=\"p\">);</span>\n      <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Time</span> <span class=\"n\">simTime</span><span class=\"p\">;</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">category</span> <span class=\"o\">==</span> <span class=\"n\">IMAGE</span> <span class=\"o\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n        <span class=\"n\">simTime</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">scene</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSimTime</span><span class=\"p\">();</span>\n      <span class=\"k\">else</span>\n        <span class=\"n\">simTime</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSimTime</span><span class=\"p\">();</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">simTime</span> <span class=\"o\">==</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">lastUpdateTime</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">_force</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span><span class=\"p\">;</span>\n\n      <span class=\"c1\">// Adjust time-to-update period to compensate for delays caused by another</span>\n      <span class=\"c1\">// sensor&#39;s update in the same thread.</span>\n      <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Time</span> <span class=\"n\">adjustedElapsed</span> <span class=\"o\">=</span> <span class=\"n\">simTime</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">lastUpdateTime</span> <span class=\"o\">+</span>\n          <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updateDelay</span><span class=\"p\">;</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">adjustedElapsed</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updatePeriod</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">_force</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span><span class=\"p\">;</span>\n\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updateDelay</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">Zero</span><span class=\"p\">,</span>\n          <span class=\"n\">adjustedElapsed</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updatePeriod</span><span class=\"p\">);</span>\n\n      <span class=\"c1\">// if delay is more than a full update period, then give up trying</span>\n      <span class=\"c1\">// to catch up. This happens normally when the sensor just changed from</span>\n      <span class=\"c1\">// an inactive to an active state, or the sensor just cannot hit its</span>\n      <span class=\"c1\">// target update rate (worst case).</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updateDelay</span> <span class=\"o\">&gt;=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updatePeriod</span><span class=\"p\">)</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updateDelay</span> <span class=\"o\">=</span> <span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">Zero</span><span class=\"p\">;</span>\n\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">lastUpdateTime</span> <span class=\"o\">=</span> <span class=\"n\">simTime</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">UpdateImpl</span><span class=\"p\">(</span><span class=\"n\">_force</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">updated</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-09-05T18:54:43.756258+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2013-09-05T18:54:43.766430+00:00", "type": "pullrequest_comment", "id": 535860}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "6bdf22079f13", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6bdf22079f13.json"}, "html": {"href": "#!/osrf/gazebo/commits/6bdf22079f13"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8aae2b5461a0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8aae2b5461a0.json"}, "html": {"href": "#!/osrf/gazebo/commits/8aae2b5461a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-09-05T17:37:50.518356+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "6bdf22079f13", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6bdf22079f13.json"}, "html": {"href": "#!/osrf/gazebo/commits/6bdf22079f13"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8aae2b5461a0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8aae2b5461a0.json"}, "html": {"href": "#!/osrf/gazebo/commits/8aae2b5461a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-09-05T17:29:22.794574+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "6bdf22079f13", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6bdf22079f13.json"}, "html": {"href": "#!/osrf/gazebo/commits/6bdf22079f13"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "577af733d147", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/577af733d147.json"}, "html": {"href": "#!/osrf/gazebo/commits/577af733d147"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-09-05T17:26:31.168733+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/535426.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-535426"}}, "parent": {"id": 534711, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/534711.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-534711"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "I agree. Should I put this on the issue tracker or fix it in this pull request?", "markup": "markdown", "html": "<p>I agree. Should I put this on the issue tracker or fix it in this pull request?</p>", "type": "rendered"}, "created_on": "2013-09-05T17:21:37.052925+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2013-09-05T17:21:37.060339+00:00", "type": "pullrequest_comment", "id": 535426}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/534711.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-534711"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "As usual, our expectations about a generated rate that will vary depending on hardware are quite difficult to fit into the test suite. Implement a performance test to check for suspicious variations of the frame rate is the best way to go for checking changes in the frame rate. In this case of a unit test,  I would go just for checking ```hokuyoMsgCount``` > ```g_hokuyoMsgCount```", "markup": "markdown", "html": "<p>As usual, our expectations about a generated rate that will vary depending on hardware are quite difficult to fit into the test suite. Implement a performance test to check for suspicious variations of the frame rate is the best way to go for checking changes in the frame rate. In this case of a unit test,  I would go just for checking <code>hokuyoMsgCount</code> &gt; <code>g_hokuyoMsgCount</code></p>", "type": "rendered"}, "created_on": "2013-09-05T14:43:19.548476+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {}, "updated_on": "2013-09-05T14:43:19.560702+00:00", "type": "pullrequest_comment", "id": 534711}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"approval": {"date": "2013-09-04T18:59:49.692906+00:00", "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "ab99987afbf5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ab99987afbf5.json"}, "html": {"href": "#!/osrf/gazebo/commits/ab99987afbf5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0857fbbbddeb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0857fbbbddeb.json"}, "html": {"href": "#!/osrf/gazebo/commits/0857fbbbddeb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2013-09-04T18:59:32.274847+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "66a4ef346720", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/66a4ef346720.json"}, "html": {"href": "#!/osrf/gazebo/commits/66a4ef346720"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "02439f771f94", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/02439f771f94.json"}, "html": {"href": "#!/osrf/gazebo/commits/02439f771f94"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-09-03T17:48:58.312678+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/526222.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-526222"}}, "parent": {"id": 526213, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/526213.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-526213"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "Got it. I didn't see the nested if. Looks good.", "markup": "markdown", "html": "<p>Got it. I didn't see the nested if. Looks good.</p>", "type": "rendered"}, "created_on": "2013-09-03T16:37:23.898525+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2013-09-03T16:37:23.906864+00:00", "type": "pullrequest_comment", "id": 526222}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/526213.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-526213"}}, "parent": {"id": 526168, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/526168.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-526168"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "It's a little tricky. I put the `unlock()` call in so that the mutex wouldn't be locked during the `UpdateImpl` call, since lastUpdateTime shouldn't be touched by that function, and I think that call can take a while, especially for a CPU-based multi-ray sensor. The `unlock()` is not for safety; it's for performance, though I haven't profiled.\n\nIt's not obvious in this diff, but the `UpdateImpl()` call is inside a nested if statement, so it wasn't obvious to me how to wrap the lock. It helps to expand the diff a bit to see the whole function.\n\nI'm open to suggestions.", "markup": "markdown", "html": "<p>It's a little tricky. I put the <code>unlock()</code> call in so that the mutex wouldn't be locked during the <code>UpdateImpl</code> call, since lastUpdateTime shouldn't be touched by that function, and I think that call can take a while, especially for a CPU-based multi-ray sensor. The <code>unlock()</code> is not for safety; it's for performance, though I haven't profiled.</p>\n<p>It's not obvious in this diff, but the <code>UpdateImpl()</code> call is inside a nested if statement, so it wasn't obvious to me how to wrap the lock. It helps to expand the diff a bit to see the whole function.</p>\n<p>I'm open to suggestions.</p>", "type": "rendered"}, "created_on": "2013-09-03T16:34:23.527871+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2013-09-03T16:34:38.470031+00:00", "type": "pullrequest_comment", "id": 526213}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685/comments/526168.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685/_/diff#comment-526168"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}, "content": {"raw": "It might be cleaner to wrap the lock...unlock inside brackets and remove the explicit call to unlock. Future developers might find this easier to read.", "markup": "markdown", "html": "<p>It might be cleaner to wrap the lock...unlock inside brackets and remove the explicit call to unlock. Future developers might find this easier to read.</p>", "type": "rendered"}, "created_on": "2013-09-03T16:18:08.786682+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2013-09-03T16:18:08.799736+00:00", "type": "pullrequest_comment", "id": 526168}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "9ad03400ac95", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9ad03400ac95.json"}, "html": {"href": "#!/osrf/gazebo/commits/9ad03400ac95"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "27add1553986", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/27add1553986.json"}, "html": {"href": "#!/osrf/gazebo/commits/27add1553986"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-08-29T23:31:42.937277+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}, {"update": {"description": "Issue #236 had been fixed but regressed and wasn't captured by the current test. I've updated the test to capture the regression and fixed the problem (Sensors stopped updating after Reset World). The main issue was that `SensorManager::SimTimeEventHandler` (used in [SensorContainer::RunLoop](#!/osrf/gazebo/src/9ad03400ac953b5702ba8181d54f2fd1aab6f566/gazebo/sensors/SensorManager.cc#cl-513)) wasn't responding to the reset time signals. So I add a `this->runCondition.notify_one()` to `SensorContainer::ResetLastUpdateTimes` and added a mutex for good measure. The updated test now passes.\r\n\r\nWhile I was fixing tests, I noticed that the contact_sensor test has been failing 100% of the time (#796). The test involves placing a sphere on top of a box, and for some reason this causes the ODE contact to be very noisy. I changed the `min_depth` on the box to 5 mm, and it is fixed.", "title": "Fix regression of #236, also contact_sensor test #796", "destination": {"commit": {"hash": "9ad03400ac95", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9ad03400ac95.json"}, "html": {"href": "#!/osrf/gazebo/commits/9ad03400ac95"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "27add1553986", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/27add1553986.json"}, "html": {"href": "#!/osrf/gazebo/commits/27add1553986"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_236_regression"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2013-08-29T23:31:42.878135+00:00"}, "pull_request": {"type": "pullrequest", "id": 685, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/685.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/685"}}, "title": "Fix regression of #236, also contact_sensor test #796"}}]}