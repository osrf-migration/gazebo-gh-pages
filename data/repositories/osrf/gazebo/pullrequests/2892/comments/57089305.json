{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2892/comments/57089305.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3800f4aa7acf..433fcc71184d?path=gazebo%2Fphysics%2Fbullet%2FBulletJoint.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2892/_/diff#comment-57089305"}}, "parent": {"id": 57087809, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2892/comments/57087809.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2892/_/diff#comment-57087809"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2892, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2892.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2892"}}, "title": "Fix Joint::SetPosition for HingeJoint, issue 2430"}, "content": {"raw": "I specifically designed it to never lose precision. `currentAngle` will march towards the value of `_position` with a step size of `delta`. Once `currentAngle` is anywhere within `delta` of `_position`, it will call line 615 `currentAngle = _position` which will ultimately set them to be exactly the same, down to the bits.\n\nHowever, there's admittedly the possibility that both `_position` and `currentAngle` could be so large that incrementing by `delta` will no longer affect `currentAngle` because `delta` is so small that it falls out of the scope of the precision of `currentAngle`. That situation would cause it to get stuck in this loop.\n\nI did a quick test, and found that `currentAngle` would need to have a magnitude of approximately `9.97222e+15` or higher for this loop to get stuck. While I think we can rule out the possibility of any user legitimately wanting such a high joint angle, it would be good to sanitize this function so that we don't accidentally get stuck in this loop after being put into a bad state from a mistake that could have occurred elsewhere.\n\nTo give a healthy margin, I could put in a check to make sure that `currentAngle` and `_position` both have a magnitude lower than `1e+12`.", "markup": "markdown", "html": "<p>I specifically designed it to never lose precision. <code>currentAngle</code> will march towards the value of <code>_position</code> with a step size of <code>delta</code>. Once <code>currentAngle</code> is anywhere within <code>delta</code> of <code>_position</code>, it will call line 615 <code>currentAngle = _position</code> which will ultimately set them to be exactly the same, down to the bits.</p>\n<p>However, there's admittedly the possibility that both <code>_position</code> and <code>currentAngle</code> could be so large that incrementing by <code>delta</code> will no longer affect <code>currentAngle</code> because <code>delta</code> is so small that it falls out of the scope of the precision of <code>currentAngle</code>. That situation would cause it to get stuck in this loop.</p>\n<p>I did a quick test, and found that <code>currentAngle</code> would need to have a magnitude of approximately <code>9.97222e+15</code> or higher for this loop to get stuck. While I think we can rule out the possibility of any user legitimately wanting such a high joint angle, it would be good to sanitize this function so that we don't accidentally get stuck in this loop after being put into a bad state from a mistake that could have occurred elsewhere.</p>\n<p>To give a healthy margin, I could put in a check to make sure that <code>currentAngle</code> and <code>_position</code> both have a magnitude lower than <code>1e+12</code>.</p>", "type": "rendered"}, "created_on": "2018-02-22T22:06:23.469555+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "gazebo/physics/bullet/BulletJoint.cc"}, "updated_on": "2018-02-22T22:08:49.399129+00:00", "type": "pullrequest_comment", "id": 57089305}