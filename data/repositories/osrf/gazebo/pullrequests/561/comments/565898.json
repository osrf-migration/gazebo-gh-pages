{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/561/comments/565898.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/561/_/diff#comment-565898"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 561, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/561.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/561"}}, "title": "Performance improvements"}, "content": {"raw": "There are a lot of places in this pull request, in which we use a for loop and vector iterators for doing something with each vector element. I would consider to use BOOST_FOREACH. For example:\n\n```\n#!c++\nfor (Link_V::iterator liter = this->links.begin();\n      liter!= this->links.end(); ++liter)\n  {\n    if (*liter)\n    {\n      (*liter)->SetGravityMode(_v);\n  }\n```\n\n\n```\n#!c++\nBOOST_FOREACH(LinkPtr link, this->links)\n  {\n    if (link)\n    {\n      link->SetGravityMode(_v);\n    }  \n  }\n``` ", "markup": "markdown", "html": "<p>There are a lot of places in this pull request, in which we use a for loop and vector iterators for doing something with each vector element. I would consider to use BOOST_FOREACH. For example:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">Link_V</span><span class=\"o\">::</span><span class=\"n\">iterator</span> <span class=\"n\">liter</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">links</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">();</span>\n      <span class=\"n\">liter</span><span class=\"o\">!=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">links</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">liter</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">liter</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">liter</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">SetGravityMode</span><span class=\"p\">(</span><span class=\"n\">_v</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">BOOST_FOREACH</span><span class=\"p\">(</span><span class=\"n\">LinkPtr</span> <span class=\"n\">link</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">links</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">link</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">link</span><span class=\"o\">-&gt;</span><span class=\"n\">SetGravityMode</span><span class=\"p\">(</span><span class=\"n\">_v</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>  \n  <span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-09-13T19:07:05.851653+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2013-09-13T19:07:05.861709+00:00", "type": "pullrequest_comment", "id": 565898}