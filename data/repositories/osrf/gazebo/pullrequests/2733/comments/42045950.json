{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2733/comments/42045950.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/pchorak/gazebo:83df2a4ef9d5..5e024b2ac9c0?path=plugins%2FGravityCompensationPlugin.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2733/_/diff#comment-42045950"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2733, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2733.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2733"}}, "title": "Gravity Compensation Plugin"}, "content": {"raw": "We can accomplish the purpose of this block of code without relying on the root joint being a `FreeJoint`. DART offers the function `Joint::setTransformFromParentBodyNode(const Eigen::Isometry3d&)` which can be applied to any joint type. Using that instead of `FreeJoint::setTransform(~)` should make this function more general.\n\nAlso, the recommended usage is if you know that the joint instance is a `FreeJoint`, then you should call the non-static version of `FreeJoint::setTransform(~)`, like:\n\n```\ndtRoot->setTransform(dtPose);\n```\n\nThe static version of the function performs a `dynamic_cast` which is unnecessary if you already know it's a `FreeJoint` instance. But if you go with the `Joint::setTransformFromParentBodyNode(~)` approach that I mentioned above, then it's irrelevant.", "markup": "markdown", "html": "<p>We can accomplish the purpose of this block of code without relying on the root joint being a <code>FreeJoint</code>. DART offers the function <code>Joint::setTransformFromParentBodyNode(const Eigen::Isometry3d&amp;)</code> which can be applied to any joint type. Using that instead of <code>FreeJoint::setTransform(~)</code> should make this function more general.</p>\n<p>Also, the recommended usage is if you know that the joint instance is a <code>FreeJoint</code>, then you should call the non-static version of <code>FreeJoint::setTransform(~)</code>, like:</p>\n<div class=\"codehilite\"><pre><span></span>dtRoot-&gt;setTransform(dtPose);\n</pre></div>\n\n\n<p>The static version of the function performs a <code>dynamic_cast</code> which is unnecessary if you already know it's a <code>FreeJoint</code> instance. But if you go with the <code>Joint::setTransformFromParentBodyNode(~)</code> approach that I mentioned above, then it's irrelevant.</p>", "type": "rendered"}, "created_on": "2017-08-02T20:43:10.582219+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 210, "from": null, "outdated": true, "path": "plugins/GravityCompensationPlugin.cc"}, "updated_on": "2017-08-02T20:43:10.664562+00:00", "type": "pullrequest_comment", "id": 42045950}