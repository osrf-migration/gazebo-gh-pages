{"pagelen": 50, "values": [{"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now\r\n\r\nupdate by @scpeters: I've merged forward pull request #2811 from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "4d8123aafcc5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4d8123aafcc5.json"}, "html": {"href": "#!/osrf/gazebo/commits/4d8123aafcc5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "78ac1cb9a6d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/78ac1cb9a6d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/78ac1cb9a6d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "MERGED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2018-08-10T22:22:16.045508+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"approval": {"date": "2018-08-10T22:21:43.843449+00:00", "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/66119249.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-66119249"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "do we want to rename these new fields to match the naming from pull request #2811? `record_resources`?", "markup": "markdown", "html": "<p>do we want to rename these new fields to match the naming from <a href=\"#!/osrf/gazebo/pull-requests/2811/save-models-material-and-meshes-when\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2811</a>? <code>record_resources</code>?</p>", "type": "rendered"}, "created_on": "2018-06-04T19:40:22.635657+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2018-06-04T19:40:22.642311+00:00", "type": "pullrequest_comment", "id": 66119249}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now\r\n\r\nupdate by @scpeters: I've merged forward pull request #2811 from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "e223d7316403", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e223d7316403.json"}, "html": {"href": "#!/osrf/gazebo/commits/e223d7316403"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "78ac1cb9a6d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/78ac1cb9a6d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/78ac1cb9a6d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-06-04T19:38:46.057907+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "e223d7316403", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e223d7316403.json"}, "html": {"href": "#!/osrf/gazebo/commits/e223d7316403"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "78ac1cb9a6d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/78ac1cb9a6d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/78ac1cb9a6d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-06-04T19:10:30.230700+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/66116591.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-66116591"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "do we want to rename these new fields? `record_resources`?", "markup": "markdown", "html": "<p>do we want to rename these new fields? <code>record_resources</code>?</p>", "type": "rendered"}, "created_on": "2018-06-04T19:06:39.609013+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2018-06-04T19:06:39.616061+00:00", "type": "pullrequest_comment", "id": 66116591}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "e223d7316403", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e223d7316403.json"}, "html": {"href": "#!/osrf/gazebo/commits/e223d7316403"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ae5e6944d9de", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ae5e6944d9de.json"}, "html": {"href": "#!/osrf/gazebo/commits/ae5e6944d9de"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-06-04T19:04:56.021948+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "e223d7316403", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e223d7316403.json"}, "html": {"href": "#!/osrf/gazebo/commits/e223d7316403"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ae5e6944d9de", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ae5e6944d9de.json"}, "html": {"href": "#!/osrf/gazebo/commits/ae5e6944d9de"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-06-04T19:04:53.655801+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "de4206af18d7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/de4206af18d7.json"}, "html": {"href": "#!/osrf/gazebo/commits/de4206af18d7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5db5a4491e53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5db5a4491e53.json"}, "html": {"href": "#!/osrf/gazebo/commits/5db5a4491e53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2018-05-04T21:38:22.965664+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "75b7d15c6c2a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/75b7d15c6c2a.json"}, "html": {"href": "#!/osrf/gazebo/commits/75b7d15c6c2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2c3b764f863f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c3b764f863f.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c3b764f863f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "date": "2017-11-15T02:18:56.212979+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48688796.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48688796"}}, "parent": {"id": 48684296, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48684296.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48684296"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "Good point! Maybe we can add a `-r --record_with_model` to enforce the model saving.   \nIf I record from the gui side using `Ctrl + D` to bring it up, then we probably have to add a checkbox to enforce the model saving", "markup": "markdown", "html": "<p>Good point! Maybe we can add a <code>-r --record_with_model</code> to enforce the model saving. <br />\nIf I record from the gui side using <code>Ctrl + D</code> to bring it up, then we probably have to add a checkbox to enforce the model saving</p>", "type": "rendered"}, "created_on": "2017-11-03T03:56:42.069212+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "updated_on": "2017-11-14T19:46:36.903358+00:00", "type": "pullrequest_comment", "id": 48688796}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "75b7d15c6c2a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/75b7d15c6c2a.json"}, "html": {"href": "#!/osrf/gazebo/commits/75b7d15c6c2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4236078ee198", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4236078ee198.json"}, "html": {"href": "#!/osrf/gazebo/commits/4236078ee198"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "date": "2017-11-14T19:32:24.384322+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/49451487.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-49451487"}}, "parent": {"id": 48893216, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48893216.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48893216"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "I searched about this when I added this function as well. It seems in the current `gazebo` repo we never import the `Filesystem.hh` from `ign-common`    \nbut rather using the `boost/filesystem.hpp` directly.   \nI am fine with either way as long as we keep it consistent. If we port the ign-common's `directory iterator` functionality here, then we might want to  \nchange all the other places where we port `boost/filesystem` accordingly to use `ign-common` functionality", "markup": "markdown", "html": "<p>I searched about this when I added this function as well. It seems in the current <code>gazebo</code> repo we never import the <code>Filesystem.hh</code> from <code>ign-common</code>  <br />\nbut rather using the <code>boost/filesystem.hpp</code> directly. <br />\nI am fine with either way as long as we keep it consistent. If we port the ign-common's <code>directory iterator</code> functionality here, then we might want to<br />\nchange all the other places where we port <code>boost/filesystem</code> accordingly to use <code>ign-common</code> functionality</p>", "type": "rendered"}, "created_on": "2017-11-13T18:55:23.487852+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {}, "updated_on": "2017-11-13T18:55:23.490736+00:00", "type": "pullrequest_comment", "id": 49451487}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48893216.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48893216"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "not sure if we're still moving towards the goal of removing `boost` from gazebo code base. If so we could port the ign-common's [directory iterator](https://bitbucket.org/ignitionrobotics/ign-common/src/76d416addd2fc9bf507923c595ef17dd2a67814f/include/ignition/common/Filesystem.hh?at=default&fileviewer=file-view-default#Filesystem.hh-148) functionality here... or use ign-common directly. ", "markup": "markdown", "html": "<p>not sure if we're still moving towards the goal of removing <code>boost</code> from gazebo code base. If so we could port the ign-common's <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-common/src/76d416addd2fc9bf507923c595ef17dd2a67814f/include/ignition/common/Filesystem.hh?at=default&amp;fileviewer=file-view-default#Filesystem.hh-148\" rel=\"nofollow\">directory iterator</a> functionality here... or use ign-common directly. </p>", "type": "rendered"}, "created_on": "2017-11-06T23:11:36.553532+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2017-11-06T23:11:36.556250+00:00", "type": "pullrequest_comment", "id": 48893216}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48764274.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48764274"}}, "parent": {"id": 48754457, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48754457.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48754457"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "Thanks for catching this! Fixed here  [6765792](#!/osrf/gazebo/commits/6765792554857c8e325b70d3ea540b92e7f103e0?at=default)", "markup": "markdown", "html": "<p>Thanks for catching this! Fixed here  <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/commits/6765792554857c8e325b70d3ea540b92e7f103e0?at=default\" rel=\"nofollow\">6765792</a></p>", "type": "rendered"}, "created_on": "2017-11-03T19:50:13.334126+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {}, "updated_on": "2017-11-03T19:50:13.337840+00:00", "type": "pullrequest_comment", "id": 48764274}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48764180.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48764180"}}, "parent": {"id": 48684296, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48684296.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48684296"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "default behaviour is updated [6765792](#!/osrf/gazebo/commits/6765792554857c8e325b70d3ea540b92e7f103e0?at=default), following the tutorial [here](http://gazebosim.org/tutorials?tut=logging_playback): \n\n```\ngazebo -r PATH_TO_WORLD_FILE.world\n```\nwill behave exactly as what it was before and no models will be saved. \n\nWhen we would like to save the models, use the following command: \n```\ngazebo -r --record_with_model PATH_TO_WORLD_FILE.world\n```\n\nThis usage case is also added to `gazebo help`", "markup": "markdown", "html": "<p>default behaviour is updated <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/commits/6765792554857c8e325b70d3ea540b92e7f103e0?at=default\" rel=\"nofollow\">6765792</a>, following the tutorial <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=logging_playback\" rel=\"nofollow\">here</a>: </p>\n<div class=\"codehilite\"><pre><span></span>gazebo -r PATH_TO_WORLD_FILE.world\n</pre></div>\n\n\n<p>will behave exactly as what it was before and no models will be saved. </p>\n<p>When we would like to save the models, use the following command: </p>\n<div class=\"codehilite\"><pre><span></span>gazebo -r --record_with_model PATH_TO_WORLD_FILE.world\n</pre></div>\n\n\n<p>This usage case is also added to <code>gazebo help</code></p>", "type": "rendered"}, "created_on": "2017-11-03T19:48:40.812075+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "updated_on": "2017-11-03T19:49:42.018118+00:00", "type": "pullrequest_comment", "id": 48764180}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48764223.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48764223"}}, "parent": {"id": 48754315, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48754315.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48754315"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "code check errors fixed in [6765792](#!/osrf/gazebo/commits/6765792554857c8e325b70d3ea540b92e7f103e0?at=default)\nRun locally and get `Total errors found: 0`", "markup": "markdown", "html": "<p>code check errors fixed in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/commits/6765792554857c8e325b70d3ea540b92e7f103e0?at=default\" rel=\"nofollow\">6765792</a>\nRun locally and get <code>Total errors found: 0</code></p>", "type": "rendered"}, "created_on": "2017-11-03T19:49:26.249323+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "updated_on": "2017-11-03T19:49:26.251848+00:00", "type": "pullrequest_comment", "id": 48764223}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "676579255485", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/676579255485.json"}, "html": {"href": "#!/osrf/gazebo/commits/676579255485"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "date": "2017-11-03T19:44:59.436501+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48754457.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48754457"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "I think this boost include doesn't need to be in the header file", "markup": "markdown", "html": "<p>I think this boost include doesn't need to be in the header file</p>", "type": "rendered"}, "created_on": "2017-11-03T17:29:29.146423+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-11-03T17:29:29.149334+00:00", "type": "pullrequest_comment", "id": 48754457}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48754315.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48754315"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "I noticed a few new cppcheck warnings `sh tools/code_check.sh | grep -v explicit`:\n\n* https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/327/cppcheckResult/", "markup": "markdown", "html": "<p>I noticed a few new cppcheck warnings <code>sh tools/code_check.sh | grep -v explicit</code>:</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/327/cppcheckResult/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/327/cppcheckResult/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2017-11-03T17:27:42.060064+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-03T17:27:42.063005+00:00", "type": "pullrequest_comment", "id": 48754315}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48753424.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48753424"}}, "parent": {"id": 48688796, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48688796.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48688796"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "+1", "markup": "markdown", "html": "<p>+1</p>", "type": "rendered"}, "created_on": "2017-11-03T17:16:27.928281+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-11-03T17:16:27.931195+00:00", "type": "pullrequest_comment", "id": 48753424}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments/48684296.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797/_/diff#comment-48684296"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}, "content": {"raw": "I'm torn on whether this should be the default behaviour, but I definitely think we should offer a way to make it optional. I can imagine recording several small logs of the same world and creating dozens of duplicated files in my filesystem. What do you think?", "markup": "markdown", "html": "<p>I'm torn on whether this should be the default behaviour, but I definitely think we should offer a way to make it optional. I can imagine recording several small logs of the same world and creating dozens of duplicated files in my filesystem. What do you think?</p>", "type": "rendered"}, "created_on": "2017-11-03T00:39:46.276429+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-11-03T00:39:46.279040+00:00", "type": "pullrequest_comment", "id": 48684296}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cd51f4890238", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/cd51f4890238.json"}, "html": {"href": "#!/osrf/gazebo/commits/cd51f4890238"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "date": "2017-11-03T00:32:05.524659+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cd51f4890238", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/cd51f4890238.json"}, "html": {"href": "#!/osrf/gazebo/commits/cd51f4890238"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "date": "2017-11-03T00:30:37.146625+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}, {"update": {"description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory", "title": "Save models' material and meshes when logging", "destination": {"commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cd51f4890238", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/cd51f4890238.json"}, "html": {"href": "#!/osrf/gazebo/commits/cd51f4890238"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "state": "OPEN", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "date": "2017-11-03T00:30:37.087767+00:00"}, "pull_request": {"type": "pullrequest", "id": 2797, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}}, "title": "Save models' material and meshes when logging"}}]}