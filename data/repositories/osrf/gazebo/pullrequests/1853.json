{"rendered": {"description": {"raw": "Some problems have been observed with linking against Boost in downstream packages that use `find_package(gazebo)`. The problem is that the specific Boost components that are specified in [cmake/SearchForStuff.cmake](#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/SearchForStuff.cmake#SearchForStuff.cmake-499) were not included in the [gazebo-config.cmake.in](#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/gazebo-config.cmake.in#gazebo-config.cmake.in-49) template (see #1692 for more details). The fix is to search for these components explicitly in that template.\r\n\r\nTo show that it works, I have simplified the example CMakeLists.txt files so that they only search for gazebo, not protobuf, Boost, or SDFormat. A [jenkins no-gpu build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/582/) shows all the example tests passing.\r\n\r\nI also replace the following statement:\r\n\r\n~~~\r\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${GAZEBO_CXX_FLAGS}\")\r\n~~~\r\n\r\nwith\r\n\r\n~~~\r\nlist(APPEND CMAKE_CXX_FLAGS \"${GAZEBO_CXX_FLAGS}\")\r\n~~~\r\n\r\nI think @dirk-thomas recommends using the `list(APPEND)` syntax.", "markup": "markdown", "html": "<p>Some problems have been observed with linking against Boost in downstream packages that use <code>find_package(gazebo)</code>. The problem is that the specific Boost components that are specified in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/SearchForStuff.cmake#SearchForStuff.cmake-499\" rel=\"nofollow\">cmake/SearchForStuff.cmake</a> were not included in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/gazebo-config.cmake.in#gazebo-config.cmake.in-49\" rel=\"nofollow\">gazebo-config.cmake.in</a> template (see <a href=\"#!/osrf/gazebo/issues/1692/find_package-gazebo-deletes-results-of\" rel=\"nofollow\" title=\"find_package(gazebo) deletes results of find_package(Boost)?\" class=\"ap-connect-link\"><s>#1692</s></a> for more details). The fix is to search for these components explicitly in that template.</p>\n<p>To show that it works, I have simplified the example CMakeLists.txt files so that they only search for gazebo, not protobuf, Boost, or SDFormat. A <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/582/\" rel=\"nofollow\">jenkins no-gpu build</a> shows all the example tests passing.</p>\n<p>I also replace the following statement:</p>\n<div class=\"codehilite\"><pre><span></span>set(CMAKE_CXX_FLAGS &quot;<span class=\"cp\">${</span><span class=\"n\">CMAKE_CXX_FLAGS</span><span class=\"cp\">}</span> <span class=\"cp\">${</span><span class=\"n\">GAZEBO_CXX_FLAGS</span><span class=\"cp\">}</span>&quot;)\n</pre></div>\n\n\n<p>with</p>\n<div class=\"codehilite\"><pre><span></span>list(APPEND CMAKE_CXX_FLAGS &quot;<span class=\"cp\">${</span><span class=\"n\">GAZEBO_CXX_FLAGS</span><span class=\"cp\">}</span>&quot;)\n</pre></div>\n\n\n<p>I think @dirk-thomas recommends using the <code>list(APPEND)</code> syntax.</p>", "type": "rendered"}, "title": {"raw": "Search for Boost components in gazebo-config.cmake (#1692)", "markup": "markdown", "html": "<p>Search for Boost components in gazebo-config.cmake (<a href=\"#!/osrf/gazebo/issues/1692/find_package-gazebo-deletes-results-of\" rel=\"nofollow\" title=\"find_package(gazebo) deletes results of find_package(Boost)?\" class=\"ap-connect-link\"><s>#1692</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Some problems have been observed with linking against Boost in downstream packages that use `find_package(gazebo)`. The problem is that the specific Boost components that are specified in [cmake/SearchForStuff.cmake](#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/SearchForStuff.cmake#SearchForStuff.cmake-499) were not included in the [gazebo-config.cmake.in](#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/gazebo-config.cmake.in#gazebo-config.cmake.in-49) template (see #1692 for more details). The fix is to search for these components explicitly in that template.\r\n\r\nTo show that it works, I have simplified the example CMakeLists.txt files so that they only search for gazebo, not protobuf, Boost, or SDFormat. A [jenkins no-gpu build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/582/) shows all the example tests passing.\r\n\r\nI also replace the following statement:\r\n\r\n~~~\r\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${GAZEBO_CXX_FLAGS}\")\r\n~~~\r\n\r\nwith\r\n\r\n~~~\r\nlist(APPEND CMAKE_CXX_FLAGS \"${GAZEBO_CXX_FLAGS}\")\r\n~~~\r\n\r\nI think @dirk-thomas recommends using the `list(APPEND)` syntax.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1853/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:a830fbd1715f%0Daf2de33f255b?from_pullrequest_id=1853"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1853/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1853.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1853/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1853/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1853"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1853/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:a830fbd1715f%0Daf2de33f255b?from_pullrequest_id=1853"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1853/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1853/statuses_page=1.json"}}, "title": "Search for Boost components in gazebo-config.cmake (#1692)", "close_source_branch": true, "reviewers": [], "id": 1853, "destination": {"commit": {"hash": "af2de33f255b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/af2de33f255b.json"}, "html": {"href": "#!/osrf/gazebo/commits/af2de33f255b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo6"}}, "created_on": "2015-08-07T04:53:50.458980+00:00", "summary": {"raw": "Some problems have been observed with linking against Boost in downstream packages that use `find_package(gazebo)`. The problem is that the specific Boost components that are specified in [cmake/SearchForStuff.cmake](#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/SearchForStuff.cmake#SearchForStuff.cmake-499) were not included in the [gazebo-config.cmake.in](#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/gazebo-config.cmake.in#gazebo-config.cmake.in-49) template (see #1692 for more details). The fix is to search for these components explicitly in that template.\r\n\r\nTo show that it works, I have simplified the example CMakeLists.txt files so that they only search for gazebo, not protobuf, Boost, or SDFormat. A [jenkins no-gpu build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/582/) shows all the example tests passing.\r\n\r\nI also replace the following statement:\r\n\r\n~~~\r\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${GAZEBO_CXX_FLAGS}\")\r\n~~~\r\n\r\nwith\r\n\r\n~~~\r\nlist(APPEND CMAKE_CXX_FLAGS \"${GAZEBO_CXX_FLAGS}\")\r\n~~~\r\n\r\nI think @dirk-thomas recommends using the `list(APPEND)` syntax.", "markup": "markdown", "html": "<p>Some problems have been observed with linking against Boost in downstream packages that use <code>find_package(gazebo)</code>. The problem is that the specific Boost components that are specified in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/SearchForStuff.cmake#SearchForStuff.cmake-499\" rel=\"nofollow\">cmake/SearchForStuff.cmake</a> were not included in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/75802f080f755d66f6d3bf80a2c1a7176778d7cc/cmake/gazebo-config.cmake.in#gazebo-config.cmake.in-49\" rel=\"nofollow\">gazebo-config.cmake.in</a> template (see <a href=\"#!/osrf/gazebo/issues/1692/find_package-gazebo-deletes-results-of\" rel=\"nofollow\" title=\"find_package(gazebo) deletes results of find_package(Boost)?\" class=\"ap-connect-link\"><s>#1692</s></a> for more details). The fix is to search for these components explicitly in that template.</p>\n<p>To show that it works, I have simplified the example CMakeLists.txt files so that they only search for gazebo, not protobuf, Boost, or SDFormat. A <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/582/\" rel=\"nofollow\">jenkins no-gpu build</a> shows all the example tests passing.</p>\n<p>I also replace the following statement:</p>\n<div class=\"codehilite\"><pre><span></span>set(CMAKE_CXX_FLAGS &quot;<span class=\"cp\">${</span><span class=\"n\">CMAKE_CXX_FLAGS</span><span class=\"cp\">}</span> <span class=\"cp\">${</span><span class=\"n\">GAZEBO_CXX_FLAGS</span><span class=\"cp\">}</span>&quot;)\n</pre></div>\n\n\n<p>with</p>\n<div class=\"codehilite\"><pre><span></span>list(APPEND CMAKE_CXX_FLAGS &quot;<span class=\"cp\">${</span><span class=\"n\">GAZEBO_CXX_FLAGS</span><span class=\"cp\">}</span>&quot;)\n</pre></div>\n\n\n<p>I think @dirk-thomas recommends using the <code>list(APPEND)</code> syntax.</p>", "type": "rendered"}, "source": {"commit": {"hash": "2dd014a497da", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2dd014a497da.json"}, "html": {"href": "#!/osrf/gazebo/commits/2dd014a497da"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_1692"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-08-21T22:48:30.023091+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2015-08-14T17:28:19.176011+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2015-08-24T17:09:41.342341+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2015-08-14T17:11:28.715703+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2015-08-24T18:20:25.105182+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "a830fbd1715f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a830fbd1715f.json"}, "html": {"href": "#!/osrf/gazebo/commits/a830fbd1715f"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}