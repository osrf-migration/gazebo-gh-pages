{"rendered": {"description": {"raw": "Implementation of the Physics Preset Profile API [design](#!/osrf/gazebo_design/src/e64787224f59902a986c22f7d20fdb39e24b8764/physics_presets/physics_presets.md).\r\n\r\n~~Requires sdformat [PR146](https://bitbucket.org/osrf/sdformat/pull-request/146/physics-preset-attributes/diff)~~ merged\r\n\r\nThis PR adds an API for switching between different physics profiles, specified as physics blocks in SDF.\r\n\r\nI also included 2 small fixes the ODEPhysics and SimbodyPhysics to handle exceptions.\r\n\r\nA forthcoming PR will implement the command line interface to `PresetManager` ([preview](#!/osrf/gazebo/branch/physics_presets_cli)) and the ability to generate SDF from physics profiles.\r\n\r\nKnown issue(s):\r\n\r\nIn physics elements with elements of different types, e.g. `test/worlds/presets.world` has `preset1` which has `ode`, `simbody` and `bullet` blocks, `PresetManager` will attempt to set all parameters specified in the profile. An optimization would be to only set parameters for the engine that is specified in the `type` attribute of `physics`. Since this is not currently implemented, the test gives a lot of warnings, such as `[Wrn] [PhysicsEngine.cc:225] SetParam failed for [cfm] in physics engine simbody`.\r\n\r\n~~The implementation of `PresetManager` relies on `PhysicsEngine::SetParam`. `SetParam` is not implemented for Simbody, so the functionality of this PR will not work with Simbody. (If/when [PR1473](#!/osrf/gazebo/pull-request/1473/) gets merged before this, I will complete the `PresetManager` test to include Simbody.~~ merged and simbody test integrated\r\n\r\n~~For all the physics engines, `SetParam` is not fully implemented for certain parameters, so you may receive lots of gzwarnings from the `PhysicsEngine` implementation in gzserver.~~ Fixed by [PR1528](#!/osrf/gazebo/pull-request/1528/call-physicsengine-setparam-in-child/diff)\r\n\r\nA unit test for `PresetManager` should be added to get to ~90% coverage.", "markup": "markdown", "html": "<p>Implementation of the Physics Preset Profile API <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/src/e64787224f59902a986c22f7d20fdb39e24b8764/physics_presets/physics_presets.md\" rel=\"nofollow\">design</a>.</p>\n<p><del>Requires sdformat <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-request/146/physics-preset-attributes/diff\" rel=\"nofollow\">PR146</a></del> merged</p>\n<p>This PR adds an API for switching between different physics profiles, specified as physics blocks in SDF.</p>\n<p>I also included 2 small fixes the ODEPhysics and SimbodyPhysics to handle exceptions.</p>\n<p>A forthcoming PR will implement the command line interface to <code>PresetManager</code> (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branch/physics_presets_cli\" rel=\"nofollow\">preview</a>) and the ability to generate SDF from physics profiles.</p>\n<p>Known issue(s):</p>\n<p>In physics elements with elements of different types, e.g. <code>test/worlds/presets.world</code> has <code>preset1</code> which has <code>ode</code>, <code>simbody</code> and <code>bullet</code> blocks, <code>PresetManager</code> will attempt to set all parameters specified in the profile. An optimization would be to only set parameters for the engine that is specified in the <code>type</code> attribute of <code>physics</code>. Since this is not currently implemented, the test gives a lot of warnings, such as <code>[Wrn] [PhysicsEngine.cc:225] SetParam failed for [cfm] in physics engine simbody</code>.</p>\n<p><del>The implementation of <code>PresetManager</code> relies on <code>PhysicsEngine::SetParam</code>. <code>SetParam</code> is not implemented for Simbody, so the functionality of this PR will not work with Simbody. (If/when <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1473/\" rel=\"nofollow\">PR1473</a> gets merged before this, I will complete the <code>PresetManager</code> test to include Simbody.</del> merged and simbody test integrated</p>\n<p><del>For all the physics engines, <code>SetParam</code> is not fully implemented for certain parameters, so you may receive lots of gzwarnings from the <code>PhysicsEngine</code> implementation in gzserver.</del> Fixed by <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1528/call-physicsengine-setparam-in-child/diff\" rel=\"nofollow\">PR1528</a></p>\n<p>A unit test for <code>PresetManager</code> should be added to get to ~90% coverage.</p>", "type": "rendered"}, "title": {"raw": "`PresetManager` for physics library", "markup": "markdown", "html": "<p><code>PresetManager</code> for physics library</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Implementation of the Physics Preset Profile API [design](#!/osrf/gazebo_design/src/e64787224f59902a986c22f7d20fdb39e24b8764/physics_presets/physics_presets.md).\r\n\r\n~~Requires sdformat [PR146](https://bitbucket.org/osrf/sdformat/pull-request/146/physics-preset-attributes/diff)~~ merged\r\n\r\nThis PR adds an API for switching between different physics profiles, specified as physics blocks in SDF.\r\n\r\nI also included 2 small fixes the ODEPhysics and SimbodyPhysics to handle exceptions.\r\n\r\nA forthcoming PR will implement the command line interface to `PresetManager` ([preview](#!/osrf/gazebo/branch/physics_presets_cli)) and the ability to generate SDF from physics profiles.\r\n\r\nKnown issue(s):\r\n\r\nIn physics elements with elements of different types, e.g. `test/worlds/presets.world` has `preset1` which has `ode`, `simbody` and `bullet` blocks, `PresetManager` will attempt to set all parameters specified in the profile. An optimization would be to only set parameters for the engine that is specified in the `type` attribute of `physics`. Since this is not currently implemented, the test gives a lot of warnings, such as `[Wrn] [PhysicsEngine.cc:225] SetParam failed for [cfm] in physics engine simbody`.\r\n\r\n~~The implementation of `PresetManager` relies on `PhysicsEngine::SetParam`. `SetParam` is not implemented for Simbody, so the functionality of this PR will not work with Simbody. (If/when [PR1473](#!/osrf/gazebo/pull-request/1473/) gets merged before this, I will complete the `PresetManager` test to include Simbody.~~ merged and simbody test integrated\r\n\r\n~~For all the physics engines, `SetParam` is not fully implemented for certain parameters, so you may receive lots of gzwarnings from the `PhysicsEngine` implementation in gzserver.~~ Fixed by [PR1528](#!/osrf/gazebo/pull-request/1528/call-physicsengine-setparam-in-child/diff)\r\n\r\nA unit test for `PresetManager` should be added to get to ~90% coverage.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1471/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5eed0402ea08%0D15d46c1deb7e?from_pullrequest_id=1471"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1471/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1471.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1471/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1471/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1471"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1471/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5eed0402ea08%0D15d46c1deb7e?from_pullrequest_id=1471"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1471/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1471/statuses_page=1.json"}}, "title": "`PresetManager` for physics library", "close_source_branch": false, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}], "id": 1471, "destination": {"commit": {"hash": "15d46c1deb7e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/15d46c1deb7e.json"}, "html": {"href": "#!/osrf/gazebo/commits/15d46c1deb7e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2015-02-27T23:05:56.716459+00:00", "summary": {"raw": "Implementation of the Physics Preset Profile API [design](#!/osrf/gazebo_design/src/e64787224f59902a986c22f7d20fdb39e24b8764/physics_presets/physics_presets.md).\r\n\r\n~~Requires sdformat [PR146](https://bitbucket.org/osrf/sdformat/pull-request/146/physics-preset-attributes/diff)~~ merged\r\n\r\nThis PR adds an API for switching between different physics profiles, specified as physics blocks in SDF.\r\n\r\nI also included 2 small fixes the ODEPhysics and SimbodyPhysics to handle exceptions.\r\n\r\nA forthcoming PR will implement the command line interface to `PresetManager` ([preview](#!/osrf/gazebo/branch/physics_presets_cli)) and the ability to generate SDF from physics profiles.\r\n\r\nKnown issue(s):\r\n\r\nIn physics elements with elements of different types, e.g. `test/worlds/presets.world` has `preset1` which has `ode`, `simbody` and `bullet` blocks, `PresetManager` will attempt to set all parameters specified in the profile. An optimization would be to only set parameters for the engine that is specified in the `type` attribute of `physics`. Since this is not currently implemented, the test gives a lot of warnings, such as `[Wrn] [PhysicsEngine.cc:225] SetParam failed for [cfm] in physics engine simbody`.\r\n\r\n~~The implementation of `PresetManager` relies on `PhysicsEngine::SetParam`. `SetParam` is not implemented for Simbody, so the functionality of this PR will not work with Simbody. (If/when [PR1473](#!/osrf/gazebo/pull-request/1473/) gets merged before this, I will complete the `PresetManager` test to include Simbody.~~ merged and simbody test integrated\r\n\r\n~~For all the physics engines, `SetParam` is not fully implemented for certain parameters, so you may receive lots of gzwarnings from the `PhysicsEngine` implementation in gzserver.~~ Fixed by [PR1528](#!/osrf/gazebo/pull-request/1528/call-physicsengine-setparam-in-child/diff)\r\n\r\nA unit test for `PresetManager` should be added to get to ~90% coverage.", "markup": "markdown", "html": "<p>Implementation of the Physics Preset Profile API <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/src/e64787224f59902a986c22f7d20fdb39e24b8764/physics_presets/physics_presets.md\" rel=\"nofollow\">design</a>.</p>\n<p><del>Requires sdformat <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-request/146/physics-preset-attributes/diff\" rel=\"nofollow\">PR146</a></del> merged</p>\n<p>This PR adds an API for switching between different physics profiles, specified as physics blocks in SDF.</p>\n<p>I also included 2 small fixes the ODEPhysics and SimbodyPhysics to handle exceptions.</p>\n<p>A forthcoming PR will implement the command line interface to <code>PresetManager</code> (<a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branch/physics_presets_cli\" rel=\"nofollow\">preview</a>) and the ability to generate SDF from physics profiles.</p>\n<p>Known issue(s):</p>\n<p>In physics elements with elements of different types, e.g. <code>test/worlds/presets.world</code> has <code>preset1</code> which has <code>ode</code>, <code>simbody</code> and <code>bullet</code> blocks, <code>PresetManager</code> will attempt to set all parameters specified in the profile. An optimization would be to only set parameters for the engine that is specified in the <code>type</code> attribute of <code>physics</code>. Since this is not currently implemented, the test gives a lot of warnings, such as <code>[Wrn] [PhysicsEngine.cc:225] SetParam failed for [cfm] in physics engine simbody</code>.</p>\n<p><del>The implementation of <code>PresetManager</code> relies on <code>PhysicsEngine::SetParam</code>. <code>SetParam</code> is not implemented for Simbody, so the functionality of this PR will not work with Simbody. (If/when <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1473/\" rel=\"nofollow\">PR1473</a> gets merged before this, I will complete the <code>PresetManager</code> test to include Simbody.</del> merged and simbody test integrated</p>\n<p><del>For all the physics engines, <code>SetParam</code> is not fully implemented for certain parameters, so you may receive lots of gzwarnings from the <code>PhysicsEngine</code> implementation in gzserver.</del> Fixed by <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1528/call-physicsengine-setparam-in-child/diff\" rel=\"nofollow\">PR1528</a></p>\n<p>A unit test for <code>PresetManager</code> should be added to get to ~90% coverage.</p>", "type": "rendered"}, "source": {"commit": {"hash": "5e6f562378ab", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5e6f562378ab.json"}, "html": {"href": "#!/osrf/gazebo/commits/5e6f562378ab"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "physics_presets"}}, "comment_count": 199, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2015-03-26T01:09:58.017939+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2015-03-26T00:27:48.785107+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, {"role": "REVIEWER", "participated_on": "2015-03-25T16:17:25.981711+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "REVIEWER", "participated_on": "2015-03-26T00:26:08.977223+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2015-03-24T20:33:54.015348+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}], "reason": "", "updated_on": "2015-03-26T06:51:58.538628+00:00", "author": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "merge_commit": {"hash": "5eed0402ea08", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5eed0402ea08.json"}, "html": {"href": "#!/osrf/gazebo/commits/5eed0402ea08"}}}, "closed_by": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}