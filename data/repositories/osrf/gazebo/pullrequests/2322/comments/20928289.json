{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2322/comments/20928289.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/ocrave/gazebo:None..None?path=gazebo%2Ftransport%2FTransportIface.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2322/_/diff#comment-20928289"}}, "parent": {"id": 20865279, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2322/comments/20865279.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2322/_/diff#comment-20865279"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2322, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2322.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2322"}}, "title": "Make sure gzserver destroys all callbacks when gzclient exits"}, "content": {"raw": "I did a little digging. Try for example adding the following warning message:\n\n~~~\ndiff -r 183ffd507ae0 gazebo/transport/TopicManager.cc\n--- a/gazebo/transport/TopicManager.cc\tFri Jul 01 14:35:59 2016 -0700\n+++ b/gazebo/transport/TopicManager.cc\tTue Jul 12 18:18:14 2016 -0700\n@@ -260,8 +260,14 @@\n   if (publication)\n     publication->RemoveSubscription(_node);\n \n-  ConnectionManager::Instance()->Unsubscribe(_topic,\n-      _node->GetMsgType(_topic));\n+  auto msgType = _node->GetMsgType(_topic);\n+  if (msgType.empty())\n+  {\n+    gzwarn << \"Trying to unsubscribe topic [\" << _topic <<\n+        \"] but message type is unknown\" << std::endl;\n+  }\n+\n+  ConnectionManager::Instance()->Unsubscribe(_topic, msgType);\n \n   this->subscribedNodes[_topic].remove(_node);\n }\n~~~\n\nThe way it currently is, we see a warning message every time we click on the screen, for example.\n\nHowever, if we move `node->Fini` to be below the pub and sub resets, we don't get the warning when clicking.\n\nI'm not sure if not having the message type at that point is critical or not. But this example illustrates how the Pub and Sub destructors are counting on the node's internal state, so we shouldn't clean that internal state before destroying pub and sub.", "markup": "markdown", "html": "<p>I did a little digging. Try for example adding the following warning message:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 183ffd507ae0 gazebo/transport/TopicManager.cc</span>\n<span class=\"gd\">--- a/gazebo/transport/TopicManager.cc  Fri Jul 01 14:35:59 2016 -0700</span>\n<span class=\"gi\">+++ b/gazebo/transport/TopicManager.cc  Tue Jul 12 18:18:14 2016 -0700</span>\n<span class=\"gu\">@@ -260,8 +260,14 @@</span>\n   if (publication)\n     publication-&gt;RemoveSubscription(_node);\n\n<span class=\"gd\">-  ConnectionManager::Instance()-&gt;Unsubscribe(_topic,</span>\n<span class=\"gd\">-      _node-&gt;GetMsgType(_topic));</span>\n<span class=\"gi\">+  auto msgType = _node-&gt;GetMsgType(_topic);</span>\n<span class=\"gi\">+  if (msgType.empty())</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    gzwarn &lt;&lt; &quot;Trying to unsubscribe topic [&quot; &lt;&lt; _topic &lt;&lt;</span>\n<span class=\"gi\">+        &quot;] but message type is unknown&quot; &lt;&lt; std::endl;</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  ConnectionManager::Instance()-&gt;Unsubscribe(_topic, msgType);</span>\n\n   this-&gt;subscribedNodes[_topic].remove(_node);\n }\n</pre></div>\n\n\n<p>The way it currently is, we see a warning message every time we click on the screen, for example.</p>\n<p>However, if we move <code>node-&gt;Fini</code> to be below the pub and sub resets, we don't get the warning when clicking.</p>\n<p>I'm not sure if not having the message type at that point is critical or not. But this example illustrates how the Pub and Sub destructors are counting on the node's internal state, so we shouldn't clean that internal state before destroying pub and sub.</p>", "type": "rendered"}, "created_on": "2016-07-13T01:16:24.294197+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "outdated": false, "path": "gazebo/transport/TransportIface.cc"}, "updated_on": "2016-07-13T01:21:52.958435+00:00", "type": "pullrequest_comment", "id": 20928289}