{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2322/comments/18993376.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/ocrave/gazebo:b730bdd265b8..17b2f08327b2?path=gazebo%2Fgui%2FModelManipulator.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2322/_/diff#comment-18993376"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2322, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2322.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2322"}}, "title": "Make sure gzserver destroys all callbacks when gzclient exits"}, "content": {"raw": "Could you explain the reason for moving this to the end? I think it could actually be moved up, so we clean all transport before cleaning up the rest. The reason is that we want to clean up callbacks which might try to access other members, such as `mouseMoveVis` before the members become null.", "markup": "markdown", "html": "<p>Could you explain the reason for moving this to the end? I think it could actually be moved up, so we clean all transport before cleaning up the rest. The reason is that we want to clean up callbacks which might try to access other members, such as <code>mouseMoveVis</code> before the members become null.</p>", "type": "rendered"}, "created_on": "2016-05-26T16:22:47.757616+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 76, "from": null, "outdated": true, "path": "gazebo/gui/ModelManipulator.cc"}, "updated_on": "2016-05-26T16:22:47.766595+00:00", "type": "pullrequest_comment", "id": 18993376}