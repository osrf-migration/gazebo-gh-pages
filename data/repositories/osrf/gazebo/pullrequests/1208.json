{"rendered": {"description": {"raw": "Based on the `arat.world` from pull request #1205, I've created a world plugin called ~~ARATPlugin~~ ArrangePlugin. Here's an example of the sdf parameters that it accepts:\r\n~~~\r\n<plugin name=\"arrange_plugin\" filename=\"libArrangePlugin.so\">\r\n  <model_name>cricket_ball</model_name>\r\n  <model_name>wood_block_10_2_1cm</model_name>\r\n  <model_name>wood_cube_10cm</model_name>\r\n  <model_name>wood_cube_7_5cm</model_name>\r\n  <model_name>wood_cube_5cm</model_name>\r\n  <model_name>wood_cube_2_5cm</model_name>\r\n  <initial_arrangement>wood_blocks</initial_arrangement>\r\n  <arrangement name=\"default\">\r\n    <pose model=\"cricket_ball\"       > 0.6 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_block_10_2_1cm\"> 0.4 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_10cm\"     > 0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_7_5cm\"    > 0.0 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_5cm\"      >-0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_2_5cm\"    >-0.4 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n  <arrangement name=\"cricket_ball\">\r\n    <pose model=\"cricket_ball\"       > 0.6 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n  <arrangement name=\"wood_blocks\">\r\n    <pose model=\"wood_block_10_2_1cm\"> 0.4 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_10cm\"     > 0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_7_5cm\"    > 0.0 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_5cm\"      >-0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_2_5cm\"    >-0.4 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n</plugin>\r\n~~~\r\n\r\nFirst, it accepts a sequence of `model_name` elements, with the names of models that should be arranged. The plugin stores the initial pose of these models internally.\r\n\r\nIt also accepts a sequence of `arrangement` elements that have a name attribute (for arrangement name) and child `pose` elements. The child pose elements have a model attribute that should match one of the `model_name` tags, and then pose data. Note that an arrangement doesn't require all poses to be listed (this will be explained below).\r\n\r\nThere is also an `initial_arrangement` element that should match one of the task names.\r\n\r\nThere is a `ArrangePlugin::SetArrangement` API to switch between tasks (eventually it will listen to a gzstring topic). This function does the following:\r\n\r\n* Iterate through all the models listed in the `model_name` tags.\r\n    * If a given model has a `pose` tag defined under the specified task, then reset the pose of that model using the arrangement-specific pose.\r\n    * If the given model doesn't have a `pose` tag specified, then reset the pose of that model to its initial pose.\r\n\r\nTo illustrate how this might be used, I moved the initial pose of all the objects from the table to 250 meters away (`y=-0.25` -> `y=250`). Then if you set `cricket_ball` as the initial arrangement, it will only put the cricket ball on the table. If you set `wood_blocks` as the initial arrangement, it will put the wood blocks on the table but leave the cricket ball far away.\r\n\r\nThe nice thing is that you can change the arrangements by modifying the plugin xml tags without recompiling the plugin. ~~It's actually kind of a general plugin. Should we give it a more general name than `ARATPlugin`?~~ It has been renamed to ArrangePlugin.\r\n\r\nI also added a `Model::ResetPhysicsStates` API to call `Link::ResetPhysicsStates` for each link in a model. This will reset the velocities to zero and is called whenever we change the pose of an object.", "markup": "markdown", "html": "<p>Based on the <code>arat.world</code> from <a href=\"#!/osrf/gazebo/pull-requests/1205/added-aratworld\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1205</a>, I've created a world plugin called <del>ARATPlugin</del> ArrangePlugin. Here's an example of the sdf parameters that it accepts:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;arrange_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libArrangePlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>cricket_ball<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_block_10_2_1cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_10cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_7_5cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_5cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_2_5cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;initial_arrangement&gt;</span>wood_blocks<span class=\"nt\">&lt;/initial_arrangement&gt;</span>\n  <span class=\"nt\">&lt;arrangement</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;cricket_ball&quot;</span>       <span class=\"nt\">&gt;</span> 0.6 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_block_10_2_1cm&quot;</span><span class=\"nt\">&gt;</span> 0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_10cm&quot;</span>     <span class=\"nt\">&gt;</span> 0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_7_5cm&quot;</span>    <span class=\"nt\">&gt;</span> 0.0 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_5cm&quot;</span>      <span class=\"nt\">&gt;</span>-0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_2_5cm&quot;</span>    <span class=\"nt\">&gt;</span>-0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/arrangement&gt;</span>\n  <span class=\"nt\">&lt;arrangement</span> <span class=\"na\">name=</span><span class=\"s\">&quot;cricket_ball&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;cricket_ball&quot;</span>       <span class=\"nt\">&gt;</span> 0.6 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/arrangement&gt;</span>\n  <span class=\"nt\">&lt;arrangement</span> <span class=\"na\">name=</span><span class=\"s\">&quot;wood_blocks&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_block_10_2_1cm&quot;</span><span class=\"nt\">&gt;</span> 0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_10cm&quot;</span>     <span class=\"nt\">&gt;</span> 0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_7_5cm&quot;</span>    <span class=\"nt\">&gt;</span> 0.0 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_5cm&quot;</span>      <span class=\"nt\">&gt;</span>-0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_2_5cm&quot;</span>    <span class=\"nt\">&gt;</span>-0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/arrangement&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>First, it accepts a sequence of <code>model_name</code> elements, with the names of models that should be arranged. The plugin stores the initial pose of these models internally.</p>\n<p>It also accepts a sequence of <code>arrangement</code> elements that have a name attribute (for arrangement name) and child <code>pose</code> elements. The child pose elements have a model attribute that should match one of the <code>model_name</code> tags, and then pose data. Note that an arrangement doesn't require all poses to be listed (this will be explained below).</p>\n<p>There is also an <code>initial_arrangement</code> element that should match one of the task names.</p>\n<p>There is a <code>ArrangePlugin::SetArrangement</code> API to switch between tasks (eventually it will listen to a gzstring topic). This function does the following:</p>\n<ul>\n<li>Iterate through all the models listed in the <code>model_name</code> tags.<ul>\n<li>If a given model has a <code>pose</code> tag defined under the specified task, then reset the pose of that model using the arrangement-specific pose.</li>\n<li>If the given model doesn't have a <code>pose</code> tag specified, then reset the pose of that model to its initial pose.</li>\n</ul>\n</li>\n</ul>\n<p>To illustrate how this might be used, I moved the initial pose of all the objects from the table to 250 meters away (<code>y=-0.25</code> -&gt; <code>y=250</code>). Then if you set <code>cricket_ball</code> as the initial arrangement, it will only put the cricket ball on the table. If you set <code>wood_blocks</code> as the initial arrangement, it will put the wood blocks on the table but leave the cricket ball far away.</p>\n<p>The nice thing is that you can change the arrangements by modifying the plugin xml tags without recompiling the plugin. <del>It's actually kind of a general plugin. Should we give it a more general name than <code>ARATPlugin</code>?</del> It has been renamed to ArrangePlugin.</p>\n<p>I also added a <code>Model::ResetPhysicsStates</code> API to call <code>Link::ResetPhysicsStates</code> for each link in a model. This will reset the velocities to zero and is called whenever we change the pose of an object.</p>", "type": "rendered"}, "title": {"raw": "Add ArrangePlugin to arrange models for tasks", "markup": "markdown", "html": "<p>Add ArrangePlugin to arrange models for tasks</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Based on the `arat.world` from pull request #1205, I've created a world plugin called ~~ARATPlugin~~ ArrangePlugin. Here's an example of the sdf parameters that it accepts:\r\n~~~\r\n<plugin name=\"arrange_plugin\" filename=\"libArrangePlugin.so\">\r\n  <model_name>cricket_ball</model_name>\r\n  <model_name>wood_block_10_2_1cm</model_name>\r\n  <model_name>wood_cube_10cm</model_name>\r\n  <model_name>wood_cube_7_5cm</model_name>\r\n  <model_name>wood_cube_5cm</model_name>\r\n  <model_name>wood_cube_2_5cm</model_name>\r\n  <initial_arrangement>wood_blocks</initial_arrangement>\r\n  <arrangement name=\"default\">\r\n    <pose model=\"cricket_ball\"       > 0.6 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_block_10_2_1cm\"> 0.4 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_10cm\"     > 0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_7_5cm\"    > 0.0 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_5cm\"      >-0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_2_5cm\"    >-0.4 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n  <arrangement name=\"cricket_ball\">\r\n    <pose model=\"cricket_ball\"       > 0.6 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n  <arrangement name=\"wood_blocks\">\r\n    <pose model=\"wood_block_10_2_1cm\"> 0.4 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_10cm\"     > 0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_7_5cm\"    > 0.0 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_5cm\"      >-0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_2_5cm\"    >-0.4 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n</plugin>\r\n~~~\r\n\r\nFirst, it accepts a sequence of `model_name` elements, with the names of models that should be arranged. The plugin stores the initial pose of these models internally.\r\n\r\nIt also accepts a sequence of `arrangement` elements that have a name attribute (for arrangement name) and child `pose` elements. The child pose elements have a model attribute that should match one of the `model_name` tags, and then pose data. Note that an arrangement doesn't require all poses to be listed (this will be explained below).\r\n\r\nThere is also an `initial_arrangement` element that should match one of the task names.\r\n\r\nThere is a `ArrangePlugin::SetArrangement` API to switch between tasks (eventually it will listen to a gzstring topic). This function does the following:\r\n\r\n* Iterate through all the models listed in the `model_name` tags.\r\n    * If a given model has a `pose` tag defined under the specified task, then reset the pose of that model using the arrangement-specific pose.\r\n    * If the given model doesn't have a `pose` tag specified, then reset the pose of that model to its initial pose.\r\n\r\nTo illustrate how this might be used, I moved the initial pose of all the objects from the table to 250 meters away (`y=-0.25` -> `y=250`). Then if you set `cricket_ball` as the initial arrangement, it will only put the cricket ball on the table. If you set `wood_blocks` as the initial arrangement, it will put the wood blocks on the table but leave the cricket ball far away.\r\n\r\nThe nice thing is that you can change the arrangements by modifying the plugin xml tags without recompiling the plugin. ~~It's actually kind of a general plugin. Should we give it a more general name than `ARATPlugin`?~~ It has been renamed to ArrangePlugin.\r\n\r\nI also added a `Model::ResetPhysicsStates` API to call `Link::ResetPhysicsStates` for each link in a model. This will reset the velocities to zero and is called whenever we change the pose of an object.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1208/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:6e718993ae5e%0De5db0f013bdc?from_pullrequest_id=1208"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1208/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1208.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1208/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1208/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1208"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1208/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:6e718993ae5e%0De5db0f013bdc?from_pullrequest_id=1208"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1208/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1208/statuses_page=1.json"}}, "title": "Add ArrangePlugin to arrange models for tasks", "close_source_branch": true, "reviewers": [], "id": 1208, "destination": {"commit": {"hash": "e5db0f013bdc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e5db0f013bdc.json"}, "html": {"href": "#!/osrf/gazebo/commits/e5db0f013bdc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.0"}}, "created_on": "2014-09-22T17:46:27.579624+00:00", "summary": {"raw": "Based on the `arat.world` from pull request #1205, I've created a world plugin called ~~ARATPlugin~~ ArrangePlugin. Here's an example of the sdf parameters that it accepts:\r\n~~~\r\n<plugin name=\"arrange_plugin\" filename=\"libArrangePlugin.so\">\r\n  <model_name>cricket_ball</model_name>\r\n  <model_name>wood_block_10_2_1cm</model_name>\r\n  <model_name>wood_cube_10cm</model_name>\r\n  <model_name>wood_cube_7_5cm</model_name>\r\n  <model_name>wood_cube_5cm</model_name>\r\n  <model_name>wood_cube_2_5cm</model_name>\r\n  <initial_arrangement>wood_blocks</initial_arrangement>\r\n  <arrangement name=\"default\">\r\n    <pose model=\"cricket_ball\"       > 0.6 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_block_10_2_1cm\"> 0.4 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_10cm\"     > 0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_7_5cm\"    > 0.0 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_5cm\"      >-0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_2_5cm\"    >-0.4 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n  <arrangement name=\"cricket_ball\">\r\n    <pose model=\"cricket_ball\"       > 0.6 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n  <arrangement name=\"wood_blocks\">\r\n    <pose model=\"wood_block_10_2_1cm\"> 0.4 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_10cm\"     > 0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_7_5cm\"    > 0.0 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_5cm\"      >-0.2 -0.25 1.015 0 0 0</pose>\r\n    <pose model=\"wood_cube_2_5cm\"    >-0.4 -0.25 1.015 0 0 0</pose>\r\n  </arrangement>\r\n</plugin>\r\n~~~\r\n\r\nFirst, it accepts a sequence of `model_name` elements, with the names of models that should be arranged. The plugin stores the initial pose of these models internally.\r\n\r\nIt also accepts a sequence of `arrangement` elements that have a name attribute (for arrangement name) and child `pose` elements. The child pose elements have a model attribute that should match one of the `model_name` tags, and then pose data. Note that an arrangement doesn't require all poses to be listed (this will be explained below).\r\n\r\nThere is also an `initial_arrangement` element that should match one of the task names.\r\n\r\nThere is a `ArrangePlugin::SetArrangement` API to switch between tasks (eventually it will listen to a gzstring topic). This function does the following:\r\n\r\n* Iterate through all the models listed in the `model_name` tags.\r\n    * If a given model has a `pose` tag defined under the specified task, then reset the pose of that model using the arrangement-specific pose.\r\n    * If the given model doesn't have a `pose` tag specified, then reset the pose of that model to its initial pose.\r\n\r\nTo illustrate how this might be used, I moved the initial pose of all the objects from the table to 250 meters away (`y=-0.25` -> `y=250`). Then if you set `cricket_ball` as the initial arrangement, it will only put the cricket ball on the table. If you set `wood_blocks` as the initial arrangement, it will put the wood blocks on the table but leave the cricket ball far away.\r\n\r\nThe nice thing is that you can change the arrangements by modifying the plugin xml tags without recompiling the plugin. ~~It's actually kind of a general plugin. Should we give it a more general name than `ARATPlugin`?~~ It has been renamed to ArrangePlugin.\r\n\r\nI also added a `Model::ResetPhysicsStates` API to call `Link::ResetPhysicsStates` for each link in a model. This will reset the velocities to zero and is called whenever we change the pose of an object.", "markup": "markdown", "html": "<p>Based on the <code>arat.world</code> from <a href=\"#!/osrf/gazebo/pull-requests/1205/added-aratworld\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1205</a>, I've created a world plugin called <del>ARATPlugin</del> ArrangePlugin. Here's an example of the sdf parameters that it accepts:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;arrange_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libArrangePlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>cricket_ball<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_block_10_2_1cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_10cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_7_5cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_5cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;model_name&gt;</span>wood_cube_2_5cm<span class=\"nt\">&lt;/model_name&gt;</span>\n  <span class=\"nt\">&lt;initial_arrangement&gt;</span>wood_blocks<span class=\"nt\">&lt;/initial_arrangement&gt;</span>\n  <span class=\"nt\">&lt;arrangement</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;cricket_ball&quot;</span>       <span class=\"nt\">&gt;</span> 0.6 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_block_10_2_1cm&quot;</span><span class=\"nt\">&gt;</span> 0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_10cm&quot;</span>     <span class=\"nt\">&gt;</span> 0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_7_5cm&quot;</span>    <span class=\"nt\">&gt;</span> 0.0 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_5cm&quot;</span>      <span class=\"nt\">&gt;</span>-0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_2_5cm&quot;</span>    <span class=\"nt\">&gt;</span>-0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/arrangement&gt;</span>\n  <span class=\"nt\">&lt;arrangement</span> <span class=\"na\">name=</span><span class=\"s\">&quot;cricket_ball&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;cricket_ball&quot;</span>       <span class=\"nt\">&gt;</span> 0.6 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/arrangement&gt;</span>\n  <span class=\"nt\">&lt;arrangement</span> <span class=\"na\">name=</span><span class=\"s\">&quot;wood_blocks&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_block_10_2_1cm&quot;</span><span class=\"nt\">&gt;</span> 0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_10cm&quot;</span>     <span class=\"nt\">&gt;</span> 0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_7_5cm&quot;</span>    <span class=\"nt\">&gt;</span> 0.0 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_5cm&quot;</span>      <span class=\"nt\">&gt;</span>-0.2 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">model=</span><span class=\"s\">&quot;wood_cube_2_5cm&quot;</span>    <span class=\"nt\">&gt;</span>-0.4 -0.25 1.015 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/arrangement&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>First, it accepts a sequence of <code>model_name</code> elements, with the names of models that should be arranged. The plugin stores the initial pose of these models internally.</p>\n<p>It also accepts a sequence of <code>arrangement</code> elements that have a name attribute (for arrangement name) and child <code>pose</code> elements. The child pose elements have a model attribute that should match one of the <code>model_name</code> tags, and then pose data. Note that an arrangement doesn't require all poses to be listed (this will be explained below).</p>\n<p>There is also an <code>initial_arrangement</code> element that should match one of the task names.</p>\n<p>There is a <code>ArrangePlugin::SetArrangement</code> API to switch between tasks (eventually it will listen to a gzstring topic). This function does the following:</p>\n<ul>\n<li>Iterate through all the models listed in the <code>model_name</code> tags.<ul>\n<li>If a given model has a <code>pose</code> tag defined under the specified task, then reset the pose of that model using the arrangement-specific pose.</li>\n<li>If the given model doesn't have a <code>pose</code> tag specified, then reset the pose of that model to its initial pose.</li>\n</ul>\n</li>\n</ul>\n<p>To illustrate how this might be used, I moved the initial pose of all the objects from the table to 250 meters away (<code>y=-0.25</code> -&gt; <code>y=250</code>). Then if you set <code>cricket_ball</code> as the initial arrangement, it will only put the cricket ball on the table. If you set <code>wood_blocks</code> as the initial arrangement, it will put the wood blocks on the table but leave the cricket ball far away.</p>\n<p>The nice thing is that you can change the arrangements by modifying the plugin xml tags without recompiling the plugin. <del>It's actually kind of a general plugin. Should we give it a more general name than <code>ARATPlugin</code>?</del> It has been renamed to ArrangePlugin.</p>\n<p>I also added a <code>Model::ResetPhysicsStates</code> API to call <code>Link::ResetPhysicsStates</code> for each link in a model. This will reset the velocities to zero and is called whenever we change the pose of an object.</p>", "type": "rendered"}, "source": {"commit": {"hash": "061ee8d1aebc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/061ee8d1aebc.json"}, "html": {"href": "#!/osrf/gazebo/commits/061ee8d1aebc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "arat_plugin"}}, "comment_count": 40, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-09-30T23:30:37.084734+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-01T00:33:35.374260+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-09-30T22:24:14.924424+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, {"role": "PARTICIPANT", "participated_on": "2014-09-24T22:25:44.409885+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2014-10-01T00:52:16.620728+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "6e718993ae5e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6e718993ae5e.json"}, "html": {"href": "#!/osrf/gazebo/commits/6e718993ae5e"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}