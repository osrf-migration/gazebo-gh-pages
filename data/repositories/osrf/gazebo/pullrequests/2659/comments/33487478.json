{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33487478.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:b99f32c9ffe2..74f72bd8982d?path=gz_ecs%2Finclude%2Fgazebo%2Fecs_core%2FComponentType.hh"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33487478"}}, "parent": {"id": 33477726, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33477726.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33477726"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "On the hash_code. It seems like the important things are ComponentType is indexable, and components can be saved/loaded.\n\nSaving and loading requires the size and a persistent name. How about adding methods to lookup component info on the EntityManager?\n\nEntityManager gets a few new functions\n\n```\ntemplate <typename T>\nbool RegisterComponent(std::string _peristentName);\n\nstd::string LookupComponentName(ComponentType _type);\n\nstd::size_t LookupComponentSize(ComponentType _type);\n\nComponentType LookupComponentType(std::string _persistentName);\n```\n\nRough idea of how they would be used.\n\n```\nEntityManager em;\n...\n// Componentizer plugins register components they can create.\nem.RegisterComponent<components::SurfaceProperties>(\"gazebo::components::SurfaceProperties\")\n...\n// loader comes after componentizer plugins have registered components\nComponentType foundType = em.LookupComponentType(nameReadFromFile);\nstd::size_t numBytes = em.LookupComponentSize(foundType);\n// read numBytes of data\n// save raw bytes as a component in the entity manager\n```\n", "markup": "markdown", "html": "<p>On the hash_code. It seems like the important things are ComponentType is indexable, and components can be saved/loaded.</p>\n<p>Saving and loading requires the size and a persistent name. How about adding methods to lookup component info on the EntityManager?</p>\n<p>EntityManager gets a few new functions</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">template</span> <span class=\"o\">&lt;</span><span class=\"nt\">typename</span> <span class=\"nt\">T</span><span class=\"o\">&gt;</span>\n<span class=\"nt\">bool</span> <span class=\"nt\">RegisterComponent</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">_peristentName</span><span class=\"o\">);</span>\n\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">LookupComponentName</span><span class=\"o\">(</span><span class=\"nt\">ComponentType</span> <span class=\"nt\">_type</span><span class=\"o\">);</span>\n\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">size_t</span> <span class=\"nt\">LookupComponentSize</span><span class=\"o\">(</span><span class=\"nt\">ComponentType</span> <span class=\"nt\">_type</span><span class=\"o\">);</span>\n\n<span class=\"nt\">ComponentType</span> <span class=\"nt\">LookupComponentType</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">_persistentName</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>Rough idea of how they would be used.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">EntityManager</span> <span class=\"nt\">em</span><span class=\"o\">;</span>\n<span class=\"o\">...</span>\n<span class=\"o\">//</span> <span class=\"nt\">Componentizer</span> <span class=\"nt\">plugins</span> <span class=\"nt\">register</span> <span class=\"nt\">components</span> <span class=\"nt\">they</span> <span class=\"nt\">can</span> <span class=\"nt\">create</span><span class=\"o\">.</span>\n<span class=\"nt\">em</span><span class=\"p\">.</span><span class=\"nc\">RegisterComponent</span><span class=\"o\">&lt;</span><span class=\"nt\">components</span><span class=\"p\">::</span><span class=\"nd\">SurfaceProperties</span><span class=\"o\">&gt;(</span><span class=\"s2\">&quot;gazebo::components::SurfaceProperties&quot;</span><span class=\"o\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">//</span> <span class=\"nt\">loader</span> <span class=\"nt\">comes</span> <span class=\"nt\">after</span> <span class=\"nt\">componentizer</span> <span class=\"nt\">plugins</span> <span class=\"nt\">have</span> <span class=\"nt\">registered</span> <span class=\"nt\">components</span>\n<span class=\"nt\">ComponentType</span> <span class=\"nt\">foundType</span> <span class=\"o\">=</span> <span class=\"nt\">em</span><span class=\"p\">.</span><span class=\"nc\">LookupComponentType</span><span class=\"o\">(</span><span class=\"nt\">nameReadFromFile</span><span class=\"o\">);</span>\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">size_t</span> <span class=\"nt\">numBytes</span> <span class=\"o\">=</span> <span class=\"nt\">em</span><span class=\"p\">.</span><span class=\"nc\">LookupComponentSize</span><span class=\"o\">(</span><span class=\"nt\">foundType</span><span class=\"o\">);</span>\n<span class=\"o\">//</span> <span class=\"nt\">read</span> <span class=\"nt\">numBytes</span> <span class=\"nt\">of</span> <span class=\"nt\">data</span>\n<span class=\"o\">//</span> <span class=\"nt\">save</span> <span class=\"nt\">raw</span> <span class=\"nt\">bytes</span> <span class=\"nt\">as</span> <span class=\"nt\">a</span> <span class=\"nt\">component</span> <span class=\"nt\">in</span> <span class=\"nt\">the</span> <span class=\"nt\">entity</span> <span class=\"nt\">manager</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-03-20T16:55:51.021488+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": null, "from": null, "outdated": false, "path": "gz_ecs/include/gazebo/ecs_core/ComponentType.hh"}, "updated_on": "2017-03-20T16:55:51.025525+00:00", "type": "pullrequest_comment", "id": 33487478}