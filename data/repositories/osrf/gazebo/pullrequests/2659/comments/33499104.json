{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33499104.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:b99f32c9ffe2..74f72bd8982d?path=gz_ecs%2Finclude%2Fgazebo%2Fplugin%2FPluginLoader.hh"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33499104"}}, "parent": {"id": 33497848, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33497848.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33497848"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "A System is a plugin. [main.cc](#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/main.cc) loads the System [AddAndPrintResult](#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/systems/AddAndPrintResult.cc) as a plugin.\n\nI think Systems should be plugins because it enables a user to change the behavior of gazebo. For example there has been talk of a generic physics interface. With an ECS design there is no need for a physics interface API. The components are the interface. If a user wants a different physics engine, they can load a different physics System. Both Systems would use the same types of components.", "markup": "markdown", "html": "<p>A System is a plugin. <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/main.cc\" rel=\"nofollow\">main.cc</a> loads the System <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/systems/AddAndPrintResult.cc\" rel=\"nofollow\">AddAndPrintResult</a> as a plugin.</p>\n<p>I think Systems should be plugins because it enables a user to change the behavior of gazebo. For example there has been talk of a generic physics interface. With an ECS design there is no need for a physics interface API. The components are the interface. If a user wants a different physics engine, they can load a different physics System. Both Systems would use the same types of components.</p>", "type": "rendered"}, "created_on": "2017-03-20T19:51:59.482712+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": null, "from": null, "outdated": false, "path": "gz_ecs/include/gazebo/plugin/PluginLoader.hh"}, "updated_on": "2017-03-20T19:51:59.485132+00:00", "type": "pullrequest_comment", "id": 33499104}