{"pagelen": 50, "values": [{"update": {"description": "PR to start a discussion on an ECS prototype.\r\n\r\nTo make it easier to review, this PR is from one throw-away branch to another throw-away branch (no gtest). The working prototype is on branch `entity_component_system_prototype`\r\n\r\nAreas I'm hoping to get feedback in:\r\n\r\n**All APIs, especially**\r\n\r\n* **main.cc** shows how to interact with the ECS. Thoughts?\r\n* **DivideAndPrintResult.hh** Shows how someone would change gazebo's behavior by adding a system. Thoughts?\r\n* **Triplet.hh**  Components are POD structs. Is there a case where this won't be good enough?\r\n* **EntityQueryResult** is clunky. Ideas?\r\n\r\n**Plugins**\r\n\r\n**PluginLoader** is different from the current Gazebo plugin loader. The benefit is it queries the name and type of plugin when the library is loaded. For example, it could be used to load all libraries in a folder and display a list of available plugins to the user.\r\n\r\n* Are there fundamental flaws with the approach of having a method in a shared library populate a struct?\r\n* will this approach work on all platforms?\r\n* How important is it to support multiple plugins in the same shared library?\r\n\r\n**Misc**\r\n\r\n* I made the System headers \"private\" thinking there is no case where someone would instantiate or inherit from a system, but is there a case? If they are private it's easier to change released versions of gazebo.\r\n\r\nKnown Issues\r\n\r\n* Not integrated with existing gazebo cmake; it was faster to write and test a separate cmake project\r\n* No componentizer - the thing that will turn SDF into components\r\n* SystemManager and EntityManager implementations are very basic and slow\r\n* Coding style\r\n\r\nTo run the prototype\r\n\r\n```\r\nhg update entity_component_system_prototype\r\nmkdir build_ecs && cd build_ecs\r\ncmake ../gz_ecs\r\nmake\r\n# Run unit tests\r\nmake test\r\n# Run without plugins (Division system only)\r\n./gz_ecs\r\n# Run with plugins (adds Addition system)\r\nGAZEBO_PLUGIN_PATH=systems/ ./gz_ecs\r\n```", "title": "ECS Prototype Feedback", "destination": {"commit": {"hash": "74f72bd8982d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/74f72bd8982d.json"}, "html": {"href": "#!/osrf/gazebo/commits/74f72bd8982d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_deadend_dontmerge"}}, "reason": "Moved to #!/osrf/gazebo_experimental", "source": {"commit": {"hash": "b99f32c9ffe2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b99f32c9ffe2.json"}, "html": {"href": "#!/osrf/gazebo/commits/b99f32c9ffe2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_nogtest_broken_dontmerge"}}, "state": "DECLINED", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-04-03T21:40:07.643688+00:00"}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/34370865.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-34370865"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "Moved code to new repo #!/osrf/gazebo_experimental as it was decided in today's meeting. Declining", "markup": "markdown", "html": "<p>Moved code to new repo <a href=\"#!/osrf/gazebo_experimental\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo_experimental</a> as it was decided in today's meeting. Declining</p>", "type": "rendered"}, "created_on": "2017-04-03T21:39:50.603068+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-04-03T21:39:50.606736+00:00", "type": "pullrequest_comment", "id": 34370865}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33748756.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33748756"}}, "parent": {"id": 33742185, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33742185.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33742185"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "Thanks for the feedback. I made pull request #2666 to make it easier to see your changes.", "markup": "markdown", "html": "<p>Thanks for the feedback. I made <a href=\"#!/osrf/gazebo/pull-requests/2666/ecs-nate\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2666</a> to make it easier to see your changes.</p>", "type": "rendered"}, "created_on": "2017-03-23T16:31:59.525346+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-03-23T16:31:59.529083+00:00", "type": "pullrequest_comment", "id": 33748756}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33742185.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33742185"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "I've been experimenting with this PR in the [ecs_nate](#!/osrf/gazebo/branch/ecs_nate) branch. My experiments have centered around:\n\n1. Using a centralized manager.\n2. Using a ComponentFactory\n3. Reducing the number of files.\n\nThis branch can be considered a form of feedback.\n\nWe should think carefully about the data structures used to store entities and components, and how both are constructed. These are two key points to an ECS system.", "markup": "markdown", "html": "<p>I've been experimenting with this PR in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branch/ecs_nate\" rel=\"nofollow\">ecs_nate</a> branch. My experiments have centered around:</p>\n<ol>\n<li>Using a centralized manager.</li>\n<li>Using a ComponentFactory</li>\n<li>Reducing the number of files.</li>\n</ol>\n<p>This branch can be considered a form of feedback.</p>\n<p>We should think carefully about the data structures used to store entities and components, and how both are constructed. These are two key points to an ECS system.</p>", "type": "rendered"}, "created_on": "2017-03-23T15:27:12.543927+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2017-03-23T15:27:12.551771+00:00", "type": "pullrequest_comment", "id": 33742185}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33500930.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33500930"}}, "parent": {"id": 33499892, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33499892.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33499892"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "I think the current prototype could be relaxed to `std::is_trivially_destructible` without causing memory leaks. Would the ignition-math classes pass that test?\n\nEdit: *Without causing memory leaks when the `EntityManager` is destructed.\n", "markup": "markdown", "html": "<p>I think the current prototype could be relaxed to <code>std::is_trivially_destructible</code> without causing memory leaks. Would the ignition-math classes pass that test?</p>\n<p>Edit: *Without causing memory leaks when the <code>EntityManager</code> is destructed.</p>", "type": "rendered"}, "created_on": "2017-03-20T20:23:29.258741+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-03-20T20:28:14.496740+00:00", "type": "pullrequest_comment", "id": 33500930}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33500156.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33500156"}}, "parent": {"id": 33498566, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33498566.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33498566"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "I'll do my best to answer.\n\n1. I don't think so, or I don't see a reason why someone would want to change `EntityManager` at runtime.\n2. +1\n3. The componentizer will need access to the `EntityManager` as well. I'd like it if the componentizer didn't depend on `SystemManager`. It reduces compile times when the `SystemManager` changes and makes the setup for componentizer unit_tests lighter. \n4. I wrote this intending that there is only one `SystemManager` instance. Sort of related is an ECS can have its components replicated across many machines. For example, 4 machines could have a instance of a system, each operating on 1/4 of the components. Or 4 machines could have an independent system each. In this far future I'm not sure if the `EntityManager` should handle replicating the components to `SystemManager` on different machines, or if the `SystemManager` should handle shipping query results across machines, or well the whole thing is a little fuzzy but there are exciting possibilities here.\n5. No, maybe sort of, but not really. See above", "markup": "markdown", "html": "<p>I'll do my best to answer.</p>\n<ol>\n<li>I don't think so, or I don't see a reason why someone would want to change <code>EntityManager</code> at runtime.</li>\n<li>+1</li>\n<li>The componentizer will need access to the <code>EntityManager</code> as well. I'd like it if the componentizer didn't depend on <code>SystemManager</code>. It reduces compile times when the <code>SystemManager</code> changes and makes the setup for componentizer unit_tests lighter. </li>\n<li>I wrote this intending that there is only one <code>SystemManager</code> instance. Sort of related is an ECS can have its components replicated across many machines. For example, 4 machines could have a instance of a system, each operating on 1/4 of the components. Or 4 machines could have an independent system each. In this far future I'm not sure if the <code>EntityManager</code> should handle replicating the components to <code>SystemManager</code> on different machines, or if the <code>SystemManager</code> should handle shipping query results across machines, or well the whole thing is a little fuzzy but there are exciting possibilities here.</li>\n<li>No, maybe sort of, but not really. See above</li>\n</ol>", "type": "rendered"}, "created_on": "2017-03-20T20:10:30.515735+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-03-20T20:10:30.518386+00:00", "type": "pullrequest_comment", "id": 33500156}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33499892.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33499892"}}, "parent": {"id": 33478927, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33478927.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33478927"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "Anything with a constructor will fail the POD test, correct? This would eliminate every class in ignition-math.", "markup": "markdown", "html": "<p>Anything with a constructor will fail the POD test, correct? This would eliminate every class in ignition-math.</p>", "type": "rendered"}, "created_on": "2017-03-20T20:05:18.432726+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-03-20T20:05:18.435365+00:00", "type": "pullrequest_comment", "id": 33499892}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33499104.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33499104"}}, "parent": {"id": 33497848, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33497848.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33497848"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "A System is a plugin. [main.cc](#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/main.cc) loads the System [AddAndPrintResult](#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/systems/AddAndPrintResult.cc) as a plugin.\n\nI think Systems should be plugins because it enables a user to change the behavior of gazebo. For example there has been talk of a generic physics interface. With an ECS design there is no need for a physics interface API. The components are the interface. If a user wants a different physics engine, they can load a different physics System. Both Systems would use the same types of components.", "markup": "markdown", "html": "<p>A System is a plugin. <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/main.cc\" rel=\"nofollow\">main.cc</a> loads the System <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2659/ecs-prototype-feedback/diff#chg-gz_ecs/systems/AddAndPrintResult.cc\" rel=\"nofollow\">AddAndPrintResult</a> as a plugin.</p>\n<p>I think Systems should be plugins because it enables a user to change the behavior of gazebo. For example there has been talk of a generic physics interface. With an ECS design there is no need for a physics interface API. The components are the interface. If a user wants a different physics engine, they can load a different physics System. Both Systems would use the same types of components.</p>", "type": "rendered"}, "created_on": "2017-03-20T19:51:59.482712+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-03-20T19:51:59.485132+00:00", "type": "pullrequest_comment", "id": 33499104}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33498816.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33498816"}}, "parent": {"id": 33498717, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33498717.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33498717"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "Keeping it in one struct sounds like it would require less checks to keep things in sync, but I haven't thought enough about this.", "markup": "markdown", "html": "<p>Keeping it in one struct sounds like it would require less checks to keep things in sync, but I haven't thought enough about this.</p>", "type": "rendered"}, "created_on": "2017-03-20T19:46:56.702686+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-20T19:46:56.705127+00:00", "type": "pullrequest_comment", "id": 33498816}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33498717.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33498717"}}, "parent": {"id": 33497631, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33497631.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33497631"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "By Index. queries[0] is the query for system[0]. I can change it to std::tuple or a struct to make the association clear.", "markup": "markdown", "html": "<p>By Index. queries[0] is the query for system[0]. I can change it to std::tuple or a struct to make the association clear.</p>", "type": "rendered"}, "created_on": "2017-03-20T19:45:28.964317+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-03-20T19:45:28.969728+00:00", "type": "pullrequest_comment", "id": 33498717}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33498566.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33498566"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "Many questions which build on top of each other:\n\n1. Can the `EntityManager` which is tied to a `SystemManager` be changed at runtime? \n2. If not, maybe this can be passed on the constructor? \n3. In fact, maybe the `EntityManager` is created and owned by the `SystemManager`? \n4. Or will the `EntityManager`s be shared across `SystemManager`s?\n5. Wait, is there a use case for multiple `SystemManager`s?", "markup": "markdown", "html": "<p>Many questions which build on top of each other:</p>\n<ol>\n<li>Can the <code>EntityManager</code> which is tied to a <code>SystemManager</code> be changed at runtime? </li>\n<li>If not, maybe this can be passed on the constructor? </li>\n<li>In fact, maybe the <code>EntityManager</code> is created and owned by the <code>SystemManager</code>? </li>\n<li>Or will the <code>EntityManager</code>s be shared across <code>SystemManager</code>s?</li>\n<li>Wait, is there a use case for multiple <code>SystemManager</code>s?</li>\n</ol>", "type": "rendered"}, "created_on": "2017-03-20T19:43:14.086441+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-20T19:43:14.089399+00:00", "type": "pullrequest_comment", "id": 33498566}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33497848.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33497848"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "Can you elaborate more on where do these plugins fit in the whole application? What are some plugin examples? I'm mainly asking because I didn't see plugins mentioned on the design document.", "markup": "markdown", "html": "<p>Can you elaborate more on where do these plugins fit in the whole application? What are some plugin examples? I'm mainly asking because I didn't see plugins mentioned on the design document.</p>", "type": "rendered"}, "created_on": "2017-03-20T19:30:21.215000+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-20T19:30:21.217501+00:00", "type": "pullrequest_comment", "id": 33497848}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33497631.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33497631"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "How is a query associated to a system?", "markup": "markdown", "html": "<p>How is a query associated to a system?</p>", "type": "rendered"}, "created_on": "2017-03-20T19:26:22.579604+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-20T19:26:22.582064+00:00", "type": "pullrequest_comment", "id": 33497631}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33497429.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33497429"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "I think that before going too deep into the implementation, it might be worth it to spend some time listing what would be some of the systems and components in Gazebo (sort of listing requirements). This way we can make more informed decisions.", "markup": "markdown", "html": "<p>I think that before going too deep into the implementation, it might be worth it to spend some time listing what would be some of the systems and components in Gazebo (sort of listing requirements). This way we can make more informed decisions.</p>", "type": "rendered"}, "created_on": "2017-03-20T19:22:52.260974+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-20T19:22:52.264209+00:00", "type": "pullrequest_comment", "id": 33497429}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33487478.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33487478"}}, "parent": {"id": 33477726, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33477726.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33477726"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "On the hash_code. It seems like the important things are ComponentType is indexable, and components can be saved/loaded.\n\nSaving and loading requires the size and a persistent name. How about adding methods to lookup component info on the EntityManager?\n\nEntityManager gets a few new functions\n\n```\ntemplate <typename T>\nbool RegisterComponent(std::string _peristentName);\n\nstd::string LookupComponentName(ComponentType _type);\n\nstd::size_t LookupComponentSize(ComponentType _type);\n\nComponentType LookupComponentType(std::string _persistentName);\n```\n\nRough idea of how they would be used.\n\n```\nEntityManager em;\n...\n// Componentizer plugins register components they can create.\nem.RegisterComponent<components::SurfaceProperties>(\"gazebo::components::SurfaceProperties\")\n...\n// loader comes after componentizer plugins have registered components\nComponentType foundType = em.LookupComponentType(nameReadFromFile);\nstd::size_t numBytes = em.LookupComponentSize(foundType);\n// read numBytes of data\n// save raw bytes as a component in the entity manager\n```\n", "markup": "markdown", "html": "<p>On the hash_code. It seems like the important things are ComponentType is indexable, and components can be saved/loaded.</p>\n<p>Saving and loading requires the size and a persistent name. How about adding methods to lookup component info on the EntityManager?</p>\n<p>EntityManager gets a few new functions</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">template</span> <span class=\"o\">&lt;</span><span class=\"nt\">typename</span> <span class=\"nt\">T</span><span class=\"o\">&gt;</span>\n<span class=\"nt\">bool</span> <span class=\"nt\">RegisterComponent</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">_peristentName</span><span class=\"o\">);</span>\n\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">LookupComponentName</span><span class=\"o\">(</span><span class=\"nt\">ComponentType</span> <span class=\"nt\">_type</span><span class=\"o\">);</span>\n\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">size_t</span> <span class=\"nt\">LookupComponentSize</span><span class=\"o\">(</span><span class=\"nt\">ComponentType</span> <span class=\"nt\">_type</span><span class=\"o\">);</span>\n\n<span class=\"nt\">ComponentType</span> <span class=\"nt\">LookupComponentType</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">_persistentName</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>Rough idea of how they would be used.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">EntityManager</span> <span class=\"nt\">em</span><span class=\"o\">;</span>\n<span class=\"o\">...</span>\n<span class=\"o\">//</span> <span class=\"nt\">Componentizer</span> <span class=\"nt\">plugins</span> <span class=\"nt\">register</span> <span class=\"nt\">components</span> <span class=\"nt\">they</span> <span class=\"nt\">can</span> <span class=\"nt\">create</span><span class=\"o\">.</span>\n<span class=\"nt\">em</span><span class=\"p\">.</span><span class=\"nc\">RegisterComponent</span><span class=\"o\">&lt;</span><span class=\"nt\">components</span><span class=\"p\">::</span><span class=\"nd\">SurfaceProperties</span><span class=\"o\">&gt;(</span><span class=\"s2\">&quot;gazebo::components::SurfaceProperties&quot;</span><span class=\"o\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">//</span> <span class=\"nt\">loader</span> <span class=\"nt\">comes</span> <span class=\"nt\">after</span> <span class=\"nt\">componentizer</span> <span class=\"nt\">plugins</span> <span class=\"nt\">have</span> <span class=\"nt\">registered</span> <span class=\"nt\">components</span>\n<span class=\"nt\">ComponentType</span> <span class=\"nt\">foundType</span> <span class=\"o\">=</span> <span class=\"nt\">em</span><span class=\"p\">.</span><span class=\"nc\">LookupComponentType</span><span class=\"o\">(</span><span class=\"nt\">nameReadFromFile</span><span class=\"o\">);</span>\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">size_t</span> <span class=\"nt\">numBytes</span> <span class=\"o\">=</span> <span class=\"nt\">em</span><span class=\"p\">.</span><span class=\"nc\">LookupComponentSize</span><span class=\"o\">(</span><span class=\"nt\">foundType</span><span class=\"o\">);</span>\n<span class=\"o\">//</span> <span class=\"nt\">read</span> <span class=\"nt\">numBytes</span> <span class=\"nt\">of</span> <span class=\"nt\">data</span>\n<span class=\"o\">//</span> <span class=\"nt\">save</span> <span class=\"nt\">raw</span> <span class=\"nt\">bytes</span> <span class=\"nt\">as</span> <span class=\"nt\">a</span> <span class=\"nt\">component</span> <span class=\"nt\">in</span> <span class=\"nt\">the</span> <span class=\"nt\">entity</span> <span class=\"nt\">manager</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-03-20T16:55:51.021488+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-03-20T16:55:51.025525+00:00", "type": "pullrequest_comment", "id": 33487478}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33478927.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33478927"}}, "parent": {"id": 33477726, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33477726.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33477726"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "That's a good point, more than the hash_code would have to be stored in the component type to save and load the component.\n\nWhy is POD too strict? What kind of data should be supported by components?", "markup": "markdown", "html": "<p>That's a good point, more than the hash_code would have to be stored in the component type to save and load the component.</p>\n<p>Why is POD too strict? What kind of data should be supported by components?</p>", "type": "rendered"}, "created_on": "2017-03-20T15:25:54.229066+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-03-20T15:25:54.232678+00:00", "type": "pullrequest_comment", "id": 33478927}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659/comments/33477726.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659/_/diff#comment-33477726"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}, "content": {"raw": "I think POD is too strict. Also, using `hash_code` will lead to problems down the road. The `hash_code` function is not guaranteed to return the same value between invocations of the program. This would make saving and loading component information difficult.", "markup": "markdown", "html": "<p>I think POD is too strict. Also, using <code>hash_code</code> will lead to problems down the road. The <code>hash_code</code> function is not guaranteed to return the same value between invocations of the program. This would make saving and loading component information difficult.</p>", "type": "rendered"}, "created_on": "2017-03-20T15:14:14.114116+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-03-20T15:14:14.116843+00:00", "type": "pullrequest_comment", "id": 33477726}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"update": {"description": "PR to start a discussion on an ECS prototype.\r\n\r\nTo make it easier to review, this PR is from one throw-away branch to another throw-away branch (no gtest). The working prototype is on branch `entity_component_system_prototype`\r\n\r\nAreas I'm hoping to get feedback in:\r\n\r\n**All APIs, especially**\r\n\r\n* **main.cc** shows how to interact with the ECS. Thoughts?\r\n* **DivideAndPrintResult.hh** Shows how someone would change gazebo's behavior by adding a system. Thoughts?\r\n* **Triplet.hh**  Components are POD structs. Is there a case where this won't be good enough?\r\n* **EntityQueryResult** is clunky. Ideas?\r\n\r\n**Plugins**\r\n\r\n**PluginLoader** is different from the current Gazebo plugin loader. The benefit is it queries the name and type of plugin when the library is loaded. For example, it could be used to load all libraries in a folder and display a list of available plugins to the user.\r\n\r\n* Are there fundamental flaws with the approach of having a method in a shared library populate a struct?\r\n* will this approach work on all platforms?\r\n* How important is it to support multiple plugins in the same shared library?\r\n\r\n**Misc**\r\n\r\n* I made the System headers \"private\" thinking there is no case where someone would instantiate or inherit from a system, but is there a case? If they are private it's easier to change released versions of gazebo.\r\n\r\nKnown Issues\r\n\r\n* Not integrated with existing gazebo cmake; it was faster to write and test a separate cmake project\r\n* No componentizer - the thing that will turn SDF into components\r\n* SystemManager and EntityManager implementations are very basic and slow\r\n* Coding style\r\n\r\nTo run the prototype\r\n\r\n```\r\nhg update entity_component_system_prototype\r\nmkdir build_ecs && cd build_ecs\r\ncmake ../gz_ecs\r\nmake\r\n# Run unit tests\r\nmake test\r\n# Run without plugins (Division system only)\r\n./gz_ecs\r\n# Run with plugins (adds Addition system)\r\nGAZEBO_PLUGIN_PATH=systems/ ./gz_ecs\r\n```", "title": "ECS Prototype Feedback", "destination": {"commit": {"hash": "74f72bd8982d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/74f72bd8982d.json"}, "html": {"href": "#!/osrf/gazebo/commits/74f72bd8982d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_deadend_dontmerge"}}, "reason": "", "source": {"commit": {"hash": "b99f32c9ffe2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b99f32c9ffe2.json"}, "html": {"href": "#!/osrf/gazebo/commits/b99f32c9ffe2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_nogtest_broken_dontmerge"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-03-17T14:28:17.696081+00:00"}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"update": {"description": "PR to start a discussion on an ECS prototype.\r\n\r\nTo make it easier to review, this PR is from one throw-away branch to another throw-away branch (no gtest). The working prototype is on branch `entity_component_system_prototype`\r\n\r\nAreas I'm hoping to get feedback in:\r\n\r\n**All APIs, especially**\r\n\r\n* **main.cc** shows how to interact with the ECS. Thoughts?\r\n* **DivideAndPrintResult.hh** Shows how someone would change gazebo's behavior by adding a system. Thoughts?\r\n* **Triplet.hh**  Components are POD structs. Is there a case where this won't be good enough?\r\n* **EntityQueryResult** is clunky. Ideas?\r\n\r\n**Plugins**\r\n\r\n**PluginLoader** is different from the current Gazebo plugin loader. The benefit is it queries the name and type of plugin when the library is loaded. For example, it could be used to load all libraries in a folder and display a list of available plugins to the user.\r\n\r\n* I've never written a plugin system before, are there fundamental flaws with the approach?\r\n* will this approach work on all platforms?\r\n* How important is it to support multiple plugins in the same shared library?\r\n\r\n**Misc**\r\n\r\n* I made the System headers \"private\" thinking there is no case where someone would instantiate or inherit from a system, but is there a case? If they are private it's easier to change released versions of gazebo.\r\n\r\nKnown Issues\r\n\r\n* Not integrated with existing gazebo cmake; it was faster to write and test a separate cmake project\r\n* No componentizer - the thing that will turn SDF into components\r\n* SystemManager and EntityManager implementations are very basic and slow\r\n* Coding style\r\n\r\nTo run the prototype\r\n\r\n```\r\nhg update entity_component_system_prototype\r\nmkdir build_ecs && cd build_ecs\r\ncmake ../gz_ecs\r\nmake\r\n# Run unit tests\r\nmake test\r\n# Run without plugins (Division system only)\r\n./gz_ecs\r\n# Run with plugins (adds Addition system)\r\nGAZEBO_PLUGIN_PATH=systems/ ./gz_ecs\r\n```", "title": "ECS Prototype Feedback", "destination": {"commit": {"hash": "74f72bd8982d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/74f72bd8982d.json"}, "html": {"href": "#!/osrf/gazebo/commits/74f72bd8982d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_deadend_dontmerge"}}, "reason": "", "source": {"commit": {"hash": "b99f32c9ffe2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b99f32c9ffe2.json"}, "html": {"href": "#!/osrf/gazebo/commits/b99f32c9ffe2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_nogtest_broken_dontmerge"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-03-16T22:16:50.974547+00:00"}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}, {"update": {"description": "PR to start a discussion on an ECS prototype.\r\n\r\nTo make it easier to review, this PR is from one throw-away branch to another throw-away branch (no gtest). The working prototype is on branch `entity_component_system_prototype`\r\n\r\nAreas I'm hoping to get feedback in:\r\n\r\n**All APIs, especially**\r\n\r\n* **main.cc** shows how to interact with the ECS. Thoughts?\r\n* **DivideAndPrintResult.hh** Shows how someone would change gazebo's behavior by adding a system. Thoughts?\r\n* **Triplet.hh**  Components are POD structs. Is there a case where this won't be good enough?\r\n* **EntityQueryResult** is clunky. Ideas?\r\n\r\n**Plugins**\r\n\r\n**PluginLoader** is different from the current Gazebo plugin loader. The benefit is it queries the name and type of plugin when the library is loaded. For example, it could be used to load all libraries in a folder and display a list of available plugins to the user.\r\n\r\n* I've never written a plugin system before, are there fundamental flaws with the approach?\r\n* will this approach work on all platforms?\r\n* How important is it to support multiple plugins in the same shared library?\r\n\r\n**Misc**\r\n\r\n* I made the System headers \"private\" thinking there is no case where someone would instantiate or inherit from a system, but is there a case? If they are private it's easier to change released versions of gazebo.\r\n\r\nKnown Issues\r\n\r\n* Not integrated with existing gazebo cmake; it was faster to write and test a separate cmake project\r\n* No componentizer - the thing that will turn SDF into components\r\n* SystemManager and EntityManager implementations are very basic and slow\r\n* Coding style\r\n\r\nTo run the prototype\r\n\r\n```\r\nhg update entity_component_system_prototype\r\nmkdir build_ecs && cd build_ecs\r\ncmake ../gz_ecs\r\nmake\r\n# Run unit tests\r\nmake test\r\n# Run without plugins (Division system only)\r\n./gz_ecs\r\n# Run with plugins (adds Addition system)\r\nGAZEBO_PLUGIN_PATH=systems/ ./gz_ecs\r\n```", "title": "ECS Prototype Feedback", "destination": {"commit": {"hash": "74f72bd8982d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/74f72bd8982d.json"}, "html": {"href": "#!/osrf/gazebo/commits/74f72bd8982d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_deadend_dontmerge"}}, "reason": "", "source": {"commit": {"hash": "b99f32c9ffe2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b99f32c9ffe2.json"}, "html": {"href": "#!/osrf/gazebo/commits/b99f32c9ffe2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ecs_nogtest_broken_dontmerge"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-03-16T22:16:50.952385+00:00"}, "pull_request": {"type": "pullrequest", "id": 2659, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2659.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2659"}}, "title": "ECS Prototype Feedback"}}]}