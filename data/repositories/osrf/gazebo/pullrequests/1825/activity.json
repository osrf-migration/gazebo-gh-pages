{"pagelen": 50, "values": [{"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "208f4dbe7eff", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/208f4dbe7eff.json"}, "html": {"href": "#!/osrf/gazebo/commits/208f4dbe7eff"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "Will be re-opened later.", "source": {"commit": {"hash": "4ed9b4ee3d3a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/4ed9b4ee3d3a"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/4ed9b4ee3d3a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "DECLINED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-03-14T16:38:07.101198+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15730247.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15730247"}}, "parent": {"id": 15730067, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15730067.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15730067"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Yes, I'll reopen later when I have a chance with more updates. Thanks.", "markup": "markdown", "html": "<p>Yes, I'll reopen later when I have a chance with more updates. Thanks.</p>", "type": "rendered"}, "created_on": "2016-03-14T16:35:15.060416+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": "2016-03-14T16:35:15.067551+00:00", "type": "pullrequest_comment", "id": 15730247}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15730067.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15730067"}}, "parent": {"id": 15601930, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15601930.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15601930"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "@jlee02 , should I decline this pull request?", "markup": "markdown", "html": "<p>@jlee02 , should I decline this pull request?</p>", "type": "rendered"}, "created_on": "2016-03-14T16:31:58.282143+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-03-14T16:31:58.289719+00:00", "type": "pullrequest_comment", "id": 15730067}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15666361.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15666361"}}, "parent": {"id": 15601930, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15601930.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15601930"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "That would be great!", "markup": "markdown", "html": "<p>That would be great!</p>", "type": "rendered"}, "created_on": "2016-03-11T23:01:16.577622+00:00", "user": {"display_name": "Nicolae Rosia", "uuid": "{47441263-bb15-495f-b324-58a1e3c7b35f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D"}, "html": {"href": "https://bitbucket.org/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1b61ff7ec618b3e8743b8ab9743e4108d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNR-6.png"}}, "nickname": "nicolaerosia", "type": "user", "account_id": "557058:2ea02a3a-4b8d-4620-8154-81f2eb2f71af"}, "updated_on": "2016-03-11T23:01:16.903879+00:00", "type": "pullrequest_comment", "id": 15666361}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15601930.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15601930"}}, "parent": {"id": 15576421, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15576421.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15576421"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Sorry for not updating this pull request for a while. This pull request can be closed. I can create new one or reopen for Gazebo 8 with the failing tests fixed later.", "markup": "markdown", "html": "<p>Sorry for not updating this pull request for a while. This pull request can be closed. I can create new one or reopen for Gazebo 8 with the failing tests fixed later.</p>", "type": "rendered"}, "created_on": "2016-03-10T17:49:57.324907+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": "2016-03-10T17:49:57.327768+00:00", "type": "pullrequest_comment", "id": 15601930}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/15576421.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-15576421"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Since this missed Gazebo 7, is it still being considered?\n", "markup": "markdown", "html": "<p>Since this missed Gazebo 7, is it still being considered?</p>", "type": "rendered"}, "created_on": "2016-03-10T10:32:27.087215+00:00", "user": {"display_name": "Nicolae Rosia", "uuid": "{47441263-bb15-495f-b324-58a1e3c7b35f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D"}, "html": {"href": "https://bitbucket.org/%7B47441263-bb15-495f-b324-58a1e3c7b35f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1b61ff7ec618b3e8743b8ab9743e4108d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNR-6.png"}}, "nickname": "nicolaerosia", "type": "user", "account_id": "557058:2ea02a3a-4b8d-4620-8154-81f2eb2f71af"}, "updated_on": "2016-03-10T10:32:27.275393+00:00", "type": "pullrequest_comment", "id": 15576421}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13322745.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13322745"}}, "parent": {"id": 13110128, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13110128.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13110128"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "I think the jenkins build is running properly again:\n\n* http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/22/", "markup": "markdown", "html": "<p>I think the jenkins build is running properly again:</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/22/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/22/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2016-01-10T03:00:57.047237+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-10T03:00:57.050983+00:00", "type": "pullrequest_comment", "id": 13322745}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "872c960b330e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/872c960b330e.json"}, "html": {"href": "#!/osrf/gazebo/commits/872c960b330e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4ed9b4ee3d3a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/4ed9b4ee3d3a"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/4ed9b4ee3d3a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2016-01-08T04:17:42.936689+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13237842.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13237842"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "There was a problem with the `circular_dependencies` branch. I've improved it a bit in case you want to merge in the latest changes (see pull request #2089)", "markup": "markdown", "html": "<p>There was a problem with the <code>circular_dependencies</code> branch. I've improved it a bit in case you want to merge in the latest changes (see <a href=\"#!/osrf/gazebo/pull-requests/2089/fix-circular-dependency-between-physics\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2089</a>)</p>", "type": "rendered"}, "created_on": "2016-01-07T01:16:34.725970+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-07T01:16:34.730762+00:00", "type": "pullrequest_comment", "id": 13237842}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "6648c3a4063b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6648c3a4063b.json"}, "html": {"href": "#!/osrf/gazebo/commits/6648c3a4063b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d268f9ce6c88", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/d268f9ce6c88"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/d268f9ce6c88"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2016-01-05T23:31:06.327322+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "ce12ee9076b4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ce12ee9076b4.json"}, "html": {"href": "#!/osrf/gazebo/commits/ce12ee9076b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c125d389f16a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/c125d389f16a"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/c125d389f16a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2016-01-04T01:56:26.180606+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13110162.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13110162"}}, "parent": {"id": 13110128, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13110128.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13110128"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Absolutely, thanks!", "markup": "markdown", "html": "<p>Absolutely, thanks!</p>", "type": "rendered"}, "created_on": "2015-12-30T19:51:06.956614+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-12-30T19:51:06.958820+00:00", "type": "pullrequest_comment", "id": 13110162}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13110128.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13110128"}}, "parent": {"id": 13109952, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13109952.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13109952"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "I haven't taken a look into it yet, but will do to see if they are easy to fix this weekend. Would it be fine to make the decision whether we disable them and create issues at that time?", "markup": "markdown", "html": "<p>I haven't taken a look into it yet, but will do to see if they are easy to fix this weekend. Would it be fine to make the decision whether we disable them and create issues at that time?</p>", "type": "rendered"}, "created_on": "2015-12-30T19:49:01.549857+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": "2015-12-30T19:49:01.554018+00:00", "type": "pullrequest_comment", "id": 13110128}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/13109952.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-13109952"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Hopefully this can be merged before the gazebo7 release in January. @jlee02 have you had a chance to investigate the test failures? If not, then we should disable them and create issues.", "markup": "markdown", "html": "<p>Hopefully this can be merged before the gazebo7 release in January. @jlee02 have you had a chance to investigate the test failures? If not, then we should disable them and create issues.</p>", "type": "rendered"}, "created_on": "2015-12-30T19:39:35.642585+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-12-30T19:39:35.648663+00:00", "type": "pullrequest_comment", "id": 13109952}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "5299916de5cc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5299916de5cc.json"}, "html": {"href": "#!/osrf/gazebo/commits/5299916de5cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "be1f0d58ec98", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/be1f0d58ec98"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/be1f0d58ec98"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-12-04T01:25:13.663634+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/12146820.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-12146820"}}, "parent": {"id": 10440101, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/10440101.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-10440101"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "more recent build with same test failures:\n\n* http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/16/", "markup": "markdown", "html": "<p>more recent build with same test failures:</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/16/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/16/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2015-11-25T07:53:32.532289+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-11-25T07:53:32.534421+00:00", "type": "pullrequest_comment", "id": 12146820}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "604aa6ea0a40", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/604aa6ea0a40.json"}, "html": {"href": "#!/osrf/gazebo/commits/604aa6ea0a40"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "be1f0d58ec98", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/be1f0d58ec98"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/be1f0d58ec98"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-11-21T00:41:36.616569+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "f69b82f6e25c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f69b82f6e25c.json"}, "html": {"href": "#!/osrf/gazebo/commits/f69b82f6e25c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2f47756e1f58", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/2f47756e1f58"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/2f47756e1f58"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-11-20T13:54:04.921272+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "f69b82f6e25c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f69b82f6e25c.json"}, "html": {"href": "#!/osrf/gazebo/commits/f69b82f6e25c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2f47756e1f58", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/2f47756e1f58"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/2f47756e1f58"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-11-20T13:53:59.019277+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "f69b82f6e25c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f69b82f6e25c.json"}, "html": {"href": "#!/osrf/gazebo/commits/f69b82f6e25c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "756de10692a1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/756de10692a1"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/756de10692a1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-11-20T13:16:05.802523+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "f69b82f6e25c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f69b82f6e25c.json"}, "html": {"href": "#!/osrf/gazebo/commits/f69b82f6e25c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "756de10692a1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/756de10692a1"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/756de10692a1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-11-20T13:12:52.426545+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/10832723.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-10832723"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "It looks like dart 5.1.0 has fixed #1487. You can enable the test now if you like:\n\n~~~\ndiff -r 461196102417 cmake/SearchForStuff.cmake\n--- a/cmake/SearchForStuff.cmake\tWed Sep 30 10:28:25 2015 -0400\n+++ b/cmake/SearchForStuff.cmake\tThu Oct 15 03:04:17 2015 -0700\n@@ -142,7 +142,7 @@\n \n   #################################################\n   # Find DART\n-  find_package(DARTCore 5.0.1 QUIET)\n+  find_package(DARTCore 5.1.0 QUIET)\n   if (DARTCore_FOUND)\n     message (STATUS \"Looking for DARTCore - ${DARTCore_VERSION} found\")\n     set (HAVE_DART TRUE)\ndiff -r 461196102417 test/integration/physics_link.cc\n--- a/test/integration/physics_link.cc\tWed Sep 30 10:28:25 2015 -0400\n+++ b/test/integration/physics_link.cc\tThu Oct 15 03:04:17 2015 -0700\n@@ -307,14 +307,7 @@\n     math::Vector3 H = link->GetWorldAngularMomentum();\n     angularMomentumError.InsertData((H - H0) / H0mag);\n   }\n-  if (_physicsEngine == \"dart\")\n-  {\n-    gzdbg << \"dart has higher error for this test (see #1487), \"\n-          << \"so a larger tolerance is used.\"\n-          << std::endl;\n-    EXPECT_LT(angularMomentumError.Mag().Map()[stat], g_tolerance * 1e5);\n-  }\n-  else\n+\n   {\n     EXPECT_LT(angularMomentumError.Mag().Map()[stat], g_tolerance * 10);\n   }\n~~~", "markup": "markdown", "html": "<p>It looks like dart 5.1.0 has fixed <a href=\"#!/osrf/gazebo/issues/1487/dart-has-lower-accuracy-on-angular\" rel=\"nofollow\" title=\"DART has lower accuracy on angular momentum test\" class=\"ap-connect-link\">#1487</a>. You can enable the test now if you like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 461196102417 cmake/SearchForStuff.cmake</span>\n<span class=\"gd\">--- a/cmake/SearchForStuff.cmake    Wed Sep 30 10:28:25 2015 -0400</span>\n<span class=\"gi\">+++ b/cmake/SearchForStuff.cmake    Thu Oct 15 03:04:17 2015 -0700</span>\n<span class=\"gu\">@@ -142,7 +142,7 @@</span>\n\n   #################################################\n   # Find DART\n<span class=\"gd\">-  find_package(DARTCore 5.0.1 QUIET)</span>\n<span class=\"gi\">+  find_package(DARTCore 5.1.0 QUIET)</span>\n   if (DARTCore_FOUND)\n     message (STATUS &quot;Looking for DARTCore - ${DARTCore_VERSION} found&quot;)\n     set (HAVE_DART TRUE)\n<span class=\"gh\">diff -r 461196102417 test/integration/physics_link.cc</span>\n<span class=\"gd\">--- a/test/integration/physics_link.cc  Wed Sep 30 10:28:25 2015 -0400</span>\n<span class=\"gi\">+++ b/test/integration/physics_link.cc  Thu Oct 15 03:04:17 2015 -0700</span>\n<span class=\"gu\">@@ -307,14 +307,7 @@</span>\n     math::Vector3 H = link-&gt;GetWorldAngularMomentum();\n     angularMomentumError.InsertData((H - H0) / H0mag);\n   }\n<span class=\"gd\">-  if (_physicsEngine == &quot;dart&quot;)</span>\n<span class=\"gd\">-  {</span>\n<span class=\"gd\">-    gzdbg &lt;&lt; &quot;dart has higher error for this test (see #1487), &quot;</span>\n<span class=\"gd\">-          &lt;&lt; &quot;so a larger tolerance is used.&quot;</span>\n<span class=\"gd\">-          &lt;&lt; std::endl;</span>\n<span class=\"gd\">-    EXPECT_LT(angularMomentumError.Mag().Map()[stat], g_tolerance * 1e5);</span>\n<span class=\"gd\">-  }</span>\n<span class=\"gd\">-  else</span>\n<span class=\"gi\">+</span>\n   {\n     EXPECT_LT(angularMomentumError.Mag().Map()[stat], g_tolerance * 10);\n   }\n</pre></div>", "type": "rendered"}, "created_on": "2015-10-15T10:07:17.267331+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-10-15T10:07:17.271027+00:00", "type": "pullrequest_comment", "id": 10832723}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "78ca0d33aa1a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/78ca0d33aa1a.json"}, "html": {"href": "#!/osrf/gazebo/commits/78ca0d33aa1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "461196102417", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/461196102417"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/461196102417"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-10-15T05:53:44.558417+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/10440101.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-10440101"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Here's a jenkins build of this branch against the `release-5.0` branch of dart:\n\n* http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/10/\n\nThere's two warnings along with the test failures mentioned above.", "markup": "markdown", "html": "<p>Here's a jenkins build of this branch against the <code>release-5.0</code> branch of dart:</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/10/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any_dart4-devel-trusty-amd64-gpu-nvidia_docker/10/</a></li>\n</ul>\n<p>There's two warnings along with the test failures mentioned above.</p>", "type": "rendered"}, "created_on": "2015-10-02T04:58:27.448957+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-10-02T04:58:27.452189+00:00", "type": "pullrequest_comment", "id": 10440101}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "101447e6a40d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/101447e6a40d.json"}, "html": {"href": "#!/osrf/gazebo/commits/101447e6a40d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "461196102417", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/461196102417"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/461196102417"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-09-30T14:35:11.572659+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/9927913.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-9927913"}}, "parent": {"id": 9915897, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/9915897.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-9915897"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Sounds good, thank you. For now, I lowered the priority of this pull request in the [dashboard](http://gazebosim.org/dashboard) so it doesn't block other PRs.", "markup": "markdown", "html": "<p>Sounds good, thank you. For now, I lowered the priority of this pull request in the <a data-is-external-link=\"true\" href=\"http://gazebosim.org/dashboard\" rel=\"nofollow\">dashboard</a> so it doesn't block other PRs.</p>", "type": "rendered"}, "created_on": "2015-09-15T15:15:13.545083+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2015-09-15T15:15:13.550979+00:00", "type": "pullrequest_comment", "id": 9927913}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/9915897.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-9915897"}}, "parent": {"id": 9895293, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/9895293.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-9895293"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Thanks for ping me. I will take a look at when I have a chance.", "markup": "markdown", "html": "<p>Thanks for ping me. I will take a look at when I have a chance.</p>", "type": "rendered"}, "created_on": "2015-09-15T10:09:12.940468+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": "2015-09-15T10:09:12.945045+00:00", "type": "pullrequest_comment", "id": 9915897}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/9895293.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-9895293"}}, "parent": {"id": 9448050, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/9448050.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-9448050"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "@jlee02", "markup": "markdown", "html": "<p>@jlee02</p>", "type": "rendered"}, "created_on": "2015-09-14T18:59:59.778832+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2015-09-14T18:59:59.819816+00:00", "type": "pullrequest_comment", "id": 9895293}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/9448050.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-9448050"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Conflicts", "markup": "markdown", "html": "<p>Conflicts</p>", "type": "rendered"}, "created_on": "2015-08-27T18:30:41.249098+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-08-27T18:30:41.288255+00:00", "type": "pullrequest_comment", "id": 9448050}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "2b9f6a3073f3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2b9f6a3073f3.json"}, "html": {"href": "#!/osrf/gazebo/commits/2b9f6a3073f3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "54037cde13e8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/54037cde13e8"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/54037cde13e8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-08-06T18:26:31.458403+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8659810.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8659810"}}, "parent": {"id": 8629434, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8629434.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8629434"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "It seems DART 5.0 missed the train. Changed the target branch to default.\n", "markup": "markdown", "html": "<p>It seems DART 5.0 missed the train. Changed the target branch to default.</p>", "type": "rendered"}, "created_on": "2015-07-30T11:38:21.665527+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": "2015-07-30T11:38:21.685442+00:00", "type": "pullrequest_comment", "id": 8659810}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "2ea0c8295206", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2ea0c8295206.json"}, "html": {"href": "#!/osrf/gazebo/commits/2ea0c8295206"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a253bd97871d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/a253bd97871d"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/a253bd97871d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-30T09:27:42.193842+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "2ea0c8295206", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2ea0c8295206.json"}, "html": {"href": "#!/osrf/gazebo/commits/2ea0c8295206"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a253bd97871d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/a253bd97871d"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/a253bd97871d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-30T09:27:42.097957+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8629434.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8629434"}}, "parent": {"id": 8610359, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8610359.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8610359"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Good points. This is not needed for gazebo6, so this pull request should be targeted to default.", "markup": "markdown", "html": "<p>Good points. This is not needed for gazebo6, so this pull request should be targeted to default.</p>", "type": "rendered"}, "created_on": "2015-07-29T14:40:15.693385+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-07-29T14:40:15.706219+00:00", "type": "pullrequest_comment", "id": 8629434}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8610359.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8610359"}}, "parent": {"id": 8577814, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8577814.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8577814"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "We have released gazebo6 + dart4 support, right, but we did not release gazebo6 packages with dart support (still need to get dart officially into debian) so the chances of breaking pre-compiled stuff our package users are low. For the source compilations, this change will probably break first the loader (check `ldd /usr/bin/gzserver | grep libdart`) before the ABI, but yes, it will kill the ABI and the technically the semantic versioning with it.\n\nChanging a major version of a dependency in a minor release (i.e. 6.1.0) is something that I would like to avoid but if this is really really needed, not having dart in our .deb packages makes the impact sensibly lower. Note that we could not be the only one releasing packages, downstream distributions (Fedora, Arch, Gentoo, Debian, ...) are also doing this, and we don't have control about if Dart is included or not at this point, so we could potentially affect some other users.", "markup": "markdown", "html": "<p>We have released gazebo6 + dart4 support, right, but we did not release gazebo6 packages with dart support (still need to get dart officially into debian) so the chances of breaking pre-compiled stuff our package users are low. For the source compilations, this change will probably break first the loader (check <code>ldd /usr/bin/gzserver | grep libdart</code>) before the ABI, but yes, it will kill the ABI and the technically the semantic versioning with it.</p>\n<p>Changing a major version of a dependency in a minor release (i.e. 6.1.0) is something that I would like to avoid but if this is really really needed, not having dart in our .deb packages makes the impact sensibly lower. Note that we could not be the only one releasing packages, downstream distributions (Fedora, Arch, Gentoo, Debian, ...) are also doing this, and we don't have control about if Dart is included or not at this point, so we could potentially affect some other users.</p>", "type": "rendered"}, "created_on": "2015-07-29T01:32:52.348358+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2015-07-29T01:33:23.988792+00:00", "type": "pullrequest_comment", "id": 8610359}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8610040.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8610040"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "The `INTEGRATION_factory` test is failing too:\n\n~~~\n[ RUN      ] PhysicsEngines/FactoryTest.Clone/3\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.90\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\n...\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\nMsg [NameManager::issueNewName] (default) The name [root] is a duplicate, so it has been renamed to [root(1)]\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\n...\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\nMsg [NameManager::issueNewName] (default) The name [root] is a duplicate, so it has been renamed to [root(4)]\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\n...\n[Dbg] [DARTLink.cc:321] OnPoseChange() doesn't make sense if the parent joint is not free joint (6-dof).\n...\n[Dbg] [DARTLink.cc:321] OnPoseChange() doesn't make sense if the parent joint is not free joint (6-dof).\n***** Internal Program Error - assertion (dtJoint != __null) failed in void gazebo::physics::DARTJointPrivate::Initialize():\n/home/scpeters/ws/gazebo_physics/src/gazebo/gazebo/physics/dart/DARTJointPrivate.hh(59): dtJoint is null pointer.\n~~~", "markup": "markdown", "html": "<p>The <code>INTEGRATION_factory</code> test is failing too:</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] PhysicsEngines/FactoryTest.Clone/3\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.90\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\n...\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\nMsg [NameManager::issueNewName] (default) The name [root] is a duplicate, so it has been renamed to [root(1)]\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\n...\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\nMsg [NameManager::issueNewName] (default) The name [root] is a duplicate, so it has been renamed to [root(4)]\nWarning [BodyNode.cpp:468] [BodyNode::addCollisionShape] Attempting to add a nullptr as a collision shape\n...\n[Dbg] [DARTLink.cc:321] OnPoseChange() doesn&#39;t make sense if the parent joint is not free joint (6-dof).\n...\n[Dbg] [DARTLink.cc:321] OnPoseChange() doesn&#39;t make sense if the parent joint is not free joint (6-dof).\n***** Internal Program Error - assertion (dtJoint != __null) failed in void gazebo::physics::DARTJointPrivate::Initialize():\n/home/scpeters/ws/gazebo_physics/src/gazebo/gazebo/physics/dart/DARTJointPrivate.hh(59): dtJoint is null pointer.\n</pre></div>", "type": "rendered"}, "created_on": "2015-07-29T01:14:01.560743+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-07-29T01:14:01.573090+00:00", "type": "pullrequest_comment", "id": 8610040}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8609179.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8609179"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "The `UNIT_SonarSensor_TEST` is failing for me:\n\n~~~\n[ RUN      ] SonarTests/SonarSensor_TEST.DemoWorld/6\n[Dbg] [SonarSensor_TEST.cc:157] Physics dart paused 0\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.90\n***** Internal Program Error - assertion (_collision->GetDARTBodyNode()) failed in void gazebo::physics::DARTMesh::CreateMesh(float*, int*, unsigned int, unsigned int, gazebo::physics::DARTCollisionPtr, const gazebo::math::Vector3&):\n/home/scpeters/ws/gazebo_physics/src/gazebo/gazebo/physics/dart/DARTMesh.cc(150): DART _collision->GetDARTBodyNode() is null\n~~~", "markup": "markdown", "html": "<p>The <code>UNIT_SonarSensor_TEST</code> is failing for me:</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] SonarTests/SonarSensor_TEST.DemoWorld/6\n[Dbg] [SonarSensor_TEST.cc:157] Physics dart paused 0\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.90\n***** Internal Program Error - assertion (_collision-&gt;GetDARTBodyNode()) failed in void gazebo::physics::DARTMesh::CreateMesh(float*, int*, unsigned int, unsigned int, gazebo::physics::DARTCollisionPtr, const gazebo::math::Vector3&amp;):\n/home/scpeters/ws/gazebo_physics/src/gazebo/gazebo/physics/dart/DARTMesh.cc(150): DART _collision-&gt;GetDARTBodyNode() is null\n</pre></div>", "type": "rendered"}, "created_on": "2015-07-29T00:19:53.492864+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-07-29T00:19:53.500530+00:00", "type": "pullrequest_comment", "id": 8609179}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "bf43126e40b8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf43126e40b8.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf43126e40b8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a253bd97871d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/a253bd97871d"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/a253bd97871d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-07-28T22:04:18.665642+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8577814.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8577814"}}, "parent": {"id": 8517767, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8517767.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8517767"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "A separate issue is that we have released gazebo6 with dart4 support, while this will change to required dart5. It's been released for less than a day, but changing the required version of a dependency seems similar to breaking API/ABI to me.\n\n@\\_jrivero_ ", "markup": "markdown", "html": "<p>A separate issue is that we have released gazebo6 with dart4 support, while this will change to required dart5. It's been released for less than a day, but changing the required version of a dependency seems similar to breaking API/ABI to me.</p>\n<p>@_jrivero_ </p>", "type": "rendered"}, "created_on": "2015-07-28T08:31:13.730661+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-07-28T08:31:13.745998+00:00", "type": "pullrequest_comment", "id": 8577814}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "bf43126e40b8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf43126e40b8.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf43126e40b8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a253bd97871d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/a253bd97871d"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/a253bd97871d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-28T06:52:44.430524+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "bf43126e40b8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf43126e40b8.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf43126e40b8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a253bd97871d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/a253bd97871d"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/a253bd97871d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-28T06:52:38.246088+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "bf43126e40b8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf43126e40b8.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf43126e40b8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "295358ef2753", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/295358ef2753"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/295358ef2753"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-28T06:51:02.790228+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "256c1d2f8099", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/256c1d2f8099.json"}, "html": {"href": "#!/osrf/gazebo/commits/256c1d2f8099"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ea2ad87e07ad", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/ea2ad87e07ad"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/ea2ad87e07ad"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-24T15:20:54.477369+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "256c1d2f8099", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/256c1d2f8099.json"}, "html": {"href": "#!/osrf/gazebo/commits/256c1d2f8099"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5410634cb0fa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/5410634cb0fa"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/5410634cb0fa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-24T14:57:11.557799+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "256c1d2f8099", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/256c1d2f8099.json"}, "html": {"href": "#!/osrf/gazebo/commits/256c1d2f8099"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5410634cb0fa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/5410634cb0fa"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/5410634cb0fa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-24T14:57:11.516409+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8517916.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8517916"}}, "parent": {"id": 8517767, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8517767.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8517767"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "~~~I see. This PR includes deprecates so it should go into gazebo7. It seems gazebo7 branch is not created yet. Changed to default instead.~~~ No problem, Then I'll change it back to gazebo6 and see if it passes the ABI checker.", "markup": "markdown", "html": "<p><del>~I see. This PR includes deprecates so it should go into gazebo7. It seems gazebo7 branch is not created yet. Changed to default instead.</del>~ No problem, Then I'll change it back to gazebo6 and see if it passes the ABI checker.</p>", "type": "rendered"}, "created_on": "2015-07-24T14:54:42.746519+00:00", "user": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "updated_on": "2015-07-24T14:56:56.722765+00:00", "type": "pullrequest_comment", "id": 8517916}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8517979.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8517979"}}, "parent": {"id": 8517916, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8517916.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8517916"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "You can change it back to gazebo6. We can check compatibility after the gazebo6 release on july 27th.", "markup": "markdown", "html": "<p>You can change it back to gazebo6. We can check compatibility after the gazebo6 release on july 27th.</p>", "type": "rendered"}, "created_on": "2015-07-24T14:56:21.443120+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-07-24T14:56:21.451210+00:00", "type": "pullrequest_comment", "id": 8517979}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "04c8460a5b85", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/04c8460a5b85.json"}, "html": {"href": "#!/osrf/gazebo/commits/04c8460a5b85"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5410634cb0fa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/5410634cb0fa"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/5410634cb0fa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-24T14:54:55.276247+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"update": {"description": "This pull request updates the DART interface for DART 5.0. Major code changes were made in the part of Model assembling.\r\n\r\nIn DART 5.0, links (dart::BodyNode) and joints cannot be created individually. [It should be created through its Model (dart::Skeleton) in the order of tree spanning like BFS or DFS](https://github.com/dartsim/dart/pull/369). Gazebo however allows to create links and joints individually by parsing a SDF file in serial order using Model::Load(), and it doesn't guarantee that links and joints are parsed in the tree spanning order. That being said, the complete list of links and joints are required to build a dart::Skeleton. \r\n\r\n[It seems Model::Load() doesn't parse the joints under some condition](#!/osrf/gazebo/src/04c8460a5b855f9719c0cc306adf43f79064ed6a/gazebo/physics/Model.cc?at=default#Model.cc-92) so I put the model assembling code in DARTModel::Init(). After that, I found an issue that some code attempts to access member functions of Link and Joint in Model::Load() when DART objects are not created because Model::Init() is not called yet. I think they shouldn't be called before Joint and Link are initialized but I leave it since it looks out of scope of this PR.\r\n\r\nI used caching method to resolve this issue. If a setter function is called before it's ready to be called then it caches the value or the function call itself (to avoid copy-and-paste the logic that used in the setter function), and returns when the corresponding getter function is called. This caching method doesn't work well for all the kind of setter/getter functions because many of them doesn't have one-to-one relationship (e.g., Joint::setAxis() and Joint::setGlobalAxis()), but this is the best solution I can think as of now. Please let me know if there is better idea.\r\n\r\nAlso, this PR partially fixes [DARTScrewJoint issue](#!/osrf/gazebo/issues/1096/dartscrewjoint-has-some-test-failures) by converting different definitions of thread pitch between Gazebo and DART.\r\n\r\nI'm targeting this PR to gazebo6 since I believe this doesn't break API/ABI compatibility, but please let me know this should target to default.", "title": "DART interface update for DART 5.0", "destination": {"commit": {"hash": "04c8460a5b85", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/04c8460a5b85.json"}, "html": {"href": "#!/osrf/gazebo/commits/04c8460a5b85"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5410634cb0fa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart/commit/5410634cb0fa"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart/commits/5410634cb0fa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jlee02/gazebo_dart"}, "html": {"href": "https://bitbucket.org/jlee02/gazebo_dart"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c031c73-40f7-4d2a-aecf-c6876e22ed39}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_dart", "full_name": "jlee02/gazebo_dart", "uuid": "{3c031c73-40f7-4d2a-aecf-c6876e22ed39}"}, "branch": {"name": "dart5"}}, "state": "OPEN", "author": {"display_name": "Jeongseok Lee", "uuid": "{3907b560-aed7-43bd-bfa9-fd9873322291}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D"}, "html": {"href": "https://bitbucket.org/%7B3907b560-aed7-43bd-bfa9-fd9873322291%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/242819b368397b2b4cddf273b2ba9bf8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJL-0.png"}}, "nickname": "jlee02", "type": "user", "account_id": "557058:e3fbdece-a1d8-4fb6-a9f1-236ecb09bd9d"}, "date": "2015-07-24T14:54:55.236709+00:00"}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8517900.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8517900"}}, "parent": {"id": 8517767, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825/comments/8517767.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825/_/diff#comment-8517767"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}, "content": {"raw": "Sorry, too early in the morning. This is probably okay. But we'll have to run it through the ABI checker after the gazebo6 release.", "markup": "markdown", "html": "<p>Sorry, too early in the morning. This is probably okay. But we'll have to run it through the ABI checker after the gazebo6 release.</p>", "type": "rendered"}, "created_on": "2015-07-24T14:54:19.335413+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-07-24T14:54:19.341140+00:00", "type": "pullrequest_comment", "id": 8517900}, "pull_request": {"type": "pullrequest", "id": 1825, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1825"}}, "title": "DART interface update for DART 5.0"}}], "next": "data/repositories/osrf/gazebo/pullrequests/1825/activity_ctx=jqueHaug.json"}