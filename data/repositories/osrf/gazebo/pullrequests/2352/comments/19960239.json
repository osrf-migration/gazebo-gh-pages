{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2352/comments/19960239.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2352/_/diff#comment-19960239"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2352, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2352.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2352"}}, "title": "Use /W4 instead of /Wall in MSVC"}, "content": {"raw": "Note that the warning level will still end up at W3 (at least in cmake 3.5.2) due to way cmake sets the compiler flag (see cmake_install_dir\\share\\cmake-3.5\\Modules\\Platform\\Windows-MSVC.cmake):\n\n```\n#!cmake\nset(CMAKE_${lang}_FLAGS_INIT \"${_PLATFORM_DEFINES}${_PLATFORM_DEFINES_${lang}} /D_WINDOWS /W3${_FLAGS_${lang}}\")\n```\n\nAnd because CMAKE_CXX_FLAGS now ends up with two warning options the compiler spits out another warning message!\n\nThe standard way to fix this properly appears to be to resort to a sledgehammer string manipulation see http://stackoverflow.com/questions/2368811/how-to-set-warning-level-in-cmake?lq=1.\n\nI've taken to adding \"/wd4005 /wd4068 /wd4244 /wd4267 /wd4996\" to the CMAKE_CXX_FLAGS which filters out most of the verbose warnings gazebo generates.\n\nThere doesn't seem to be a perfect solution and this patch certainly improves things from the current state.\n\n ", "markup": "markdown", "html": "<p>Note that the warning level will still end up at W3 (at least in cmake 3.5.2) due to way cmake sets the compiler flag (see cmake_install_dir\\share\\cmake-3.5\\Modules\\Platform\\Windows-MSVC.cmake):</p>\n<div class=\"codehilite language-cmake\"><pre><span></span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"s\">CMAKE_</span><span class=\"o\">${</span><span class=\"nv\">lang</span><span class=\"o\">}</span><span class=\"s\">_FLAGS_INIT</span> <span class=\"s2\">&quot;${_PLATFORM_DEFINES}${_PLATFORM_DEFINES_${lang}} /D_WINDOWS /W3${_FLAGS_${lang}}&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>And because CMAKE_CXX_FLAGS now ends up with two warning options the compiler spits out another warning message!</p>\n<p>The standard way to fix this properly appears to be to resort to a sledgehammer string manipulation see <a href=\"http://stackoverflow.com/questions/2368811/how-to-set-warning-level-in-cmake?lq=1\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/2368811/how-to-set-warning-level-in-cmake?lq=1</a>.</p>\n<p>I've taken to adding \"/wd4005 /wd4068 /wd4244 /wd4267 /wd4996\" to the CMAKE_CXX_FLAGS which filters out most of the verbose warnings gazebo generates.</p>\n<p>There doesn't seem to be a perfect solution and this patch certainly improves things from the current state.</p>", "type": "rendered"}, "created_on": "2016-06-20T11:36:19.484492+00:00", "user": {"display_name": "Aaron Clauson", "uuid": "{80d9ee60-d587-47a9-baa5-5005304756a7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D"}, "html": {"href": "https://bitbucket.org/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a91a9c7849303cad7efa3423f1feba30d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-5.png"}}, "nickname": "azaclauson", "type": "user", "account_id": "557058:c389a3f4-daff-47aa-8c04-b81dd4520568"}, "updated_on": "2016-06-20T11:36:19.541543+00:00", "type": "pullrequest_comment", "id": 19960239}