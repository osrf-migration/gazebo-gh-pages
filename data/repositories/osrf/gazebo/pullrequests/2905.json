{"rendered": {"description": {"raw": "This fixes some undefined behavior in the `ODESliderJoint` class caused by neglecting to initialize some data. Since this is undefined behavior, it will nondeterministically result in very problematic behavior whenever any part of the code tries to use the result of `ODESliderJoint::GetAnchor()`. In particular, calling `Joint::SetPosition(~)` on a slider joint may cause the simulation to explode, even when `SetPosition(~)` is only being used during initialization. Specifically, [`Joint::ComputeChildLinkPose(~)`](#!/osrf/gazebo/src/bedaf66d30341070c8f44c9be09d8877c57f2e67/gazebo/physics/Joint.cc?at=gazebo7&fileviewer=file-view-default#Joint.cc-1407) will output a bad transform whenever we get unlucky with the undefined behavior.", "markup": "markdown", "html": "<p>This fixes some undefined behavior in the <code>ODESliderJoint</code> class caused by neglecting to initialize some data. Since this is undefined behavior, it will nondeterministically result in very problematic behavior whenever any part of the code tries to use the result of <code>ODESliderJoint::GetAnchor()</code>. In particular, calling <code>Joint::SetPosition(~)</code> on a slider joint may cause the simulation to explode, even when <code>SetPosition(~)</code> is only being used during initialization. Specifically, <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/bedaf66d30341070c8f44c9be09d8877c57f2e67/gazebo/physics/Joint.cc?at=gazebo7&amp;fileviewer=file-view-default#Joint.cc-1407\" rel=\"nofollow\"><code>Joint::ComputeChildLinkPose(~)</code></a> will output a bad transform whenever we get unlucky with the undefined behavior.</p>", "type": "rendered"}, "title": {"raw": "Fix undefined behavior in ODESliderJoint", "markup": "markdown", "html": "<p>Fix undefined behavior in ODESliderJoint</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This fixes some undefined behavior in the `ODESliderJoint` class caused by neglecting to initialize some data. Since this is undefined behavior, it will nondeterministically result in very problematic behavior whenever any part of the code tries to use the result of `ODESliderJoint::GetAnchor()`. In particular, calling `Joint::SetPosition(~)` on a slider joint may cause the simulation to explode, even when `SetPosition(~)` is only being used during initialization. Specifically, [`Joint::ComputeChildLinkPose(~)`](#!/osrf/gazebo/src/bedaf66d30341070c8f44c9be09d8877c57f2e67/gazebo/physics/Joint.cc?at=gazebo7&fileviewer=file-view-default#Joint.cc-1407) will output a bad transform whenever we get unlucky with the undefined behavior.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2905/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:b3804026648d%0Dbedaf66d3034?from_pullrequest_id=2905"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2905/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2905.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2905/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2905/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2905"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2905/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:b3804026648d%0Dbedaf66d3034?from_pullrequest_id=2905"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2905/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2905/statuses_page=1.json"}}, "title": "Fix undefined behavior in ODESliderJoint", "close_source_branch": true, "reviewers": [{"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}], "id": 2905, "destination": {"commit": {"hash": "bedaf66d3034", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bedaf66d3034.json"}, "html": {"href": "#!/osrf/gazebo/commits/bedaf66d3034"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2018-03-06T02:00:40.975446+00:00", "summary": {"raw": "This fixes some undefined behavior in the `ODESliderJoint` class caused by neglecting to initialize some data. Since this is undefined behavior, it will nondeterministically result in very problematic behavior whenever any part of the code tries to use the result of `ODESliderJoint::GetAnchor()`. In particular, calling `Joint::SetPosition(~)` on a slider joint may cause the simulation to explode, even when `SetPosition(~)` is only being used during initialization. Specifically, [`Joint::ComputeChildLinkPose(~)`](#!/osrf/gazebo/src/bedaf66d30341070c8f44c9be09d8877c57f2e67/gazebo/physics/Joint.cc?at=gazebo7&fileviewer=file-view-default#Joint.cc-1407) will output a bad transform whenever we get unlucky with the undefined behavior.", "markup": "markdown", "html": "<p>This fixes some undefined behavior in the <code>ODESliderJoint</code> class caused by neglecting to initialize some data. Since this is undefined behavior, it will nondeterministically result in very problematic behavior whenever any part of the code tries to use the result of <code>ODESliderJoint::GetAnchor()</code>. In particular, calling <code>Joint::SetPosition(~)</code> on a slider joint may cause the simulation to explode, even when <code>SetPosition(~)</code> is only being used during initialization. Specifically, <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/bedaf66d30341070c8f44c9be09d8877c57f2e67/gazebo/physics/Joint.cc?at=gazebo7&amp;fileviewer=file-view-default#Joint.cc-1407\" rel=\"nofollow\"><code>Joint::ComputeChildLinkPose(~)</code></a> will output a bad transform whenever we get unlucky with the undefined behavior.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c15f8ce7f3f7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c15f8ce7f3f7.json"}, "html": {"href": "#!/osrf/gazebo/commits/c15f8ce7f3f7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "FixSliderJointUndefinedBehavior"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2018-03-06T16:48:24.711475+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "REVIEWER", "participated_on": "2018-03-06T09:27:00.344727+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}], "reason": "", "updated_on": "2018-03-06T17:22:58.033429+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "b3804026648d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b3804026648d.json"}, "html": {"href": "#!/osrf/gazebo/commits/b3804026648d"}}}, "closed_by": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}