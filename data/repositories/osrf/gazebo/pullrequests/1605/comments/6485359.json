{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1605/comments/6485359.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1605/_/diff#comment-6485359"}}, "parent": {"id": 6480462, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1605/comments/6480462.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1605/_/diff#comment-6480462"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1605, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1605.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1605"}}, "title": "Added Shape::ComputeVolume and implementations for simple shapes"}, "content": {"raw": "Due to the way I've implemented `Shape::ComputeVolume`, the `Shape` object needs a non-null parent `CollisionPtr` object to get the bounding box approximation for the volume, otherwise it simply returns 0. I can test this branch of the function, but in order to get full coverage I'd probably want to put a test in an integration test.", "markup": "markdown", "html": "<p>Due to the way I've implemented <code>Shape::ComputeVolume</code>, the <code>Shape</code> object needs a non-null parent <code>CollisionPtr</code> object to get the bounding box approximation for the volume, otherwise it simply returns 0. I can test this branch of the function, but in order to get full coverage I'd probably want to put a test in an integration test.</p>", "type": "rendered"}, "created_on": "2015-04-24T22:35:14.636682+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-04-24T22:36:06.948136+00:00", "type": "pullrequest_comment", "id": 6485359}