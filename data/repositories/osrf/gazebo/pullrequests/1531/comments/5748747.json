{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1531/comments/5748747.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1531/_/diff#comment-5748747"}}, "parent": {"id": 5745362, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1531/comments/5745362.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1531/_/diff#comment-5745362"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1531, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1531.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1531"}}, "title": "Respect system cflags when not using USE_UPSTREAM_CFLAGS"}, "content": {"raw": "Ouch ... looking deeper into this, I spoke too fast. It is not really the unset of `CMAKE_CXX_FLAGS` (`CMAKE_C_FLAGS_ALL` is a gazebo internal variable) which is taking optimizations out of the ARM build. What it is really removing the optimization is the overwrite of `DCMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=\"\"` sent by the rules file when trying to handle SSE flags.\n\nThe problem is not present in debian official package since I've defined [buildsystem=cmake](http://anonscm.debian.org/cgit/debian-science/packages/gazebo.git/tree/debian/rules#n43) which makes the magic of [get the env CPPFLAGS (-O2 -g ...) into CXXFLAGS](https://wiki.debian.org/Hardening#Notes_for_packages_using_CMake) and thus, got used by cmake.\n\nI've modifed the PR to only clean CMAKE_CXX_FLAGS when using our own set.", "markup": "markdown", "html": "<p>Ouch ... looking deeper into this, I spoke too fast. It is not really the unset of <code>CMAKE_CXX_FLAGS</code> (<code>CMAKE_C_FLAGS_ALL</code> is a gazebo internal variable) which is taking optimizations out of the ARM build. What it is really removing the optimization is the overwrite of <code>DCMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=\"\"</code> sent by the rules file when trying to handle SSE flags.</p>\n<p>The problem is not present in debian official package since I've defined <a data-is-external-link=\"true\" href=\"http://anonscm.debian.org/cgit/debian-science/packages/gazebo.git/tree/debian/rules#n43\" rel=\"nofollow\">buildsystem=cmake</a> which makes the magic of <a data-is-external-link=\"true\" href=\"https://wiki.debian.org/Hardening#Notes_for_packages_using_CMake\" rel=\"nofollow\">get the env CPPFLAGS (-O2 -g ...) into CXXFLAGS</a> and thus, got used by cmake.</p>\n<p>I've modifed the PR to only clean CMAKE_CXX_FLAGS when using our own set.</p>", "type": "rendered"}, "created_on": "2015-03-19T00:47:14.712532+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2015-03-19T00:47:14.721031+00:00", "type": "pullrequest_comment", "id": 5748747}