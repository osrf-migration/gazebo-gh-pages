{"rendered": {"reason": {"raw": "see pull request #1812", "markup": "markdown", "html": "<p>see <a href=\"#!/osrf/gazebo/pull-requests/1812/fix-for-ogre-19\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1812</a></p>", "type": "rendered"}, "description": {"raw": "issue #1670\r\n\r\nProblem was that `RenderEngine` was found to have an invalid `this->overlaySystem` pointer value in [Load](#!/osrf/gazebo/src/28a449c0068e1f12b651152ca39b3138dcc66e2a/gazebo/rendering/RenderEngine.cc?at=camera_sensor_ogre1.9#RenderEngine.cc-135) function (even though it's set to `NULL` in constructor) so  the `overlaySystem`  object was never initialized - ogre then crashes due to invalid overlay system pointer.\r\n\r\nDon't have a complete explanation for this but seems like it's caused by wrapping member variables with `#if` `#end` in singleton header files. Removing the macro fixes the problem. Also works with ogre 1.8 as `Ogre::OverlaySystem` is forward declared.\r\n\r\nWe did an interesting test - declared another member variable pointer at the end of the header file and that pointer becomes the one with invalid pointer value and no crashes. \r\n\r\n", "markup": "markdown", "html": "<p>issue <a href=\"#!/osrf/gazebo/issues/1670/segmentation-fault-on-camararender-with\" rel=\"nofollow\" title=\"Segmentation fault on CamaraRender with ogre-1.9\" class=\"ap-connect-link\"><s>#1670</s></a></p>\n<p>Problem was that <code>RenderEngine</code> was found to have an invalid <code>this-&gt;overlaySystem</code> pointer value in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/28a449c0068e1f12b651152ca39b3138dcc66e2a/gazebo/rendering/RenderEngine.cc?at=camera_sensor_ogre1.9#RenderEngine.cc-135\" rel=\"nofollow\">Load</a> function (even though it's set to <code>NULL</code> in constructor) so  the <code>overlaySystem</code>  object was never initialized - ogre then crashes due to invalid overlay system pointer.</p>\n<p>Don't have a complete explanation for this but seems like it's caused by wrapping member variables with <code>#if</code> <code>#end</code> in singleton header files. Removing the macro fixes the problem. Also works with ogre 1.8 as <code>Ogre::OverlaySystem</code> is forward declared.</p>\n<p>We did an interesting test - declared another member variable pointer at the end of the header file and that pointer becomes the one with invalid pointer value and no crashes. </p>", "type": "rendered"}, "title": {"raw": "Fix camera sensor crash when using ogre 1.9", "markup": "markdown", "html": "<p>Fix camera sensor crash when using ogre 1.9</p>", "type": "rendered"}}, "type": "pullrequest", "description": "issue #1670\r\n\r\nProblem was that `RenderEngine` was found to have an invalid `this->overlaySystem` pointer value in [Load](#!/osrf/gazebo/src/28a449c0068e1f12b651152ca39b3138dcc66e2a/gazebo/rendering/RenderEngine.cc?at=camera_sensor_ogre1.9#RenderEngine.cc-135) function (even though it's set to `NULL` in constructor) so  the `overlaySystem`  object was never initialized - ogre then crashes due to invalid overlay system pointer.\r\n\r\nDon't have a complete explanation for this but seems like it's caused by wrapping member variables with `#if` `#end` in singleton header files. Removing the macro fixes the problem. Also works with ogre 1.8 as `Ogre::OverlaySystem` is forward declared.\r\n\r\nWe did an interesting test - declared another member variable pointer at the end of the header file and that pointer becomes the one with invalid pointer value and no crashes. \r\n\r\n", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1810/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:e357cf3ffdb4%0Dc396fe7b0c8e?from_pullrequest_id=1810"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1810/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1810.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1810/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1810/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1810"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1810/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:e357cf3ffdb4%0Dc396fe7b0c8e?from_pullrequest_id=1810"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1810/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1810/statuses_page=1.json"}}, "title": "Fix camera sensor crash when using ogre 1.9", "close_source_branch": false, "reviewers": [], "id": 1810, "destination": {"commit": {"hash": "c396fe7b0c8e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c396fe7b0c8e.json"}, "html": {"href": "#!/osrf/gazebo/commits/c396fe7b0c8e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo6"}}, "created_on": "2015-07-22T00:57:49.825232+00:00", "summary": {"raw": "issue #1670\r\n\r\nProblem was that `RenderEngine` was found to have an invalid `this->overlaySystem` pointer value in [Load](#!/osrf/gazebo/src/28a449c0068e1f12b651152ca39b3138dcc66e2a/gazebo/rendering/RenderEngine.cc?at=camera_sensor_ogre1.9#RenderEngine.cc-135) function (even though it's set to `NULL` in constructor) so  the `overlaySystem`  object was never initialized - ogre then crashes due to invalid overlay system pointer.\r\n\r\nDon't have a complete explanation for this but seems like it's caused by wrapping member variables with `#if` `#end` in singleton header files. Removing the macro fixes the problem. Also works with ogre 1.8 as `Ogre::OverlaySystem` is forward declared.\r\n\r\nWe did an interesting test - declared another member variable pointer at the end of the header file and that pointer becomes the one with invalid pointer value and no crashes. \r\n\r\n", "markup": "markdown", "html": "<p>issue <a href=\"#!/osrf/gazebo/issues/1670/segmentation-fault-on-camararender-with\" rel=\"nofollow\" title=\"Segmentation fault on CamaraRender with ogre-1.9\" class=\"ap-connect-link\"><s>#1670</s></a></p>\n<p>Problem was that <code>RenderEngine</code> was found to have an invalid <code>this-&gt;overlaySystem</code> pointer value in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/28a449c0068e1f12b651152ca39b3138dcc66e2a/gazebo/rendering/RenderEngine.cc?at=camera_sensor_ogre1.9#RenderEngine.cc-135\" rel=\"nofollow\">Load</a> function (even though it's set to <code>NULL</code> in constructor) so  the <code>overlaySystem</code>  object was never initialized - ogre then crashes due to invalid overlay system pointer.</p>\n<p>Don't have a complete explanation for this but seems like it's caused by wrapping member variables with <code>#if</code> <code>#end</code> in singleton header files. Removing the macro fixes the problem. Also works with ogre 1.8 as <code>Ogre::OverlaySystem</code> is forward declared.</p>\n<p>We did an interesting test - declared another member variable pointer at the end of the header file and that pointer becomes the one with invalid pointer value and no crashes. </p>", "type": "rendered"}, "source": {"commit": {"hash": "e357cf3ffdb4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e357cf3ffdb4.json"}, "html": {"href": "#!/osrf/gazebo/commits/e357cf3ffdb4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "camera_sensor_ogre1.9"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-07-22T14:53:06.727659+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "see pull request #1812", "updated_on": "2015-07-22T19:19:40.933648+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": null, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}