{"rendered": {"reason": {"raw": "Replacing with pull request #2623", "markup": "markdown", "html": "<p>Replacing with <a href=\"#!/osrf/gazebo/pull-requests/2623/prefer-qwt-qt5-linux\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2623</a></p>", "type": "rendered"}, "description": {"raw": "Fixes a segfault on start-up if the wrong qwt was selected.\r\n\r\nI updated my local checkout yesterday and compiled Gazebo 8 prior to release to get a preview, but gzclient promptly segfaulted.  This was hard to debug as the segfault occurred before `main()`.  After a lot of head-scratching and recompiling in debug mode, I finally realized it was linking to both Qt4 and Qt5 on my Xenial machine.\r\n\r\nIt turned out the reason it did so was because it automatically selected `libqwt.so.6.1.2`, since I had failed to notice the need for installing package `libqwt-qt5-dev`.  Installing this and re-running cmake (with cleared cache !) fixed the problem.  However, if Gazebo is switching unconditionally to Qt5 for this release, I'd recommend changing `SearchForStuff.cmake` to only use qwt-qt5.\r\n\r\nPerhaps this is only Ubuntu-related, and the name `qwt` is used on other platforms.  In that case it would be nice to detect somehow if the selected library is Qt4 or Qt5, because the condition where the program simply crashes before `main()` is very hard to understand.  It occurs for any program that links both libQt5Gui.so and libQtGui.so, which happens in gzclient if libqwt is selected instead of libqwt-qt5.", "markup": "markdown", "html": "<p>Fixes a segfault on start-up if the wrong qwt was selected.</p>\n<p>I updated my local checkout yesterday and compiled Gazebo 8 prior to release to get a preview, but gzclient promptly segfaulted.  This was hard to debug as the segfault occurred before <code>main()</code>.  After a lot of head-scratching and recompiling in debug mode, I finally realized it was linking to both Qt4 and Qt5 on my Xenial machine.</p>\n<p>It turned out the reason it did so was because it automatically selected <code>libqwt.so.6.1.2</code>, since I had failed to notice the need for installing package <code>libqwt-qt5-dev</code>.  Installing this and re-running cmake (with cleared cache !) fixed the problem.  However, if Gazebo is switching unconditionally to Qt5 for this release, I'd recommend changing <code>SearchForStuff.cmake</code> to only use qwt-qt5.</p>\n<p>Perhaps this is only Ubuntu-related, and the name <code>qwt</code> is used on other platforms.  In that case it would be nice to detect somehow if the selected library is Qt4 or Qt5, because the condition where the program simply crashes before <code>main()</code> is very hard to understand.  It occurs for any program that links both libQt5Gui.so and libQtGui.so, which happens in gzclient if libqwt is selected instead of libqwt-qt5.</p>", "type": "rendered"}, "title": {"raw": "Remove plain 'qwt' leaving only 'qwt-qt5', since it links to Qt4 version.", "markup": "markdown", "html": "<p>Remove plain 'qwt' leaving only 'qwt-qt5', since it links to Qt4 version.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Fixes a segfault on start-up if the wrong qwt was selected.\r\n\r\nI updated my local checkout yesterday and compiled Gazebo 8 prior to release to get a preview, but gzclient promptly segfaulted.  This was hard to debug as the segfault occurred before `main()`.  After a lot of head-scratching and recompiling in debug mode, I finally realized it was linking to both Qt4 and Qt5 on my Xenial machine.\r\n\r\nIt turned out the reason it did so was because it automatically selected `libqwt.so.6.1.2`, since I had failed to notice the need for installing package `libqwt-qt5-dev`.  Installing this and re-running cmake (with cleared cache !) fixed the problem.  However, if Gazebo is switching unconditionally to Qt5 for this release, I'd recommend changing `SearchForStuff.cmake` to only use qwt-qt5.\r\n\r\nPerhaps this is only Ubuntu-related, and the name `qwt` is used on other platforms.  In that case it would be nice to detect somehow if the selected library is Qt4 or Qt5, because the condition where the program simply crashes before `main()` is very hard to understand.  It occurs for any program that links both libQt5Gui.so and libQtGui.so, which happens in gzclient if libqwt is selected instead of libqwt-qt5.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2619/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/radarsat1/gazebo:84632a1a6398%0D8d35d7d913a3?from_pullrequest_id=2619"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2619/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2619.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2619/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2619/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2619"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2619/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/radarsat1/gazebo:84632a1a6398%0D8d35d7d913a3?from_pullrequest_id=2619"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2619/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2619/statuses_page=1.json"}}, "title": "Remove plain 'qwt' leaving only 'qwt-qt5', since it links to Qt4 version.", "close_source_branch": false, "reviewers": [], "id": 2619, "destination": {"commit": {"hash": "8d35d7d913a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8d35d7d913a3.json"}, "html": {"href": "#!/osrf/gazebo/commits/8d35d7d913a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-01-24T17:55:38.505287+00:00", "summary": {"raw": "Fixes a segfault on start-up if the wrong qwt was selected.\r\n\r\nI updated my local checkout yesterday and compiled Gazebo 8 prior to release to get a preview, but gzclient promptly segfaulted.  This was hard to debug as the segfault occurred before `main()`.  After a lot of head-scratching and recompiling in debug mode, I finally realized it was linking to both Qt4 and Qt5 on my Xenial machine.\r\n\r\nIt turned out the reason it did so was because it automatically selected `libqwt.so.6.1.2`, since I had failed to notice the need for installing package `libqwt-qt5-dev`.  Installing this and re-running cmake (with cleared cache !) fixed the problem.  However, if Gazebo is switching unconditionally to Qt5 for this release, I'd recommend changing `SearchForStuff.cmake` to only use qwt-qt5.\r\n\r\nPerhaps this is only Ubuntu-related, and the name `qwt` is used on other platforms.  In that case it would be nice to detect somehow if the selected library is Qt4 or Qt5, because the condition where the program simply crashes before `main()` is very hard to understand.  It occurs for any program that links both libQt5Gui.so and libQtGui.so, which happens in gzclient if libqwt is selected instead of libqwt-qt5.", "markup": "markdown", "html": "<p>Fixes a segfault on start-up if the wrong qwt was selected.</p>\n<p>I updated my local checkout yesterday and compiled Gazebo 8 prior to release to get a preview, but gzclient promptly segfaulted.  This was hard to debug as the segfault occurred before <code>main()</code>.  After a lot of head-scratching and recompiling in debug mode, I finally realized it was linking to both Qt4 and Qt5 on my Xenial machine.</p>\n<p>It turned out the reason it did so was because it automatically selected <code>libqwt.so.6.1.2</code>, since I had failed to notice the need for installing package <code>libqwt-qt5-dev</code>.  Installing this and re-running cmake (with cleared cache !) fixed the problem.  However, if Gazebo is switching unconditionally to Qt5 for this release, I'd recommend changing <code>SearchForStuff.cmake</code> to only use qwt-qt5.</p>\n<p>Perhaps this is only Ubuntu-related, and the name <code>qwt</code> is used on other platforms.  In that case it would be nice to detect somehow if the selected library is Qt4 or Qt5, because the condition where the program simply crashes before <code>main()</code> is very hard to understand.  It occurs for any program that links both libQt5Gui.so and libQtGui.so, which happens in gzclient if libqwt is selected instead of libqwt-qt5.</p>", "type": "rendered"}, "source": {"commit": {"hash": "84632a1a6398", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/radarsat1/gazebo/commit/84632a1a6398"}, "html": {"href": "https://bitbucket.org/radarsat1/gazebo/commits/84632a1a6398"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/radarsat1/gazebo"}, "html": {"href": "https://bitbucket.org/radarsat1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7d46b7e6-3f98-4e7d-a49d-f4fd60e8b76f}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "radarsat1/gazebo", "uuid": "{7d46b7e6-3f98-4e7d-a49d-f4fd60e8b76f}"}, "branch": {"name": "default"}}, "comment_count": 3, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-01-24T23:55:13.489780+00:00", "type": "participant", "approved": false, "user": {"display_name": "Stephen Sinclair", "uuid": "{fdfe8af1-20be-4213-929c-76ca03a98c9e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfdfe8af1-20be-4213-929c-76ca03a98c9e%7D"}, "html": {"href": "https://bitbucket.org/%7Bfdfe8af1-20be-4213-929c-76ca03a98c9e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7c7c3cf7a6e43916a9c03ffdd1d77e58d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSS-0.png"}}, "nickname": "radarsat1", "type": "user", "account_id": "557058:09fe48b3-cecf-4ae6-a621-12965234c939"}}, {"role": "PARTICIPANT", "participated_on": "2017-01-25T00:22:48.091769+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "Replacing with pull request #2623", "updated_on": "2017-01-25T17:14:02.505557+00:00", "author": {"display_name": "Stephen Sinclair", "uuid": "{fdfe8af1-20be-4213-929c-76ca03a98c9e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfdfe8af1-20be-4213-929c-76ca03a98c9e%7D"}, "html": {"href": "https://bitbucket.org/%7Bfdfe8af1-20be-4213-929c-76ca03a98c9e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7c7c3cf7a6e43916a9c03ffdd1d77e58d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSS-0.png"}}, "nickname": "radarsat1", "type": "user", "account_id": "557058:09fe48b3-cecf-4ae6-a621-12965234c939"}, "merge_commit": null, "closed_by": {"display_name": "Stephen Sinclair", "uuid": "{fdfe8af1-20be-4213-929c-76ca03a98c9e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfdfe8af1-20be-4213-929c-76ca03a98c9e%7D"}, "html": {"href": "https://bitbucket.org/%7Bfdfe8af1-20be-4213-929c-76ca03a98c9e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7c7c3cf7a6e43916a9c03ffdd1d77e58d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSS-0.png"}}, "nickname": "radarsat1", "type": "user", "account_id": "557058:09fe48b3-cecf-4ae6-a621-12965234c939"}}