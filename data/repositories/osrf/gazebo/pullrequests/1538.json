{"rendered": {"description": {"raw": "gtest provides a [RecordProperty](https://code.google.com/p/googletest/wiki/V1_6_AdvancedGuide#Logging_Additional_Information) function for logging `int`'s and `std::string`'s to the junit xml file created when running `make test` (when running individual tests manually, you need to supply the [--gtest_output:xml](#!/osrf/gazebo/src/968df3ac24e90b761e3da6bce44b24f49a9e2ff6/cmake/GazeboTestUtils.cmake#cl-44) flag to generate the xml file). This PR provides additional helper functions for recording `double`, `SignalStats`, and `Vector3Stats` types to these xml files. I've also updated a few tests with Record statements to illustrate how it can be used.\r\n\r\nI put the new functions in a separate file called `ServerFixtureRecord.cc` since `ServerFixture.cc` is huge. I also provided a ruby tool `junit_to_csv.rb` for converting the junit xml files to csv so they can easily be viewed in a spreadsheet program. ( @\\_jrivero_ should I remove the `.rb` suffix from that tool?)", "markup": "markdown", "html": "<p>gtest provides a <a data-is-external-link=\"true\" href=\"https://code.google.com/p/googletest/wiki/V1_6_AdvancedGuide#Logging_Additional_Information\" rel=\"nofollow\">RecordProperty</a> function for logging <code>int</code>'s and <code>std::string</code>'s to the junit xml file created when running <code>make test</code> (when running individual tests manually, you need to supply the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/968df3ac24e90b761e3da6bce44b24f49a9e2ff6/cmake/GazeboTestUtils.cmake#cl-44\" rel=\"nofollow\">--gtest_output:xml</a> flag to generate the xml file). This PR provides additional helper functions for recording <code>double</code>, <code>SignalStats</code>, and <code>Vector3Stats</code> types to these xml files. I've also updated a few tests with Record statements to illustrate how it can be used.</p>\n<p>I put the new functions in a separate file called <code>ServerFixtureRecord.cc</code> since <code>ServerFixture.cc</code> is huge. I also provided a ruby tool <code>junit_to_csv.rb</code> for converting the junit xml files to csv so they can easily be viewed in a spreadsheet program. ( @_jrivero_ should I remove the <code>.rb</code> suffix from that tool?)</p>", "type": "rendered"}, "title": {"raw": "Add helper functions to ServerFixture for recording data", "markup": "markdown", "html": "<p>Add helper functions to ServerFixture for recording data</p>", "type": "rendered"}}, "type": "pullrequest", "description": "gtest provides a [RecordProperty](https://code.google.com/p/googletest/wiki/V1_6_AdvancedGuide#Logging_Additional_Information) function for logging `int`'s and `std::string`'s to the junit xml file created when running `make test` (when running individual tests manually, you need to supply the [--gtest_output:xml](#!/osrf/gazebo/src/968df3ac24e90b761e3da6bce44b24f49a9e2ff6/cmake/GazeboTestUtils.cmake#cl-44) flag to generate the xml file). This PR provides additional helper functions for recording `double`, `SignalStats`, and `Vector3Stats` types to these xml files. I've also updated a few tests with Record statements to illustrate how it can be used.\r\n\r\nI put the new functions in a separate file called `ServerFixtureRecord.cc` since `ServerFixture.cc` is huge. I also provided a ruby tool `junit_to_csv.rb` for converting the junit xml files to csv so they can easily be viewed in a spreadsheet program. ( @\\_jrivero_ should I remove the `.rb` suffix from that tool?)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1538/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:ff32af7161e7%0D8d92ec96a040?from_pullrequest_id=1538"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1538/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1538.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1538/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1538/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1538"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1538/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:ff32af7161e7%0D8d92ec96a040?from_pullrequest_id=1538"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1538/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1538/statuses_page=1.json"}}, "title": "Add helper functions to ServerFixture for recording data", "close_source_branch": true, "reviewers": [], "id": 1538, "destination": {"commit": {"hash": "8d92ec96a040", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8d92ec96a040.json"}, "html": {"href": "#!/osrf/gazebo/commits/8d92ec96a040"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "created_on": "2015-03-20T18:58:57.528495+00:00", "summary": {"raw": "gtest provides a [RecordProperty](https://code.google.com/p/googletest/wiki/V1_6_AdvancedGuide#Logging_Additional_Information) function for logging `int`'s and `std::string`'s to the junit xml file created when running `make test` (when running individual tests manually, you need to supply the [--gtest_output:xml](#!/osrf/gazebo/src/968df3ac24e90b761e3da6bce44b24f49a9e2ff6/cmake/GazeboTestUtils.cmake#cl-44) flag to generate the xml file). This PR provides additional helper functions for recording `double`, `SignalStats`, and `Vector3Stats` types to these xml files. I've also updated a few tests with Record statements to illustrate how it can be used.\r\n\r\nI put the new functions in a separate file called `ServerFixtureRecord.cc` since `ServerFixture.cc` is huge. I also provided a ruby tool `junit_to_csv.rb` for converting the junit xml files to csv so they can easily be viewed in a spreadsheet program. ( @\\_jrivero_ should I remove the `.rb` suffix from that tool?)", "markup": "markdown", "html": "<p>gtest provides a <a data-is-external-link=\"true\" href=\"https://code.google.com/p/googletest/wiki/V1_6_AdvancedGuide#Logging_Additional_Information\" rel=\"nofollow\">RecordProperty</a> function for logging <code>int</code>'s and <code>std::string</code>'s to the junit xml file created when running <code>make test</code> (when running individual tests manually, you need to supply the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/968df3ac24e90b761e3da6bce44b24f49a9e2ff6/cmake/GazeboTestUtils.cmake#cl-44\" rel=\"nofollow\">--gtest_output:xml</a> flag to generate the xml file). This PR provides additional helper functions for recording <code>double</code>, <code>SignalStats</code>, and <code>Vector3Stats</code> types to these xml files. I've also updated a few tests with Record statements to illustrate how it can be used.</p>\n<p>I put the new functions in a separate file called <code>ServerFixtureRecord.cc</code> since <code>ServerFixture.cc</code> is huge. I also provided a ruby tool <code>junit_to_csv.rb</code> for converting the junit xml files to csv so they can easily be viewed in a spreadsheet program. ( @_jrivero_ should I remove the <code>.rb</code> suffix from that tool?)</p>", "type": "rendered"}, "source": {"commit": {"hash": "9275a854fc18", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9275a854fc18.json"}, "html": {"href": "#!/osrf/gazebo/commits/9275a854fc18"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "server_fixture_record"}}, "comment_count": 42, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-04-20T23:58:38.022201+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2015-04-21T00:45:41.859220+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2015-04-22T23:07:44.953226+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2015-04-20T17:15:02.176929+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2015-04-22T23:36:28.670549+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "ff32af7161e7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ff32af7161e7.json"}, "html": {"href": "#!/osrf/gazebo/commits/ff32af7161e7"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}