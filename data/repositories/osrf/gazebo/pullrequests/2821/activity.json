{"pagelen": 50, "values": [{"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "787750b27b75", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/787750b27b75.json"}, "html": {"href": "#!/osrf/gazebo/commits/787750b27b75"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "3ed08eb5ea9d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ed08eb5ea9d.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ed08eb5ea9d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-26T16:14:46.575365+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "787750b27b75", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/787750b27b75.json"}, "html": {"href": "#!/osrf/gazebo/commits/787750b27b75"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "3ed08eb5ea9d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ed08eb5ea9d.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ed08eb5ea9d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-26T16:08:50.791034+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "787750b27b75", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/787750b27b75.json"}, "html": {"href": "#!/osrf/gazebo/commits/787750b27b75"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "3ed08eb5ea9d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3ed08eb5ea9d.json"}, "html": {"href": "#!/osrf/gazebo/commits/3ed08eb5ea9d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-26T16:08:37.470274+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"approval": {"date": "2018-03-24T00:54:57.333542+00:00", "pullrequest": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/comments/59775088.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821/_/diff#comment-59775088"}}, "parent": {"id": 59770334, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/comments/59770334.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821/_/diff#comment-59770334"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}, "content": {"raw": "good idea: c0ed9c059289", "markup": "markdown", "html": "<p>good idea: <a href=\"#!/osrf/gazebo/commits/c0ed9c059289\" rel=\"nofollow\" class=\"ap-connect-link\">c0ed9c059289</a></p>", "type": "rendered"}, "created_on": "2018-03-24T00:15:59.593326+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2018-03-24T00:15:59.596536+00:00", "type": "pullrequest_comment", "id": 59775088}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "08cac3d6158e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/08cac3d6158e.json"}, "html": {"href": "#!/osrf/gazebo/commits/08cac3d6158e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "c0ed9c059289", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c0ed9c059289.json"}, "html": {"href": "#!/osrf/gazebo/commits/c0ed9c059289"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-24T00:13:36.548348+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "08cac3d6158e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/08cac3d6158e.json"}, "html": {"href": "#!/osrf/gazebo/commits/08cac3d6158e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "5f0e59948012", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f0e59948012.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f0e59948012"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-23T21:56:27.267931+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "08cac3d6158e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/08cac3d6158e.json"}, "html": {"href": "#!/osrf/gazebo/commits/08cac3d6158e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "5f0e59948012", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5f0e59948012.json"}, "html": {"href": "#!/osrf/gazebo/commits/5f0e59948012"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-23T21:56:13.816974+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/comments/59770334.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821/_/diff#comment-59770334"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}, "content": {"raw": "I'm not sure how much we care, but since this is a diagnostic tool, optimizations might be relevant.\n\nWe can significantly reduce the map lookup overhead of this function by doing:\n\n```\nconst auto inserted = this->dataPtr->stats.insert(std::make_pair(_name, ignition::math::SignalStats()));\nconst auto &iter = inserted.first;\n\nif (inserted.second)\n{\n  iter->second.InsertStatistics(\"mean,maxAbs,min,var\");\n}\n\niter->second.InsertData(_time.Double());\n```\n\nThis would turn 3 map lookups into 1 map lookup. The semantics of the `insert(~)` function is to (1) insert a new entry with the given (key, value) pair if an entry does not already exist for that key, and then (2) return an iterator to the entry at that key, whether or not the entry existed before `insert(~)` was called. It returns a `std::pair<iterator, bool>` where the `bool` is true when an entry was actually inserted; if an entry already existed, then it's false.", "markup": "markdown", "html": "<p>I'm not sure how much we care, but since this is a diagnostic tool, optimizations might be relevant.</p>\n<p>We can significantly reduce the map lookup overhead of this function by doing:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">const</span> <span class=\"nt\">auto</span> <span class=\"nt\">inserted</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">dataPtr-</span><span class=\"o\">&gt;</span><span class=\"nt\">stats</span><span class=\"p\">.</span><span class=\"nc\">insert</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">make_pair</span><span class=\"o\">(</span><span class=\"nt\">_name</span><span class=\"o\">,</span> <span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">math</span><span class=\"p\">::</span><span class=\"nd\">SignalStats</span><span class=\"o\">()));</span>\n<span class=\"nt\">const</span> <span class=\"nt\">auto</span> <span class=\"o\">&amp;</span><span class=\"nt\">iter</span> <span class=\"o\">=</span> <span class=\"nt\">inserted</span><span class=\"p\">.</span><span class=\"nc\">first</span><span class=\"o\">;</span>\n\n<span class=\"nt\">if</span> <span class=\"o\">(</span><span class=\"nt\">inserted</span><span class=\"p\">.</span><span class=\"nc\">second</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"err\">iter-&gt;second.InsertStatistics(&quot;mean,maxAbs,min,var&quot;)</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nt\">iter-</span><span class=\"o\">&gt;</span><span class=\"nt\">second</span><span class=\"p\">.</span><span class=\"nc\">InsertData</span><span class=\"o\">(</span><span class=\"nt\">_time</span><span class=\"p\">.</span><span class=\"nc\">Double</span><span class=\"o\">());</span>\n</pre></div>\n\n\n<p>This would turn 3 map lookups into 1 map lookup. The semantics of the <code>insert(~)</code> function is to (1) insert a new entry with the given (key, value) pair if an entry does not already exist for that key, and then (2) return an iterator to the entry at that key, whether or not the entry existed before <code>insert(~)</code> was called. It returns a <code>std::pair&lt;iterator, bool&gt;</code> where the <code>bool</code> is true when an entry was actually inserted; if an entry already existed, then it's false.</p>", "type": "rendered"}, "created_on": "2018-03-23T21:46:58.283987+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2018-03-23T21:46:58.288093+00:00", "type": "pullrequest_comment", "id": 59770334}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "08cac3d6158e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/08cac3d6158e.json"}, "html": {"href": "#!/osrf/gazebo/commits/08cac3d6158e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "1c00adf9350c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1c00adf9350c.json"}, "html": {"href": "#!/osrf/gazebo/commits/1c00adf9350c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Tully Foote", "uuid": "{3d90dbd4-b845-466f-b5bd-068566f7ff50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D"}, "html": {"href": "https://bitbucket.org/%7B3d90dbd4-b845-466f-b5bd-068566f7ff50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3bc6528f8fe1fef6b6ecc7312ee0cf04d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTF-2.png"}}, "nickname": "Tully Foote", "type": "user", "account_id": "557058:e2bf789f-2138-4a4e-ba39-3d618078e20b"}, "date": "2018-03-21T20:13:51.448514+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821/comments/58609173.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821/_/diff#comment-58609173"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}, "content": {"raw": "Started another run of CI. Pending CI results this looks good to me.", "markup": "markdown", "html": "<p>Started another run of CI. Pending CI results this looks good to me.</p>", "type": "rendered"}, "created_on": "2018-03-12T23:43:41.920509+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2018-03-12T23:44:03.021711+00:00", "type": "pullrequest_comment", "id": 58609173}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"approval": {"date": "2018-03-12T23:43:45.216988+00:00", "pullrequest": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "15da12a26543", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/15da12a26543.json"}, "html": {"href": "#!/osrf/gazebo/commits/15da12a26543"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "1c00adf9350c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1c00adf9350c.json"}, "html": {"href": "#!/osrf/gazebo/commits/1c00adf9350c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-03-12T23:40:05.330235+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "15da12a26543", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/15da12a26543.json"}, "html": {"href": "#!/osrf/gazebo/commits/15da12a26543"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "bfa3a3049497", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bfa3a3049497.json"}, "html": {"href": "#!/osrf/gazebo/commits/bfa3a3049497"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-03-12T22:45:43.620721+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "54c97dc957c1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54c97dc957c1.json"}, "html": {"href": "#!/osrf/gazebo/commits/54c97dc957c1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "592f4e724eaf", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/592f4e724eaf.json"}, "html": {"href": "#!/osrf/gazebo/commits/592f4e724eaf"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-02-09T21:20:13.352574+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "54c97dc957c1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54c97dc957c1.json"}, "html": {"href": "#!/osrf/gazebo/commits/54c97dc957c1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "592f4e724eaf", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/592f4e724eaf.json"}, "html": {"href": "#!/osrf/gazebo/commits/592f4e724eaf"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-02-09T19:33:44.932417+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "6ccd95f36768", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6ccd95f36768.json"}, "html": {"href": "#!/osrf/gazebo/commits/6ccd95f36768"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "b52ee672d093", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b52ee672d093.json"}, "html": {"href": "#!/osrf/gazebo/commits/b52ee672d093"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-02-09T09:26:32.368066+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "2edc47c80ad0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2edc47c80ad0.json"}, "html": {"href": "#!/osrf/gazebo/commits/2edc47c80ad0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "77a88becceb8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/77a88becceb8.json"}, "html": {"href": "#!/osrf/gazebo/commits/77a88becceb8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-02-08T18:36:46.385932+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "2edc47c80ad0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2edc47c80ad0.json"}, "html": {"href": "#!/osrf/gazebo/commits/2edc47c80ad0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "77a88becceb8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/77a88becceb8.json"}, "html": {"href": "#!/osrf/gazebo/commits/77a88becceb8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-02-08T18:36:46.073167+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "afe088345718", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/afe088345718.json"}, "html": {"href": "#!/osrf/gazebo/commits/afe088345718"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "64f707866257", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/64f707866257.json"}, "html": {"href": "#!/osrf/gazebo/commits/64f707866257"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-10T21:25:08.676732+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "3517e5b44f71", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3517e5b44f71.json"}, "html": {"href": "#!/osrf/gazebo/commits/3517e5b44f71"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "64f707866257", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/64f707866257.json"}, "html": {"href": "#!/osrf/gazebo/commits/64f707866257"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-01-06T05:20:14.917644+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "3517e5b44f71", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3517e5b44f71.json"}, "html": {"href": "#!/osrf/gazebo/commits/3517e5b44f71"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "64f707866257", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/64f707866257.json"}, "html": {"href": "#!/osrf/gazebo/commits/64f707866257"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-01-06T05:17:53.412423+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "08425e711a19", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/08425e711a19.json"}, "html": {"href": "#!/osrf/gazebo/commits/08425e711a19"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "d4fc85f147b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d4fc85f147b7.json"}, "html": {"href": "#!/osrf/gazebo/commits/d4fc85f147b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-12-08T18:36:35.853115+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}, {"update": {"description": "The diagnostics class is useful for profiling performance, but it currently produces unwieldy results, storing every single measured timestamp, which can rapidly fill up a hard disk. This pull request reduces the output to a single set of statistics (mean,maxAbs,min,var) for each diagnostic timer. For the standalone diagnostics example added in pull request #2798, the output before and after this change is shown below:\r\n\r\n~~~\r\nexample_world_stats 1512756096 973857946 3.21399\r\nexample_world_stats 1512756101 406463508 0.186995\r\nexample_world_stats 1512756101 606837814 0.387225\r\nexample_world_stats 1512756101 806248438 0.586562\r\nexample_world_stats 1512756102 7123061 0.78736\r\nexample_world_stats 1512756102 207537094 0.987699\r\nexample_world_stats 1512756102 408224670 1.18831\r\nexample_world_stats 1512756102 609667446 1.38965\r\nexample_world_stats 1512756102 809784876 1.58968\r\nexample_world_stats 1512756103 9455910 1.78928\r\nexample_world_stats 1512756103 210297429 1.99005\r\nexample_world_stats 1512756103 411116818 2.19078\r\nexample_world_stats 1512756103 611458526 2.39103\r\nexample_world_stats 1512756103 812158760 2.59164\r\nexample_world_stats 1512756104 12679870 2.79206\r\nexample_world_stats 1512756104 213363247 2.99258\r\nexample_world_stats 1512756104 411278253 3.19042\r\n~~~\r\n\r\n\r\n~~~\r\nexample_world_stats                               maxAbs 3.378315e-01   mean   1.993582e-01   min    4.560322e-02   var    2.856048e-03\r\n~~~\r\n\r\nWhen running gazebo with diagnostics, the World::Step function generates a file like the following:\r\n\r\n~~~\r\nWorld::Step                                       maxAbs 1.314529e-02   mean   1.129744e-03   min    6.468520e-04   var    1.535725e-07   \r\nWorld::Step::update                               maxAbs 5.810080e-03   mean   1.004007e-03   min    5.608360e-04   var    1.335817e-07   \r\nWorld::Step::sleepOffset                          maxAbs 1.137450e-04   mean   3.540239e-06   min    2.226000e-06   var    3.713906e-12   \r\nWorld::Step::publishWorldStats                    maxAbs 1.002800e-04   mean   2.088615e-06   min    1.298000e-06   var    2.043211e-12   \r\nWorld::Step::worldUpdateMutex                     maxAbs 1.211710e-04   mean   4.505201e-06   min    2.849000e-06   var    5.059674e-12   \r\nWorld::Step::loadPlugins                          maxAbs 3.646100e-05   mean   4.860536e-07   min    2.790000e-07   var    2.757852e-13   \r\n~~~\r\n\r\nThis also changes from continuous streaming to writing statistics when gazebo is shutdown. This reduces the I/O impact from diagnostics, but at some risk of the diagnostics output being lost if gazebo fails without shutting down properly.", "title": "Diagnostics: record timing statistics instead of all timestamps", "destination": {"commit": {"hash": "08425e711a19", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/08425e711a19.json"}, "html": {"href": "#!/osrf/gazebo/commits/08425e711a19"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "d4fc85f147b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d4fc85f147b7.json"}, "html": {"href": "#!/osrf/gazebo/commits/d4fc85f147b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_stats_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-12-08T18:36:35.814315+00:00"}, "pull_request": {"type": "pullrequest", "id": 2821, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2821.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2821"}}, "title": "Diagnostics: record timing statistics instead of all timestamps"}}]}