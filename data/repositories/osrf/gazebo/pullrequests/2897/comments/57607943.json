{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2897/comments/57607943.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2897/_/diff#comment-57607943"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2897, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2897.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2897"}}, "title": "Fixing the Node::Init() race condition by providing an alternative Node init function"}, "content": {"raw": "`Node::WaitForInit` looks like an alternative to `Node::Init`. Should we call it `InitWithWait` instead to emphasize that they are similar calls?\n\nAlso, it would be nice if they could share more code, perhaps by calling a private function that accepts both `std::string` and `common::Time` arguments and contains all the logic. Currently `Init` checks if the node is already initialized, but `WaitForInit` doesn't check that.", "markup": "markdown", "html": "<p><code>Node::WaitForInit</code> looks like an alternative to <code>Node::Init</code>. Should we call it <code>InitWithWait</code> instead to emphasize that they are similar calls?</p>\n<p>Also, it would be nice if they could share more code, perhaps by calling a private function that accepts both <code>std::string</code> and <code>common::Time</code> arguments and contains all the logic. Currently <code>Init</code> checks if the node is already initialized, but <code>WaitForInit</code> doesn't check that.</p>", "type": "rendered"}, "created_on": "2018-02-28T21:59:15.786951+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-02-28T21:59:15.790587+00:00", "type": "pullrequest_comment", "id": 57607943}