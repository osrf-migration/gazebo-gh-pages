{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2897/comments/57622623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2897/_/diff#comment-57622623"}}, "parent": {"id": 57615276, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2897/comments/57615276.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2897/_/diff#comment-57615276"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2897, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2897.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2897"}}, "title": "Fixing the Node::Init() race condition by providing an alternative Node init function"}, "content": {"raw": "b9adeea adds a test for `TryInit()`.\n\nI think we're somewhat limited in our ability to comprehensively test `TryInit()` unless someone knows a way to isolate the namespace discovery within a test from nodes that may be running outside of the test.", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/commits/b9adeea\" rel=\"nofollow\" class=\"ap-connect-link\">b9adeea</a> adds a test for <code>TryInit()</code>.</p>\n<p>I think we're somewhat limited in our ability to comprehensively test <code>TryInit()</code> unless someone knows a way to isolate the namespace discovery within a test from nodes that may be running outside of the test.</p>", "type": "rendered"}, "created_on": "2018-03-01T02:34:38.825648+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-01T02:34:38.828714+00:00", "type": "pullrequest_comment", "id": 57622623}