{"rendered": {"description": {"raw": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/): no unexpected failures", "markup": "markdown", "html": "<p>This was initially submitted as <a href=\"#!/osrf/gazebo/pull-requests/1206/add-joint-friction-for-ode-revolute\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1206</a> to resolve issue <a href=\"#!/osrf/gazebo/issues/381/ode-joints-dont-support-friction-parameter\" rel=\"nofollow\" title=\"ODE Joints don&#39;t support friction parameter\" class=\"ap-connect-link\"><s>#381</s></a>. It was declined so that the <code>ODEJoint::SetVelocity</code> implementation could be modified (<a href=\"#!/osrf/gazebo/pull-requests/1218/change-behavior-of-odejoint-setvelocity\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1218</a>). Here's the description from <a href=\"#!/osrf/gazebo/pull-requests/1206/add-joint-friction-for-ode-revolute\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1206</a>:</p>\n<p>This pull request uses the <code>&lt;axis&gt;&lt;dynamics&gt;&lt;friction&gt;</code> tag to implement Coulomb joint friction (see Fig 1 in\n<a data-is-external-link=\"true\" href=\"http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf\" rel=\"nofollow\">this paper</a>, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see <a href=\"#!/osrf/gazebo/issues/381/ode-joints-dont-support-friction-parameter\" rel=\"nofollow\" title=\"ODE Joints don&#39;t support friction parameter\" class=\"ap-connect-link\"><s>#381</s></a> for further discussion).</p>\n<p>I've added a section to the <code>INTEGRATION_joint_spawn</code> test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: <code>worlds/joint_friction_demo.world</code> (note that it is generated from an embedded ruby template with suffix <code>.rworld</code>). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.</p>\n<p>I should be able to get bullet to work in a similar manner. I will address this in a future pull request.</p>\n<p>Assorted comments:</p>\n<ul>\n<li>I moved the sdf parameter loading from ODEJoint::Load to the parent class.</li>\n<li>I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).</li>\n</ul>\n<p>jenkins</p>\n<ul>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/\" rel=\"nofollow\">no unexpected test failures in jenkins</a></p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/\" rel=\"nofollow\">newer build as of 627cfcc</a></p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/\" rel=\"nofollow\">final jenkins build</a>: no unexpected failures</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Implement Coulomb joint friction for ODE (#381)", "markup": "markdown", "html": "<p>Implement Coulomb joint friction for ODE (<a href=\"#!/osrf/gazebo/issues/381/ode-joints-dont-support-friction-parameter\" rel=\"nofollow\" title=\"ODE Joints don&#39;t support friction parameter\" class=\"ap-connect-link\"><s>#381</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/): no unexpected failures", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1221/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:bc1ddce6d7b8%0D98d392eeb1b3?from_pullrequest_id=1221"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1221/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:bc1ddce6d7b8%0D98d392eeb1b3?from_pullrequest_id=1221"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1221/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/statuses_page=1.json"}}, "title": "Implement Coulomb joint friction for ODE (#381)", "close_source_branch": true, "reviewers": [], "id": 1221, "destination": {"commit": {"hash": "98d392eeb1b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/98d392eeb1b3.json"}, "html": {"href": "#!/osrf/gazebo/commits/98d392eeb1b3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2014-10-11T01:05:17.139391+00:00", "summary": {"raw": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/): no unexpected failures", "markup": "markdown", "html": "<p>This was initially submitted as <a href=\"#!/osrf/gazebo/pull-requests/1206/add-joint-friction-for-ode-revolute\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1206</a> to resolve issue <a href=\"#!/osrf/gazebo/issues/381/ode-joints-dont-support-friction-parameter\" rel=\"nofollow\" title=\"ODE Joints don&#39;t support friction parameter\" class=\"ap-connect-link\"><s>#381</s></a>. It was declined so that the <code>ODEJoint::SetVelocity</code> implementation could be modified (<a href=\"#!/osrf/gazebo/pull-requests/1218/change-behavior-of-odejoint-setvelocity\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1218</a>). Here's the description from <a href=\"#!/osrf/gazebo/pull-requests/1206/add-joint-friction-for-ode-revolute\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1206</a>:</p>\n<p>This pull request uses the <code>&lt;axis&gt;&lt;dynamics&gt;&lt;friction&gt;</code> tag to implement Coulomb joint friction (see Fig 1 in\n<a data-is-external-link=\"true\" href=\"http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf\" rel=\"nofollow\">this paper</a>, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see <a href=\"#!/osrf/gazebo/issues/381/ode-joints-dont-support-friction-parameter\" rel=\"nofollow\" title=\"ODE Joints don&#39;t support friction parameter\" class=\"ap-connect-link\"><s>#381</s></a> for further discussion).</p>\n<p>I've added a section to the <code>INTEGRATION_joint_spawn</code> test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: <code>worlds/joint_friction_demo.world</code> (note that it is generated from an embedded ruby template with suffix <code>.rworld</code>). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.</p>\n<p>I should be able to get bullet to work in a similar manner. I will address this in a future pull request.</p>\n<p>Assorted comments:</p>\n<ul>\n<li>I moved the sdf parameter loading from ODEJoint::Load to the parent class.</li>\n<li>I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).</li>\n</ul>\n<p>jenkins</p>\n<ul>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/\" rel=\"nofollow\">no unexpected test failures in jenkins</a></p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/\" rel=\"nofollow\">newer build as of 627cfcc</a></p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/\" rel=\"nofollow\">final jenkins build</a>: no unexpected failures</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f50b933abe3d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f50b933abe3d.json"}, "html": {"href": "#!/osrf/gazebo/commits/f50b933abe3d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-10-30T00:13:36.470853+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-11-03T21:29:32.755882+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-20T22:31:40.868977+00:00", "type": "participant", "approved": true, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}], "reason": "", "updated_on": "2014-11-03T21:30:00.813364+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "bc1ddce6d7b8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bc1ddce6d7b8.json"}, "html": {"href": "#!/osrf/gazebo/commits/bc1ddce6d7b8"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}