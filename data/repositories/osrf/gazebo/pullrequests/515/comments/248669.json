{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/515/comments/248669.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/515/_/diff#comment-248669"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 515, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/515.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/515"}}, "title": "Logging speed improvement: add zlib option for compression (fix #682)"}, "content": {"raw": "I just tried a quick stress test and it's working for me\n\n\n\n```\n#!c++\n\n  gazebo::util::LogRecord *recorder = gazebo::util::LogRecord::Instance();\n  for (int j = 0; j < 100; ++j)\n  {\n    EXPECT_TRUE(recorder->Init(\"test\"));\n    EXPECT_TRUE(recorder->Start(\"zlib\"));\n    recorder->Stop();\n    int i = 0;\n    while (!recorder->IsReadyToStart())\n    {\n      gazebo::common::Time::MSleep(100);\n      if ((++i % 50) == 0)\n        gzdbg << \"Waiting for recorder->IsReadyToStart()\" << std::endl;\n    }\n  }\n```", "markup": "markdown", "html": "<p>I just tried a quick stress test and it's working for me</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">util</span><span class=\"o\">::</span><span class=\"n\">LogRecord</span> <span class=\"o\">*</span><span class=\"n\">recorder</span> <span class=\"o\">=</span> <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">util</span><span class=\"o\">::</span><span class=\"n\">LogRecord</span><span class=\"o\">::</span><span class=\"n\">Instance</span><span class=\"p\">();</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">j</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">EXPECT_TRUE</span><span class=\"p\">(</span><span class=\"n\">recorder</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">(</span><span class=\"s\">&quot;test&quot;</span><span class=\"p\">));</span>\n    <span class=\"n\">EXPECT_TRUE</span><span class=\"p\">(</span><span class=\"n\">recorder</span><span class=\"o\">-&gt;</span><span class=\"n\">Start</span><span class=\"p\">(</span><span class=\"s\">&quot;zlib&quot;</span><span class=\"p\">));</span>\n    <span class=\"n\">recorder</span><span class=\"o\">-&gt;</span><span class=\"n\">Stop</span><span class=\"p\">();</span>\n    <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">recorder</span><span class=\"o\">-&gt;</span><span class=\"n\">IsReadyToStart</span><span class=\"p\">())</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">MSleep</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">);</span>\n      <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"o\">++</span><span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">gzdbg</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Waiting for recorder-&gt;IsReadyToStart()&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-05-13T17:47:10.533994+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2013-05-13T17:47:10.545192+00:00", "type": "pullrequest_comment", "id": 248669}