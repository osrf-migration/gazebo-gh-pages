{"rendered": {"description": {"raw": "This seems to fix a crash in ARIAC 2019 [https://bitbucket.org/osrf/ariac/issues/160/](https://bitbucket.org/osrf/ariac/issues/160/) .\r\n\r\nThe traceback for the crash goes deep inside `std::map::operator[]()` at [this line](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/transport/TopicManager.cc#lines-238) in `TopicManager::Subscribe()`. This map operation [isn\u2019t thread safe](https://en.cppreference.com/w/cpp/container#Thread_safety), and the [ROSLaserPlugin creates gazebo transport subscribers in a separate thread](https://bitbucket.org/osrf/ariac/src/18dd570b99e614ea5737ca38b2f8048a2c312c74/osrf_gear/src/ROSLaserPlugin.cc#lines-118:119). The `TopicManager` appears to have a member `subscriberMutex` for protecting the map `subscriberNodes`, but it is not locked in `TopicManager::Subscribe()`. This PR makes sure `subscriberMutex` is locked anywhere `subscriberNodes` is used. I tested by restarting ARIAC 20 times with and without this change. Without this change it crashed 3/20 times, and with this change it did not crash at all.", "markup": "markdown", "html": "<p>This seems to fix a crash in ARIAC 2019 <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/issues/160/\" rel=\"nofollow\">https://bitbucket.org/osrf/ariac/issues/160/</a> .</p>\n<p>The traceback for the crash goes deep inside <code>std::map::operator[]()</code> at <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/transport/TopicManager.cc#lines-238\" rel=\"nofollow\">this line</a> in <code>TopicManager::Subscribe()</code>. This map operation <a data-is-external-link=\"true\" href=\"https://en.cppreference.com/w/cpp/container#Thread_safety\" rel=\"nofollow\">isn\u2019t thread safe</a>, and the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/src/18dd570b99e614ea5737ca38b2f8048a2c312c74/osrf_gear/src/ROSLaserPlugin.cc#lines-118:119\" rel=\"nofollow\">ROSLaserPlugin creates gazebo transport subscribers in a separate thread</a>. The <code>TopicManager</code> appears to have a member <code>subscriberMutex</code> for protecting the map <code>subscriberNodes</code>, but it is not locked in <code>TopicManager::Subscribe()</code>. This PR makes sure <code>subscriberMutex</code> is locked anywhere <code>subscriberNodes</code> is used. I tested by restarting ARIAC 20 times with and without this change. Without this change it crashed 3/20 times, and with this change it did not crash at all.</p>", "type": "rendered"}, "title": {"raw": "Lock subscriberMutex anywhere subscribedNodes is used", "markup": "markdown", "html": "<p>Lock subscriberMutex anywhere subscribedNodes is used</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This seems to fix a crash in ARIAC 2019 [https://bitbucket.org/osrf/ariac/issues/160/](https://bitbucket.org/osrf/ariac/issues/160/) .\r\n\r\nThe traceback for the crash goes deep inside `std::map::operator[]()` at [this line](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/transport/TopicManager.cc#lines-238) in `TopicManager::Subscribe()`. This map operation [isn\u2019t thread safe](https://en.cppreference.com/w/cpp/container#Thread_safety), and the [ROSLaserPlugin creates gazebo transport subscribers in a separate thread](https://bitbucket.org/osrf/ariac/src/18dd570b99e614ea5737ca38b2f8048a2c312c74/osrf_gear/src/ROSLaserPlugin.cc#lines-118:119). The `TopicManager` appears to have a member `subscriberMutex` for protecting the map `subscriberNodes`, but it is not locked in `TopicManager::Subscribe()`. This PR makes sure `subscriberMutex` is locked anywhere `subscriberNodes` is used. I tested by restarting ARIAC 20 times with and without this change. Without this change it crashed 3/20 times, and with this change it did not crash at all.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3096/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:e7c99f1634db%0Da9a3fffb6194?from_pullrequest_id=3096"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/3096/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/3096.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/3096/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3096/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3096"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/3096/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:e7c99f1634db%0Da9a3fffb6194?from_pullrequest_id=3096"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3096/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/3096/statuses_page=1.json"}}, "title": "Lock subscriberMutex anywhere subscribedNodes is used", "close_source_branch": true, "reviewers": [], "id": 3096, "destination": {"commit": {"hash": "a9a3fffb6194", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a9a3fffb6194.json"}, "html": {"href": "#!/osrf/gazebo/commits/a9a3fffb6194"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "created_on": "2019-04-03T23:42:53.334701+00:00", "summary": {"raw": "This seems to fix a crash in ARIAC 2019 [https://bitbucket.org/osrf/ariac/issues/160/](https://bitbucket.org/osrf/ariac/issues/160/) .\r\n\r\nThe traceback for the crash goes deep inside `std::map::operator[]()` at [this line](#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/transport/TopicManager.cc#lines-238) in `TopicManager::Subscribe()`. This map operation [isn\u2019t thread safe](https://en.cppreference.com/w/cpp/container#Thread_safety), and the [ROSLaserPlugin creates gazebo transport subscribers in a separate thread](https://bitbucket.org/osrf/ariac/src/18dd570b99e614ea5737ca38b2f8048a2c312c74/osrf_gear/src/ROSLaserPlugin.cc#lines-118:119). The `TopicManager` appears to have a member `subscriberMutex` for protecting the map `subscriberNodes`, but it is not locked in `TopicManager::Subscribe()`. This PR makes sure `subscriberMutex` is locked anywhere `subscriberNodes` is used. I tested by restarting ARIAC 20 times with and without this change. Without this change it crashed 3/20 times, and with this change it did not crash at all.", "markup": "markdown", "html": "<p>This seems to fix a crash in ARIAC 2019 <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/issues/160/\" rel=\"nofollow\">https://bitbucket.org/osrf/ariac/issues/160/</a> .</p>\n<p>The traceback for the crash goes deep inside <code>std::map::operator[]()</code> at <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/676a14f7642c3516e6a779ac276e8898cd7d0f79/gazebo/transport/TopicManager.cc#lines-238\" rel=\"nofollow\">this line</a> in <code>TopicManager::Subscribe()</code>. This map operation <a data-is-external-link=\"true\" href=\"https://en.cppreference.com/w/cpp/container#Thread_safety\" rel=\"nofollow\">isn\u2019t thread safe</a>, and the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/src/18dd570b99e614ea5737ca38b2f8048a2c312c74/osrf_gear/src/ROSLaserPlugin.cc#lines-118:119\" rel=\"nofollow\">ROSLaserPlugin creates gazebo transport subscribers in a separate thread</a>. The <code>TopicManager</code> appears to have a member <code>subscriberMutex</code> for protecting the map <code>subscriberNodes</code>, but it is not locked in <code>TopicManager::Subscribe()</code>. This PR makes sure <code>subscriberMutex</code> is locked anywhere <code>subscriberNodes</code> is used. I tested by restarting ARIAC 20 times with and without this change. Without this change it crashed 3/20 times, and with this change it did not crash at all.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a1e08d58909a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a1e08d58909a.json"}, "html": {"href": "#!/osrf/gazebo/commits/a1e08d58909a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9_topic_manager_subscribe_race"}}, "comment_count": 13, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-07-08T21:34:13.698377+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2019-07-11T17:35:09.911911+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2019-07-10T20:47:34.358864+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2019-07-11T21:02:31.684061+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "e7c99f1634db", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e7c99f1634db.json"}, "html": {"href": "#!/osrf/gazebo/commits/e7c99f1634db"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}