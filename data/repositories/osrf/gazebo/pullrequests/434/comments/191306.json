{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/434/comments/191306.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/434/_/diff#comment-191306"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 434, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/434.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/434"}}, "title": "Allow world with a name other than \"default\". Fixed all tests."}, "content": {"raw": "I noted in the discussion of issue #623 that I was observing SIGABRT's when deleting models when I reduced the sleep time for the ConnectionManager (see #623 for backtraces). In some preliminary testing of this branch, I've managed to catch another one, though I had to insert and delete about 20 models before observing it, rather than 4-5. This time it's at Node::ProcessIncoming\n~~~\ngzserver: /usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp:26: boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*): Assertion `!pthread_mutex_lock(m)' failed.\n\nProgram received signal SIGABRT, Aborted.\n[Switching to Thread 0x7fffc1ffb700 (LWP 30125)]\n0x00007ffff5229425 in __GI_raise (sig=<optimized out>)\n    at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n64\t../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) bt\n#0  0x00007ffff5229425 in __GI_raise (sig=<optimized out>)\n    at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n#1  0x00007ffff522cb8b in __GI_abort () at abort.c:91\n#2  0x00007ffff52220ee in __assert_fail_base (fmt=<optimized out>, \n    assertion=0x43ca9d \"!pthread_mutex_lock(m)\", \n    file=0x43c5c0 \"/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp\", line=<optimized out>, function=<optimized out>) at assert.c:94\n#3  0x00007ffff5222192 in __GI___assert_fail (\n    assertion=0x43ca9d \"!pthread_mutex_lock(m)\", \n    file=0x43c5c0 \"/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp\", line=26, \n    function=0x43d4a0 \"boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)\") at assert.c:103\n#4  0x0000000000420d40 in boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock (m_=<optimized out>, this=<optimized out>)\n    at /usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp:26\n#5  0x000000000042c24a in pthread_mutex_scoped_lock (m_=0x7fff802936d0, \n    this=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp:26\n#6  lock (this=0x7fff802936d0)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:124\n#7  boost::unique_lock<boost::recursive_mutex>::lock (this=0x7fffc1ffab30)\n    at /usr/include/boost/thread/locks.hpp:412\n---Type <return> to continue, or q <return> to quit---\n#8  0x00007ffff761acb8 in unique_lock (m_=..., this=0x7fffc1ffab30)\n    at /usr/include/boost/thread/locks.hpp:290\n#9  gazebo::transport::Node::ProcessIncoming (this=0x7fff802935d0)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/Node.cc:160\n#10 0x00007ffff7625653 in gazebo::transport::TopicManager::ProcessNodes (\n    this=0x64bfe0, _onlyOut=false)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/TopicManager.cc:162\n#11 0x00007ffff76105c6 in gazebo::transport::ConnectionManager::RunUpdate (\n    this=0x64c120)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/ConnectionManager.cc:235\n#12 0x00007ffff7610920 in gazebo::transport::ConnectionManager::Run (\n    this=0x64c120)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/ConnectionManager.cc:264\n#13 0x00007ffff5f3dce9 in thread_proxy ()\n   from /usr/lib/libboost_thread.so.1.46.1\n#14 0x00007ffff6aa7e9a in start_thread (arg=0x7fffc1ffb700)\n    at pthread_create.c:308\n#15 0x00007ffff52e6cbd in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#16 0x0000000000000000 in ?? ()\n(gdb) \n~~~", "markup": "markdown", "html": "<p>I noted in the discussion of issue <a href=\"#!/osrf/gazebo/issues/623/connectionmanager-sleeps-for-30-ms-between\" rel=\"nofollow\" title=\"ConnectionManager sleeps for 30 ms between message updates\" class=\"ap-connect-link\"><s>#623</s></a> that I was observing SIGABRT's when deleting models when I reduced the sleep time for the ConnectionManager (see <a href=\"#!/osrf/gazebo/issues/623/connectionmanager-sleeps-for-30-ms-between\" rel=\"nofollow\" title=\"ConnectionManager sleeps for 30 ms between message updates\" class=\"ap-connect-link\"><s>#623</s></a> for backtraces). In some preliminary testing of this branch, I've managed to catch another one, though I had to insert and delete about 20 models before observing it, rather than 4-5. This time it's at Node::ProcessIncoming</p>\n<div class=\"codehilite\"><pre><span></span>gzserver: /usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp:26: boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*): Assertion `!pthread_mutex_lock(m)&#39; failed.\n\nProgram received signal SIGABRT, Aborted.\n[Switching to Thread 0x7fffc1ffb700 (LWP 30125)]\n0x00007ffff5229425 in __GI_raise (sig=&lt;optimized out&gt;)\n    at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n64  ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) bt\n#0  0x00007ffff5229425 in __GI_raise (sig=&lt;optimized out&gt;)\n    at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n#1  0x00007ffff522cb8b in __GI_abort () at abort.c:91\n#2  0x00007ffff52220ee in __assert_fail_base (fmt=&lt;optimized out&gt;, \n    assertion=0x43ca9d &quot;!pthread_mutex_lock(m)&quot;, \n    file=0x43c5c0 &quot;/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp&quot;, line=&lt;optimized out&gt;, function=&lt;optimized out&gt;) at assert.c:94\n#3  0x00007ffff5222192 in __GI___assert_fail (\n    assertion=0x43ca9d &quot;!pthread_mutex_lock(m)&quot;, \n    file=0x43c5c0 &quot;/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp&quot;, line=26, \n    function=0x43d4a0 &quot;boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)&quot;) at assert.c:103\n#4  0x0000000000420d40 in boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock (m_=&lt;optimized out&gt;, this=&lt;optimized out&gt;)\n    at /usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp:26\n#5  0x000000000042c24a in pthread_mutex_scoped_lock (m_=0x7fff802936d0, \n    this=&lt;synthetic pointer&gt;)\n    at /usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp:26\n#6  lock (this=0x7fff802936d0)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:124\n#7  boost::unique_lock&lt;boost::recursive_mutex&gt;::lock (this=0x7fffc1ffab30)\n    at /usr/include/boost/thread/locks.hpp:412\n---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---\n#8  0x00007ffff761acb8 in unique_lock (m_=..., this=0x7fffc1ffab30)\n    at /usr/include/boost/thread/locks.hpp:290\n#9  gazebo::transport::Node::ProcessIncoming (this=0x7fff802935d0)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/Node.cc:160\n#10 0x00007ffff7625653 in gazebo::transport::TopicManager::ProcessNodes (\n    this=0x64bfe0, _onlyOut=false)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/TopicManager.cc:162\n#11 0x00007ffff76105c6 in gazebo::transport::ConnectionManager::RunUpdate (\n    this=0x64c120)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/ConnectionManager.cc:235\n#12 0x00007ffff7610920 in gazebo::transport::ConnectionManager::Run (\n    this=0x64c120)\n    at /home/scpeters/osrf/gazebo_default/gazebo/transport/ConnectionManager.cc:264\n#13 0x00007ffff5f3dce9 in thread_proxy ()\n   from /usr/lib/libboost_thread.so.1.46.1\n#14 0x00007ffff6aa7e9a in start_thread (arg=0x7fffc1ffb700)\n    at pthread_create.c:308\n#15 0x00007ffff52e6cbd in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#16 0x0000000000000000 in ?? ()\n(gdb) \n</pre></div>", "type": "rendered"}, "created_on": "2013-04-09T23:54:58.289999+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-04-09T23:54:58.301325+00:00", "type": "pullrequest_comment", "id": 191306}