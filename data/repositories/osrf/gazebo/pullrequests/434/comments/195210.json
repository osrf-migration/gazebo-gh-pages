{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/434/comments/195210.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/434/_/diff#comment-195210"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 434, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/434.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/434"}}, "title": "Allow world with a name other than \"default\". Fixed all tests."}, "content": {"raw": "At this moment I think all current failing tests on Nvidia (both precise/quantal) are fixed are have a patch that could fix them.\n\nFor ATI we have a couple more failing (in the last two runs). For the first one it could hide a race condition problems if our ATI is the slowest machine/GPU around. The second one is related to render.\n\n**SensorManager_TEST.InitRemove**:\n\n```\n/var/lib/jenkins/workspace/gazebo-any-devel-precise-amd64-gpu-ati/gazebo/gazebo/sensors/SensorManager_TEST.cc:118\nExpected: (i) < (20), actual: 30 vs 20\n```\nrelated code:\n\n```\n#!c++\n\n\n  // Try removing a few senors.\n  for (sensors::Sensor_V::iterator iter = sensors.begin();\n       iter != sensors.end() && sensorCount > 10; ++iter)\n  {\n    mgr->RemoveSensor((*iter)->GetName());\n\n    --sensorCount;\n\n    int i = 0;\n\n    // Wait for a sensor manager update.\n    while (mgr->GetSensors().size() > sensorCount)\n    {\n      gazebo::common::Time::MSleep(100);\n      ++i;\n    }\n\n    EXPECT_LT(i, 20);\n  }\n\n```\n\n**HeightmapTest.Heights** :\n\n```\n/var/lib/jenkins/workspace/gazebo-any-devel-precise-amd64-gpu-ati/gazebo/test/regression/heightmap.cc:119\nValue of: math::equal(physicsTest.back(), renderTest.back(), 0.13f)\n  Actual: false\nExpected: true\n```\n\nrelated code:\n```\n      // Test to see if the physics height is equal to the render engine\n      // height.\n      EXPECT_TRUE(math::equal(physicsTest.back(), renderTest.back(), 0.13f));\n```", "markup": "markdown", "html": "<p>At this moment I think all current failing tests on Nvidia (both precise/quantal) are fixed are have a patch that could fix them.</p>\n<p>For ATI we have a couple more failing (in the last two runs). For the first one it could hide a race condition problems if our ATI is the slowest machine/GPU around. The second one is related to render.</p>\n<p><strong>SensorManager_TEST.InitRemove</strong>:</p>\n<div class=\"codehilite\"><pre><span></span>/var/lib/jenkins/workspace/gazebo-any-devel-precise-amd64-gpu-ati/gazebo/gazebo/sensors/SensorManager_TEST.cc:118\nExpected: (i) &lt; (20), actual: 30 vs 20\n</pre></div>\n\n\n<p>related code:</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"c1\">// Try removing a few senors.</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">sensors</span><span class=\"o\">::</span><span class=\"n\">Sensor_V</span><span class=\"o\">::</span><span class=\"n\">iterator</span> <span class=\"n\">iter</span> <span class=\"o\">=</span> <span class=\"n\">sensors</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">();</span>\n       <span class=\"n\">iter</span> <span class=\"o\">!=</span> <span class=\"n\">sensors</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">sensorCount</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">iter</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">mgr</span><span class=\"o\">-&gt;</span><span class=\"n\">RemoveSensor</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"n\">iter</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">());</span>\n\n    <span class=\"o\">--</span><span class=\"n\">sensorCount</span><span class=\"p\">;</span>\n\n    <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n    <span class=\"c1\">// Wait for a sensor manager update.</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">mgr</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSensors</span><span class=\"p\">().</span><span class=\"n\">size</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">sensorCount</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">MSleep</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">);</span>\n      <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">EXPECT_LT</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p><strong>HeightmapTest.Heights</strong> :</p>\n<div class=\"codehilite\"><pre><span></span>/var/lib/jenkins/workspace/gazebo-any-devel-precise-amd64-gpu-ati/gazebo/test/regression/heightmap.cc:119\nValue of: math::equal(physicsTest.back(), renderTest.back(), 0.13f)\n  Actual: false\nExpected: true\n</pre></div>\n\n\n<p>related code:</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">//</span> <span class=\"nt\">Test</span> <span class=\"nt\">to</span> <span class=\"nt\">see</span> <span class=\"nt\">if</span> <span class=\"nt\">the</span> <span class=\"nt\">physics</span> <span class=\"nt\">height</span> <span class=\"nt\">is</span> <span class=\"nt\">equal</span> <span class=\"nt\">to</span> <span class=\"nt\">the</span> <span class=\"nt\">render</span> <span class=\"nt\">engine</span>\n      <span class=\"o\">//</span> <span class=\"nt\">height</span><span class=\"o\">.</span>\n      <span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">physicsTest</span><span class=\"p\">.</span><span class=\"nc\">back</span><span class=\"o\">(),</span> <span class=\"nt\">renderTest</span><span class=\"p\">.</span><span class=\"nc\">back</span><span class=\"o\">(),</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">13f</span><span class=\"o\">));</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-04-11T18:40:55.703362+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-04-11T18:40:55.712739+00:00", "type": "pullrequest_comment", "id": 195210}