{"rendered": {"description": {"raw": "This pull request enables the C++11 support. There is an issue with GTEST when using `EXPECT`, `ASSERT`, `QVERIFY`, and we pass a shared pointer as an argument. The boost::shared_ptr bool operator is explicit and the compiler does not make an implicit conversion for us when we're using these GTEST macros.\r\n\r\nI would say that the cleanest solution would be to use the bool operator in the form of a static_cast<bool>(mysharedPtr) or bool(mysharedPtr). However we have lots of lines where we are comparing the shared pointer with NULL. So, for consistency this is the way I chose here to fix the problem.\r\n\r\nThere are other ways as redeclaring ASSERT_TRUE with a different name and wrap it with a new ASSERT_TRUE but I don't think it's worth it.\r\n\r\nFor reference, there was some discussion in pull request #1297.", "markup": "markdown", "html": "<p>This pull request enables the C++11 support. There is an issue with GTEST when using <code>EXPECT</code>, <code>ASSERT</code>, <code>QVERIFY</code>, and we pass a shared pointer as an argument. The boost::shared_ptr bool operator is explicit and the compiler does not make an implicit conversion for us when we're using these GTEST macros.</p>\n<p>I would say that the cleanest solution would be to use the bool operator in the form of a static_cast&lt;bool&gt;(mysharedPtr) or bool(mysharedPtr). However we have lots of lines where we are comparing the shared pointer with NULL. So, for consistency this is the way I chose here to fix the problem.</p>\n<p>There are other ways as redeclaring ASSERT_TRUE with a different name and wrap it with a new ASSERT_TRUE but I don't think it's worth it.</p>\n<p>For reference, there was some discussion in <a href=\"#!/osrf/gazebo/pull-requests/1297/c-11-support\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1297</a>.</p>", "type": "rendered"}, "title": {"raw": "C++11 support (take 2)", "markup": "markdown", "html": "<p>C++11 support (take 2)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request enables the C++11 support. There is an issue with GTEST when using `EXPECT`, `ASSERT`, `QVERIFY`, and we pass a shared pointer as an argument. The boost::shared_ptr bool operator is explicit and the compiler does not make an implicit conversion for us when we're using these GTEST macros.\r\n\r\nI would say that the cleanest solution would be to use the bool operator in the form of a static_cast<bool>(mysharedPtr) or bool(mysharedPtr). However we have lots of lines where we are comparing the shared pointer with NULL. So, for consistency this is the way I chose here to fix the problem.\r\n\r\nThere are other ways as redeclaring ASSERT_TRUE with a different name and wrap it with a new ASSERT_TRUE but I don't think it's worth it.\r\n\r\nFor reference, there was some discussion in pull request #1297.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1340/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:d00353d0389f%0D826e8cdd630d?from_pullrequest_id=1340"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1340/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1340.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1340/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1340/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1340"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1340/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:d00353d0389f%0D826e8cdd630d?from_pullrequest_id=1340"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1340/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1340/statuses_page=1.json"}}, "title": "C++11 support (take 2)", "close_source_branch": true, "reviewers": [], "id": 1340, "destination": {"commit": {"hash": "826e8cdd630d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/826e8cdd630d.json"}, "html": {"href": "#!/osrf/gazebo/commits/826e8cdd630d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2014-12-11T00:24:09.973390+00:00", "summary": {"raw": "This pull request enables the C++11 support. There is an issue with GTEST when using `EXPECT`, `ASSERT`, `QVERIFY`, and we pass a shared pointer as an argument. The boost::shared_ptr bool operator is explicit and the compiler does not make an implicit conversion for us when we're using these GTEST macros.\r\n\r\nI would say that the cleanest solution would be to use the bool operator in the form of a static_cast<bool>(mysharedPtr) or bool(mysharedPtr). However we have lots of lines where we are comparing the shared pointer with NULL. So, for consistency this is the way I chose here to fix the problem.\r\n\r\nThere are other ways as redeclaring ASSERT_TRUE with a different name and wrap it with a new ASSERT_TRUE but I don't think it's worth it.\r\n\r\nFor reference, there was some discussion in pull request #1297.", "markup": "markdown", "html": "<p>This pull request enables the C++11 support. There is an issue with GTEST when using <code>EXPECT</code>, <code>ASSERT</code>, <code>QVERIFY</code>, and we pass a shared pointer as an argument. The boost::shared_ptr bool operator is explicit and the compiler does not make an implicit conversion for us when we're using these GTEST macros.</p>\n<p>I would say that the cleanest solution would be to use the bool operator in the form of a static_cast&lt;bool&gt;(mysharedPtr) or bool(mysharedPtr). However we have lots of lines where we are comparing the shared pointer with NULL. So, for consistency this is the way I chose here to fix the problem.</p>\n<p>There are other ways as redeclaring ASSERT_TRUE with a different name and wrap it with a new ASSERT_TRUE but I don't think it's worth it.</p>\n<p>For reference, there was some discussion in <a href=\"#!/osrf/gazebo/pull-requests/1297/c-11-support\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1297</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7d4f6aed4b97", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7d4f6aed4b97.json"}, "html": {"href": "#!/osrf/gazebo/commits/7d4f6aed4b97"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cpp11_default"}}, "comment_count": 36, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-12-17T17:17:16.335640+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2014-12-13T00:33:51.824947+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-12-16T02:19:37.996853+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}], "reason": "", "updated_on": "2014-12-17T23:28:08.271987+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "d00353d0389f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d00353d0389f.json"}, "html": {"href": "#!/osrf/gazebo/commits/d00353d0389f"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}