{"rendered": {"description": {"raw": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now\r\n\r\nupdate by @scpeters: I've merged forward pull request #2811 from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR", "markup": "markdown", "html": "<p>This PR adds <code>save model</code> logic to logging process, such that when we replay logs, the models' <code>material</code> and <code>meshes</code> definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  </p>\n<ol>\n<li>\n<p>The first approach I tried is to encode those <code>.png</code> and <code>.dae</code> files into the same <code>state.log</code> file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with <code>state.log</code> and model definitions in the same directory, it would be straightforward to open the model dir and find <code>material</code> and <code>meshes</code> dirs, with <code>.sdf</code> files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. </p>\n</li>\n<li>\n<p>The <code>SaveModels</code> logic is: search through the <code>GAZEBO_MODEL_PATH</code>, when we find the model definition, copy it to the <code>.gazebo/log/XXX/gzserver</code> directory and stop searching.</p>\n</li>\n<li>\n<p>When replay, first export the <code>GAZEBO_MODEL_PATH</code> with\n<code>export GAZEBO_MODEL_PATH=&lt;parent directory of state.log&gt;</code>, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of <code>2017-11-02T16:11:53.458437</code>. The <code>:</code> is a delimiter of the <code>GAZEBO_MODEL_PATH</code> as defined <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&amp;fileviewer=file-view-default#SystemPaths.cc-47\" rel=\"nofollow\">here</a>. As for now, we have to rename the directory to something without the delimiter character. </p>\n</li>\n<li>Tested with models in <code>.gazebo/models</code> removed and export the <code>GAZEBO_MODEL_PATH</code>, replay runs well with the stored models in the log directory</li>\n<li><code>copyDir</code> function falls best in the <code>filesystem</code> class in <code>ign-common</code>, but we are not porting in <code>ign-common</code> to <code>gazebo</code> and it resides in <code>CommonIface</code> now</li>\n</ol>\n<p>update by @scpeters: I've merged forward <a href=\"#!/osrf/gazebo/pull-requests/2811/save-models-material-and-meshes-when\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2811</a> from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR</p>", "type": "rendered"}, "title": {"raw": "Save models' material and meshes when logging", "markup": "markdown", "html": "<p>Save models' material and meshes when logging</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now\r\n\r\nupdate by @scpeters: I've merged forward pull request #2811 from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2797/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:584d6bc91ad3%0D4d8123aafcc5?from_pullrequest_id=2797"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2797.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2797/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2797"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:584d6bc91ad3%0D4d8123aafcc5?from_pullrequest_id=2797"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2797/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2797/statuses_page=1.json"}}, "title": "Save models' material and meshes when logging", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}], "id": 2797, "destination": {"commit": {"hash": "4d8123aafcc5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4d8123aafcc5.json"}, "html": {"href": "#!/osrf/gazebo/commits/4d8123aafcc5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-11-03T00:30:37.072351+00:00", "summary": {"raw": "This PR adds `save model` logic to logging process, such that when we replay logs, the models' `material` and `meshes` definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  \r\n\r\n1. The first approach I tried is to encode those `.png` and `.dae` files into the same `state.log` file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with `state.log` and model definitions in the same directory, it would be straightforward to open the model dir and find `material` and `meshes` dirs, with `.sdf` files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. \r\n\r\n1.  The `SaveModels` logic is: search through the `GAZEBO_MODEL_PATH`, when we find the model definition, copy it to the `.gazebo/log/XXX/gzserver` directory and stop searching.\r\n\r\n1. When replay, first export the `GAZEBO_MODEL_PATH` with\r\n`export GAZEBO_MODEL_PATH=<parent directory of state.log>`, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of `2017-11-02T16:11:53.458437`. The `:` is a delimiter of the `GAZEBO_MODEL_PATH` as defined [here](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&fileviewer=file-view-default#SystemPaths.cc-47). As for now, we have to rename the directory to something without the delimiter character. \r\n1.  Tested with models in `.gazebo/models` removed and export the `GAZEBO_MODEL_PATH`, replay runs well with the stored models in the log directory\r\n1. `copyDir` function falls best in the `filesystem` class in `ign-common`, but we are not porting in `ign-common` to `gazebo` and it resides in `CommonIface` now\r\n\r\nupdate by @scpeters: I've merged forward pull request #2811 from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR", "markup": "markdown", "html": "<p>This PR adds <code>save model</code> logic to logging process, such that when we replay logs, the models' <code>material</code> and <code>meshes</code> definitions will be saved in the same directory of the log file, and then the log can be easily replayed even when shipped across machines.  </p>\n<ol>\n<li>\n<p>The first approach I tried is to encode those <code>.png</code> and <code>.dae</code> files into the same <code>state.log</code> file and then decode them when replay. But this would be confusing for the users when they received a file that logs actually contains encoding of all those materials and meshes definitions. Rather, if we ship the folder with <code>state.log</code> and model definitions in the same directory, it would be straightforward to open the model dir and find <code>material</code> and <code>meshes</code> dirs, with <code>.sdf</code> files. Therefore, this PR uses the approach to keep the model definition as it is without encoding, and when ship the log, we can tar the folder and then untar it from the target machine. </p>\n</li>\n<li>\n<p>The <code>SaveModels</code> logic is: search through the <code>GAZEBO_MODEL_PATH</code>, when we find the model definition, copy it to the <code>.gazebo/log/XXX/gzserver</code> directory and stop searching.</p>\n</li>\n<li>\n<p>When replay, first export the <code>GAZEBO_MODEL_PATH</code> with\n<code>export GAZEBO_MODEL_PATH=&lt;parent directory of state.log&gt;</code>, it is a little tricky here: our log directory name is using the current time in ISO string if undefined, then it has the form of <code>2017-11-02T16:11:53.458437</code>. The <code>:</code> is a delimiter of the <code>GAZEBO_MODEL_PATH</code> as defined <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/common/SystemPaths.cc?at=default&amp;fileviewer=file-view-default#SystemPaths.cc-47\" rel=\"nofollow\">here</a>. As for now, we have to rename the directory to something without the delimiter character. </p>\n</li>\n<li>Tested with models in <code>.gazebo/models</code> removed and export the <code>GAZEBO_MODEL_PATH</code>, replay runs well with the stored models in the log directory</li>\n<li><code>copyDir</code> function falls best in the <code>filesystem</code> class in <code>ign-common</code>, but we are not porting in <code>ign-common</code> to <code>gazebo</code> and it resides in <code>CommonIface</code> now</li>\n</ol>\n<p>update by @scpeters: I've merged forward <a href=\"#!/osrf/gazebo/pull-requests/2811/save-models-material-and-meshes-when\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2811</a> from gazebo7, so now this PR is mainly addressing API and ABI changes that we couldn't make in that PR</p>", "type": "rendered"}, "source": {"commit": {"hash": "78ac1cb9a6d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/78ac1cb9a6d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/78ac1cb9a6d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "logging_with_models"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2018-08-10T22:21:43.843449+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2018-06-04T19:40:22.642311+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-11-14T19:46:36.903358+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}}, {"role": "REVIEWER", "participated_on": "2017-11-03T17:16:27.931195+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "REVIEWER", "participated_on": "2017-11-06T23:11:36.556250+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2018-08-10T22:22:16.032091+00:00", "author": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "merge_commit": {"hash": "584d6bc91ad3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/584d6bc91ad3.json"}, "html": {"href": "#!/osrf/gazebo/commits/584d6bc91ad3"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}