{"rendered": {"description": {"raw": "## Issue description (pasted from #978):\r\n\r\nThere is an error when inserting a model like the following that has a single link connected to the world, and the model pose is specified, but no link pose:\r\n~~~\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.4\">\r\n  <model name=\"model\">\r\n    <pose>1 2 3 0 0 0</pose>\r\n    <link name=\"child\" />\r\n    <joint name=\"joint\" type=\"revolute\">\r\n      <parent>world</parent>\r\n      <child>child</child>\r\n      <axis>\r\n        <xyz>1.0 0.0 0.0</xyz>\r\n      </axis>\r\n    </joint>\r\n  </model>\r\n</sdf>\r\n~~~\r\nIn this case, since the pose offsets are zero for the child link and joint, the joint anchor location should be at 1, 2, 3, 0, 0, 0. In practice, the joint anchor is being placed at the origin.\r\n\r\n## Pull request summary\r\n\r\nI added a test for this issue in 15cf96c, adding a slight modification to Joint_TEST::SpawnJoint. The fix in 597aa5c is a one-liner, basically to always execute some code that initializes the pose of an entity relative to its parent, even if an sdf child pose offset is not provided (it will just be set to the default value of all zeros if not provided). I had to disable the test for simbody though (3831300) since SimbodyJoint::GetAnchor isn't yet implemented.\r\n\r\n## Jenkins verification\r\n\r\nStarted two jobs that had failing tests in INTEGRATION_imu:\r\n\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/83](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/83/) \r\n * [gazebo-any-devel-raring-amd64-no-gpu/14](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/14/)\r\n\r\nSo I started two more jobs, but these failed because gazebosim.org was down:\r\n\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/85](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/85/)\r\n * [gazebo-any-devel-raring-amd64-no-gpu/15](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/15/)\r\n\r\nSo I started two more jobs:\r\n\r\n * [gazebo-any-devel-raring-amd64-no-gpu/16](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/16/)\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/87](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/87/)", "markup": "markdown", "html": "<h2 id=\"markdown-header-issue-description-pasted-from-978\">Issue description (pasted from <a href=\"#!/osrf/gazebo/issues/978/incorrect-joint-anchor-position-when-child\" rel=\"nofollow\" title=\"Incorrect joint anchor position when child link pose is unset\" class=\"ap-connect-link\"><s>#978</s></a>):</h2>\n<p>There is an error when inserting a model like the following that has a single link connected to the world, and the model pose is specified, but no link pose:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.4&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;model&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>1 2 3 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;child&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;parent&gt;</span>world<span class=\"nt\">&lt;/parent&gt;</span>\n      <span class=\"nt\">&lt;child&gt;</span>child<span class=\"nt\">&lt;/child&gt;</span>\n      <span class=\"nt\">&lt;axis&gt;</span>\n        <span class=\"nt\">&lt;xyz&gt;</span>1.0 0.0 0.0<span class=\"nt\">&lt;/xyz&gt;</span>\n      <span class=\"nt\">&lt;/axis&gt;</span>\n    <span class=\"nt\">&lt;/joint&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>In this case, since the pose offsets are zero for the child link and joint, the joint anchor location should be at 1, 2, 3, 0, 0, 0. In practice, the joint anchor is being placed at the origin.</p>\n<h2 id=\"markdown-header-pull-request-summary\">Pull request summary</h2>\n<p>I added a test for this issue in <a href=\"#!/osrf/gazebo/commits/15cf96c\" rel=\"nofollow\" class=\"ap-connect-link\">15cf96c</a>, adding a slight modification to Joint_TEST::SpawnJoint. The fix in <a href=\"#!/osrf/gazebo/commits/597aa5c\" rel=\"nofollow\" class=\"ap-connect-link\">597aa5c</a> is a one-liner, basically to always execute some code that initializes the pose of an entity relative to its parent, even if an sdf child pose offset is not provided (it will just be set to the default value of all zeros if not provided). I had to disable the test for simbody though (<a href=\"#!/osrf/gazebo/commits/3831300\" rel=\"nofollow\" class=\"ap-connect-link\">3831300</a>) since SimbodyJoint::GetAnchor isn't yet implemented.</p>\n<h2 id=\"markdown-header-jenkins-verification\">Jenkins verification</h2>\n<p>Started two jobs that had failing tests in INTEGRATION_imu:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/83/\" rel=\"nofollow\">gazebo-any-devel-quantal-amd64-gpu-nvidia/83</a> </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/14/\" rel=\"nofollow\">gazebo-any-devel-raring-amd64-no-gpu/14</a></li>\n</ul>\n<p>So I started two more jobs, but these failed because gazebosim.org was down:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/85/\" rel=\"nofollow\">gazebo-any-devel-quantal-amd64-gpu-nvidia/85</a></li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/15/\" rel=\"nofollow\">gazebo-any-devel-raring-amd64-no-gpu/15</a></li>\n</ul>\n<p>So I started two more jobs:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/16/\" rel=\"nofollow\">gazebo-any-devel-raring-amd64-no-gpu/16</a></li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/87/\" rel=\"nofollow\">gazebo-any-devel-quantal-amd64-gpu-nvidia/87</a></li>\n</ul>", "type": "rendered"}, "title": {"raw": "Fix joint anchor when link pose not specified (#978)", "markup": "markdown", "html": "<p>Fix joint anchor when link pose not specified (<a href=\"#!/osrf/gazebo/issues/978/incorrect-joint-anchor-position-when-child\" rel=\"nofollow\" title=\"Incorrect joint anchor position when child link pose is unset\" class=\"ap-connect-link\"><s>#978</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "## Issue description (pasted from #978):\r\n\r\nThere is an error when inserting a model like the following that has a single link connected to the world, and the model pose is specified, but no link pose:\r\n~~~\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.4\">\r\n  <model name=\"model\">\r\n    <pose>1 2 3 0 0 0</pose>\r\n    <link name=\"child\" />\r\n    <joint name=\"joint\" type=\"revolute\">\r\n      <parent>world</parent>\r\n      <child>child</child>\r\n      <axis>\r\n        <xyz>1.0 0.0 0.0</xyz>\r\n      </axis>\r\n    </joint>\r\n  </model>\r\n</sdf>\r\n~~~\r\nIn this case, since the pose offsets are zero for the child link and joint, the joint anchor location should be at 1, 2, 3, 0, 0, 0. In practice, the joint anchor is being placed at the origin.\r\n\r\n## Pull request summary\r\n\r\nI added a test for this issue in 15cf96c, adding a slight modification to Joint_TEST::SpawnJoint. The fix in 597aa5c is a one-liner, basically to always execute some code that initializes the pose of an entity relative to its parent, even if an sdf child pose offset is not provided (it will just be set to the default value of all zeros if not provided). I had to disable the test for simbody though (3831300) since SimbodyJoint::GetAnchor isn't yet implemented.\r\n\r\n## Jenkins verification\r\n\r\nStarted two jobs that had failing tests in INTEGRATION_imu:\r\n\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/83](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/83/) \r\n * [gazebo-any-devel-raring-amd64-no-gpu/14](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/14/)\r\n\r\nSo I started two more jobs, but these failed because gazebosim.org was down:\r\n\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/85](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/85/)\r\n * [gazebo-any-devel-raring-amd64-no-gpu/15](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/15/)\r\n\r\nSo I started two more jobs:\r\n\r\n * [gazebo-any-devel-raring-amd64-no-gpu/16](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/16/)\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/87](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/87/)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/862/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:e9c8ca7982fd%0D6f1d337d4b58?from_pullrequest_id=862"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/862/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/862.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/862/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/862/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/862"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/862/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:e9c8ca7982fd%0D6f1d337d4b58?from_pullrequest_id=862"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/862/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/862/statuses_page=1.json"}}, "title": "Fix joint anchor when link pose not specified (#978)", "close_source_branch": true, "reviewers": [], "id": 862, "destination": {"commit": {"hash": "6f1d337d4b58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6f1d337d4b58.json"}, "html": {"href": "#!/osrf/gazebo/commits/6f1d337d4b58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_2.1"}}, "created_on": "2013-12-07T08:27:40.157941+00:00", "summary": {"raw": "## Issue description (pasted from #978):\r\n\r\nThere is an error when inserting a model like the following that has a single link connected to the world, and the model pose is specified, but no link pose:\r\n~~~\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.4\">\r\n  <model name=\"model\">\r\n    <pose>1 2 3 0 0 0</pose>\r\n    <link name=\"child\" />\r\n    <joint name=\"joint\" type=\"revolute\">\r\n      <parent>world</parent>\r\n      <child>child</child>\r\n      <axis>\r\n        <xyz>1.0 0.0 0.0</xyz>\r\n      </axis>\r\n    </joint>\r\n  </model>\r\n</sdf>\r\n~~~\r\nIn this case, since the pose offsets are zero for the child link and joint, the joint anchor location should be at 1, 2, 3, 0, 0, 0. In practice, the joint anchor is being placed at the origin.\r\n\r\n## Pull request summary\r\n\r\nI added a test for this issue in 15cf96c, adding a slight modification to Joint_TEST::SpawnJoint. The fix in 597aa5c is a one-liner, basically to always execute some code that initializes the pose of an entity relative to its parent, even if an sdf child pose offset is not provided (it will just be set to the default value of all zeros if not provided). I had to disable the test for simbody though (3831300) since SimbodyJoint::GetAnchor isn't yet implemented.\r\n\r\n## Jenkins verification\r\n\r\nStarted two jobs that had failing tests in INTEGRATION_imu:\r\n\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/83](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/83/) \r\n * [gazebo-any-devel-raring-amd64-no-gpu/14](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/14/)\r\n\r\nSo I started two more jobs, but these failed because gazebosim.org was down:\r\n\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/85](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/85/)\r\n * [gazebo-any-devel-raring-amd64-no-gpu/15](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/15/)\r\n\r\nSo I started two more jobs:\r\n\r\n * [gazebo-any-devel-raring-amd64-no-gpu/16](http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/16/)\r\n * [gazebo-any-devel-quantal-amd64-gpu-nvidia/87](http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/87/)", "markup": "markdown", "html": "<h2 id=\"markdown-header-issue-description-pasted-from-978\">Issue description (pasted from <a href=\"#!/osrf/gazebo/issues/978/incorrect-joint-anchor-position-when-child\" rel=\"nofollow\" title=\"Incorrect joint anchor position when child link pose is unset\" class=\"ap-connect-link\"><s>#978</s></a>):</h2>\n<p>There is an error when inserting a model like the following that has a single link connected to the world, and the model pose is specified, but no link pose:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.4&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;model&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>1 2 3 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;child&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;parent&gt;</span>world<span class=\"nt\">&lt;/parent&gt;</span>\n      <span class=\"nt\">&lt;child&gt;</span>child<span class=\"nt\">&lt;/child&gt;</span>\n      <span class=\"nt\">&lt;axis&gt;</span>\n        <span class=\"nt\">&lt;xyz&gt;</span>1.0 0.0 0.0<span class=\"nt\">&lt;/xyz&gt;</span>\n      <span class=\"nt\">&lt;/axis&gt;</span>\n    <span class=\"nt\">&lt;/joint&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>In this case, since the pose offsets are zero for the child link and joint, the joint anchor location should be at 1, 2, 3, 0, 0, 0. In practice, the joint anchor is being placed at the origin.</p>\n<h2 id=\"markdown-header-pull-request-summary\">Pull request summary</h2>\n<p>I added a test for this issue in <a href=\"#!/osrf/gazebo/commits/15cf96c\" rel=\"nofollow\" class=\"ap-connect-link\">15cf96c</a>, adding a slight modification to Joint_TEST::SpawnJoint. The fix in <a href=\"#!/osrf/gazebo/commits/597aa5c\" rel=\"nofollow\" class=\"ap-connect-link\">597aa5c</a> is a one-liner, basically to always execute some code that initializes the pose of an entity relative to its parent, even if an sdf child pose offset is not provided (it will just be set to the default value of all zeros if not provided). I had to disable the test for simbody though (<a href=\"#!/osrf/gazebo/commits/3831300\" rel=\"nofollow\" class=\"ap-connect-link\">3831300</a>) since SimbodyJoint::GetAnchor isn't yet implemented.</p>\n<h2 id=\"markdown-header-jenkins-verification\">Jenkins verification</h2>\n<p>Started two jobs that had failing tests in INTEGRATION_imu:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/83/\" rel=\"nofollow\">gazebo-any-devel-quantal-amd64-gpu-nvidia/83</a> </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/14/\" rel=\"nofollow\">gazebo-any-devel-raring-amd64-no-gpu/14</a></li>\n</ul>\n<p>So I started two more jobs, but these failed because gazebosim.org was down:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/85/\" rel=\"nofollow\">gazebo-any-devel-quantal-amd64-gpu-nvidia/85</a></li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/15/\" rel=\"nofollow\">gazebo-any-devel-raring-amd64-no-gpu/15</a></li>\n</ul>\n<p>So I started two more jobs:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-raring-amd64-no-gpu/16/\" rel=\"nofollow\">gazebo-any-devel-raring-amd64-no-gpu/16</a></li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-quantal-amd64-gpu-nvidia/87/\" rel=\"nofollow\">gazebo-any-devel-quantal-amd64-gpu-nvidia/87</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "4ffc5d706eeb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4ffc5d706eeb.json"}, "html": {"href": "#!/osrf/gazebo/commits/4ffc5d706eeb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_978"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-01-01T00:23:17.371231+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2013-12-31T23:22:20.501835+00:00", "type": "participant", "approved": true, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}, {"role": "PARTICIPANT", "participated_on": "2014-01-01T01:01:01.414641+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2014-01-01T01:02:33.037008+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "e9c8ca7982fd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e9c8ca7982fd.json"}, "html": {"href": "#!/osrf/gazebo/commits/e9c8ca7982fd"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}