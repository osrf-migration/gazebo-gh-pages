{"rendered": {"description": {"raw": "This pull request adds the backend implementation for:\r\n\r\n  1. Rewind: The simulation starts from the beginning.\r\n  1. Forward: The simulation jumps to the end of the log file.\r\n  1. Seek: The simulation jumps to a specific point specified by its simulation time.\r\n\r\nThere's still no easy way to test it until we have all the GUI changes merged. This is how you can do it:\r\n\r\nReplace `MainWindow.cc::Step()` with this snippet:\r\n\r\n\r\n```\r\n#!c++\r\nvoid MainWindow::Step()\r\n{\r\n  msgs::LogPlaybackControl msg;\r\n  msg.set_rewind(true);\r\n  this->logPlaybackPub->Publish(msg);\r\n}\r\n\r\n```\r\n\r\nDeclare and advertised the topic before with:\r\n\r\n```\r\nthis->logPlaybackPub =\r\n    this->node->Advertise<msgs::LogPlaybackControl>(\"~/playback_control\");\r\n```\r\n\r\n\r\nYou can replace the line `msg.set_rewind(true);` with other options:\r\n\r\n  1. Forward:\r\n\r\n```\r\nmsg.set_forward(true);\r\n```\r\n \r\n 1. Seek: \r\n\r\n```\r\n  msg.mutable_seek()->set_sec(<VALUE_IN_SIM_SECS>);\r\n  msg.mutable_seek()->set_nsec(<VALUE_IN_SIM_NSECS>);\r\n```\r\n\r\nProbably, the next pull request will be a new `gazebo::test::ServerFixture::Lload()` function that can load a world from a log file. Then, we could add a few tests for the functionality added in this pull request.\r\n\r\nTest results:\r\n\r\n1. [No GPU is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/356/).\r\n1. [Trusty GPU is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/276/).\r\n1. [Homebrew is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/263/).", "markup": "markdown", "html": "<p>This pull request adds the backend implementation for:</p>\n<ol>\n<li>Rewind: The simulation starts from the beginning.</li>\n<li>Forward: The simulation jumps to the end of the log file.</li>\n<li>Seek: The simulation jumps to a specific point specified by its simulation time.</li>\n</ol>\n<p>There's still no easy way to test it until we have all the GUI changes merged. This is how you can do it:</p>\n<p>Replace <code>MainWindow.cc::Step()</code> with this snippet:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">MainWindow</span><span class=\"o\">::</span><span class=\"n\">Step</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">LogPlaybackControl</span> <span class=\"n\">msg</span><span class=\"p\">;</span>\n  <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">set_rewind</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">logPlaybackPub</span><span class=\"o\">-&gt;</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Declare and advertised the topic before with:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">logPlaybackPub</span> <span class=\"o\">=</span>\n    <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">node-</span><span class=\"o\">&gt;</span><span class=\"nt\">Advertise</span><span class=\"o\">&lt;</span><span class=\"nt\">msgs</span><span class=\"p\">::</span><span class=\"nd\">LogPlaybackControl</span><span class=\"o\">&gt;(</span><span class=\"s2\">&quot;~/playback_control&quot;</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>You can replace the line <code>msg.set_rewind(true);</code> with other options:</p>\n<ol>\n<li>Forward:</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span>msg.set_forward(true);\n</pre></div>\n\n\n<ol>\n<li>Seek: </li>\n</ol>\n<div class=\"codehilite\"><pre><span></span>  msg.mutable_seek()-&gt;set_sec(&lt;VALUE_IN_SIM_SECS&gt;);\n  msg.mutable_seek()-&gt;set_nsec(&lt;VALUE_IN_SIM_NSECS&gt;);\n</pre></div>\n\n\n<p>Probably, the next pull request will be a new <code>gazebo::test::ServerFixture::Lload()</code> function that can load a world from a log file. Then, we could add a few tests for the functionality added in this pull request.</p>\n<p>Test results:</p>\n<ol>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/356/\" rel=\"nofollow\">No GPU is clean</a>.</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/276/\" rel=\"nofollow\">Trusty GPU is clean</a>.</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/263/\" rel=\"nofollow\">Homebrew is clean</a>.</li>\n</ol>", "type": "rendered"}, "title": {"raw": "Log playback: rewind, forward, seek", "markup": "markdown", "html": "<p>Log playback: rewind, forward, seek</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request adds the backend implementation for:\r\n\r\n  1. Rewind: The simulation starts from the beginning.\r\n  1. Forward: The simulation jumps to the end of the log file.\r\n  1. Seek: The simulation jumps to a specific point specified by its simulation time.\r\n\r\nThere's still no easy way to test it until we have all the GUI changes merged. This is how you can do it:\r\n\r\nReplace `MainWindow.cc::Step()` with this snippet:\r\n\r\n\r\n```\r\n#!c++\r\nvoid MainWindow::Step()\r\n{\r\n  msgs::LogPlaybackControl msg;\r\n  msg.set_rewind(true);\r\n  this->logPlaybackPub->Publish(msg);\r\n}\r\n\r\n```\r\n\r\nDeclare and advertised the topic before with:\r\n\r\n```\r\nthis->logPlaybackPub =\r\n    this->node->Advertise<msgs::LogPlaybackControl>(\"~/playback_control\");\r\n```\r\n\r\n\r\nYou can replace the line `msg.set_rewind(true);` with other options:\r\n\r\n  1. Forward:\r\n\r\n```\r\nmsg.set_forward(true);\r\n```\r\n \r\n 1. Seek: \r\n\r\n```\r\n  msg.mutable_seek()->set_sec(<VALUE_IN_SIM_SECS>);\r\n  msg.mutable_seek()->set_nsec(<VALUE_IN_SIM_NSECS>);\r\n```\r\n\r\nProbably, the next pull request will be a new `gazebo::test::ServerFixture::Lload()` function that can load a world from a log file. Then, we could add a few tests for the functionality added in this pull request.\r\n\r\nTest results:\r\n\r\n1. [No GPU is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/356/).\r\n1. [Trusty GPU is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/276/).\r\n1. [Homebrew is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/263/).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1737/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:996a27882135%0D2a220a7ae716?from_pullrequest_id=1737"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1737/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1737.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1737/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1737/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1737"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1737/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:996a27882135%0D2a220a7ae716?from_pullrequest_id=1737"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1737/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1737/statuses_page=1.json"}}, "title": "Log playback: rewind, forward, seek", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}], "id": 1737, "destination": {"commit": {"hash": "2a220a7ae716", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2a220a7ae716.json"}, "html": {"href": "#!/osrf/gazebo/commits/2a220a7ae716"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo6"}}, "created_on": "2015-06-17T19:09:12.048454+00:00", "summary": {"raw": "This pull request adds the backend implementation for:\r\n\r\n  1. Rewind: The simulation starts from the beginning.\r\n  1. Forward: The simulation jumps to the end of the log file.\r\n  1. Seek: The simulation jumps to a specific point specified by its simulation time.\r\n\r\nThere's still no easy way to test it until we have all the GUI changes merged. This is how you can do it:\r\n\r\nReplace `MainWindow.cc::Step()` with this snippet:\r\n\r\n\r\n```\r\n#!c++\r\nvoid MainWindow::Step()\r\n{\r\n  msgs::LogPlaybackControl msg;\r\n  msg.set_rewind(true);\r\n  this->logPlaybackPub->Publish(msg);\r\n}\r\n\r\n```\r\n\r\nDeclare and advertised the topic before with:\r\n\r\n```\r\nthis->logPlaybackPub =\r\n    this->node->Advertise<msgs::LogPlaybackControl>(\"~/playback_control\");\r\n```\r\n\r\n\r\nYou can replace the line `msg.set_rewind(true);` with other options:\r\n\r\n  1. Forward:\r\n\r\n```\r\nmsg.set_forward(true);\r\n```\r\n \r\n 1. Seek: \r\n\r\n```\r\n  msg.mutable_seek()->set_sec(<VALUE_IN_SIM_SECS>);\r\n  msg.mutable_seek()->set_nsec(<VALUE_IN_SIM_NSECS>);\r\n```\r\n\r\nProbably, the next pull request will be a new `gazebo::test::ServerFixture::Lload()` function that can load a world from a log file. Then, we could add a few tests for the functionality added in this pull request.\r\n\r\nTest results:\r\n\r\n1. [No GPU is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/356/).\r\n1. [Trusty GPU is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/276/).\r\n1. [Homebrew is clean](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/263/).", "markup": "markdown", "html": "<p>This pull request adds the backend implementation for:</p>\n<ol>\n<li>Rewind: The simulation starts from the beginning.</li>\n<li>Forward: The simulation jumps to the end of the log file.</li>\n<li>Seek: The simulation jumps to a specific point specified by its simulation time.</li>\n</ol>\n<p>There's still no easy way to test it until we have all the GUI changes merged. This is how you can do it:</p>\n<p>Replace <code>MainWindow.cc::Step()</code> with this snippet:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">MainWindow</span><span class=\"o\">::</span><span class=\"n\">Step</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">LogPlaybackControl</span> <span class=\"n\">msg</span><span class=\"p\">;</span>\n  <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">set_rewind</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">logPlaybackPub</span><span class=\"o\">-&gt;</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Declare and advertised the topic before with:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">logPlaybackPub</span> <span class=\"o\">=</span>\n    <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">node-</span><span class=\"o\">&gt;</span><span class=\"nt\">Advertise</span><span class=\"o\">&lt;</span><span class=\"nt\">msgs</span><span class=\"p\">::</span><span class=\"nd\">LogPlaybackControl</span><span class=\"o\">&gt;(</span><span class=\"s2\">&quot;~/playback_control&quot;</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>You can replace the line <code>msg.set_rewind(true);</code> with other options:</p>\n<ol>\n<li>Forward:</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span>msg.set_forward(true);\n</pre></div>\n\n\n<ol>\n<li>Seek: </li>\n</ol>\n<div class=\"codehilite\"><pre><span></span>  msg.mutable_seek()-&gt;set_sec(&lt;VALUE_IN_SIM_SECS&gt;);\n  msg.mutable_seek()-&gt;set_nsec(&lt;VALUE_IN_SIM_NSECS&gt;);\n</pre></div>\n\n\n<p>Probably, the next pull request will be a new <code>gazebo::test::ServerFixture::Lload()</code> function that can load a world from a log file. Then, we could add a few tests for the functionality added in this pull request.</p>\n<p>Test results:</p>\n<ol>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/356/\" rel=\"nofollow\">No GPU is clean</a>.</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/276/\" rel=\"nofollow\">Trusty GPU is clean</a>.</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/263/\" rel=\"nofollow\">Homebrew is clean</a>.</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "d701ead67d7b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d701ead67d7b.json"}, "html": {"href": "#!/osrf/gazebo/commits/d701ead67d7b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_goto"}}, "comment_count": 26, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-07-07T18:59:24.944803+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "REVIEWER", "participated_on": "2015-07-01T14:31:18.823623+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "REVIEWER", "participated_on": "2015-07-07T18:59:00.401807+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2015-07-07T19:00:54.166024+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "996a27882135", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/996a27882135.json"}, "html": {"href": "#!/osrf/gazebo/commits/996a27882135"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}