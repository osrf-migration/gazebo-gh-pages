{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1235/comments/3641638.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1235/_/diff#comment-3641638"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1235, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1235.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1235"}}, "title": "(re-)Implemented FPSViewController"}, "content": {"raw": "I've made a number of modifications in the fps_control_nate. Please take a look, and merge if acceptable.\n\nA couple of notes:\n\n1. We are slowly PIMPL-izing our classes. The is also known as using an opaque pointer. See [here](http://en.wikipedia.org/wiki/Opaque_pointer#C.2B.2B). If you run across a class, such as Camera, that has a private data pointer, then you should add new class attributes to that private class. If you are creating a new class, please follow the PIMPL idiom (as with everything, there can be exceptions to this rule).\n\n1. Use the `this` pointer religiously. It's not required by the c++ spec, but it's part of our style that helps to increase code readability and clarity. \n\n1. Try to keep functionality compartmentalized. For example, in your implementation of FPS view control the camera motion is partly controlled in the Camera class via `velocity` and partly in the FPSViewController class. In this case it is better to keep all camera control in the FPSViewController class.", "markup": "markdown", "html": "<p>I've made a number of modifications in the fps_control_nate. Please take a look, and merge if acceptable.</p>\n<p>A couple of notes:</p>\n<ol>\n<li>\n<p>We are slowly PIMPL-izing our classes. The is also known as using an opaque pointer. See <a data-is-external-link=\"true\" href=\"http://en.wikipedia.org/wiki/Opaque_pointer#C.2B.2B\" rel=\"nofollow\">here</a>. If you run across a class, such as Camera, that has a private data pointer, then you should add new class attributes to that private class. If you are creating a new class, please follow the PIMPL idiom (as with everything, there can be exceptions to this rule).</p>\n</li>\n<li>\n<p>Use the <code>this</code> pointer religiously. It's not required by the c++ spec, but it's part of our style that helps to increase code readability and clarity. </p>\n</li>\n<li>\n<p>Try to keep functionality compartmentalized. For example, in your implementation of FPS view control the camera motion is partly controlled in the Camera class via <code>velocity</code> and partly in the FPSViewController class. In this case it is better to keep all camera control in the FPSViewController class.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2014-10-28T21:09:13.057487+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2014-10-28T21:09:13.065543+00:00", "type": "pullrequest_comment", "id": 3641638}