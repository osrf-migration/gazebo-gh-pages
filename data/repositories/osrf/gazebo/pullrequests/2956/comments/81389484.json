{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2956/comments/81389484.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2956/_/diff#comment-81389484"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2956, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2956.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2956"}}, "title": "Dart heightmap with bullet and ODE"}, "content": {"raw": "There might be a symbol collision between the ode in gazebo and `libode-dev`. I'm getting a segfault when running `test/worlds/collision_test_with_dart_ode.world`  and the drill comes in contact with the ground. The backtrace which shows that `dCollideBTL` is called from `libdart-collision-ode` which is available in the internal copy of ode instead of coming from `libode-dev` .\n\n```\n#0  0x00007fffed2991a4 in dCollideBTL(dxGeom*, dxGeom*, int, dContactGeom*, int) (g1=0x555556e9e250, BoxGeom=0x555556d57250, Flags=<optimized out>, Contacts=<optimized out>, Stride=<optimized out>)\n    at /home/addisu/ws/dart-heightmap/src/gazebo/deps/opende/src/collision_trimesh_box.cpp:1231\n#1  0x00007fffec353ffc in  () at /usr/lib/libdart-collision-ode.so.6.6\n#2  0x00007fffed290436 in collideAABBs (callback=0x7fffec353f80, data=0x7fff62ffb6c0, g2=0x555556d57250, g1=0x555556e9e250) at /home/addisu/ws/dart-heightmap/src/gazebo/deps/opende/src/collision_space_internal.h:81\n#3  0x00007fffed290436 in dxHashSpace::collide(void*, void (*)(void*, dxGeom*, dxGeom*)) (this=0x5555575a4100, _data=0x7fff62ffb6c0, callback=0x7fffec353f80) at /home/addisu/ws/dart-heightmap/src/gazebo/deps/opende/src/collision_space.cpp:581\n#4  0x00007fffec353929 in dart::collision::OdeCollisionDetector::collide(dart::collision::CollisionGroup*, dart::collision::CollisionOption const&, dart::collision::CollisionResult*) () at /usr/lib/libdart-collision-ode.so.6.6\n#5  0x00007fffebfca1db in dart::collision::CollisionGroup::collide(dart::collision::CollisionOption const&, dart::collision::CollisionResult*) (this=<optimized out>, option=..., result=result@entry=0x555556e21cb8)\n    at ./dart/collision/CollisionGroup.cpp:168\n#6  0x00007fffec0048ac in dart::constraint::ConstraintSolver::updateConstraints() (this=this@entry=0x555556e21c70) at ./dart/constraint/ConstraintSolver.cpp:402\n#7  0x00007fffec0056e5 in dart::constraint::ConstraintSolver::solve() (this=0x555556e21c70) at ./dart/constraint/ConstraintSolver.cpp:315\n#8  0x00007fffec02085c in dart::simulation::World::step(bool) (this=0x555556e21890, _resetCommand=<optimized out>) at ./dart/simulation/World.cpp:175\n#9  0x00007ffff596bbea in gazebo::physics::DARTPhysics::UpdatePhysics() (this=0x555556b1e8f0) at /usr/include/c++/8/bits/shared_ptr_base.h:996\n#10 0x00007ffff5a53382 in gazebo::physics::World::Update() (this=0x5555563b83e0) at /usr/include/c++/8/bits/std_mutex.h:229\n#11 0x00007ffff5a5caaf in gazebo::physics::World::Step() (this=0x5555563b83e0) at /home/addisu/ws/dart-heightmap/src/gazebo/gazebo/physics/World.cc:675\n#12 0x00007ffff5a5cfad in gazebo::physics::World::RunLoop() (this=0x5555563b83e0) at /home/addisu/ws/dart-heightmap/src/gazebo/gazebo/physics/World.cc:523\n#13 0x00007ffff697d57f in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#14 0x00007ffff5dbb6db in start_thread (arg=0x7fff62ffd700) at pthread_create.c:463\n#15 0x00007ffff63d888f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n/home/addisu/ws/dart-heightmap/src/gazebo - dCollideBTL(dxGeom*, dxGeom*, int, dContactGeom*, int)\n```\n\nIf we can't avoid this, we might just disable setting ode as a collision detector.", "markup": "markdown", "html": "<p>There might be a symbol collision between the ode in gazebo and <code>libode-dev</code>. I'm getting a segfault when running <code>test/worlds/collision_test_with_dart_ode.world</code>  and the drill comes in contact with the ground. The backtrace which shows that <code>dCollideBTL</code> is called from <code>libdart-collision-ode</code> which is available in the internal copy of ode instead of coming from <code>libode-dev</code> .</p>\n<div class=\"codehilite\"><pre><span></span>#0  0x00007fffed2991a4 in dCollideBTL(dxGeom*, dxGeom*, int, dContactGeom*, int) (g1=0x555556e9e250, BoxGeom=0x555556d57250, Flags=&lt;optimized out&gt;, Contacts=&lt;optimized out&gt;, Stride=&lt;optimized out&gt;)\n    at /home/addisu/ws/dart-heightmap/src/gazebo/deps/opende/src/collision_trimesh_box.cpp:1231\n#1  0x00007fffec353ffc in  () at /usr/lib/libdart-collision-ode.so.6.6\n#2  0x00007fffed290436 in collideAABBs (callback=0x7fffec353f80, data=0x7fff62ffb6c0, g2=0x555556d57250, g1=0x555556e9e250) at /home/addisu/ws/dart-heightmap/src/gazebo/deps/opende/src/collision_space_internal.h:81\n#3  0x00007fffed290436 in dxHashSpace::collide(void*, void (*)(void*, dxGeom*, dxGeom*)) (this=0x5555575a4100, _data=0x7fff62ffb6c0, callback=0x7fffec353f80) at /home/addisu/ws/dart-heightmap/src/gazebo/deps/opende/src/collision_space.cpp:581\n#4  0x00007fffec353929 in dart::collision::OdeCollisionDetector::collide(dart::collision::CollisionGroup*, dart::collision::CollisionOption const&amp;, dart::collision::CollisionResult*) () at /usr/lib/libdart-collision-ode.so.6.6\n#5  0x00007fffebfca1db in dart::collision::CollisionGroup::collide(dart::collision::CollisionOption const&amp;, dart::collision::CollisionResult*) (this=&lt;optimized out&gt;, option=..., result=result@entry=0x555556e21cb8)\n    at ./dart/collision/CollisionGroup.cpp:168\n#6  0x00007fffec0048ac in dart::constraint::ConstraintSolver::updateConstraints() (this=this@entry=0x555556e21c70) at ./dart/constraint/ConstraintSolver.cpp:402\n#7  0x00007fffec0056e5 in dart::constraint::ConstraintSolver::solve() (this=0x555556e21c70) at ./dart/constraint/ConstraintSolver.cpp:315\n#8  0x00007fffec02085c in dart::simulation::World::step(bool) (this=0x555556e21890, _resetCommand=&lt;optimized out&gt;) at ./dart/simulation/World.cpp:175\n#9  0x00007ffff596bbea in gazebo::physics::DARTPhysics::UpdatePhysics() (this=0x555556b1e8f0) at /usr/include/c++/8/bits/shared_ptr_base.h:996\n#10 0x00007ffff5a53382 in gazebo::physics::World::Update() (this=0x5555563b83e0) at /usr/include/c++/8/bits/std_mutex.h:229\n#11 0x00007ffff5a5caaf in gazebo::physics::World::Step() (this=0x5555563b83e0) at /home/addisu/ws/dart-heightmap/src/gazebo/gazebo/physics/World.cc:675\n#12 0x00007ffff5a5cfad in gazebo::physics::World::RunLoop() (this=0x5555563b83e0) at /home/addisu/ws/dart-heightmap/src/gazebo/gazebo/physics/World.cc:523\n#13 0x00007ffff697d57f in  () at /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#14 0x00007ffff5dbb6db in start_thread (arg=0x7fff62ffd700) at pthread_create.c:463\n#15 0x00007ffff63d888f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n/home/addisu/ws/dart-heightmap/src/gazebo - dCollideBTL(dxGeom*, dxGeom*, int, dContactGeom*, int)\n</pre></div>\n\n\n<p>If we can't avoid this, we might just disable setting ode as a collision detector.</p>", "type": "rendered"}, "created_on": "2018-11-05T18:59:28.335499+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-11-05T18:59:28.343347+00:00", "type": "pullrequest_comment", "id": 81389484}