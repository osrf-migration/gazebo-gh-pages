{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2956/comments/84880825.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2956/_/diff#comment-84880825"}}, "parent": {"id": 81412333, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2956/comments/81412333.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2956/_/diff#comment-81412333"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2956, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2956.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2956"}}, "title": "Dart heightmap with bullet and ODE"}, "content": {"raw": "We should still think about this issue too. I have added ODE support mainly because I wanted to verify the heightmap implementation works with other DART collision engines as well. The main intention of this PR was to add the bullet support. So in general, it would be fine to take out the ODE support for DART.\n\nI wouldn't know off the top of my head how we can avoid the use of the wrong ODE library. I'm not sure why DART picks the internal `libode` \\(must be in `libgazebo_opcode.so` or `libgazebo_ode.so`?\\). Maybe it's because we're calling the function from within `gazebo::physics::DARTPhysics::UpdatePhysics() ` which is linked against the internal `libode`. Though I would have guessed that the DART library itself is set to always use the same library it was linked against \\(so `libode-dev`\\), because as seen on your trace, the function is not called from any header, but from DART's  `World.cpp`...   \nDo you have any more insight on this, and would you know how to avoid this issue? I still haven\u2019t had the time to look into this in more detail, I\u2019ll have to try and reproduce it to understand what\u2019s happening here better.\n\n\u200c\n\nBut in any case, using two versions of the same library within the same program just calls for trouble. Even if we fix this issue, other issues may pop up elsewhere at some point, so maybe we should at least print a big fat warning when using ODE with DART. Or take the option out altogether. What do you think?", "markup": "markdown", "html": "<p>We should still think about this issue too. I have added ODE support mainly because I wanted to verify the heightmap implementation works with other DART collision engines as well. The main intention of this PR was to add the bullet support. So in general, it would be fine to take out the ODE support for DART.</p>\n<p>I wouldn't know off the top of my head how we can avoid the use of the wrong ODE library. I'm not sure why DART picks the internal <code>libode</code> (must be in <code>libgazebo_opcode.so</code> or <code>libgazebo_ode.so</code>?). Maybe it's because we're calling the function from within <code>gazebo::physics::DARTPhysics::UpdatePhysics()</code> which is linked against the internal <code>libode</code>. Though I would have guessed that the DART library itself is set to always use the same library it was linked against (so <code>libode-dev</code>), because as seen on your trace, the function is not called from any header, but from DART's  <code>World.cpp</code>... <br />\nDo you have any more insight on this, and would you know how to avoid this issue? I still haven\u2019t had the time to look into this in more detail, I\u2019ll have to try and reproduce it to understand what\u2019s happening here better.</p>\n<p>\u200c</p>\n<p>But in any case, using two versions of the same library within the same program just calls for trouble. Even if we fix this issue, other issues may pop up elsewhere at some point, so maybe we should at least print a big fat warning when using ODE with DART. Or take the option out altogether. What do you think?</p>", "type": "rendered"}, "created_on": "2018-12-06T23:42:33.380292+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": "2018-12-06T23:42:33.480636+00:00", "type": "pullrequest_comment", "id": 84880825}