{"rendered": {"description": {"raw": "This pull request introduces the BuoyancyPlugin, which simulates the force opposing gravity exerted on an object immersed in a fluid. It also adds some checks and cleanup to LiftDragPlugin.\r\n\r\nYou can compare the effect of the BuoyancyPlugin on objects with different densities using [gazebo_models PR 140](#!/osrf/gazebo_models/pull-request/140/added-submarines-of-varying-density) and the `underwater.world` included in this PR. One submarine will float to the top of the world, one will sink, and the other will stay afloat at a constant height (though it may spin due to its off-balance center of gravity). You should be able to get the yellow submarine to propel itself by using the left-hand menu to spin its propeller joint at a constant velocity. This is not due to buoyancy alone; the submarines also use the LiftDragPlugin.\r\n\r\nThe implementation uses Archimedes' principle, which you can read about on [Wikipedia](http://en.wikipedia.org/wiki/Buoyancy):\r\n\r\n```\r\nobject density / fluid density = weight / weight of displaced fluid\r\n```\r\n\r\nwhere \"weight\" is the force on the object due to gravity, `mass*gravity`. The \"weight of the displaced fluid\" is the buoyancy force. Thus we are solving for\r\n\r\n```\r\nbuoyancy = -(mass*gravity*fluid density/object density)\r\n```\r\n\r\nThe negative sign is included because buoyancy opposes gravity.\r\n\r\nSince `density = mass/volume`, the mass term cancels and we get\r\n\r\n```\r\nbuoyancy = gravity*fluid density*object volume\r\n```\r\n\r\nWe then exert the buoyancy force on the object by calculating buoyancy for each link and calling `Link::AddLinkForce`.\r\n\r\n@scpeters has an alternative way of deriving the buoyancy force by thinking about the pressure exerted on the object due to the fluid, and it gives the same result. Ask him to explain this alternative derivation if you aren't satisfied with the math presented here.", "markup": "markdown", "html": "<p>This pull request introduces the BuoyancyPlugin, which simulates the force opposing gravity exerted on an object immersed in a fluid. It also adds some checks and cleanup to LiftDragPlugin.</p>\n<p>You can compare the effect of the BuoyancyPlugin on objects with different densities using <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/pull-request/140/added-submarines-of-varying-density\" rel=\"nofollow\">gazebo_models PR 140</a> and the <code>underwater.world</code> included in this PR. One submarine will float to the top of the world, one will sink, and the other will stay afloat at a constant height (though it may spin due to its off-balance center of gravity). You should be able to get the yellow submarine to propel itself by using the left-hand menu to spin its propeller joint at a constant velocity. This is not due to buoyancy alone; the submarines also use the LiftDragPlugin.</p>\n<p>The implementation uses Archimedes' principle, which you can read about on <a data-is-external-link=\"true\" href=\"http://en.wikipedia.org/wiki/Buoyancy\" rel=\"nofollow\">Wikipedia</a>:</p>\n<div class=\"codehilite\"><pre><span></span>object density / fluid density = weight / weight of displaced fluid\n</pre></div>\n\n\n<p>where \"weight\" is the force on the object due to gravity, <code>mass*gravity</code>. The \"weight of the displaced fluid\" is the buoyancy force. Thus we are solving for</p>\n<div class=\"codehilite\"><pre><span></span>buoyancy = -(mass*gravity*fluid density/object density)\n</pre></div>\n\n\n<p>The negative sign is included because buoyancy opposes gravity.</p>\n<p>Since <code>density = mass/volume</code>, the mass term cancels and we get</p>\n<div class=\"codehilite\"><pre><span></span>buoyancy = gravity*fluid density*object volume\n</pre></div>\n\n\n<p>We then exert the buoyancy force on the object by calculating buoyancy for each link and calling <code>Link::AddLinkForce</code>.</p>\n<p>@scpeters has an alternative way of deriving the buoyancy force by thinking about the pressure exerted on the object due to the fluid, and it gives the same result. Ask him to explain this alternative derivation if you aren't satisfied with the math presented here.</p>", "type": "rendered"}, "title": {"raw": "BuoyancyPlugin for fluid dynamics simulation", "markup": "markdown", "html": "<p>BuoyancyPlugin for fluid dynamics simulation</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request introduces the BuoyancyPlugin, which simulates the force opposing gravity exerted on an object immersed in a fluid. It also adds some checks and cleanup to LiftDragPlugin.\r\n\r\nYou can compare the effect of the BuoyancyPlugin on objects with different densities using [gazebo_models PR 140](#!/osrf/gazebo_models/pull-request/140/added-submarines-of-varying-density) and the `underwater.world` included in this PR. One submarine will float to the top of the world, one will sink, and the other will stay afloat at a constant height (though it may spin due to its off-balance center of gravity). You should be able to get the yellow submarine to propel itself by using the left-hand menu to spin its propeller joint at a constant velocity. This is not due to buoyancy alone; the submarines also use the LiftDragPlugin.\r\n\r\nThe implementation uses Archimedes' principle, which you can read about on [Wikipedia](http://en.wikipedia.org/wiki/Buoyancy):\r\n\r\n```\r\nobject density / fluid density = weight / weight of displaced fluid\r\n```\r\n\r\nwhere \"weight\" is the force on the object due to gravity, `mass*gravity`. The \"weight of the displaced fluid\" is the buoyancy force. Thus we are solving for\r\n\r\n```\r\nbuoyancy = -(mass*gravity*fluid density/object density)\r\n```\r\n\r\nThe negative sign is included because buoyancy opposes gravity.\r\n\r\nSince `density = mass/volume`, the mass term cancels and we get\r\n\r\n```\r\nbuoyancy = gravity*fluid density*object volume\r\n```\r\n\r\nWe then exert the buoyancy force on the object by calculating buoyancy for each link and calling `Link::AddLinkForce`.\r\n\r\n@scpeters has an alternative way of deriving the buoyancy force by thinking about the pressure exerted on the object due to the fluid, and it gives the same result. Ask him to explain this alternative derivation if you aren't satisfied with the math presented here.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1622/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:80a5a6733320%0D106a6371c2b7?from_pullrequest_id=1622"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1622/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1622.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1622/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1622/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1622"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1622/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:80a5a6733320%0D106a6371c2b7?from_pullrequest_id=1622"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1622/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1622/statuses_page=1.json"}}, "title": "BuoyancyPlugin for fluid dynamics simulation", "close_source_branch": true, "reviewers": [{"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}], "id": 1622, "destination": {"commit": {"hash": "106a6371c2b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/106a6371c2b7.json"}, "html": {"href": "#!/osrf/gazebo/commits/106a6371c2b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2015-04-28T23:06:04.194709+00:00", "summary": {"raw": "This pull request introduces the BuoyancyPlugin, which simulates the force opposing gravity exerted on an object immersed in a fluid. It also adds some checks and cleanup to LiftDragPlugin.\r\n\r\nYou can compare the effect of the BuoyancyPlugin on objects with different densities using [gazebo_models PR 140](#!/osrf/gazebo_models/pull-request/140/added-submarines-of-varying-density) and the `underwater.world` included in this PR. One submarine will float to the top of the world, one will sink, and the other will stay afloat at a constant height (though it may spin due to its off-balance center of gravity). You should be able to get the yellow submarine to propel itself by using the left-hand menu to spin its propeller joint at a constant velocity. This is not due to buoyancy alone; the submarines also use the LiftDragPlugin.\r\n\r\nThe implementation uses Archimedes' principle, which you can read about on [Wikipedia](http://en.wikipedia.org/wiki/Buoyancy):\r\n\r\n```\r\nobject density / fluid density = weight / weight of displaced fluid\r\n```\r\n\r\nwhere \"weight\" is the force on the object due to gravity, `mass*gravity`. The \"weight of the displaced fluid\" is the buoyancy force. Thus we are solving for\r\n\r\n```\r\nbuoyancy = -(mass*gravity*fluid density/object density)\r\n```\r\n\r\nThe negative sign is included because buoyancy opposes gravity.\r\n\r\nSince `density = mass/volume`, the mass term cancels and we get\r\n\r\n```\r\nbuoyancy = gravity*fluid density*object volume\r\n```\r\n\r\nWe then exert the buoyancy force on the object by calculating buoyancy for each link and calling `Link::AddLinkForce`.\r\n\r\n@scpeters has an alternative way of deriving the buoyancy force by thinking about the pressure exerted on the object due to the fluid, and it gives the same result. Ask him to explain this alternative derivation if you aren't satisfied with the math presented here.", "markup": "markdown", "html": "<p>This pull request introduces the BuoyancyPlugin, which simulates the force opposing gravity exerted on an object immersed in a fluid. It also adds some checks and cleanup to LiftDragPlugin.</p>\n<p>You can compare the effect of the BuoyancyPlugin on objects with different densities using <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/pull-request/140/added-submarines-of-varying-density\" rel=\"nofollow\">gazebo_models PR 140</a> and the <code>underwater.world</code> included in this PR. One submarine will float to the top of the world, one will sink, and the other will stay afloat at a constant height (though it may spin due to its off-balance center of gravity). You should be able to get the yellow submarine to propel itself by using the left-hand menu to spin its propeller joint at a constant velocity. This is not due to buoyancy alone; the submarines also use the LiftDragPlugin.</p>\n<p>The implementation uses Archimedes' principle, which you can read about on <a data-is-external-link=\"true\" href=\"http://en.wikipedia.org/wiki/Buoyancy\" rel=\"nofollow\">Wikipedia</a>:</p>\n<div class=\"codehilite\"><pre><span></span>object density / fluid density = weight / weight of displaced fluid\n</pre></div>\n\n\n<p>where \"weight\" is the force on the object due to gravity, <code>mass*gravity</code>. The \"weight of the displaced fluid\" is the buoyancy force. Thus we are solving for</p>\n<div class=\"codehilite\"><pre><span></span>buoyancy = -(mass*gravity*fluid density/object density)\n</pre></div>\n\n\n<p>The negative sign is included because buoyancy opposes gravity.</p>\n<p>Since <code>density = mass/volume</code>, the mass term cancels and we get</p>\n<div class=\"codehilite\"><pre><span></span>buoyancy = gravity*fluid density*object volume\n</pre></div>\n\n\n<p>We then exert the buoyancy force on the object by calculating buoyancy for each link and calling <code>Link::AddLinkForce</code>.</p>\n<p>@scpeters has an alternative way of deriving the buoyancy force by thinking about the pressure exerted on the object due to the fluid, and it gives the same result. Ask him to explain this alternative derivation if you aren't satisfied with the math presented here.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ab71dd537039", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ab71dd537039.json"}, "html": {"href": "#!/osrf/gazebo/commits/ab71dd537039"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "fluid_dynamics_plugin"}}, "comment_count": 41, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-05-08T23:35:38.107082+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2015-05-11T16:24:01.829211+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, {"role": "PARTICIPANT", "participated_on": "2015-05-08T15:25:21.837533+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2015-05-11T09:01:55.316573+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2015-04-28T23:14:28.890355+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2015-05-09T00:13:45.424746+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2015-05-11T16:24:01.833339+00:00", "author": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "merge_commit": {"hash": "80a5a6733320", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/80a5a6733320.json"}, "html": {"href": "#!/osrf/gazebo/commits/80a5a6733320"}}}, "closed_by": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}