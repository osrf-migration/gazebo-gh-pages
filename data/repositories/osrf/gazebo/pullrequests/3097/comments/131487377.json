{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3097/comments/131487377.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3097/_/diff#comment-131487377"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3097, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3097.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3097"}}, "title": "Workaround for road segments in world file not being visible in camera sensor output"}, "content": {"raw": "I agree that it isn\u2019t ideal to re-transmit the road messages, and the silent catch on the rendering side seems grotesque as well.\n\nWhen I started looking into this, I was loading a world file with a camera sensor built into it. In this case, just transmitting the road messages on the first physics step solves the issue. However, my desired use case is to spawn a car model with a camera sensor attached to it using `gazebo_ros` and its model spawning service. This results in the camera sensor being created after the first physics update, thereby still missing the road messages. I then implemented the workaround where the road messages are re-transmitted when a new model is spawned.\n\nAlso during my analysis I noticed that the last road message that is sent by the world loader is actually visible in the camera output, even when the camera sensor spawns later. This would explain the phenomenon reported in the [answer](http://answers.gazebosim.org/question/12553/road-visuals-not-shown-in-published-camera-image/?answer=20509#post-id-20509) to the gazebosim.org question on this issue. From my ignorance of the underlying messaging layer, this seems to indicate there is a latched message buffer of size 1. If I\u2019m correct in this assumption, perhaps the buffer size could be increased to support a reasonable number of roads in a world?\n\n\u200c", "markup": "markdown", "html": "<p>I agree that it isn\u2019t ideal to re-transmit the road messages, and the silent catch on the rendering side seems grotesque as well.</p>\n<p>When I started looking into this, I was loading a world file with a camera sensor built into it. In this case, just transmitting the road messages on the first physics step solves the issue. However, my desired use case is to spawn a car model with a camera sensor attached to it using <code>gazebo_ros</code> and its model spawning service. This results in the camera sensor being created after the first physics update, thereby still missing the road messages. I then implemented the workaround where the road messages are re-transmitted when a new model is spawned.</p>\n<p>Also during my analysis I noticed that the last road message that is sent by the world loader is actually visible in the camera output, even when the camera sensor spawns later. This would explain the phenomenon reported in the <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/12553/road-visuals-not-shown-in-published-camera-image/?answer=20509#post-id-20509\" rel=\"nofollow\">answer</a> to the gazebosim.org question on this issue. From my ignorance of the underlying messaging layer, this seems to indicate there is a latched message buffer of size 1. If I\u2019m correct in this assumption, perhaps the buffer size could be increased to support a reasonable number of roads in a world?</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-01-14T02:38:17.130157+00:00", "user": {"display_name": "Micho Radovnikovich", "uuid": "{a0c412bd-dfff-4347-ad22-72baef552eea}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba0c412bd-dfff-4347-ad22-72baef552eea%7D"}, "html": {"href": "https://bitbucket.org/%7Ba0c412bd-dfff-4347-ad22-72baef552eea%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:619abb83-31a0-42fe-a248-af179f545e4d/70585065-37d7-4edc-91aa-597b2bcb1d6f/128"}}, "nickname": "Micho Radovnikovich", "type": "user", "account_id": "557058:619abb83-31a0-42fe-a248-af179f545e4d"}, "updated_on": "2020-01-14T02:38:17.372921+00:00", "type": "pullrequest_comment", "id": 131487377}