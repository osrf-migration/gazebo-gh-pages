{"rendered": {"description": {"raw": "This can be used to set up the environment for gazebo_simulator in ROS with the following patch for gazebo_simulator's gazebo_ros_paths_plugin:\r\n\r\n\r\n```\r\n#!bash\r\nIndex: gazebo/src/gazebo_ros_paths_plugin.cpp\r\n===================================================================\r\n--- gazebo/src/gazebo_ros_paths_plugin.cpp\t(revision 40361)\r\n+++ gazebo/src/gazebo_ros_paths_plugin.cpp\t(working copy)\r\n@@ -151,7 +151,7 @@\r\n       */\r\n \r\n       // set gazebo media paths by adding all packages that exports \"gazebo_media_path\" for gazebo\r\n-      gazebo::common::SystemPaths::Instance()->ClearGazeboPaths();\r\n+      //gazebo::common::SystemPaths::Instance()->ClearGazeboPaths();\r\n       gazebo::common::SystemPaths::Instance()->gazeboPathsFromEnv = false;\r\n       std::vector<std::string> gazebo_media_paths;\r\n       rosPackageGetPluginsDebug(\"gazebo\",\"gazebo_media_path\",gazebo_media_paths);\r\n@@ -161,8 +161,8 @@\r\n         gazebo::common::SystemPaths::Instance()->AddGazeboPaths(iter->c_str());\r\n       }\r\n \r\n-      // set gazebo plugins paths by adding all packages that exports \"plugin\" for gazebo\r\n-      gazebo::common::SystemPaths::Instance()->ClearPluginPaths();\r\n+      // set gazebo plugins paths by adding all packages that exports \"plugin_path\" for gazebo\r\n+      //gazebo::common::SystemPaths::Instance()->ClearPluginPaths();\r\n       gazebo::common::SystemPaths::Instance()->pluginPathsFromEnv = false;\r\n       std::vector<std::string> plugin_paths;\r\n       rosPackageGetPluginsDebug(\"gazebo\",\"plugin_path\",plugin_paths);\r\n@@ -172,6 +172,17 @@\r\n         gazebo::common::SystemPaths::Instance()->AddPluginPaths(iter->c_str());\r\n       }\r\n \r\n+      // set model paths by adding all packages that exports \"gazebo_model_path\" for gazebo\r\n+      //gazebo::common::SystemPaths::Instance()->ClearModelPaths();\r\n+      gazebo::common::SystemPaths::Instance()->modelPathsFromEnv = false;\r\n+      std::vector<std::string> model_paths;\r\n+      rosPackageGetPluginsDebug(\"gazebo\",\"gazebo_model_path\",model_paths);\r\n+      for (std::vector<std::string>::iterator iter=model_paths.begin(); iter != model_paths.end(); iter++)\r\n+      {\r\n+        ROS_DEBUG(\"model path %s\",(*iter).c_str());\r\n+        gazebo::common::SystemPaths::Instance()->AddModelPaths(iter->c_str());\r\n+      }\r\n+\r\n       // set .gazeborc path to something else, so we don't pick up default ~/.gazeborc\r\n       std::string gazeborc = ros::package::getPath(\"gazebo\")+\"/.do_not_use_gazeborc\";\r\n       setenv(\"GAZEBORC\",gazeborc.c_str(),1);\r\n\r\n```\r\n\r\n", "markup": "markdown", "html": "<p>This can be used to set up the environment for gazebo_simulator in ROS with the following patch for gazebo_simulator's gazebo_ros_paths_plugin:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>Index: gazebo/src/gazebo_ros_paths_plugin.cpp\n<span class=\"o\">===================================================================</span>\n--- gazebo/src/gazebo_ros_paths_plugin.cpp  <span class=\"o\">(</span>revision <span class=\"m\">40361</span><span class=\"o\">)</span>\n+++ gazebo/src/gazebo_ros_paths_plugin.cpp  <span class=\"o\">(</span>working copy<span class=\"o\">)</span>\n@@ -151,7 +151,7 @@\n       */\n\n       // <span class=\"nb\">set</span> gazebo media paths by adding all packages that exports <span class=\"s2\">&quot;gazebo_media_path&quot;</span> <span class=\"k\">for</span> gazebo\n-      gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearGazeboPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n+      //gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearGazeboPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n       gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;gazeboPathsFromEnv <span class=\"o\">=</span> false<span class=\"p\">;</span>\n       std::vector&lt;std::string&gt; gazebo_media_paths<span class=\"p\">;</span>\n       rosPackageGetPluginsDebug<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span>,<span class=\"s2\">&quot;gazebo_media_path&quot;</span>,gazebo_media_paths<span class=\"o\">)</span><span class=\"p\">;</span>\n@@ -161,8 +161,8 @@\n         gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;AddGazeboPaths<span class=\"o\">(</span>iter-&gt;c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n       <span class=\"o\">}</span>\n\n-      // <span class=\"nb\">set</span> gazebo plugins paths by adding all packages that exports <span class=\"s2\">&quot;plugin&quot;</span> <span class=\"k\">for</span> gazebo\n-      gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearPluginPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n+      // <span class=\"nb\">set</span> gazebo plugins paths by adding all packages that exports <span class=\"s2\">&quot;plugin_path&quot;</span> <span class=\"k\">for</span> gazebo\n+      //gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearPluginPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n       gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;pluginPathsFromEnv <span class=\"o\">=</span> false<span class=\"p\">;</span>\n       std::vector&lt;std::string&gt; plugin_paths<span class=\"p\">;</span>\n       rosPackageGetPluginsDebug<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span>,<span class=\"s2\">&quot;plugin_path&quot;</span>,plugin_paths<span class=\"o\">)</span><span class=\"p\">;</span>\n@@ -172,6 +172,17 @@\n         gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;AddPluginPaths<span class=\"o\">(</span>iter-&gt;c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n       <span class=\"o\">}</span>\n\n+      // <span class=\"nb\">set</span> model paths by adding all packages that exports <span class=\"s2\">&quot;gazebo_model_path&quot;</span> <span class=\"k\">for</span> gazebo\n+      //gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearModelPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n+      gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;modelPathsFromEnv <span class=\"o\">=</span> false<span class=\"p\">;</span>\n+      std::vector&lt;std::string&gt; model_paths<span class=\"p\">;</span>\n+      rosPackageGetPluginsDebug<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span>,<span class=\"s2\">&quot;gazebo_model_path&quot;</span>,model_paths<span class=\"o\">)</span><span class=\"p\">;</span>\n+      <span class=\"k\">for</span> <span class=\"o\">(</span>std::vector&lt;std::string&gt;::iterator <span class=\"nv\">iter</span><span class=\"o\">=</span>model_paths.begin<span class=\"o\">()</span><span class=\"p\">;</span> iter !<span class=\"o\">=</span> model_paths.end<span class=\"o\">()</span><span class=\"p\">;</span> iter++<span class=\"o\">)</span>\n+      <span class=\"o\">{</span>\n+        ROS_DEBUG<span class=\"o\">(</span><span class=\"s2\">&quot;model path %s&quot;</span>,<span class=\"o\">(</span>*iter<span class=\"o\">)</span>.c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n+        gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;AddModelPaths<span class=\"o\">(</span>iter-&gt;c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n+      <span class=\"o\">}</span>\n+\n       // <span class=\"nb\">set</span> .gazeborc path to something <span class=\"k\">else</span>, so we don<span class=\"err\">&#39;</span>t pick up default ~/.gazeborc\n       std::string <span class=\"nv\">gazeborc</span> <span class=\"o\">=</span> ros::package::getPath<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span><span class=\"o\">)</span>+<span class=\"s2\">&quot;/.do_not_use_gazeborc&quot;</span><span class=\"p\">;</span>\n       setenv<span class=\"o\">(</span><span class=\"s2\">&quot;GAZEBORC&quot;</span>,gazeborc.c_str<span class=\"o\">()</span>,1<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Added ClearModelPaths and AddModelPaths for the ModelPath, analog to the other system paths", "markup": "markdown", "html": "<p>Added ClearModelPaths and AddModelPaths for the ModelPath, analog to the other system paths</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This can be used to set up the environment for gazebo_simulator in ROS with the following patch for gazebo_simulator's gazebo_ros_paths_plugin:\r\n\r\n\r\n```\r\n#!bash\r\nIndex: gazebo/src/gazebo_ros_paths_plugin.cpp\r\n===================================================================\r\n--- gazebo/src/gazebo_ros_paths_plugin.cpp\t(revision 40361)\r\n+++ gazebo/src/gazebo_ros_paths_plugin.cpp\t(working copy)\r\n@@ -151,7 +151,7 @@\r\n       */\r\n \r\n       // set gazebo media paths by adding all packages that exports \"gazebo_media_path\" for gazebo\r\n-      gazebo::common::SystemPaths::Instance()->ClearGazeboPaths();\r\n+      //gazebo::common::SystemPaths::Instance()->ClearGazeboPaths();\r\n       gazebo::common::SystemPaths::Instance()->gazeboPathsFromEnv = false;\r\n       std::vector<std::string> gazebo_media_paths;\r\n       rosPackageGetPluginsDebug(\"gazebo\",\"gazebo_media_path\",gazebo_media_paths);\r\n@@ -161,8 +161,8 @@\r\n         gazebo::common::SystemPaths::Instance()->AddGazeboPaths(iter->c_str());\r\n       }\r\n \r\n-      // set gazebo plugins paths by adding all packages that exports \"plugin\" for gazebo\r\n-      gazebo::common::SystemPaths::Instance()->ClearPluginPaths();\r\n+      // set gazebo plugins paths by adding all packages that exports \"plugin_path\" for gazebo\r\n+      //gazebo::common::SystemPaths::Instance()->ClearPluginPaths();\r\n       gazebo::common::SystemPaths::Instance()->pluginPathsFromEnv = false;\r\n       std::vector<std::string> plugin_paths;\r\n       rosPackageGetPluginsDebug(\"gazebo\",\"plugin_path\",plugin_paths);\r\n@@ -172,6 +172,17 @@\r\n         gazebo::common::SystemPaths::Instance()->AddPluginPaths(iter->c_str());\r\n       }\r\n \r\n+      // set model paths by adding all packages that exports \"gazebo_model_path\" for gazebo\r\n+      //gazebo::common::SystemPaths::Instance()->ClearModelPaths();\r\n+      gazebo::common::SystemPaths::Instance()->modelPathsFromEnv = false;\r\n+      std::vector<std::string> model_paths;\r\n+      rosPackageGetPluginsDebug(\"gazebo\",\"gazebo_model_path\",model_paths);\r\n+      for (std::vector<std::string>::iterator iter=model_paths.begin(); iter != model_paths.end(); iter++)\r\n+      {\r\n+        ROS_DEBUG(\"model path %s\",(*iter).c_str());\r\n+        gazebo::common::SystemPaths::Instance()->AddModelPaths(iter->c_str());\r\n+      }\r\n+\r\n       // set .gazeborc path to something else, so we don't pick up default ~/.gazeborc\r\n       std::string gazeborc = ros::package::getPath(\"gazebo\")+\"/.do_not_use_gazeborc\";\r\n       setenv(\"GAZEBORC\",gazeborc.c_str(),1);\r\n\r\n```\r\n\r\n", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/291/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:356b69084089%0Dc0a51689fd8e?from_pullrequest_id=291"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/291/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/291.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/291/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/291/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/291"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/291/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:356b69084089%0Dc0a51689fd8e?from_pullrequest_id=291"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/291/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/291/statuses_page=1.json"}}, "title": "Added ClearModelPaths and AddModelPaths for the ModelPath, analog to the other system paths", "close_source_branch": false, "reviewers": [], "id": 291, "destination": {"commit": {"hash": "c0a51689fd8e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c0a51689fd8e.json"}, "html": {"href": "#!/osrf/gazebo/commits/c0a51689fd8e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2013-02-13T17:02:22.559414+00:00", "summary": {"raw": "This can be used to set up the environment for gazebo_simulator in ROS with the following patch for gazebo_simulator's gazebo_ros_paths_plugin:\r\n\r\n\r\n```\r\n#!bash\r\nIndex: gazebo/src/gazebo_ros_paths_plugin.cpp\r\n===================================================================\r\n--- gazebo/src/gazebo_ros_paths_plugin.cpp\t(revision 40361)\r\n+++ gazebo/src/gazebo_ros_paths_plugin.cpp\t(working copy)\r\n@@ -151,7 +151,7 @@\r\n       */\r\n \r\n       // set gazebo media paths by adding all packages that exports \"gazebo_media_path\" for gazebo\r\n-      gazebo::common::SystemPaths::Instance()->ClearGazeboPaths();\r\n+      //gazebo::common::SystemPaths::Instance()->ClearGazeboPaths();\r\n       gazebo::common::SystemPaths::Instance()->gazeboPathsFromEnv = false;\r\n       std::vector<std::string> gazebo_media_paths;\r\n       rosPackageGetPluginsDebug(\"gazebo\",\"gazebo_media_path\",gazebo_media_paths);\r\n@@ -161,8 +161,8 @@\r\n         gazebo::common::SystemPaths::Instance()->AddGazeboPaths(iter->c_str());\r\n       }\r\n \r\n-      // set gazebo plugins paths by adding all packages that exports \"plugin\" for gazebo\r\n-      gazebo::common::SystemPaths::Instance()->ClearPluginPaths();\r\n+      // set gazebo plugins paths by adding all packages that exports \"plugin_path\" for gazebo\r\n+      //gazebo::common::SystemPaths::Instance()->ClearPluginPaths();\r\n       gazebo::common::SystemPaths::Instance()->pluginPathsFromEnv = false;\r\n       std::vector<std::string> plugin_paths;\r\n       rosPackageGetPluginsDebug(\"gazebo\",\"plugin_path\",plugin_paths);\r\n@@ -172,6 +172,17 @@\r\n         gazebo::common::SystemPaths::Instance()->AddPluginPaths(iter->c_str());\r\n       }\r\n \r\n+      // set model paths by adding all packages that exports \"gazebo_model_path\" for gazebo\r\n+      //gazebo::common::SystemPaths::Instance()->ClearModelPaths();\r\n+      gazebo::common::SystemPaths::Instance()->modelPathsFromEnv = false;\r\n+      std::vector<std::string> model_paths;\r\n+      rosPackageGetPluginsDebug(\"gazebo\",\"gazebo_model_path\",model_paths);\r\n+      for (std::vector<std::string>::iterator iter=model_paths.begin(); iter != model_paths.end(); iter++)\r\n+      {\r\n+        ROS_DEBUG(\"model path %s\",(*iter).c_str());\r\n+        gazebo::common::SystemPaths::Instance()->AddModelPaths(iter->c_str());\r\n+      }\r\n+\r\n       // set .gazeborc path to something else, so we don't pick up default ~/.gazeborc\r\n       std::string gazeborc = ros::package::getPath(\"gazebo\")+\"/.do_not_use_gazeborc\";\r\n       setenv(\"GAZEBORC\",gazeborc.c_str(),1);\r\n\r\n```\r\n\r\n", "markup": "markdown", "html": "<p>This can be used to set up the environment for gazebo_simulator in ROS with the following patch for gazebo_simulator's gazebo_ros_paths_plugin:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>Index: gazebo/src/gazebo_ros_paths_plugin.cpp\n<span class=\"o\">===================================================================</span>\n--- gazebo/src/gazebo_ros_paths_plugin.cpp  <span class=\"o\">(</span>revision <span class=\"m\">40361</span><span class=\"o\">)</span>\n+++ gazebo/src/gazebo_ros_paths_plugin.cpp  <span class=\"o\">(</span>working copy<span class=\"o\">)</span>\n@@ -151,7 +151,7 @@\n       */\n\n       // <span class=\"nb\">set</span> gazebo media paths by adding all packages that exports <span class=\"s2\">&quot;gazebo_media_path&quot;</span> <span class=\"k\">for</span> gazebo\n-      gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearGazeboPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n+      //gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearGazeboPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n       gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;gazeboPathsFromEnv <span class=\"o\">=</span> false<span class=\"p\">;</span>\n       std::vector&lt;std::string&gt; gazebo_media_paths<span class=\"p\">;</span>\n       rosPackageGetPluginsDebug<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span>,<span class=\"s2\">&quot;gazebo_media_path&quot;</span>,gazebo_media_paths<span class=\"o\">)</span><span class=\"p\">;</span>\n@@ -161,8 +161,8 @@\n         gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;AddGazeboPaths<span class=\"o\">(</span>iter-&gt;c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n       <span class=\"o\">}</span>\n\n-      // <span class=\"nb\">set</span> gazebo plugins paths by adding all packages that exports <span class=\"s2\">&quot;plugin&quot;</span> <span class=\"k\">for</span> gazebo\n-      gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearPluginPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n+      // <span class=\"nb\">set</span> gazebo plugins paths by adding all packages that exports <span class=\"s2\">&quot;plugin_path&quot;</span> <span class=\"k\">for</span> gazebo\n+      //gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearPluginPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n       gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;pluginPathsFromEnv <span class=\"o\">=</span> false<span class=\"p\">;</span>\n       std::vector&lt;std::string&gt; plugin_paths<span class=\"p\">;</span>\n       rosPackageGetPluginsDebug<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span>,<span class=\"s2\">&quot;plugin_path&quot;</span>,plugin_paths<span class=\"o\">)</span><span class=\"p\">;</span>\n@@ -172,6 +172,17 @@\n         gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;AddPluginPaths<span class=\"o\">(</span>iter-&gt;c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n       <span class=\"o\">}</span>\n\n+      // <span class=\"nb\">set</span> model paths by adding all packages that exports <span class=\"s2\">&quot;gazebo_model_path&quot;</span> <span class=\"k\">for</span> gazebo\n+      //gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;ClearModelPaths<span class=\"o\">()</span><span class=\"p\">;</span>\n+      gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;modelPathsFromEnv <span class=\"o\">=</span> false<span class=\"p\">;</span>\n+      std::vector&lt;std::string&gt; model_paths<span class=\"p\">;</span>\n+      rosPackageGetPluginsDebug<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span>,<span class=\"s2\">&quot;gazebo_model_path&quot;</span>,model_paths<span class=\"o\">)</span><span class=\"p\">;</span>\n+      <span class=\"k\">for</span> <span class=\"o\">(</span>std::vector&lt;std::string&gt;::iterator <span class=\"nv\">iter</span><span class=\"o\">=</span>model_paths.begin<span class=\"o\">()</span><span class=\"p\">;</span> iter !<span class=\"o\">=</span> model_paths.end<span class=\"o\">()</span><span class=\"p\">;</span> iter++<span class=\"o\">)</span>\n+      <span class=\"o\">{</span>\n+        ROS_DEBUG<span class=\"o\">(</span><span class=\"s2\">&quot;model path %s&quot;</span>,<span class=\"o\">(</span>*iter<span class=\"o\">)</span>.c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n+        gazebo::common::SystemPaths::Instance<span class=\"o\">()</span>-&gt;AddModelPaths<span class=\"o\">(</span>iter-&gt;c_str<span class=\"o\">())</span><span class=\"p\">;</span>\n+      <span class=\"o\">}</span>\n+\n       // <span class=\"nb\">set</span> .gazeborc path to something <span class=\"k\">else</span>, so we don<span class=\"err\">&#39;</span>t pick up default ~/.gazeborc\n       std::string <span class=\"nv\">gazeborc</span> <span class=\"o\">=</span> ros::package::getPath<span class=\"o\">(</span><span class=\"s2\">&quot;gazebo&quot;</span><span class=\"o\">)</span>+<span class=\"s2\">&quot;/.do_not_use_gazeborc&quot;</span><span class=\"p\">;</span>\n       setenv<span class=\"o\">(</span><span class=\"s2\">&quot;GAZEBORC&quot;</span>,gazeborc.c_str<span class=\"o\">()</span>,1<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "bd369af19778", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ffurrer/gazebo/commit/bd369af19778"}, "html": {"href": "https://bitbucket.org/ffurrer/gazebo/commits/bd369af19778"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ffurrer/gazebo"}, "html": {"href": "https://bitbucket.org/ffurrer/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{20e46455-54d2-4b50-8b34-3f4391112963}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "ffurrer/gazebo", "uuid": "{20e46455-54d2-4b50-8b34-3f4391112963}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2013-02-13T17:04:36.400020+00:00", "type": "participant", "approved": false, "user": {"display_name": "Fadri Furrer", "uuid": "{71ff7193-e7dc-452f-ba2f-da743018ab54}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71ff7193-e7dc-452f-ba2f-da743018ab54%7D"}, "html": {"href": "https://bitbucket.org/%7B71ff7193-e7dc-452f-ba2f-da743018ab54%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b4b09d874026ebb17a303fefc1c42a99d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsFF-3.png"}}, "nickname": "ffurrer", "type": "user", "account_id": "557058:b59ba506-a9fb-4e9a-bbf1-f67d12819f7e"}}, {"role": "PARTICIPANT", "participated_on": "2013-02-13T17:10:57.918057+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2013-02-23T16:10:47.213036+00:00", "type": "participant", "approved": true, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}], "reason": "", "updated_on": "2013-02-23T16:10:47.516316+00:00", "author": {"display_name": "Fadri Furrer", "uuid": "{71ff7193-e7dc-452f-ba2f-da743018ab54}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71ff7193-e7dc-452f-ba2f-da743018ab54%7D"}, "html": {"href": "https://bitbucket.org/%7B71ff7193-e7dc-452f-ba2f-da743018ab54%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b4b09d874026ebb17a303fefc1c42a99d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsFF-3.png"}}, "nickname": "ffurrer", "type": "user", "account_id": "557058:b59ba506-a9fb-4e9a-bbf1-f67d12819f7e"}, "merge_commit": {"hash": "356b69084089", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/356b69084089.json"}, "html": {"href": "#!/osrf/gazebo/commits/356b69084089"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}