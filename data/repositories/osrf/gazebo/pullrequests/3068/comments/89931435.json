{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3068/comments/89931435.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3068/_/diff#comment-89931435"}}, "parent": {"id": 89891554, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3068/comments/89891554.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3068/_/diff#comment-89891554"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3068, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3068.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3068"}}, "title": "[Gazebo9] Enabling dynamic linking for Windows build"}, "content": {"raw": "In my setup, I can see the gz SIGABRT in my case. The call stack looks similar. [https://gist.github.com/seanyen-msft/526825ad16de69550b075d511947cebc](https://gist.github.com/seanyen-msft/526825ad16de69550b075d511947cebc)  \n  \nI suspect it is related to the global initializer usage \\(however I don\u2019t know why it manifests along with my change\\). Do you know the background why the global initializer was added? Is it related to thread-safe initialization prior to C\\+\\+11? Since C\\+\\+11 now supports thread-safe local static initializer, perhaps we can conditionally remove it? In my case, without the global initializer code, the SIGABRT just went away.\n\nAnd can you help re-spin the CI to see if it works?", "markup": "markdown", "html": "<p>In my setup, I can see the gz SIGABRT in my case. The call stack looks similar. <a data-is-external-link=\"true\" href=\"https://gist.github.com/seanyen-msft/526825ad16de69550b075d511947cebc\" rel=\"nofollow\">https://gist.github.com/seanyen-msft/526825ad16de69550b075d511947cebc</a>  </p>\n<p>I suspect it is related to the global initializer usage (however I don\u2019t know why it manifests along with my change). Do you know the background why the global initializer was added? Is it related to thread-safe initialization prior to C++11? Since C++11 now supports thread-safe local static initializer, perhaps we can conditionally remove it? In my case, without the global initializer code, the SIGABRT just went away.</p>\n<p>And can you help re-spin the CI to see if it works?</p>", "type": "rendered"}, "created_on": "2019-01-31T05:32:32.286063+00:00", "user": {"display_name": "Sean Yen", "uuid": "{9f25a1e7-e37c-4707-a084-64e8be6f3785}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9f25a1e7-e37c-4707-a084-64e8be6f3785%7D"}, "html": {"href": "https://bitbucket.org/%7B9f25a1e7-e37c-4707-a084-64e8be6f3785%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/43d814e31d04558e27441fa34acea489d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSY-3.png"}}, "nickname": "seanyen-msft", "type": "user", "account_id": "5bee878f5416561374c46bd9"}, "updated_on": "2019-01-31T05:32:32.374150+00:00", "type": "pullrequest_comment", "id": 89931435}