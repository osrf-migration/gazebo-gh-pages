{"rendered": {"reason": {"raw": "explore test failure", "markup": "markdown", "html": "<p>explore test failure</p>", "type": "rendered"}, "description": {"raw": "When creating a rigid body in bullet, only diagonal inertia terms are accepted for the moment of inertia matrix in the body-fixed frame (`btRigidBodyConstructionInfo::m_localInertia` [is a btVector3](https://github.com/bulletphysics/bullet3/blob/master/src/BulletDynamics/Dynamics/btRigidBody.h#L129)). As such, we have been ignoring off-diagonal terms in the moment of inertia matrix. With the recent additions to `ignition::math::MassMatrix3`, it is now straight-forward to diagonalize the inertia matrices to properly express these matrices in bullet. A [failing test case](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/103/testReport/junit/(root)/PhysicsEngines_PhysicsLinkTest/GetWorldInertia_1/) was added in 5ad26bcd3fec and fixed in f00c768, 6ef5d85.\r\n\r\nI've also included some small related fixes and re-factoring:\r\n\r\n* Add helper functions for converting from `gazebo::physics::Inertial` to `ignition::math::Inertiald`\r\n\r\n* f34c168: Fix triangle inequality expectation to >= instead of >\r\n\r\n* Use new ignition::math `SetFromGeometry` helper functions in msgs.cc and ModelData.cc to de-duplicate some inertia computation code\r\n\r\ncc @erwincoumans in case you've wondered about supporting off-diagonal inertia terms expressed in URDF", "markup": "markdown", "html": "<p>When creating a rigid body in bullet, only diagonal inertia terms are accepted for the moment of inertia matrix in the body-fixed frame (<code>btRigidBodyConstructionInfo::m_localInertia</code> <a data-is-external-link=\"true\" href=\"https://github.com/bulletphysics/bullet3/blob/master/src/BulletDynamics/Dynamics/btRigidBody.h#L129\" rel=\"nofollow\">is a btVector3</a>). As such, we have been ignoring off-diagonal terms in the moment of inertia matrix. With the recent additions to <code>ignition::math::MassMatrix3</code>, it is now straight-forward to diagonalize the inertia matrices to properly express these matrices in bullet. A <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/103/testReport/junit/(root)/PhysicsEngines_PhysicsLinkTest/GetWorldInertia_1/\" rel=\"nofollow\">failing test case</a> was added in <a href=\"#!/osrf/gazebo/commits/5ad26bcd3fec\" rel=\"nofollow\" class=\"ap-connect-link\">5ad26bcd3fec</a> and fixed in <a href=\"#!/osrf/gazebo/commits/f00c768\" rel=\"nofollow\" class=\"ap-connect-link\">f00c768</a>, <a href=\"#!/osrf/gazebo/commits/6ef5d85\" rel=\"nofollow\" class=\"ap-connect-link\">6ef5d85</a>.</p>\n<p>I've also included some small related fixes and re-factoring:</p>\n<ul>\n<li>\n<p>Add helper functions for converting from <code>gazebo::physics::Inertial</code> to <code>ignition::math::Inertiald</code></p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/f34c168\" rel=\"nofollow\" class=\"ap-connect-link\">f34c168</a>: Fix triangle inequality expectation to &gt;= instead of &gt;</p>\n</li>\n<li>\n<p>Use new ignition::math <code>SetFromGeometry</code> helper functions in msgs.cc and ModelData.cc to de-duplicate some inertia computation code</p>\n</li>\n</ul>\n<p>cc @erwincoumans in case you've wondered about supporting off-diagonal inertia terms expressed in URDF</p>", "type": "rendered"}, "title": {"raw": "Support off-diagonal inertia terms in bullet", "markup": "markdown", "html": "<p>Support off-diagonal inertia terms in bullet</p>", "type": "rendered"}}, "type": "pullrequest", "description": "When creating a rigid body in bullet, only diagonal inertia terms are accepted for the moment of inertia matrix in the body-fixed frame (`btRigidBodyConstructionInfo::m_localInertia` [is a btVector3](https://github.com/bulletphysics/bullet3/blob/master/src/BulletDynamics/Dynamics/btRigidBody.h#L129)). As such, we have been ignoring off-diagonal terms in the moment of inertia matrix. With the recent additions to `ignition::math::MassMatrix3`, it is now straight-forward to diagonalize the inertia matrices to properly express these matrices in bullet. A [failing test case](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/103/testReport/junit/(root)/PhysicsEngines_PhysicsLinkTest/GetWorldInertia_1/) was added in 5ad26bcd3fec and fixed in f00c768, 6ef5d85.\r\n\r\nI've also included some small related fixes and re-factoring:\r\n\r\n* Add helper functions for converting from `gazebo::physics::Inertial` to `ignition::math::Inertiald`\r\n\r\n* f34c168: Fix triangle inequality expectation to >= instead of >\r\n\r\n* Use new ignition::math `SetFromGeometry` helper functions in msgs.cc and ModelData.cc to de-duplicate some inertia computation code\r\n\r\ncc @erwincoumans in case you've wondered about supporting off-diagonal inertia terms expressed in URDF", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2396/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:6ef5d8580229%0D1aa36c77c8be?from_pullrequest_id=2396"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2396/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2396.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2396/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2396/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2396"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2396/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:6ef5d8580229%0D1aa36c77c8be?from_pullrequest_id=2396"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2396/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2396/statuses_page=1.json"}}, "title": "Support off-diagonal inertia terms in bullet", "close_source_branch": false, "reviewers": [], "id": 2396, "destination": {"commit": {"hash": "1aa36c77c8be", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1aa36c77c8be.json"}, "html": {"href": "#!/osrf/gazebo/commits/1aa36c77c8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2016-07-15T19:42:15.347769+00:00", "summary": {"raw": "When creating a rigid body in bullet, only diagonal inertia terms are accepted for the moment of inertia matrix in the body-fixed frame (`btRigidBodyConstructionInfo::m_localInertia` [is a btVector3](https://github.com/bulletphysics/bullet3/blob/master/src/BulletDynamics/Dynamics/btRigidBody.h#L129)). As such, we have been ignoring off-diagonal terms in the moment of inertia matrix. With the recent additions to `ignition::math::MassMatrix3`, it is now straight-forward to diagonalize the inertia matrices to properly express these matrices in bullet. A [failing test case](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/103/testReport/junit/(root)/PhysicsEngines_PhysicsLinkTest/GetWorldInertia_1/) was added in 5ad26bcd3fec and fixed in f00c768, 6ef5d85.\r\n\r\nI've also included some small related fixes and re-factoring:\r\n\r\n* Add helper functions for converting from `gazebo::physics::Inertial` to `ignition::math::Inertiald`\r\n\r\n* f34c168: Fix triangle inequality expectation to >= instead of >\r\n\r\n* Use new ignition::math `SetFromGeometry` helper functions in msgs.cc and ModelData.cc to de-duplicate some inertia computation code\r\n\r\ncc @erwincoumans in case you've wondered about supporting off-diagonal inertia terms expressed in URDF", "markup": "markdown", "html": "<p>When creating a rigid body in bullet, only diagonal inertia terms are accepted for the moment of inertia matrix in the body-fixed frame (<code>btRigidBodyConstructionInfo::m_localInertia</code> <a data-is-external-link=\"true\" href=\"https://github.com/bulletphysics/bullet3/blob/master/src/BulletDynamics/Dynamics/btRigidBody.h#L129\" rel=\"nofollow\">is a btVector3</a>). As such, we have been ignoring off-diagonal terms in the moment of inertia matrix. With the recent additions to <code>ignition::math::MassMatrix3</code>, it is now straight-forward to diagonalize the inertia matrices to properly express these matrices in bullet. A <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/103/testReport/junit/(root)/PhysicsEngines_PhysicsLinkTest/GetWorldInertia_1/\" rel=\"nofollow\">failing test case</a> was added in <a href=\"#!/osrf/gazebo/commits/5ad26bcd3fec\" rel=\"nofollow\" class=\"ap-connect-link\">5ad26bcd3fec</a> and fixed in <a href=\"#!/osrf/gazebo/commits/f00c768\" rel=\"nofollow\" class=\"ap-connect-link\">f00c768</a>, <a href=\"#!/osrf/gazebo/commits/6ef5d85\" rel=\"nofollow\" class=\"ap-connect-link\">6ef5d85</a>.</p>\n<p>I've also included some small related fixes and re-factoring:</p>\n<ul>\n<li>\n<p>Add helper functions for converting from <code>gazebo::physics::Inertial</code> to <code>ignition::math::Inertiald</code></p>\n</li>\n<li>\n<p><a href=\"#!/osrf/gazebo/commits/f34c168\" rel=\"nofollow\" class=\"ap-connect-link\">f34c168</a>: Fix triangle inequality expectation to &gt;= instead of &gt;</p>\n</li>\n<li>\n<p>Use new ignition::math <code>SetFromGeometry</code> helper functions in msgs.cc and ModelData.cc to de-duplicate some inertia computation code</p>\n</li>\n</ul>\n<p>cc @erwincoumans in case you've wondered about supporting off-diagonal inertia terms expressed in URDF</p>", "type": "rendered"}, "source": {"commit": {"hash": "6ef5d8580229", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6ef5d8580229.json"}, "html": {"href": "#!/osrf/gazebo/commits/6ef5d8580229"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "inertia_vis_part2"}}, "comment_count": 7, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-07-20T00:57:03.894369+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-07-15T20:30:40.894761+00:00", "type": "participant", "approved": false, "user": {"display_name": "Erwin Coumans", "uuid": "{b9e205e2-e767-4e9c-8941-69f62ace28e5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb9e205e2-e767-4e9c-8941-69f62ace28e5%7D"}, "html": {"href": "https://bitbucket.org/%7Bb9e205e2-e767-4e9c-8941-69f62ace28e5%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8ea4a5ee01d648098034464b00259d9dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEC-5.png"}}, "nickname": "erwincoumans", "type": "user", "account_id": "557058:9f08aa50-289c-4810-a184-66f7c0f78159"}}], "reason": "explore test failure", "updated_on": "2017-07-20T00:57:03.925036+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": null, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}