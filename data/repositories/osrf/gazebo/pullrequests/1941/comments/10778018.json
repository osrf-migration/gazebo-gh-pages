{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1941/comments/10778018.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1941/_/diff#comment-10778018"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1941, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1941.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1941"}}, "title": "Wideangle_example"}, "content": {"raw": "@chapulina, [Issue #1763](#!/osrf/gazebo/issues/1763/problem-with-mouse-events-on-qt-gui)\nThis will welp with passing mouse events to 3d scene\n\n```\n#!diff\n\ndiff -r a695c0eb9ae6 examples/plugins/camera_lens_control/CameraLensControlExample.cc\n--- a/examples/plugins/camera_lens_control/CameraLensControlExample.cc\tFri Oct 09 22:10:55 2015 +0000\n+++ b/examples/plugins/camera_lens_control/CameraLensControlExample.cc\tWed Oct 14 03:39:30 2015 +0300\n@@ -52,6 +52,9 @@\n   QWidget *contentWidget = loader.load(&file, this);\n   file.close();\n \n+  // Prevent mouse events propagation to parent widget\n+  contentWidget->installEventFilter(this);\n+\n   // Add loaded widget to layout\n   frameLayout->addWidget(contentWidget);\n \n@@ -333,3 +336,22 @@\n   this->sbC3->setEnabled(isCustom);\n   this->sbF->setEnabled(isCustom);\n }\n+\n+/////////////////////////////////////////////////\n+bool CameraLensControlExample::eventFilter(QObject *_watched, QEvent *_event)\n+{\n+  std::set<QEvent::Type> filtered = { QEvent::MouseButtonDblClick,\n+                                      QEvent::MouseButtonPress,\n+                                      QEvent::MouseButtonRelease,\n+                                      QEvent::MouseMove,\n+                                      QEvent::MouseTrackingChange };\n+\n+  if (filtered.find(_event->type()) != filtered.end())\n+  {\n+    return true;\n+  }\n+  else\n+  {\n+    return _watched->eventFilter(_watched, _event);\n+  }\n+}\ndiff -r a695c0eb9ae6 examples/plugins/camera_lens_control/CameraLensControlExample.hh\n--- a/examples/plugins/camera_lens_control/CameraLensControlExample.hh\tFri Oct 09 22:10:55 2015 +0000\n+++ b/examples/plugins/camera_lens_control/CameraLensControlExample.hh\tWed Oct 14 03:39:30 2015 +0300\n@@ -37,6 +37,11 @@\n     /// \\brief Destructor\n     public: virtual ~CameraLensControlExample();\n \n+    /// \\brief Filter mouse events, so that parent widget won't handle them\n+    /// \\param[in] _watched Receiver of the event\n+    /// \\param[in] _event Event to filter\n+    private: bool eventFilter(QObject *_watched, QEvent *_event) override;\n+\n     /// \\brief Load GUI components\n     /// \\param[in] _parent Pointer to the parent widget\n     private: virtual void LoadGUIComponents(QWidget *_parent);\n\n```", "markup": "markdown", "html": "<p>@chapulina, <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/issues/1763/problem-with-mouse-events-on-qt-gui\" rel=\"nofollow\">Issue #1763</a>\nThis will welp with passing mouse events to 3d scene</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r a695c0eb9ae6 examples/plugins/camera_lens_control/CameraLensControlExample.cc</span>\n<span class=\"gd\">--- a/examples/plugins/camera_lens_control/CameraLensControlExample.cc  Fri Oct 09 22:10:55 2015 +0000</span>\n<span class=\"gi\">+++ b/examples/plugins/camera_lens_control/CameraLensControlExample.cc  Wed Oct 14 03:39:30 2015 +0300</span>\n<span class=\"gu\">@@ -52,6 +52,9 @@</span>\n   QWidget *contentWidget = loader.load(&amp;file, this);\n   file.close();\n\n<span class=\"gi\">+  // Prevent mouse events propagation to parent widget</span>\n<span class=\"gi\">+  contentWidget-&gt;installEventFilter(this);</span>\n<span class=\"gi\">+</span>\n   // Add loaded widget to layout\n   frameLayout-&gt;addWidget(contentWidget);\n\n<span class=\"gu\">@@ -333,3 +336,22 @@</span>\n   this-&gt;sbC3-&gt;setEnabled(isCustom);\n   this-&gt;sbF-&gt;setEnabled(isCustom);\n }\n<span class=\"gi\">+</span>\n<span class=\"gi\">+/////////////////////////////////////////////////</span>\n<span class=\"gi\">+bool CameraLensControlExample::eventFilter(QObject *_watched, QEvent *_event)</span>\n<span class=\"gi\">+{</span>\n<span class=\"gi\">+  std::set&lt;QEvent::Type&gt; filtered = { QEvent::MouseButtonDblClick,</span>\n<span class=\"gi\">+                                      QEvent::MouseButtonPress,</span>\n<span class=\"gi\">+                                      QEvent::MouseButtonRelease,</span>\n<span class=\"gi\">+                                      QEvent::MouseMove,</span>\n<span class=\"gi\">+                                      QEvent::MouseTrackingChange };</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  if (filtered.find(_event-&gt;type()) != filtered.end())</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    return true;</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+  else</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    return _watched-&gt;eventFilter(_watched, _event);</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+}</span>\n<span class=\"gh\">diff -r a695c0eb9ae6 examples/plugins/camera_lens_control/CameraLensControlExample.hh</span>\n<span class=\"gd\">--- a/examples/plugins/camera_lens_control/CameraLensControlExample.hh  Fri Oct 09 22:10:55 2015 +0000</span>\n<span class=\"gi\">+++ b/examples/plugins/camera_lens_control/CameraLensControlExample.hh  Wed Oct 14 03:39:30 2015 +0300</span>\n<span class=\"gu\">@@ -37,6 +37,11 @@</span>\n     /// \\brief Destructor\n     public: virtual ~CameraLensControlExample();\n\n<span class=\"gi\">+    /// \\brief Filter mouse events, so that parent widget won&#39;t handle them</span>\n<span class=\"gi\">+    /// \\param[in] _watched Receiver of the event</span>\n<span class=\"gi\">+    /// \\param[in] _event Event to filter</span>\n<span class=\"gi\">+    private: bool eventFilter(QObject *_watched, QEvent *_event) override;</span>\n<span class=\"gi\">+</span>\n     /// \\brief Load GUI components\n     /// \\param[in] _parent Pointer to the parent widget\n     private: virtual void LoadGUIComponents(QWidget *_parent);\n</pre></div>", "type": "rendered"}, "created_on": "2015-10-14T00:49:33.124431+00:00", "user": {"display_name": "Mykola", "uuid": "{a1fae1dd-4e1e-486f-b0db-ec249a8190f8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba1fae1dd-4e1e-486f-b0db-ec249a8190f8%7D"}, "html": {"href": "https://bitbucket.org/%7Ba1fae1dd-4e1e-486f-b0db-ec249a8190f8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/77e04405e4ad59e926423187e8861531d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-1.png"}}, "nickname": "0xb000", "type": "user", "account_id": "5be46c23bf6b8044f6328081"}, "updated_on": "2015-10-14T01:17:02.838311+00:00", "type": "pullrequest_comment", "id": 10778018}