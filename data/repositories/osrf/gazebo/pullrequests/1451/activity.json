{"pagelen": 50, "values": [{"update": {"description": "It's bad practice to use `using namespace gazebo;` in header files. This pull request replaces this with `namespace gazebo` and brackets in 580691b. The following commit (6e10861) is purely indentation and fixing long line lengths.\r\n\r\nA more concise diff that ignores most of the whitespace using the `-b` flag:\r\n~~~\r\n$ hg up serverfixture_namespace2\r\n$ hg diff -r gazebo5 -b\r\ndiff -r afb30274a742 test/ServerFixture.hh\r\n--- a/test/ServerFixture.hh\tFri Feb 20 18:10:50 2015 -0800\r\n+++ b/test/ServerFixture.hh\tMon Feb 23 14:09:27 2015 -0800\r\n@@ -52,12 +52,12 @@\r\n \r\n #include \"test_config.h\"\r\n \r\n-using namespace gazebo;\r\n+namespace gazebo\r\n+{\r\n+  std::string custom_exec(std::string _cmd);\r\n \r\n-std::string custom_exec(std::string _cmd);\r\n-\r\n-class ServerFixture : public testing::Test\r\n-{\r\n+  class ServerFixture : public testing::Test\r\n+  {\r\n   /// \\brief Constructor\r\n   protected: ServerFixture();\r\n \r\n@@ -75,7 +75,8 @@\r\n   /// paused/un-paused.\r\n   /// \\param[in] _worldFilename Name of the world to load.\r\n   /// \\param[in] _paused True to start the world paused.\r\n-  protected: virtual void Load(const std::string &_worldFilename, bool _paused);\r\n+    protected: virtual void Load(const std::string &_worldFilename,\r\n+                                 bool _paused);\r\n \r\n   /// \\brief Load a world based on a filename and set simulation\r\n   /// paused/un-paused, and specify physics engine.\r\n@@ -135,7 +136,8 @@\r\n   /// \\param[in] _height Height of the image.\r\n   /// \\param[in] _depth Pixel depth.\r\n   protected: void PrintImage(const std::string &_name, unsigned char **_image,\r\n-                unsigned int _width, unsigned int _height, unsigned int _depth);\r\n+                  unsigned int _width, unsigned int _height,\r\n+                  unsigned int _depth);\r\n \r\n   /// \\brief Print laser scan to screen. This is used to generate test data.\r\n   /// \\param[in] _name Name to associate with the printed data.\r\n@@ -179,7 +181,8 @@\r\n   /// \\param[out] _diffAvg Average difference between the two arrays.\r\n   protected: void ImageCompare(unsigned char *_imageA,\r\n                  unsigned char *_imageB,\r\n-                 unsigned int _width, unsigned int _height, unsigned int _depth,\r\n+                   unsigned int _width, unsigned int _height,\r\n+                   unsigned int _depth,\r\n                  unsigned int &_diffMax, unsigned int &_diffSum,\r\n                  double &_diffAvg);\r\n \r\n@@ -336,7 +339,8 @@\r\n   /// log message about the problem.\r\n   /// \\param[in] log_msg: error msg related to the timeout\r\n   /// \\param[in] timeoutCS: failing period (in centiseconds)\r\n-  private: void launchTimeoutFailure(const char *_logMsg, const int _timeoutCS);\r\n+    private: void launchTimeoutFailure(const char *_logMsg,\r\n+                                       const int _timeoutCS);\r\n \r\n   /// \\brief Spawn an Wireless transmitter sensor on a link\r\n   /// \\param[in] _name Model name\r\n@@ -412,7 +416,8 @@\r\n   /// \\param[in] _spotOuterAngle Outer angle (\"spot\" only).\r\n   /// \\param[in] _spotFallOff Fall off (\"spot\" only).\r\n   /// \\param[in] _castShadows True to cast shadows.\r\n-  protected: void SpawnLight(const std::string &_name, const std::string &_type,\r\n+    protected: void SpawnLight(const std::string &_name,\r\n+                   const std::string &_type,\r\n                  const math::Vector3 &_pos, const math::Vector3 &_rpy,\r\n                  const common::Color &_diffuse = common::Color::White,\r\n                  const common::Color &_specular = common::Color::White,\r\n@@ -567,5 +572,6 @@\r\n \r\n   /// \\brief True if server is running.\r\n   private: bool serverRunning;\r\n-};\r\n+  };\r\n+}       // namespace gazebo\r\n #endif  // define _GAZEBO_SERVER_FIXTURE_HH_\r\n~~~", "title": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" ", "destination": {"commit": {"hash": "afb30274a742", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/afb30274a742.json"}, "html": {"href": "#!/osrf/gazebo/commits/afb30274a742"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "it's broken", "source": {"commit": {"hash": "6e108614711a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6e108614711a.json"}, "html": {"href": "#!/osrf/gazebo/commits/6e108614711a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "serverfixture_namespace2"}}, "state": "DECLINED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-23T22:38:42.937126+00:00"}, "pull_request": {"type": "pullrequest", "id": 1451, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1451.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1451"}}, "title": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" "}}, {"update": {"description": "It's bad practice to use `using namespace gazebo;` in header files. This pull request replaces this with `namespace gazebo` and brackets in 580691b. The following commit (6e10861) is purely indentation and fixing long line lengths.\r\n\r\nA more concise diff that ignores most of the whitespace using the `-b` flag:\r\n~~~\r\n$ hg up serverfixture_namespace2\r\n$ hg diff -r gazebo5 -b\r\ndiff -r afb30274a742 test/ServerFixture.hh\r\n--- a/test/ServerFixture.hh\tFri Feb 20 18:10:50 2015 -0800\r\n+++ b/test/ServerFixture.hh\tMon Feb 23 14:09:27 2015 -0800\r\n@@ -52,12 +52,12 @@\r\n \r\n #include \"test_config.h\"\r\n \r\n-using namespace gazebo;\r\n+namespace gazebo\r\n+{\r\n+  std::string custom_exec(std::string _cmd);\r\n \r\n-std::string custom_exec(std::string _cmd);\r\n-\r\n-class ServerFixture : public testing::Test\r\n-{\r\n+  class ServerFixture : public testing::Test\r\n+  {\r\n   /// \\brief Constructor\r\n   protected: ServerFixture();\r\n \r\n@@ -75,7 +75,8 @@\r\n   /// paused/un-paused.\r\n   /// \\param[in] _worldFilename Name of the world to load.\r\n   /// \\param[in] _paused True to start the world paused.\r\n-  protected: virtual void Load(const std::string &_worldFilename, bool _paused);\r\n+    protected: virtual void Load(const std::string &_worldFilename,\r\n+                                 bool _paused);\r\n \r\n   /// \\brief Load a world based on a filename and set simulation\r\n   /// paused/un-paused, and specify physics engine.\r\n@@ -135,7 +136,8 @@\r\n   /// \\param[in] _height Height of the image.\r\n   /// \\param[in] _depth Pixel depth.\r\n   protected: void PrintImage(const std::string &_name, unsigned char **_image,\r\n-                unsigned int _width, unsigned int _height, unsigned int _depth);\r\n+                  unsigned int _width, unsigned int _height,\r\n+                  unsigned int _depth);\r\n \r\n   /// \\brief Print laser scan to screen. This is used to generate test data.\r\n   /// \\param[in] _name Name to associate with the printed data.\r\n@@ -179,7 +181,8 @@\r\n   /// \\param[out] _diffAvg Average difference between the two arrays.\r\n   protected: void ImageCompare(unsigned char *_imageA,\r\n                  unsigned char *_imageB,\r\n-                 unsigned int _width, unsigned int _height, unsigned int _depth,\r\n+                   unsigned int _width, unsigned int _height,\r\n+                   unsigned int _depth,\r\n                  unsigned int &_diffMax, unsigned int &_diffSum,\r\n                  double &_diffAvg);\r\n \r\n@@ -336,7 +339,8 @@\r\n   /// log message about the problem.\r\n   /// \\param[in] log_msg: error msg related to the timeout\r\n   /// \\param[in] timeoutCS: failing period (in centiseconds)\r\n-  private: void launchTimeoutFailure(const char *_logMsg, const int _timeoutCS);\r\n+    private: void launchTimeoutFailure(const char *_logMsg,\r\n+                                       const int _timeoutCS);\r\n \r\n   /// \\brief Spawn an Wireless transmitter sensor on a link\r\n   /// \\param[in] _name Model name\r\n@@ -412,7 +416,8 @@\r\n   /// \\param[in] _spotOuterAngle Outer angle (\"spot\" only).\r\n   /// \\param[in] _spotFallOff Fall off (\"spot\" only).\r\n   /// \\param[in] _castShadows True to cast shadows.\r\n-  protected: void SpawnLight(const std::string &_name, const std::string &_type,\r\n+    protected: void SpawnLight(const std::string &_name,\r\n+                   const std::string &_type,\r\n                  const math::Vector3 &_pos, const math::Vector3 &_rpy,\r\n                  const common::Color &_diffuse = common::Color::White,\r\n                  const common::Color &_specular = common::Color::White,\r\n@@ -567,5 +572,6 @@\r\n \r\n   /// \\brief True if server is running.\r\n   private: bool serverRunning;\r\n-};\r\n+  };\r\n+}       // namespace gazebo\r\n #endif  // define _GAZEBO_SERVER_FIXTURE_HH_\r\n~~~", "title": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" ", "destination": {"commit": {"hash": "afb30274a742", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/afb30274a742.json"}, "html": {"href": "#!/osrf/gazebo/commits/afb30274a742"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "", "source": {"commit": {"hash": "6e108614711a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6e108614711a.json"}, "html": {"href": "#!/osrf/gazebo/commits/6e108614711a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "serverfixture_namespace2"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-23T22:13:04.279244+00:00"}, "pull_request": {"type": "pullrequest", "id": 1451, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1451.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1451"}}, "title": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" "}}, {"update": {"description": "It's bad practice to use `using namespace gazebo;` in header files. This pull request replaces this with `namespace gazebo` and brackets in 580691b. The following commit (6e10861) is purely indentation and fixing long line lengths.\r\n\r\nA more concise diff that ignores most of the whitespace using the `-b` flag:\r\n~~~\r\n$ hg up serverfixture_namespace2\r\n$ hg diff -r gazebo5 -b\r\ndiff -r afb30274a742 test/ServerFixture.hh\r\n--- a/test/ServerFixture.hh\tFri Feb 20 18:10:50 2015 -0800\r\n+++ b/test/ServerFixture.hh\tMon Feb 23 14:09:27 2015 -0800\r\n@@ -52,12 +52,12 @@\r\n \r\n #include \"test_config.h\"\r\n \r\n-using namespace gazebo;\r\n+namespace gazebo\r\n+{\r\n+  std::string custom_exec(std::string _cmd);\r\n \r\n-std::string custom_exec(std::string _cmd);\r\n-\r\n-class ServerFixture : public testing::Test\r\n-{\r\n+  class ServerFixture : public testing::Test\r\n+  {\r\n   /// \\brief Constructor\r\n   protected: ServerFixture();\r\n \r\n@@ -75,7 +75,8 @@\r\n   /// paused/un-paused.\r\n   /// \\param[in] _worldFilename Name of the world to load.\r\n   /// \\param[in] _paused True to start the world paused.\r\n-  protected: virtual void Load(const std::string &_worldFilename, bool _paused);\r\n+    protected: virtual void Load(const std::string &_worldFilename,\r\n+                                 bool _paused);\r\n \r\n   /// \\brief Load a world based on a filename and set simulation\r\n   /// paused/un-paused, and specify physics engine.\r\n@@ -135,7 +136,8 @@\r\n   /// \\param[in] _height Height of the image.\r\n   /// \\param[in] _depth Pixel depth.\r\n   protected: void PrintImage(const std::string &_name, unsigned char **_image,\r\n-                unsigned int _width, unsigned int _height, unsigned int _depth);\r\n+                  unsigned int _width, unsigned int _height,\r\n+                  unsigned int _depth);\r\n \r\n   /// \\brief Print laser scan to screen. This is used to generate test data.\r\n   /// \\param[in] _name Name to associate with the printed data.\r\n@@ -179,7 +181,8 @@\r\n   /// \\param[out] _diffAvg Average difference between the two arrays.\r\n   protected: void ImageCompare(unsigned char *_imageA,\r\n                  unsigned char *_imageB,\r\n-                 unsigned int _width, unsigned int _height, unsigned int _depth,\r\n+                   unsigned int _width, unsigned int _height,\r\n+                   unsigned int _depth,\r\n                  unsigned int &_diffMax, unsigned int &_diffSum,\r\n                  double &_diffAvg);\r\n \r\n@@ -336,7 +339,8 @@\r\n   /// log message about the problem.\r\n   /// \\param[in] log_msg: error msg related to the timeout\r\n   /// \\param[in] timeoutCS: failing period (in centiseconds)\r\n-  private: void launchTimeoutFailure(const char *_logMsg, const int _timeoutCS);\r\n+    private: void launchTimeoutFailure(const char *_logMsg,\r\n+                                       const int _timeoutCS);\r\n \r\n   /// \\brief Spawn an Wireless transmitter sensor on a link\r\n   /// \\param[in] _name Model name\r\n@@ -412,7 +416,8 @@\r\n   /// \\param[in] _spotOuterAngle Outer angle (\"spot\" only).\r\n   /// \\param[in] _spotFallOff Fall off (\"spot\" only).\r\n   /// \\param[in] _castShadows True to cast shadows.\r\n-  protected: void SpawnLight(const std::string &_name, const std::string &_type,\r\n+    protected: void SpawnLight(const std::string &_name,\r\n+                   const std::string &_type,\r\n                  const math::Vector3 &_pos, const math::Vector3 &_rpy,\r\n                  const common::Color &_diffuse = common::Color::White,\r\n                  const common::Color &_specular = common::Color::White,\r\n@@ -567,5 +572,6 @@\r\n \r\n   /// \\brief True if server is running.\r\n   private: bool serverRunning;\r\n-};\r\n+  };\r\n+}       // namespace gazebo\r\n #endif  // define _GAZEBO_SERVER_FIXTURE_HH_\r\n~~~", "title": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" ", "destination": {"commit": {"hash": "afb30274a742", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/afb30274a742.json"}, "html": {"href": "#!/osrf/gazebo/commits/afb30274a742"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "", "source": {"commit": {"hash": "6e108614711a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6e108614711a.json"}, "html": {"href": "#!/osrf/gazebo/commits/6e108614711a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "serverfixture_namespace2"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-23T22:13:04.137226+00:00"}, "pull_request": {"type": "pullrequest", "id": 1451, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1451.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1451"}}, "title": "ServerFixture: replace \"using namespace gazebo;\" with \"namespace gazebo {}\" "}}]}