{"rendered": {"description": {"raw": "This introduces a new function to the `transport::Node` class which allows callers to specify a maximum wait time while initializing the Node to the \"global\" namespace.\r\n\r\nThis also introduces a static `common::Time::Maximum()` function which produces a `Time` object that represents the largest amount of time that can be represented in a `Time` object. Combining these two additions allows Nodes to essentially wait indefinitely for the global namespace to reveal itself instead of quitting early and choosing a topic namespace with the name \"default\".\r\n\r\nThe new Node initialization strategy was applied to all the Nodes (that I could find) in the GUI classes. As a result, issue #2053 should be fixed by this pull request.\r\n\r\nOne thing I'm not clear on is whether the same initialization strategy should be applied to Nodes in the `rendering` namespace. I chose to leave those Nodes alone for now to minimize the potential of unexpected side effects from this change. If anyone has opinions on this matter, please share.\r\n\r\nThese changes were specifically designed to ensure that ABI remains compatible.", "markup": "markdown", "html": "<p>This introduces a new function to the <code>transport::Node</code> class which allows callers to specify a maximum wait time while initializing the Node to the \"global\" namespace.</p>\n<p>This also introduces a static <code>common::Time::Maximum()</code> function which produces a <code>Time</code> object that represents the largest amount of time that can be represented in a <code>Time</code> object. Combining these two additions allows Nodes to essentially wait indefinitely for the global namespace to reveal itself instead of quitting early and choosing a topic namespace with the name \"default\".</p>\n<p>The new Node initialization strategy was applied to all the Nodes (that I could find) in the GUI classes. As a result, issue <a href=\"#!/osrf/gazebo/issues/2053/topic-name-mismatch-on-heavy-worlds-with\" rel=\"nofollow\" title=\"Topic name mismatch on heavy worlds with custom names\" class=\"ap-connect-link\"><s>#2053</s></a> should be fixed by this pull request.</p>\n<p>One thing I'm not clear on is whether the same initialization strategy should be applied to Nodes in the <code>rendering</code> namespace. I chose to leave those Nodes alone for now to minimize the potential of unexpected side effects from this change. If anyone has opinions on this matter, please share.</p>\n<p>These changes were specifically designed to ensure that ABI remains compatible.</p>", "type": "rendered"}, "title": {"raw": "Fixing the Node::Init() race condition by providing an alternative Node init function", "markup": "markdown", "html": "<p>Fixing the Node::Init() race condition by providing an alternative Node init function</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This introduces a new function to the `transport::Node` class which allows callers to specify a maximum wait time while initializing the Node to the \"global\" namespace.\r\n\r\nThis also introduces a static `common::Time::Maximum()` function which produces a `Time` object that represents the largest amount of time that can be represented in a `Time` object. Combining these two additions allows Nodes to essentially wait indefinitely for the global namespace to reveal itself instead of quitting early and choosing a topic namespace with the name \"default\".\r\n\r\nThe new Node initialization strategy was applied to all the Nodes (that I could find) in the GUI classes. As a result, issue #2053 should be fixed by this pull request.\r\n\r\nOne thing I'm not clear on is whether the same initialization strategy should be applied to Nodes in the `rendering` namespace. I chose to leave those Nodes alone for now to minimize the potential of unexpected side effects from this change. If anyone has opinions on this matter, please share.\r\n\r\nThese changes were specifically designed to ensure that ABI remains compatible.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2897/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:15da12a26543%0Dfd0d3a313bef?from_pullrequest_id=2897"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2897/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2897.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2897/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2897/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2897"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2897/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:15da12a26543%0Dfd0d3a313bef?from_pullrequest_id=2897"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2897/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2897/statuses_page=1.json"}}, "title": "Fixing the Node::Init() race condition by providing an alternative Node init function", "close_source_branch": true, "reviewers": [{"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}], "id": 2897, "destination": {"commit": {"hash": "fd0d3a313bef", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fd0d3a313bef.json"}, "html": {"href": "#!/osrf/gazebo/commits/fd0d3a313bef"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2018-02-28T00:20:46.951030+00:00", "summary": {"raw": "This introduces a new function to the `transport::Node` class which allows callers to specify a maximum wait time while initializing the Node to the \"global\" namespace.\r\n\r\nThis also introduces a static `common::Time::Maximum()` function which produces a `Time` object that represents the largest amount of time that can be represented in a `Time` object. Combining these two additions allows Nodes to essentially wait indefinitely for the global namespace to reveal itself instead of quitting early and choosing a topic namespace with the name \"default\".\r\n\r\nThe new Node initialization strategy was applied to all the Nodes (that I could find) in the GUI classes. As a result, issue #2053 should be fixed by this pull request.\r\n\r\nOne thing I'm not clear on is whether the same initialization strategy should be applied to Nodes in the `rendering` namespace. I chose to leave those Nodes alone for now to minimize the potential of unexpected side effects from this change. If anyone has opinions on this matter, please share.\r\n\r\nThese changes were specifically designed to ensure that ABI remains compatible.", "markup": "markdown", "html": "<p>This introduces a new function to the <code>transport::Node</code> class which allows callers to specify a maximum wait time while initializing the Node to the \"global\" namespace.</p>\n<p>This also introduces a static <code>common::Time::Maximum()</code> function which produces a <code>Time</code> object that represents the largest amount of time that can be represented in a <code>Time</code> object. Combining these two additions allows Nodes to essentially wait indefinitely for the global namespace to reveal itself instead of quitting early and choosing a topic namespace with the name \"default\".</p>\n<p>The new Node initialization strategy was applied to all the Nodes (that I could find) in the GUI classes. As a result, issue <a href=\"#!/osrf/gazebo/issues/2053/topic-name-mismatch-on-heavy-worlds-with\" rel=\"nofollow\" title=\"Topic name mismatch on heavy worlds with custom names\" class=\"ap-connect-link\"><s>#2053</s></a> should be fixed by this pull request.</p>\n<p>One thing I'm not clear on is whether the same initialization strategy should be applied to Nodes in the <code>rendering</code> namespace. I chose to leave those Nodes alone for now to minimize the potential of unexpected side effects from this change. If anyone has opinions on this matter, please share.</p>\n<p>These changes were specifically designed to ensure that ABI remains compatible.</p>", "type": "rendered"}, "source": {"commit": {"hash": "57da313baa67", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57da313baa67.json"}, "html": {"href": "#!/osrf/gazebo/commits/57da313baa67"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "FixNodeInitRaceCondition_issue2053"}}, "comment_count": 14, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-03-07T01:20:20.049163+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2018-03-02T22:14:29.405147+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2018-03-01T20:16:52.966125+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "", "updated_on": "2018-03-07T19:13:38.584854+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "15da12a26543", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/15da12a26543.json"}, "html": {"href": "#!/osrf/gazebo/commits/15da12a26543"}}}, "closed_by": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}