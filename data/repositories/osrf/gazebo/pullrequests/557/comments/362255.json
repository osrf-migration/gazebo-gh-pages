{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/557/comments/362255.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/557/_/diff#comment-362255"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 557, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/557.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/557"}}, "title": "Sonar and Force Torque sensors"}, "content": {"raw": "I was testing the sonar sensor with multiple objects, and it doesn't always report the distance of the closest object. The following diff improves the behavior I think.\n~~~\ndiff -r 8fe95af2eafd gazebo/sensors/SonarSensor.cc\n--- a/gazebo/sensors/SonarSensor.cc\tWed Jun 26 07:57:57 2013 -0700\n+++ b/gazebo/sensors/SonarSensor.cc\tFri Jul 05 16:43:41 2013 -0700\n@@ -243,6 +243,8 @@\n   math::Pose referencePose = this->pose + this->parentEntity->GetWorldPose();\n   math::Vector3 pos;\n \n+  this->sonarMsg.mutable_sonar()->set_range(-1);\n+\n   // Iterate over all the contact messages\n   for (ContactMsgs_L::iterator iter = this->incomingContacts.begin();\n       iter != this->incomingContacts.end(); ++iter)\n@@ -254,8 +256,6 @@\n       // std::cout << \"Collision1[\" << (*iter)->contact(i).collision1() << \"]\"\n       //  << \"C2[\" << (*iter)->contact(i).collision2() << \"]\\n\";\n \n-      this->sonarMsg.mutable_sonar()->set_range(-1);\n-\n       for (int j = 0; j < (*iter)->contact(i).position_size(); ++j)\n       {\n         pos = msgs::Convert((*iter)->contact(i).position(j));\n~~~\nAlso, it doesn't always report the correct distance to the surface of a sphere, since the ODE sphere / mesh contact points are generated inside of the sphere.", "markup": "markdown", "html": "<p>I was testing the sonar sensor with multiple objects, and it doesn't always report the distance of the closest object. The following diff improves the behavior I think.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 8fe95af2eafd gazebo/sensors/SonarSensor.cc</span>\n<span class=\"gd\">--- a/gazebo/sensors/SonarSensor.cc Wed Jun 26 07:57:57 2013 -0700</span>\n<span class=\"gi\">+++ b/gazebo/sensors/SonarSensor.cc Fri Jul 05 16:43:41 2013 -0700</span>\n<span class=\"gu\">@@ -243,6 +243,8 @@</span>\n   math::Pose referencePose = this-&gt;pose + this-&gt;parentEntity-&gt;GetWorldPose();\n   math::Vector3 pos;\n\n<span class=\"gi\">+  this-&gt;sonarMsg.mutable_sonar()-&gt;set_range(-1);</span>\n<span class=\"gi\">+</span>\n   // Iterate over all the contact messages\n   for (ContactMsgs_L::iterator iter = this-&gt;incomingContacts.begin();\n       iter != this-&gt;incomingContacts.end(); ++iter)\n<span class=\"gu\">@@ -254,8 +256,6 @@</span>\n       // std::cout &lt;&lt; &quot;Collision1[&quot; &lt;&lt; (*iter)-&gt;contact(i).collision1() &lt;&lt; &quot;]&quot;\n       //  &lt;&lt; &quot;C2[&quot; &lt;&lt; (*iter)-&gt;contact(i).collision2() &lt;&lt; &quot;]\\n&quot;;\n\n<span class=\"gd\">-      this-&gt;sonarMsg.mutable_sonar()-&gt;set_range(-1);</span>\n<span class=\"gd\">-</span>\n       for (int j = 0; j &lt; (*iter)-&gt;contact(i).position_size(); ++j)\n       {\n         pos = msgs::Convert((*iter)-&gt;contact(i).position(j));\n</pre></div>\n\n\n<p>Also, it doesn't always report the correct distance to the surface of a sphere, since the ODE sphere / mesh contact points are generated inside of the sphere.</p>", "type": "rendered"}, "created_on": "2013-07-05T23:45:51.395043+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-07-05T23:45:51.403841+00:00", "type": "pullrequest_comment", "id": 362255}