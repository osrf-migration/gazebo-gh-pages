{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2073/comments/13108557.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=gazebo%2Frendering%2Fselection_buffer%2FSelectionBuffer.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2073/_/diff#comment-13108557"}}, "parent": {"id": 13108353, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2073/comments/13108353.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2073/_/diff#comment-13108353"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2073, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2073.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2073"}}, "title": "PIMPL selection buffer class"}, "content": {"raw": "like this?\n\n~~~\ndiff -r 1bee20817881 gazebo/rendering/selection_buffer/SelectionBuffer.cc\n--- a/gazebo/rendering/selection_buffer/SelectionBuffer.cc\tTue Dec 29 11:41:36 2015 -0800\n+++ b/gazebo/rendering/selection_buffer/SelectionBuffer.cc\tWed Dec 30 10:32:45 2015 -0800\n@@ -15,6 +15,7 @@\n  *\n */\n \n+#include <memory>\n #include \"gazebo/common/Console.hh\"\n #include \"gazebo/rendering/ogre_gazebo.h\"\n #include \"gazebo/rendering/RenderTypes.hh\"\n@@ -38,10 +39,10 @@\n \n       /// \\brief A render target listener that sets up the material switcher\n       /// to run on every update of this render target.\n-      SelectionRenderListener *selectionTargetListener;\n+      std::unique_ptr<SelectionRenderListener> selectionTargetListener;\n \n       /// \\brief Ogre scene manager\n-      Ogre::SceneManager *sceneMgr;\n+      std::unique_ptr<Ogre::SceneManager> sceneMgr;\n \n       /// \\brief Pointer to the camera that will be used to render to texture\n       Ogre::Camera *camera;\n@@ -80,9 +81,9 @@\n   this->dataPtr->pixelBox = 0;\n \n   this->dataPtr->camera = this->dataPtr->sceneMgr->getCamera(_cameraName);\n-  this->dataPtr->materialSwitchListener = new MaterialSwitcher();\n-  this->dataPtr->selectionTargetListener = new SelectionRenderListener(\n-      this->dataPtr->materialSwitchListener);\n+  this->dataPtr->materialSwitchListener.reset(new MaterialSwitcher());\n+  this->dataPtr->selectionTargetListener.reset(new SelectionRenderListener(\n+      this->dataPtr->materialSwitchListener));\n   this->CreateRTTBuffer();\n   this->CreateRTTOverlays();\n }\n@@ -91,8 +92,6 @@\n SelectionBuffer::~SelectionBuffer()\n {\n   this->DeleteRTTBuffer();\n-  delete this->dataPtr->selectionTargetListener;\n-  delete this->dataPtr->materialSwitchListener;\n }\n \n /////////////////////////////////////////////////\n~~~", "markup": "markdown", "html": "<p>like this?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 1bee20817881 gazebo/rendering/selection_buffer/SelectionBuffer.cc</span>\n<span class=\"gd\">--- a/gazebo/rendering/selection_buffer/SelectionBuffer.cc  Tue Dec 29 11:41:36 2015 -0800</span>\n<span class=\"gi\">+++ b/gazebo/rendering/selection_buffer/SelectionBuffer.cc  Wed Dec 30 10:32:45 2015 -0800</span>\n<span class=\"gu\">@@ -15,6 +15,7 @@</span>\n  *\n */\n\n<span class=\"gi\">+#include &lt;memory&gt;</span>\n #include &quot;gazebo/common/Console.hh&quot;\n #include &quot;gazebo/rendering/ogre_gazebo.h&quot;\n #include &quot;gazebo/rendering/RenderTypes.hh&quot;\n<span class=\"gu\">@@ -38,10 +39,10 @@</span>\n\n       /// \\brief A render target listener that sets up the material switcher\n       /// to run on every update of this render target.\n<span class=\"gd\">-      SelectionRenderListener *selectionTargetListener;</span>\n<span class=\"gi\">+      std::unique_ptr&lt;SelectionRenderListener&gt; selectionTargetListener;</span>\n\n       /// \\brief Ogre scene manager\n<span class=\"gd\">-      Ogre::SceneManager *sceneMgr;</span>\n<span class=\"gi\">+      std::unique_ptr&lt;Ogre::SceneManager&gt; sceneMgr;</span>\n\n       /// \\brief Pointer to the camera that will be used to render to texture\n       Ogre::Camera *camera;\n<span class=\"gu\">@@ -80,9 +81,9 @@</span>\n   this-&gt;dataPtr-&gt;pixelBox = 0;\n\n   this-&gt;dataPtr-&gt;camera = this-&gt;dataPtr-&gt;sceneMgr-&gt;getCamera(_cameraName);\n<span class=\"gd\">-  this-&gt;dataPtr-&gt;materialSwitchListener = new MaterialSwitcher();</span>\n<span class=\"gd\">-  this-&gt;dataPtr-&gt;selectionTargetListener = new SelectionRenderListener(</span>\n<span class=\"gd\">-      this-&gt;dataPtr-&gt;materialSwitchListener);</span>\n<span class=\"gi\">+  this-&gt;dataPtr-&gt;materialSwitchListener.reset(new MaterialSwitcher());</span>\n<span class=\"gi\">+  this-&gt;dataPtr-&gt;selectionTargetListener.reset(new SelectionRenderListener(</span>\n<span class=\"gi\">+      this-&gt;dataPtr-&gt;materialSwitchListener));</span>\n   this-&gt;CreateRTTBuffer();\n   this-&gt;CreateRTTOverlays();\n }\n<span class=\"gu\">@@ -91,8 +92,6 @@</span>\n SelectionBuffer::~SelectionBuffer()\n {\n   this-&gt;DeleteRTTBuffer();\n<span class=\"gd\">-  delete this-&gt;dataPtr-&gt;selectionTargetListener;</span>\n<span class=\"gd\">-  delete this-&gt;dataPtr-&gt;materialSwitchListener;</span>\n }\n\n /////////////////////////////////////////////////\n</pre></div>", "type": "rendered"}, "created_on": "2015-12-30T18:33:42.957874+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "outdated": false, "path": "gazebo/rendering/selection_buffer/SelectionBuffer.cc"}, "updated_on": "2015-12-30T18:33:42.960242+00:00", "type": "pullrequest_comment", "id": 13108557}