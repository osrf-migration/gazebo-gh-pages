{"rendered": {"description": {"raw": "The `PhysicsEngines/FactoryTest.Clone/1` test has been failing (#2367). It loads a pr2, clones it, then verifies that they have matching inertial and joint properties. The bullet version of this test has been failing since pull request #2757, which added support for non-diagonal inertia matrices in bullet. The test fails with joint limits not matching.\r\n\r\nI initially investigated joint limit behavior, but I eventually realized that the inertial values didn't match because the inertial pose rotation was not being copied to the cloned model. I adjusted the inertia matrix comparison logic in 26bed25 to confirm this by comparing the `ignition::math::Inertial::MOI` values for the links in each model. This represents the inertia matrix expressed in the Link frame, so it does not require the inertia frame rotations to match.\r\n\r\nThe fix is to `SetUpdateFunc` on the inertial pose to keep things consistent since the other inertial values are being updated.", "markup": "markdown", "html": "<p>The <code>PhysicsEngines/FactoryTest.Clone/1</code> test has been failing (<a href=\"#!/osrf/gazebo/issues/2367/physicsengines-factorytestclone-1-failing\" rel=\"nofollow\" title=\"PhysicsEngines/FactoryTest.Clone/1 failing on gazebo8 and default\" class=\"ap-connect-link\"><s>#2367</s></a>). It loads a pr2, clones it, then verifies that they have matching inertial and joint properties. The bullet version of this test has been failing since <a href=\"#!/osrf/gazebo/pull-requests/2757/support-off-diagonal-inertia-terms-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2757</a>, which added support for non-diagonal inertia matrices in bullet. The test fails with joint limits not matching.</p>\n<p>I initially investigated joint limit behavior, but I eventually realized that the inertial values didn't match because the inertial pose rotation was not being copied to the cloned model. I adjusted the inertia matrix comparison logic in <a href=\"#!/osrf/gazebo/commits/26bed25\" rel=\"nofollow\" class=\"ap-connect-link\">26bed25</a> to confirm this by comparing the <code>ignition::math::Inertial::MOI</code> values for the links in each model. This represents the inertia matrix expressed in the Link frame, so it does not require the inertia frame rotations to match.</p>\n<p>The fix is to <code>SetUpdateFunc</code> on the inertial pose to keep things consistent since the other inertial values are being updated.</p>", "type": "rendered"}, "title": {"raw": "Ensure sdf inertia values are consistent (#2367)", "markup": "markdown", "html": "<p>Ensure sdf inertia values are consistent (<a href=\"#!/osrf/gazebo/issues/2367/physicsengines-factorytestclone-1-failing\" rel=\"nofollow\" title=\"PhysicsEngines/FactoryTest.Clone/1 failing on gazebo8 and default\" class=\"ap-connect-link\"><s>#2367</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The `PhysicsEngines/FactoryTest.Clone/1` test has been failing (#2367). It loads a pr2, clones it, then verifies that they have matching inertial and joint properties. The bullet version of this test has been failing since pull request #2757, which added support for non-diagonal inertia matrices in bullet. The test fails with joint limits not matching.\r\n\r\nI initially investigated joint limit behavior, but I eventually realized that the inertial values didn't match because the inertial pose rotation was not being copied to the cloned model. I adjusted the inertia matrix comparison logic in 26bed25 to confirm this by comparing the `ignition::math::Inertial::MOI` values for the links in each model. This represents the inertia matrix expressed in the Link frame, so it does not require the inertia frame rotations to match.\r\n\r\nThe fix is to `SetUpdateFunc` on the inertial pose to keep things consistent since the other inertial values are being updated.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2867/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:40144b3cfdc8%0D0a1ef02bdc96?from_pullrequest_id=2867"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2867/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2867.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2867/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2867/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2867"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2867/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:40144b3cfdc8%0D0a1ef02bdc96?from_pullrequest_id=2867"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2867/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2867/statuses_page=1.json"}}, "title": "Ensure sdf inertia values are consistent (#2367)", "close_source_branch": true, "reviewers": [{"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}], "id": 2867, "destination": {"commit": {"hash": "0a1ef02bdc96", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0a1ef02bdc96.json"}, "html": {"href": "#!/osrf/gazebo/commits/0a1ef02bdc96"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo8"}}, "created_on": "2018-01-27T00:10:53.289263+00:00", "summary": {"raw": "The `PhysicsEngines/FactoryTest.Clone/1` test has been failing (#2367). It loads a pr2, clones it, then verifies that they have matching inertial and joint properties. The bullet version of this test has been failing since pull request #2757, which added support for non-diagonal inertia matrices in bullet. The test fails with joint limits not matching.\r\n\r\nI initially investigated joint limit behavior, but I eventually realized that the inertial values didn't match because the inertial pose rotation was not being copied to the cloned model. I adjusted the inertia matrix comparison logic in 26bed25 to confirm this by comparing the `ignition::math::Inertial::MOI` values for the links in each model. This represents the inertia matrix expressed in the Link frame, so it does not require the inertia frame rotations to match.\r\n\r\nThe fix is to `SetUpdateFunc` on the inertial pose to keep things consistent since the other inertial values are being updated.", "markup": "markdown", "html": "<p>The <code>PhysicsEngines/FactoryTest.Clone/1</code> test has been failing (<a href=\"#!/osrf/gazebo/issues/2367/physicsengines-factorytestclone-1-failing\" rel=\"nofollow\" title=\"PhysicsEngines/FactoryTest.Clone/1 failing on gazebo8 and default\" class=\"ap-connect-link\"><s>#2367</s></a>). It loads a pr2, clones it, then verifies that they have matching inertial and joint properties. The bullet version of this test has been failing since <a href=\"#!/osrf/gazebo/pull-requests/2757/support-off-diagonal-inertia-terms-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2757</a>, which added support for non-diagonal inertia matrices in bullet. The test fails with joint limits not matching.</p>\n<p>I initially investigated joint limit behavior, but I eventually realized that the inertial values didn't match because the inertial pose rotation was not being copied to the cloned model. I adjusted the inertia matrix comparison logic in <a href=\"#!/osrf/gazebo/commits/26bed25\" rel=\"nofollow\" class=\"ap-connect-link\">26bed25</a> to confirm this by comparing the <code>ignition::math::Inertial::MOI</code> values for the links in each model. This represents the inertia matrix expressed in the Link frame, so it does not require the inertia frame rotations to match.</p>\n<p>The fix is to <code>SetUpdateFunc</code> on the inertial pose to keep things consistent since the other inertial values are being updated.</p>", "type": "rendered"}, "source": {"commit": {"hash": "35d5cd830e6d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/35d5cd830e6d.json"}, "html": {"href": "#!/osrf/gazebo/commits/35d5cd830e6d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_2367_small"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-01-30T05:03:35.255493+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2018-02-12T18:44:33.967395+00:00", "type": "participant", "approved": true, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}, {"role": "REVIEWER", "participated_on": "2018-01-30T07:12:40.035784+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2018-02-12T18:49:03.419068+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "40144b3cfdc8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/40144b3cfdc8.json"}, "html": {"href": "#!/osrf/gazebo/commits/40144b3cfdc8"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}