{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2702/comments/36126832.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2702/_/diff#comment-36126832"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2702, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2702.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2702"}}, "title": "Fix Collision::GetWorldPose for non-canonical links (and friction directions, #2068)"}, "content": {"raw": "I just found  a little more explanation of the changes to Entity.cc in my email drafts folder:\n\nWith each simulation timestep, the physics engine calls `SetWorldPose` on each link that moves, and [Entity::SetWorldPose](#!/osrf/gazebo/src/d50d5cffcb75595913e14ef6ff1290137d9f3284/gazebo/physics/Entity.cc?fileviewer=file-view-default#Entity.cc-473) redirects using a function pointer to different `SetWorldPose` variants, like `SetWorldPoseModel`, `SetWorldPoseCanonicalLink`, and `SetWorldPoseDefault`. `Collision::GetWorldPose` was working for collisions attached to the canonical link of a model because `SetWorldPoseCanonicalLink` was iterating over child collisions and calling `Collision::SetWorldPoseDirty`. To give this functionality to non-canonical links, I moved that loop to `SetWorldPoseDefault` and added a call to `SetWorldPoseDefault` from the start of `SetWorldPoseCanonicalLink` (57c8d6f).", "markup": "markdown", "html": "<p>I just found  a little more explanation of the changes to Entity.cc in my email drafts folder:</p>\n<p>With each simulation timestep, the physics engine calls <code>SetWorldPose</code> on each link that moves, and <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/d50d5cffcb75595913e14ef6ff1290137d9f3284/gazebo/physics/Entity.cc?fileviewer=file-view-default#Entity.cc-473\" rel=\"nofollow\">Entity::SetWorldPose</a> redirects using a function pointer to different <code>SetWorldPose</code> variants, like <code>SetWorldPoseModel</code>, <code>SetWorldPoseCanonicalLink</code>, and <code>SetWorldPoseDefault</code>. <code>Collision::GetWorldPose</code> was working for collisions attached to the canonical link of a model because <code>SetWorldPoseCanonicalLink</code> was iterating over child collisions and calling <code>Collision::SetWorldPoseDirty</code>. To give this functionality to non-canonical links, I moved that loop to <code>SetWorldPoseDefault</code> and added a call to <code>SetWorldPoseDefault</code> from the start of <code>SetWorldPoseCanonicalLink</code> (<a href=\"#!/osrf/gazebo/commits/57c8d6f\" rel=\"nofollow\" class=\"ap-connect-link\">57c8d6f</a>).</p>", "type": "rendered"}, "created_on": "2017-05-03T07:52:30.869304+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-05-03T07:52:30.871917+00:00", "type": "pullrequest_comment", "id": 36126832}