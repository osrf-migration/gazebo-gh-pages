{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/860/comments/906186.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:729e809b1402..577847c43d02?path=gazebo%2Fphysics%2FWrench.hh"}, "html": {"href": "#!/osrf/gazebo/pull-requests/860/_/diff#comment-906186"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 860, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/860.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/860"}}, "title": "conceptual gui link manipulation feature"}, "content": {"raw": "The referenceFrame variable is not used. What is the high-level plan for this class? Will it keep allow you to add and subtract forces and convert to a common reference frame? Should it assert that the reference frames are the same?\n\nI think we should remove the referenceFrame variable until we actually use it.", "markup": "markdown", "html": "<p>The referenceFrame variable is not used. What is the high-level plan for this class? Will it keep allow you to add and subtract forces and convert to a common reference frame? Should it assert that the reference frames are the same?</p>\n<p>I think we should remove the referenceFrame variable until we actually use it.</p>", "type": "rendered"}, "created_on": "2013-12-04T23:54:32.200499+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 72, "from": null, "outdated": false, "path": "gazebo/physics/Wrench.hh"}, "updated_on": "2013-12-04T23:54:32.211007+00:00", "type": "pullrequest_comment", "id": 906186}