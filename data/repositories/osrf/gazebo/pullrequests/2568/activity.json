{"pagelen": 50, "values": [{"update": {"description": "Fixes issue #553 and issue #1108\r\n\r\n# API change summary\r\n\r\nOld | New\r\n--- | ---\r\n*Get number of degrees of freedom* |\r\n`virtual unsigned int GetAngleCount() const = 0` | `virtual unsigned int DOF() const = 0`\r\n*Get joint position* |\r\n`math::Angle GetAngle(unsigned int _index) const` | `virtual double Position(const unsigned int _index = 0) const final`\r\n`virtual math::Angle GetAngleImpl(unsigned int _index) const = 0` | `virtual double PositionImpl(const unsigned int _index = 0) const = 0`\r\n*Set upper joint limit* | \r\n`bool SetHighStop(unsigned int _index, const math::Angle &_angle)` | `virtual void SetUpperLimit(const unsigned int _index, const double _limit)`\r\n`void SetUpperLimit(unsigned int _index, math::Angle _limit)` |\r\n*Set lower joint limit* | \r\n`bool SetLowStop(unsigned int _index, const math::Angle &_angle)` | `virtual oid SetLowerLimit(const unsigned int _index, const double _limit)`\r\n`void SetLowerLimit(unsigned int _index, math::Angle _limit)` |\r\n*Get upper joint limit* |\r\n`virtual math::Angle GetHighStop(unsigned int _index) = 0` | `virtual double UpperLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetUpperLimit(unsigned int _index) const` |\r\n*Get lower joint limit* |\r\n`virtual math::Angle GetLowStop(unsigned int _index) = 0` | `virtual double LowerLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetLowerLimit(unsigned int _index) const` |\r\n*Lower joint limit, as determined by the base class* |\r\n`math::Angle lowerLimit[MAX_JOINT_AXIS]` | `double lowerLimit[MAX_JOINT_AXIS]`\r\n*Upper joint limit, as determined by the base class* |\r\n`math::Angle upperLimit[MAX_JOINT_AXIS]` | `double upperLimit[MAX_JOINT_AXIS]`\r\n\r\nThe API changes in several ways:\r\n\r\n* `math::Angle` -> `double` \r\n\r\n* No more returning `bool`\r\n\r\n* \"get\"s are const\r\n\r\n* All input params are const\r\n\r\n* When \"getting\", the default index is zero\r\n\r\n* All functions are virtual\r\n\r\n* Only `PositionImpl` is pure virtual\r\n\r\n# Commits\r\n\r\nThere are many changes, but they are mostly repeated. I recommend reviewing one commit at a time:\r\n\r\n* 06b7dcc: GetAngleCount -> DOF\r\n\r\n* e0294c0: upperLimit, lowerLimit and staticAngle to double\r\n\r\n* 98ac226: Deprecate SetUpper/LowerLimit which take angle in favor of double\r\n\r\n* 92d4573: Deprecate GetUpper/LowerLimit which return angle in favor of double\r\n\r\n* 9ce869e: Deprecate GetAngle() in favor of Position()\r\n\r\n* 03b7ba1: Deprecate GetAngleImpl() in favor of PositionImpl()\r\n\r\n* 90fa193: Deprecate GetHigh/LowStop in favor of Upper/LowerLimit, also make it not pure virtual\r\n\r\n* 202b5cd: Make Upper/LowerLimit const functions\r\n\r\n* 67ba648: Deprecate SetHigh/LowStop in favor of SetUpper/LowerLimit\r\n\r\n* d4b5dec: Make Set* virtual, remove using, fix switches and returns\r\n\r\nObs: If this is taking too long to review, I'll break this PR into smaller PRs, mostly following the commits above.", "title": "Deprecate angle API from physics::Joint, in favor of using doubles", "destination": {"commit": {"hash": "002bb28c50f0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/002bb28c50f0.json"}, "html": {"href": "#!/osrf/gazebo/commits/002bb28c50f0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e4a7b2644c2d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e4a7b2644c2d.json"}, "html": {"href": "#!/osrf/gazebo/commits/e4a7b2644c2d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ignmath_joint_angle"}}, "state": "MERGED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-12-31T15:18:37.769130+00:00"}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"approval": {"date": "2016-12-31T15:18:09.569171+00:00", "pullrequest": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"approval": {"date": "2016-12-30T20:57:11.555597+00:00", "pullrequest": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568/comments/28994699.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568/_/diff#comment-28994699"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}, "content": {"raw": "Looks great!", "markup": "markdown", "html": "<p>Looks great!</p>", "type": "rendered"}, "created_on": "2016-12-30T20:57:05.648175+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-12-30T20:57:05.652293+00:00", "type": "pullrequest_comment", "id": 28994699}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"update": {"description": "Fixes issue #553 and issue #1108\r\n\r\n# API change summary\r\n\r\nOld | New\r\n--- | ---\r\n*Get number of degrees of freedom* |\r\n`virtual unsigned int GetAngleCount() const = 0` | `virtual unsigned int DOF() const = 0`\r\n*Get joint position* |\r\n`math::Angle GetAngle(unsigned int _index) const` | `virtual double Position(const unsigned int _index = 0) const final`\r\n`virtual math::Angle GetAngleImpl(unsigned int _index) const = 0` | `virtual double PositionImpl(const unsigned int _index = 0) const = 0`\r\n*Set upper joint limit* | \r\n`bool SetHighStop(unsigned int _index, const math::Angle &_angle)` | `virtual void SetUpperLimit(const unsigned int _index, const double _limit)`\r\n`void SetUpperLimit(unsigned int _index, math::Angle _limit)` |\r\n*Set lower joint limit* | \r\n`bool SetLowStop(unsigned int _index, const math::Angle &_angle)` | `virtual oid SetLowerLimit(const unsigned int _index, const double _limit)`\r\n`void SetLowerLimit(unsigned int _index, math::Angle _limit)` |\r\n*Get upper joint limit* |\r\n`virtual math::Angle GetHighStop(unsigned int _index) = 0` | `virtual double UpperLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetUpperLimit(unsigned int _index) const` |\r\n*Get lower joint limit* |\r\n`virtual math::Angle GetLowStop(unsigned int _index) = 0` | `virtual double LowerLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetLowerLimit(unsigned int _index) const` |\r\n*Lower joint limit, as determined by the base class* |\r\n`math::Angle lowerLimit[MAX_JOINT_AXIS]` | `double lowerLimit[MAX_JOINT_AXIS]`\r\n*Upper joint limit, as determined by the base class* |\r\n`math::Angle upperLimit[MAX_JOINT_AXIS]` | `double upperLimit[MAX_JOINT_AXIS]`\r\n\r\nThe API changes in several ways:\r\n\r\n* `math::Angle` -> `double` \r\n\r\n* No more returning `bool`\r\n\r\n* \"get\"s are const\r\n\r\n* All input params are const\r\n\r\n* When \"getting\", the default index is zero\r\n\r\n* All functions are virtual\r\n\r\n* Only `PositionImpl` is pure virtual\r\n\r\n# Commits\r\n\r\nThere are many changes, but they are mostly repeated. I recommend reviewing one commit at a time:\r\n\r\n* 06b7dcc: GetAngleCount -> DOF\r\n\r\n* e0294c0: upperLimit, lowerLimit and staticAngle to double\r\n\r\n* 98ac226: Deprecate SetUpper/LowerLimit which take angle in favor of double\r\n\r\n* 92d4573: Deprecate GetUpper/LowerLimit which return angle in favor of double\r\n\r\n* 9ce869e: Deprecate GetAngle() in favor of Position()\r\n\r\n* 03b7ba1: Deprecate GetAngleImpl() in favor of PositionImpl()\r\n\r\n* 90fa193: Deprecate GetHigh/LowStop in favor of Upper/LowerLimit, also make it not pure virtual\r\n\r\n* 202b5cd: Make Upper/LowerLimit const functions\r\n\r\n* 67ba648: Deprecate SetHigh/LowStop in favor of SetUpper/LowerLimit\r\n\r\n* d4b5dec: Make Set* virtual, remove using, fix switches and returns\r\n\r\nObs: If this is taking too long to review, I'll break this PR into smaller PRs, mostly following the commits above.", "title": "Deprecate angle API from physics::Joint, in favor of using doubles", "destination": {"commit": {"hash": "002bb28c50f0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/002bb28c50f0.json"}, "html": {"href": "#!/osrf/gazebo/commits/002bb28c50f0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e4a7b2644c2d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e4a7b2644c2d.json"}, "html": {"href": "#!/osrf/gazebo/commits/e4a7b2644c2d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ignmath_joint_angle"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-12-30T20:39:11.556897+00:00"}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"update": {"description": "Fixes issue #553 and issue #1108\r\n\r\n# API change summary\r\n\r\nOld | New\r\n--- | ---\r\n*Get number of degrees of freedom* |\r\n`virtual unsigned int GetAngleCount() const = 0` | `virtual unsigned int DOF() const = 0`\r\n*Get joint position* |\r\n`math::Angle GetAngle(unsigned int _index) const` | `virtual double Position(const unsigned int _index = 0) const final`\r\n`virtual math::Angle GetAngleImpl(unsigned int _index) const = 0` | `virtual double PositionImpl(const unsigned int _index = 0) const = 0`\r\n*Set upper joint limit* | \r\n`bool SetHighStop(unsigned int _index, const math::Angle &_angle)` | `virtual void SetUpperLimit(const unsigned int _index, const double _limit)`\r\n`void SetUpperLimit(unsigned int _index, math::Angle _limit)` |\r\n*Set lower joint limit* | \r\n`bool SetLowStop(unsigned int _index, const math::Angle &_angle)` | `virtual oid SetLowerLimit(const unsigned int _index, const double _limit)`\r\n`void SetLowerLimit(unsigned int _index, math::Angle _limit)` |\r\n*Get upper joint limit* |\r\n`virtual math::Angle GetHighStop(unsigned int _index) = 0` | `virtual double UpperLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetUpperLimit(unsigned int _index) const` |\r\n*Get lower joint limit* |\r\n`virtual math::Angle GetLowStop(unsigned int _index) = 0` | `virtual double LowerLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetLowerLimit(unsigned int _index) const` |\r\n*Lower joint limit, as determined by the base class* |\r\n`math::Angle lowerLimit[MAX_JOINT_AXIS]` | `double lowerLimit[MAX_JOINT_AXIS]`\r\n*Upper joint limit, as determined by the base class* |\r\n`math::Angle upperLimit[MAX_JOINT_AXIS]` | `double upperLimit[MAX_JOINT_AXIS]`\r\n\r\nThe API changes in several ways:\r\n\r\n* `math::Angle` -> `double` \r\n\r\n* No more returning `bool`\r\n\r\n* \"get\"s are const\r\n\r\n* All input params are const\r\n\r\n* When \"getting\", the default index is zero\r\n\r\n* All functions are virtual\r\n\r\n* Only `PositionImpl` is pure virtual\r\n\r\n# Commits\r\n\r\nThere are many changes, but they are mostly repeated. I recommend reviewing one commit at a time:\r\n\r\n* 06b7dcc: GetAngleCount -> DOF\r\n\r\n* e0294c0: upperLimit, lowerLimit and staticAngle to double\r\n\r\n* 98ac226: Deprecate SetUpper/LowerLimit which take angle in favor of double\r\n\r\n* 92d4573: Deprecate GetUpper/LowerLimit which return angle in favor of double\r\n\r\n* 9ce869e: Deprecate GetAngle() in favor of Position()\r\n\r\n* 03b7ba1: Deprecate GetAngleImpl() in favor of PositionImpl()\r\n\r\n* 90fa193: Deprecate GetHigh/LowStop in favor of Upper/LowerLimit, also make it not pure virtual\r\n\r\n* 202b5cd: Make Upper/LowerLimit const functions\r\n\r\n* 67ba648: Deprecate SetHigh/LowStop in favor of SetUpper/LowerLimit\r\n\r\n* d4b5dec: Make Set* virtual, remove using, fix switches and returns\r\n\r\nObs: If this is taking too long to review, I'll break this PR into smaller PRs, mostly following the commits above.", "title": "Deprecate angle API from physics::Joint, in favor of using doubles", "destination": {"commit": {"hash": "002bb28c50f0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/002bb28c50f0.json"}, "html": {"href": "#!/osrf/gazebo/commits/002bb28c50f0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e4a7b2644c2d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e4a7b2644c2d.json"}, "html": {"href": "#!/osrf/gazebo/commits/e4a7b2644c2d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ignmath_joint_angle"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-12-30T20:39:08.883907+00:00"}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568/comments/28990190.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568/_/diff#comment-28990190"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}, "content": {"raw": "Fixed factory test in 8cdc2f1", "markup": "markdown", "html": "<p>Fixed factory test in <a href=\"#!/osrf/gazebo/commits/8cdc2f1\" rel=\"nofollow\" class=\"ap-connect-link\">8cdc2f1</a></p>", "type": "rendered"}, "created_on": "2016-12-30T17:43:54.001867+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2016-12-30T17:43:54.003756+00:00", "type": "pullrequest_comment", "id": 28990190}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"update": {"description": "Fixes issue #553 and issue #1108\r\n\r\n# API change summary\r\n\r\nOld | New\r\n--- | ---\r\n*Get number of degrees of freedom* |\r\n`virtual unsigned int GetAngleCount() const = 0` | `virtual unsigned int DOF() const = 0`\r\n*Get joint position* |\r\n`math::Angle GetAngle(unsigned int _index) const` | `virtual double Position(const unsigned int _index = 0) const final`\r\n`virtual math::Angle GetAngleImpl(unsigned int _index) const = 0` | `virtual double PositionImpl(const unsigned int _index = 0) const = 0`\r\n*Set upper joint limit* | \r\n`bool SetHighStop(unsigned int _index, const math::Angle &_angle)` | `virtual void SetUpperLimit(const unsigned int _index, const double _limit)`\r\n`void SetUpperLimit(unsigned int _index, math::Angle _limit)` |\r\n*Set lower joint limit* | \r\n`bool SetLowStop(unsigned int _index, const math::Angle &_angle)` | `virtual oid SetLowerLimit(const unsigned int _index, const double _limit)`\r\n`void SetLowerLimit(unsigned int _index, math::Angle _limit)` |\r\n*Get upper joint limit* |\r\n`virtual math::Angle GetHighStop(unsigned int _index) = 0` | `virtual double UpperLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetUpperLimit(unsigned int _index) const` |\r\n*Get lower joint limit* |\r\n`virtual math::Angle GetLowStop(unsigned int _index) = 0` | `virtual double LowerLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetLowerLimit(unsigned int _index) const` |\r\n*Lower joint limit, as determined by the base class* |\r\n`math::Angle lowerLimit[MAX_JOINT_AXIS]` | `double lowerLimit[MAX_JOINT_AXIS]`\r\n*Upper joint limit, as determined by the base class* |\r\n`math::Angle upperLimit[MAX_JOINT_AXIS]` | `double upperLimit[MAX_JOINT_AXIS]`\r\n\r\nThe API changes in several ways:\r\n\r\n* `math::Angle` -> `double` \r\n\r\n* No more returning `bool`\r\n\r\n* \"get\"s are const\r\n\r\n* All input params are const\r\n\r\n* When \"getting\", the default index is zero\r\n\r\n* All functions are virtual\r\n\r\n* Only `PositionImpl` is pure virtual\r\n\r\n# Commits\r\n\r\nThere are many changes, but they are mostly repeated. I recommend reviewing one commit at a time:\r\n\r\n* 06b7dcc: GetAngleCount -> DOF\r\n\r\n* e0294c0: upperLimit, lowerLimit and staticAngle to double\r\n\r\n* 98ac226: Deprecate SetUpper/LowerLimit which take angle in favor of double\r\n\r\n* 92d4573: Deprecate GetUpper/LowerLimit which return angle in favor of double\r\n\r\n* 9ce869e: Deprecate GetAngle() in favor of Position()\r\n\r\n* 03b7ba1: Deprecate GetAngleImpl() in favor of PositionImpl()\r\n\r\n* 90fa193: Deprecate GetHigh/LowStop in favor of Upper/LowerLimit, also make it not pure virtual\r\n\r\n* 202b5cd: Make Upper/LowerLimit const functions\r\n\r\n* 67ba648: Deprecate SetHigh/LowStop in favor of SetUpper/LowerLimit\r\n\r\n* d4b5dec: Make Set* virtual, remove using, fix switches and returns\r\n\r\nObs: If this is taking too long to review, I'll break this PR into smaller PRs, mostly following the commits above.", "title": "Deprecate angle API from physics::Joint, in favor of using doubles", "destination": {"commit": {"hash": "002bb28c50f0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/002bb28c50f0.json"}, "html": {"href": "#!/osrf/gazebo/commits/002bb28c50f0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8cdc2f159a69", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8cdc2f159a69.json"}, "html": {"href": "#!/osrf/gazebo/commits/8cdc2f159a69"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ignmath_joint_angle"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2016-12-30T17:41:37.824000+00:00"}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568/comments/28966707.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568/_/diff#comment-28966707"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}, "content": {"raw": "Wow!", "markup": "markdown", "html": "<p>Wow!</p>", "type": "rendered"}, "created_on": "2016-12-30T02:05:52.934304+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-12-30T02:05:52.938961+00:00", "type": "pullrequest_comment", "id": 28966707}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"update": {"description": "Fixes issue #553 and issue #1108\r\n\r\n# API change summary\r\n\r\nOld | New\r\n--- | ---\r\n*Get number of degrees of freedom* |\r\n`virtual unsigned int GetAngleCount() const = 0` | `virtual unsigned int DOF() const = 0`\r\n*Get joint position* |\r\n`math::Angle GetAngle(unsigned int _index) const` | `virtual double Position(const unsigned int _index = 0) const final`\r\n`virtual math::Angle GetAngleImpl(unsigned int _index) const = 0` | `virtual double PositionImpl(const unsigned int _index = 0) const = 0`\r\n*Set upper joint limit* | \r\n`bool SetHighStop(unsigned int _index, const math::Angle &_angle)` | `virtual void SetUpperLimit(const unsigned int _index, const double _limit)`\r\n`void SetUpperLimit(unsigned int _index, math::Angle _limit)` |\r\n*Set lower joint limit* | \r\n`bool SetLowStop(unsigned int _index, const math::Angle &_angle)` | `virtual oid SetLowerLimit(const unsigned int _index, const double _limit)`\r\n`void SetLowerLimit(unsigned int _index, math::Angle _limit)` |\r\n*Get upper joint limit* |\r\n`virtual math::Angle GetHighStop(unsigned int _index) = 0` | `virtual double UpperLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetUpperLimit(unsigned int _index) const` |\r\n*Get lower joint limit* |\r\n`virtual math::Angle GetLowStop(unsigned int _index) = 0` | `virtual double LowerLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetLowerLimit(unsigned int _index) const` |\r\n*Lower joint limit, as determined by the base class* |\r\n`math::Angle lowerLimit[MAX_JOINT_AXIS]` | `double lowerLimit[MAX_JOINT_AXIS]`\r\n*Upper joint limit, as determined by the base class* |\r\n`math::Angle upperLimit[MAX_JOINT_AXIS]` | `double upperLimit[MAX_JOINT_AXIS]`\r\n\r\nThe API changes in several ways:\r\n\r\n* `math::Angle` -> `double` \r\n\r\n* No more returning `bool`\r\n\r\n* \"get\"s are const\r\n\r\n* All input params are const\r\n\r\n* When \"getting\", the default index is zero\r\n\r\n* All functions are virtual\r\n\r\n* Only `PositionImpl` is pure virtual\r\n\r\n# Commits\r\n\r\nThere are many changes, but they are mostly repeated. I recommend reviewing one commit at a time:\r\n\r\n* 06b7dcc: GetAngleCount -> DOF\r\n\r\n* e0294c0: upperLimit, lowerLimit and staticAngle to double\r\n\r\n* 98ac226: Deprecate SetUpper/LowerLimit which take angle in favor of double\r\n\r\n* 92d4573: Deprecate GetUpper/LowerLimit which return angle in favor of double\r\n\r\n* 9ce869e: Deprecate GetAngle() in favor of Position()\r\n\r\n* 03b7ba1: Deprecate GetAngleImpl() in favor of PositionImpl()\r\n\r\n* 90fa193: Deprecate GetHigh/LowStop in favor of Upper/LowerLimit, also make it not pure virtual\r\n\r\n* 202b5cd: Make Upper/LowerLimit const functions\r\n\r\n* 67ba648: Deprecate SetHigh/LowStop in favor of SetUpper/LowerLimit\r\n\r\n* d4b5dec: Make Set* virtual, remove using, fix switches and returns\r\n\r\nObs: If this is taking too long to review, I'll break this PR into smaller PRs, mostly following the commits above.", "title": "Deprecate angle API from physics::Joint, in favor of using doubles", "destination": {"commit": {"hash": "ec7824d21a36", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ec7824d21a36.json"}, "html": {"href": "#!/osrf/gazebo/commits/ec7824d21a36"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3946e829cd61", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3946e829cd61.json"}, "html": {"href": "#!/osrf/gazebo/commits/3946e829cd61"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ignmath_joint_angle"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2016-12-30T01:55:50.061119+00:00"}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"update": {"description": "Fixes issue #553 and issue #1108\r\n\r\n# API change summary\r\n\r\nOld | New\r\n--- | ---\r\n*Get number of degrees of freedom* |\r\n`virtual unsigned int GetAngleCount() const = 0` | `virtual unsigned int DOF() const = 0`\r\n*Get joint position* |\r\n`math::Angle GetAngle(unsigned int _index) const` | `virtual double Position(const unsigned int _index = 0) const final`\r\n`virtual math::Angle GetAngleImpl(unsigned int _index) const = 0` | `virtual double PositionImpl(const unsigned int _index = 0) const = 0`\r\n*Set upper joint limit* | \r\n`bool SetHighStop(unsigned int _index, const math::Angle &_angle)` | `virtual void SetUpperLimit(const unsigned int _index, const double _limit)`\r\n`void SetUpperLimit(unsigned int _index, math::Angle _limit)` |\r\n*Set lower joint limit* | \r\n`bool SetLowStop(unsigned int _index, const math::Angle &_angle)` | `virtual oid SetLowerLimit(const unsigned int _index, const double _limit)`\r\n`void SetLowerLimit(unsigned int _index, math::Angle _limit)` |\r\n*Get upper joint limit* |\r\n`virtual math::Angle GetHighStop(unsigned int _index) = 0` | `virtual double UpperLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetUpperLimit(unsigned int _index) const` |\r\n*Get lower joint limit* |\r\n`virtual math::Angle GetLowStop(unsigned int _index) = 0` | `virtual double LowerLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetLowerLimit(unsigned int _index) const` |\r\n*Lower joint limit, as determined by the base class* |\r\n`math::Angle lowerLimit[MAX_JOINT_AXIS]` | `double lowerLimit[MAX_JOINT_AXIS]`\r\n*Upper joint limit, as determined by the base class* |\r\n`math::Angle upperLimit[MAX_JOINT_AXIS]` | `double upperLimit[MAX_JOINT_AXIS]`\r\n\r\nThe API changes in several ways:\r\n\r\n* `math::Angle` -> `double` \r\n\r\n* No more returning `bool`\r\n\r\n* \"get\"s are const\r\n\r\n* All input params are const\r\n\r\n* When \"getting\", the default index is zero\r\n\r\n* All functions are virtual\r\n\r\n* Only `PositionImpl` is pure virtual\r\n\r\n# Commits\r\n\r\nThere are many changes, but they are mostly repeated. I recommend reviewing one commit at a time:\r\n\r\n* 06b7dcc: GetAngleCount -> DOF\r\n\r\n* e0294c0: upperLimit, lowerLimit and staticAngle to double\r\n\r\n* 98ac226: Deprecate SetUpper/LowerLimit which take angle in favor of double\r\n\r\n* 92d4573: Deprecate GetUpper/LowerLimit which return angle in favor of double\r\n\r\n* 9ce869e: Deprecate GetAngle() in favor of Position()\r\n\r\n* 03b7ba1: Deprecate GetAngleImpl() in favor of PositionImpl()\r\n\r\n* 90fa193: Deprecate GetHigh/LowStop in favor of Upper/LowerLimit, also make it not pure virtual\r\n\r\n* 202b5cd: Make Upper/LowerLimit const functions\r\n\r\n* 67ba648: Deprecate SetHigh/LowStop in favor of SetUpper/LowerLimit\r\n\r\n* d4b5dec: Make Set* virtual, remove using, fix switches and returns\r\n\r\nObs: If this is taking too long to review, I'll break this PR into smaller PRs, mostly following the commits above.", "title": "Deprecate angle API from physics::Joint, in favor of using doubles", "destination": {"commit": {"hash": "ec7824d21a36", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ec7824d21a36.json"}, "html": {"href": "#!/osrf/gazebo/commits/ec7824d21a36"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4b5dec6cfd8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d4b5dec6cfd8.json"}, "html": {"href": "#!/osrf/gazebo/commits/d4b5dec6cfd8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ignmath_joint_angle"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2016-12-30T01:40:28.463280+00:00"}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}, {"update": {"description": "Fixes issue #553 and issue #1108\r\n\r\n# API change summary\r\n\r\nOld | New\r\n--- | ---\r\n*Get number of degrees of freedom* |\r\n`virtual unsigned int GetAngleCount() const = 0` | `virtual unsigned int DOF() const = 0`\r\n*Get joint position* |\r\n`math::Angle GetAngle(unsigned int _index) const` | `virtual double Position(const unsigned int _index = 0) const final`\r\n`virtual math::Angle GetAngleImpl(unsigned int _index) const = 0` | `virtual double PositionImpl(const unsigned int _index = 0) const = 0`\r\n*Set upper joint limit* | \r\n`bool SetHighStop(unsigned int _index, const math::Angle &_angle)` | `virtual void SetUpperLimit(const unsigned int _index, const double _limit)`\r\n`void SetUpperLimit(unsigned int _index, math::Angle _limit)` |\r\n*Set lower joint limit* | \r\n`bool SetLowStop(unsigned int _index, const math::Angle &_angle)` | `virtual oid SetLowerLimit(const unsigned int _index, const double _limit)`\r\n`void SetLowerLimit(unsigned int _index, math::Angle _limit)` |\r\n*Get upper joint limit* |\r\n`virtual math::Angle GetHighStop(unsigned int _index) = 0` | `virtual double UpperLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetUpperLimit(unsigned int _index) const` |\r\n*Get lower joint limit* |\r\n`virtual math::Angle GetLowStop(unsigned int _index) = 0` | `virtual double LowerLimit(const unsigned int _index = 0) const`\r\n`math::Angle GetLowerLimit(unsigned int _index) const` |\r\n*Lower joint limit, as determined by the base class* |\r\n`math::Angle lowerLimit[MAX_JOINT_AXIS]` | `double lowerLimit[MAX_JOINT_AXIS]`\r\n*Upper joint limit, as determined by the base class* |\r\n`math::Angle upperLimit[MAX_JOINT_AXIS]` | `double upperLimit[MAX_JOINT_AXIS]`\r\n\r\nThe API changes in several ways:\r\n\r\n* `math::Angle` -> `double` \r\n\r\n* No more returning `bool`\r\n\r\n* \"get\"s are const\r\n\r\n* All input params are const\r\n\r\n* When \"getting\", the default index is zero\r\n\r\n* All functions are virtual\r\n\r\n* Only `PositionImpl` is pure virtual\r\n\r\n# Commits\r\n\r\nThere are many changes, but they are mostly repeated. I recommend reviewing one commit at a time:\r\n\r\n* 06b7dcc: GetAngleCount -> DOF\r\n\r\n* e0294c0: upperLimit, lowerLimit and staticAngle to double\r\n\r\n* 98ac226: Deprecate SetUpper/LowerLimit which take angle in favor of double\r\n\r\n* 92d4573: Deprecate GetUpper/LowerLimit which return angle in favor of double\r\n\r\n* 9ce869e: Deprecate GetAngle() in favor of Position()\r\n\r\n* 03b7ba1: Deprecate GetAngleImpl() in favor of PositionImpl()\r\n\r\n* 90fa193: Deprecate GetHigh/LowStop in favor of Upper/LowerLimit, also make it not pure virtual\r\n\r\n* 202b5cd: Make Upper/LowerLimit const functions\r\n\r\n* 67ba648: Deprecate SetHigh/LowStop in favor of SetUpper/LowerLimit\r\n\r\n* d4b5dec: Make Set* virtual, remove using, fix switches and returns\r\n\r\nObs: If this is taking too long to review, I'll break this PR into smaller PRs, mostly following the commits above.", "title": "Deprecate angle API from physics::Joint, in favor of using doubles", "destination": {"commit": {"hash": "ec7824d21a36", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ec7824d21a36.json"}, "html": {"href": "#!/osrf/gazebo/commits/ec7824d21a36"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4b5dec6cfd8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d4b5dec6cfd8.json"}, "html": {"href": "#!/osrf/gazebo/commits/d4b5dec6cfd8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ignmath_joint_angle"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2016-12-30T01:40:28.443323+00:00"}, "pull_request": {"type": "pullrequest", "id": 2568, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2568.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2568"}}, "title": "Deprecate angle API from physics::Joint, in favor of using doubles"}}]}