{"pagelen": 50, "values": [{"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e7b5cde33db1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e7b5cde33db1.json"}, "html": {"href": "#!/osrf/gazebo/commits/e7b5cde33db1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dc4dd1ab6368", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dc4dd1ab6368.json"}, "html": {"href": "#!/osrf/gazebo/commits/dc4dd1ab6368"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-12-09T01:06:19.521085+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/51538319.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-51538319"}}, "parent": {"id": 51537336, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/51537336.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-51537336"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "thanks for the reviews!!!!!!!!", "markup": "markdown", "html": "<p>thanks for the reviews!!!!!!!!</p>", "type": "rendered"}, "created_on": "2017-12-09T01:05:39.741391+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-12-09T01:05:39.743913+00:00", "type": "pullrequest_comment", "id": 51538319}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"approval": {"date": "2017-12-09T00:53:29.915301+00:00", "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"approval": {"date": "2017-12-09T00:26:58.118160+00:00", "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/51537336.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-51537336"}}, "parent": {"id": 49880737, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49880737.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49880737"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "new build is down to [30 cppcheck errors](https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/698/cppcheckResult/)\n\n(I also have the next branch waiting in the wings that will take it to 0)", "markup": "markdown", "html": "<p>new build is down to <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/698/cppcheckResult/\" rel=\"nofollow\">30 cppcheck errors</a></p>\n<p>(I also have the next branch waiting in the wings that will take it to 0)</p>", "type": "rendered"}, "created_on": "2017-12-09T00:05:54.524772+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-12-09T00:05:54.527163+00:00", "type": "pullrequest_comment", "id": 51537336}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/51521022.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-51521022"}}, "parent": {"id": 51520191, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/51520191.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-51520191"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "reverted in dc4dd1ab6368", "markup": "markdown", "html": "<p>reverted in <a href=\"#!/osrf/gazebo/commits/dc4dd1ab6368\" rel=\"nofollow\" class=\"ap-connect-link\">dc4dd1ab6368</a></p>", "type": "rendered"}, "created_on": "2017-12-08T18:41:20.856249+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-12-08T18:41:20.859284+00:00", "type": "pullrequest_comment", "id": 51521022}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e7b5cde33db1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e7b5cde33db1.json"}, "html": {"href": "#!/osrf/gazebo/commits/e7b5cde33db1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dc4dd1ab6368", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dc4dd1ab6368.json"}, "html": {"href": "#!/osrf/gazebo/commits/dc4dd1ab6368"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-12-08T18:41:14.978491+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/51520191.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-51520191"}}, "parent": {"id": 49892557, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49892557.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49892557"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "Ok, I think we shouldn't block this and just revert that change", "markup": "markdown", "html": "<p>Ok, I think we shouldn't block this and just revert that change</p>", "type": "rendered"}, "created_on": "2017-12-08T18:28:40.763378+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-12-08T18:28:40.765598+00:00", "type": "pullrequest_comment", "id": 51520191}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e7b5cde33db1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e7b5cde33db1.json"}, "html": {"href": "#!/osrf/gazebo/commits/e7b5cde33db1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "40aa53d1b92f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/40aa53d1b92f.json"}, "html": {"href": "#!/osrf/gazebo/commits/40aa53d1b92f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-12-08T18:22:40.569886+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e7b5cde33db1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e7b5cde33db1.json"}, "html": {"href": "#!/osrf/gazebo/commits/e7b5cde33db1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f329e05dfa7b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f329e05dfa7b.json"}, "html": {"href": "#!/osrf/gazebo/commits/f329e05dfa7b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-12-08T18:16:45.405900+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49892557.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49892557"}}, "parent": {"id": 49892512, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49892512.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49892512"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "I'm inclined to revert that change unless someone else has a proposal for fixing it", "markup": "markdown", "html": "<p>I'm inclined to revert that change unless someone else has a proposal for fixing it</p>", "type": "rendered"}, "created_on": "2017-11-17T18:04:40.115485+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-17T18:04:40.118208+00:00", "type": "pullrequest_comment", "id": 49892557}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49892512.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49892512"}}, "parent": {"id": 49880737, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49880737.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49880737"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "somehow the small change in 82f1573 causes seg-faults during teardown. from `UNIT_PresetManager_TEST`:\n\n~~~\n[ RUN      ] PresetManagerTest.GetSetPresetParam\n[Wrn] [PresetManager.cc:149] Parameter [] is not a member of profile [preset1]\n[Wrn] [PresetManager.cc:149] Parameter [key_does_not_exist] is not a member of profile [preset1]\n[Dbg] [ServerFixture.cc:135] ServerFixture::Unload\n[       OK ] PresetManagerTest.GetSetPresetParam (1 ms)\n[ RUN      ] PresetManagerTest.GetSetProfileParam\n[Err] [PresetManager.cc:207] Required arguments NULL for PresetManager\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.90\n[Dbg] [ServerFixture.cc:209] ServerFixture load in 1.2 seconds, timeout after 600 seconds\n[Wrn] [PresetManager.cc:267] Profile [preset_does_not_exist] not found.\n/data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager_TEST.cc:78: Failure\nValue of: presetManager->SetCurrentProfileParam(\"max_step_size\", 0.8)\n  Actual: false\nExpected: true\n/data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager_TEST.cc:80: Failure\nValue of: presetManager->SetProfileParam(\"preset_1\", \"max_step_size\", max_step_size)\n  Actual: false\nExpected: true\nunknown file: Failure\nC++ exception with description \"basic_string::_M_construct null not valid\" thrown in the test body.\n[Dbg] [ServerFixture.cc:135] ServerFixture::Unload\nAL lib: (WW) alcCloseDevice: Releasing context 0x7f4d854cca20\nSegmentation fault (core dumped)\n~~~\n\n~~~\nThread 3 \"UNIT_PresetMana\" received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffc3a2c700 (LWP 2584)]\nstd::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1000) at /usr/include/c++/5/bits/shared_ptr_base.h:147\n147\t\tif (__gnu_cxx::__exchange_and_add_dispatch(&_M_use_count, -1) == 1)\n(gdb) bt\n#0  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1000) at /usr/include/c++/5/bits/shared_ptr_base.h:147\n#1  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=<optimized out>, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr_base.h:659\n#2  std::__shared_ptr<sdf::Element, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr_base.h:925\n#3  std::__shared_ptr<sdf::Element, (__gnu_cxx::_Lock_policy)2>::reset (this=0x7fffbd200cf0) at /usr/include/c++/5/bits/shared_ptr_base.h:1022\n#4  gazebo::physics::Preset::~Preset (this=0x7fffbd4895a0, __in_chrg=<optimized out>) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager.cc:57\n#5  0x00007ffff7337469 in std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset>::~pair (this=0x7fffbd489580, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/stl_pair.h:96\n#6  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > (this=<optimized out>, __p=<optimized out>) at /usr/include/c++/5/ext/new_allocator.h:124\n#7  std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > (__a=..., __p=<optimized out>) at /usr/include/c++/5/bits/alloc_traits.h:542\n#8  std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > >::_M_destroy_node (this=0x7fffbd2014c0, __p=0x7fffbd489560) at /usr/include/c++/5/bits/stl_tree.h:553\n#9  std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > >::_M_drop_node (__p=0x7fffbd489560, this=0x7fffbd2014c0) at /usr/include/c++/5/bits/stl_tree.h:561\n#10 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > >::_M_erase (this=this@entry=0x7fffbd2014c0, __x=0x7fffbd489560) at /usr/include/c++/5/bits/stl_tree.h:1614\n#11 0x00007ffff733745c in std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > >::_M_erase (this=this@entry=0x7fffbd2014c0, __x=0x7fffbd480c30) at /usr/include/c++/5/bits/stl_tree.h:1612\n#12 0x00007ffff7332a69 in std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > >::clear (this=0x7fffbd2014c0) at /usr/include/c++/5/bits/stl_tree.h:1075\n#13 std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, gazebo::physics::Preset, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, gazebo::physics::Preset> > >::clear (this=0x7fffbd2014c0) at /usr/include/c++/5/bits/stl_map.h:810\n#14 gazebo::physics::PresetManager::~PresetManager (this=0x7fffbd201480, __in_chrg=<optimized out>) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager.cc:251\n#15 0x00007ffff7365202 in boost::checked_delete<gazebo::physics::PresetManager> (x=0x7fffbd201480) at /usr/include/boost/core/checked_delete.hpp:34\n#16 boost::detail::sp_counted_impl_p<gazebo::physics::PresetManager>::dispose (this=<optimized out>) at /usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78\n#17 0x00007ffff7348bfa in boost::detail::sp_counted_base::release (this=0x7fffbd201530) at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\n#18 0x00007ffff73588ab in boost::detail::sp_counted_base::release (this=<optimized out>) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/common/SingletonT.hh:50\n#19 boost::detail::shared_count::~shared_count (this=<optimized out>, __in_chrg=<optimized out>) at /usr/include/boost/smart_ptr/detail/shared_count.hpp:443\n#20 boost::shared_ptr<gazebo::physics::PhysicsEngine>::~shared_ptr (this=<optimized out>, __in_chrg=<optimized out>) at /usr/include/boost/smart_ptr/shared_ptr.hpp:323\n#21 boost::shared_ptr<gazebo::physics::PhysicsEngine>::reset (this=<optimized out>) at /usr/include/boost/smart_ptr/shared_ptr.hpp:614\n#22 gazebo::physics::World::Fini (this=0x7fffbc7381d0) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/World.cc:921\n#23 0x00007ffff731f35a in gazebo::physics::remove_worlds () at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PhysicsIface.cc:157\n#24 0x00007ffff731f499 in gazebo::physics::fini () at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PhysicsIface.cc:51\n#25 0x00007ffff79a2439 in gazebo::shutdown () at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/gazebo.cc:140\n#26 0x00007ffff7986d5d in gazebo::Server::Run (this=0x7fffbc000950) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/Server.cc:591\n#27 0x00000000004435ed in gazebo::ServerFixture::RunServer (this=0x75e4d0, _args=...) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/test/ServerFixture.cc:276\n#28 0x00007ffff5dff5d5 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.58.0\n#29 0x00007ffff7bc16ba in start_thread (arg=0x7fffc3a2c700) at pthread_create.c:333\n#30 0x00007ffff488f3dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n(gdb) \n~~~", "markup": "markdown", "html": "<p>somehow the small change in <a href=\"#!/osrf/gazebo/commits/82f1573\" rel=\"nofollow\" class=\"ap-connect-link\">82f1573</a> causes seg-faults during teardown. from <code>UNIT_PresetManager_TEST</code>:</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] PresetManagerTest.GetSetPresetParam\n[Wrn] [PresetManager.cc:149] Parameter [] is not a member of profile [preset1]\n[Wrn] [PresetManager.cc:149] Parameter [key_does_not_exist] is not a member of profile [preset1]\n[Dbg] [ServerFixture.cc:135] ServerFixture::Unload\n[       OK ] PresetManagerTest.GetSetPresetParam (1 ms)\n[ RUN      ] PresetManagerTest.GetSetProfileParam\n[Err] [PresetManager.cc:207] Required arguments NULL for PresetManager\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 172.23.2.90\n[Dbg] [ServerFixture.cc:209] ServerFixture load in 1.2 seconds, timeout after 600 seconds\n[Wrn] [PresetManager.cc:267] Profile [preset_does_not_exist] not found.\n/data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager_TEST.cc:78: Failure\nValue of: presetManager-&gt;SetCurrentProfileParam(&quot;max_step_size&quot;, 0.8)\n  Actual: false\nExpected: true\n/data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager_TEST.cc:80: Failure\nValue of: presetManager-&gt;SetProfileParam(&quot;preset_1&quot;, &quot;max_step_size&quot;, max_step_size)\n  Actual: false\nExpected: true\nunknown file: Failure\nC++ exception with description &quot;basic_string::_M_construct null not valid&quot; thrown in the test body.\n[Dbg] [ServerFixture.cc:135] ServerFixture::Unload\nAL lib: (WW) alcCloseDevice: Releasing context 0x7f4d854cca20\nSegmentation fault (core dumped)\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>Thread 3 &quot;UNIT_PresetMana&quot; received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffc3a2c700 (LWP 2584)]\nstd::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (this=0x1000) at /usr/include/c++/5/bits/shared_ptr_base.h:147\n147     if (__gnu_cxx::__exchange_and_add_dispatch(&amp;_M_use_count, -1) == 1)\n(gdb) bt\n#0  std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (this=0x1000) at /usr/include/c++/5/bits/shared_ptr_base.h:147\n#1  std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/5/bits/shared_ptr_base.h:659\n#2  std::__shared_ptr&lt;sdf::Element, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/5/bits/shared_ptr_base.h:925\n#3  std::__shared_ptr&lt;sdf::Element, (__gnu_cxx::_Lock_policy)2&gt;::reset (this=0x7fffbd200cf0) at /usr/include/c++/5/bits/shared_ptr_base.h:1022\n#4  gazebo::physics::Preset::~Preset (this=0x7fffbd4895a0, __in_chrg=&lt;optimized out&gt;) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager.cc:57\n#5  0x00007ffff7337469 in std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt;::~pair (this=0x7fffbd489580, __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/5/bits/stl_pair.h:96\n#6  __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; (this=&lt;optimized out&gt;, __p=&lt;optimized out&gt;) at /usr/include/c++/5/ext/new_allocator.h:124\n#7  std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; (__a=..., __p=&lt;optimized out&gt;) at /usr/include/c++/5/bits/alloc_traits.h:542\n#8  std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt;::_M_destroy_node (this=0x7fffbd2014c0, __p=0x7fffbd489560) at /usr/include/c++/5/bits/stl_tree.h:553\n#9  std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt;::_M_drop_node (__p=0x7fffbd489560, this=0x7fffbd2014c0) at /usr/include/c++/5/bits/stl_tree.h:561\n#10 std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt;::_M_erase (this=this@entry=0x7fffbd2014c0, __x=0x7fffbd489560) at /usr/include/c++/5/bits/stl_tree.h:1614\n#11 0x00007ffff733745c in std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt;::_M_erase (this=this@entry=0x7fffbd2014c0, __x=0x7fffbd480c30) at /usr/include/c++/5/bits/stl_tree.h:1612\n#12 0x00007ffff7332a69 in std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt;::clear (this=0x7fffbd2014c0) at /usr/include/c++/5/bits/stl_tree.h:1075\n#13 std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, gazebo::physics::Preset, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::Preset&gt; &gt; &gt;::clear (this=0x7fffbd2014c0) at /usr/include/c++/5/bits/stl_map.h:810\n#14 gazebo::physics::PresetManager::~PresetManager (this=0x7fffbd201480, __in_chrg=&lt;optimized out&gt;) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PresetManager.cc:251\n#15 0x00007ffff7365202 in boost::checked_delete&lt;gazebo::physics::PresetManager&gt; (x=0x7fffbd201480) at /usr/include/boost/core/checked_delete.hpp:34\n#16 boost::detail::sp_counted_impl_p&lt;gazebo::physics::PresetManager&gt;::dispose (this=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78\n#17 0x00007ffff7348bfa in boost::detail::sp_counted_base::release (this=0x7fffbd201530) at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\n#18 0x00007ffff73588ab in boost::detail::sp_counted_base::release (this=&lt;optimized out&gt;) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/common/SingletonT.hh:50\n#19 boost::detail::shared_count::~shared_count (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/detail/shared_count.hpp:443\n#20 boost::shared_ptr&lt;gazebo::physics::PhysicsEngine&gt;::~shared_ptr (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/shared_ptr.hpp:323\n#21 boost::shared_ptr&lt;gazebo::physics::PhysicsEngine&gt;::reset (this=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/shared_ptr.hpp:614\n#22 gazebo::physics::World::Fini (this=0x7fffbc7381d0) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/World.cc:921\n#23 0x00007ffff731f35a in gazebo::physics::remove_worlds () at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PhysicsIface.cc:157\n#24 0x00007ffff731f499 in gazebo::physics::fini () at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/physics/PhysicsIface.cc:51\n#25 0x00007ffff79a2439 in gazebo::shutdown () at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/gazebo.cc:140\n#26 0x00007ffff7986d5d in gazebo::Server::Run (this=0x7fffbc000950) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/Server.cc:591\n#27 0x00000000004435ed in gazebo::ServerFixture::RunServer (this=0x75e4d0, _args=...) at /data_fast/scpeters/ws/tmp/gazebo_build/src/gazebo/gazebo/test/ServerFixture.cc:276\n#28 0x00007ffff5dff5d5 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.58.0\n#29 0x00007ffff7bc16ba in start_thread (arg=0x7fffc3a2c700) at pthread_create.c:333\n#30 0x00007ffff488f3dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n(gdb) \n</pre></div>", "type": "rendered"}, "created_on": "2017-11-17T18:03:55.437226+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-17T18:03:55.439785+00:00", "type": "pullrequest_comment", "id": 49892512}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49880737.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49880737"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "One last build:\n\nhttps://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/684/", "markup": "markdown", "html": "<p>One last build:</p>\n<p><a href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/684/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/684/</a></p>", "type": "rendered"}, "created_on": "2017-11-17T15:58:17.119615+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-11-17T15:58:17.121854+00:00", "type": "pullrequest_comment", "id": 49880737}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49834745.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49834745"}}, "parent": {"id": 49823102, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49823102.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49823102"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "marked as explicit in 82f15737899f\n\nthanks for the feedback", "markup": "markdown", "html": "<p>marked as explicit in <a href=\"#!/osrf/gazebo/commits/82f15737899f\" rel=\"nofollow\" class=\"ap-connect-link\">82f15737899f</a></p>\n<p>thanks for the feedback</p>", "type": "rendered"}, "created_on": "2017-11-17T08:34:54.850409+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-11-17T08:34:54.854161+00:00", "type": "pullrequest_comment", "id": 49834745}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "b4ea1ead1855", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4ea1ead1855.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4ea1ead1855"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "82f15737899f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/82f15737899f.json"}, "html": {"href": "#!/osrf/gazebo/commits/82f15737899f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-11-17T08:34:29.031625+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "b4ea1ead1855", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4ea1ead1855.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4ea1ead1855"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "82f15737899f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/82f15737899f.json"}, "html": {"href": "#!/osrf/gazebo/commits/82f15737899f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-11-17T08:34:28.043602+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49823102.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49823102"}}, "parent": {"id": 49822088, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49822088.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49822088"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "To me the cpp code is more clear as `this->dataPtr->presetProfiles.emplace(_name, Preset(_name));`. Same as @chapulina . But I would also add the explicit unless there's a specific use case.", "markup": "markdown", "html": "<p>To me the cpp code is more clear as <code>this-&gt;dataPtr-&gt;presetProfiles.emplace(_name, Preset(_name));</code>. Same as @chapulina . But I would also add the explicit unless there's a specific use case.</p>", "type": "rendered"}, "created_on": "2017-11-17T04:14:29.661067+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-11-17T04:14:29.669438+00:00", "type": "pullrequest_comment", "id": 49823102}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49822088.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49822088"}}, "parent": {"id": 49821964, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49821964.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49821964"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "yeah, my mistake\n\nI had seen it earlier then tried to guess where it was without testing\n\nso @caguero you'd prefer changing the cpp code and marking the constructor as explicit?", "markup": "markdown", "html": "<p>yeah, my mistake</p>\n<p>I had seen it earlier then tried to guess where it was without testing</p>\n<p>so @caguero you'd prefer changing the cpp code and marking the constructor as explicit?</p>", "type": "rendered"}, "created_on": "2017-11-17T03:36:36.603702+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-11-17T03:36:36.611705+00:00", "type": "pullrequest_comment", "id": 49822088}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49821964.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49821964"}}, "parent": {"id": 49821846, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49821846.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49821846"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "It's this line:\n\n#!/osrf/gazebo/src/26073a5dcf34878157b5e25d0730835db9a397df/gazebo/physics/PresetManager.cc?fileviewer=file-view-default#PresetManager.cc-402", "markup": "markdown", "html": "<p>It's this line:</p>\n<p><a href=\"#!/osrf/gazebo/src/26073a5dcf34878157b5e25d0730835db9a397df/gazebo/physics/PresetManager.cc?fileviewer=file-view-default#PresetManager.cc-402\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/26073a5dcf34878157b5e25d0730835db9a397df/gazebo/physics/PresetManager.cc?fileviewer=file-view-default#PresetManager.cc-402</a></p>", "type": "rendered"}, "created_on": "2017-11-17T03:31:08.899571+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-11-17T03:31:08.902124+00:00", "type": "pullrequest_comment", "id": 49821964}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49821846.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49821846"}}, "parent": {"id": 49820035, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49820035.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49820035"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "oh that's true. humm then maybe the compiler error happens somewhere else?", "markup": "markdown", "html": "<p>oh that's true. humm then maybe the compiler error happens somewhere else?</p>", "type": "rendered"}, "created_on": "2017-11-17T03:26:54.962900+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-11-17T03:26:54.965353+00:00", "type": "pullrequest_comment", "id": 49821846}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49820035.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49820035"}}, "parent": {"id": 49819383, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49819383.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49819383"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "I'm not sure about @chapulina 's suggestion. `currentPreset` is a `string`, right?", "markup": "markdown", "html": "<p>I'm not sure about @chapulina 's suggestion. <code>currentPreset</code> is a <code>string</code>, right?</p>", "type": "rendered"}, "created_on": "2017-11-17T02:26:24.292236+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-11-17T02:26:24.301520+00:00", "type": "pullrequest_comment", "id": 49820035}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49819383.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49819383"}}, "parent": {"id": 49819259, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49819259.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49819259"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "that would work too; my logic was to make them all explicit unless the implicit constructor was actually being used and it seemed reasonable\n\nI could go either way. What do you think @caguero ? Break the tie", "markup": "markdown", "html": "<p>that would work too; my logic was to make them all explicit unless the implicit constructor was actually being used and it seemed reasonable</p>\n<p>I could go either way. What do you think @caguero ? Break the tie</p>", "type": "rendered"}, "created_on": "2017-11-17T02:00:48.412087+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-11-17T02:00:48.419653+00:00", "type": "pullrequest_comment", "id": 49819383}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49819276.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49819276"}}, "parent": {"id": 49818285, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49818285.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49818285"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "I asked the same, but bitbucket hid my question :confused: ", "markup": "markdown", "html": "<p>I asked the same, but bitbucket hid my question <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f615.png\" alt=\"\ud83d\ude15\" title=\":confused:\" data-emoji-short-name=\":confused:\" /> </p>", "type": "rendered"}, "created_on": "2017-11-17T01:55:51.634961+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-11-17T01:55:51.636959+00:00", "type": "pullrequest_comment", "id": 49819276}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49819259.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49819259"}}, "parent": {"id": 49600814, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49600814.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49600814"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "I see, how about changing that line to something like `this->dataPtr->currentPreset = physics::Preset(_name);`?", "markup": "markdown", "html": "<p>I see, how about changing that line to something like <code>this-&gt;dataPtr-&gt;currentPreset = physics::Preset(_name);</code>?</p>", "type": "rendered"}, "created_on": "2017-11-17T01:55:06.428664+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-11-17T01:55:06.431859+00:00", "type": "pullrequest_comment", "id": 49819259}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49818285.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49818285"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "Just checking, is this one suppressed on purpose too (like `Inertial`)?", "markup": "markdown", "html": "<p>Just checking, is this one suppressed on purpose too (like <code>Inertial</code>)?</p>", "type": "rendered"}, "created_on": "2017-11-17T01:23:37.679048+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-11-17T01:23:37.681607+00:00", "type": "pullrequest_comment", "id": 49818285}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49818210.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49818210"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "I've queued a new round of jenkins builds", "markup": "markdown", "html": "<p>I've queued a new round of jenkins builds</p>", "type": "rendered"}, "created_on": "2017-11-17T01:21:58.296174+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-17T01:21:58.298636+00:00", "type": "pullrequest_comment", "id": 49818210}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49818135.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49818135"}}, "parent": {"id": 48681912, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/48681912.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-48681912"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "I have the next branch lined up that will finish off the rest of the cppcheck warnings as soon as this one is merged", "markup": "markdown", "html": "<p>I have the next branch lined up that will finish off the rest of the cppcheck warnings as soon as this one is merged</p>", "type": "rendered"}, "created_on": "2017-11-17T01:19:58.697348+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-17T01:19:58.699523+00:00", "type": "pullrequest_comment", "id": 49818135}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "b4ea1ead1855", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4ea1ead1855.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4ea1ead1855"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4c36bfedf84a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4c36bfedf84a.json"}, "html": {"href": "#!/osrf/gazebo/commits/4c36bfedf84a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-11-17T01:19:25.031955+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "b4ea1ead1855", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4ea1ead1855.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4ea1ead1855"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4c36bfedf84a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4c36bfedf84a.json"}, "html": {"href": "#!/osrf/gazebo/commits/4c36bfedf84a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-11-17T01:19:23.470871+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49600814.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49600814"}}, "parent": {"id": 49594160, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49594160.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49594160"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "there's a compiler error in the following line if we make this explicit:\n\n* #!/osrf/gazebo/src/26073a5dcf34878157b5e25d0730835db9a397df/gazebo/physics/PresetManager.cc?fileviewer=file-view-default#PresetManager.cc-277\n\nso I gave it an exception", "markup": "markdown", "html": "<p>there's a compiler error in the following line if we make this explicit:</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/src/26073a5dcf34878157b5e25d0730835db9a397df/gazebo/physics/PresetManager.cc?fileviewer=file-view-default#PresetManager.cc-277\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/26073a5dcf34878157b5e25d0730835db9a397df/gazebo/physics/PresetManager.cc?fileviewer=file-view-default#PresetManager.cc-277</a></li>\n</ul>\n<p>so I gave it an exception</p>", "type": "rendered"}, "created_on": "2017-11-15T06:00:24.779115+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2017-11-15T06:00:24.781725+00:00", "type": "pullrequest_comment", "id": 49600814}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/49594160.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-49594160"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "Curious about the motivation for keeping this one", "markup": "markdown", "html": "<p>Curious about the motivation for keeping this one</p>", "type": "rendered"}, "created_on": "2017-11-15T02:33:27.407450+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-11-15T02:33:27.409675+00:00", "type": "pullrequest_comment", "id": 49594160}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "75b7d15c6c2a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/75b7d15c6c2a.json"}, "html": {"href": "#!/osrf/gazebo/commits/75b7d15c6c2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "26073a5dcf34", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/26073a5dcf34.json"}, "html": {"href": "#!/osrf/gazebo/commits/26073a5dcf34"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-11-15T01:24:54.645053+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792/comments/48681912.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792/_/diff#comment-48681912"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}, "content": {"raw": "after merging two similar PR's, this branch brings us down to 30 cppcheck errors:\n\n* https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/657/cppcheckResult/", "markup": "markdown", "html": "<p>after merging two similar PR's, this branch brings us down to 30 cppcheck errors:</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/657/cppcheckResult/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/657/cppcheckResult/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2017-11-02T23:29:51.432579+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-02T23:29:51.435297+00:00", "type": "pullrequest_comment", "id": 48681912}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "a3eb517b0fa5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a3eb517b0fa5.json"}, "html": {"href": "#!/osrf/gazebo/commits/a3eb517b0fa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "51a8ae90b6b6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/51a8ae90b6b6.json"}, "html": {"href": "#!/osrf/gazebo/commits/51a8ae90b6b6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-11-02T18:23:43.306653+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e26144434b93", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e26144434b93.json"}, "html": {"href": "#!/osrf/gazebo/commits/e26144434b93"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2399f313697b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2399f313697b.json"}, "html": {"href": "#!/osrf/gazebo/commits/2399f313697b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-10-27T17:09:09.409439+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~\r\n\r\nUPDATE: all the jenkins builds failed to compile, so reverted the `explicit` keyword for the `Preset(string)` constructor and suppressed the warning instead in 6ea1844.", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e26144434b93", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e26144434b93.json"}, "html": {"href": "#!/osrf/gazebo/commits/e26144434b93"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6ea18441ef3a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6ea18441ef3a.json"}, "html": {"href": "#!/osrf/gazebo/commits/6ea18441ef3a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-10-25T00:05:16.691586+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e26144434b93", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e26144434b93.json"}, "html": {"href": "#!/osrf/gazebo/commits/e26144434b93"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6ea18441ef3a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/6ea18441ef3a.json"}, "html": {"href": "#!/osrf/gazebo/commits/6ea18441ef3a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-10-25T00:01:42.601820+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e26144434b93", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e26144434b93.json"}, "html": {"href": "#!/osrf/gazebo/commits/e26144434b93"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0824d0a990e3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0824d0a990e3.json"}, "html": {"href": "#!/osrf/gazebo/commits/0824d0a990e3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-10-24T20:06:49.103244+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}, {"update": {"description": "Similar to pull request #2790. We have a boatload of cppcheck warnings about constructors with one argument that aren't marked explicit. I think in most cases, these constructors should be explicit, and I've marked the ones in the physics classes explicit in this pull request, with one exception. I've suppressed the warning for `gazebo::physics::Inertial(const ignition::math::Inertiald &)` since I think it could be useful to convert easily between these types.\r\n\r\nThis is kind of a boring diff, but the following command can help a little. It looks at all changed lines in the diff, deletes `explicit` and the first character (`-` or `+`), then counts unique adjacent lines. Everything that starts with a `2` was identical except for those two changes. This shows that the majority of lines are identical aside from the addition of `explicit`, except for `GearboxJoint.hh`, `BulletBoxShape.hh`, `BulletPlaneShape.hh`, `BulletSphereShape.hh`, `SimbodyBoxShape.hh`, and `SimbodySphereShape.hh`, which needed some lines to be wrapped to stay under 80 characters, the cppcheck suppression added to `Inertial.hh`, and `DARTJointPrivate.hh` in which I renamed a parameter to meet the 80 character limit without wrapping any lines.\r\n\r\n~~~\r\n$ hg up explicit_constructors_physics\r\n$ hg diff -r default \\\r\n  | grep '^[-+] ' \\\r\n  | sed -e 's@explicit @@' -e 's@^.@@' \\\r\n  | uniq -c\r\n      2       public: AdiabaticAtmosphere(physics::World &_world);\r\n      2       public: AtmospherePrivate(physics::World &_world)\r\n      2       public: FixedJoint(BasePtr _parent) : T(_parent)\r\n      1       public: GearboxJoint(BasePtr _parent) : T(_parent), gearRatio(1.0)\r\n      1       public: GearboxJoint(BasePtr _parent)\r\n      1               : T(_parent), gearRatio(1.0)\r\n      2       public: HingeJoint(BasePtr _parent) : T(_parent)\r\n      1       // cppcheck-suppress noExplicitConstructor\r\n      2   public: FakeJoint(physics::ModelPtr _model) : physics::Joint(_model)\r\n      2       public: Light(BasePtr _parent);\r\n      2       public: QuadNode(QuadNode *_parent)\r\n      2       public: Preset(const std::string & _name);\r\n      2       public: PresetPrivate(const std::string &_name = \"default name\")\r\n      2       public: UserCmdManager(const WorldPtr _world);\r\n      2       public: WindPrivate(physics::World &_world)\r\n      1       public: BulletBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: BulletBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: BulletCollision(LinkPtr _parent);\r\n      2       public: BulletCylinderShape(CollisionPtr _parent)\r\n      2       public: BulletHeightmapShape(CollisionPtr _parent);\r\n      2       public: BulletJoint(BasePtr _parent);\r\n      2       public: BulletLink(EntityPtr _parent);\r\n      2       public: BulletMeshShape(CollisionPtr _parent);\r\n      2       public: BulletMotionState(LinkPtr _link);\r\n      2       public: BulletMultiRayShape(CollisionPtr parent);\r\n      2       public: BulletPhysics(WorldPtr _world);\r\n      1       public: BulletPlaneShape(CollisionPtr _parent) : PlaneShape(_parent) {}\r\n      1       public: BulletPlaneShape(CollisionPtr _parent)\r\n      1               : PlaneShape(_parent) {}\r\n      2       public: BulletRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: BulletRayShape(CollisionPtr _collision);\r\n      1       public: BulletSphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: BulletSphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n      2       public: DARTBallJoint(BasePtr _parent);\r\n      2       public: DARTFixedJoint(BasePtr _parent);\r\n      2       public: DARTHeightmapShape(DARTCollisionPtr _parent);\r\n      2       public: DARTHinge2Joint(BasePtr _parent);\r\n      2       public: DARTHingeJoint(BasePtr _parent);\r\n      2       public: DARTJoint(BasePtr _parent);\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_dartPhysicsEngine)\r\n      1       public: DARTJointPrivate(const DARTPhysicsPtr &_engine)\r\n      1           dartPhysicsEngine(_dartPhysicsEngine),\r\n      1           dartPhysicsEngine(_engine),\r\n      2       public: DARTPhysics(WorldPtr _world);\r\n      2       public: DARTScrewJoint(BasePtr _parent);\r\n      2       public: DARTSliderJoint(BasePtr _parent);\r\n      2       public: DARTUniversalJoint(BasePtr _parent);\r\n      2       public: ODEHeightmapShape(CollisionPtr _parent);\r\n      2       public: ODEJoint(BasePtr _parent);\r\n      2       public: ODEPhysics(WorldPtr _world);\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent) : BoxShape(_parent) {}\r\n      1       public: SimbodyBoxShape(CollisionPtr _parent)\r\n      1               : BoxShape(_parent) {}\r\n      2       public: SimbodyCollision(LinkPtr _parent);\r\n      2       public: SimbodyCylinderShape(CollisionPtr _parent)\r\n      2       public: SimbodyHeightmapShape(CollisionPtr _parent);\r\n      2       public: SimbodyJoint(BasePtr _parent);\r\n      2       public: SimbodyLink(EntityPtr _parent);\r\n      2       public: SimbodyMeshShape(CollisionPtr _parent);\r\n      2       public: SimbodyMultiRayShape(CollisionPtr parent);\r\n      2       public: SimbodyPhysics(WorldPtr _world);\r\n      2       public: SimbodyPlaneShape(CollisionPtr _parent);\r\n      2       public: SimbodyRayShape(PhysicsEnginePtr _physicsEngine);\r\n      2       public: SimbodyRayShape(CollisionPtr _collision);\r\n      1       public: SimbodySphereShape(CollisionPtr _parent) : SphereShape(_parent) {}\r\n      1       public: SimbodySphereShape(CollisionPtr _parent)\r\n      1               : SphereShape(_parent) {}\r\n~~~", "title": "Mark many physics constructors as explicit, suppress one cppcheck warning", "destination": {"commit": {"hash": "e26144434b93", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e26144434b93.json"}, "html": {"href": "#!/osrf/gazebo/commits/e26144434b93"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0824d0a990e3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0824d0a990e3.json"}, "html": {"href": "#!/osrf/gazebo/commits/0824d0a990e3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "explicit_constructors_physics"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2017-10-24T20:06:49.074215+00:00"}, "pull_request": {"type": "pullrequest", "id": 2792, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2792.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2792"}}, "title": "Mark many physics constructors as explicit, suppress one cppcheck warning"}}]}