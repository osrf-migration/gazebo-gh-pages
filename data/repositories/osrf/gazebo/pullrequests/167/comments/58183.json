{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/167/comments/58183.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/167/_/diff#comment-58183"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 167, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/167.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/167"}}, "title": "Fix for issue #264, incorrect initial placement of collision with relative pose"}, "content": {"raw": "Seems to me the problem might be `Collision::Init()` is not called at the right time, it should come after the parent had a chance to call `Init()` on itself first.  How about below?\n\nAlso, I noticed that `SetGravityMode` was removed by accident in one of the merges, so I recovered it below as well:\n\n~~~\n$ hg diff\ndiff -r c8974309a98d gazebo/physics/Link.cc\n--- a/gazebo/physics/Link.cc\tThu Dec 06 08:02:49 2012 -0800\n+++ b/gazebo/physics/Link.cc\tThu Dec 06 08:52:52 2012 -0800\n@@ -157,14 +157,9 @@\n //////////////////////////////////////////////////\n void Link::Init()\n {\n-  Base_V::iterator iter;\n-  for (iter = this->children.begin(); iter != this->children.end(); ++iter)\n-  {\n-    if ((*iter)->HasType(Base::COLLISION))\n-      boost::shared_static_cast<Collision>(*iter)->Init();\n-  }\n+  this->SetKinematic(this->sdf->GetValueBool(\"kinematic\"));\n \n-  this->SetKinematic(this->sdf->GetValueBool(\"kinematic\"));\n+  this->SetGravityMode(this->sdf->GetValueBool(\"gravity\"));\n \n   this->SetLinearDamping(this->GetLinearDamping());\n   this->SetAngularDamping(this->GetAngularDamping());\n@@ -231,6 +226,13 @@\n   // DO THIS LAST!\n   this->SetRelativePose(this->sdf->GetValuePose(\"pose\"));\n   this->SetInitialRelativePose(this->sdf->GetValuePose(\"pose\"));\n+\n+  Base_V::iterator iter;\n+  for (iter = this->children.begin(); iter != this->children.end(); ++iter)\n+  {\n+    if ((*iter)->HasType(Base::COLLISION))\n+      boost::shared_static_cast<Collision>(*iter)->Init();\n+  }\n }\n \n //////////////////////////////////////////////////\n~~~", "markup": "markdown", "html": "<p>Seems to me the problem might be <code>Collision::Init()</code> is not called at the right time, it should come after the parent had a chance to call <code>Init()</code> on itself first.  How about below?</p>\n<p>Also, I noticed that <code>SetGravityMode</code> was removed by accident in one of the merges, so I recovered it below as well:</p>\n<div class=\"codehilite\"><pre><span></span>$ hg diff\ndiff -r c8974309a98d gazebo/physics/Link.cc\n--- a/gazebo/physics/Link.cc    Thu Dec <span class=\"m\">06</span> <span class=\"m\">08</span>:02:49 <span class=\"m\">2012</span> -0800\n+++ b/gazebo/physics/Link.cc    Thu Dec <span class=\"m\">06</span> <span class=\"m\">08</span>:52:52 <span class=\"m\">2012</span> -0800\n@@ -157,14 +157,9 @@\n //////////////////////////////////////////////////\n void Link::Init<span class=\"o\">()</span>\n <span class=\"o\">{</span>\n-  Base_V::iterator iter<span class=\"p\">;</span>\n-  <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"nv\">iter</span> <span class=\"o\">=</span> this-&gt;children.begin<span class=\"o\">()</span><span class=\"p\">;</span> iter !<span class=\"o\">=</span> this-&gt;children.end<span class=\"o\">()</span><span class=\"p\">;</span> ++iter<span class=\"o\">)</span>\n-  <span class=\"o\">{</span>\n-    <span class=\"k\">if</span> <span class=\"o\">((</span>*iter<span class=\"o\">)</span>-&gt;HasType<span class=\"o\">(</span>Base::COLLISION<span class=\"o\">))</span>\n-      boost::shared_static_cast&lt;Collision&gt;<span class=\"o\">(</span>*iter<span class=\"o\">)</span>-&gt;Init<span class=\"o\">()</span><span class=\"p\">;</span>\n-  <span class=\"o\">}</span>\n+  this-&gt;SetKinematic<span class=\"o\">(</span>this-&gt;sdf-&gt;GetValueBool<span class=\"o\">(</span><span class=\"s2\">&quot;kinematic&quot;</span><span class=\"o\">))</span><span class=\"p\">;</span>\n\n-  this-&gt;SetKinematic<span class=\"o\">(</span>this-&gt;sdf-&gt;GetValueBool<span class=\"o\">(</span><span class=\"s2\">&quot;kinematic&quot;</span><span class=\"o\">))</span><span class=\"p\">;</span>\n+  this-&gt;SetGravityMode<span class=\"o\">(</span>this-&gt;sdf-&gt;GetValueBool<span class=\"o\">(</span><span class=\"s2\">&quot;gravity&quot;</span><span class=\"o\">))</span><span class=\"p\">;</span>\n\n   this-&gt;SetLinearDamping<span class=\"o\">(</span>this-&gt;GetLinearDamping<span class=\"o\">())</span><span class=\"p\">;</span>\n   this-&gt;SetAngularDamping<span class=\"o\">(</span>this-&gt;GetAngularDamping<span class=\"o\">())</span><span class=\"p\">;</span>\n@@ -231,6 +226,13 @@\n   // DO THIS LAST!\n   this-&gt;SetRelativePose<span class=\"o\">(</span>this-&gt;sdf-&gt;GetValuePose<span class=\"o\">(</span><span class=\"s2\">&quot;pose&quot;</span><span class=\"o\">))</span><span class=\"p\">;</span>\n   this-&gt;SetInitialRelativePose<span class=\"o\">(</span>this-&gt;sdf-&gt;GetValuePose<span class=\"o\">(</span><span class=\"s2\">&quot;pose&quot;</span><span class=\"o\">))</span><span class=\"p\">;</span>\n+\n+  Base_V::iterator iter<span class=\"p\">;</span>\n+  <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"nv\">iter</span> <span class=\"o\">=</span> this-&gt;children.begin<span class=\"o\">()</span><span class=\"p\">;</span> iter !<span class=\"o\">=</span> this-&gt;children.end<span class=\"o\">()</span><span class=\"p\">;</span> ++iter<span class=\"o\">)</span>\n+  <span class=\"o\">{</span>\n+    <span class=\"k\">if</span> <span class=\"o\">((</span>*iter<span class=\"o\">)</span>-&gt;HasType<span class=\"o\">(</span>Base::COLLISION<span class=\"o\">))</span>\n+      boost::shared_static_cast&lt;Collision&gt;<span class=\"o\">(</span>*iter<span class=\"o\">)</span>-&gt;Init<span class=\"o\">()</span><span class=\"p\">;</span>\n+  <span class=\"o\">}</span>\n <span class=\"o\">}</span>\n\n //////////////////////////////////////////////////\n</pre></div>", "type": "rendered"}, "created_on": "2012-12-06T16:36:36.305949+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2012-12-06T16:53:45.551669+00:00", "type": "pullrequest_comment", "id": 58183}