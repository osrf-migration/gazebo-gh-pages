{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1198/comments/3432039.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:c7765fe6df19..e611ed7b3a62?path=gazebo%2Fmath%2FSignalStats.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1198/_/diff#comment-3432039"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1198, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1198.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1198"}}, "title": "New math class SignalStats"}, "content": {"raw": "`this->dataPtr->data` is being updated using `InsertData()` method but there is no check for inserting negative values so we potentially end up with a negative result of `this->dataPtr->data / this->dataPtr->count`. If we don't allow negative values in InsertData, it could help to add a check there. It is usually a good measure of QA to check always for positive values when calling sqrt.", "markup": "markdown", "html": "<p><code>this-&gt;dataPtr-&gt;data</code> is being updated using <code>InsertData()</code> method but there is no check for inserting negative values so we potentially end up with a negative result of <code>this-&gt;dataPtr-&gt;data / this-&gt;dataPtr-&gt;count</code>. If we don't allow negative values in InsertData, it could help to add a check there. It is usually a good measure of QA to check always for positive values when calling sqrt.</p>", "type": "rendered"}, "created_on": "2014-10-13T16:53:29.661187+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {"to": 81, "from": null, "outdated": true, "path": "gazebo/math/SignalStats.cc"}, "updated_on": "2014-10-13T16:53:29.671693+00:00", "type": "pullrequest_comment", "id": 3432039}