{"pagelen": 50, "values": [{"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "d3165fd7143d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d3165fd7143d.json"}, "html": {"href": "#!/osrf/gazebo/commits/d3165fd7143d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "69ebf26d1637", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/69ebf26d1637.json"}, "html": {"href": "#!/osrf/gazebo/commits/69ebf26d1637"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-25T18:43:05.334372+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"approval": {"date": "2019-01-25T16:10:37.588023+00:00", "pullrequest": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "d3165fd7143d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d3165fd7143d.json"}, "html": {"href": "#!/osrf/gazebo/commits/d3165fd7143d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "69ebf26d1637", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/69ebf26d1637.json"}, "html": {"href": "#!/osrf/gazebo/commits/69ebf26d1637"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-09T21:16:44.407658+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048/comments/85331055.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048/_/diff#comment-85331055"}}, "parent": {"id": 85328533, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048/comments/85328533.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048/_/diff#comment-85328533"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}, "content": {"raw": "thanks for those changes; I made one myself in aca793e", "markup": "markdown", "html": "<p>thanks for those changes; I made one myself in <a href=\"#!/osrf/gazebo/commits/aca793e\" rel=\"nofollow\" class=\"ap-connect-link\">aca793e</a></p>", "type": "rendered"}, "created_on": "2018-12-11T20:41:07.884407+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-12-11T20:41:07.893668+00:00", "type": "pullrequest_comment", "id": 85331055}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "b4f750c828bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4f750c828bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4f750c828bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "aca793e609e2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/aca793e609e2.json"}, "html": {"href": "#!/osrf/gazebo/commits/aca793e609e2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-11T20:40:11.525177+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "b4f750c828bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4f750c828bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4f750c828bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "aca793e609e2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/aca793e609e2.json"}, "html": {"href": "#!/osrf/gazebo/commits/aca793e609e2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-11T20:40:05.787442+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048/comments/85328533.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048/_/diff#comment-85328533"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}, "content": {"raw": "Made minor changes to comments in 7aa2e6c and 8f5b1c5. Otherwise looks great!", "markup": "markdown", "html": "<p>Made minor changes to comments in <a href=\"#!/osrf/gazebo/commits/7aa2e6c\" rel=\"nofollow\" class=\"ap-connect-link\">7aa2e6c</a> and <a href=\"#!/osrf/gazebo/commits/8f5b1c5\" rel=\"nofollow\" class=\"ap-connect-link\">8f5b1c5</a>. Otherwise looks great!</p>", "type": "rendered"}, "created_on": "2018-12-11T20:16:47.149406+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-12-11T20:19:40.469705+00:00", "type": "pullrequest_comment", "id": 85328533}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "b4f750c828bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4f750c828bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4f750c828bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "8f5b1c53603c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8f5b1c53603c.json"}, "html": {"href": "#!/osrf/gazebo/commits/8f5b1c53603c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2018-12-11T20:19:22.565707+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"approval": {"date": "2018-12-11T20:16:52.500184+00:00", "pullrequest": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "b4f750c828bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4f750c828bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4f750c828bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "7aa2e6c9a549", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7aa2e6c9a549.json"}, "html": {"href": "#!/osrf/gazebo/commits/7aa2e6c9a549"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2018-12-11T20:16:12.898430+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "b4f750c828bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4f750c828bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4f750c828bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "0df6378ed09a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0df6378ed09a.json"}, "html": {"href": "#!/osrf/gazebo/commits/0df6378ed09a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-10T20:00:23.240519+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048/comments/85018902.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048/_/diff#comment-85018902"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}, "content": {"raw": "Here is a preview of the changes to be made in the follow-up pull request:\n\n* #!/osrf/gazebo/branch/gearbox_reference_angles7?dest=gearbox_math_7#chg-deps/opende/src/joints/gearbox.cpp", "markup": "markdown", "html": "<p>Here is a preview of the changes to be made in the follow-up pull request:</p>\n<ul>\n<li><a href=\"#!/osrf/gazebo/branch/gearbox_reference_angles7?dest=gearbox_math_7#chg-deps/opende/src/joints/gearbox.cpp\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/branch/gearbox_reference_angles7?dest=gearbox_math_7#chg-deps/opende/src/joints/gearbox.cpp</a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-12-08T18:31:31.087863+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-12-08T18:31:31.094390+00:00", "type": "pullrequest_comment", "id": 85018902}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "b4f750c828bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4f750c828bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4f750c828bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "0df6378ed09a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0df6378ed09a.json"}, "html": {"href": "#!/osrf/gazebo/commits/0df6378ed09a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-08T11:37:12.899895+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}, {"update": {"description": "I recently attempted to extend the ODE Gearbox joint to allow the gear ratio to be adjusted dynamically, but the gearbox joint implementation wasn't behaving the way I expected. I was expecting it to behave like the [ODE hinge joint implementation](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/hinge.cpp?at=default&fileviewer=file-view-default#hinge.cpp-67:73), which calls the [helper function getHingeAngle](#!/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/deps/opende/src/joints/joint.cpp?at=default&fileviewer=file-view-default#joint.cpp-433:443) with arguments: (child body, parent body, joint axis in body-fixed frame, initial relative rotation between \r\nbodies). By contrast, the gearbox joint had reversed the order of the bodies (reference body then child body), computed the joint axis in a global frame, and re-computed the relative body rotation (by calling `dJointSetGearboxReferenceBody[12]`) at each time step.\r\n\r\nSo this refactoring does the following:\r\n\r\n* Don't update relative rotations `qrel[12]` by calling `dJointSetGearboxReferenceBody[12]` at each timestep\r\n* Use body-fixed axis, not global\r\n* Reverse angle direction by switching relative bodies. This required reversing some arguments in other rotation calculations elsewhere in the file.\r\n\r\nThis should be a pure refactoring that doesn't change any behavior, but it will set the stage for an extension to this joint that I'd like to make. There is a gearbox joint test, and I've verified locally that it passes; hopefully CI agrees.", "title": "Refactor ode gearbox math to more closely match ode hinge math", "destination": {"commit": {"hash": "b4f750c828bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b4f750c828bb.json"}, "html": {"href": "#!/osrf/gazebo/commits/b4f750c828bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "reason": "", "source": {"commit": {"hash": "0df6378ed09a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0df6378ed09a.json"}, "html": {"href": "#!/osrf/gazebo/commits/0df6378ed09a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gearbox_math_7"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-08T11:37:12.872679+00:00"}, "pull_request": {"type": "pullrequest", "id": 3048, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/3048.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3048"}}, "title": "Refactor ode gearbox math to more closely match ode hinge math"}}]}