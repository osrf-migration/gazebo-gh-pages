{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2643/comments/32222087.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2643/_/diff#comment-32222087"}}, "parent": {"id": 32220994, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2643/comments/32220994.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2643/_/diff#comment-32220994"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2643, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2643.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2643"}}, "title": "Added support for querying a physics engine's capabilities"}, "content": {"raw": "It's intended for gazebo plugins that want to use an alternate strategy if the physics engine doesn't support a particular feature.\n\nSpecifically it is for #1564. Currently the CPU Ray sensor projects rays starting at minimum range. The bug is they see inside of geometry that gets too close. With collide_bitmask this can be fixed by starting from the sensor origin and masking out the laser geometry in its way. Problem is on physics engines that don't support collide_bitmask the rays from the sensor would strike the inside of the lidar geometry. With this API the ray sensor can default to the old behavior on other physics engines.\n", "markup": "markdown", "html": "<p>It's intended for gazebo plugins that want to use an alternate strategy if the physics engine doesn't support a particular feature.</p>\n<p>Specifically it is for <a href=\"#!/osrf/gazebo/issues/1564/ray-sensor-looking-through-walls\" rel=\"nofollow\" title=\"Ray sensor looking through walls\" class=\"ap-connect-link\">#1564</a>. Currently the CPU Ray sensor projects rays starting at minimum range. The bug is they see inside of geometry that gets too close. With collide_bitmask this can be fixed by starting from the sensor origin and masking out the laser geometry in its way. Problem is on physics engines that don't support collide_bitmask the rays from the sensor would strike the inside of the lidar geometry. With this API the ray sensor can default to the old behavior on other physics engines.</p>", "type": "rendered"}, "created_on": "2017-02-27T20:00:03.546891+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-27T20:00:03.552323+00:00", "type": "pullrequest_comment", "id": 32222087}