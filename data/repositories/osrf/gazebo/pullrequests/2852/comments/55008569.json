{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2852/comments/55008569.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2852/_/diff#comment-55008569"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2852, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2852.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2852"}}, "title": "Add support for 16 bit Grayscale and RGB camera image types."}, "content": {"raw": "The test is a little better now, though I've been running it on repeat and found another fix. I saw a backtrace in which `MultiCameraSensor::Render` seg-faulted while `MultiCameraSensor::Fini` was running. That sensor already has a mutex, but it wasn't locking during `Render`, so I've added a lock in the following patch\n\n~~~\ndiff -r 16a731f965db gazebo/sensors/MultiCameraSensor.cc\n--- a/gazebo/sensors/MultiCameraSensor.cc\tMon Jan 29 19:05:02 2018 -0800\n+++ b/gazebo/sensors/MultiCameraSensor.cc\tTue Jan 30 11:06:00 2018 -0800\n@@ -245,6 +245,11 @@\n   }\n \n   // Update all the cameras\n+  std::lock_guard<std::mutex> lock(this->dataPtr->cameraMutex);\n+  if (this->dataPtr->cameras.empty())\n+  {\n+    return;\n+  }\n   for (auto iter = this->dataPtr->cameras.begin();\n       iter != this->dataPtr->cameras.end(); ++iter)\n   {\n~~~", "markup": "markdown", "html": "<p>The test is a little better now, though I've been running it on repeat and found another fix. I saw a backtrace in which <code>MultiCameraSensor::Render</code> seg-faulted while <code>MultiCameraSensor::Fini</code> was running. That sensor already has a mutex, but it wasn't locking during <code>Render</code>, so I've added a lock in the following patch</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 16a731f965db gazebo/sensors/MultiCameraSensor.cc</span>\n<span class=\"gd\">--- a/gazebo/sensors/MultiCameraSensor.cc   Mon Jan 29 19:05:02 2018 -0800</span>\n<span class=\"gi\">+++ b/gazebo/sensors/MultiCameraSensor.cc   Tue Jan 30 11:06:00 2018 -0800</span>\n<span class=\"gu\">@@ -245,6 +245,11 @@</span>\n   }\n\n   // Update all the cameras\n<span class=\"gi\">+  std::lock_guard&lt;std::mutex&gt; lock(this-&gt;dataPtr-&gt;cameraMutex);</span>\n<span class=\"gi\">+  if (this-&gt;dataPtr-&gt;cameras.empty())</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    return;</span>\n<span class=\"gi\">+  }</span>\n   for (auto iter = this-&gt;dataPtr-&gt;cameras.begin();\n       iter != this-&gt;dataPtr-&gt;cameras.end(); ++iter)\n   {\n</pre></div>", "type": "rendered"}, "created_on": "2018-01-30T19:09:12.181791+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-01-30T19:09:12.184090+00:00", "type": "pullrequest_comment", "id": 55008569}