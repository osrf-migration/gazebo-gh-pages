{"rendered": {"description": {"raw": "This targets pull request #2950 and adds an additional test with the `trisphere_cycle` model added in [gazebo_models PR 330](#!/osrf/gazebo_models/pull-requests/330/tricycle-with-spherical-wheels/diff). The test involves two of these vehicles driving against an inclined gravity vector (to simulate uphill driving) with different levels of slip compliance. The model with less slip compliance (bottom) generates more linear velocity that the model with more slip compliance (top).\r\n\r\n![wheel_slip_trisphere_cycle_shorter.gif](data/bitbucket.org/repo/jgXqbo/images/3682756510-wheel_slip_trisphere_cycle_shorter.gif)\r\n\r\nTo simplify the implementation of this test, I added a `JointController::SetForce` API, which can set a persistent force to be applied at a joint. This can currently be done by publishing to a `joint_cmd` topic or using the JointControlWidget, but there wasn't a c++ API until now.\r\n\r\nI also added some `const` specifiers to the inputs of some JointController functions, since I don't think this affects API/ABI. I will revert those changes if they are a problem.", "markup": "markdown", "html": "<p>This targets <a href=\"#!/osrf/gazebo/pull-requests/2950/adding-wheelslipplugin-for-adding-wheel\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2950</a> and adds an additional test with the <code>trisphere_cycle</code> model added in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/pull-requests/330/tricycle-with-spherical-wheels/diff\" rel=\"nofollow\">gazebo_models PR 330</a>. The test involves two of these vehicles driving against an inclined gravity vector (to simulate uphill driving) with different levels of slip compliance. The model with less slip compliance (bottom) generates more linear velocity that the model with more slip compliance (top).</p>\n<p><img alt=\"wheel_slip_trisphere_cycle_shorter.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/3682756510-wheel_slip_trisphere_cycle_shorter.gif\" /></p>\n<p>To simplify the implementation of this test, I added a <code>JointController::SetForce</code> API, which can set a persistent force to be applied at a joint. This can currently be done by publishing to a <code>joint_cmd</code> topic or using the JointControlWidget, but there wasn't a c++ API until now.</p>\n<p>I also added some <code>const</code> specifiers to the inputs of some JointController functions, since I don't think this affects API/ABI. I will revert those changes if they are a problem.</p>", "type": "rendered"}, "title": {"raw": "WheelSlipPlugin: add test with trisphere_cycle", "markup": "markdown", "html": "<p>WheelSlipPlugin: add test with trisphere_cycle</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This targets pull request #2950 and adds an additional test with the `trisphere_cycle` model added in [gazebo_models PR 330](#!/osrf/gazebo_models/pull-requests/330/tricycle-with-spherical-wheels/diff). The test involves two of these vehicles driving against an inclined gravity vector (to simulate uphill driving) with different levels of slip compliance. The model with less slip compliance (bottom) generates more linear velocity that the model with more slip compliance (top).\r\n\r\n![wheel_slip_trisphere_cycle_shorter.gif](data/bitbucket.org/repo/jgXqbo/images/3682756510-wheel_slip_trisphere_cycle_shorter.gif)\r\n\r\nTo simplify the implementation of this test, I added a `JointController::SetForce` API, which can set a persistent force to be applied at a joint. This can currently be done by publishing to a `joint_cmd` topic or using the JointControlWidget, but there wasn't a c++ API until now.\r\n\r\nI also added some `const` specifiers to the inputs of some JointController functions, since I don't think this affects API/ABI. I will revert those changes if they are a problem.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2976/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:82a6d60bb649%0Db2dc798d0d4a?from_pullrequest_id=2976"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2976/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2976.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2976/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2976/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2976"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2976/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:82a6d60bb649%0Db2dc798d0d4a?from_pullrequest_id=2976"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2976/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2976/statuses_page=1.json"}}, "title": "WheelSlipPlugin: add test with trisphere_cycle", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}], "id": 2976, "destination": {"commit": {"hash": "b2dc798d0d4a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b2dc798d0d4a.json"}, "html": {"href": "#!/osrf/gazebo/commits/b2dc798d0d4a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2018-06-09T07:40:13.136788+00:00", "summary": {"raw": "This targets pull request #2950 and adds an additional test with the `trisphere_cycle` model added in [gazebo_models PR 330](#!/osrf/gazebo_models/pull-requests/330/tricycle-with-spherical-wheels/diff). The test involves two of these vehicles driving against an inclined gravity vector (to simulate uphill driving) with different levels of slip compliance. The model with less slip compliance (bottom) generates more linear velocity that the model with more slip compliance (top).\r\n\r\n![wheel_slip_trisphere_cycle_shorter.gif](data/bitbucket.org/repo/jgXqbo/images/3682756510-wheel_slip_trisphere_cycle_shorter.gif)\r\n\r\nTo simplify the implementation of this test, I added a `JointController::SetForce` API, which can set a persistent force to be applied at a joint. This can currently be done by publishing to a `joint_cmd` topic or using the JointControlWidget, but there wasn't a c++ API until now.\r\n\r\nI also added some `const` specifiers to the inputs of some JointController functions, since I don't think this affects API/ABI. I will revert those changes if they are a problem.", "markup": "markdown", "html": "<p>This targets <a href=\"#!/osrf/gazebo/pull-requests/2950/adding-wheelslipplugin-for-adding-wheel\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2950</a> and adds an additional test with the <code>trisphere_cycle</code> model added in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/pull-requests/330/tricycle-with-spherical-wheels/diff\" rel=\"nofollow\">gazebo_models PR 330</a>. The test involves two of these vehicles driving against an inclined gravity vector (to simulate uphill driving) with different levels of slip compliance. The model with less slip compliance (bottom) generates more linear velocity that the model with more slip compliance (top).</p>\n<p><img alt=\"wheel_slip_trisphere_cycle_shorter.gif\" src=\"data/bitbucket.org/repo/jgXqbo/images/3682756510-wheel_slip_trisphere_cycle_shorter.gif\" /></p>\n<p>To simplify the implementation of this test, I added a <code>JointController::SetForce</code> API, which can set a persistent force to be applied at a joint. This can currently be done by publishing to a <code>joint_cmd</code> topic or using the JointControlWidget, but there wasn't a c++ API until now.</p>\n<p>I also added some <code>const</code> specifiers to the inputs of some JointController functions, since I don't think this affects API/ABI. I will revert those changes if they are a problem.</p>", "type": "rendered"}, "source": {"commit": {"hash": "959a05bcb9b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/959a05bcb9b3.json"}, "html": {"href": "#!/osrf/gazebo/commits/959a05bcb9b3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "wheel_slip_plugin_trisphere_cycle"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2018-10-25T21:06:25.779642+00:00", "type": "participant", "approved": true, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-18T21:33:37.977776+00:00", "type": "participant", "approved": false, "user": {"display_name": "Le.Zhang", "uuid": "{b4ea533a-c8ab-431e-9b52-85c24ba65365}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb4ea533a-c8ab-431e-9b52-85c24ba65365%7D"}, "html": {"href": "https://bitbucket.org/%7Bb4ea533a-c8ab-431e-9b52-85c24ba65365%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d35e6b8beedf60c26aa2dd1/02db35ca-874e-4e85-b979-42644198e3e1/128"}}, "nickname": "Le.Zhang", "type": "user", "account_id": "5d35e6b8beedf60c26aa2dd1"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-18T19:07:50.352525+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2018-11-13T22:48:03.106334+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2019-09-18T21:33:37.977776+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "82a6d60bb649", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/82a6d60bb649.json"}, "html": {"href": "#!/osrf/gazebo/commits/82a6d60bb649"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}