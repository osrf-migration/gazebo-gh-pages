{"rendered": {"description": {"raw": "~~It turns out that `DARTLink::AddLinkForce(~,~)` was already implemented as `DARTLink::AddForceAtRelativePosition(~,~)` which are semantically identical based on their API descriptions.~~\r\n\r\n~~If `Link::AddLinkForce(~,~)` and `Link::AddForceAtRelativePosition(~,~)` are meant to be identical functions, then we should consider deprecating one of them. However, the `ODELink` implementations differ from each other based on the CoG location, even though this fact is not mentioned in the API documentation. I recommend that we should:~~\r\n\r\n1. ~~Determine what the intended behavior is (i.e. whether the CoG location should be affecting `Link::AddForceAtRelativePosition(~,~)`).~~\r\n2. ~~Write tests to verify that the expected behavior is occurring.~~\r\n3. ~~Either deprecate one of the functions or correct the `DARTLink` implementation to reflect the intended behavior.~~\r\n\r\n~~I can open an issue about this if people agree that there is some inconsistency here.~~\r\n\r\nEdit: After reviewing the tests for ``AddLinkForce`` in test/integration/physics_link.cc, I realized that there *is* meant to be a semantic difference between ``Link::AddLinkForce(~,~)`` and ``Link::AddForceAtRelativePosition(~,~)``, even though their descriptions in the header seemed almost identical. I've updated their header descriptions to hopefully make their differences more explicit, and I've reimplemented their ``DARTLink`` implementations to reflect their intended meanings. This resolves issue #1477.\r\n\r\nEdit 2: This pull request now allows DART to pass the ``GetWorldInertia`` test as well, which resolves issue #1090.\r\n\r\nAs a side note, I've added a macro which tests whether two vectors are close to each other (rather than equal), and then prints out their components, the differences between each of their components, and the magnitude of their overall difference.", "markup": "markdown", "html": "<p><del>It turns out that <code>DARTLink::AddLinkForce(~,~)</code> was already implemented as <code>DARTLink::AddForceAtRelativePosition(~,~)</code> which are semantically identical based on their API descriptions.</del></p>\n<p><del>If <code>Link::AddLinkForce(~,~)</code> and <code>Link::AddForceAtRelativePosition(~,~)</code> are meant to be identical functions, then we should consider deprecating one of them. However, the <code>ODELink</code> implementations differ from each other based on the CoG location, even though this fact is not mentioned in the API documentation. I recommend that we should:</del></p>\n<ol>\n<li><del>Determine what the intended behavior is (i.e. whether the CoG location should be affecting <code>Link::AddForceAtRelativePosition(~,~)</code>).</del></li>\n<li><del>Write tests to verify that the expected behavior is occurring.</del></li>\n<li><del>Either deprecate one of the functions or correct the <code>DARTLink</code> implementation to reflect the intended behavior.</del></li>\n</ol>\n<p><del>I can open an issue about this if people agree that there is some inconsistency here.</del></p>\n<p>Edit: After reviewing the tests for <code>AddLinkForce</code> in test/integration/physics_link.cc, I realized that there <em>is</em> meant to be a semantic difference between <code>Link::AddLinkForce(~,~)</code> and <code>Link::AddForceAtRelativePosition(~,~)</code>, even though their descriptions in the header seemed almost identical. I've updated their header descriptions to hopefully make their differences more explicit, and I've reimplemented their <code>DARTLink</code> implementations to reflect their intended meanings. This resolves issue <a href=\"#!/osrf/gazebo/issues/1477/implement-addxxxforce-for-dart\" rel=\"nofollow\" title=\"Implement AddXXXForce for DART\" class=\"ap-connect-link\"><s>#1477</s></a>.</p>\n<p>Edit 2: This pull request now allows DART to pass the <code>GetWorldInertia</code> test as well, which resolves issue <a href=\"#!/osrf/gazebo/issues/1090/dartlink-settorque-using-wrong-frame\" rel=\"nofollow\" title=\"DARTLink::SetTorque using wrong frame?\" class=\"ap-connect-link\"><s>#1090</s></a>.</p>\n<p>As a side note, I've added a macro which tests whether two vectors are close to each other (rather than equal), and then prints out their components, the differences between each of their components, and the magnitude of their overall difference.</p>", "type": "rendered"}, "title": {"raw": "Fix Issue #1477 and #1090", "markup": "markdown", "html": "<p>Fix Issue <a href=\"#!/osrf/gazebo/issues/1477/implement-addxxxforce-for-dart\" rel=\"nofollow\" title=\"Implement AddXXXForce for DART\" class=\"ap-connect-link\"><s>#1477</s></a> and <a href=\"#!/osrf/gazebo/issues/1090/dartlink-settorque-using-wrong-frame\" rel=\"nofollow\" title=\"DARTLink::SetTorque using wrong frame?\" class=\"ap-connect-link\"><s>#1090</s></a></p>", "type": "rendered"}}, "type": "pullrequest", "description": "~~It turns out that `DARTLink::AddLinkForce(~,~)` was already implemented as `DARTLink::AddForceAtRelativePosition(~,~)` which are semantically identical based on their API descriptions.~~\r\n\r\n~~If `Link::AddLinkForce(~,~)` and `Link::AddForceAtRelativePosition(~,~)` are meant to be identical functions, then we should consider deprecating one of them. However, the `ODELink` implementations differ from each other based on the CoG location, even though this fact is not mentioned in the API documentation. I recommend that we should:~~\r\n\r\n1. ~~Determine what the intended behavior is (i.e. whether the CoG location should be affecting `Link::AddForceAtRelativePosition(~,~)`).~~\r\n2. ~~Write tests to verify that the expected behavior is occurring.~~\r\n3. ~~Either deprecate one of the functions or correct the `DARTLink` implementation to reflect the intended behavior.~~\r\n\r\n~~I can open an issue about this if people agree that there is some inconsistency here.~~\r\n\r\nEdit: After reviewing the tests for ``AddLinkForce`` in test/integration/physics_link.cc, I realized that there *is* meant to be a semantic difference between ``Link::AddLinkForce(~,~)`` and ``Link::AddForceAtRelativePosition(~,~)``, even though their descriptions in the header seemed almost identical. I've updated their header descriptions to hopefully make their differences more explicit, and I've reimplemented their ``DARTLink`` implementations to reflect their intended meanings. This resolves issue #1477.\r\n\r\nEdit 2: This pull request now allows DART to pass the ``GetWorldInertia`` test as well, which resolves issue #1090.\r\n\r\nAs a side note, I've added a macro which tests whether two vectors are close to each other (rather than equal), and then prints out their components, the differences between each of their components, and the magnitude of their overall difference.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2749/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:ef596ba05d45%0D5e024b2ac9c0?from_pullrequest_id=2749"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2749/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2749.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2749/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2749/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2749"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2749/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:ef596ba05d45%0D5e024b2ac9c0?from_pullrequest_id=2749"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2749/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2749/statuses_page=1.json"}}, "title": "Fix Issue #1477 and #1090", "close_source_branch": false, "reviewers": [], "id": 2749, "destination": {"commit": {"hash": "5e024b2ac9c0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5e024b2ac9c0.json"}, "html": {"href": "#!/osrf/gazebo/commits/5e024b2ac9c0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2017-07-18T01:44:14.031618+00:00", "summary": {"raw": "~~It turns out that `DARTLink::AddLinkForce(~,~)` was already implemented as `DARTLink::AddForceAtRelativePosition(~,~)` which are semantically identical based on their API descriptions.~~\r\n\r\n~~If `Link::AddLinkForce(~,~)` and `Link::AddForceAtRelativePosition(~,~)` are meant to be identical functions, then we should consider deprecating one of them. However, the `ODELink` implementations differ from each other based on the CoG location, even though this fact is not mentioned in the API documentation. I recommend that we should:~~\r\n\r\n1. ~~Determine what the intended behavior is (i.e. whether the CoG location should be affecting `Link::AddForceAtRelativePosition(~,~)`).~~\r\n2. ~~Write tests to verify that the expected behavior is occurring.~~\r\n3. ~~Either deprecate one of the functions or correct the `DARTLink` implementation to reflect the intended behavior.~~\r\n\r\n~~I can open an issue about this if people agree that there is some inconsistency here.~~\r\n\r\nEdit: After reviewing the tests for ``AddLinkForce`` in test/integration/physics_link.cc, I realized that there *is* meant to be a semantic difference between ``Link::AddLinkForce(~,~)`` and ``Link::AddForceAtRelativePosition(~,~)``, even though their descriptions in the header seemed almost identical. I've updated their header descriptions to hopefully make their differences more explicit, and I've reimplemented their ``DARTLink`` implementations to reflect their intended meanings. This resolves issue #1477.\r\n\r\nEdit 2: This pull request now allows DART to pass the ``GetWorldInertia`` test as well, which resolves issue #1090.\r\n\r\nAs a side note, I've added a macro which tests whether two vectors are close to each other (rather than equal), and then prints out their components, the differences between each of their components, and the magnitude of their overall difference.", "markup": "markdown", "html": "<p><del>It turns out that <code>DARTLink::AddLinkForce(~,~)</code> was already implemented as <code>DARTLink::AddForceAtRelativePosition(~,~)</code> which are semantically identical based on their API descriptions.</del></p>\n<p><del>If <code>Link::AddLinkForce(~,~)</code> and <code>Link::AddForceAtRelativePosition(~,~)</code> are meant to be identical functions, then we should consider deprecating one of them. However, the <code>ODELink</code> implementations differ from each other based on the CoG location, even though this fact is not mentioned in the API documentation. I recommend that we should:</del></p>\n<ol>\n<li><del>Determine what the intended behavior is (i.e. whether the CoG location should be affecting <code>Link::AddForceAtRelativePosition(~,~)</code>).</del></li>\n<li><del>Write tests to verify that the expected behavior is occurring.</del></li>\n<li><del>Either deprecate one of the functions or correct the <code>DARTLink</code> implementation to reflect the intended behavior.</del></li>\n</ol>\n<p><del>I can open an issue about this if people agree that there is some inconsistency here.</del></p>\n<p>Edit: After reviewing the tests for <code>AddLinkForce</code> in test/integration/physics_link.cc, I realized that there <em>is</em> meant to be a semantic difference between <code>Link::AddLinkForce(~,~)</code> and <code>Link::AddForceAtRelativePosition(~,~)</code>, even though their descriptions in the header seemed almost identical. I've updated their header descriptions to hopefully make their differences more explicit, and I've reimplemented their <code>DARTLink</code> implementations to reflect their intended meanings. This resolves issue <a href=\"#!/osrf/gazebo/issues/1477/implement-addxxxforce-for-dart\" rel=\"nofollow\" title=\"Implement AddXXXForce for DART\" class=\"ap-connect-link\"><s>#1477</s></a>.</p>\n<p>Edit 2: This pull request now allows DART to pass the <code>GetWorldInertia</code> test as well, which resolves issue <a href=\"#!/osrf/gazebo/issues/1090/dartlink-settorque-using-wrong-frame\" rel=\"nofollow\" title=\"DARTLink::SetTorque using wrong frame?\" class=\"ap-connect-link\"><s>#1090</s></a>.</p>\n<p>As a side note, I've added a macro which tests whether two vectors are close to each other (rather than equal), and then prints out their components, the differences between each of their components, and the magnitude of their overall difference.</p>", "type": "rendered"}, "source": {"commit": {"hash": "49aded890212", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mxgrey/gazebo/commit/49aded890212"}, "html": {"href": "https://bitbucket.org/mxgrey/gazebo/commits/49aded890212"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mxgrey/gazebo"}, "html": {"href": "https://bitbucket.org/mxgrey/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{db441b9a-5483-4728-b3af-1135ccc99e42}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "mxgrey/gazebo", "uuid": "{db441b9a-5483-4728-b3af-1135ccc99e42}"}, "branch": {"name": "issue_1477_DART_AddLinkForce"}}, "comment_count": 71, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-08-03T17:03:42.615387+00:00", "type": "participant", "approved": true, "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-18T16:10:01.361125+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-08-03T17:25:53.962446+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-08-02T21:12:39.456280+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "", "updated_on": "2017-08-03T17:26:44.871785+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "ef596ba05d45", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ef596ba05d45.json"}, "html": {"href": "#!/osrf/gazebo/commits/ef596ba05d45"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}