{"rendered": {"reason": {"raw": "not needed for now\r\n\r\nexploing an alternative approach that uses a setup.sh config file", "markup": "markdown", "html": "<p>not needed for now</p>\n<p>exploing an alternative approach that uses a setup.sh config file</p>", "type": "rendered"}, "description": {"raw": "part of the work done on osx bundling. \r\n\r\nThe rendering engine currently loads ogre plugins based on the `OGRE_RESOURCE_PATH`. However that doesn't work in an osx application bundle. The bundled app should be self-contained without relying on external installation of ogre. So the ogre plugins are pulled into the bundle and there needs to be a way get their path relative to the executable, hence this function is added. \r\n\r\n[Here's the line](#!/osrf/gazebo/src/3819a7b785328e2e21fb118dc5bec235ef94904d/gazebo/common/SystemPaths.cc?at=qt5_bundle_ian&fileviewer=file-view-default#SystemPaths.cc-138) in the `qt5_bundle_ian` branch that uses this function to set up the ogre paths\r\n\r\n[homebrew](http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/795/) - ok", "markup": "markdown", "html": "<p>part of the work done on osx bundling. </p>\n<p>The rendering engine currently loads ogre plugins based on the <code>OGRE_RESOURCE_PATH</code>. However that doesn't work in an osx application bundle. The bundled app should be self-contained without relying on external installation of ogre. So the ogre plugins are pulled into the bundle and there needs to be a way get their path relative to the executable, hence this function is added. </p>\n<p><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/3819a7b785328e2e21fb118dc5bec235ef94904d/gazebo/common/SystemPaths.cc?at=qt5_bundle_ian&amp;fileviewer=file-view-default#SystemPaths.cc-138\" rel=\"nofollow\">Here's the line</a> in the <code>qt5_bundle_ian</code> branch that uses this function to set up the ogre paths</p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/795/\" rel=\"nofollow\">homebrew</a> - ok</p>", "type": "rendered"}, "title": {"raw": "Add function to get path to application executable directory", "markup": "markdown", "html": "<p>Add function to get path to application executable directory</p>", "type": "rendered"}}, "type": "pullrequest", "description": "part of the work done on osx bundling. \r\n\r\nThe rendering engine currently loads ogre plugins based on the `OGRE_RESOURCE_PATH`. However that doesn't work in an osx application bundle. The bundled app should be self-contained without relying on external installation of ogre. So the ogre plugins are pulled into the bundle and there needs to be a way get their path relative to the executable, hence this function is added. \r\n\r\n[Here's the line](#!/osrf/gazebo/src/3819a7b785328e2e21fb118dc5bec235ef94904d/gazebo/common/SystemPaths.cc?at=qt5_bundle_ian&fileviewer=file-view-default#SystemPaths.cc-138) in the `qt5_bundle_ian` branch that uses this function to set up the ogre paths\r\n\r\n[homebrew](http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/795/) - ok", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2518/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:76c84ed66c4d%0D73cc987353ac?from_pullrequest_id=2518"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2518/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2518.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2518/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2518/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2518"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2518/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:76c84ed66c4d%0D73cc987353ac?from_pullrequest_id=2518"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2518/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2518/statuses_page=1.json"}}, "title": "Add function to get path to application executable directory", "close_source_branch": false, "reviewers": [], "id": 2518, "destination": {"commit": {"hash": "73cc987353ac", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/73cc987353ac.json"}, "html": {"href": "#!/osrf/gazebo/commits/73cc987353ac"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2016-12-07T05:13:03.168231+00:00", "summary": {"raw": "part of the work done on osx bundling. \r\n\r\nThe rendering engine currently loads ogre plugins based on the `OGRE_RESOURCE_PATH`. However that doesn't work in an osx application bundle. The bundled app should be self-contained without relying on external installation of ogre. So the ogre plugins are pulled into the bundle and there needs to be a way get their path relative to the executable, hence this function is added. \r\n\r\n[Here's the line](#!/osrf/gazebo/src/3819a7b785328e2e21fb118dc5bec235ef94904d/gazebo/common/SystemPaths.cc?at=qt5_bundle_ian&fileviewer=file-view-default#SystemPaths.cc-138) in the `qt5_bundle_ian` branch that uses this function to set up the ogre paths\r\n\r\n[homebrew](http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/795/) - ok", "markup": "markdown", "html": "<p>part of the work done on osx bundling. </p>\n<p>The rendering engine currently loads ogre plugins based on the <code>OGRE_RESOURCE_PATH</code>. However that doesn't work in an osx application bundle. The bundled app should be self-contained without relying on external installation of ogre. So the ogre plugins are pulled into the bundle and there needs to be a way get their path relative to the executable, hence this function is added. </p>\n<p><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/3819a7b785328e2e21fb118dc5bec235ef94904d/gazebo/common/SystemPaths.cc?at=qt5_bundle_ian&amp;fileviewer=file-view-default#SystemPaths.cc-138\" rel=\"nofollow\">Here's the line</a> in the <code>qt5_bundle_ian</code> branch that uses this function to set up the ogre paths</p>\n<p><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/795/\" rel=\"nofollow\">homebrew</a> - ok</p>", "type": "rendered"}, "source": {"commit": {"hash": "76c84ed66c4d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/76c84ed66c4d.json"}, "html": {"href": "#!/osrf/gazebo/commits/76c84ed66c4d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "application_dir"}}, "comment_count": 5, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-12-07T19:44:10.702188+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-12-08T15:43:03.225962+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2016-12-08T18:18:45.262166+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "not needed for now\r\n\r\nexploing an alternative approach that uses a setup.sh config file", "updated_on": "2016-12-20T02:39:23.260032+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": null, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}