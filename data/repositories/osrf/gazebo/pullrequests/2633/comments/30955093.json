{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30955093.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30955093"}}, "parent": {"id": 30888172, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30888172.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30888172"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}, "content": {"raw": "That's a good point. If I understand correctly, you're talking about a case where there is a sensor attached to a link that has collision geometry that should block the rays of the model.\n\n![2633_steve.png](data/bitbucket.org/repo/jgXqbo/images/3015222279-2633_steve.png)\n\nIf a flag disables the behavior of seeing through parent collisions, I think it should default to not disabling them, otherwise rays from existing sensors like the hokuyo model won't escape their geometry. A model affected by the above problem would have to be editted to use the new flag. Alternatively it could be edited to put the sensor in a separate link attached with a fixed joint.\n\nI think @Stefan_Kohlbrecher was talking about a case where a sub-model (like hokuyo) is inside of another collision geometry that is entirely within the radius of the lidar's minimum range. Previously the rays would start at the minimum range, allowing them to ignore parts of geometry. The new behavior has the rays always start at the sensor itself. They would see through the hokuyo model, but not the collision geometry outside of it.\n\n![2633_stefan.png](data/bitbucket.org/repo/jgXqbo/images/1973671565-2633_stefan.png)\n\nThe previous behavior could be enabled with a new param like \"min_clip_distance\", but I think most people don't want the behavior that comes with this. Anytime the collision collides with something, one face of that something will be within the sensor's minimum range too, so the rays won't see the something. I think a reasonable workaround for simplified geometry is simplify it more. Instead of attaching a sub-model, attach a sensor to the link containing the collision which is blocking the rays.", "markup": "markdown", "html": "<p>That's a good point. If I understand correctly, you're talking about a case where there is a sensor attached to a link that has collision geometry that should block the rays of the model.</p>\n<p><img alt=\"2633_steve.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3015222279-2633_steve.png\" /></p>\n<p>If a flag disables the behavior of seeing through parent collisions, I think it should default to not disabling them, otherwise rays from existing sensors like the hokuyo model won't escape their geometry. A model affected by the above problem would have to be editted to use the new flag. Alternatively it could be edited to put the sensor in a separate link attached with a fixed joint.</p>\n<p>I think @Stefan_Kohlbrecher was talking about a case where a sub-model (like hokuyo) is inside of another collision geometry that is entirely within the radius of the lidar's minimum range. Previously the rays would start at the minimum range, allowing them to ignore parts of geometry. The new behavior has the rays always start at the sensor itself. They would see through the hokuyo model, but not the collision geometry outside of it.</p>\n<p><img alt=\"2633_stefan.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1973671565-2633_stefan.png\" /></p>\n<p>The previous behavior could be enabled with a new param like \"min_clip_distance\", but I think most people don't want the behavior that comes with this. Anytime the collision collides with something, one face of that something will be within the sensor's minimum range too, so the rays won't see the something. I think a reasonable workaround for simplified geometry is simplify it more. Instead of attaching a sub-model, attach a sensor to the link containing the collision which is blocking the rays.</p>", "type": "rendered"}, "created_on": "2017-02-06T16:25:14.058109+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-06T16:25:14.079491+00:00", "type": "pullrequest_comment", "id": 30955093}