{"pagelen": 50, "values": [{"update": {"description": "Fixed half of #1564. The CPU RaySensor seeing through close objects is fixed. It's probably easier to review each commit individually.\r\n\r\nThe parent of the sensor is set to not collide during range measurements. Rays are then cast from the origin of the sensor, and values less than minimum range are set to -inf afterwards.\r\n\r\nIf the physics engine does not support collision masks, the RaySensor falls back to previous strategy that has issue #1564. This only affects simbody, once #867 is fixed anyeays \r\n\r\nTo physics::Collision added\r\n\r\n* GetCategoryBits()\r\n* GetCollisionBits()\r\n* SupportsCategoryBits()\r\n* SupportsCollisionBits()\r\n\r\n\r\nFixed LaserVisual -inf being displayed as +inf", "title": "Ray sensor 1564 cpu", "destination": {"commit": {"hash": "cd526975bc8b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/cd526975bc8b.json"}, "html": {"href": "#!/osrf/gazebo/commits/cd526975bc8b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "Declining because parts of this PR have been split into others, and the eventual fix for #1564 will have to be rewritten to use those PRss", "source": {"commit": {"hash": "2c013bc307b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c013bc307b7.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c013bc307b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ray_sensor_1564_cpu"}}, "state": "DECLINED", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-03-20T17:19:03.666034+00:00"}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/31468630.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-31468630"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}, "content": {"raw": "Please hold off on reviewing, changes incomming", "markup": "markdown", "html": "<p>Please hold off on reviewing, changes incomming</p>", "type": "rendered"}, "created_on": "2017-02-14T17:29:48.288871+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-14T17:29:48.291500+00:00", "type": "pullrequest_comment", "id": 31468630}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30955093.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30955093"}}, "parent": {"id": 30888172, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30888172.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30888172"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}, "content": {"raw": "That's a good point. If I understand correctly, you're talking about a case where there is a sensor attached to a link that has collision geometry that should block the rays of the model.\n\n![2633_steve.png](data/bitbucket.org/repo/jgXqbo/images/3015222279-2633_steve.png)\n\nIf a flag disables the behavior of seeing through parent collisions, I think it should default to not disabling them, otherwise rays from existing sensors like the hokuyo model won't escape their geometry. A model affected by the above problem would have to be editted to use the new flag. Alternatively it could be edited to put the sensor in a separate link attached with a fixed joint.\n\nI think @Stefan_Kohlbrecher was talking about a case where a sub-model (like hokuyo) is inside of another collision geometry that is entirely within the radius of the lidar's minimum range. Previously the rays would start at the minimum range, allowing them to ignore parts of geometry. The new behavior has the rays always start at the sensor itself. They would see through the hokuyo model, but not the collision geometry outside of it.\n\n![2633_stefan.png](data/bitbucket.org/repo/jgXqbo/images/1973671565-2633_stefan.png)\n\nThe previous behavior could be enabled with a new param like \"min_clip_distance\", but I think most people don't want the behavior that comes with this. Anytime the collision collides with something, one face of that something will be within the sensor's minimum range too, so the rays won't see the something. I think a reasonable workaround for simplified geometry is simplify it more. Instead of attaching a sub-model, attach a sensor to the link containing the collision which is blocking the rays.", "markup": "markdown", "html": "<p>That's a good point. If I understand correctly, you're talking about a case where there is a sensor attached to a link that has collision geometry that should block the rays of the model.</p>\n<p><img alt=\"2633_steve.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3015222279-2633_steve.png\" /></p>\n<p>If a flag disables the behavior of seeing through parent collisions, I think it should default to not disabling them, otherwise rays from existing sensors like the hokuyo model won't escape their geometry. A model affected by the above problem would have to be editted to use the new flag. Alternatively it could be edited to put the sensor in a separate link attached with a fixed joint.</p>\n<p>I think @Stefan_Kohlbrecher was talking about a case where a sub-model (like hokuyo) is inside of another collision geometry that is entirely within the radius of the lidar's minimum range. Previously the rays would start at the minimum range, allowing them to ignore parts of geometry. The new behavior has the rays always start at the sensor itself. They would see through the hokuyo model, but not the collision geometry outside of it.</p>\n<p><img alt=\"2633_stefan.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1973671565-2633_stefan.png\" /></p>\n<p>The previous behavior could be enabled with a new param like \"min_clip_distance\", but I think most people don't want the behavior that comes with this. Anytime the collision collides with something, one face of that something will be within the sensor's minimum range too, so the rays won't see the something. I think a reasonable workaround for simplified geometry is simplify it more. Instead of attaching a sub-model, attach a sensor to the link containing the collision which is blocking the rays.</p>", "type": "rendered"}, "created_on": "2017-02-06T16:25:14.058109+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-06T16:25:14.079491+00:00", "type": "pullrequest_comment", "id": 30955093}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30888172.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30888172"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}, "content": {"raw": "This code looks good, but I'm not sure about the strategy.\n\nAs @Stefan_Kohlbrecher mentioned in #1564, this would change the existing behavior. If you have a ray sensor that could potentially \"see\" a collision shape attached to its parent (such as the body of a car), this would prevent that from happening. So I'm not sure about this. Should it be an optional flag?", "markup": "markdown", "html": "<p>This code looks good, but I'm not sure about the strategy.</p>\n<p>As @Stefan_Kohlbrecher mentioned in <a href=\"#!/osrf/gazebo/issues/1564/ray-sensor-looking-through-walls\" rel=\"nofollow\" title=\"Ray sensor looking through walls\" class=\"ap-connect-link\">#1564</a>, this would change the existing behavior. If you have a ray sensor that could potentially \"see\" a collision shape attached to its parent (such as the body of a car), this would prevent that from happening. So I'm not sure about this. Should it be an optional flag?</p>", "type": "rendered"}, "created_on": "2017-02-03T23:43:15.294642+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-02-03T23:43:15.335059+00:00", "type": "pullrequest_comment", "id": 30888172}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30863565.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30863565"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}, "content": {"raw": "~~While the builds have some unrelated errors, the PR does appear to have broken this test. Please wait on reviewing while I look into fixing this~~\n\n```\n417: /var/lib/jenkins/workspace/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/gazebo/test/integration/laser.cc:252: Failure\n417: The difference between raySensor->Range(mid) and expectedRangeAtMidPoint is 0.00093480887934582757, which exceeds 1e-5, where\n417: raySensor->Range(mid) evaluates to 0.49906519112065417,\n417: expectedRangeAtMidPoint evaluates to 0.5, and\n417: 1e-5 evaluates to 1.0000000000000001e-05.\n417: /var/lib/jenkins/workspace/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/gazebo/test/integration/laser.cc:253: Failure\n417: The difference between raySensor->Range(0) and expectedRangeAtMidPoint is 0.0006650388207127822, which exceeds 1e-5, where\n417: raySensor->Range(0) evaluates to 0.49933496117928722,\n417: expectedRangeAtMidPoint evaluates to 0.5, and\n417: 1e-5 evaluates to 1.0000000000000001e-05.\n417: [Dbg] [ServerFixture.cc:135] ServerFixture::Unload\n417: [  FAILED  ] PhysicsEngines/LaserTest.LaserBox/1, where GetParam() = \"bullet\" (2002 ms)\n```", "markup": "markdown", "html": "<p><del>While the builds have some unrelated errors, the PR does appear to have broken this test. Please wait on reviewing while I look into fixing this</del></p>\n<div class=\"codehilite\"><pre><span></span>417: /var/lib/jenkins/workspace/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/gazebo/test/integration/laser.cc:252: Failure\n417: The difference between raySensor-&gt;Range(mid) and expectedRangeAtMidPoint is 0.00093480887934582757, which exceeds 1e-5, where\n417: raySensor-&gt;Range(mid) evaluates to 0.49906519112065417,\n417: expectedRangeAtMidPoint evaluates to 0.5, and\n417: 1e-5 evaluates to 1.0000000000000001e-05.\n417: /var/lib/jenkins/workspace/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/gazebo/test/integration/laser.cc:253: Failure\n417: The difference between raySensor-&gt;Range(0) and expectedRangeAtMidPoint is 0.0006650388207127822, which exceeds 1e-5, where\n417: raySensor-&gt;Range(0) evaluates to 0.49933496117928722,\n417: expectedRangeAtMidPoint evaluates to 0.5, and\n417: 1e-5 evaluates to 1.0000000000000001e-05.\n417: [Dbg] [ServerFixture.cc:135] ServerFixture::Unload\n417: [  FAILED  ] PhysicsEngines/LaserTest.LaserBox/1, where GetParam() = &quot;bullet&quot; (2002 ms)\n</pre></div>", "type": "rendered"}, "created_on": "2017-02-03T15:54:38.629946+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-03T18:23:01.190007+00:00", "type": "pullrequest_comment", "id": 30863565}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30873594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30873594"}}, "parent": {"id": 30863565, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30863565.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30863565"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}, "content": {"raw": "Fixed by 2c013bc ", "markup": "markdown", "html": "<p>Fixed by <a href=\"#!/osrf/gazebo/commits/2c013bc\" rel=\"nofollow\" class=\"ap-connect-link\">2c013bc</a> </p>", "type": "rendered"}, "created_on": "2017-02-03T18:21:42.271064+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-03T18:21:42.273788+00:00", "type": "pullrequest_comment", "id": 30873594}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"update": {"description": "Fixed half of #1564. The CPU RaySensor seeing through close objects is fixed. It's probably easier to review each commit individually.\r\n\r\nThe parent of the sensor is set to not collide during range measurements. Rays are then cast from the origin of the sensor, and values less than minimum range are set to -inf afterwards.\r\n\r\nIf the physics engine does not support collision masks, the RaySensor falls back to previous strategy that has issue #1564. This only affects simbody, once #867 is fixed anyeays \r\n\r\nTo physics::Collision added\r\n\r\n* GetCategoryBits()\r\n* GetCollisionBits()\r\n* SupportsCategoryBits()\r\n* SupportsCollisionBits()\r\n\r\n\r\nFixed LaserVisual -inf being displayed as +inf", "title": "Ray sensor 1564 cpu", "destination": {"commit": {"hash": "56be256c4ba9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/56be256c4ba9.json"}, "html": {"href": "#!/osrf/gazebo/commits/56be256c4ba9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2c013bc307b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c013bc307b7.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c013bc307b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ray_sensor_1564_cpu"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-02-03T18:21:07.833512+00:00"}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633/comments/30870773.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633/_/diff#comment-30870773"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}, "content": {"raw": "These tests also failed, but appear unreleated to this pull request.\n\n* INTEGRATION_contact_sensor #2183\n* UNIT_ExportDialog_TEST #2122\n* UNIT_IntrospectionCurveHandler_TEST #2121\n* UNIT_gz_TEST #2180", "markup": "markdown", "html": "<p>These tests also failed, but appear unreleated to this pull request.</p>\n<ul>\n<li>INTEGRATION_contact_sensor <a href=\"#!/osrf/gazebo/issues/2183/integration_contact_sensor-fails-on\" rel=\"nofollow\" title=\"INTEGRATION_contact_sensor fails on headless machines\" class=\"ap-connect-link\">#2183</a></li>\n<li>UNIT_ExportDialog_TEST <a href=\"#!/osrf/gazebo/issues/2122/unit_exportdialog_test-timing-out\" rel=\"nofollow\" title=\"UNIT_ExportDialog_TEST timing out\" class=\"ap-connect-link\">#2122</a></li>\n<li>UNIT_IntrospectionCurveHandler_TEST <a href=\"#!/osrf/gazebo/issues/2121/unit_introspectioncurvehandler_test-timing\" rel=\"nofollow\" title=\"UNIT_IntrospectionCurveHandler_TEST timing out\" class=\"ap-connect-link\">#2121</a></li>\n<li>UNIT_gz_TEST <a href=\"#!/osrf/gazebo/issues/2180/unit_gz_test-gztestsdf-fails-sdf-version\" rel=\"nofollow\" title=\"UNIT_gz_TEST gzTest.SDF fails SDF::Version(std::string) is deprecated\" class=\"ap-connect-link\"><s>#2180</s></a></li>\n</ul>", "type": "rendered"}, "created_on": "2017-02-03T17:34:42.018006+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-02-03T17:34:42.023075+00:00", "type": "pullrequest_comment", "id": 30870773}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"update": {"description": "Fixed half of #1564. The CPU RaySensor seeing through close objects is fixed. It's probably easier to review each commit individually.\r\n\r\nThe parent of the sensor is set to not collide during range measurements. Rays are then cast from the origin of the sensor, and values less than minimum range are set to -inf afterwards.\r\n\r\nIf the physics engine does not support collision masks, the RaySensor falls back to previous strategy that has issue #1564. This only affects simbody, once #867 is fixed anyeays \r\n\r\nTo physics::Collision added\r\n\r\n* GetCategoryBits()\r\n* GetCollisionBits()\r\n* SupportsCategoryBits()\r\n* SupportsCollisionBits()\r\n\r\n\r\nFixed LaserVisual -inf being displayed as +inf", "title": "Ray sensor 1564 cpu", "destination": {"commit": {"hash": "56be256c4ba9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/56be256c4ba9.json"}, "html": {"href": "#!/osrf/gazebo/commits/56be256c4ba9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dca6cd932a0b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dca6cd932a0b.json"}, "html": {"href": "#!/osrf/gazebo/commits/dca6cd932a0b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ray_sensor_1564_cpu"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-02-03T03:13:13.023660+00:00"}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}, {"update": {"description": "Fixed half of #1564. The CPU RaySensor seeing through close objects is fixed. It's probably easier to review each commit individually.\r\n\r\nThe parent of the sensor is set to not collide during range measurements. Rays are then cast from the origin of the sensor, and values less than minimum range are set to -inf afterwards.\r\n\r\nIf the physics engine does not support collision masks, the RaySensor falls back to previous strategy that has issue #1564. This only affects simbody, once #867 is fixed anyeays \r\n\r\nTo physics::Collision added\r\n\r\n* GetCategoryBits()\r\n* GetCollisionBits()\r\n* SupportsCategoryBits()\r\n* SupportsCollisionBits()\r\n\r\n\r\nFixed LaserVisual -inf being displayed as +inf", "title": "Ray sensor 1564 cpu", "destination": {"commit": {"hash": "56be256c4ba9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/56be256c4ba9.json"}, "html": {"href": "#!/osrf/gazebo/commits/56be256c4ba9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dca6cd932a0b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dca6cd932a0b.json"}, "html": {"href": "#!/osrf/gazebo/commits/dca6cd932a0b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "ray_sensor_1564_cpu"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-02-03T03:13:12.990523+00:00"}, "pull_request": {"type": "pullrequest", "id": 2633, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2633.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2633"}}, "title": "Ray sensor 1564 cpu"}}]}