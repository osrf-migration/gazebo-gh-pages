{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/793/comments/877483.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/793/_/diff#comment-877483"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 793, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/793.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/793"}}, "title": "Improve sensor update rate"}, "content": {"raw": "I just ran this script with a slightly patched version of gztopic.\n\n\n```\n#!c++\n#!/bin/bash\n\nTIME=10\n\navg()\n{\n\tINPUT_FILE=$1\n\tOUTPUT_FILE=$2\n\n\tcount=0;\n\ttotal=0;\n\n\tfor i in $( awk '{ print $1; }' $INPUT_FILE )\n\t   do\n\t     total=$(echo $total+$i | bc )\n\t     ((count++))\n\t   done\n\techo \"scale=2; $total / $count\" | bc > $OUTPUT_FILE\n}\n\nfor I in {1..6}\ndo\n\tTOPIC=/gazebo/default/multicamera_$I/link/cam$I/images\n\techo $TOPIC\n\n\t# Run gztopic hz on each camera to collect the stats.\n\ttimeout $TIME gztopic hz $TOPIC > log$I\n\n\t# Get the average of every topic\n\tavg log$I log$I\\_avg\ndone\n```\n\nI run the script with gazebo running from this branch and from default (using the world file of this pull request). Those are the results:\n\n\n```\n#!c++\n       Expected        default   ThisPR\ncam1      10            9.82       9.81\ncam2      20           19.64      19.67\ncam3      30           25.05      24.90\ncam4      40           29.03      29.72\ncam5      50           26.02      28.29\ncam6      60           22.99      25.51\n```\nIt looks that we do it better in the topics where we do not reach the limit. Is that the expected result? \n\nIt looks good to me.           ", "markup": "markdown", "html": "<p>I just ran this script with a slightly patched version of gztopic.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#!/bin/bash</span>\n\n<span class=\"n\">TIME</span><span class=\"o\">=</span><span class=\"mi\">10</span>\n\n<span class=\"n\">avg</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">INPUT_FILE</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"mi\">1</span>\n    <span class=\"n\">OUTPUT_FILE</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"mi\">2</span>\n\n    <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"n\">in</span> <span class=\"err\">$</span><span class=\"p\">(</span> <span class=\"n\">awk</span> <span class=\"err\">&#39;</span><span class=\"p\">{</span> <span class=\"n\">print</span> <span class=\"err\">$</span><span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"err\">&#39;</span> <span class=\"err\">$</span><span class=\"n\">INPUT_FILE</span> <span class=\"p\">)</span>\n       <span class=\"k\">do</span>\n         <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">echo</span> <span class=\"err\">$</span><span class=\"n\">total</span><span class=\"o\">+</span><span class=\"err\">$</span><span class=\"n\">i</span> <span class=\"o\">|</span> <span class=\"n\">bc</span> <span class=\"p\">)</span>\n         <span class=\"p\">((</span><span class=\"n\">count</span><span class=\"o\">++</span><span class=\"p\">))</span>\n       <span class=\"n\">done</span>\n    <span class=\"n\">echo</span> <span class=\"s\">&quot;scale=2; $total / $count&quot;</span> <span class=\"o\">|</span> <span class=\"n\">bc</span> <span class=\"o\">&gt;</span> <span class=\"err\">$</span><span class=\"n\">OUTPUT_FILE</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"n\">in</span> <span class=\"p\">{</span><span class=\"mf\">1..6</span><span class=\"p\">}</span>\n<span class=\"k\">do</span>\n    <span class=\"n\">TOPIC</span><span class=\"o\">=/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"k\">default</span><span class=\"o\">/</span><span class=\"n\">multicamera_</span><span class=\"err\">$</span><span class=\"n\">I</span><span class=\"o\">/</span><span class=\"n\">link</span><span class=\"o\">/</span><span class=\"n\">cam</span><span class=\"err\">$</span><span class=\"n\">I</span><span class=\"o\">/</span><span class=\"n\">images</span>\n    <span class=\"n\">echo</span> <span class=\"err\">$</span><span class=\"n\">TOPIC</span>\n\n    <span class=\"cp\"># Run gztopic hz on each camera to collect the stats.</span>\n    <span class=\"n\">timeout</span> <span class=\"err\">$</span><span class=\"n\">TIME</span> <span class=\"n\">gztopic</span> <span class=\"n\">hz</span> <span class=\"err\">$</span><span class=\"n\">TOPIC</span> <span class=\"o\">&gt;</span> <span class=\"n\">log</span><span class=\"err\">$</span><span class=\"n\">I</span>\n\n    <span class=\"cp\"># Get the average of every topic</span>\n    <span class=\"n\">avg</span> <span class=\"n\">log</span><span class=\"err\">$</span><span class=\"n\">I</span> <span class=\"n\">log</span><span class=\"err\">$</span><span class=\"n\">I</span><span class=\"err\">\\</span><span class=\"n\">_avg</span>\n<span class=\"n\">done</span>\n</pre></div>\n\n\n<p>I run the script with gazebo running from this branch and from default (using the world file of this pull request). Those are the results:</p>\n<div class=\"codehilite language-c++\"><pre><span></span>       <span class=\"n\">Expected</span>        <span class=\"k\">default</span>   <span class=\"n\">ThisPR</span>\n<span class=\"n\">cam1</span>      <span class=\"mi\">10</span>            <span class=\"mf\">9.82</span>       <span class=\"mf\">9.81</span>\n<span class=\"n\">cam2</span>      <span class=\"mi\">20</span>           <span class=\"mf\">19.64</span>      <span class=\"mf\">19.67</span>\n<span class=\"n\">cam3</span>      <span class=\"mi\">30</span>           <span class=\"mf\">25.05</span>      <span class=\"mf\">24.90</span>\n<span class=\"n\">cam4</span>      <span class=\"mi\">40</span>           <span class=\"mf\">29.03</span>      <span class=\"mf\">29.72</span>\n<span class=\"n\">cam5</span>      <span class=\"mi\">50</span>           <span class=\"mf\">26.02</span>      <span class=\"mf\">28.29</span>\n<span class=\"n\">cam6</span>      <span class=\"mi\">60</span>           <span class=\"mf\">22.99</span>      <span class=\"mf\">25.51</span>\n</pre></div>\n\n\n<p>It looks that we do it better in the topics where we do not reach the limit. Is that the expected result? </p>\n<p>It looks good to me.           </p>", "type": "rendered"}, "created_on": "2013-11-27T22:03:32.280306+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2013-11-27T23:07:10.053960+00:00", "type": "pullrequest_comment", "id": 877483}