{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/33775862.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-33775862"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Hey @peci1 I just tried building this and got some compile errors:\n\n    /home/louise/code/gazeboB/plugins/WheelTrackedVehiclePlugin.cc:67:21: error: \u2018class gazebo::WheelTrackedVehiclePlugin\u2019 has no member named \u2018jointNames\u2019\n     GZ_ASSERT(this->jointNames[track].size() >= 2,", "markup": "markdown", "html": "<p>Hey @peci1 I just tried building this and got some compile errors:</p>\n<div class=\"codehilite\"><pre><span></span>/home/louise/code/gazeboB/plugins/WheelTrackedVehiclePlugin.cc:67:21: error: \u2018class gazebo::WheelTrackedVehiclePlugin\u2019 has no member named \u2018jointNames\u2019\n GZ_ASSERT(this-&gt;jointNames[track].size() &gt;= 2,\n</pre></div>", "type": "rendered"}, "created_on": "2017-03-24T00:25:18.456021+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-24T00:25:18.464944+00:00", "type": "pullrequest_comment", "id": 33775862}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/33669107.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-33669107"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I've added another simulation model: tracks simulated by wheels (it's basically just a generalized skid-steer drive plugin).\n\nSee it in action here: https://drive.google.com/a/fel.cvut.cz/file/d/0B_WCOb_4cMD7YXZwY3lnOGV0bW8/view?usp=drivesdk .", "markup": "markdown", "html": "<p>I've added another simulation model: tracks simulated by wheels (it's basically just a generalized skid-steer drive plugin).</p>\n<p>See it in action here: <a href=\"https://drive.google.com/a/fel.cvut.cz/file/d/0B_WCOb_4cMD7YXZwY3lnOGV0bW8/view?usp=drivesdk\" rel=\"nofollow\" class=\"ap-connect-link\">https://drive.google.com/a/fel.cvut.cz/file/d/0B_WCOb_4cMD7YXZwY3lnOGV0bW8/view?usp=drivesdk</a> .</p>", "type": "rendered"}, "created_on": "2017-03-22T17:49:25.590651+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-22T17:49:25.642258+00:00", "type": "pullrequest_comment", "id": 33669107}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "36068ba1bbcb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36068ba1bbcb.json"}, "html": {"href": "#!/osrf/gazebo/commits/36068ba1bbcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "6a3f1ab1b947", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/6a3f1ab1b947"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/6a3f1ab1b947"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2017-03-22T17:45:14.659170+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/33381309.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-33381309"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "So, here's the paper where we describe this simulation model: https://arxiv.org/abs/1703.04316\nAnd a comparison video with other models: http://cmp.felk.cvut.cz/~peckama2/share/iros2017.mp4", "markup": "markdown", "html": "<p>So, here's the paper where we describe this simulation model: <a href=\"https://arxiv.org/abs/1703.04316\" rel=\"nofollow\" class=\"ap-connect-link\">https://arxiv.org/abs/1703.04316</a>\nAnd a comparison video with other models: <a href=\"http://cmp.felk.cvut.cz/~peckama2/share/iros2017.mp4\" rel=\"nofollow\" class=\"ap-connect-link\">http://cmp.felk.cvut.cz/~peckama2/share/iros2017.mp4</a></p>", "type": "rendered"}, "created_on": "2017-03-17T14:34:05.030498+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-17T14:34:05.087549+00:00", "type": "pullrequest_comment", "id": 33381309}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "36068ba1bbcb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36068ba1bbcb.json"}, "html": {"href": "#!/osrf/gazebo/commits/36068ba1bbcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "f7574bc1074a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/f7574bc1074a"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/f7574bc1074a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2017-03-15T15:46:30.993254+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/33195938.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-33195938"}}, "parent": {"id": 32978896, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978896.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978896"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I've added the `signum` function to `ign-math3`: https://bitbucket.org/ignitionrobotics/ign-math/pull-requests/153/added-signum-function (but as you suggest, I'm not postponing this PR until it gets merged).", "markup": "markdown", "html": "<p>I've added the <code>signum</code> function to <code>ign-math3</code>: <a href=\"https://bitbucket.org/ignitionrobotics/ign-math/pull-requests/153/added-signum-function\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/ignitionrobotics/ign-math/pull-requests/153/added-signum-function</a> (but as you suggest, I'm not postponing this PR until it gets merged).</p>", "type": "rendered"}, "created_on": "2017-03-15T11:29:59.265652+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-15T11:29:59.330874+00:00", "type": "pullrequest_comment", "id": 33195938}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32979173.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32979173"}}, "parent": {"id": 32979058, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32979058.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32979058"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "We recently added a tutorial listing which versions of the libraries go together:\n\nhttp://gazebosim.org/tutorials?tut=install\\_dependencies\\_from\\_source&cat=install#Versions", "markup": "markdown", "html": "<p>We recently added a tutorial listing which versions of the libraries go together:</p>\n<p><a href=\"http://gazebosim.org/tutorials?tut=install_dependencies_from_source&amp;cat=install#Versions\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/tutorials?tut=install_dependencies_from_source&amp;cat=install#Versions</a></p>", "type": "rendered"}, "created_on": "2017-03-11T00:26:47.354994+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-03-11T00:26:47.358721+00:00", "type": "pullrequest_comment", "id": 32979173}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32979095.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32979095"}}, "parent": {"id": 32978920, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978920"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I'll post a link to arxiv as soon as co-authors authorize me to upload it there ;)", "markup": "markdown", "html": "<p>I'll post a link to arxiv as soon as co-authors authorize me to upload it there ;)</p>", "type": "rendered"}, "created_on": "2017-03-11T00:22:47.983673+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-11T00:22:48.025894+00:00", "type": "pullrequest_comment", "id": 32979095}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32979058.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32979058"}}, "parent": {"id": 32978896, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978896.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978896"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "* Yes, [it is very ODE-spcific](#!/osrf/gazebo/pull-requests/2652/added-support-for-tracked-vehicles/diff#Lplugins/SimpleTrackedVehiclePlugin.ccT44). If you'd like to search for support in other engines, what's needed is support for friction velocity in both first and second friction direction.\n* Is there a mapping/wiki that would explicitly state \"Gazebo 7 works with sdformat 5 and ign-math3\" and so on? I'm a bit lost in these version numbers.\n* What I do now is to compose a piece of SDF in a string, load it, and then attach the loaded link/joint to the existing model. It's not ideal, but it works. What's bigger problem is deleting links/joints. I've never managed to delete them completely including visuals. I suspect I need the create and publish a \"visual disappeared\" message, but I don't know how. I assume the model editor does it somehow, but I haven't investigated into that too much.", "markup": "markdown", "html": "<ul>\n<li>Yes, <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2652/added-support-for-tracked-vehicles/diff#Lplugins/SimpleTrackedVehiclePlugin.ccT44\" rel=\"nofollow\">it is very ODE-spcific</a>. If you'd like to search for support in other engines, what's needed is support for friction velocity in both first and second friction direction.</li>\n<li>Is there a mapping/wiki that would explicitly state \"Gazebo 7 works with sdformat 5 and ign-math3\" and so on? I'm a bit lost in these version numbers.</li>\n<li>What I do now is to compose a piece of SDF in a string, load it, and then attach the loaded link/joint to the existing model. It's not ideal, but it works. What's bigger problem is deleting links/joints. I've never managed to delete them completely including visuals. I suspect I need the create and publish a \"visual disappeared\" message, but I don't know how. I assume the model editor does it somehow, but I haven't investigated into that too much.</li>\n</ul>", "type": "rendered"}, "created_on": "2017-03-11T00:20:48.093630+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-11T00:20:48.169212+00:00", "type": "pullrequest_comment", "id": 32979058}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978920"}}, "parent": {"id": 32978250, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978250.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978250"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Oh I don't think we have that for CLion\u2026 And congrats on IROS by the way ;)", "markup": "markdown", "html": "<p>Oh I don't think we have that for CLion\u2026 And congrats on IROS by the way ;)</p>", "type": "rendered"}, "created_on": "2017-03-11T00:12:02.405610+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-03-11T00:12:02.408622+00:00", "type": "pullrequest_comment", "id": 32978920}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978896.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978896"}}, "parent": {"id": 32978176, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978176.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978176"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "* Oh interesting, I hadn't noticed this was ODE-specific. Targeting Gazebo 8 should be fine. But now I'm wondering if there could be a way to make this physics-engine-agnostic\u2026 I'll need to look closer into the code for that\n* Adding functions usually doesn't break ABI, so you can try adding `LoadParam `and `signum` into `sdf5` and \\`ign-math3\\` respectively, if you want. Those would be great contributions, but I wouldn't let them block this PR. Having the functions here is ok too.\n* Oh I see, so you want to generate the track inside the plugin C\\+\\+ code? I've seen this being done before. Maybe a naive way to do it could be to have a world plugin which generates an SDF file and spawns a model from that, where that model has it's own model plugin.", "markup": "markdown", "html": "<ul>\n<li>Oh interesting, I hadn't noticed this was ODE-specific. Targeting Gazebo 8 should be fine. But now I'm wondering if there could be a way to make this physics-engine-agnostic\u2026 I'll need to look closer into the code for that</li>\n<li>Adding functions usually doesn't break ABI, so you can try adding <code>LoadParam</code>and <code>signum</code> into <code>sdf5</code> and `ign-math3` respectively, if you want. Those would be great contributions, but I wouldn't let them block this PR. Having the functions here is ok too.</li>\n<li>Oh I see, so you want to generate the track inside the plugin C++ code? I've seen this being done before. Maybe a naive way to do it could be to have a world plugin which generates an SDF file and spawns a model from that, where that model has it's own model plugin.</li>\n</ul>", "type": "rendered"}, "created_on": "2017-03-11T00:10:35.987123+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-03-11T00:10:35.989235+00:00", "type": "pullrequest_comment", "id": 32978896}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "36068ba1bbcb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36068ba1bbcb.json"}, "html": {"href": "#!/osrf/gazebo/commits/36068ba1bbcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "582e7a68fc07", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/582e7a68fc07"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/582e7a68fc07"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2017-03-10T23:48:35.328310+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978487.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978487"}}, "parent": {"id": 32967046, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967046.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967046"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Seems like a copy-paste error. It's strange it compiled for me, but that might be a symbol that was created before some refactoring and not deleted from build files in the meantime.", "markup": "markdown", "html": "<p>Seems like a copy-paste error. It's strange it compiled for me, but that might be a symbol that was created before some refactoring and not deleted from build files in the meantime.</p>", "type": "rendered"}, "created_on": "2017-03-10T23:46:39.641841+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "inline": {}, "updated_on": "2017-03-10T23:46:39.681396+00:00", "type": "pullrequest_comment", "id": 32978487}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978428.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978428"}}, "parent": {"id": 32967146, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967146.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967146"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I'm trying it on Ubuntu Trusty (I know it's officially unsupported, but I manually installed the missing libraries and I can compile and run G8).\n\nThese pragmas were actually added to avoid compiler warnings. If you have an idea how to do it better, please, tell me. \n\nThe warnings I'm supressing are right in telling that I save a locally obtained reference to an instance attribute, which may live longer. But in this case, since the simulation is stopped and waiting for this method to finish, we can be (IMO) sure the referenced value will not be freed.", "markup": "markdown", "html": "<p>I'm trying it on Ubuntu Trusty (I know it's officially unsupported, but I manually installed the missing libraries and I can compile and run G8).</p>\n<p>These pragmas were actually added to avoid compiler warnings. If you have an idea how to do it better, please, tell me. </p>\n<p>The warnings I'm supressing are right in telling that I save a locally obtained reference to an instance attribute, which may live longer. But in this case, since the simulation is stopped and waiting for this method to finish, we can be (IMO) sure the referenced value will not be freed.</p>", "type": "rendered"}, "created_on": "2017-03-10T23:43:30.902706+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "inline": {}, "updated_on": "2017-03-10T23:43:30.954215+00:00", "type": "pullrequest_comment", "id": 32978428}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978305.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978305"}}, "parent": {"id": 32967525, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967525.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967525"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Partly. The outer dislocation is a bug. The inner dislocation is intentional - we use it to help laser filtering remove the tracks from scans. \n\nBut this is definitely something the simplified model doesn't need.", "markup": "markdown", "html": "<p>Partly. The outer dislocation is a bug. The inner dislocation is intentional - we use it to help laser filtering remove the tracks from scans. </p>\n<p>But this is definitely something the simplified model doesn't need.</p>", "type": "rendered"}, "created_on": "2017-03-10T23:38:41.128083+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "inline": {}, "updated_on": "2017-03-10T23:38:41.184767+00:00", "type": "pullrequest_comment", "id": 32978305}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978269.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978269"}}, "parent": {"id": 32967687, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967687.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967687"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "You're right, our robot has an off-centered Ladybug LB-3 on top of the deck, which makes the inertia look this way. I forgot to update it in this simplified model.", "markup": "markdown", "html": "<p>You're right, our robot has an off-centered Ladybug LB-3 on top of the deck, which makes the inertia look this way. I forgot to update it in this simplified model.</p>", "type": "rendered"}, "created_on": "2017-03-10T23:37:01.194201+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "inline": {}, "updated_on": "2017-03-10T23:37:01.241891+00:00", "type": "pullrequest_comment", "id": 32978269}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978250.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978250"}}, "parent": {"id": 32966922, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32966922.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32966922"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I forgot to mention I've created this PR in a time pressure created by IROS deadline =) I wanted to refer it in my paper. Of course style changes are on my list, and I know about the style-checker script, which is now probably crazy from this PR :) I'll do the changes. Don't you have a CLion code-style config by the way?", "markup": "markdown", "html": "<p>I forgot to mention I've created this PR in a time pressure created by IROS deadline =) I wanted to refer it in my paper. Of course style changes are on my list, and I know about the style-checker script, which is now probably crazy from this PR :) I'll do the changes. Don't you have a CLion code-style config by the way?</p>", "type": "rendered"}, "created_on": "2017-03-10T23:35:49.706299+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-10T23:35:49.751032+00:00", "type": "pullrequest_comment", "id": 32978250}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978176.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978176"}}, "parent": {"id": 32966462, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32966462.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32966462"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Thanks for comments, Louise.\n\n* Gazebo 7 is unfortunately a bit trickier, since I need to `#include <gazebo/ode/contact.h>` in `SimpleTrackedVehicle.cc` to get access to `dContact`. In G7, the ODE headers were not moved under the `gazebo/ode` include path, which makes it error-prone when there is a system install of ODE present. I was able to hack this in my G7 build file using:\n```\n#!cmake\nlist(GET GAZEBO_INCLUDE_DIRS 1 GAZEBO_INCLUDE_HACK)\ninclude_directories(${Boost_INCLUDE_DIR} ${GAZEBO_INCLUDE_DIRS} ${GAZEBO_INCLUDE_HACK}/gazebo  ${catkin_INCLUDE_DIRS})\n``` \nbut that's not ideal I'd say.\n\n* I can create the `LoadParam` and `signum` PRs. I assume if I target them to the default branches of these libraries, this will be another show-stopper for G7.\n* Ruby is tricky if you want to have URDF as the initial input. I seek for run-time model generation/editing. My idea was to allow the user to specify a placeholder link (used e.g. in URDF) that will be deleted when the model is loaded and substituted with a track generated by the plugin.", "markup": "markdown", "html": "<p>Thanks for comments, Louise.</p>\n<ul>\n<li>Gazebo 7 is unfortunately a bit trickier, since I need to <code>#include &lt;gazebo/ode/contact.h&gt;</code> in <code>SimpleTrackedVehicle.cc</code> to get access to <code>dContact</code>. In G7, the ODE headers were not moved under the <code>gazebo/ode</code> include path, which makes it error-prone when there is a system install of ODE present. I was able to hack this in my G7 build file using:</li>\n</ul>\n<div class=\"codehilite language-cmake\"><pre><span></span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"s\">GET</span> <span class=\"s\">GAZEBO_INCLUDE_DIRS</span> <span class=\"s\">1</span> <span class=\"s\">GAZEBO_INCLUDE_HACK</span><span class=\"p\">)</span>\n<span class=\"nb\">include_directories</span><span class=\"p\">(</span><span class=\"o\">${</span><span class=\"nv\">Boost_INCLUDE_DIR</span><span class=\"o\">}</span> <span class=\"o\">${</span><span class=\"nv\">GAZEBO_INCLUDE_DIRS</span><span class=\"o\">}</span> <span class=\"o\">${</span><span class=\"nv\">GAZEBO_INCLUDE_HACK</span><span class=\"o\">}</span><span class=\"s\">/gazebo</span>  <span class=\"o\">${</span><span class=\"nv\">catkin_INCLUDE_DIRS</span><span class=\"o\">}</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>but that's not ideal I'd say.</p>\n<ul>\n<li>I can create the <code>LoadParam</code> and <code>signum</code> PRs. I assume if I target them to the default branches of these libraries, this will be another show-stopper for G7.</li>\n<li>Ruby is tricky if you want to have URDF as the initial input. I seek for run-time model generation/editing. My idea was to allow the user to specify a placeholder link (used e.g. in URDF) that will be deleted when the model is loaded and substituted with a track generated by the plugin.</li>\n</ul>", "type": "rendered"}, "created_on": "2017-03-10T23:32:02.263882+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-10T23:32:02.368170+00:00", "type": "pullrequest_comment", "id": 32978176}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967687.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967687"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "The inertia of the base link looks slanted to the side, was this modeled after a more complex vehicle? Maybe we can add a note about this somewhere.\n\n![](data/bitbucket.org/repo/jgXqbo/images/3859307965-trackinertia.png)", "markup": "markdown", "html": "<p>The inertia of the base link looks slanted to the side, was this modeled after a more complex vehicle? Maybe we can add a note about this somewhere.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/jgXqbo/images/3859307965-trackinertia.png\" /></p>", "type": "rendered"}, "created_on": "2017-03-10T19:21:29.856077+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-10T19:21:29.859352+00:00", "type": "pullrequest_comment", "id": 32967687}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967525.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967525"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "The front cylinders look dislocated, was this done on purpose?\n\n![](data/bitbucket.org/repo/jgXqbo/images/5154987-track.png)", "markup": "markdown", "html": "<p>The front cylinders look dislocated, was this done on purpose?</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/jgXqbo/images/5154987-track.png\" /></p>", "type": "rendered"}, "created_on": "2017-03-10T19:18:20.894175+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-10T19:18:20.897065+00:00", "type": "pullrequest_comment", "id": 32967525}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967146.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967146"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I'm getting warnings here:\n\n    /home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:420:0: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n     #pragma clang diagnostic push\n     ^\n    /home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:421:0: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n     #pragma clang diagnostic ignored \"-Wreturn-stack-address\"\n     ^\n    /home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:423:0: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n     #pragma clang diagnostic pop\n     ^\n    \n\nI'm on Ubuntu Xenial\n\n\u200c\n\n\u200c\n\n\u200c", "markup": "markdown", "html": "<p>I'm getting warnings here:</p>\n<div class=\"codehilite\"><pre><span></span>/home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:420:0: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n #pragma clang diagnostic push\n ^\n/home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:421:0: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n #pragma clang diagnostic ignored &quot;-Wreturn-stack-address&quot;\n ^\n/home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:423:0: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n #pragma clang diagnostic pop\n ^\n</pre></div>\n\n\n<p>I'm on Ubuntu Xenial</p>\n<p>\u200c</p>\n<p>\u200c</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2017-03-10T19:10:50.886185+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-10T19:10:50.889496+00:00", "type": "pullrequest_comment", "id": 32967146}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32967046.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32967046"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I'm getting a compile error here:\n\n    /home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:65:19: error: \u2018class gazebo::SimpleTrackedVehiclePlugin\u2019 has no member named \u2018left_track\u2019\n    ", "markup": "markdown", "html": "<p>I'm getting a compile error here:</p>\n<div class=\"codehilite\"><pre><span></span>/home/louise/code/gazeboC/plugins/SimpleTrackedVehiclePlugin.cc:65:19: error: \u2018class gazebo::SimpleTrackedVehiclePlugin\u2019 has no member named \u2018left_track\u2019\n</pre></div>", "type": "rendered"}, "created_on": "2017-03-10T19:08:55.614013+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-10T19:08:55.616756+00:00", "type": "pullrequest_comment", "id": 32967046}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32966922.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32966922"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Also a heads up that there will be some style changes needed before this can be merged in. [Here](http://gazebosim.org/tutorials?tut=contrib_code&cat=development#Style)'s our style guide for your reference. Just glancing through the code I can already observe some things which need change, like 50 `/` in front of functions, input parameters prefixed by `_`, pointer's `* `close to the variable and so on\u2026\n\nI realize that adapting to a new style can be tedious. I can try helping with that when I have some time.", "markup": "markdown", "html": "<p>Also a heads up that there will be some style changes needed before this can be merged in. <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=contrib_code&amp;cat=development#Style\" rel=\"nofollow\">Here</a>'s our style guide for your reference. Just glancing through the code I can already observe some things which need change, like 50 <code>/</code> in front of functions, input parameters prefixed by <code>_</code>, pointer's <code>*</code>close to the variable and so on\u2026</p>\n<p>I realize that adapting to a new style can be tedious. I can try helping with that when I have some time.</p>", "type": "rendered"}, "created_on": "2017-03-10T19:06:14.612855+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-03-10T19:06:14.615549+00:00", "type": "pullrequest_comment", "id": 32966922}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32966462.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32966462"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Hi @peci1 , thanks for the contribution, that video looks awesome! I'm going to try this soon!\n\nAnswering some of your questions:\n\n* Since you didn't change any Gazebo API / ABI, you could even target this to gazebo7 if you want. That is a long term support version.\n* I think the `LoadParam` function is a great idea! This could probably go into SDFormat.\n* Apparently [there isn't](http://stackoverflow.com/a/4609795) an out-of-the-box signum in C\\+\\+, but we could add one to `ignition::math::Helpers`\n* I think it should be fine for the model to be embedded into the world as you put it, since it's an example and it's composed of simple shapes.\n* As for generating models programmatically, an option is to use embedded ruby, [here](#!/osrf/gazebo_models/src/ae8c18c22b4e3a7b7d4bd86f53bd466141c27408/cart_front_steer/)'s an example from the model database.", "markup": "markdown", "html": "<p>Hi @peci1 , thanks for the contribution, that video looks awesome! I'm going to try this soon!</p>\n<p>Answering some of your questions:</p>\n<ul>\n<li>Since you didn't change any Gazebo API / ABI, you could even target this to gazebo7 if you want. That is a long term support version.</li>\n<li>I think the <code>LoadParam</code> function is a great idea! This could probably go into SDFormat.</li>\n<li>Apparently <a data-is-external-link=\"true\" href=\"http://stackoverflow.com/a/4609795\" rel=\"nofollow\">there isn't</a> an out-of-the-box signum in C++, but we could add one to <code>ignition::math::Helpers</code></li>\n<li>I think it should be fine for the model to be embedded into the world as you put it, since it's an example and it's composed of simple shapes.</li>\n<li>As for generating models programmatically, an option is to use embedded ruby, <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/src/ae8c18c22b4e3a7b7d4bd86f53bd466141c27408/cart_front_steer/\" rel=\"nofollow\">here</a>'s an example from the model database.</li>\n</ul>", "type": "rendered"}, "created_on": "2017-03-10T18:57:58.689992+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-03-10T18:57:58.699206+00:00", "type": "pullrequest_comment", "id": 32966462}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32324234.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32324234"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Video of the demo vehicle in action: https://drive.google.com/open?id=0B_WCOb_4cMD7TVowMVlUSG5GbG8 .\n\nThis method is only for non-deformable tracks, but it is pretty fast - on my 4-years-old notebook Core i7 it runs 10x realtime.", "markup": "markdown", "html": "<p>Video of the demo vehicle in action: <a href=\"https://drive.google.com/open?id=0B_WCOb_4cMD7TVowMVlUSG5GbG8\" rel=\"nofollow\" class=\"ap-connect-link\">https://drive.google.com/open?id=0B_WCOb_4cMD7TVowMVlUSG5GbG8</a> .</p>\n<p>This method is only for non-deformable tracks, but it is pretty fast - on my 4-years-old notebook Core i7 it runs 10x realtime.</p>", "type": "rendered"}, "created_on": "2017-03-01T05:08:31.880380+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2017-03-01T05:08:31.942895+00:00", "type": "pullrequest_comment", "id": 32324234}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "36068ba1bbcb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36068ba1bbcb.json"}, "html": {"href": "#!/osrf/gazebo/commits/36068ba1bbcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "9d506d01072d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/9d506d01072d"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/9d506d01072d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2017-03-01T05:01:36.720073+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "36068ba1bbcb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/36068ba1bbcb.json"}, "html": {"href": "#!/osrf/gazebo/commits/36068ba1bbcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "9d506d01072d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/9d506d01072d"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/9d506d01072d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2017-03-01T05:01:36.699148+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}]}