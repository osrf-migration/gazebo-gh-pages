{"pagelen": 50, "values": [{"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "7e5f4b84705f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7e5f4b84705f.json"}, "html": {"href": "#!/osrf/gazebo/commits/7e5f4b84705f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "689ff011763b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/689ff011763b"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/689ff011763b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2019-04-30T09:33:29.926153+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "7e5f4b84705f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7e5f4b84705f.json"}, "html": {"href": "#!/osrf/gazebo/commits/7e5f4b84705f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "ac4b659dc470", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/ac4b659dc470"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/ac4b659dc470"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2019-04-30T09:27:33.449145+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100422352.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100422352"}}, "parent": {"id": 100370130, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100370130.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100370130"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "It\u2019s been a long time since I developed the code, but I faintly remember that using CategoryBits directly was because of bug [#!/osrf/gazebo/issues/1855/gazebo-misuses-collision-collide-bits-as](#!/osrf/gazebo/issues/1855/gazebo-misuses-collision-collide-bits-as) .", "markup": "markdown", "html": "<p>It\u2019s been a long time since I developed the code, but I faintly remember that using CategoryBits directly was because of bug <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/issues/1855/gazebo-misuses-collision-collide-bits-as\" rel=\"nofollow\">#!/osrf/gazebo/issues/1855/gazebo-misuses-collision-collide-bits-as</a> .</p>", "type": "rendered"}, "created_on": "2019-04-30T08:45:22.175500+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "inline": {}, "updated_on": "2019-04-30T08:45:22.343639+00:00", "type": "pullrequest_comment", "id": 100422352}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100370130.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100370130"}}, "parent": {"id": 100368930, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100368930.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100368930"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I understand why he is testing in this case, I recommend to use [Gazebo\u2019s collision](http://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1physics_1_1Collision.html) class which is physic engine independent to compare two collisions, I don\u2019t know if it is strictly necessary to use `CategoryBits` for that purpose.", "markup": "markdown", "html": "<p>I understand why he is testing in this case, I recommend to use <a data-is-external-link=\"true\" href=\"http://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1physics_1_1Collision.html\" rel=\"nofollow\">Gazebo\u2019s collision</a> class which is physic engine independent to compare two collisions, I don\u2019t know if it is strictly necessary to use <code>CategoryBits</code> for that purpose.</p>", "type": "rendered"}, "created_on": "2019-04-29T20:29:13.828018+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "inline": {}, "updated_on": "2019-04-29T20:36:55.274500+00:00", "type": "pullrequest_comment", "id": 100370130}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100370089.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100370089"}}, "parent": {"id": 100368930, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100368930.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100368930"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "You\u2019re right, the DART code does nothing here. I\u2019ll remove it tomorrow.", "markup": "markdown", "html": "<p>You\u2019re right, the DART code does nothing here. I\u2019ll remove it tomorrow.</p>", "type": "rendered"}, "created_on": "2019-04-29T20:28:52.924993+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "inline": {}, "updated_on": "2019-04-29T20:28:52.975507+00:00", "type": "pullrequest_comment", "id": 100370089}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100367677.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100367677"}}, "parent": {"id": 100362193, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100362193.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100362193"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "@{557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1} Do you mind if I ask why this is the only test using DART? Is DART even required if it is going to be used in only one test?  \n  \nEDIT: I\u2019ve just remember that DART doesn\u2019t work on WheelTracked. It is ok to leave it. ", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1\">@Martin Pecka</span> Do you mind if I ask why this is the only test using DART? Is DART even required if it is going to be used in only one test?  </p>\n<p>EDIT: I\u2019ve just remember that DART doesn\u2019t work on WheelTracked. It is ok to leave it. </p>", "type": "rendered"}, "created_on": "2019-04-29T20:04:58.586039+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "inline": {}, "updated_on": "2019-04-29T20:18:40.626120+00:00", "type": "pullrequest_comment", "id": 100367677}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100368930.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100368930"}}, "parent": {"id": 100367677, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100367677.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100367677"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "yeah, none of the test cases are using DART. I see that there is some dart code in the GetCategoryBits function, but I'm not sure if that is needed if there are no tests using dart", "markup": "markdown", "html": "<p>yeah, none of the test cases are using DART. I see that there is some dart code in the GetCategoryBits function, but I'm not sure if that is needed if there are no tests using dart</p>", "type": "rendered"}, "created_on": "2019-04-29T20:17:26.279436+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-04-29T20:17:26.291365+00:00", "type": "pullrequest_comment", "id": 100368930}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100362193.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100362193"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "the homebrew build has a failure that I've seen before:\n\n* [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=gazebo-ci-pr_any-homebrew-amd64&build=1718)](https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1718/) https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1718/\n* #!/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/diff#comment-78382703\n* #!/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/activity#comment-81016151\n\nadding the following 3 lines before including `DARTCollision.hh` should fix it\n~~~\n#ifdef __MACTYPES__\n#undef nil\n#endif\n~~~", "markup": "markdown", "html": "<p>the homebrew build has a failure that I've seen before:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1718/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=gazebo-ci-pr_any-homebrew-amd64&amp;build=1718\" /></a> <a href=\"https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1718/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64/1718/</a></li>\n<li><a href=\"#!/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/diff#comment-78382703\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/diff#comment-78382703</a></li>\n<li><a href=\"#!/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/activity#comment-81016151\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/activity#comment-81016151</a></li>\n</ul>\n<p>adding the following 3 lines before including <code>DARTCollision.hh</code> should fix it</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#ifdef __MACTYPES__</span>\n<span class=\"cp\">#undef nil</span>\n<span class=\"cp\">#endif</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-29T19:10:42.024500+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-04-29T19:10:42.036989+00:00", "type": "pullrequest_comment", "id": 100362193}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100352619.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100352619"}}, "parent": {"id": 100292258, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100292258.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100292258"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Yes, I will chat about it with some people, I think it is working, but I will restart some jobs and check that it is not associated with this PR so I can approve it early this week.", "markup": "markdown", "html": "<p>Yes, I will chat about it with some people, I think it is working, but I will restart some jobs and check that it is not associated with this PR so I can approve it early this week.</p>", "type": "rendered"}, "created_on": "2019-04-29T17:41:15.299445+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2019-04-29T17:41:15.315720+00:00", "type": "pullrequest_comment", "id": 100352619}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100292258.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100292258"}}, "parent": {"id": 100037221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100037221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100037221"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I\u2019m still a bit confused by the test results. no-gpu failed to start, nvidia has one new test failure in gzPhysics, which should not be related and seems like a random failure.", "markup": "markdown", "html": "<p>I\u2019m still a bit confused by the test results. no-gpu failed to start, nvidia has one new test failure in gzPhysics, which should not be related and seems like a random failure.</p>", "type": "rendered"}, "created_on": "2019-04-29T11:30:05.184756+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-04-29T11:30:05.316494+00:00", "type": "pullrequest_comment", "id": 100292258}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/100037221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-100037221"}}, "parent": {"id": 99964469, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99964469.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99964469"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Yes, the problem was fixed now. I started new jobs here:\n\n* [Xenial-gpu](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/)\n* [Xenial-no gpu](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/)\n* [Homebrew](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/)\n* [Windows](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-windows7-amd64/)\n\n", "markup": "markdown", "html": "<p>Yes, the problem was fixed now. I started new jobs here:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/\" rel=\"nofollow\">Xenial-gpu</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/\" rel=\"nofollow\">Xenial-no gpu</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/\" rel=\"nofollow\">Homebrew</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-windows7-amd64/\" rel=\"nofollow\">Windows</a></li>\n</ul>", "type": "rendered"}, "created_on": "2019-04-25T17:39:26.015068+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2019-04-25T17:39:26.026042+00:00", "type": "pullrequest_comment", "id": 100037221}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99964469.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99964469"}}, "parent": {"id": 99742469, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99742469.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99742469"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Now that dart\\_boxed\\_lcp\\_68\\_test is merged into gazebo9, there\u2019s no need for a specific test branch, so I merged this PR branch again with gazebo9. You can now run the tests directly on peci1/tracked\\_vehicles.", "markup": "markdown", "html": "<p>Now that dart_boxed_lcp_68_test is merged into gazebo9, there\u2019s no need for a specific test branch, so I merged this PR branch again with gazebo9. You can now run the tests directly on peci1/tracked_vehicles.</p>", "type": "rendered"}, "created_on": "2019-04-25T10:23:01.713211+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-04-25T10:23:01.904809+00:00", "type": "pullrequest_comment", "id": 99964469}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "f0d9dbe74406", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f0d9dbe74406.json"}, "html": {"href": "#!/osrf/gazebo/commits/f0d9dbe74406"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "f6a59568a2b4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/f6a59568a2b4"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/f6a59568a2b4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2019-04-25T10:21:43.779682+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "f0d9dbe74406", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f0d9dbe74406.json"}, "html": {"href": "#!/osrf/gazebo/commits/f0d9dbe74406"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "f6a59568a2b4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/f6a59568a2b4"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/f6a59568a2b4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2019-04-25T10:21:37.826354+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99742469.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99742469"}}, "parent": {"id": 99735311, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99735311.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99735311"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "It seems CI is broken by the bug that [#!/osrf/gazebo/pull-requests/3101](#!/osrf/gazebo/pull-requests/3101/use-dart-67-behavior-for-setting/diff) is trying to fix. I created a test branch [https://bitbucket.org/peci1/gazebo/branch/tracked\\_vehicles\\_with\\_dart\\_fix](https://bitbucket.org/peci1/gazebo/branch/tracked_vehicles_with_dart_fix) which merges the DART-fix PR into this PR. Can you run the CI builds against this branch, please?", "markup": "markdown", "html": "<p>It seems CI is broken by the bug that <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/3101/use-dart-67-behavior-for-setting/diff\" rel=\"nofollow\">#!/osrf/gazebo/pull-requests/3101</a> is trying to fix. I created a test branch <a data-is-external-link=\"true\" href=\"https://bitbucket.org/peci1/gazebo/branch/tracked_vehicles_with_dart_fix\" rel=\"nofollow\">https://bitbucket.org/peci1/gazebo/branch/tracked_vehicles_with_dart_fix</a> which merges the DART-fix PR into this PR. Can you run the CI builds against this branch, please?</p>", "type": "rendered"}, "created_on": "2019-04-24T00:35:30.707097+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-04-24T00:35:30.774050+00:00", "type": "pullrequest_comment", "id": 99742469}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99735311.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99735311"}}, "parent": {"id": 99372856, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99372856.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99372856"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "New jenkins jobs:\n\n* [Xenial-gpu](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/830/)\n* [Xenial-no gpu](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/1073/)\n* [Homebrew](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1708/)\n* [Windows](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-windows7-amd64/2516/)\n\n", "markup": "markdown", "html": "<p>New jenkins jobs:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/830/\" rel=\"nofollow\">Xenial-gpu</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/1073/\" rel=\"nofollow\">Xenial-no gpu</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1708/\" rel=\"nofollow\">Homebrew</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-windows7-amd64/2516/\" rel=\"nofollow\">Windows</a></li>\n</ul>", "type": "rendered"}, "created_on": "2019-04-23T22:11:29.033503+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2019-04-23T22:11:29.043283+00:00", "type": "pullrequest_comment", "id": 99735311}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99728677.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99728677"}}, "parent": {"id": 99726090, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99726090.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99726090"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Hmm, weird build errors in DART physics\u2026 They shouldn\u2019t be related\u2026", "markup": "markdown", "html": "<p>Hmm, weird build errors in DART physics\u2026 They shouldn\u2019t be related\u2026</p>", "type": "rendered"}, "created_on": "2019-04-23T20:52:39.962004+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-04-23T20:52:40.019912+00:00", "type": "pullrequest_comment", "id": 99728677}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99726090.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99726090"}}, "parent": {"id": 99569512, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99569512.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99569512"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "My bad! I forgot to make it clear to Jenkins that it was from a fork, redoing the Jenkins jobs, thanks.", "markup": "markdown", "html": "<p>My bad! I forgot to make it clear to Jenkins that it was from a fork, redoing the Jenkins jobs, thanks.</p>", "type": "rendered"}, "created_on": "2019-04-23T20:28:49.148245+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2019-04-23T20:28:49.159478+00:00", "type": "pullrequest_comment", "id": 99726090}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99569512.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99569512"}}, "parent": {"id": 99555829, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99555829.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99555829"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "The tests will need a re-run. \n\nxenial-gpu: squid deb proxy restart failed\n\nAll tests were building an older revision dc60c569. Did you forget to merge peci1/gazebo/tracked\\_vehicles into osrf/gazebo/tracked\\_vehicles ?", "markup": "markdown", "html": "<p>The tests will need a re-run. </p>\n<p>xenial-gpu: squid deb proxy restart failed</p>\n<p>All tests were building an older revision <a href=\"#!/osrf/gazebo/commits/dc60c569\" rel=\"nofollow\" class=\"ap-connect-link\">dc60c569</a>. Did you forget to merge <a href=\"https://bitbucket.org/peci1/gazebo\" rel=\"nofollow\" class=\"ap-connect-link\">peci1/gazebo</a>/tracked_vehicles into <a href=\"#!/osrf/gazebo\" rel=\"nofollow\" class=\"ap-connect-link\">osrf/gazebo</a>/tracked_vehicles ?</p>", "type": "rendered"}, "created_on": "2019-04-22T22:48:29.876824+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-04-22T22:48:29.940953+00:00", "type": "pullrequest_comment", "id": 99569512}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99555829.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99555829"}}, "parent": {"id": 99372856, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99372856.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99372856"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "On going jenkins jobs:\n\n* [Xenial-gpu](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/829/)\n* [Xenial-no gpu](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/1072/)\n* [Homebrew](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1707/)\n* [Windows](https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-windows7-amd64/2515/)\n\n", "markup": "markdown", "html": "<p>On going jenkins jobs:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-nvidia/829/\" rel=\"nofollow\">Xenial-gpu</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-xenial-amd64-gpu-none/1072/\" rel=\"nofollow\">Xenial-no gpu</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-homebrew-amd64/1707/\" rel=\"nofollow\">Homebrew</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/gazebo/job/gazebo-ci-pr_any-windows7-amd64/2515/\" rel=\"nofollow\">Windows</a></li>\n</ul>", "type": "rendered"}, "created_on": "2019-04-22T19:57:01.186467+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2019-04-22T20:46:12.857073+00:00", "type": "pullrequest_comment", "id": 99555829}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/99372856.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-99372856"}}, "parent": {"id": 98366145, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/98366145.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-98366145"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Done :wink:  Tracked-vehicle-related tests pass on my machine. I got like 90 failures from other tests, but they either seem random or unrelated.", "markup": "markdown", "html": "<p>Done <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" />  Tracked-vehicle-related tests pass on my machine. I got like 90 failures from other tests, but they either seem random or unrelated.</p>", "type": "rendered"}, "created_on": "2019-04-19T00:26:13.693715+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-04-19T00:26:13.833283+00:00", "type": "pullrequest_comment", "id": 99372856}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "868ff36b8b09", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/868ff36b8b09.json"}, "html": {"href": "#!/osrf/gazebo/commits/868ff36b8b09"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "9e581f133378", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/9e581f133378"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/9e581f133378"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2019-04-19T00:25:10.680902+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/98398205.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-98398205"}}, "parent": {"id": 98366145, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/98366145.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-98366145"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Hey Javier, I\u2019m glad to hear there\u2019s still somebody who wants to push this to the successful end :slight_smile: I\u2019ll have a look at it in the end of the next week.", "markup": "markdown", "html": "<p>Hey Javier, I\u2019m glad to hear there\u2019s still somebody who wants to push this to the successful end <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> I\u2019ll have a look at it in the end of the next week.</p>", "type": "rendered"}, "created_on": "2019-04-11T06:32:59.559932+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-04-11T06:32:59.613400+00:00", "type": "pullrequest_comment", "id": 98398205}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/98366145.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-98366145"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Hi @peci1 , I am collaborating with the Gazebo team and I would like to help to get this PR merged.  \n  \nThe only concern that I have is this [hack for gazebo 8](#!/osrf/gazebo/pull-requests/2652/added-support-for-tracked-vehicles/diff#Lplugins/SimpleTrackedVehiclePlugin.ccT125). Gazebo 8 is at EOL and this PR targets gazebo 9. Can I ask you to remove it? There is no point to add a hack that is no longer required in this and future versions.  \n  \nThere are some minor style issues from the [codecheck](http://gazebosim.org/tutorials?tut=contrib_code&cat=development#Style). Here is the list:\n\n```\n[test/integration/tracked_vehicles.cc:24]: (style) Class 'TrackedVehiclesTest' has a constructor with 1 argument that is not explicit.\ncppcheck: No C or C++ source files found.\n./plugins/SimpleTrackedVehiclePlugin.hh:192:  All parameters should be named in a function  [readability/function] [3]\n./plugins/SimpleTrackedVehiclePlugin.cc:272:  { should never be at the end of the previous line  [whitespace/braces] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:290:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:293:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:311:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:312:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:316:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:317:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:320:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:321:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:323:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:328:  { should never be at the end of the previous line  [whitespace/braces] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:379:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:385:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./test/integration/tracked_vehicles.cc:180:  At least two spaces is best between code and comments  [whitespace/comments] [2]\n./test/integration/tracked_vehicles.cc:186:  At least two spaces is best between code and comments  [whitespace/comments] [2\n```\n\n  \nBesides that we need to fix the conflict in the Changelog and I think I can approve merging it.", "markup": "markdown", "html": "<p>Hi @peci1 , I am collaborating with the Gazebo team and I would like to help to get this PR merged.  </p>\n<p>The only concern that I have is this <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2652/added-support-for-tracked-vehicles/diff#Lplugins/SimpleTrackedVehiclePlugin.ccT125\" rel=\"nofollow\">hack for gazebo 8</a>. Gazebo 8 is at EOL and this PR targets gazebo 9. Can I ask you to remove it? There is no point to add a hack that is no longer required in this and future versions.  </p>\n<p>There are some minor style issues from the <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=contrib_code&amp;cat=development#Style\" rel=\"nofollow\">codecheck</a>. Here is the list:</p>\n<div class=\"codehilite\"><pre><span></span>[test/integration/tracked_vehicles.cc:24]: (style) Class &#39;TrackedVehiclesTest&#39; has a constructor with 1 argument that is not explicit.\ncppcheck: No C or C++ source files found.\n./plugins/SimpleTrackedVehiclePlugin.hh:192:  All parameters should be named in a function  [readability/function] [3]\n./plugins/SimpleTrackedVehiclePlugin.cc:272:  { should never be at the end of the previous line  [whitespace/braces] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:290:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:293:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:311:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:312:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:316:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:317:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:320:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:321:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:323:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:328:  { should never be at the end of the previous line  [whitespace/braces] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:379:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./plugins/SimpleTrackedVehiclePlugin.cc:385:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]\n./test/integration/tracked_vehicles.cc:180:  At least two spaces is best between code and comments  [whitespace/comments] [2]\n./test/integration/tracked_vehicles.cc:186:  At least two spaces is best between code and comments  [whitespace/comments] [2\n</pre></div>\n\n\n<p>Besides that we need to fix the conflict in the Changelog and I think I can approve merging it.</p>", "type": "rendered"}, "created_on": "2019-04-10T21:17:31.592411+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2019-04-10T21:17:31.629852+00:00", "type": "pullrequest_comment", "id": 98366145}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/97944940.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-97944940"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "What a wonderful plugin! I am curious when it will be merged :articulated_lorry: \n\nI do get a warning/error in the terminal:\n\n`Topic [/data://world/default/model/simple_tracked/plugin/keyboard_control/joint_cmd] is not valid.`\n\nI run gazebo in a ROS environment like this:\n\n`roslaunch gazebo_ros empty_world.launch world_name:=worlds/tracked_vehicle_simple.world`\n\nThe example vehicle works as expected though\u2026", "markup": "markdown", "html": "<p>What a wonderful plugin! I am curious when it will be merged <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f69b.png\" alt=\"\ud83d\ude9b\" title=\":articulated_lorry:\" data-emoji-short-name=\":articulated_lorry:\" /> </p>\n<p>I do get a warning/error in the terminal:</p>\n<p><code>Topic [/data://world/default/model/simple_tracked/plugin/keyboard_control/joint_cmd] is not valid.</code></p>\n<p>I run gazebo in a ROS environment like this:</p>\n<p><code>roslaunch gazebo_ros empty_world.launch world_name:=worlds/tracked_vehicle_simple.world</code></p>\n<p>The example vehicle works as expected though\u2026</p>", "type": "rendered"}, "created_on": "2019-04-08T12:58:25.831981+00:00", "user": {"display_name": "Tim Clephas", "uuid": "{35f08669-ecd1-47a0-b412-3e93f1d70017}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B35f08669-ecd1-47a0-b412-3e93f1d70017%7D"}, "html": {"href": "https://bitbucket.org/%7B35f08669-ecd1-47a0-b412-3e93f1d70017%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:98cae2ab-bc88-45c2-b44b-8610647da5ca/fe5ed15f-bebd-4d84-a14a-cd0dde4e9ea6/128"}}, "nickname": "Tim Clephas", "type": "user", "account_id": "557058:98cae2ab-bc88-45c2-b44b-8610647da5ca"}, "updated_on": "2019-04-08T12:58:25.923494+00:00", "type": "pullrequest_comment", "id": 97944940}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/88328549.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-88328549"}}, "parent": {"id": 85009323, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85009323.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85009323"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I\u2019ve just updated this PR with the changes from 1\\) and 2\\). So now it\u2019s just the tracked vehicles :slight_smile: ", "markup": "markdown", "html": "<p>I\u2019ve just updated this PR with the changes from 1) and 2). So now it\u2019s just the tracked vehicles <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> </p>", "type": "rendered"}, "created_on": "2019-01-16T22:27:35.827147+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-01-16T22:27:35.955966+00:00", "type": "pullrequest_comment", "id": 88328549}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "1309ab3fce66", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1309ab3fce66.json"}, "html": {"href": "#!/osrf/gazebo/commits/1309ab3fce66"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "0fee2db4514d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/0fee2db4514d"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/0fee2db4514d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2019-01-16T22:26:32.318139+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "1309ab3fce66", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1309ab3fce66.json"}, "html": {"href": "#!/osrf/gazebo/commits/1309ab3fce66"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "7025bc924287", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/7025bc924287"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/7025bc924287"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2019-01-16T22:20:24.021143+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/86255061.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-86255061"}}, "parent": {"id": 85009323, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85009323.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85009323"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "[#!/osrf/gazebo/pull-requests/3057/keys-to-cmd\\_vel-plugin/diff](#!/osrf/gazebo/pull-requests/3057/keys-to-cmd_vel-plugin/diff)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/3057/keys-to-cmd_vel-plugin/diff\" rel=\"nofollow\">#!/osrf/gazebo/pull-requests/3057/keys-to-cmd_vel-plugin/diff</a></p>", "type": "rendered"}, "created_on": "2018-12-20T01:49:30.952303+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2018-12-20T01:49:31.015731+00:00", "type": "pullrequest_comment", "id": 86255061}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85009323.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85009323"}}, "parent": {"id": 85007894, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85007894.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85007894"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "1 and 2 can be opened in parallel, and you could leave this PR open as 3. As we merge 1 and 2, this branch can be synced with `gazebo9` and the diff will get smaller.\n\nAll commits will be there in the history :grin: ", "markup": "markdown", "html": "<p>1 and 2 can be opened in parallel, and you could leave this PR open as 3. As we merge 1 and 2, this branch can be synced with <code>gazebo9</code> and the diff will get smaller.</p>\n<p>All commits will be there in the history <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f601.png\" alt=\"\ud83d\ude01\" title=\":grin:\" data-emoji-short-name=\":grin:\" /> </p>", "type": "rendered"}, "created_on": "2018-12-07T23:40:33.003215+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-12-07T23:40:33.017805+00:00", "type": "pullrequest_comment", "id": 85009323}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85007894.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85007894"}}, "parent": {"id": 85001918, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85001918.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85001918"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Okay, I can do that. Just how should I proceed technically? The PRs depend on each other \\(fortunately in a linear ordering :slight_smile: \\).\n\nMy suggestion: I\u2019ll prepare 1. ASAP. Then, I\u2019ll do the fixes required to get 2. approved over the weekend. And then, 3. will be left alone. I\u2019m not sure what the commit history would look like then, but that\u2019s probably a minor problem.", "markup": "markdown", "html": "<p>Okay, I can do that. Just how should I proceed technically? The PRs depend on each other (fortunately in a linear ordering <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> ).</p>\n<p>My suggestion: I\u2019ll prepare 1. ASAP. Then, I\u2019ll do the fixes required to get 2. approved over the weekend. And then, 3. will be left alone. I\u2019m not sure what the commit history would look like then, but that\u2019s probably a minor problem.</p>", "type": "rendered"}, "created_on": "2018-12-07T23:02:12.051063+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2018-12-07T23:02:12.111072+00:00", "type": "pullrequest_comment", "id": 85007894}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85002714.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85002714"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Both `SimpleTrackedVehiclePlugin` and `WheelTrackedVehiclePlugin` are overriding `Reset` just to call the base class' function, they could just not override it", "markup": "markdown", "html": "<p>Both <code>SimpleTrackedVehiclePlugin</code> and <code>WheelTrackedVehiclePlugin</code> are overriding <code>Reset</code> just to call the base class' function, they could just not override it</p>", "type": "rendered"}, "created_on": "2018-12-07T21:26:33.564106+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2018-12-07T21:26:33.571066+00:00", "type": "pullrequest_comment", "id": 85002714}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85002143.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85002143"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Now that this is targetting gazebo9, you could use [ContactManager::SetNeverDropContacts(true)](#!/osrf/gazebo/pull-requests/2629/possibility-to-enforce-contact-addition-in/diff#Lgazebo/physics/ContactManager_TEST.ccT168)", "markup": "markdown", "html": "<p>Now that this is targetting gazebo9, you could use <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-requests/2629/possibility-to-enforce-contact-addition-in/diff#Lgazebo/physics/ContactManager_TEST.ccT168\" rel=\"nofollow\">ContactManager::SetNeverDropContacts(true)</a></p>", "type": "rendered"}, "created_on": "2018-12-07T21:17:40.121188+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2018-12-07T21:17:40.135316+00:00", "type": "pullrequest_comment", "id": 85002143}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85001918.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85001918"}}, "parent": {"id": 84887816, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84887816.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84887816"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "This is looking good to me overall. It is a large PR, and it will still need a 2nd approval. How do you feel about splitting it into smaller ones to make review easier? Something like this:\n\n1. Changes to plugin + tests (which I'm ready to approve)\n1. `KeysToCmdVelPlugin` (which I'm almost ready to approve once my comments are addressed - bonus if it's pimplized, but I'm ok with it either way)\n1. All the tracked vehicle stuff (which is working for me, but I'm still going over the code)", "markup": "markdown", "html": "<p>This is looking good to me overall. It is a large PR, and it will still need a 2nd approval. How do you feel about splitting it into smaller ones to make review easier? Something like this:</p>\n<ol>\n<li>Changes to plugin + tests (which I'm ready to approve)</li>\n<li><code>KeysToCmdVelPlugin</code> (which I'm almost ready to approve once my comments are addressed - bonus if it's pimplized, but I'm ok with it either way)</li>\n<li>All the tracked vehicle stuff (which is working for me, but I'm still going over the code)</li>\n</ol>", "type": "rendered"}, "created_on": "2018-12-07T21:14:12.051504+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-12-07T21:14:12.061421+00:00", "type": "pullrequest_comment", "id": 85001918}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85001791.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85001791"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "The documentation is great! I'd just suggest adding units to the speed values.", "markup": "markdown", "html": "<p>The documentation is great! I'd just suggest adding units to the speed values.</p>", "type": "rendered"}, "created_on": "2018-12-07T21:12:11.628111+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2018-12-07T21:12:11.635574+00:00", "type": "pullrequest_comment", "id": 85001791}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/85001269.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-85001269"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "I can't reproduce this with either demo world, do you know how to reproduce it?", "markup": "markdown", "html": "<p>I can't reproduce this with either demo world, do you know how to reproduce it?</p>", "type": "rendered"}, "created_on": "2018-12-07T21:04:27.156148+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2018-12-07T21:04:27.165373+00:00", "type": "pullrequest_comment", "id": 85001269}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "2c0eda3a1cf1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c0eda3a1cf1.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c0eda3a1cf1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "dc60c5699f19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/dc60c5699f19"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/dc60c5699f19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2018-12-07T18:46:39.551307+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84887816.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84887816"}}, "parent": {"id": 84554065, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84554065.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84554065"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Thanks, I pushed the changes here \\(without modification\\). I tested locally, and I saw no related test failures. The GUI part and keyboard control also looked ok.", "markup": "markdown", "html": "<p>Thanks, I pushed the changes here (without modification). I tested locally, and I saw no related test failures. The GUI part and keyboard control also looked ok.</p>", "type": "rendered"}, "created_on": "2018-12-07T02:22:56.260379+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2018-12-07T02:22:56.326234+00:00", "type": "pullrequest_comment", "id": 84887816}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "2c0eda3a1cf1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c0eda3a1cf1.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c0eda3a1cf1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "dc60c5699f19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/dc60c5699f19"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/dc60c5699f19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2018-12-07T02:20:52.201896+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "2c0eda3a1cf1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c0eda3a1cf1.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c0eda3a1cf1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "f31c029dd147", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/f31c029dd147"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/f31c029dd147"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2018-12-07T01:49:23.039716+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "2c0eda3a1cf1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c0eda3a1cf1.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c0eda3a1cf1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "808fc1f4c701", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/808fc1f4c701"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/808fc1f4c701"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2018-12-07T01:41:39.632460+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community.\r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir \\(\\+ changelog and worlds\\).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me \\(bascially copy&paste 10 lines of code for each parameter\\). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C\\+\\+ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin \\(I already have the implementations, but they need some cleanup\\). One thing that really stopped me for a long while was programmatic building of the model \\(generating the track pieces\\). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in \\*\\*\\* . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a \\(possibly unresolvable\\) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "2c0eda3a1cf1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/2c0eda3a1cf1.json"}, "html": {"href": "#!/osrf/gazebo/commits/2c0eda3a1cf1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "808fc1f4c701", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/808fc1f4c701"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/808fc1f4c701"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2018-12-07T01:41:39.579241+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84554065.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84554065"}}, "parent": {"id": 84407960, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84407960.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84407960"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Synced with `gazebo9` on f31c029, feel free to update the PR. I'm taking another deep look.", "markup": "markdown", "html": "<p>Synced with <code>gazebo9</code> on <a href=\"#!/osrf/gazebo/commits/f31c029\" rel=\"nofollow\" class=\"ap-connect-link\">f31c029</a>, feel free to update the PR. I'm taking another deep look.</p>", "type": "rendered"}, "created_on": "2018-12-04T20:49:24.163716+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-12-04T20:49:24.173088+00:00", "type": "pullrequest_comment", "id": 84554065}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "bc03ebf1f848", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bc03ebf1f848.json"}, "html": {"href": "#!/osrf/gazebo/commits/bc03ebf1f848"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "808fc1f4c701", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/808fc1f4c701"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/808fc1f4c701"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2018-12-04T20:47:51.343353+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84407960.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84407960"}}, "parent": {"id": 84384075, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84384075.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84384075"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Great, Louise :wink: Of course, feel free to retarget to gazebo 9. This week it\u2019s possible I\u2019ll have some time to also work on it, so let\u2019s see who\u2019s gonna be faster. Just leave here a comment and a link to the new branch \\(or I\u2019ll do that if I\u2019m faster\\).", "markup": "markdown", "html": "<p>Great, Louise <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" /> Of course, feel free to retarget to gazebo 9. This week it\u2019s possible I\u2019ll have some time to also work on it, so let\u2019s see who\u2019s gonna be faster. Just leave here a comment and a link to the new branch (or I\u2019ll do that if I\u2019m faster).</p>", "type": "rendered"}, "created_on": "2018-12-04T00:38:52.474272+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2018-12-04T00:38:52.542980+00:00", "type": "pullrequest_comment", "id": 84407960}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/84384075.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-84384075"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "@peci1 , I'd like to try and get this merged this week and I can help fixing conflicts and addressing final feedback if you don't have the time. It's targeted at gazebo 8, which is going EOL in a bit more than a month, can we retarget to `gazebo9`?", "markup": "markdown", "html": "<p>@peci1 , I'd like to try and get this merged this week and I can help fixing conflicts and addressing final feedback if you don't have the time. It's targeted at gazebo 8, which is going EOL in a bit more than a month, can we retarget to <code>gazebo9</code>?</p>", "type": "rendered"}, "created_on": "2018-12-03T19:53:51.669779+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-12-03T19:53:51.686391+00:00", "type": "pullrequest_comment", "id": 84384075}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "056db63953dc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/056db63953dc.json"}, "html": {"href": "#!/osrf/gazebo/commits/056db63953dc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "808fc1f4c701", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/808fc1f4c701"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/808fc1f4c701"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2018-02-06T12:48:50.202881+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "056db63953dc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/056db63953dc.json"}, "html": {"href": "#!/osrf/gazebo/commits/056db63953dc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "11dd93dd7f59", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/11dd93dd7f59"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/11dd93dd7f59"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2018-02-06T12:20:25.900652+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"update": {"description": "* Added the base for tracked vehicles.\r\n\r\n* Added the simple tracked vehicle utilizing Contact Surface Motion method of track simulation.\r\n\r\nI'm gonna publish a paper at IROS 2017 about this method, so I wanted to share it to the community. \r\n\r\nThis is just a first shot at the API. I'll welcome any comments. What I'm most unsure about is:\r\n\r\n* I wanted to create a common interface all tracked vehicle plugins could use. However, I had some problems with linking or dynamic loading when I just dynamically linked the \"bottom\" plugin against the API plugin. Some discussion about rpath has already been there, and the agreement was that for plugins it's gonna stay there. But I'm not sure if it is expected to work \"inside\" Gazebo, or only for external code. For now, I'm building the API library statically, which I know is not ideal, but is the only thing that worked for me.\r\n* Is gazebo8 the right target? I didn't change anything outside the plugins dir (+ changelog and worlds).\r\n* I resorted to writing my own SDF parameter loading helpers, because the way they are read in other plugins seems really cumbersome to me (bascially copy&paste 10 lines of code for each parameter). Shouldn't that code be moved somewhere \"higher\" in the class hierarchy?\r\n* Is there no 3-valued `signum` function available in standard C/C++ library or ignition?\r\n* Should the example model and obstacle be in this repo, or should they be moved to the OSRF model library?\r\n\r\nIf I'll find more time, I'll add the other models suggested in #!/osrf/gazebo/issues/863/tracksdriveplugin (I already have the implementations, but they need some cleanup). One thing that really stopped me for a long while was programmatic building of the model (generating the track pieces). I ended up writing SDF in C strings and calling `Link::Load()` or `Joint::Load()`. And removing links/joints seems to be even bigger pain in *** . Is there some tutorial on programmatic building/destroying of the world? There also seems to be a (possibly unresolvable) problem that in SDF you can't specify a link connected to a joint that will be auto-generated by a plugin.", "title": "Added support for tracked vehicles", "destination": {"commit": {"hash": "bcde3cce06f8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bcde3cce06f8.json"}, "html": {"href": "#!/osrf/gazebo/commits/bcde3cce06f8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo9"}}, "reason": "", "source": {"commit": {"hash": "b1836a32ae09", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo/commit/b1836a32ae09"}, "html": {"href": "https://bitbucket.org/peci1/gazebo/commits/b1836a32ae09"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/peci1/gazebo"}, "html": {"href": "https://bitbucket.org/peci1/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5c0265bf-91e2-463c-bbb1-7fa554f310a0}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo", "full_name": "peci1/gazebo", "uuid": "{5c0265bf-91e2-463c-bbb1-7fa554f310a0}"}, "branch": {"name": "tracked_vehicles"}}, "state": "OPEN", "author": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "date": "2018-02-06T02:25:24.621766+00:00"}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/55506281.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-55506281"}}, "parent": {"id": 49868977, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/49868977.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-49868977"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Cheers @Flipse789 after some time. Today I \"managed\" to reproduce the issue with a rather simple scenario - I substituted an obstacle composed of a few boxes with just a single cylinder. And for some reason this cylinder started to be the first collision body when colliding with main tracks (but not flippers). I think I once tried to track down where is this collision body order given, and I think it looks like it's \"random\" (but consistent, as you can see).\n\nI implemented a fix that tries to be more \"intelligent\" and might address both of your issues. Basically, instead of just flipping the normal when the track is not the first collision body, it makes sure that in any case the normal points \"inside the track\". So I think it should work well even on mesh surfaces with flipped normals.\n\nIf you have time, could you please test it and report your findings?", "markup": "markdown", "html": "<p>Cheers @Flipse789 after some time. Today I \"managed\" to reproduce the issue with a rather simple scenario - I substituted an obstacle composed of a few boxes with just a single cylinder. And for some reason this cylinder started to be the first collision body when colliding with main tracks (but not flippers). I think I once tried to track down where is this collision body order given, and I think it looks like it's \"random\" (but consistent, as you can see).</p>\n<p>I implemented a fix that tries to be more \"intelligent\" and might address both of your issues. Basically, instead of just flipping the normal when the track is not the first collision body, it makes sure that in any case the normal points \"inside the track\". So I think it should work well even on mesh surfaces with flipped normals.</p>\n<p>If you have time, could you please test it and report your findings?</p>", "type": "rendered"}, "created_on": "2018-02-06T00:28:48.705646+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2018-02-06T00:29:18.799878+00:00", "type": "pullrequest_comment", "id": 55506281}, "pull_request": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}}], "next": "data/repositories/osrf/gazebo/pullrequests/2652/activity_ctx=XzfeAUpSL.json"}