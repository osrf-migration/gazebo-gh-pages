{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978896.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978896"}}, "parent": {"id": 32978176, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/32978176.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-32978176"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "* Oh interesting, I hadn't noticed this was ODE-specific. Targeting Gazebo 8 should be fine. But now I'm wondering if there could be a way to make this physics-engine-agnostic\u2026 I'll need to look closer into the code for that\n* Adding functions usually doesn't break ABI, so you can try adding `LoadParam `and `signum` into `sdf5` and \\`ign-math3\\` respectively, if you want. Those would be great contributions, but I wouldn't let them block this PR. Having the functions here is ok too.\n* Oh I see, so you want to generate the track inside the plugin C\\+\\+ code? I've seen this being done before. Maybe a naive way to do it could be to have a world plugin which generates an SDF file and spawns a model from that, where that model has it's own model plugin.", "markup": "markdown", "html": "<ul>\n<li>Oh interesting, I hadn't noticed this was ODE-specific. Targeting Gazebo 8 should be fine. But now I'm wondering if there could be a way to make this physics-engine-agnostic\u2026 I'll need to look closer into the code for that</li>\n<li>Adding functions usually doesn't break ABI, so you can try adding <code>LoadParam</code>and <code>signum</code> into <code>sdf5</code> and `ign-math3` respectively, if you want. Those would be great contributions, but I wouldn't let them block this PR. Having the functions here is ok too.</li>\n<li>Oh I see, so you want to generate the track inside the plugin C++ code? I've seen this being done before. Maybe a naive way to do it could be to have a world plugin which generates an SDF file and spawns a model from that, where that model has it's own model plugin.</li>\n</ul>", "type": "rendered"}, "created_on": "2017-03-11T00:10:35.987123+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-03-11T00:10:35.989235+00:00", "type": "pullrequest_comment", "id": 32978896}