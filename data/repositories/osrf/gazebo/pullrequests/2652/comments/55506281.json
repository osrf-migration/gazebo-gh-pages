{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/55506281.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-55506281"}}, "parent": {"id": 49868977, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652/comments/49868977.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652/_/diff#comment-49868977"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2652, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2652.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2652"}}, "title": "Added support for tracked vehicles"}, "content": {"raw": "Cheers @Flipse789 after some time. Today I \"managed\" to reproduce the issue with a rather simple scenario - I substituted an obstacle composed of a few boxes with just a single cylinder. And for some reason this cylinder started to be the first collision body when colliding with main tracks (but not flippers). I think I once tried to track down where is this collision body order given, and I think it looks like it's \"random\" (but consistent, as you can see).\n\nI implemented a fix that tries to be more \"intelligent\" and might address both of your issues. Basically, instead of just flipping the normal when the track is not the first collision body, it makes sure that in any case the normal points \"inside the track\". So I think it should work well even on mesh surfaces with flipped normals.\n\nIf you have time, could you please test it and report your findings?", "markup": "markdown", "html": "<p>Cheers @Flipse789 after some time. Today I \"managed\" to reproduce the issue with a rather simple scenario - I substituted an obstacle composed of a few boxes with just a single cylinder. And for some reason this cylinder started to be the first collision body when colliding with main tracks (but not flippers). I think I once tried to track down where is this collision body order given, and I think it looks like it's \"random\" (but consistent, as you can see).</p>\n<p>I implemented a fix that tries to be more \"intelligent\" and might address both of your issues. Basically, instead of just flipping the normal when the track is not the first collision body, it makes sure that in any case the normal points \"inside the track\". So I think it should work well even on mesh surfaces with flipped normals.</p>\n<p>If you have time, could you please test it and report your findings?</p>", "type": "rendered"}, "created_on": "2018-02-06T00:28:48.705646+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2018-02-06T00:29:18.799878+00:00", "type": "pullrequest_comment", "id": 55506281}