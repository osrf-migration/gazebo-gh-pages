{"rendered": {"description": {"raw": "Currently, the `physics::SurfaceParams` class contains a bunch of ODE-specific parameters. Bullet uses two of these parameters (`mu`, `mu2`) and simbody uses none. Friction parameters can only be specified for simbody as global defaults in SimbodyPhysics. So this is the first in a sequence of pull requests to enable surface parameters for each physics engine.\r\n\r\nThis pull request moves the ODE-specific parameters from `SurfaceParams` to `ODESurfaceParams` and also creates a `BulletSurfaceParams` class. The `SurfaceParams` class retains two high-level parameters: `collideWithoutContact` and `collideWithoutContactBitmask`.\r\n\r\nI also add a function to the collision class for each physics engine that allows access to the surface parameters for that engine:\r\n\r\nIn ODECollision.hh:\r\n~~~\r\n/// \\brief Similar to Collision::GetSurface, but provides dynamically\r\n///        casted pointer to ODESurfaceParams.\r\n/// \\return Dynamically casted pointer to ODESurfaceParams.\r\npublic: ODESurfaceParamsPtr GetODESurface() const;\r\n~~~\r\n\r\nIn BulletCollision.hh:\r\n~~~\r\n/// \\brief Similar to Collision::GetSurface, but provides dynamically\r\n///        casted pointer to BulletSurfaceParams.\r\n/// \\return Dynamically casted pointer to BulletSurfaceParams.\r\npublic: BulletSurfaceParamsPtr GetBulletSurface() const;\r\n~~~\r\n\r\nThere's a lot of changed code, but the goal here is pure refactoring, no changes in behavior. It does break the API for `SurfaceParams`, but it seemed like it would be too messy to try to deprecate and move everything.", "markup": "markdown", "html": "<p>Currently, the <code>physics::SurfaceParams</code> class contains a bunch of ODE-specific parameters. Bullet uses two of these parameters (<code>mu</code>, <code>mu2</code>) and simbody uses none. Friction parameters can only be specified for simbody as global defaults in SimbodyPhysics. So this is the first in a sequence of pull requests to enable surface parameters for each physics engine.</p>\n<p>This pull request moves the ODE-specific parameters from <code>SurfaceParams</code> to <code>ODESurfaceParams</code> and also creates a <code>BulletSurfaceParams</code> class. The <code>SurfaceParams</code> class retains two high-level parameters: <code>collideWithoutContact</code> and <code>collideWithoutContactBitmask</code>.</p>\n<p>I also add a function to the collision class for each physics engine that allows access to the surface parameters for that engine:</p>\n<p>In ODECollision.hh:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Similar</span> <span class=\"nt\">to</span> <span class=\"nt\">Collision</span><span class=\"p\">::</span><span class=\"nd\">GetSurface</span><span class=\"o\">,</span> <span class=\"nt\">but</span> <span class=\"nt\">provides</span> <span class=\"nt\">dynamically</span>\n<span class=\"o\">///</span>        <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">ODESurfaceParams</span><span class=\"o\">.</span>\n<span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">Dynamically</span> <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">ODESurfaceParams</span><span class=\"o\">.</span>\n<span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">ODESurfaceParamsPtr</span> <span class=\"nt\">GetODESurface</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>In BulletCollision.hh:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Similar</span> <span class=\"nt\">to</span> <span class=\"nt\">Collision</span><span class=\"p\">::</span><span class=\"nd\">GetSurface</span><span class=\"o\">,</span> <span class=\"nt\">but</span> <span class=\"nt\">provides</span> <span class=\"nt\">dynamically</span>\n<span class=\"o\">///</span>        <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">BulletSurfaceParams</span><span class=\"o\">.</span>\n<span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">Dynamically</span> <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">BulletSurfaceParams</span><span class=\"o\">.</span>\n<span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">BulletSurfaceParamsPtr</span> <span class=\"nt\">GetBulletSurface</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>There's a lot of changed code, but the goal here is pure refactoring, no changes in behavior. It does break the API for <code>SurfaceParams</code>, but it seemed like it would be too messy to try to deprecate and move everything.</p>", "type": "rendered"}, "title": {"raw": "Refactor physics::SurfaceParams class to ODESurfaceParams, BulletSurfaceParams, etc", "markup": "markdown", "html": "<p>Refactor physics::SurfaceParams class to ODESurfaceParams, BulletSurfaceParams, etc</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Currently, the `physics::SurfaceParams` class contains a bunch of ODE-specific parameters. Bullet uses two of these parameters (`mu`, `mu2`) and simbody uses none. Friction parameters can only be specified for simbody as global defaults in SimbodyPhysics. So this is the first in a sequence of pull requests to enable surface parameters for each physics engine.\r\n\r\nThis pull request moves the ODE-specific parameters from `SurfaceParams` to `ODESurfaceParams` and also creates a `BulletSurfaceParams` class. The `SurfaceParams` class retains two high-level parameters: `collideWithoutContact` and `collideWithoutContactBitmask`.\r\n\r\nI also add a function to the collision class for each physics engine that allows access to the surface parameters for that engine:\r\n\r\nIn ODECollision.hh:\r\n~~~\r\n/// \\brief Similar to Collision::GetSurface, but provides dynamically\r\n///        casted pointer to ODESurfaceParams.\r\n/// \\return Dynamically casted pointer to ODESurfaceParams.\r\npublic: ODESurfaceParamsPtr GetODESurface() const;\r\n~~~\r\n\r\nIn BulletCollision.hh:\r\n~~~\r\n/// \\brief Similar to Collision::GetSurface, but provides dynamically\r\n///        casted pointer to BulletSurfaceParams.\r\n/// \\return Dynamically casted pointer to BulletSurfaceParams.\r\npublic: BulletSurfaceParamsPtr GetBulletSurface() const;\r\n~~~\r\n\r\nThere's a lot of changed code, but the goal here is pure refactoring, no changes in behavior. It does break the API for `SurfaceParams`, but it seemed like it would be too messy to try to deprecate and move everything.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/891/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:fc137d08bd37%0D601decf8b7af?from_pullrequest_id=891"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/891/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/891.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/891/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/891/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/891"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/891/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:fc137d08bd37%0D601decf8b7af?from_pullrequest_id=891"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/891/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/891/statuses_page=1.json"}}, "title": "Refactor physics::SurfaceParams class to ODESurfaceParams, BulletSurfaceParams, etc", "close_source_branch": true, "reviewers": [], "id": 891, "destination": {"commit": {"hash": "601decf8b7af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/601decf8b7af.json"}, "html": {"href": "#!/osrf/gazebo/commits/601decf8b7af"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2013-12-31T23:15:06.700657+00:00", "summary": {"raw": "Currently, the `physics::SurfaceParams` class contains a bunch of ODE-specific parameters. Bullet uses two of these parameters (`mu`, `mu2`) and simbody uses none. Friction parameters can only be specified for simbody as global defaults in SimbodyPhysics. So this is the first in a sequence of pull requests to enable surface parameters for each physics engine.\r\n\r\nThis pull request moves the ODE-specific parameters from `SurfaceParams` to `ODESurfaceParams` and also creates a `BulletSurfaceParams` class. The `SurfaceParams` class retains two high-level parameters: `collideWithoutContact` and `collideWithoutContactBitmask`.\r\n\r\nI also add a function to the collision class for each physics engine that allows access to the surface parameters for that engine:\r\n\r\nIn ODECollision.hh:\r\n~~~\r\n/// \\brief Similar to Collision::GetSurface, but provides dynamically\r\n///        casted pointer to ODESurfaceParams.\r\n/// \\return Dynamically casted pointer to ODESurfaceParams.\r\npublic: ODESurfaceParamsPtr GetODESurface() const;\r\n~~~\r\n\r\nIn BulletCollision.hh:\r\n~~~\r\n/// \\brief Similar to Collision::GetSurface, but provides dynamically\r\n///        casted pointer to BulletSurfaceParams.\r\n/// \\return Dynamically casted pointer to BulletSurfaceParams.\r\npublic: BulletSurfaceParamsPtr GetBulletSurface() const;\r\n~~~\r\n\r\nThere's a lot of changed code, but the goal here is pure refactoring, no changes in behavior. It does break the API for `SurfaceParams`, but it seemed like it would be too messy to try to deprecate and move everything.", "markup": "markdown", "html": "<p>Currently, the <code>physics::SurfaceParams</code> class contains a bunch of ODE-specific parameters. Bullet uses two of these parameters (<code>mu</code>, <code>mu2</code>) and simbody uses none. Friction parameters can only be specified for simbody as global defaults in SimbodyPhysics. So this is the first in a sequence of pull requests to enable surface parameters for each physics engine.</p>\n<p>This pull request moves the ODE-specific parameters from <code>SurfaceParams</code> to <code>ODESurfaceParams</code> and also creates a <code>BulletSurfaceParams</code> class. The <code>SurfaceParams</code> class retains two high-level parameters: <code>collideWithoutContact</code> and <code>collideWithoutContactBitmask</code>.</p>\n<p>I also add a function to the collision class for each physics engine that allows access to the surface parameters for that engine:</p>\n<p>In ODECollision.hh:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Similar</span> <span class=\"nt\">to</span> <span class=\"nt\">Collision</span><span class=\"p\">::</span><span class=\"nd\">GetSurface</span><span class=\"o\">,</span> <span class=\"nt\">but</span> <span class=\"nt\">provides</span> <span class=\"nt\">dynamically</span>\n<span class=\"o\">///</span>        <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">ODESurfaceParams</span><span class=\"o\">.</span>\n<span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">Dynamically</span> <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">ODESurfaceParams</span><span class=\"o\">.</span>\n<span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">ODESurfaceParamsPtr</span> <span class=\"nt\">GetODESurface</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>In BulletCollision.hh:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Similar</span> <span class=\"nt\">to</span> <span class=\"nt\">Collision</span><span class=\"p\">::</span><span class=\"nd\">GetSurface</span><span class=\"o\">,</span> <span class=\"nt\">but</span> <span class=\"nt\">provides</span> <span class=\"nt\">dynamically</span>\n<span class=\"o\">///</span>        <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">BulletSurfaceParams</span><span class=\"o\">.</span>\n<span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">Dynamically</span> <span class=\"nt\">casted</span> <span class=\"nt\">pointer</span> <span class=\"nt\">to</span> <span class=\"nt\">BulletSurfaceParams</span><span class=\"o\">.</span>\n<span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">BulletSurfaceParamsPtr</span> <span class=\"nt\">GetBulletSurface</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>There's a lot of changed code, but the goal here is pure refactoring, no changes in behavior. It does break the API for <code>SurfaceParams</code>, but it seemed like it would be too messy to try to deprecate and move everything.</p>", "type": "rendered"}, "source": {"commit": {"hash": "60877ae3be5e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/60877ae3be5e.json"}, "html": {"href": "#!/osrf/gazebo/commits/60877ae3be5e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "surface_params_refactor"}}, "comment_count": 22, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-01-25T02:13:22.805709+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2014-01-27T19:41:00.242016+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-01-26T01:22:42.937510+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2014-01-22T02:49:13.749732+00:00", "type": "participant", "approved": true, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}], "reason": "", "updated_on": "2014-01-27T23:27:43.975276+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "fc137d08bd37", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fc137d08bd37.json"}, "html": {"href": "#!/osrf/gazebo/commits/fc137d08bd37"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}