{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1507/comments/5829989.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/rosebudflyaway/gazebo:None..None?path=test%2Fintegration%2Fjoint_revolute.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1507/_/diff#comment-5829989"}}, "parent": {"id": 5828857, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1507/comments/5828857.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1507/_/diff#comment-5828857"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1507, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1507.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1507"}}, "title": "fix the dRecip operation for when numerically denominator equals 0"}, "content": {"raw": "got it:\n\n~~~\n$ ../build_release/test/integration/INTEGRATION_joint_revolute --gtest_filter=\"*RevoluteJointWorldStep\"\n...\n[Dbg] [joint_revolute.cc:446] Check SetForce for model pendulum_45deg\n/home/hsu/projects/gazebo_pgs_split/test/integration/joint_revolute.cc:519: Failure\nExpected: (newVel) > (oldVel), actual: -0.00182809 vs 0.0221107\n~~~\n\nIt looks like each pendulum model gets called to:\n\n  1. turn off gravity\n  1. detach upper joint\n\nsequentially, so by the time the second pendulum (45deg one) is tested, it has started falling already.  The initial velocity from falling due to gravity caused the test failure.  By stepping one additional step (11), the coupling effect from gravity, detachment and applying 1Nm torque is somehow avoided. My suggestion is to:\n\n  1. turn off gravity globally\n  2. revert to 10 steps\n\n~~~\n--- a/test/integration/joint_revolute.cc\tMon Mar 16 14:47:39 2015 -0700\n+++ b/test/integration/joint_revolute.cc\tMon Mar 23 15:09:40 2015 -0700\n@@ -437,6 +437,8 @@\n   // Reset world again, disable gravity, detach upper_joint\n   // Then apply torque at lower_joint and verify motion\n   world->Reset();\n+  physics->SetGravity(math::Vector3::Zero);\n+\n   for (modelIter  = modelNames.begin();\n        modelIter != modelNames.end(); ++modelIter)\n   {\n@@ -444,24 +446,6 @@\n     if (model)\n     {\n       gzdbg << \"Check SetForce for model \" << *modelIter << '\\n';\n-      std::vector<std::string>::iterator linkIter;\n-      for (linkIter  = linkNames.begin();\n-           linkIter != linkNames.end(); ++linkIter)\n-      {\n-        link = model->GetLink(*linkIter);\n-        if (link)\n-        {\n-          // Disable gravity for links.\n-          link->SetGravityMode(false);\n-        }\n-        else\n-        {\n-          gzerr << \"Error loading link \" << *linkIter\n-                << \" of model \" << *modelIter << '\\n';\n-          EXPECT_TRUE(link != NULL);\n-        }\n-      }\n-\n       joint = model->GetJoint(\"upper_joint\");\n       if (joint)\n       {\n@@ -497,7 +481,7 @@\n         // Apply positive torque to the lower_joint and step forward.\n         force = 1;\n \n-        for (int i = 0; i < 11; ++i)\n+        for (int i = 0; i < 10; ++i)\n         {\n           joint->SetForce(0, force);\n           world->Step(1);\n~~~", "markup": "markdown", "html": "<p>got it:</p>\n<div class=\"codehilite\"><pre><span></span>$ ../build_release/test/integration/INTEGRATION_joint_revolute --gtest_filter<span class=\"o\">=</span><span class=\"s2\">&quot;*RevoluteJointWorldStep&quot;</span>\n...\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>joint_revolute.cc:446<span class=\"o\">]</span> Check SetForce <span class=\"k\">for</span> model pendulum_45deg\n/home/hsu/projects/gazebo_pgs_split/test/integration/joint_revolute.cc:519: Failure\nExpected: <span class=\"o\">(</span>newVel<span class=\"o\">)</span> &gt; <span class=\"o\">(</span>oldVel<span class=\"o\">)</span>, actual: -0.00182809 vs <span class=\"m\">0</span>.0221107\n</pre></div>\n\n\n<p>It looks like each pendulum model gets called to:</p>\n<ol>\n<li>turn off gravity</li>\n<li>detach upper joint</li>\n</ol>\n<p>sequentially, so by the time the second pendulum (45deg one) is tested, it has started falling already.  The initial velocity from falling due to gravity caused the test failure.  By stepping one additional step (11), the coupling effect from gravity, detachment and applying 1Nm torque is somehow avoided. My suggestion is to:</p>\n<ol>\n<li>turn off gravity globally</li>\n<li>revert to 10 steps</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- a/test/integration/joint_revolute.cc    Mon Mar 16 14:47:39 2015 -0700</span>\n<span class=\"gi\">+++ b/test/integration/joint_revolute.cc    Mon Mar 23 15:09:40 2015 -0700</span>\n<span class=\"gu\">@@ -437,6 +437,8 @@</span>\n   // Reset world again, disable gravity, detach upper_joint\n   // Then apply torque at lower_joint and verify motion\n   world-&gt;Reset();\n<span class=\"gi\">+  physics-&gt;SetGravity(math::Vector3::Zero);</span>\n<span class=\"gi\">+</span>\n   for (modelIter  = modelNames.begin();\n        modelIter != modelNames.end(); ++modelIter)\n   {\n<span class=\"gu\">@@ -444,24 +446,6 @@</span>\n     if (model)\n     {\n       gzdbg &lt;&lt; &quot;Check SetForce for model &quot; &lt;&lt; *modelIter &lt;&lt; &#39;\\n&#39;;\n<span class=\"gd\">-      std::vector&lt;std::string&gt;::iterator linkIter;</span>\n<span class=\"gd\">-      for (linkIter  = linkNames.begin();</span>\n<span class=\"gd\">-           linkIter != linkNames.end(); ++linkIter)</span>\n<span class=\"gd\">-      {</span>\n<span class=\"gd\">-        link = model-&gt;GetLink(*linkIter);</span>\n<span class=\"gd\">-        if (link)</span>\n<span class=\"gd\">-        {</span>\n<span class=\"gd\">-          // Disable gravity for links.</span>\n<span class=\"gd\">-          link-&gt;SetGravityMode(false);</span>\n<span class=\"gd\">-        }</span>\n<span class=\"gd\">-        else</span>\n<span class=\"gd\">-        {</span>\n<span class=\"gd\">-          gzerr &lt;&lt; &quot;Error loading link &quot; &lt;&lt; *linkIter</span>\n<span class=\"gd\">-                &lt;&lt; &quot; of model &quot; &lt;&lt; *modelIter &lt;&lt; &#39;\\n&#39;;</span>\n<span class=\"gd\">-          EXPECT_TRUE(link != NULL);</span>\n<span class=\"gd\">-        }</span>\n<span class=\"gd\">-      }</span>\n<span class=\"gd\">-</span>\n       joint = model-&gt;GetJoint(&quot;upper_joint&quot;);\n       if (joint)\n       {\n<span class=\"gu\">@@ -497,7 +481,7 @@</span>\n         // Apply positive torque to the lower_joint and step forward.\n         force = 1;\n\n<span class=\"gd\">-        for (int i = 0; i &lt; 11; ++i)</span>\n<span class=\"gi\">+        for (int i = 0; i &lt; 10; ++i)</span>\n         {\n           joint-&gt;SetForce(0, force);\n           world-&gt;Step(1);\n</pre></div>", "type": "rendered"}, "created_on": "2015-03-23T22:12:13.115747+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "inline": {"to": null, "from": null, "outdated": false, "path": "test/integration/joint_revolute.cc"}, "updated_on": "2015-03-23T22:13:25.894665+00:00", "type": "pullrequest_comment", "id": 5829989}