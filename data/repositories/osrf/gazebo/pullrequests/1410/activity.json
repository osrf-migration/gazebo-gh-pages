{"pagelen": 50, "values": [{"update": {"description": "Are you ready for the future?\r\n\r\nUsing the `auto` keyword with range-based for loops can make for loops with iterators much more concise. Also, using `auto &` or `auto const &` simplifies the syntax for using the iterated value, so you don't have to do `(*iter)->Method()`.\r\n\r\nOne caveat is that range-based for loops can't be used when iterators step through in a non-linear fashion, or try to erase iterators from an STL container (several instances in World.cc at the very bottom of this page). For these cases, I used the `auto keyword` in a traditional for loop.\r\n\r\nThis pull request is not urgent, but it's a friendly reminder that the `auto` keyword is awesome.\r\n\r\nFor reviewing, I recommend the side-by-side view of the diff.", "title": "C++11: use auto to shorten for loops with iterators", "destination": {"commit": {"hash": "54d56d8b73b4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54d56d8b73b4.json"}, "html": {"href": "#!/osrf/gazebo/commits/54d56d8b73b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "", "source": {"commit": {"hash": "d0a3dfb63727", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d0a3dfb63727.json"}, "html": {"href": "#!/osrf/gazebo/commits/d0a3dfb63727"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cpp11_auto_forloops"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-07T01:22:50.508699+00:00"}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"approval": {"date": "2015-02-07T01:10:02.276161+00:00", "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5002623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5002623"}}, "parent": {"id": 5001992, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001992.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001992"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "Clean", "markup": "markdown", "html": "<p>Clean</p>", "type": "rendered"}, "created_on": "2015-02-06T03:31:11.110898+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T03:31:11.120372+00:00", "type": "pullrequest_comment", "id": 5002623}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001992.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001992"}}, "parent": {"id": 5001983, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001983.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001983"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "started [another jenkins build](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/481/) just to be safe", "markup": "markdown", "html": "<p>started <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/481/\" rel=\"nofollow\">another jenkins build</a> just to be safe</p>", "type": "rendered"}, "created_on": "2015-02-06T02:07:34.016629+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T02:07:34.027694+00:00", "type": "pullrequest_comment", "id": 5001992}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001983.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001983"}}, "parent": {"id": 5001575, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001575.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001575"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "updated in d0a3dfb63727", "markup": "markdown", "html": "<p>updated in <a href=\"#!/osrf/gazebo/commits/d0a3dfb63727\" rel=\"nofollow\" class=\"ap-connect-link\">d0a3dfb63727</a></p>", "type": "rendered"}, "created_on": "2015-02-06T02:06:52.216149+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T02:06:52.224658+00:00", "type": "pullrequest_comment", "id": 5001983}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"update": {"description": "Are you ready for the future?\r\n\r\nUsing the `auto` keyword with range-based for loops can make for loops with iterators much more concise. Also, using `auto &` or `auto const &` simplifies the syntax for using the iterated value, so you don't have to do `(*iter)->Method()`.\r\n\r\nOne caveat is that range-based for loops can't be used when iterators step through in a non-linear fashion, or try to erase iterators from an STL container (several instances in World.cc at the very bottom of this page). For these cases, I used the `auto keyword` in a traditional for loop.\r\n\r\nThis pull request is not urgent, but it's a friendly reminder that the `auto` keyword is awesome.\r\n\r\nFor reviewing, I recommend the side-by-side view of the diff.", "title": "C++11: use auto to shorten for loops with iterators", "destination": {"commit": {"hash": "54d56d8b73b4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54d56d8b73b4.json"}, "html": {"href": "#!/osrf/gazebo/commits/54d56d8b73b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "", "source": {"commit": {"hash": "d0a3dfb63727", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d0a3dfb63727.json"}, "html": {"href": "#!/osrf/gazebo/commits/d0a3dfb63727"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cpp11_auto_forloops"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-06T02:06:48.643468+00:00"}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001575.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001575"}}, "parent": {"id": 5001487, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001487.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001487"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "That's a good point, since the type of the iterator is no longer visible. I'll try updating the variable names.", "markup": "markdown", "html": "<p>That's a good point, since the type of the iterator is no longer visible. I'll try updating the variable names.</p>", "type": "rendered"}, "created_on": "2015-02-06T01:23:55.182439+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T01:23:55.194845+00:00", "type": "pullrequest_comment", "id": 5001575}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/5001487.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-5001487"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "I think that replacing `iter` with a more appropriate name would improve readability a lot. E.g.:\n\n\n```\n#!c++\n+  for (auto const &statistic : this->dataPtr->stats)\n   {\n     map[statistic->ShortName()] = statistic->Value();\n   }\n```", "markup": "markdown", "html": "<p>I think that replacing <code>iter</code> with a more appropriate name would improve readability a lot. E.g.:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">+</span>  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"k\">auto</span> <span class=\"k\">const</span> <span class=\"o\">&amp;</span><span class=\"nl\">statistic</span> <span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">stats</span><span class=\"p\">)</span>\n   <span class=\"p\">{</span>\n     <span class=\"n\">map</span><span class=\"p\">[</span><span class=\"n\">statistic</span><span class=\"o\">-&gt;</span><span class=\"n\">ShortName</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">statistic</span><span class=\"o\">-&gt;</span><span class=\"n\">Value</span><span class=\"p\">();</span>\n   <span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-02-06T01:14:09.808401+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-02-06T01:14:09.818857+00:00", "type": "pullrequest_comment", "id": 5001487}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"approval": {"date": "2015-02-05T19:40:17.845738+00:00", "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4996333.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4996333"}}, "parent": {"id": 4996207, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4996207.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4996207"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "done in 0e99d6f39970, thanks for the feedback", "markup": "markdown", "html": "<p>done in <a href=\"#!/osrf/gazebo/commits/0e99d6f39970\" rel=\"nofollow\" class=\"ap-connect-link\">0e99d6f39970</a>, thanks for the feedback</p>", "type": "rendered"}, "created_on": "2015-02-05T19:38:16.666686+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2015-02-05T19:38:16.675509+00:00", "type": "pullrequest_comment", "id": 4996333}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"update": {"description": "Are you ready for the future?\r\n\r\nUsing the `auto` keyword with range-based for loops can make for loops with iterators much more concise. Also, using `auto &` or `auto const &` simplifies the syntax for using the iterated value, so you don't have to do `(*iter)->Method()`.\r\n\r\nOne caveat is that range-based for loops can't be used when iterators step through in a non-linear fashion, or try to erase iterators from an STL container (several instances in World.cc at the very bottom of this page). For these cases, I used the `auto keyword` in a traditional for loop.\r\n\r\nThis pull request is not urgent, but it's a friendly reminder that the `auto` keyword is awesome.\r\n\r\nFor reviewing, I recommend the side-by-side view of the diff.", "title": "C++11: use auto to shorten for loops with iterators", "destination": {"commit": {"hash": "54d56d8b73b4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54d56d8b73b4.json"}, "html": {"href": "#!/osrf/gazebo/commits/54d56d8b73b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "", "source": {"commit": {"hash": "0e99d6f39970", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/0e99d6f39970.json"}, "html": {"href": "#!/osrf/gazebo/commits/0e99d6f39970"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cpp11_auto_forloops"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-05T19:38:03.737376+00:00"}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4996207.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4996207"}}, "parent": {"id": 4995462, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4995462.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4995462"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "Ok, I'll put the `&`'s next to the variable name to match our style.", "markup": "markdown", "html": "<p>Ok, I'll put the <code>&amp;</code>'s next to the variable name to match our style.</p>", "type": "rendered"}, "created_on": "2015-02-05T19:32:01.449503+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2015-02-05T19:32:01.471673+00:00", "type": "pullrequest_comment", "id": 4996207}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4995462.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4995462"}}, "parent": {"id": 4952692, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4952692.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4952692"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "I am a little wary of it because the pattern `a & b` could be mistaken by bitwise AND, though looking at it with syntax highlighting makes it a lot more obvious. The [Google C++ Style Guide](http://google-styleguide.googlecode.com/svn/trunk/cppguide.html#Pointer_and_Reference_Expressions) advocates for the `&` to be adjacent to either `auto` or `iter`, but not to have a space between both.", "markup": "markdown", "html": "<p>I am a little wary of it because the pattern <code>a &amp; b</code> could be mistaken by bitwise AND, though looking at it with syntax highlighting makes it a lot more obvious. The <a data-is-external-link=\"true\" href=\"http://google-styleguide.googlecode.com/svn/trunk/cppguide.html#Pointer_and_Reference_Expressions\" rel=\"nofollow\">Google C++ Style Guide</a> advocates for the <code>&amp;</code> to be adjacent to either <code>auto</code> or <code>iter</code>, but not to have a space between both.</p>", "type": "rendered"}, "created_on": "2015-02-05T18:54:03.971273+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {}, "updated_on": "2015-02-05T18:54:03.995990+00:00", "type": "pullrequest_comment", "id": 4995462}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4952692.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4952692"}}, "parent": {"id": 4952674, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4952674.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4952674"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "I like how this looks, but I'll follow whatever @nkoenig prefers", "markup": "markdown", "html": "<p>I like how this looks, but I'll follow whatever @nkoenig prefers</p>", "type": "rendered"}, "created_on": "2015-02-04T00:40:45.565763+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2015-02-04T00:40:45.581156+00:00", "type": "pullrequest_comment", "id": 4952692}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4952674.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4952674"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "very minor comment: not sure about the coding style for this case but should we place `&` next to `iter`?", "markup": "markdown", "html": "<p>very minor comment: not sure about the coding style for this case but should we place <code>&amp;</code> next to <code>iter</code>?</p>", "type": "rendered"}, "created_on": "2015-02-04T00:39:11.342546+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2015-02-04T00:39:11.351041+00:00", "type": "pullrequest_comment", "id": 4952674}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410/comments/4949020.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410/_/diff#comment-4949020"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}, "content": {"raw": "* [trusty jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/470/) is happy\n* [homebrew jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/406/) is happy", "markup": "markdown", "html": "<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/470/\" rel=\"nofollow\">trusty jenkins</a> is happy</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-homebrew-amd64/406/\" rel=\"nofollow\">homebrew jenkins</a> is happy</li>\n</ul>", "type": "rendered"}, "created_on": "2015-02-03T20:35:07.623127+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-03T20:35:07.632149+00:00", "type": "pullrequest_comment", "id": 4949020}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"update": {"description": "Are you ready for the future?\r\n\r\nUsing the `auto` keyword with range-based for loops can make for loops with iterators much more concise. Also, using `auto &` or `auto const &` simplifies the syntax for using the iterated value, so you don't have to do `(*iter)->Method()`.\r\n\r\nOne caveat is that range-based for loops can't be used when iterators step through in a non-linear fashion, or try to erase iterators from an STL container (several instances in World.cc at the very bottom of this page). For these cases, I used the `auto keyword` in a traditional for loop.\r\n\r\nThis pull request is not urgent, but it's a friendly reminder that the `auto` keyword is awesome.\r\n\r\nFor reviewing, I recommend the side-by-side view of the diff.", "title": "C++11: use auto to shorten for loops with iterators", "destination": {"commit": {"hash": "54d56d8b73b4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54d56d8b73b4.json"}, "html": {"href": "#!/osrf/gazebo/commits/54d56d8b73b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "", "source": {"commit": {"hash": "1d85c2c7fbed", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1d85c2c7fbed.json"}, "html": {"href": "#!/osrf/gazebo/commits/1d85c2c7fbed"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cpp11_auto_forloops"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-03T09:55:04.648421+00:00"}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}, {"update": {"description": "Are you ready for the future?\r\n\r\nUsing the `auto` keyword with range-based for loops can make for loops with iterators much more concise. Also, using `auto &` or `auto const &` simplifies the syntax for using the iterated value, so you don't have to do `(*iter)->Method()`.\r\n\r\nOne caveat is that range-based for loops can't be used when iterators step through in a non-linear fashion, or try to erase iterators from an STL container (several instances in World.cc at the very bottom of this page). For these cases, I used the `auto keyword` in a traditional for loop.\r\n\r\nThis pull request is not urgent, but it's a friendly reminder that the `auto` keyword is awesome.\r\n\r\nFor reviewing, I recommend the side-by-side view of the diff.", "title": "C++11: use auto to shorten for loops with iterators", "destination": {"commit": {"hash": "54d56d8b73b4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/54d56d8b73b4.json"}, "html": {"href": "#!/osrf/gazebo/commits/54d56d8b73b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "reason": "", "source": {"commit": {"hash": "1d85c2c7fbed", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1d85c2c7fbed.json"}, "html": {"href": "#!/osrf/gazebo/commits/1d85c2c7fbed"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "cpp11_auto_forloops"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-02-03T09:55:04.400755+00:00"}, "pull_request": {"type": "pullrequest", "id": 1410, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1410.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1410"}}, "title": "C++11: use auto to shorten for loops with iterators"}}]}