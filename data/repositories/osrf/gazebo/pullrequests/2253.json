{"rendered": {"description": {"raw": "We are using the [AnsiColor Plugin](https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin) in jenkins to colorize the console output so it looks like [this](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/4/console) instead of [this](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/5/console):\r\n\r\n~~~\r\n491: [ RUN      ] gzTest.Joint\r\n491: \u001b[1;32m[Msg] \u001b[0m\u001b[1;32mWaiting for master.\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mConnected to gazebo master @ \u001b[0m\u001b[1;32mhttp://127.0.0.1:11345\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mPublicized address: \u001b[0m\u001b[1;32m172.23.2.252\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m[       OK ] gzTest.Joint (1939 ms)\r\n~~~\r\n\r\nOne drawback is that it makes the html form of the console output huge (120 MB instead of 4 MB). The following colored text expands to html with a ton of duplicate `<span>` tags.\r\n\r\n~~~\r\n[Err] [SVGLoader.cc:666] Failed to load file /not/a/file.svg\r\n~~~\r\n\r\n~~~\r\n<b><span style=\"color: #CD0000;\">[Err] </span></b>\r\n<b><span style=\"color: #CD0000;\">[</span></b>\r\n<b><span style=\"color: #CD0000;\">SVGLoader.cc</span></b>\r\n<b><span style=\"color: #CD0000;\">:</span></b>\r\n<b><span style=\"color: #CD0000;\">666</span></b>\r\n<b><span style=\"color: #CD0000;\">] </span></b>\r\n<b><span style=\"color: #CD0000;\">Failed to load file </span></b>\r\n<b><span style=\"color: #CD0000;\">/not/a/file.svg</span></b>\r\n~~~\r\n\r\nEach `Console::log::<<` operator makes a separate `<span>` tag. This PR makes a small change to reduce the number of `Console::log::<<` operators that are colorized by first streaming to a `std::stringstream` and then streaming to the `Console::log`. This reduced the console log from 120MB to 70MB in a [test build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/7/).\r\n\r\nI also discovered recently that the `check_test_ran.py` script doesn't work well with QTest's since those write blank junit files instead of not writing a file at all (in jenkins it looks like [this](http://build.osrfoundation.org/job/gazebo-ci-gazebo5-homebrew-amd64/10/testReport/UNIT_ImagesView_TEST/xml/_empty_/)). So I've modified that script to write the `test_ran` output if the file size is zero.\r\n\r\nI also noticed that jenkins reports the time taken by QTest's to be super long ([over 9 hours for DataLogger_TEST](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64_flaky/15/testReport/(root)/DataLogger_TEST/)). The `QBENCHMARK` seems to report time in `ms`, so I've added a divide by 1000 operation in the stylesheet that converts the qtest xml files to junit (752b959).", "markup": "markdown", "html": "<p>We are using the <a data-is-external-link=\"true\" href=\"https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin\" rel=\"nofollow\">AnsiColor Plugin</a> in jenkins to colorize the console output so it looks like <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/4/console\" rel=\"nofollow\">this</a> instead of <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/5/console\" rel=\"nofollow\">this</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">491</span><span class=\"o\">:</span> <span class=\"cp\">[</span> <span class=\"nx\">RUN</span>      <span class=\"cp\">]</span> <span class=\"nt\">gzTest</span><span class=\"p\">.</span><span class=\"nc\">Joint</span>\n<span class=\"nt\">491</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">[</span><span class=\"nx\">Msg</span><span class=\"cp\">]</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mWaiting</span> <span class=\"nx\">for</span> <span class=\"nx\">master.</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span>\n<span class=\"mi\">491</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">[</span><span class=\"nx\">Msg</span><span class=\"cp\">]</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mConnected</span> <span class=\"k\">to</span> <span class=\"nx\">gazebo</span> <span class=\"nx\">master</span> <span class=\"p\">@</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mhttp</span><span class=\"p\">:</span><span class=\"c1\">//127.0.0.1:11345\u001b[0m\u001b[1;32m</span>\n<span class=\"mi\">491</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">[</span><span class=\"nx\">Msg</span><span class=\"cp\">]</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mPublicized</span> <span class=\"nx\">address</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m172.23.2.252</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span>\n<span class=\"mi\">491</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">[</span>       <span class=\"nx\">OK</span> <span class=\"cp\">]</span> <span class=\"nt\">gzTest</span><span class=\"p\">.</span><span class=\"nc\">Joint</span> <span class=\"o\">(</span><span class=\"nt\">1939</span> <span class=\"nt\">ms</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>One drawback is that it makes the html form of the console output huge (120 MB instead of 4 MB). The following colored text expands to html with a ton of duplicate <code>&lt;span&gt;</code> tags.</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [SVGLoader.cc:666] Failed to load file /not/a/file.svg\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>[Err] <span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>[<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>SVGLoader.cc<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>:<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>666<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>] <span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>Failed to load file <span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>/not/a/file.svg<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n</pre></div>\n\n\n<p>Each <code>Console::log::&lt;&lt;</code> operator makes a separate <code>&lt;span&gt;</code> tag. This PR makes a small change to reduce the number of <code>Console::log::&lt;&lt;</code> operators that are colorized by first streaming to a <code>std::stringstream</code> and then streaming to the <code>Console::log</code>. This reduced the console log from 120MB to 70MB in a <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/7/\" rel=\"nofollow\">test build</a>.</p>\n<p>I also discovered recently that the <code>check_test_ran.py</code> script doesn't work well with QTest's since those write blank junit files instead of not writing a file at all (in jenkins it looks like <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-gazebo5-homebrew-amd64/10/testReport/UNIT_ImagesView_TEST/xml/_empty_/\" rel=\"nofollow\">this</a>). So I've modified that script to write the <code>test_ran</code> output if the file size is zero.</p>\n<p>I also noticed that jenkins reports the time taken by QTest's to be super long (<a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64_flaky/15/testReport/(root)/DataLogger_TEST/\" rel=\"nofollow\">over 9 hours for DataLogger_TEST</a>). The <code>QBENCHMARK</code> seems to report time in <code>ms</code>, so I've added a divide by 1000 operation in the stylesheet that converts the qtest xml files to junit (<a href=\"#!/osrf/gazebo/commits/752b959\" rel=\"nofollow\" class=\"ap-connect-link\">752b959</a>).</p>", "type": "rendered"}, "title": {"raw": "Reduce jenkins console log size, fix check_test_ran.py for QTest", "markup": "markdown", "html": "<p>Reduce jenkins console log size, fix check_test_ran.py for QTest</p>", "type": "rendered"}}, "type": "pullrequest", "description": "We are using the [AnsiColor Plugin](https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin) in jenkins to colorize the console output so it looks like [this](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/4/console) instead of [this](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/5/console):\r\n\r\n~~~\r\n491: [ RUN      ] gzTest.Joint\r\n491: \u001b[1;32m[Msg] \u001b[0m\u001b[1;32mWaiting for master.\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mConnected to gazebo master @ \u001b[0m\u001b[1;32mhttp://127.0.0.1:11345\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mPublicized address: \u001b[0m\u001b[1;32m172.23.2.252\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m[       OK ] gzTest.Joint (1939 ms)\r\n~~~\r\n\r\nOne drawback is that it makes the html form of the console output huge (120 MB instead of 4 MB). The following colored text expands to html with a ton of duplicate `<span>` tags.\r\n\r\n~~~\r\n[Err] [SVGLoader.cc:666] Failed to load file /not/a/file.svg\r\n~~~\r\n\r\n~~~\r\n<b><span style=\"color: #CD0000;\">[Err] </span></b>\r\n<b><span style=\"color: #CD0000;\">[</span></b>\r\n<b><span style=\"color: #CD0000;\">SVGLoader.cc</span></b>\r\n<b><span style=\"color: #CD0000;\">:</span></b>\r\n<b><span style=\"color: #CD0000;\">666</span></b>\r\n<b><span style=\"color: #CD0000;\">] </span></b>\r\n<b><span style=\"color: #CD0000;\">Failed to load file </span></b>\r\n<b><span style=\"color: #CD0000;\">/not/a/file.svg</span></b>\r\n~~~\r\n\r\nEach `Console::log::<<` operator makes a separate `<span>` tag. This PR makes a small change to reduce the number of `Console::log::<<` operators that are colorized by first streaming to a `std::stringstream` and then streaming to the `Console::log`. This reduced the console log from 120MB to 70MB in a [test build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/7/).\r\n\r\nI also discovered recently that the `check_test_ran.py` script doesn't work well with QTest's since those write blank junit files instead of not writing a file at all (in jenkins it looks like [this](http://build.osrfoundation.org/job/gazebo-ci-gazebo5-homebrew-amd64/10/testReport/UNIT_ImagesView_TEST/xml/_empty_/)). So I've modified that script to write the `test_ran` output if the file size is zero.\r\n\r\nI also noticed that jenkins reports the time taken by QTest's to be super long ([over 9 hours for DataLogger_TEST](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64_flaky/15/testReport/(root)/DataLogger_TEST/)). The `QBENCHMARK` seems to report time in `ms`, so I've added a divide by 1000 operation in the stylesheet that converts the qtest xml files to junit (752b959).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2253/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5583f367f0de%0Daf456eb2d26a?from_pullrequest_id=2253"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2253/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2253.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2253/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2253/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2253"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2253/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5583f367f0de%0Daf456eb2d26a?from_pullrequest_id=2253"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2253/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2253/statuses_page=1.json"}}, "title": "Reduce jenkins console log size, fix check_test_ran.py for QTest", "close_source_branch": true, "reviewers": [], "id": 2253, "destination": {"commit": {"hash": "af456eb2d26a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/af456eb2d26a.json"}, "html": {"href": "#!/osrf/gazebo/commits/af456eb2d26a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo5"}}, "created_on": "2016-04-08T23:53:11.293377+00:00", "summary": {"raw": "We are using the [AnsiColor Plugin](https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin) in jenkins to colorize the console output so it looks like [this](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/4/console) instead of [this](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/5/console):\r\n\r\n~~~\r\n491: [ RUN      ] gzTest.Joint\r\n491: \u001b[1;32m[Msg] \u001b[0m\u001b[1;32mWaiting for master.\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mConnected to gazebo master @ \u001b[0m\u001b[1;32mhttp://127.0.0.1:11345\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m[Msg] \u001b[0m\u001b[1;32mPublicized address: \u001b[0m\u001b[1;32m172.23.2.252\u001b[0m\u001b[1;32m\r\n491: \u001b[0m\u001b[1;32m\u001b[0m\u001b[1;32m\u001b[0m[       OK ] gzTest.Joint (1939 ms)\r\n~~~\r\n\r\nOne drawback is that it makes the html form of the console output huge (120 MB instead of 4 MB). The following colored text expands to html with a ton of duplicate `<span>` tags.\r\n\r\n~~~\r\n[Err] [SVGLoader.cc:666] Failed to load file /not/a/file.svg\r\n~~~\r\n\r\n~~~\r\n<b><span style=\"color: #CD0000;\">[Err] </span></b>\r\n<b><span style=\"color: #CD0000;\">[</span></b>\r\n<b><span style=\"color: #CD0000;\">SVGLoader.cc</span></b>\r\n<b><span style=\"color: #CD0000;\">:</span></b>\r\n<b><span style=\"color: #CD0000;\">666</span></b>\r\n<b><span style=\"color: #CD0000;\">] </span></b>\r\n<b><span style=\"color: #CD0000;\">Failed to load file </span></b>\r\n<b><span style=\"color: #CD0000;\">/not/a/file.svg</span></b>\r\n~~~\r\n\r\nEach `Console::log::<<` operator makes a separate `<span>` tag. This PR makes a small change to reduce the number of `Console::log::<<` operators that are colorized by first streaming to a `std::stringstream` and then streaming to the `Console::log`. This reduced the console log from 120MB to 70MB in a [test build](http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/7/).\r\n\r\nI also discovered recently that the `check_test_ran.py` script doesn't work well with QTest's since those write blank junit files instead of not writing a file at all (in jenkins it looks like [this](http://build.osrfoundation.org/job/gazebo-ci-gazebo5-homebrew-amd64/10/testReport/UNIT_ImagesView_TEST/xml/_empty_/)). So I've modified that script to write the `test_ran` output if the file size is zero.\r\n\r\nI also noticed that jenkins reports the time taken by QTest's to be super long ([over 9 hours for DataLogger_TEST](http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64_flaky/15/testReport/(root)/DataLogger_TEST/)). The `QBENCHMARK` seems to report time in `ms`, so I've added a divide by 1000 operation in the stylesheet that converts the qtest xml files to junit (752b959).", "markup": "markdown", "html": "<p>We are using the <a data-is-external-link=\"true\" href=\"https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin\" rel=\"nofollow\">AnsiColor Plugin</a> in jenkins to colorize the console output so it looks like <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/4/console\" rel=\"nofollow\">this</a> instead of <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/5/console\" rel=\"nofollow\">this</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">491</span><span class=\"o\">:</span> <span class=\"cp\">[</span> <span class=\"nx\">RUN</span>      <span class=\"cp\">]</span> <span class=\"nt\">gzTest</span><span class=\"p\">.</span><span class=\"nc\">Joint</span>\n<span class=\"nt\">491</span><span class=\"o\">:</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">[</span><span class=\"nx\">Msg</span><span class=\"cp\">]</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mWaiting</span> <span class=\"nx\">for</span> <span class=\"nx\">master.</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span>\n<span class=\"mi\">491</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">[</span><span class=\"nx\">Msg</span><span class=\"cp\">]</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mConnected</span> <span class=\"k\">to</span> <span class=\"nx\">gazebo</span> <span class=\"nx\">master</span> <span class=\"p\">@</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mhttp</span><span class=\"p\">:</span><span class=\"c1\">//127.0.0.1:11345\u001b[0m\u001b[1;32m</span>\n<span class=\"mi\">491</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">[</span><span class=\"nx\">Msg</span><span class=\"cp\">]</span> <span class=\"err\">\u001b</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">mPublicized</span> <span class=\"nx\">address</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m172.23.2.252</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span>\n<span class=\"mi\">491</span><span class=\"p\">:</span> <span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"mi\">32</span><span class=\"nx\">m</span><span class=\"err\">\u001b[</span><span class=\"mi\">0</span><span class=\"nx\">m</span><span class=\"err\">[</span>       <span class=\"nx\">OK</span> <span class=\"cp\">]</span> <span class=\"nt\">gzTest</span><span class=\"p\">.</span><span class=\"nc\">Joint</span> <span class=\"o\">(</span><span class=\"nt\">1939</span> <span class=\"nt\">ms</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>One drawback is that it makes the html form of the console output huge (120 MB instead of 4 MB). The following colored text expands to html with a ton of duplicate <code>&lt;span&gt;</code> tags.</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [SVGLoader.cc:666] Failed to load file /not/a/file.svg\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>[Err] <span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>[<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>SVGLoader.cc<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>:<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>666<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>] <span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>Failed to load file <span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n<span class=\"nt\">&lt;b&gt;&lt;span</span> <span class=\"na\">style=</span><span class=\"s\">&quot;color: #CD0000;&quot;</span><span class=\"nt\">&gt;</span>/not/a/file.svg<span class=\"nt\">&lt;/span&gt;&lt;/b&gt;</span>\n</pre></div>\n\n\n<p>Each <code>Console::log::&lt;&lt;</code> operator makes a separate <code>&lt;span&gt;</code> tag. This PR makes a small change to reduce the number of <code>Console::log::&lt;&lt;</code> operators that are colorized by first streaming to a <code>std::stringstream</code> and then streaming to the <code>Console::log</code>. This reduced the console log from 120MB to 70MB in a <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-pr_any-homebrew-amd64_flaky/7/\" rel=\"nofollow\">test build</a>.</p>\n<p>I also discovered recently that the <code>check_test_ran.py</code> script doesn't work well with QTest's since those write blank junit files instead of not writing a file at all (in jenkins it looks like <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-ci-gazebo5-homebrew-amd64/10/testReport/UNIT_ImagesView_TEST/xml/_empty_/\" rel=\"nofollow\">this</a>). So I've modified that script to write the <code>test_ran</code> output if the file size is zero.</p>\n<p>I also noticed that jenkins reports the time taken by QTest's to be super long (<a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/CI%20any%20jobs/job/gazebo-ci-pr_any-homebrew-amd64_flaky/15/testReport/(root)/DataLogger_TEST/\" rel=\"nofollow\">over 9 hours for DataLogger_TEST</a>). The <code>QBENCHMARK</code> seems to report time in <code>ms</code>, so I've added a divide by 1000 operation in the stylesheet that converts the qtest xml files to junit (<a href=\"#!/osrf/gazebo/commits/752b959\" rel=\"nofollow\" class=\"ap-connect-link\">752b959</a>).</p>", "type": "rendered"}, "source": {"commit": {"hash": "752b959743aa", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/752b959743aa.json"}, "html": {"href": "#!/osrf/gazebo/commits/752b959743aa"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "reduce_console_size"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-04-15T01:11:56.697988+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-04-25T20:06:09.459837+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2016-05-09T20:33:53.872856+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2016-05-11T00:56:03.208451+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "5583f367f0de", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5583f367f0de.json"}, "html": {"href": "#!/osrf/gazebo/commits/5583f367f0de"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}