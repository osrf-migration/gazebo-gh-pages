{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50844.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:92ee630e0227..ae93b3ac0634?path=gazebo%2Frendering%2FContactVisual.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50844"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "This visualization scales the square of the magnitude and then envelopes the vector length to 0.1 to 0.5 meters. So as I understand, the useful range for visualizing the magnitude is 3.3N to 7.1N. If you change the scaling factor (0.01 currently), it doesn't really help to broaden the visualized magnitudes (i.e. 3.3-7.1 vs 33-71). Instead consider something like:\n\n------------------------------------------------\n\ndouble magScale = 100;\n\ndouble vMax = 0.5;\n\ndouble vMin = 0.1;\n\ndouble vRange = vMax - vMin; // 0.4\n\ndouble offset = vRange - vMin; // 0.3\n\n// Eq in the family of Y = 1/(1+exp(-(x^2)))\n\ndouble normalScale = (2.0 * vRange) / (1 + exp (-force.GetSquaredLength() / magScale)) - offset; \n\n-------------------------------------------------------\n\nWhere magScale, vMin, vMax are user defined scaling parameters. Increasing magScale broadens the magnitudes that can be visualized. Changing vMin and vMax change the lengths of the visualized vectors.\n\nLink to Wolfram alpha for visualizing the above function\nhttp://www.wolframalpha.com/input/?i=0.8%2F%281%2Bexp%28-%28x%5E2%2F100%29%29%29-0.3", "markup": "markdown", "html": "<p>This visualization scales the square of the magnitude and then envelopes the vector length to 0.1 to 0.5 meters. So as I understand, the useful range for visualizing the magnitude is 3.3N to 7.1N. If you change the scaling factor (0.01 currently), it doesn't really help to broaden the visualized magnitudes (i.e. 3.3-7.1 vs 33-71). Instead consider something like:</p>\n<hr />\n<p>double magScale = 100;</p>\n<p>double vMax = 0.5;</p>\n<p>double vMin = 0.1;</p>\n<p>double vRange = vMax - vMin; // 0.4</p>\n<p>double offset = vRange - vMin; // 0.3</p>\n<p>// Eq in the family of Y = 1/(1+exp(-(x^2)))</p>\n<p>double normalScale = (2.0 * vRange) / (1 + exp (-force.GetSquaredLength() / magScale)) - offset; </p>\n<hr />\n<p>Where magScale, vMin, vMax are user defined scaling parameters. Increasing magScale broadens the magnitudes that can be visualized. Changing vMin and vMax change the lengths of the visualized vectors.</p>\n<p>Link to Wolfram alpha for visualizing the above function\n<a href=\"http://www.wolframalpha.com/input/?i=0.8%2F%281%2Bexp%28-%28x%5E2%2F100%29%29%29-0.3\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.wolframalpha.com/input/?i=0.8%2F%281%2Bexp%28-%28x%5E2%2F100%29%29%29-0.3</a></p>", "type": "rendered"}, "created_on": "2012-11-27T23:46:49.241919+00:00", "user": {"display_name": "Stephen Brawner", "uuid": "{f6bd3fe7-4d17-4503-9232-0915d6e97879}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf6bd3fe7-4d17-4503-9232-0915d6e97879%7D"}, "html": {"href": "https://bitbucket.org/%7Bf6bd3fe7-4d17-4503-9232-0915d6e97879%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/68ef29dce5cc8f01a4d01c17a97226bdd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSB-1.png"}}, "nickname": "brawner", "type": "user", "account_id": "557058:84c67412-a2f4-4754-87f1-e4c1e3fe58fe"}, "inline": {"to": 104, "from": null, "path": "gazebo/rendering/ContactVisual.cc"}, "updated_on": "2012-11-27T23:50:41.810609+00:00", "type": "pullrequest_comment", "id": 50844}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50859.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=gazebo%2Frendering%2FContactVisual.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50859"}}, "parent": {"id": 50844, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50844.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50844"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "I agree with my namesake that there is room for improvement in the scaling of the contact visualization. I would propose using a logarithmic scale on the Length of the force vector (as opposed to the SquaredLength).\n\nHowever, I think these details could be handled in another pull request after this one is accepted, since there's so much happening here.", "markup": "markdown", "html": "<p>I agree with my namesake that there is room for improvement in the scaling of the contact visualization. I would propose using a logarithmic scale on the Length of the force vector (as opposed to the SquaredLength).</p>\n<p>However, I think these details could be handled in another pull request after this one is accepted, since there's so much happening here.</p>", "type": "rendered"}, "created_on": "2012-11-28T00:31:02.659026+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "gazebo/rendering/ContactVisual.cc"}, "updated_on": "2012-11-28T00:31:02.667903+00:00", "type": "pullrequest_comment", "id": 50859}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/51480.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:None..None?path=gazebo%2Frendering%2FContactVisual.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-51480"}}, "parent": {"id": 50859, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50859.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50859"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "I added in Stephen's suggestion. It seems to work pretty well. Please add a feature request if you want to spend more time on this visualization.", "markup": "markdown", "html": "<p>I added in Stephen's suggestion. It seems to work pretty well. Please add a feature request if you want to spend more time on this visualization.</p>", "type": "rendered"}, "created_on": "2012-11-28T16:47:32.793128+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "gazebo/rendering/ContactVisual.cc"}, "updated_on": "2012-11-28T16:47:32.802575+00:00", "type": "pullrequest_comment", "id": 51480}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50845.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:92ee630e0227..ae93b3ac0634?path=gazebo%2Fphysics%2Fode%2FODELink.cc"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50845"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "this is good, I had noticed previously that boxes with contact sensors could be auto-disabled and then they would stop sending messages.", "markup": "markdown", "html": "<p>this is good, I had noticed previously that boxes with contact sensors could be auto-disabled and then they would stop sending messages.</p>", "type": "rendered"}, "created_on": "2012-11-27T23:53:18.570405+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 75, "from": null, "path": "gazebo/physics/ode/ODELink.cc"}, "updated_on": "2012-11-27T23:53:18.577997+00:00", "type": "pullrequest_comment", "id": 50845}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50857.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50857"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "This looks very good to me. It fixes bugs I had noticed but not filed issues on:\n\n1. user-generated objects didn't always generate /gazebo/default/physics/contacts messages (now they do)\n\n2. contact sensors on auto-disabled objects would stop sending messages (now they are prevented from auto-disabling)\n\nAlso, it appears that a contact sensor will send an empty time-stamped message according to the update rate if it is not contacting anything. I think this is helpful.\n\nIf performance becomes an issue, the amount of information in [joint_wrench.proto](#!/osrf/gazebo/src/0bb1e6293210227f2162c966a233a9cc3b024909/gazebo/msgs/joint_wrench.proto?at=contact_sensor) could be scaled back. Are `body_1_name` and `body_2_name` necessary in the wrench if they are already contained in the [contact message](#!/osrf/gazebo/src/0bb1e6293210/gazebo/msgs/contact.proto?at=contact_sensor) as `collision1` and `collision2`? \n\nShould the documentation state that the forces and torques returned by the contact sensor are expressed with respect to the center of mass?", "markup": "markdown", "html": "<p>This looks very good to me. It fixes bugs I had noticed but not filed issues on:</p>\n<ol>\n<li>\n<p>user-generated objects didn't always generate /gazebo/default/physics/contacts messages (now they do)</p>\n</li>\n<li>\n<p>contact sensors on auto-disabled objects would stop sending messages (now they are prevented from auto-disabling)</p>\n</li>\n</ol>\n<p>Also, it appears that a contact sensor will send an empty time-stamped message according to the update rate if it is not contacting anything. I think this is helpful.</p>\n<p>If performance becomes an issue, the amount of information in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/0bb1e6293210227f2162c966a233a9cc3b024909/gazebo/msgs/joint_wrench.proto?at=contact_sensor\" rel=\"nofollow\">joint_wrench.proto</a> could be scaled back. Are <code>body_1_name</code> and <code>body_2_name</code> necessary in the wrench if they are already contained in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/0bb1e6293210/gazebo/msgs/contact.proto?at=contact_sensor\" rel=\"nofollow\">contact message</a> as <code>collision1</code> and <code>collision2</code>? </p>\n<p>Should the documentation state that the forces and torques returned by the contact sensor are expressed with respect to the center of mass?</p>", "type": "rendered"}, "created_on": "2012-11-28T00:22:25.355008+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2012-11-28T00:22:40.928418+00:00", "type": "pullrequest_comment", "id": 50857}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/51521.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-51521"}}, "parent": {"id": 50857, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50857.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50857"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "The body_1_name and body_2_name are there because the message can be used independent of the contact message.\n\nI have added the necessary documentation about COM and forces.", "markup": "markdown", "html": "<p>The body_1_name and body_2_name are there because the message can be used independent of the contact message.</p>\n<p>I have added the necessary documentation about COM and forces.</p>", "type": "rendered"}, "created_on": "2012-11-28T17:35:12.825492+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2012-11-28T17:35:12.832415+00:00", "type": "pullrequest_comment", "id": 51521}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50861.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50861"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "The transparency is great as well. It's actually necessary to see the contacts for user-generated spheres, which are typically inside the volume of the sphere.\n\nThe first thing I do when after `View Contacts` is manually make everything transparent. Is it too much to ask for a way to turn all models transparent? Should enabling contact visualization automatically turn everything transparent?", "markup": "markdown", "html": "<p>The transparency is great as well. It's actually necessary to see the contacts for user-generated spheres, which are typically inside the volume of the sphere.</p>\n<p>The first thing I do when after <code>View Contacts</code> is manually make everything transparent. Is it too much to ask for a way to turn all models transparent? Should enabling contact visualization automatically turn everything transparent?</p>", "type": "rendered"}, "created_on": "2012-11-28T00:43:29.032908+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2012-11-28T00:43:29.038638+00:00", "type": "pullrequest_comment", "id": 50861}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50929.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50929"}}, "parent": {"id": 50861, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50861.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50861"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "I don't think turning everything transparent automatically when you enable contacts is desired, I actually like having the DRC robot and other objects opaque while dropping transparent balls on top of it, but a feature for making all objects transparent would definitely be desirable.\n\nThere seems to be a bug with enabling and disabling transparency when multiple objects are in the scene though. It doesn't really affect the pull request I guess so I'll just open a ticket for it.", "markup": "markdown", "html": "<p>I don't think turning everything transparent automatically when you enable contacts is desired, I actually like having the DRC robot and other objects opaque while dropping transparent balls on top of it, but a feature for making all objects transparent would definitely be desirable.</p>\n<p>There seems to be a bug with enabling and disabling transparency when multiple objects are in the scene though. It doesn't really affect the pull request I guess so I'll just open a ticket for it.</p>", "type": "rendered"}, "created_on": "2012-11-28T03:34:29.558271+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": "2012-11-28T03:34:29.710698+00:00", "type": "pullrequest_comment", "id": 50929}, {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/51473.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-51473"}}, "parent": {"id": 50929, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151/comments/50929.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151/_/diff#comment-50929"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 151, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/151.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/151"}}, "title": "Contact sensor refactor"}, "content": {"raw": "It seems like to issues should be generated:\n\n1. A feature request to make all objects transparent.\n2. A bug about enabling/disabling transparency with multiple objects. Screen shots for this bug would be very helpful.", "markup": "markdown", "html": "<p>It seems like to issues should be generated:</p>\n<ol>\n<li>A feature request to make all objects transparent.</li>\n<li>A bug about enabling/disabling transparency with multiple objects. Screen shots for this bug would be very helpful.</li>\n</ol>", "type": "rendered"}, "created_on": "2012-11-28T16:35:54.474429+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2012-11-28T16:35:54.481229+00:00", "type": "pullrequest_comment", "id": 51473}], "page": 1, "size": 9}