{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1831/comments/9330867.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1831/_/diff#comment-9330867"}}, "parent": {"id": 9301908, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1831/comments/9301908.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1831/_/diff#comment-9301908"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1831, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1831.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1831"}}, "title": "Torsional friction"}, "content": {"raw": "I found the problem!  I forgot to flip the check to do \"previous index\" before \"next index\" in the assignment of bounds in `dxConeFrictionModel`.\n\nSee 527c044\n\nThis is important to prevent using mu3 constraint row for cone friction update, see my [comment](#!/osrf/gazebo/src/527c04406a39d8e26180ae69484845a93bcf4d6b/deps/opende/src/quickstep_pgs_lcp.cpp?at=torsional_friction_john#quickstep_pgs_lcp.cpp-1520).\n\nIf we enter the cone friction code on the first friction constraint row, then: \n\n  1. previous row check fails\n  1. next row check is fine, and cone friction is updated\n\nif we enter the cone friction code on the second friction constraint row, then:\n\n  1. previous row check is fine, cone friction is updated.\n  1. doesn't happen\n\nWhen the check order is reversed, and we enter the cone friction code on the second friction constraint row,\n\n  1. next constraint row *works*, but it's a torsional friction constraint, wrong result is computed.\n", "markup": "markdown", "html": "<p>I found the problem!  I forgot to flip the check to do \"previous index\" before \"next index\" in the assignment of bounds in <code>dxConeFrictionModel</code>.</p>\n<p>See <a href=\"#!/osrf/gazebo/commits/527c044\" rel=\"nofollow\" class=\"ap-connect-link\">527c044</a></p>\n<p>This is important to prevent using mu3 constraint row for cone friction update, see my <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/527c04406a39d8e26180ae69484845a93bcf4d6b/deps/opende/src/quickstep_pgs_lcp.cpp?at=torsional_friction_john#quickstep_pgs_lcp.cpp-1520\" rel=\"nofollow\">comment</a>.</p>\n<p>If we enter the cone friction code on the first friction constraint row, then: </p>\n<ol>\n<li>previous row check fails</li>\n<li>next row check is fine, and cone friction is updated</li>\n</ol>\n<p>if we enter the cone friction code on the second friction constraint row, then:</p>\n<ol>\n<li>previous row check is fine, cone friction is updated.</li>\n<li>doesn't happen</li>\n</ol>\n<p>When the check order is reversed, and we enter the cone friction code on the second friction constraint row,</p>\n<ol>\n<li>next constraint row <em>works</em>, but it's a torsional friction constraint, wrong result is computed.</li>\n</ol>", "type": "rendered"}, "created_on": "2015-08-24T19:21:32.265064+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-08-24T19:26:29.182839+00:00", "type": "pullrequest_comment", "id": 9330867}