{"pagelen": 50, "values": [{"update": {"description": "I just started getting compiler warnings on OS X Yosemite about the use of a floating point constant `1e9` used in integer calculations in  `common::Time::Correct`:\r\n~~~\r\ngazebo/common/Time.hh:434:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:434:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\ngazebo/common/Time.hh:440:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:440:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\n~~~\r\nIt recommends a floating point absolute value function, but I think it's more efficient and precise to use an integer constant instead of a floating point constant, since the end result is an integer anyway.\r\n\r\nThis is a fix targeted at `gazebo_4.1`. For c++11 (gazebo5+), some people [recommend user-defined literals](http://stackoverflow.com/a/24389792), but I'm happy with this implementation for now.\r\n\r\nUPDATE: I found a few more warnings to fix and I added them to this pull request:\r\n\r\n* 5099ef0: Use `std::abs(double)` instead of `abs(int)` in WirelessTransmitter.cc\r\n~~~\r\ngazebo/sensors/WirelessTransmitter.cc:180:14: warning: using integer absolute value\r\n      function 'abs' when argument is of floating point type [-Wabsolute-value]\r\n  double x = abs(math::Rand::GetDblNormal(0.0, ModelStdDesv));\r\n             ^\r\ngazebo/sensors/WirelessTransmitter.cc:180:14: note: use function 'std::abs' instead\r\n  double x = abs(math::Rand::GetDblNormal(0.0, ModelStdDesv));\r\n             ^~~\r\n             std::abs\r\n1 warning generated.\r\n~~~\r\n* 9f6a109: Don't use `this` when subscribing with a non-member callback function in MainWindow_TEST.cc. Use latching = `true` to preserve existing functionality.\r\n~~~\r\ngazebo/gui/MainWindow_TEST.cc:408:50: warning: 'this' pointer cannot be null in\r\n      well-defined C++ code; pointer may be assumed to always convert to true [-Wundefined-bool-conversion]\r\n  sub = node->Subscribe(\"~/request\", &OnRequest, this);\r\n        ~~~~                                     ^~~~\r\n~~~\r\n\r\nThe following wasn't from a compiler warning, but I was reading about how you're not supposed to throw exceptions from a destructor, and noticed this and decided to fix it.\r\n* 496fee3: Add try/catch around pubsync and close functions (both of which can throw) in `~Buffer` to ensure no exceptions are thrown from the destructor", "title": "Fix several clang compiler warnings", "destination": {"commit": {"hash": "3b2197395ca5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b2197395ca5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b2197395ca5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "reason": "", "source": {"commit": {"hash": "496fee336ec9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/496fee336ec9.json"}, "html": {"href": "#!/osrf/gazebo/commits/496fee336ec9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "time_1e9_4.1"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-04-23T17:14:29.135599+00:00"}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"approval": {"date": "2015-04-23T16:58:33.824257+00:00", "pullrequest": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594/comments/6444295.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594/_/diff#comment-6444295"}}, "parent": {"id": 6435847, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594/comments/6435847.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594/_/diff#comment-6435847"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}, "content": {"raw": "It said it was automatically casting `this` to `true`", "markup": "markdown", "html": "<p>It said it was automatically casting <code>this</code> to <code>true</code></p>", "type": "rendered"}, "created_on": "2015-04-23T12:19:05.649624+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2015-04-23T12:19:05.658004+00:00", "type": "pullrequest_comment", "id": 6444295}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"approval": {"date": "2015-04-23T06:01:50.835804+00:00", "pullrequest": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594/comments/6435847.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594/_/diff#comment-6435847"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}, "content": {"raw": "mm interesting that this used to work", "markup": "markdown", "html": "<p>mm interesting that this used to work</p>", "type": "rendered"}, "created_on": "2015-04-23T05:59:49.551440+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2015-04-23T05:59:49.558637+00:00", "type": "pullrequest_comment", "id": 6435847}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"update": {"description": "I just started getting compiler warnings on OS X Yosemite about the use of a floating point constant `1e9` used in integer calculations in  `common::Time::Correct`:\r\n~~~\r\ngazebo/common/Time.hh:434:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:434:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\ngazebo/common/Time.hh:440:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:440:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\n~~~\r\nIt recommends a floating point absolute value function, but I think it's more efficient and precise to use an integer constant instead of a floating point constant, since the end result is an integer anyway.\r\n\r\nThis is a fix targeted at `gazebo_4.1`. For c++11 (gazebo5+), some people [recommend user-defined literals](http://stackoverflow.com/a/24389792), but I'm happy with this implementation for now.\r\n\r\nUPDATE: I found a few more warnings to fix and I added them to this pull request:\r\n\r\n* 5099ef0: Use `std::abs(double)` instead of `abs(int)` in WirelessTransmitter.cc\r\n~~~\r\ngazebo/sensors/WirelessTransmitter.cc:180:14: warning: using integer absolute value\r\n      function 'abs' when argument is of floating point type [-Wabsolute-value]\r\n  double x = abs(math::Rand::GetDblNormal(0.0, ModelStdDesv));\r\n             ^\r\ngazebo/sensors/WirelessTransmitter.cc:180:14: note: use function 'std::abs' instead\r\n  double x = abs(math::Rand::GetDblNormal(0.0, ModelStdDesv));\r\n             ^~~\r\n             std::abs\r\n1 warning generated.\r\n~~~\r\n* 9f6a109: Don't use `this` when subscribing with a non-member callback function in MainWindow_TEST.cc. Use latching = `true` to preserve existing functionality.\r\n~~~\r\ngazebo/gui/MainWindow_TEST.cc:408:50: warning: 'this' pointer cannot be null in\r\n      well-defined C++ code; pointer may be assumed to always convert to true [-Wundefined-bool-conversion]\r\n  sub = node->Subscribe(\"~/request\", &OnRequest, this);\r\n        ~~~~                                     ^~~~\r\n~~~\r\n\r\nThe following wasn't from a compiler warning, but I was reading about how you're not supposed to throw exceptions from a destructor, and noticed this and decided to fix it.\r\n* 496fee3: Add try/catch around pubsync and close functions (both of which can throw) in `~Buffer` to ensure no exceptions are thrown from the destructor", "title": "Fix several clang compiler warnings", "destination": {"commit": {"hash": "3b2197395ca5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b2197395ca5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b2197395ca5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "reason": "", "source": {"commit": {"hash": "496fee336ec9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/496fee336ec9.json"}, "html": {"href": "#!/osrf/gazebo/commits/496fee336ec9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "time_1e9_4.1"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-04-17T23:50:49.597377+00:00"}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"update": {"description": "I just started getting compiler warnings on OS X Yosemite about the use of a floating point constant `1e9` used in integer calculations in  `common::Time::Correct`:\r\n~~~\r\ngazebo/common/Time.hh:434:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:434:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\ngazebo/common/Time.hh:440:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:440:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\n~~~\r\nIt recommends a floating point absolute value function, but I think it's more efficient and precise to use an integer constant instead of a floating point constant, since the end result is an integer anyway.\r\n\r\nThis is a fix targeted at `gazebo_4.1`. For c++11 (gazebo5+), some people [recommend user-defined literals](http://stackoverflow.com/a/24389792), but I'm happy with this implementation for now.\r\n\r\nUPDATE: I found a few more warnings to fix and I added them to this pull request:\r\n\r\n* 5099ef0: Use `std::abs(double)` instead of `abs(int)` in WirelessTransmitter.cc\r\n~~~\r\ngazebo/sensors/WirelessTransmitter.cc:180:14: warning: using integer absolute value\r\n      function 'abs' when argument is of floating point type [-Wabsolute-value]\r\n  double x = abs(math::Rand::GetDblNormal(0.0, ModelStdDesv));\r\n             ^\r\ngazebo/sensors/WirelessTransmitter.cc:180:14: note: use function 'std::abs' instead\r\n  double x = abs(math::Rand::GetDblNormal(0.0, ModelStdDesv));\r\n             ^~~\r\n             std::abs\r\n1 warning generated.\r\n~~~\r\n* 9f6a109: Don't use `this` when subscribing with a non-member callback function in MainWindow_TEST.cc. Use latching = `true` to preserve existing functionality.\r\n~~~\r\ngazebo/gui/MainWindow_TEST.cc:408:50: warning: 'this' pointer cannot be null in\r\n      well-defined C++ code; pointer may be assumed to always convert to true [-Wundefined-bool-conversion]\r\n  sub = node->Subscribe(\"~/request\", &OnRequest, this);\r\n        ~~~~                                     ^~~~\r\n~~~\r\n\r\nThe following wasn't from a compiler warning, but I was reading about how you're not supposed to throw exceptions from a destructor, and noticed this and decided to fix it.\r\n* 496fee3: Add try/catch around pubsync and close functions (both of which can throw) in `~Buffer` to ensure no exceptions are thrown from the destructor", "title": "Time.hh: replace floating point 1e9 with integer constant (4.1)", "destination": {"commit": {"hash": "3b2197395ca5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b2197395ca5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b2197395ca5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "reason": "", "source": {"commit": {"hash": "496fee336ec9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/496fee336ec9.json"}, "html": {"href": "#!/osrf/gazebo/commits/496fee336ec9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "time_1e9_4.1"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-04-17T19:36:07.673090+00:00"}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594/comments/6334419.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594/_/diff#comment-6334419"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}, "content": {"raw": "CI:\n\n* [homebrew](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/41/)\n* [trusty nvidia](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/48)\n* [trusty no-gpu](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/60)", "markup": "markdown", "html": "<p>CI:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-homebrew-amd64/41/\" rel=\"nofollow\">homebrew</a></li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/48\" rel=\"nofollow\">trusty nvidia</a></li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/60\" rel=\"nofollow\">trusty no-gpu</a></li>\n</ul>", "type": "rendered"}, "created_on": "2015-04-17T19:21:17.304410+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-04-17T19:21:17.314694+00:00", "type": "pullrequest_comment", "id": 6334419}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"update": {"description": "I just started getting compiler warnings on OS X Yosemite about the use of a floating point constant `1e9` used in integer calculations in  `common::Time::Correct`:\r\n~~~\r\ngazebo/common/Time.hh:434:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:434:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\ngazebo/common/Time.hh:440:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:440:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\n~~~\r\nIt recommends a floating point absolute value function, but I think it's more efficient and precise to use an integer constant instead of a floating point constant, since the end result is an integer anyway.\r\n\r\nThis is a fix targeted at `gazebo_4.1`. For c++11 (gazebo5+), some people [recommend user-defined literals](http://stackoverflow.com/a/24389792), but I'm happy with this implementation for now.\r\n\r\nUPDATE: I found a few more warnings to I added them to this pull request:\r\n\r\n* Use `std::abs(double)` instead of `abs(int)` in WirelessTransmitter.cc\r\n* Don't use `this` when subscribing with a non-member callback function in MainWindow_TEST.cc. Use latching = `true` to preserve existing functionality.\r\n* Add try/catch around pubsync and close functions (both of which can throw) in `~Buffer` to ensure no exceptions are thrown from the destructor", "title": "Time.hh: replace floating point 1e9 with integer constant (4.1)", "destination": {"commit": {"hash": "3b2197395ca5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b2197395ca5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b2197395ca5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "reason": "", "source": {"commit": {"hash": "496fee336ec9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/496fee336ec9.json"}, "html": {"href": "#!/osrf/gazebo/commits/496fee336ec9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "time_1e9_4.1"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-04-17T19:17:08.915968+00:00"}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"update": {"description": "I just started getting compiler warnings on OS X Yosemite about the use of a floating point constant `1e9` used in integer calculations in  `common::Time::Correct`:\r\n~~~\r\ngazebo/common/Time.hh:434:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:434:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\ngazebo/common/Time.hh:440:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:440:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\n~~~\r\nIt recommends a floating point absolute value function, but I think it's more efficient and precise to use an integer constant instead of a floating point constant, since the end result is an integer anyway.\r\n\r\nThis is a fix targeted at `gazebo_4.1`. For c++11 (gazebo5+), some people [recommend user-defined literals](http://stackoverflow.com/a/24389792), but I'm happy with this implementation for now.", "title": "Time.hh: replace floating point 1e9 with integer constant (4.1)", "destination": {"commit": {"hash": "3b2197395ca5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b2197395ca5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b2197395ca5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "reason": "", "source": {"commit": {"hash": "496fee336ec9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/496fee336ec9.json"}, "html": {"href": "#!/osrf/gazebo/commits/496fee336ec9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "time_1e9_4.1"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-04-17T19:14:36.144577+00:00"}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"update": {"description": "I just started getting compiler warnings on OS X Yosemite about the use of a floating point constant `1e9` used in integer calculations in  `common::Time::Correct`:\r\n~~~\r\ngazebo/common/Time.hh:434:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:434:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\ngazebo/common/Time.hh:440:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:440:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\n~~~\r\nIt recommends a floating point absolute value function, but I think it's more efficient and precise to use an integer constant instead of a floating point constant, since the end result is an integer anyway.\r\n\r\nThis is a fix targeted at `gazebo_4.1`. For c++11 (gazebo5+), some people [recommend user-defined literals](http://stackoverflow.com/a/24389792), but I'm happy with this implementation for now.", "title": "Time.hh: replace floating point 1e9 with integer constant (4.1)", "destination": {"commit": {"hash": "3b2197395ca5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b2197395ca5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b2197395ca5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "reason": "", "source": {"commit": {"hash": "eb13939f1757", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/eb13939f1757.json"}, "html": {"href": "#!/osrf/gazebo/commits/eb13939f1757"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "time_1e9_4.1"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-04-17T12:37:50.517527+00:00"}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}, {"update": {"description": "I just started getting compiler warnings on OS X Yosemite about the use of a floating point constant `1e9` used in integer calculations in  `common::Time::Correct`:\r\n~~~\r\ngazebo/common/Time.hh:434:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:434:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\ngazebo/common/Time.hh:440:32: warning: using integer absolute value function 'abs'\r\n      when argument is of floating point type [-Wabsolute-value]\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^\r\ngazebo/common/Time.hh:440:32: note: use function 'std::abs' instead\r\n                   int32_t n = abs(this->nsec / 1e9) + 1;\r\n                               ^~~\r\n                               std::abs\r\n~~~\r\nIt recommends a floating point absolute value function, but I think it's more efficient and precise to use an integer constant instead of a floating point constant, since the end result is an integer anyway.\r\n\r\nThis is a fix targeted at `gazebo_4.1`. For c++11 (gazebo5+), some people [recommend user-defined literals](http://stackoverflow.com/a/24389792), but I'm happy with this implementation for now.", "title": "Time.hh: replace floating point 1e9 with integer constant (4.1)", "destination": {"commit": {"hash": "3b2197395ca5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b2197395ca5.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b2197395ca5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo_4.1"}}, "reason": "", "source": {"commit": {"hash": "eb13939f1757", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/eb13939f1757.json"}, "html": {"href": "#!/osrf/gazebo/commits/eb13939f1757"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "time_1e9_4.1"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2015-04-17T12:37:50.486243+00:00"}, "pull_request": {"type": "pullrequest", "id": 1594, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1594.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1594"}}, "title": "Fix several clang compiler warnings"}}]}