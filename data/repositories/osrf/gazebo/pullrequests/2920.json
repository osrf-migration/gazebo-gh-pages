{"rendered": {"description": {"raw": "*  Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.\r\n\r\nCurrently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.\r\n\r\nCurrently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.\r\n\r\nHave the build running on my local machine without issues & passing tests. Happy to make any minor changes.", "markup": "markdown", "html": "<ul>\n<li>Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.</li>\n</ul>\n<p>Currently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.</p>\n<p>Currently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.</p>\n<p>Have the build running on my local machine without issues &amp; passing tests. Happy to make any minor changes.</p>", "type": "rendered"}, "title": {"raw": "Allow models to be loaded from an external webserver", "markup": "markdown", "html": "<p>Allow models to be loaded from an external webserver</p>", "type": "rendered"}}, "type": "pullrequest", "description": "*  Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.\r\n\r\nCurrently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.\r\n\r\nCurrently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.\r\n\r\nHave the build running on my local machine without issues & passing tests. Happy to make any minor changes.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2920/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/None?from_pullrequest_id=2920"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2920/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2920/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2920/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2920/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/None?from_pullrequest_id=2920"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2920/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2920/statuses_page=1.json"}}, "title": "Allow models to be loaded from an external webserver", "close_source_branch": false, "reviewers": [], "id": 2920, "destination": {"commit": {"hash": "55627fc420a4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/55627fc420a4.json"}, "html": {"href": "#!/osrf/gazebo/commits/55627fc420a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2018-03-13T23:58:05.631646+00:00", "summary": {"raw": "*  Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.\r\n\r\nCurrently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.\r\n\r\nCurrently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.\r\n\r\nHave the build running on my local machine without issues & passing tests. Happy to make any minor changes.", "markup": "markdown", "html": "<ul>\n<li>Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.</li>\n</ul>\n<p>Currently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.</p>\n<p>Currently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.</p>\n<p>Have the build running on my local machine without issues &amp; passing tests. Happy to make any minor changes.</p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "model_path_http"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-03-14T15:06:18.747833+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2018-03-15T01:42:32.482566+00:00", "author": {"display_name": "Christopher McDermott", "uuid": "{0dd9952c-ba5b-4573-b06f-af0416c866c7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D"}, "html": {"href": "https://bitbucket.org/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b536732359cd5133df52ee41200e03c4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCM-6.png"}}, "nickname": "derme302", "type": "user", "account_id": "5a9f02212647632a1feb9910"}, "merge_commit": null, "closed_by": {"display_name": "Christopher McDermott", "uuid": "{0dd9952c-ba5b-4573-b06f-af0416c866c7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D"}, "html": {"href": "https://bitbucket.org/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b536732359cd5133df52ee41200e03c4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCM-6.png"}}, "nickname": "derme302", "type": "user", "account_id": "5a9f02212647632a1feb9910"}}