{"pagelen": 50, "values": [{"update": {"description": "This pull request has two goals:\r\n\r\n* Allow a positive and negative multi-step while playing back a log file.\r\n* Change the semantics of a multi-step. Now, when we set the `step_size` to 100, and then we step, what we observe is 100 individual steps. The new behavior is to observe in the client side only one step of `step_size` 100.\r\n\r\nIt will be connected with the GUI in a future pull request. Probably @chapulina will make the magic.\r\n\r\nA few comments:\r\n\r\n*  I modified the `multi_step` field in `world_control.proto` from an `uint32` to `sint32`. I can create an alternative message for controlling the playback of a log file but it's going to look pretty much the same as `world_control.proto`. A potential client that uses this message would need to be recompiled.\r\n* Stepping forward with big `step_size` or stepping backwards when you're far from the beginning of the log file is really slow.\r\n* I initialized `world.cc::step_inc` to 1 because the first chunk does not have a `<world_state>`. If we don't do this and we start Gazebo paused, we would see the models in its initial SDF position, not in the position that they had when the log started.\r\n\r\nWhen we have all the functionality working and connected with the GUI I'll probably make another pull request for using keyframes in the log file that will speedup the playback.", "title": "Implement forward/backwards multi-step for log playback", "destination": {"commit": {"hash": "a044f8ade448", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a044f8ade448.json"}, "html": {"href": "#!/osrf/gazebo/commits/a044f8ade448"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c5a034ff679f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c5a034ff679f.json"}, "html": {"href": "#!/osrf/gazebo/commits/c5a034ff679f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_play_control"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-05-02T21:17:13.802124+00:00"}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"update": {"description": "This pull request has two goals:\r\n\r\n* Allow a positive and negative multi-step while playing back a log file.\r\n* Change the semantics of a multi-step. Now, when we set the `step_size` to 100, and then we step, what we observe is 100 individual steps. The new behavior is to observe in the client side only one step of `step_size` 100.\r\n\r\nIt will be connected with the GUI in a future pull request. Probably @chapulina will make the magic.\r\n\r\nA few comments:\r\n\r\n*  I modified the `multi_step` field in `world_control.proto` from an `uint32` to `sint32`. I can create an alternative message for controlling the playback of a log file but it's going to look pretty much the same as `world_control.proto`. A potential client that uses this message would need to be recompiled.\r\n* Stepping forward with big `step_size` or stepping backwards when you're far from the beginning of the log file is really slow.\r\n* I initialized `world.cc::step_inc` to 1 because the first chunk does not have a `<world_state>`. If we don't do this and we start Gazebo paused, we would see the models in its initial SDF position, not in the position that they had when the log started.\r\n\r\nWhen we have all the functionality working and connected with the GUI I'll probably make another pull request for using keyframes in the log file that will speedup the playback.", "title": "Implement forward/backwards multi-step for log playback", "destination": {"commit": {"hash": "a044f8ade448", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/a044f8ade448.json"}, "html": {"href": "#!/osrf/gazebo/commits/a044f8ade448"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8ae15904d65c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8ae15904d65c.json"}, "html": {"href": "#!/osrf/gazebo/commits/8ae15904d65c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_play_control"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-05-02T21:08:32.458225+00:00"}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"update": {"description": "This pull request has two goals:\r\n\r\n* Allow a positive and negative multi-step while playing back a log file.\r\n* Change the semantics of a multi-step. Now, when we set the `step_size` to 100, and then we step, what we observe is 100 individual steps. The new behavior is to observe in the client side only one step of `step_size` 100.\r\n\r\nIt will be connected with the GUI in a future pull request. Probably @chapulina will make the magic.\r\n\r\nA few comments:\r\n\r\n*  I modified the `multi_step` field in `world_control.proto` from an `uint32` to `sint32`. I can create an alternative message for controlling the playback of a log file but it's going to look pretty much the same as `world_control.proto`. A potential client that uses this message would need to be recompiled.\r\n* Stepping forward with big `step_size` or stepping backwards when you're far from the beginning of the log file is really slow.\r\n* I initialized `world.cc::step_inc` to 1 because the first chunk does not have a `<world_state>`. If we don't do this and we start Gazebo paused, we would see the models in its initial SDF position, not in the position that they had when the log started.\r\n\r\nWhen we have all the functionality working and connected with the GUI I'll probably make another pull request for using keyframes in the log file that will speedup the playback.", "title": "Implement forward/backwards multi-step for log playback", "destination": {"commit": {"hash": "d343a2951313", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d343a2951313.json"}, "html": {"href": "#!/osrf/gazebo/commits/d343a2951313"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "907224d065ec", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/907224d065ec.json"}, "html": {"href": "#!/osrf/gazebo/commits/907224d065ec"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_play_control"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-05-01T18:17:49.415274+00:00"}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623/comments/6573057.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623/_/diff#comment-6573057"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}, "content": {"raw": "lots of test failures\n\n* http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/124/\n* http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/88/", "markup": "markdown", "html": "<p>lots of test failures</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/124/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-no-gpu/124/</a></li>\n<li><a href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/88/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/88/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2015-04-29T19:23:24.601462+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-04-29T19:23:24.612223+00:00", "type": "pullrequest_comment", "id": 6573057}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"update": {"description": "This pull request makes two things:\r\n\r\n* Allow a positive and negative multi-step while playing back a log file.\r\n* Change the semantics of a multi-step. Now, when we set the `step_size` to 100, and then we step, what we observe is 100 individual steps. The new behavior is to observe in the client side only one step of `step_size` 100.\r\n\r\nIt will be connected with the GUI in a future pull request. Probably @chapulina will make the magic.\r\n\r\nA few comments:\r\n\r\n*  I modified the `multi_step` field in `world_control.proto` from an `uint32` to `sint32`. I can create an alternative message for controlling the playback of a log file but it's going to look pretty much the same as `world_control.proto`. A potential client that uses this message would need to be recompiled.\r\n* Stepping forward with big `step_size` or stepping backwards when you're far from the beginning of the log file is really slow.\r\n* I initialized `world.cc::step_inc` to 1 because the first chunk does not have a `<world_state>`. If we don't do this and we start Gazebo paused, we would see the models in its initial SDF position, not in the position that they had when the log started.\r\n\r\nWhen we have all the functionality working and connected with the GUI I'll probably make another pull request for using keyframes in the log file that will speedup the playback.", "title": "Implement forward/backwards multi-step for log playback", "destination": {"commit": {"hash": "927f8b8dc77e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/927f8b8dc77e.json"}, "html": {"href": "#!/osrf/gazebo/commits/927f8b8dc77e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "907224d065ec", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/907224d065ec.json"}, "html": {"href": "#!/osrf/gazebo/commits/907224d065ec"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_play_control"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-04-29T15:56:54.868487+00:00"}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623/comments/6549591.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623/_/diff#comment-6549591"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}, "content": {"raw": "Is there a way to test this with command-line arguments or protobuf messages to a particular topic?", "markup": "markdown", "html": "<p>Is there a way to test this with command-line arguments or protobuf messages to a particular topic?</p>", "type": "rendered"}, "created_on": "2015-04-29T00:34:35.053699+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-04-29T00:34:35.064398+00:00", "type": "pullrequest_comment", "id": 6549591}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"update": {"description": "This pull request makes two things:\r\n\r\n* Allow a positive and negative multi-step while playing back a log file.\r\n* Change the semantics of a multi-step. Now, when we set the `step_size` to 100, and then, we step what we observe is 100 individual steps. The new behavior is to observe in the client side only one step of `step_size` 100.\r\n\r\nIt will be connected with the GUI in a future pull request. Probably @chapulina will make the magic.\r\n\r\nA few comments:\r\n\r\n*  I modified the `multi_step` field in `world_control.proto` from an `uint32` to `sint32`. I can create an alternative message for controlling the playback of a log file but it's going to look pretty much the same as `world_control.proto`. A potential client that uses this message would need to be recompiled.\r\n* Stepping forward with big `step_size` or stepping backwards when you're far from the beginning of the log file is really slow.\r\n* I initialized `world.cc::step_inc` to 1 because the first chunk does not have a `<world_state>`. If we don't do this and we start Gazebo paused, we would see the models in its initial SDF position, not in the position that they had when the log started.\r\n\r\nWhen we have all the functionality working and connected with the GUI I'll probably make another pull request for using keyframes in the log file that will speedup the playback.", "title": "Implement forward/backwards multi-step for log playback", "destination": {"commit": {"hash": "bf0316ec8b6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf0316ec8b6b.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf0316ec8b6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "907224d065ec", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/907224d065ec.json"}, "html": {"href": "#!/osrf/gazebo/commits/907224d065ec"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_play_control"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-04-29T00:11:09.723469+00:00"}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"update": {"description": "This pull request makes two things:\r\n\r\n* Allow a positive and negative multi-step while playing back a log file.\r\n* Change the semantics of a multi-step. Now, when we set the `step_size` to 100, and then, we step what we observe is 100 individual steps. The new behavior is to observe in the client side only one step of `step_size` 100.\r\n\r\nIt will be connected with the GUI in a future pull request. Probably @chapulina will make the magic.\r\n\r\nA few comments:\r\n\r\n*  I modified the `multi_step` field in `world_control.proto` from an `uint32` to `sint32`. I can create an alternative message for controlling the playback of a log file but it's going to look pretty much the same as `world_control.proto`. A potential client that uses this message would need to be recompiled.\r\n* Stepping forward with big `step_size` or stepping backwards when you're far from the beginning of the log file is really slow.\r\n* I initialized `world.cc::step_inc` to 1 because the first chunk does not have a `<world_state>`. If we don't do this and we start Gazebo paused, we would see the models in its initial SDF position, not in the position that they had when the log started.\r\n\r\nWhen we have all the functionality working and connected with the GUI I'll probably make another pull request for using keyframes in the log file that will speedup the playback.", "title": "Implement forward/backwards multi-step for log playback", "destination": {"commit": {"hash": "bf0316ec8b6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf0316ec8b6b.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf0316ec8b6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fd78a2057e5a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fd78a2057e5a.json"}, "html": {"href": "#!/osrf/gazebo/commits/fd78a2057e5a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_play_control"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-04-29T00:05:31.517658+00:00"}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}, {"update": {"description": "This pull request makes two things:\r\n\r\n* Allow a positive and negative multi-step while playing back a log file.\r\n* Change the semantics of a multi-step. Now, when we set the `step_size` to 100, and then, we step what we observe is 100 individual steps. The new behavior is to observe in the client side only one step of `step_size` 100.\r\n\r\nIt will be connected with the GUI in a future pull request. Probably @chapulina will make the magic.\r\n\r\nA few comments:\r\n\r\n*  I modified the `multi_step` field in `world_control.proto` from an `uint32` to `sint32`. I can create an alternative message for controlling the playback of a log file but it's going to look pretty much the same as `world_control.proto`. A potential client that uses this message would need to be recompiled.\r\n* Stepping forward with big `step_size` or stepping backwards when you're far from the beginning of the log file is really slow.\r\n* I initialized `world.cc::step_inc` to 1 because the first chunk does not have a `<world_state>`. If we don't do this and we start Gazebo paused, we would see the models in its initial SDF position, not in the position that they had when the log started.\r\n\r\nWhen we have all the functionality working and connected with the GUI I'll probably make another pull request for using keyframes in the log file that will speedup the playback.", "title": "Implement forward/backwards multi-step for log playback", "destination": {"commit": {"hash": "bf0316ec8b6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bf0316ec8b6b.json"}, "html": {"href": "#!/osrf/gazebo/commits/bf0316ec8b6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fd78a2057e5a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/fd78a2057e5a.json"}, "html": {"href": "#!/osrf/gazebo/commits/fd78a2057e5a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "log_play_control"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-04-29T00:05:31.488434+00:00"}, "pull_request": {"type": "pullrequest", "id": 1623, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1623.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1623"}}, "title": "Implement forward/backwards multi-step for log playback"}}]}