{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2750/comments/41750922.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2750/_/diff#comment-41750922"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2750, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2750.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2750"}}, "title": "try finding both sdformat 5 and 6 until we switch to 6"}, "content": {"raw": "With SDF 6 installed, cmake would configure, but I would see this warning: \n\n~~~\nCMake Warning at cmake/SearchForStuff.cmake:585 (find_package):\n  Could not find a configuration file for package \"SDFormat\" that is\n  compatible with requested version \"5.0.0\".\n\n  The following configuration files were considered but not accepted:\n\n    /usr/lib/x86_64-linux-gnu/cmake/sdformat/SDFormatConfig.cmake, version: 6.0.0\n    /usr/lib/x86_64-linux-gnu/cmake/sdformat/SDFormatConfig.cmake, version: 6.0.0\n~~~\n\nBranch [find_sdf6_louise](#!/osrf/gazebo/commits/6735bf79b363da7b0989325b2a807abfb9e178f5?at=find_sdf6_louise) has a proposed fix, feel free to merge if you agree.\n\nNote that Gazebo default is not building against SDF 6:\n\n~~~\nIn file included from /usr/include/boost/bind/arg.hpp:24:0,\n                 from /usr/include/boost/bind/bind.hpp:29,\n                 from /usr/include/boost/bind.hpp:22,\n                 from /home/louise/code/gazeboA/gazebo/rendering/Visual.cc:17:\n/usr/include/boost/variant/get.hpp: In instantiation of \u2018typename boost::add_reference<T>::type boost::strict_get(boost::variant<T0, TN ...>&) [with U = gazebo::common::Color; T0 = bool; TN = {char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, long unsigned int, unsigned int, double, float, sdf::Time, ignition::math::Color, ignition::math::Vector2<int>, ignition::math::Vector2<double>, ignition::math::Vector3<double>, ignition::math::Quaternion<double>, ignition::math::Pose3<double>}; typename boost::add_reference<T>::type = gazebo::common::Color&]\u2019:\n/usr/include/boost/variant/get.hpp:284:25:   required from \u2018typename boost::add_reference<T>::type boost::get(boost::variant<T0, TN ...>&) [with U = gazebo::common::Color; T0 = bool; TN = {char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, long unsigned int, unsigned int, double, float, sdf::Time, ignition::math::Color, ignition::math::Vector2<int>, ignition::math::Vector2<double>, ignition::math::Vector3<double>, ignition::math::Quaternion<double>, ignition::math::Pose3<double>}; typename boost::add_reference<T>::type = gazebo::common::Color&]\u2019\n/usr/include/sdformat-6.0/sdf/Param.hh:291:31:   required from \u2018bool sdf::Param::Get(T&) const [with T = gazebo::common::Color]\u2019\n/usr/include/sdformat-6.0/sdf/Element.hh:454:7:   required from \u2018std::pair<T, bool> sdf::Element::Get(const string&, const T&) const [with T = gazebo::common::Color; std::__cxx11::string = std::__cxx11::basic_string<char>]\u2019\n/usr/include/sdformat-6.0/sdf/Element.hh:429:55:   required from \u2018T sdf::Element::Get(const string&) const [with T = gazebo::common::Color; std::__cxx11::string = std::__cxx11::basic_string<char>]\u2019\n/home/louise/code/gazeboA/gazebo/rendering/Visual.cc:487:66:   required from here\n/usr/include/boost/variant/get.hpp:212:5: error: static assertion failed: boost::variant does not contain specified type U, call to boost::get<U>(boost::variant<T...>&) will always throw boost::bad_get exception\n     BOOST_STATIC_ASSERT_MSG(\n     ^\ngazebo/rendering/CMakeFiles/gazebo_rendering.dir/build.make:1142: recipe for target 'gazebo/rendering/CMakeFiles/gazebo_rendering.dir/Visual.cc.o' failed\nmake[2]: *** [gazebo/rendering/CMakeFiles/gazebo_rendering.dir/Visual.cc.o] Error 1\n~~~", "markup": "markdown", "html": "<p>With SDF 6 installed, cmake would configure, but I would see this warning: </p>\n<div class=\"codehilite\"><pre><span></span>CMake Warning at cmake/SearchForStuff.cmake:585 (find_package):\n  Could not find a configuration file for package &quot;SDFormat&quot; that is\n  compatible with requested version &quot;5.0.0&quot;.\n\n  The following configuration files were considered but not accepted:\n\n    /usr/lib/x86_64-linux-gnu/cmake/sdformat/SDFormatConfig.cmake, version: 6.0.0\n    /usr/lib/x86_64-linux-gnu/cmake/sdformat/SDFormatConfig.cmake, version: 6.0.0\n</pre></div>\n\n\n<p>Branch <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/commits/6735bf79b363da7b0989325b2a807abfb9e178f5?at=find_sdf6_louise\" rel=\"nofollow\">find_sdf6_louise</a> has a proposed fix, feel free to merge if you agree.</p>\n<p>Note that Gazebo default is not building against SDF 6:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">In</span> <span class=\"nt\">file</span> <span class=\"nt\">included</span> <span class=\"nt\">from</span> <span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">bind</span><span class=\"o\">/</span><span class=\"nt\">arg</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">24</span><span class=\"p\">:</span><span class=\"nd\">0</span><span class=\"o\">,</span>\n                 <span class=\"nt\">from</span> <span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">bind</span><span class=\"o\">/</span><span class=\"nt\">bind</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">29</span><span class=\"o\">,</span>\n                 <span class=\"nt\">from</span> <span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">bind</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">22</span><span class=\"o\">,</span>\n                 <span class=\"nt\">from</span> <span class=\"o\">/</span><span class=\"nt\">home</span><span class=\"o\">/</span><span class=\"nt\">louise</span><span class=\"o\">/</span><span class=\"nt\">code</span><span class=\"o\">/</span><span class=\"nt\">gazeboA</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">rendering</span><span class=\"o\">/</span><span class=\"nt\">Visual</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">17</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">variant</span><span class=\"o\">/</span><span class=\"nt\">get</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"o\">:</span> <span class=\"nt\">In</span> <span class=\"nt\">instantiation</span> <span class=\"nt\">of</span> <span class=\"err\">\u2018</span><span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">add_reference</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">strict_get</span><span class=\"o\">(</span><span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">variant</span><span class=\"o\">&lt;</span><span class=\"nt\">T0</span><span class=\"o\">,</span> <span class=\"nt\">TN</span> <span class=\"o\">...&gt;&amp;)</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">U</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::common::Color</span><span class=\"p\">;</span> <span class=\"n\">T0</span><span class=\"o\"> =</span> <span class=\"nx\">bool</span><span class=\"p\">;</span> <span class=\"n\">TN</span><span class=\"o\"> =</span> <span class=\"p\">{</span><span class=\"nx\">char</span><span class=\"p\">,</span> <span class=\"nx\">std</span><span class=\"nl\">::__cxx11::basic_string</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"p\">,</span> <span class=\"nx\">std</span><span class=\"nl\">::char_traits</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">std</span><span class=\"nl\">::allocator</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"o\">&gt;</span> <span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">int</span><span class=\"p\">,</span> <span class=\"nx\">long</span> <span class=\"nx\">unsigned</span> <span class=\"nx\">int</span><span class=\"p\">,</span> <span class=\"nx\">unsigned</span> <span class=\"nx\">int</span><span class=\"p\">,</span> <span class=\"nx\">double</span><span class=\"p\">,</span> <span class=\"nx\">float</span><span class=\"p\">,</span> <span class=\"nx\">sdf</span><span class=\"nl\">::Time</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Color</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Vector2</span><span class=\"o\">&lt;</span><span class=\"nx\">int</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Vector2</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Vector3</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Quaternion</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Pose3</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">};</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::add_reference</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::common::Color</span><span class=\"o\">&amp;</span><span class=\"cp\">]</span><span class=\"err\">\u2019</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">variant</span><span class=\"o\">/</span><span class=\"nt\">get</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">284</span><span class=\"p\">:</span><span class=\"nd\">25</span><span class=\"o\">:</span>   <span class=\"nt\">required</span> <span class=\"nt\">from</span> <span class=\"err\">\u2018</span><span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">add_reference</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">get</span><span class=\"o\">(</span><span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">variant</span><span class=\"o\">&lt;</span><span class=\"nt\">T0</span><span class=\"o\">,</span> <span class=\"nt\">TN</span> <span class=\"o\">...&gt;&amp;)</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">U</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::common::Color</span><span class=\"p\">;</span> <span class=\"n\">T0</span><span class=\"o\"> =</span> <span class=\"nx\">bool</span><span class=\"p\">;</span> <span class=\"n\">TN</span><span class=\"o\"> =</span> <span class=\"p\">{</span><span class=\"nx\">char</span><span class=\"p\">,</span> <span class=\"nx\">std</span><span class=\"nl\">::__cxx11::basic_string</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"p\">,</span> <span class=\"nx\">std</span><span class=\"nl\">::char_traits</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">std</span><span class=\"nl\">::allocator</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"o\">&gt;</span> <span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">int</span><span class=\"p\">,</span> <span class=\"nx\">long</span> <span class=\"nx\">unsigned</span> <span class=\"nx\">int</span><span class=\"p\">,</span> <span class=\"nx\">unsigned</span> <span class=\"nx\">int</span><span class=\"p\">,</span> <span class=\"nx\">double</span><span class=\"p\">,</span> <span class=\"nx\">float</span><span class=\"p\">,</span> <span class=\"nx\">sdf</span><span class=\"nl\">::Time</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Color</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Vector2</span><span class=\"o\">&lt;</span><span class=\"nx\">int</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Vector2</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Vector3</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Quaternion</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nx\">ignition</span><span class=\"nl\">::math::Pose3</span><span class=\"o\">&lt;</span><span class=\"nx\">double</span><span class=\"o\">&gt;</span><span class=\"p\">};</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::add_reference</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::common::Color</span><span class=\"o\">&amp;</span><span class=\"cp\">]</span><span class=\"err\">\u2019</span>\n<span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">sdformat-6</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">/</span><span class=\"nt\">sdf</span><span class=\"o\">/</span><span class=\"nt\">Param</span><span class=\"p\">.</span><span class=\"nc\">hh</span><span class=\"p\">:</span><span class=\"nd\">291</span><span class=\"p\">:</span><span class=\"nd\">31</span><span class=\"o\">:</span>   <span class=\"nt\">required</span> <span class=\"nt\">from</span> <span class=\"err\">\u2018</span><span class=\"nt\">bool</span> <span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">Param</span><span class=\"p\">::</span><span class=\"nd\">Get</span><span class=\"o\">(</span><span class=\"nt\">T</span><span class=\"o\">&amp;)</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::common::Color</span><span class=\"cp\">]</span><span class=\"err\">\u2019</span>\n<span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">sdformat-6</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">/</span><span class=\"nt\">sdf</span><span class=\"o\">/</span><span class=\"nt\">Element</span><span class=\"p\">.</span><span class=\"nc\">hh</span><span class=\"p\">:</span><span class=\"nd\">454</span><span class=\"p\">:</span><span class=\"nd\">7</span><span class=\"o\">:</span>   <span class=\"nt\">required</span> <span class=\"nt\">from</span> <span class=\"err\">\u2018</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">pair</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">,</span> <span class=\"nt\">bool</span><span class=\"o\">&gt;</span> <span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">Element</span><span class=\"p\">::</span><span class=\"nd\">Get</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">string</span><span class=\"o\">&amp;,</span> <span class=\"nt\">const</span> <span class=\"nt\">T</span><span class=\"o\">&amp;)</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::common::Color</span><span class=\"p\">;</span> <span class=\"nx\">std</span><span class=\"nl\">::__cxx11::string</span> <span class=\"o\">=</span> <span class=\"nx\">std</span><span class=\"nl\">::__cxx11::basic_string</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"o\">&gt;</span><span class=\"cp\">]</span><span class=\"err\">\u2019</span>\n<span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">sdformat-6</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">/</span><span class=\"nt\">sdf</span><span class=\"o\">/</span><span class=\"nt\">Element</span><span class=\"p\">.</span><span class=\"nc\">hh</span><span class=\"p\">:</span><span class=\"nd\">429</span><span class=\"p\">:</span><span class=\"nd\">55</span><span class=\"o\">:</span>   <span class=\"nt\">required</span> <span class=\"nt\">from</span> <span class=\"err\">\u2018</span><span class=\"nt\">T</span> <span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">Element</span><span class=\"p\">::</span><span class=\"nd\">Get</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">string</span><span class=\"o\">&amp;)</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::common::Color</span><span class=\"p\">;</span> <span class=\"nx\">std</span><span class=\"nl\">::__cxx11::string</span> <span class=\"o\">=</span> <span class=\"nx\">std</span><span class=\"nl\">::__cxx11::basic_string</span><span class=\"o\">&lt;</span><span class=\"nx\">char</span><span class=\"o\">&gt;</span><span class=\"cp\">]</span><span class=\"err\">\u2019</span>\n<span class=\"o\">/</span><span class=\"nt\">home</span><span class=\"o\">/</span><span class=\"nt\">louise</span><span class=\"o\">/</span><span class=\"nt\">code</span><span class=\"o\">/</span><span class=\"nt\">gazeboA</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">rendering</span><span class=\"o\">/</span><span class=\"nt\">Visual</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">487</span><span class=\"p\">:</span><span class=\"nd\">66</span><span class=\"o\">:</span>   <span class=\"nt\">required</span> <span class=\"nt\">from</span> <span class=\"nt\">here</span>\n<span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">variant</span><span class=\"o\">/</span><span class=\"nt\">get</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">212</span><span class=\"p\">:</span><span class=\"nd\">5</span><span class=\"o\">:</span> <span class=\"nt\">error</span><span class=\"o\">:</span> <span class=\"nt\">static</span> <span class=\"nt\">assertion</span> <span class=\"nt\">failed</span><span class=\"o\">:</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">variant</span> <span class=\"nt\">does</span> <span class=\"nt\">not</span> <span class=\"nt\">contain</span> <span class=\"nt\">specified</span> <span class=\"nt\">type</span> <span class=\"nt\">U</span><span class=\"o\">,</span> <span class=\"nt\">call</span> <span class=\"nt\">to</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">get</span><span class=\"o\">&lt;</span><span class=\"nt\">U</span><span class=\"o\">&gt;(</span><span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">variant</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">...&gt;&amp;)</span> <span class=\"nt\">will</span> <span class=\"nt\">always</span> <span class=\"nt\">throw</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">bad_get</span> <span class=\"nt\">exception</span>\n     <span class=\"nt\">BOOST_STATIC_ASSERT_MSG</span><span class=\"o\">(</span>\n     <span class=\"o\">^</span>\n<span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">rendering</span><span class=\"o\">/</span><span class=\"nt\">CMakeFiles</span><span class=\"o\">/</span><span class=\"nt\">gazebo_rendering</span><span class=\"p\">.</span><span class=\"nc\">dir</span><span class=\"o\">/</span><span class=\"nt\">build</span><span class=\"p\">.</span><span class=\"nc\">make</span><span class=\"p\">:</span><span class=\"nd\">1142</span><span class=\"o\">:</span> <span class=\"nt\">recipe</span> <span class=\"nt\">for</span> <span class=\"nt\">target</span> <span class=\"s1\">&#39;gazebo/rendering/CMakeFiles/gazebo_rendering.dir/Visual.cc.o&#39;</span> <span class=\"nt\">failed</span>\n<span class=\"nt\">make</span><span class=\"cp\">[</span><span class=\"mi\">2</span><span class=\"cp\">]</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"cp\">[</span><span class=\"nx\">gazebo</span><span class=\"p\">/</span><span class=\"nx\">rendering</span><span class=\"p\">/</span><span class=\"nx\">CMakeFiles</span><span class=\"p\">/</span><span class=\"nx\">gazebo_rendering.dir</span><span class=\"p\">/</span><span class=\"nx\">Visual.cc.o</span><span class=\"cp\">]</span> <span class=\"nt\">Error</span> <span class=\"nt\">1</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-28T19:03:51.824154+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-07-28T19:03:51.827116+00:00", "type": "pullrequest_comment", "id": 41750922}