{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2713/comments/37132815.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2713/_/diff#comment-37132815"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2713, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2713.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2713"}}, "title": "Fix faulty Bounding Box in Bullet and Dart when collision elements with relative transforms present"}, "content": {"raw": "A few more details for the interested reader ;)\n\nI asked myself, if ``BulletCollision`` does not consider the relative pose, why was it then working in the simulation at all?    \n*Answer:* it seems to only affect the bounding box (though it may affect other functions, e.g. in [OnPoseChange](#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/bullet/BulletCollision.cc?at=default&fileviewer=file-view-default#BulletCollision.cc-67) there strangely is something that was commented out...).    \n*Reason:* In [BulletLink::Init](#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/bullet/BulletLink.cc?fileviewer=file-view-default#BulletLink.cc-131) the collision shape is added to bullet engine as a compound shape, passing the relative pose there. This ensures that the objects are managed with their correct transforms within Bullet internally.\nHowever when just getting the bounding box, [BulletCollision::BoundingBox()](#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/bullet/BulletCollision.cc?fileviewer=file-view-default#BulletCollision.cc-138) does not consider the relative position of the ``Collision`` shape within the compound. Therefore, previous ``Link::BoundingBox()`` returns the wrong values, not considering the transform.\n\nSo how is this done in ODE?\n\n[ODECollision::BoundingBox()](#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/ode/ODECollision.cc?fileviewer=file-view-default#ODECollision.cc-177) uses the ``collisionId`` of the shape added to ODE with ``dGeomGetAABB``. It doesn't explicitly query the relative pose, so it relies on that the relative pose is already encoded in ``collisionId``.\nThis is done in [ODELink::UpdateCollisionOffsets](#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-325). This is called from ``ODELink::Init()``, so it is ensured that it is called in the beginning.", "markup": "markdown", "html": "<p>A few more details for the interested reader ;)</p>\n<p>I asked myself, if <code>BulletCollision</code> does not consider the relative pose, why was it then working in the simulation at all?  <br />\n<em>Answer:</em> it seems to only affect the bounding box (though it may affect other functions, e.g. in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/bullet/BulletCollision.cc?at=default&amp;fileviewer=file-view-default#BulletCollision.cc-67\" rel=\"nofollow\">OnPoseChange</a> there strangely is something that was commented out...).  <br />\n<em>Reason:</em> In <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/bullet/BulletLink.cc?fileviewer=file-view-default#BulletLink.cc-131\" rel=\"nofollow\">BulletLink::Init</a> the collision shape is added to bullet engine as a compound shape, passing the relative pose there. This ensures that the objects are managed with their correct transforms within Bullet internally.\nHowever when just getting the bounding box, <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/bullet/BulletCollision.cc?fileviewer=file-view-default#BulletCollision.cc-138\" rel=\"nofollow\">BulletCollision::BoundingBox()</a> does not consider the relative position of the <code>Collision</code> shape within the compound. Therefore, previous <code>Link::BoundingBox()</code> returns the wrong values, not considering the transform.</p>\n<p>So how is this done in ODE?</p>\n<p><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/ode/ODECollision.cc?fileviewer=file-view-default#ODECollision.cc-177\" rel=\"nofollow\">ODECollision::BoundingBox()</a> uses the <code>collisionId</code> of the shape added to ODE with <code>dGeomGetAABB</code>. It doesn't explicitly query the relative pose, so it relies on that the relative pose is already encoded in <code>collisionId</code>.\nThis is done in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/ode/ODELink.cc?fileviewer=file-view-default#ODELink.cc-325\" rel=\"nofollow\">ODELink::UpdateCollisionOffsets</a>. This is called from <code>ODELink::Init()</code>, so it is ensured that it is called in the beginning.</p>", "type": "rendered"}, "created_on": "2017-05-18T08:43:25.723251+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": "2017-05-18T08:43:25.872486+00:00", "type": "pullrequest_comment", "id": 37132815}