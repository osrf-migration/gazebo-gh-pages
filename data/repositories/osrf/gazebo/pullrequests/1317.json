{"rendered": {"description": {"raw": "This enables Coulomb joint friction for BulletHingeJoint, which is part of #1348 (the rest would be BulletSliderJoint and BulletUniversalJoint).\r\n\r\nI'll describe this pull request based on its 4 commits:\r\n\r\n c16db73: enable joint friction test for bullet, which fails\r\n\r\n7d84070: Implement Coulomb joint friction for BulletHingeJoint. The creates overloaded `BulletHingeJoint::[GS]etParam` functions, which are needed since the API for setting friction is different for each bullet joint. Bullet actually takes an impulse instead of a torque, so it is required to scale the friction according to the time step size.\r\n\r\n316528c: Add `[GS]etParam` functions for BulletSliderJoint and BulletUniversal joint now while ABI is changeable. I also tried to implement friction for the slider joint, but it's not yet working.\r\n\r\n63a1389: Add `Joint::GetJointType`, which can be used with `msgs::ConvertJointType` to get a string representation of the joint type. I added this because it was not straightforward to get the joint type as a string any other way. The function is tested and used in a console message in `INTEGRATION_joint_spawn`.", "markup": "markdown", "html": "<p>This enables Coulomb joint friction for BulletHingeJoint, which is part of <a href=\"#!/osrf/gazebo/issues/1348/implement-coulomb-joint-friction-in\" rel=\"nofollow\" title=\"Implement Coulomb joint friction in BulletUniversalJoint\" class=\"ap-connect-link\">#1348</a> (the rest would be BulletSliderJoint and BulletUniversalJoint).</p>\n<p>I'll describe this pull request based on its 4 commits:</p>\n<p><a href=\"#!/osrf/gazebo/commits/c16db73\" rel=\"nofollow\" class=\"ap-connect-link\">c16db73</a>: enable joint friction test for bullet, which fails</p>\n<p><a href=\"#!/osrf/gazebo/commits/7d84070\" rel=\"nofollow\" class=\"ap-connect-link\">7d84070</a>: Implement Coulomb joint friction for BulletHingeJoint. The creates overloaded <code>BulletHingeJoint::[GS]etParam</code> functions, which are needed since the API for setting friction is different for each bullet joint. Bullet actually takes an impulse instead of a torque, so it is required to scale the friction according to the time step size.</p>\n<p><a href=\"#!/osrf/gazebo/commits/316528c\" rel=\"nofollow\" class=\"ap-connect-link\">316528c</a>: Add <code>[GS]etParam</code> functions for BulletSliderJoint and BulletUniversal joint now while ABI is changeable. I also tried to implement friction for the slider joint, but it's not yet working.</p>\n<p><a href=\"#!/osrf/gazebo/commits/63a1389\" rel=\"nofollow\" class=\"ap-connect-link\">63a1389</a>: Add <code>Joint::GetJointType</code>, which can be used with <code>msgs::ConvertJointType</code> to get a string representation of the joint type. I added this because it was not straightforward to get the joint type as a string any other way. The function is tested and used in a console message in <code>INTEGRATION_joint_spawn</code>.</p>", "type": "rendered"}, "title": {"raw": "Enable joint friction for BulletHingeJoint (part of #1348)", "markup": "markdown", "html": "<p>Enable joint friction for BulletHingeJoint (part of <a href=\"#!/osrf/gazebo/issues/1348/implement-coulomb-joint-friction-in\" rel=\"nofollow\" title=\"Implement Coulomb joint friction in BulletUniversalJoint\" class=\"ap-connect-link\">#1348</a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This enables Coulomb joint friction for BulletHingeJoint, which is part of #1348 (the rest would be BulletSliderJoint and BulletUniversalJoint).\r\n\r\nI'll describe this pull request based on its 4 commits:\r\n\r\n c16db73: enable joint friction test for bullet, which fails\r\n\r\n7d84070: Implement Coulomb joint friction for BulletHingeJoint. The creates overloaded `BulletHingeJoint::[GS]etParam` functions, which are needed since the API for setting friction is different for each bullet joint. Bullet actually takes an impulse instead of a torque, so it is required to scale the friction according to the time step size.\r\n\r\n316528c: Add `[GS]etParam` functions for BulletSliderJoint and BulletUniversal joint now while ABI is changeable. I also tried to implement friction for the slider joint, but it's not yet working.\r\n\r\n63a1389: Add `Joint::GetJointType`, which can be used with `msgs::ConvertJointType` to get a string representation of the joint type. I added this because it was not straightforward to get the joint type as a string any other way. The function is tested and used in a console message in `INTEGRATION_joint_spawn`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1317/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:b133ca654d73%0D5057aa8f5a57?from_pullrequest_id=1317"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/1317/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/1317.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/1317/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1317/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1317"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/1317/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:b133ca654d73%0D5057aa8f5a57?from_pullrequest_id=1317"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/1317/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/1317/statuses_page=1.json"}}, "title": "Enable joint friction for BulletHingeJoint (part of #1348)", "close_source_branch": true, "reviewers": [], "id": 1317, "destination": {"commit": {"hash": "5057aa8f5a57", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5057aa8f5a57.json"}, "html": {"href": "#!/osrf/gazebo/commits/5057aa8f5a57"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2014-12-02T20:30:26.378676+00:00", "summary": {"raw": "This enables Coulomb joint friction for BulletHingeJoint, which is part of #1348 (the rest would be BulletSliderJoint and BulletUniversalJoint).\r\n\r\nI'll describe this pull request based on its 4 commits:\r\n\r\n c16db73: enable joint friction test for bullet, which fails\r\n\r\n7d84070: Implement Coulomb joint friction for BulletHingeJoint. The creates overloaded `BulletHingeJoint::[GS]etParam` functions, which are needed since the API for setting friction is different for each bullet joint. Bullet actually takes an impulse instead of a torque, so it is required to scale the friction according to the time step size.\r\n\r\n316528c: Add `[GS]etParam` functions for BulletSliderJoint and BulletUniversal joint now while ABI is changeable. I also tried to implement friction for the slider joint, but it's not yet working.\r\n\r\n63a1389: Add `Joint::GetJointType`, which can be used with `msgs::ConvertJointType` to get a string representation of the joint type. I added this because it was not straightforward to get the joint type as a string any other way. The function is tested and used in a console message in `INTEGRATION_joint_spawn`.", "markup": "markdown", "html": "<p>This enables Coulomb joint friction for BulletHingeJoint, which is part of <a href=\"#!/osrf/gazebo/issues/1348/implement-coulomb-joint-friction-in\" rel=\"nofollow\" title=\"Implement Coulomb joint friction in BulletUniversalJoint\" class=\"ap-connect-link\">#1348</a> (the rest would be BulletSliderJoint and BulletUniversalJoint).</p>\n<p>I'll describe this pull request based on its 4 commits:</p>\n<p><a href=\"#!/osrf/gazebo/commits/c16db73\" rel=\"nofollow\" class=\"ap-connect-link\">c16db73</a>: enable joint friction test for bullet, which fails</p>\n<p><a href=\"#!/osrf/gazebo/commits/7d84070\" rel=\"nofollow\" class=\"ap-connect-link\">7d84070</a>: Implement Coulomb joint friction for BulletHingeJoint. The creates overloaded <code>BulletHingeJoint::[GS]etParam</code> functions, which are needed since the API for setting friction is different for each bullet joint. Bullet actually takes an impulse instead of a torque, so it is required to scale the friction according to the time step size.</p>\n<p><a href=\"#!/osrf/gazebo/commits/316528c\" rel=\"nofollow\" class=\"ap-connect-link\">316528c</a>: Add <code>[GS]etParam</code> functions for BulletSliderJoint and BulletUniversal joint now while ABI is changeable. I also tried to implement friction for the slider joint, but it's not yet working.</p>\n<p><a href=\"#!/osrf/gazebo/commits/63a1389\" rel=\"nofollow\" class=\"ap-connect-link\">63a1389</a>: Add <code>Joint::GetJointType</code>, which can be used with <code>msgs::ConvertJointType</code> to get a string representation of the joint type. I added this because it was not straightforward to get the joint type as a string any other way. The function is tested and used in a console message in <code>INTEGRATION_joint_spawn</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "cd5cb81d9897", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/cd5cb81d9897.json"}, "html": {"href": "#!/osrf/gazebo/commits/cd5cb81d9897"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_1348"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-12-15T20:23:45.084728+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-12-16T20:01:25.564174+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2014-12-15T20:05:41.764046+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2014-12-16T20:09:16.493398+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "b133ca654d73", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/b133ca654d73.json"}, "html": {"href": "#!/osrf/gazebo/commits/b133ca654d73"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}