{"pagelen": 50, "values": [{"update": {"description": "*  Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.\r\n\r\nCurrently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.\r\n\r\nCurrently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.\r\n\r\nHave the build running on my local machine without issues & passing tests. Happy to make any minor changes.", "title": "Allow models to be loaded from an external webserver", "destination": {"commit": {"hash": "55627fc420a4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/55627fc420a4.json"}, "html": {"href": "#!/osrf/gazebo/commits/55627fc420a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "model_path_http"}}, "state": "DECLINED", "author": {"display_name": "Christopher McDermott", "uuid": "{0dd9952c-ba5b-4573-b06f-af0416c866c7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D"}, "html": {"href": "https://bitbucket.org/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b536732359cd5133df52ee41200e03c4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCM-6.png"}}, "nickname": "derme302", "type": "user", "account_id": "5a9f02212647632a1feb9910"}, "date": "2018-03-15T01:42:32.491540+00:00"}, "pull_request": {"type": "pullrequest", "id": 2920, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920"}}, "title": "Allow models to be loaded from an external webserver"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920/comments/58823392.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920/_/diff#comment-58823392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2920, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920"}}, "title": "Allow models to be loaded from an external webserver"}, "content": {"raw": "Thank you for the pull request!\n\nI was wondering if you were familiar with [Ignition Fuel](https://ignitionfuel.org/information)? The long-term plan is to deprecate the current `ModelDatabase` in favor of models hosted on Fuel servers. I'm curious to learn about your use case for handling HTTP URIs to see how it could best fit within the new approach.\n\nAlso, could you explain the steps to reproduce the issue with blank models? Do you have a `tar.gz` file hosted in a public URL I could try out?", "markup": "markdown", "html": "<p>Thank you for the pull request!</p>\n<p>I was wondering if you were familiar with <a data-is-external-link=\"true\" href=\"https://ignitionfuel.org/information\" rel=\"nofollow\">Ignition Fuel</a>? The long-term plan is to deprecate the current <code>ModelDatabase</code> in favor of models hosted on Fuel servers. I'm curious to learn about your use case for handling HTTP URIs to see how it could best fit within the new approach.</p>\n<p>Also, could you explain the steps to reproduce the issue with blank models? Do you have a <code>tar.gz</code> file hosted in a public URL I could try out?</p>", "type": "rendered"}, "created_on": "2018-03-14T15:06:18.742958+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-03-14T15:06:18.747833+00:00", "type": "pullrequest_comment", "id": 58823392}, "pull_request": {"type": "pullrequest", "id": 2920, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920"}}, "title": "Allow models to be loaded from an external webserver"}}, {"update": {"description": "*  Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.\r\n\r\nCurrently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.\r\n\r\nCurrently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.\r\n\r\nHave the build running on my local machine without issues & passing tests. Happy to make any minor changes.", "title": "Allow models to be loaded from an external webserver", "destination": {"commit": {"hash": "55627fc420a4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/55627fc420a4.json"}, "html": {"href": "#!/osrf/gazebo/commits/55627fc420a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "model_path_http"}}, "state": "OPEN", "author": {"display_name": "Christopher McDermott", "uuid": "{0dd9952c-ba5b-4573-b06f-af0416c866c7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D"}, "html": {"href": "https://bitbucket.org/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b536732359cd5133df52ee41200e03c4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCM-6.png"}}, "nickname": "derme302", "type": "user", "account_id": "5a9f02212647632a1feb9910"}, "date": "2018-03-14T00:14:42.238404+00:00"}, "pull_request": {"type": "pullrequest", "id": 2920, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920"}}, "title": "Allow models to be loaded from an external webserver"}}, {"update": {"description": "*  Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.\r\n\r\nCurrently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.\r\n\r\nCurrently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.\r\n\r\nHave the build running on my local machine without issues & passing tests. Happy to make any minor changes.", "title": "Allow models to be loaded from an external webserver", "destination": {"commit": {"hash": "55627fc420a4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/55627fc420a4.json"}, "html": {"href": "#!/osrf/gazebo/commits/55627fc420a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "model_path_http"}}, "state": "OPEN", "author": {"display_name": "Christopher McDermott", "uuid": "{0dd9952c-ba5b-4573-b06f-af0416c866c7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D"}, "html": {"href": "https://bitbucket.org/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b536732359cd5133df52ee41200e03c4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCM-6.png"}}, "nickname": "derme302", "type": "user", "account_id": "5a9f02212647632a1feb9910"}, "date": "2018-03-13T23:58:05.696497+00:00"}, "pull_request": {"type": "pullrequest", "id": 2920, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920"}}, "title": "Allow models to be loaded from an external webserver"}}, {"update": {"description": "*  Changed  ModelDatabase::GetModelPath so that it operates as described in the docs to allow models to be pulled from remote servers.\r\n\r\nCurrently passing a  stl or obj by a HTTP or HTTPS request isn't caught by SystemPaths::FindFileURI(). This is a minor change to allow that request to be passed to the ModelDatabase.\r\n\r\nCurrently there is one issue - passing a package (tar.gz) will result in a blank model when it's not coming from the gazebo model database.  I've searched the code, but can't find the area that deals with searching the model tree when a new package is added. Some direction in this area would be appreciated.\r\n\r\nHave the build running on my local machine without issues & passing tests. Happy to make any minor changes.", "title": "Allow models to be loaded from an external webserver", "destination": {"commit": {"hash": "55627fc420a4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/55627fc420a4.json"}, "html": {"href": "#!/osrf/gazebo/commits/55627fc420a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "model_path_http"}}, "state": "OPEN", "author": {"display_name": "Christopher McDermott", "uuid": "{0dd9952c-ba5b-4573-b06f-af0416c866c7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D"}, "html": {"href": "https://bitbucket.org/%7B0dd9952c-ba5b-4573-b06f-af0416c866c7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b536732359cd5133df52ee41200e03c4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCM-6.png"}}, "nickname": "derme302", "type": "user", "account_id": "5a9f02212647632a1feb9910"}, "date": "2018-03-13T23:58:05.651819+00:00"}, "pull_request": {"type": "pullrequest", "id": 2920, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/2920.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2920"}}, "title": "Allow models to be loaded from an external webserver"}}]}