{"rendered": {"description": {"raw": "This was split out from pull request #2502 (synchronize physics and sensor updates). This adds an API for directly updating object poses in a Scene instead of using the `~/pose/local/info` transport topic, which should reduce latency and improve determinism. To avoid a dependency relationship between physics and sensors, the `rendering::update_scene_poses(...)` function is passed by `gazebo::Server` as a `std::function` to physics when initializing a world. I made the `std::function` an optional parameter that defaults to `nullptr` to preserve API. Alternatively we could overload the function and deprecate the one that doesn't take a `std::function`?", "markup": "markdown", "html": "<p>This was split out from <a href=\"#!/osrf/gazebo/pull-requests/2502/make-sure-cameras-fps-is-strictly-applied\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2502</a> (synchronize physics and sensor updates). This adds an API for directly updating object poses in a Scene instead of using the <code>~/pose/local/info</code> transport topic, which should reduce latency and improve determinism. To avoid a dependency relationship between physics and sensors, the <code>rendering::update_scene_poses(...)</code> function is passed by <code>gazebo::Server</code> as a <code>std::function</code> to physics when initializing a world. I made the <code>std::function</code> an optional parameter that defaults to <code>nullptr</code> to preserve API. Alternatively we could overload the function and deprecate the one that doesn't take a <code>std::function</code>?</p>", "type": "rendered"}, "title": {"raw": "Use direct API call to Scene::SetPoseMsg to update poses from physics for server-side rendering", "markup": "markdown", "html": "<p>Use direct API call to Scene::SetPoseMsg to update poses from physics for server-side rendering</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This was split out from pull request #2502 (synchronize physics and sensor updates). This adds an API for directly updating object poses in a Scene instead of using the `~/pose/local/info` transport topic, which should reduce latency and improve determinism. To avoid a dependency relationship between physics and sensors, the `rendering::update_scene_poses(...)` function is passed by `gazebo::Server` as a `std::function` to physics when initializing a world. I made the `std::function` an optional parameter that defaults to `nullptr` to preserve API. Alternatively we could overload the function and deprecate the one that doesn't take a `std::function`?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3180/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:70b88a4ad735%0Dd91e5308eee3?from_pullrequest_id=3180"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/3180/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/3180.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/3180/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3180/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/3180"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/3180/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:70b88a4ad735%0Dd91e5308eee3?from_pullrequest_id=3180"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/3180/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/3180/statuses_page=1.json"}}, "title": "Use direct API call to Scene::SetPoseMsg to update poses from physics for server-side rendering", "close_source_branch": true, "reviewers": [{"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}], "id": 3180, "destination": {"commit": {"hash": "d91e5308eee3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/d91e5308eee3.json"}, "html": {"href": "#!/osrf/gazebo/commits/d91e5308eee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2020-01-22T11:34:31.383667+00:00", "summary": {"raw": "This was split out from pull request #2502 (synchronize physics and sensor updates). This adds an API for directly updating object poses in a Scene instead of using the `~/pose/local/info` transport topic, which should reduce latency and improve determinism. To avoid a dependency relationship between physics and sensors, the `rendering::update_scene_poses(...)` function is passed by `gazebo::Server` as a `std::function` to physics when initializing a world. I made the `std::function` an optional parameter that defaults to `nullptr` to preserve API. Alternatively we could overload the function and deprecate the one that doesn't take a `std::function`?", "markup": "markdown", "html": "<p>This was split out from <a href=\"#!/osrf/gazebo/pull-requests/2502/make-sure-cameras-fps-is-strictly-applied\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2502</a> (synchronize physics and sensor updates). This adds an API for directly updating object poses in a Scene instead of using the <code>~/pose/local/info</code> transport topic, which should reduce latency and improve determinism. To avoid a dependency relationship between physics and sensors, the <code>rendering::update_scene_poses(...)</code> function is passed by <code>gazebo::Server</code> as a <code>std::function</code> to physics when initializing a world. I made the <code>std::function</code> an optional parameter that defaults to <code>nullptr</code> to preserve API. Alternatively we could overload the function and deprecate the one that doesn't take a <code>std::function</code>?</p>", "type": "rendered"}, "source": {"commit": {"hash": "655b35ffdace", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/655b35ffdace.json"}, "html": {"href": "#!/osrf/gazebo/commits/655b35ffdace"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "respect_fps_1_set_pose_msg"}}, "comment_count": 18, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2020-01-23T19:21:18.804086+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2020-01-23T00:34:08.389580+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "REVIEWER", "participated_on": "2020-01-23T01:16:04.295965+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2020-01-23T23:08:57.467376+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "70b88a4ad735", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/70b88a4ad735.json"}, "html": {"href": "#!/osrf/gazebo/commits/70b88a4ad735"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}