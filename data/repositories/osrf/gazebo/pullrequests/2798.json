{"rendered": {"description": {"raw": "These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.\r\n\r\nFor some background on diagnostics, there are some macros defined in [Diagnostics.hh](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&fileviewer=file-view-default#Diagnostics.hh-47) that are used to insert diagnostic timers into various parts of gazebo (such as [physics::World::Update](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&fileviewer=file-view-default#World.cc-739)). If the symbol `ENABLE_DIAGNOSTICS` is not defined, these macros are no-ops; otherwise, they correspond to API calls to the `DiagnosticManager` class.\r\n\r\n* The Diagnostics has been effectively disabled unless the `ENABLE_DIAGNOSTICS` macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in 4e38fc4 and fixed some deprecation warnings.\r\n* Use a pointer reset() instead of Disconnect function for an event connection in fb6c32d\r\n* An empty time-stamped folder has been created in `~/.gazebo/diagnostics` for every time you launch gazebo, even if diagnostics are disabled. In d8a59f6, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running `UNIT_Diagnostics_TEST` should still create a folder created with a file called `test.log`.\r\n\r\nUPDATE:\r\n\r\n* I added an standalone example that uses the diagnostic macros in 3025537", "markup": "markdown", "html": "<p>These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.</p>\n<p>For some background on diagnostics, there are some macros defined in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&amp;fileviewer=file-view-default#Diagnostics.hh-47\" rel=\"nofollow\">Diagnostics.hh</a> that are used to insert diagnostic timers into various parts of gazebo (such as <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&amp;fileviewer=file-view-default#World.cc-739\" rel=\"nofollow\">physics::World::Update</a>). If the symbol <code>ENABLE_DIAGNOSTICS</code> is not defined, these macros are no-ops; otherwise, they correspond to API calls to the <code>DiagnosticManager</code> class.</p>\n<ul>\n<li>The Diagnostics has been effectively disabled unless the <code>ENABLE_DIAGNOSTICS</code> macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in <a href=\"#!/osrf/gazebo/commits/4e38fc4\" rel=\"nofollow\" class=\"ap-connect-link\">4e38fc4</a> and fixed some deprecation warnings.</li>\n<li>Use a pointer reset() instead of Disconnect function for an event connection in <a href=\"#!/osrf/gazebo/commits/fb6c32d\" rel=\"nofollow\" class=\"ap-connect-link\">fb6c32d</a></li>\n<li>An empty time-stamped folder has been created in <code>~/.gazebo/diagnostics</code> for every time you launch gazebo, even if diagnostics are disabled. In <a href=\"#!/osrf/gazebo/commits/d8a59f6\" rel=\"nofollow\" class=\"ap-connect-link\">d8a59f6</a>, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running <code>UNIT_Diagnostics_TEST</code> should still create a folder created with a file called <code>test.log</code>.</li>\n</ul>\n<p>UPDATE:</p>\n<ul>\n<li>I added an standalone example that uses the diagnostic macros in <a href=\"#!/osrf/gazebo/commits/3025537\" rel=\"nofollow\" class=\"ap-connect-link\">3025537</a></li>\n</ul>", "type": "rendered"}, "title": {"raw": "Diagnostics: enable test and don't create so many empty folders", "markup": "markdown", "html": "<p>Diagnostics: enable test and don't create so many empty folders</p>", "type": "rendered"}}, "type": "pullrequest", "description": "These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.\r\n\r\nFor some background on diagnostics, there are some macros defined in [Diagnostics.hh](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&fileviewer=file-view-default#Diagnostics.hh-47) that are used to insert diagnostic timers into various parts of gazebo (such as [physics::World::Update](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&fileviewer=file-view-default#World.cc-739)). If the symbol `ENABLE_DIAGNOSTICS` is not defined, these macros are no-ops; otherwise, they correspond to API calls to the `DiagnosticManager` class.\r\n\r\n* The Diagnostics has been effectively disabled unless the `ENABLE_DIAGNOSTICS` macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in 4e38fc4 and fixed some deprecation warnings.\r\n* Use a pointer reset() instead of Disconnect function for an event connection in fb6c32d\r\n* An empty time-stamped folder has been created in `~/.gazebo/diagnostics` for every time you launch gazebo, even if diagnostics are disabled. In d8a59f6, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running `UNIT_Diagnostics_TEST` should still create a folder created with a file called `test.log`.\r\n\r\nUPDATE:\r\n\r\n* I added an standalone example that uses the diagnostic macros in 3025537", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2798/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:5d175791f71e%0D4ec26fcd8987?from_pullrequest_id=2798"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2798.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2798/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2798"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:5d175791f71e%0D4ec26fcd8987?from_pullrequest_id=2798"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2798/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2798/statuses_page=1.json"}}, "title": "Diagnostics: enable test and don't create so many empty folders", "close_source_branch": true, "reviewers": [{"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}], "id": 2798, "destination": {"commit": {"hash": "4ec26fcd8987", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/4ec26fcd8987.json"}, "html": {"href": "#!/osrf/gazebo/commits/4ec26fcd8987"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2017-11-03T20:03:21.326301+00:00", "summary": {"raw": "These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.\r\n\r\nFor some background on diagnostics, there are some macros defined in [Diagnostics.hh](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&fileviewer=file-view-default#Diagnostics.hh-47) that are used to insert diagnostic timers into various parts of gazebo (such as [physics::World::Update](#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&fileviewer=file-view-default#World.cc-739)). If the symbol `ENABLE_DIAGNOSTICS` is not defined, these macros are no-ops; otherwise, they correspond to API calls to the `DiagnosticManager` class.\r\n\r\n* The Diagnostics has been effectively disabled unless the `ENABLE_DIAGNOSTICS` macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in 4e38fc4 and fixed some deprecation warnings.\r\n* Use a pointer reset() instead of Disconnect function for an event connection in fb6c32d\r\n* An empty time-stamped folder has been created in `~/.gazebo/diagnostics` for every time you launch gazebo, even if diagnostics are disabled. In d8a59f6, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running `UNIT_Diagnostics_TEST` should still create a folder created with a file called `test.log`.\r\n\r\nUPDATE:\r\n\r\n* I added an standalone example that uses the diagnostic macros in 3025537", "markup": "markdown", "html": "<p>These are some small changes to the Diagnostics class that I've separated from a larger pull request that changes the diagnostics file format.</p>\n<p>For some background on diagnostics, there are some macros defined in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/util/Diagnostics.hh?at=default&amp;fileviewer=file-view-default#Diagnostics.hh-47\" rel=\"nofollow\">Diagnostics.hh</a> that are used to insert diagnostic timers into various parts of gazebo (such as <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/a3eb517b0fa58d230f87e5dadf5976b1d4f1d3c9/gazebo/physics/World.cc?at=default&amp;fileviewer=file-view-default#World.cc-739\" rel=\"nofollow\">physics::World::Update</a>). If the symbol <code>ENABLE_DIAGNOSTICS</code> is not defined, these macros are no-ops; otherwise, they correspond to API calls to the <code>DiagnosticManager</code> class.</p>\n<ul>\n<li>The Diagnostics has been effectively disabled unless the <code>ENABLE_DIAGNOSTICS</code> macro is defined, but that is not necessary, since it isn't using any of the special macros. So I've enabled it in <a href=\"#!/osrf/gazebo/commits/4e38fc4\" rel=\"nofollow\" class=\"ap-connect-link\">4e38fc4</a> and fixed some deprecation warnings.</li>\n<li>Use a pointer reset() instead of Disconnect function for an event connection in <a href=\"#!/osrf/gazebo/commits/fb6c32d\" rel=\"nofollow\" class=\"ap-connect-link\">fb6c32d</a></li>\n<li>An empty time-stamped folder has been created in <code>~/.gazebo/diagnostics</code> for every time you launch gazebo, even if diagnostics are disabled. In <a href=\"#!/osrf/gazebo/commits/d8a59f6\" rel=\"nofollow\" class=\"ap-connect-link\">d8a59f6</a>, I update the logic so it doesn't create timestamped diagnostics folders unless diagnostic timers are actually created. You should now be able to run gzserver on this branch without seeing any new diagnostics folders, but running <code>UNIT_Diagnostics_TEST</code> should still create a folder created with a file called <code>test.log</code>.</li>\n</ul>\n<p>UPDATE:</p>\n<ul>\n<li>I added an standalone example that uses the diagnostic macros in <a href=\"#!/osrf/gazebo/commits/3025537\" rel=\"nofollow\" class=\"ap-connect-link\">3025537</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "9f23806cae43", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/9f23806cae43.json"}, "html": {"href": "#!/osrf/gazebo/commits/9f23806cae43"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "diagnostics_part1"}}, "comment_count": 15, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2017-11-10T23:43:55.431916+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-11-08T05:51:02.686641+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-11-08T02:58:45.656986+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2017-11-10T23:49:55.259656+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "5d175791f71e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/5d175791f71e.json"}, "html": {"href": "#!/osrf/gazebo/commits/5d175791f71e"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}