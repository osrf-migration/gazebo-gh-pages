{"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1721/comments/13475254.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1721/_/diff#comment-13475254"}}, "parent": {"id": 13278641, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1721/comments/13278641.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1721/_/diff#comment-13278641"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1721, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1721.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1721"}}, "title": "cache joint force torque for ode and dart"}, "content": {"raw": "I tried to investigate the intermittent test failures on `REGRESSION_940__force_torque_sensor_frame`, \nand I verified that the correct force torque value is cached, but for some reason the FT returned by the sensor is wrong. \nI did not have time of investigate more, but my impression is that until a proper synchronization between the physics and the sensor thread is implemented,\na lot of confusing bugs like this will arise. \n\nA possible solution that came to my mind for not computationally intensive sensors with a high update rate (such as IMUs, FT, Magnetometer, Altimeter, etc)\n is to move them to a new `SensorCategory`, and simulate them directly in the physics loop, after the physics update. \nThis would improve time determinism (for issues like #!/osrf/gazebo/issues/1819/delay-on-imu-orientation-measurement and #!/osrf/gazebo_design/issues/1/model-time-synchronization-errors-in) that may be fundamental if someone is simulating the effect of noise on clock measurements (see #!/osrf/gazebo_design/pull-requests/19/improve-sensor-noise-models/diff). \nAll other (computationally intensive) sensors that actually need to run on other threads will then instead need to implement proper synchronization, either by getting data from the transport or using classical synchronization mechanism if the call directly the physics API.  ", "markup": "markdown", "html": "<p>I tried to investigate the intermittent test failures on <code>REGRESSION_940__force_torque_sensor_frame</code>, \nand I verified that the correct force torque value is cached, but for some reason the FT returned by the sensor is wrong. \nI did not have time of investigate more, but my impression is that until a proper synchronization between the physics and the sensor thread is implemented,\na lot of confusing bugs like this will arise. </p>\n<p>A possible solution that came to my mind for not computationally intensive sensors with a high update rate (such as IMUs, FT, Magnetometer, Altimeter, etc)\n is to move them to a new <code>SensorCategory</code>, and simulate them directly in the physics loop, after the physics update. \nThis would improve time determinism (for issues like <a href=\"#!/osrf/gazebo/issues/1819/delay-on-imu-orientation-measurement\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/issues/1819/delay-on-imu-orientation-measurement</a> and <a href=\"#!/osrf/gazebo_design/issues/1/model-time-synchronization-errors-in\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo_design/issues/1/model-time-synchronization-errors-in</a>) that may be fundamental if someone is simulating the effect of noise on clock measurements (see <a href=\"#!/osrf/gazebo_design/pull-requests/19/improve-sensor-noise-models/diff\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo_design/pull-requests/19/improve-sensor-noise-models/diff</a>). \nAll other (computationally intensive) sensors that actually need to run on other threads will then instead need to implement proper synchronization, either by getting data from the transport or using classical synchronization mechanism if the call directly the physics API.  </p>", "type": "rendered"}, "created_on": "2016-01-14T09:16:18.756558+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2016-01-14T10:52:51.771095+00:00", "type": "pullrequest_comment", "id": 13475254}