{"pagelen": 50, "values": [{"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/): no unexpected failures", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "98d392eeb1b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/98d392eeb1b3.json"}, "html": {"href": "#!/osrf/gazebo/commits/98d392eeb1b3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f50b933abe3d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f50b933abe3d.json"}, "html": {"href": "#!/osrf/gazebo/commits/f50b933abe3d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "MERGED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2014-11-03T21:30:00.894790+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"approval": {"date": "2014-11-03T21:29:32.755882+00:00", "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3664163.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3664163"}}, "parent": {"id": 3662657, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3662657.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3662657"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "jenkins is clean", "markup": "markdown", "html": "<p>jenkins is clean</p>", "type": "rendered"}, "created_on": "2014-10-30T00:13:36.460699+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-10-30T00:13:36.470853+00:00", "type": "pullrequest_comment", "id": 3664163}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/): no unexpected failures", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "f66dd8f07ea2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f66dd8f07ea2.json"}, "html": {"href": "#!/osrf/gazebo/commits/f66dd8f07ea2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f50b933abe3d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f50b933abe3d.json"}, "html": {"href": "#!/osrf/gazebo/commits/f50b933abe3d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-30T00:13:11.318644+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3662657.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3662657"}}, "parent": {"id": 3662644, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3662644.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3662644"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/", "markup": "markdown", "html": "<p><a href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/</a></p>", "type": "rendered"}, "created_on": "2014-10-29T21:51:32.048439+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-10-29T21:51:32.060442+00:00", "type": "pullrequest_comment", "id": 3662657}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/271/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "f66dd8f07ea2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f66dd8f07ea2.json"}, "html": {"href": "#!/osrf/gazebo/commits/f66dd8f07ea2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f50b933abe3d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f50b933abe3d.json"}, "html": {"href": "#!/osrf/gazebo/commits/f50b933abe3d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-29T21:51:25.745693+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/270/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "f66dd8f07ea2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f66dd8f07ea2.json"}, "html": {"href": "#!/osrf/gazebo/commits/f66dd8f07ea2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f50b933abe3d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f50b933abe3d.json"}, "html": {"href": "#!/osrf/gazebo/commits/f50b933abe3d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-29T21:51:12.289701+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3662644.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3662644"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "Several tests failed in the [last Jenkins build](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/270/) since I hadn't merged with default to get the fix from pull request #1232. I'm merging with default and then will make one final jenkins build", "markup": "markdown", "html": "<p>Several tests failed in the <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/270/\" rel=\"nofollow\">last Jenkins build</a> since I hadn't merged with default to get the fix from <a href=\"#!/osrf/gazebo/pull-requests/1232/kill-rogue-gzservers-left-over-from-failed\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1232</a>. I'm merging with default and then will make one final jenkins build</p>", "type": "rendered"}, "created_on": "2014-10-29T21:50:31.199898+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-10-29T21:50:31.207302+00:00", "type": "pullrequest_comment", "id": 3662644}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\njenkins\r\n\r\n* [no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n* [newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)\r\n\r\n* [final jenkins build](http://build.osrfoundation.org/view/gazebo/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/270/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "f66dd8f07ea2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f66dd8f07ea2.json"}, "html": {"href": "#!/osrf/gazebo/commits/f66dd8f07ea2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "35326eef557e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/35326eef557e.json"}, "html": {"href": "#!/osrf/gazebo/commits/35326eef557e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-29T20:07:53.494041+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\n[no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n[newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "f66dd8f07ea2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f66dd8f07ea2.json"}, "html": {"href": "#!/osrf/gazebo/commits/f66dd8f07ea2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "35326eef557e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/35326eef557e.json"}, "html": {"href": "#!/osrf/gazebo/commits/35326eef557e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-29T20:06:38.353764+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in\r\n[this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf), thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\n[no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n[newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "f66dd8f07ea2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f66dd8f07ea2.json"}, "html": {"href": "#!/osrf/gazebo/commits/f66dd8f07ea2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "57a015fdea7e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57a015fdea7e.json"}, "html": {"href": "#!/osrf/gazebo/commits/57a015fdea7e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-29T18:56:29.153623+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3659997.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3659997"}}, "parent": {"id": 3637581, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3637581.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3637581"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "57a015fdea7e: added list of valid parameters in Joint.hh, added deprecation warning when trying to Set `fmax` or `vel` parameters.", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo/commits/57a015fdea7e\" rel=\"nofollow\" class=\"ap-connect-link\">57a015fdea7e</a>: added list of valid parameters in Joint.hh, added deprecation warning when trying to Set <code>fmax</code> or <code>vel</code> parameters.</p>", "type": "rendered"}, "created_on": "2014-10-29T18:55:35.968904+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-10-29T18:55:35.977114+00:00", "type": "pullrequest_comment", "id": 3659997}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3659977.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3659977"}}, "parent": {"id": 3637282, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3637282.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3637282"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "expanded in 57a015fdea7e. I didn't touch the other duplicate error messages; I will do that in a separate refactoring pull request.", "markup": "markdown", "html": "<p>expanded in <a href=\"#!/osrf/gazebo/commits/57a015fdea7e\" rel=\"nofollow\" class=\"ap-connect-link\">57a015fdea7e</a>. I didn't touch the other duplicate error messages; I will do that in a separate refactoring pull request.</p>", "type": "rendered"}, "created_on": "2014-10-29T18:54:40.948388+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2014-10-29T18:54:40.955537+00:00", "type": "pullrequest_comment", "id": 3659977}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in this paper, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\n[no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n[newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "f66dd8f07ea2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/f66dd8f07ea2.json"}, "html": {"href": "#!/osrf/gazebo/commits/f66dd8f07ea2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "57a015fdea7e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/57a015fdea7e.json"}, "html": {"href": "#!/osrf/gazebo/commits/57a015fdea7e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-29T18:54:04.749841+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3637670.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3637670"}}, "parent": {"id": 3637323, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3637323.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3637323"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "This world isn't actually used in any tests. It's just a demo world for developers to try.", "markup": "markdown", "html": "<p>This world isn't actually used in any tests. It's just a demo world for developers to try.</p>", "type": "rendered"}, "created_on": "2014-10-28T17:33:49.433581+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2014-10-28T17:33:49.442745+00:00", "type": "pullrequest_comment", "id": 3637670}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3637581.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3637581"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "Could you add some documentation to the SetParam function in Joint.hh that describes the relationship between fmax and friction? Some people might try to set both `friction` and `fmax`, and get confused about the results. ", "markup": "markdown", "html": "<p>Could you add some documentation to the SetParam function in Joint.hh that describes the relationship between fmax and friction? Some people might try to set both <code>friction</code> and <code>fmax</code>, and get confused about the results. </p>", "type": "rendered"}, "created_on": "2014-10-28T17:29:41.982083+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2014-10-28T17:29:41.992691+00:00", "type": "pullrequest_comment", "id": 3637581}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3637323.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3637323"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "You could remove the sun, which would remove a dependency on an online resource. Might make tests more reliable.", "markup": "markdown", "html": "<p>You could remove the sun, which would remove a dependency on an online resource. Might make tests more reliable.</p>", "type": "rendered"}, "created_on": "2014-10-28T17:18:41.003635+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2014-10-28T17:18:41.011448+00:00", "type": "pullrequest_comment", "id": 3637323}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3637282.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3637282"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "May want to expand this error message to include something about setting a parameter for friction.", "markup": "markdown", "html": "<p>May want to expand this error message to include something about setting a parameter for friction.</p>", "type": "rendered"}, "created_on": "2014-10-28T17:16:52.944115+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2014-10-28T17:16:52.953895+00:00", "type": "pullrequest_comment", "id": 3637282}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in this paper, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\n[no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n[newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "10d0f2dc6899", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/10d0f2dc6899.json"}, "html": {"href": "#!/osrf/gazebo/commits/10d0f2dc6899"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3d76cb862cd6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3d76cb862cd6.json"}, "html": {"href": "#!/osrf/gazebo/commits/3d76cb862cd6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-27T17:40:11.560844+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"approval": {"date": "2014-10-20T22:31:40.868977+00:00", "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3527885.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3527885"}}, "parent": {"id": 3527479, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3527479.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3527479"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "no, `joint_spawn.cc` tests the API with very simple tests, while the demo world is mainly to illustrate how to set up the parameters", "markup": "markdown", "html": "<p>no, <code>joint_spawn.cc</code> tests the API with very simple tests, while the demo world is mainly to illustrate how to set up the parameters</p>", "type": "rendered"}, "created_on": "2014-10-20T21:14:47.164916+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2014-10-20T21:14:47.172040+00:00", "type": "pullrequest_comment", "id": 3527885}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221/comments/3527479.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221/_/diff#comment-3527479"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}, "content": {"raw": "does the `joint_spawn.cc` test exercise the new `joint_friction_demo.world`?", "markup": "markdown", "html": "<p>does the <code>joint_spawn.cc</code> test exercise the new <code>joint_friction_demo.world</code>?</p>", "type": "rendered"}, "created_on": "2014-10-20T20:54:10.422584+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2014-10-20T20:54:10.431997+00:00", "type": "pullrequest_comment", "id": 3527479}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in this paper, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\n[no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)\r\n\r\n[newer build as of 627cfcc](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/238/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "e158b5e5c9d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e158b5e5c9d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/e158b5e5c9d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "627cfcc47741", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/627cfcc47741.json"}, "html": {"href": "#!/osrf/gazebo/commits/627cfcc47741"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-16T17:34:40.431258+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in this paper, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\n[no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "e158b5e5c9d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/e158b5e5c9d1.json"}, "html": {"href": "#!/osrf/gazebo/commits/e158b5e5c9d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "627cfcc47741", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/627cfcc47741.json"}, "html": {"href": "#!/osrf/gazebo/commits/627cfcc47741"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-16T16:39:25.783885+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in this paper, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n\r\n[no unexpected test failures in jenkins](http://build.osrfoundation.org/job/gazebo-any-devel-trusty-amd64-gpu-nvidia/227/)", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "7cf2bfe6c08a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7cf2bfe6c08a.json"}, "html": {"href": "#!/osrf/gazebo/commits/7cf2bfe6c08a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3fb0e67503a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3fb0e67503a3.json"}, "html": {"href": "#!/osrf/gazebo/commits/3fb0e67503a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-11T05:24:22.695875+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in this paper, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "7cf2bfe6c08a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7cf2bfe6c08a.json"}, "html": {"href": "#!/osrf/gazebo/commits/7cf2bfe6c08a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3fb0e67503a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3fb0e67503a3.json"}, "html": {"href": "#!/osrf/gazebo/commits/3fb0e67503a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-11T01:05:17.183771+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}, {"update": {"description": "This was initially submitted as pull request #1206 to resolve issue #381. It was declined so that the `ODEJoint::SetVelocity` implementation could be modified (pull request #1218). Here's the description from pull request #1206:\r\n\r\nThis pull request uses the `<axis><dynamics><friction>` tag to implement Coulomb joint friction (see Fig 1 in this paper, thanks to @traversaro for the suggestion). It is currently implemented for ODE revolute, prismatic, and universal joints using the velocity and force parameters in the ODE joint motor (see #381 for further discussion).\r\n\r\nI've added a section to the `INTEGRATION_joint_spawn` test to verify the SetParam(\"friction\", ...) API, and I've also added a demo world: `worlds/joint_friction_demo.world` (note that it is generated from an embedded ruby template with suffix `.rworld`). In this world, there are several joints with different friction values that should behave differently. The universal joints are set to mimic the behavior of the revolute joints.\r\n\r\nI should be able to get bullet to work in a similar manner. I will address this in a future pull request.\r\n\r\nAssorted comments:\r\n\r\n* I moved the sdf parameter loading from ODEJoint::Load to the parent class.\r\n* I had to modify Joint::Reset to allow joint friction values to persist after a world reset (try resetting the demo world to verify that it works).\r\n", "title": "Implement Coulomb joint friction for ODE (#381)", "destination": {"commit": {"hash": "7cf2bfe6c08a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/7cf2bfe6c08a.json"}, "html": {"href": "#!/osrf/gazebo/commits/7cf2bfe6c08a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3fb0e67503a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3fb0e67503a3.json"}, "html": {"href": "#!/osrf/gazebo/commits/3fb0e67503a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_381_concise"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2014-10-11T01:05:17.146636+00:00"}, "pull_request": {"type": "pullrequest", "id": 1221, "links": {"self": {"href": "data/repositories/osrf/gazebo/pullrequests/1221.json"}, "html": {"href": "#!/osrf/gazebo/pull-requests/1221"}}, "title": "Implement Coulomb joint friction for ODE (#381)"}}]}