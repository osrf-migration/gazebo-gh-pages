{"rendered": {"description": {"raw": "The goal of this change is to remove the need, in the common case, to source Gazebo's `setup.sh`.  This is accomplished by compiling into the code, as defaults, the same values that are written into the environment variable settings in `setup.sh`.  For each environment variable, if it's not set, we take the compiled-in default; if the environment variable is set, it takes precedence over the default.\r\n\r\nAlong the way, I moved the setting of these defaults into one place, in the toplevel `CMakeLists.txt`.  Then `setup.sh.in` contains only single variable replacements, without any logic or knowledge of directory structure.\r\n\r\nIt's still OK to source `setup.sh`.  And if you want to build upon the default values (e.g., extend `GAZEBO_MODEL_PATH`), then you should first source `setup.sh` to get the defaults, then add to them (this is how drcsim's `setup.sh` will continue to work).\r\n\r\nI did not compile in the default value for `LD_LIBRARY_PATH`, and I removed the setting of it from `setup.sh.in`.  I did that because, as far as I can tell, that setting is not needed.  If that's wrong, let me know.", "markup": "markdown", "html": "<p>The goal of this change is to remove the need, in the common case, to source Gazebo's <code>setup.sh</code>.  This is accomplished by compiling into the code, as defaults, the same values that are written into the environment variable settings in <code>setup.sh</code>.  For each environment variable, if it's not set, we take the compiled-in default; if the environment variable is set, it takes precedence over the default.</p>\n<p>Along the way, I moved the setting of these defaults into one place, in the toplevel <code>CMakeLists.txt</code>.  Then <code>setup.sh.in</code> contains only single variable replacements, without any logic or knowledge of directory structure.</p>\n<p>It's still OK to source <code>setup.sh</code>.  And if you want to build upon the default values (e.g., extend <code>GAZEBO_MODEL_PATH</code>), then you should first source <code>setup.sh</code> to get the defaults, then add to them (this is how drcsim's <code>setup.sh</code> will continue to work).</p>\n<p>I did not compile in the default value for <code>LD_LIBRARY_PATH</code>, and I removed the setting of it from <code>setup.sh.in</code>.  I did that because, as far as I can tell, that setting is not needed.  If that's wrong, let me know.</p>", "type": "rendered"}, "title": {"raw": "Add compile-time defaults for env vars (issue #781)", "markup": "markdown", "html": "<p>Add compile-time defaults for env vars (issue <a href=\"#!/osrf/gazebo/issues/781/remove-need-to-source-setupsh\" rel=\"nofollow\" title=\"Remove need to source setup.sh\" class=\"ap-connect-link\"><s>#781</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The goal of this change is to remove the need, in the common case, to source Gazebo's `setup.sh`.  This is accomplished by compiling into the code, as defaults, the same values that are written into the environment variable settings in `setup.sh`.  For each environment variable, if it's not set, we take the compiled-in default; if the environment variable is set, it takes precedence over the default.\r\n\r\nAlong the way, I moved the setting of these defaults into one place, in the toplevel `CMakeLists.txt`.  Then `setup.sh.in` contains only single variable replacements, without any logic or knowledge of directory structure.\r\n\r\nIt's still OK to source `setup.sh`.  And if you want to build upon the default values (e.g., extend `GAZEBO_MODEL_PATH`), then you should first source `setup.sh` to get the defaults, then add to them (this is how drcsim's `setup.sh` will continue to work).\r\n\r\nI did not compile in the default value for `LD_LIBRARY_PATH`, and I removed the setting of it from `setup.sh.in`.  I did that because, as far as I can tell, that setting is not needed.  If that's wrong, let me know.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/620/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:3b6c8c97ab95%0Ddd765457ec03?from_pullrequest_id=620"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/620/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/620.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/620/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/620/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/620"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/620/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:3b6c8c97ab95%0Ddd765457ec03?from_pullrequest_id=620"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/620/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/620/statuses_page=1.json"}}, "title": "Add compile-time defaults for env vars (issue #781)", "close_source_branch": true, "reviewers": [], "id": 620, "destination": {"commit": {"hash": "dd765457ec03", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/dd765457ec03.json"}, "html": {"href": "#!/osrf/gazebo/commits/dd765457ec03"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "default"}}, "created_on": "2013-07-16T22:27:15.808341+00:00", "summary": {"raw": "The goal of this change is to remove the need, in the common case, to source Gazebo's `setup.sh`.  This is accomplished by compiling into the code, as defaults, the same values that are written into the environment variable settings in `setup.sh`.  For each environment variable, if it's not set, we take the compiled-in default; if the environment variable is set, it takes precedence over the default.\r\n\r\nAlong the way, I moved the setting of these defaults into one place, in the toplevel `CMakeLists.txt`.  Then `setup.sh.in` contains only single variable replacements, without any logic or knowledge of directory structure.\r\n\r\nIt's still OK to source `setup.sh`.  And if you want to build upon the default values (e.g., extend `GAZEBO_MODEL_PATH`), then you should first source `setup.sh` to get the defaults, then add to them (this is how drcsim's `setup.sh` will continue to work).\r\n\r\nI did not compile in the default value for `LD_LIBRARY_PATH`, and I removed the setting of it from `setup.sh.in`.  I did that because, as far as I can tell, that setting is not needed.  If that's wrong, let me know.", "markup": "markdown", "html": "<p>The goal of this change is to remove the need, in the common case, to source Gazebo's <code>setup.sh</code>.  This is accomplished by compiling into the code, as defaults, the same values that are written into the environment variable settings in <code>setup.sh</code>.  For each environment variable, if it's not set, we take the compiled-in default; if the environment variable is set, it takes precedence over the default.</p>\n<p>Along the way, I moved the setting of these defaults into one place, in the toplevel <code>CMakeLists.txt</code>.  Then <code>setup.sh.in</code> contains only single variable replacements, without any logic or knowledge of directory structure.</p>\n<p>It's still OK to source <code>setup.sh</code>.  And if you want to build upon the default values (e.g., extend <code>GAZEBO_MODEL_PATH</code>), then you should first source <code>setup.sh</code> to get the defaults, then add to them (this is how drcsim's <code>setup.sh</code> will continue to work).</p>\n<p>I did not compile in the default value for <code>LD_LIBRARY_PATH</code>, and I removed the setting of it from <code>setup.sh.in</code>.  I did that because, as far as I can tell, that setting is not needed.  If that's wrong, let me know.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1ed2b3388b60", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1ed2b3388b60.json"}, "html": {"href": "#!/osrf/gazebo/commits/1ed2b3388b60"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "issue_781"}}, "comment_count": 17, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2013-07-18T11:43:02.290219+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2013-07-17T00:37:23.535048+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2013-07-17T22:42:52.884836+00:00", "type": "participant", "approved": false, "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}}, {"role": "PARTICIPANT", "participated_on": "2013-07-17T21:15:32.508188+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2013-07-18T17:37:25.866041+00:00", "author": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "merge_commit": {"hash": "3b6c8c97ab95", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/3b6c8c97ab95.json"}, "html": {"href": "#!/osrf/gazebo/commits/3b6c8c97ab95"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}