{"rendered": {"description": {"raw": "The `HarnessPlugin` suffers from a race condition when calling detaching the harness joint, as described in #2034. This pull request reduces the likelihood of that race condition and fixes several other things as well.\r\n\r\n1. The `HarnessPlugin` has an example world [worlds/harness.world](#!/osrf/gazebo/src/gazebo7/worlds/harness.world),\r\nbut it didn't have a test, so I've added an integration test.\r\n\r\n2. In order to write the test, I wanted to be able to get a `JointPtr` for the harness joint by calling `Model::GetJoint`, but that wasn't possible since the joint wasn't being added to the `Model::joints` vector (similar to issue #1217). The `Model::CreateJoint()` function added in pull request #1938 couldn't be used easily by the `HarnessPlugin` though since it doesn't take an `sdf::ElementPtr` as in input. So, I added a new `Model::CreateJoint(sdf::ElementPtr)` function in 784ecce and use it in the `HarnessPlugin` in 48a49d5.\r\n\r\n3. Using the new `CreateJoint` function temporarily broke harness detachment, so I had to add `JointController::RemoveJoint` (da0f4f4) and add a `Joint::Fini` call in `Model::RemoveJoint` (deb6ef3). That was able to fix the harness detachment.\r\n\r\n3. The new test verifies both the velocity and detach topics. To address the race condition, the `DetachUnpaused` test unthrottles the real-time update rate so that failures are more common. To see these failures, build ef4cc51 and run the test several times.\r\n\r\n4. I fixed the race condition in #2034 by setting `winchIndex` to `-1` in `OnDetach` then calling the `Detach` function from the `Update` function if the `winchIndex` is less than zero. This ensures the joint will be deleted in the main World::Runloop thread.\r\n\r\n5. Though not reported in an issue, I noticed that gazebo would crash if sent additional velocity or detachment messages after the joint had already been detached, so I fixed that in 9092468.", "markup": "markdown", "html": "<p>The <code>HarnessPlugin</code> suffers from a race condition when calling detaching the harness joint, as described in <a href=\"#!/osrf/gazebo/issues/2034/flaky-seg-fault-when-detaching\" rel=\"nofollow\" title=\"Flaky seg-fault when detaching HarnessPlugin\" class=\"ap-connect-link\"><s>#2034</s></a>. This pull request reduces the likelihood of that race condition and fixes several other things as well.</p>\n<ol>\n<li>\n<p>The <code>HarnessPlugin</code> has an example world <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/gazebo7/worlds/harness.world\" rel=\"nofollow\">worlds/harness.world</a>,\nbut it didn't have a test, so I've added an integration test.</p>\n</li>\n<li>\n<p>In order to write the test, I wanted to be able to get a <code>JointPtr</code> for the harness joint by calling <code>Model::GetJoint</code>, but that wasn't possible since the joint wasn't being added to the <code>Model::joints</code> vector (similar to issue <a href=\"#!/osrf/gazebo/issues/1217/model-joints-are-not-updated-when\" rel=\"nofollow\" title=\"Model Joints are not updated when dynamically created\" class=\"ap-connect-link\">#1217</a>). The <code>Model::CreateJoint()</code> function added in <a href=\"#!/osrf/gazebo/pull-requests/1938/adding-model-createjoint-method-that\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1938</a> couldn't be used easily by the <code>HarnessPlugin</code> though since it doesn't take an <code>sdf::ElementPtr</code> as in input. So, I added a new <code>Model::CreateJoint(sdf::ElementPtr)</code> function in <a href=\"#!/osrf/gazebo/commits/784ecce\" rel=\"nofollow\" class=\"ap-connect-link\">784ecce</a> and use it in the <code>HarnessPlugin</code> in <a href=\"#!/osrf/gazebo/commits/48a49d5\" rel=\"nofollow\" class=\"ap-connect-link\">48a49d5</a>.</p>\n</li>\n<li>\n<p>Using the new <code>CreateJoint</code> function temporarily broke harness detachment, so I had to add <code>JointController::RemoveJoint</code> (<a href=\"#!/osrf/gazebo/commits/da0f4f4\" rel=\"nofollow\" class=\"ap-connect-link\">da0f4f4</a>) and add a <code>Joint::Fini</code> call in <code>Model::RemoveJoint</code> (<a href=\"#!/osrf/gazebo/commits/deb6ef3\" rel=\"nofollow\" class=\"ap-connect-link\">deb6ef3</a>). That was able to fix the harness detachment.</p>\n</li>\n<li>\n<p>The new test verifies both the velocity and detach topics. To address the race condition, the <code>DetachUnpaused</code> test unthrottles the real-time update rate so that failures are more common. To see these failures, build <a href=\"#!/osrf/gazebo/commits/ef4cc51\" rel=\"nofollow\" class=\"ap-connect-link\">ef4cc51</a> and run the test several times.</p>\n</li>\n<li>\n<p>I fixed the race condition in <a href=\"#!/osrf/gazebo/issues/2034/flaky-seg-fault-when-detaching\" rel=\"nofollow\" title=\"Flaky seg-fault when detaching HarnessPlugin\" class=\"ap-connect-link\"><s>#2034</s></a> by setting <code>winchIndex</code> to <code>-1</code> in <code>OnDetach</code> then calling the <code>Detach</code> function from the <code>Update</code> function if the <code>winchIndex</code> is less than zero. This ensures the joint will be deleted in the main World::Runloop thread.</p>\n</li>\n<li>\n<p>Though not reported in an issue, I noticed that gazebo would crash if sent additional velocity or detachment messages after the joint had already been detached, so I fixed that in <a href=\"#!/osrf/gazebo/commits/9092468\" rel=\"nofollow\" class=\"ap-connect-link\">9092468</a>.</p>\n</li>\n</ol>", "type": "rendered"}, "title": {"raw": "Add test for HarnessPlugin, reduce likelihood of race condition (#2034)", "markup": "markdown", "html": "<p>Add test for HarnessPlugin, reduce likelihood of race condition (<a href=\"#!/osrf/gazebo/issues/2034/flaky-seg-fault-when-detaching\" rel=\"nofollow\" title=\"Flaky seg-fault when detaching HarnessPlugin\" class=\"ap-connect-link\"><s>#2034</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The `HarnessPlugin` suffers from a race condition when calling detaching the harness joint, as described in #2034. This pull request reduces the likelihood of that race condition and fixes several other things as well.\r\n\r\n1. The `HarnessPlugin` has an example world [worlds/harness.world](#!/osrf/gazebo/src/gazebo7/worlds/harness.world),\r\nbut it didn't have a test, so I've added an integration test.\r\n\r\n2. In order to write the test, I wanted to be able to get a `JointPtr` for the harness joint by calling `Model::GetJoint`, but that wasn't possible since the joint wasn't being added to the `Model::joints` vector (similar to issue #1217). The `Model::CreateJoint()` function added in pull request #1938 couldn't be used easily by the `HarnessPlugin` though since it doesn't take an `sdf::ElementPtr` as in input. So, I added a new `Model::CreateJoint(sdf::ElementPtr)` function in 784ecce and use it in the `HarnessPlugin` in 48a49d5.\r\n\r\n3. Using the new `CreateJoint` function temporarily broke harness detachment, so I had to add `JointController::RemoveJoint` (da0f4f4) and add a `Joint::Fini` call in `Model::RemoveJoint` (deb6ef3). That was able to fix the harness detachment.\r\n\r\n3. The new test verifies both the velocity and detach topics. To address the race condition, the `DetachUnpaused` test unthrottles the real-time update rate so that failures are more common. To see these failures, build ef4cc51 and run the test several times.\r\n\r\n4. I fixed the race condition in #2034 by setting `winchIndex` to `-1` in `OnDetach` then calling the `Detach` function from the `Update` function if the `winchIndex` is less than zero. This ensures the joint will be deleted in the main World::Runloop thread.\r\n\r\n5. Though not reported in an issue, I noticed that gazebo would crash if sent additional velocity or detachment messages after the joint had already been detached, so I fixed that in 9092468.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2431/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diffstat/osrf/gazebo:8fde1b9cabf5%0D225036f6ff77?from_pullrequest_id=2431"}, "commits": {"href": "data/repositories/osrf/gazebo/pullrequests/2431/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo/pullrequests/2431.json"}, "comments": {"href": "data/repositories/osrf/gazebo/pullrequests/2431/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2431/merge"}, "html": {"href": "#!/osrf/gazebo/pull-requests/2431"}, "activity": {"href": "data/repositories/osrf/gazebo/pullrequests/2431/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/osrf/gazebo:8fde1b9cabf5%0D225036f6ff77?from_pullrequest_id=2431"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/pullrequests/2431/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/pullrequests/2431/statuses_page=1.json"}}, "title": "Add test for HarnessPlugin, reduce likelihood of race condition (#2034)", "close_source_branch": true, "reviewers": [], "id": 2431, "destination": {"commit": {"hash": "225036f6ff77", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/225036f6ff77.json"}, "html": {"href": "#!/osrf/gazebo/commits/225036f6ff77"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "gazebo7"}}, "created_on": "2016-08-22T22:10:02.856165+00:00", "summary": {"raw": "The `HarnessPlugin` suffers from a race condition when calling detaching the harness joint, as described in #2034. This pull request reduces the likelihood of that race condition and fixes several other things as well.\r\n\r\n1. The `HarnessPlugin` has an example world [worlds/harness.world](#!/osrf/gazebo/src/gazebo7/worlds/harness.world),\r\nbut it didn't have a test, so I've added an integration test.\r\n\r\n2. In order to write the test, I wanted to be able to get a `JointPtr` for the harness joint by calling `Model::GetJoint`, but that wasn't possible since the joint wasn't being added to the `Model::joints` vector (similar to issue #1217). The `Model::CreateJoint()` function added in pull request #1938 couldn't be used easily by the `HarnessPlugin` though since it doesn't take an `sdf::ElementPtr` as in input. So, I added a new `Model::CreateJoint(sdf::ElementPtr)` function in 784ecce and use it in the `HarnessPlugin` in 48a49d5.\r\n\r\n3. Using the new `CreateJoint` function temporarily broke harness detachment, so I had to add `JointController::RemoveJoint` (da0f4f4) and add a `Joint::Fini` call in `Model::RemoveJoint` (deb6ef3). That was able to fix the harness detachment.\r\n\r\n3. The new test verifies both the velocity and detach topics. To address the race condition, the `DetachUnpaused` test unthrottles the real-time update rate so that failures are more common. To see these failures, build ef4cc51 and run the test several times.\r\n\r\n4. I fixed the race condition in #2034 by setting `winchIndex` to `-1` in `OnDetach` then calling the `Detach` function from the `Update` function if the `winchIndex` is less than zero. This ensures the joint will be deleted in the main World::Runloop thread.\r\n\r\n5. Though not reported in an issue, I noticed that gazebo would crash if sent additional velocity or detachment messages after the joint had already been detached, so I fixed that in 9092468.", "markup": "markdown", "html": "<p>The <code>HarnessPlugin</code> suffers from a race condition when calling detaching the harness joint, as described in <a href=\"#!/osrf/gazebo/issues/2034/flaky-seg-fault-when-detaching\" rel=\"nofollow\" title=\"Flaky seg-fault when detaching HarnessPlugin\" class=\"ap-connect-link\"><s>#2034</s></a>. This pull request reduces the likelihood of that race condition and fixes several other things as well.</p>\n<ol>\n<li>\n<p>The <code>HarnessPlugin</code> has an example world <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/gazebo7/worlds/harness.world\" rel=\"nofollow\">worlds/harness.world</a>,\nbut it didn't have a test, so I've added an integration test.</p>\n</li>\n<li>\n<p>In order to write the test, I wanted to be able to get a <code>JointPtr</code> for the harness joint by calling <code>Model::GetJoint</code>, but that wasn't possible since the joint wasn't being added to the <code>Model::joints</code> vector (similar to issue <a href=\"#!/osrf/gazebo/issues/1217/model-joints-are-not-updated-when\" rel=\"nofollow\" title=\"Model Joints are not updated when dynamically created\" class=\"ap-connect-link\">#1217</a>). The <code>Model::CreateJoint()</code> function added in <a href=\"#!/osrf/gazebo/pull-requests/1938/adding-model-createjoint-method-that\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1938</a> couldn't be used easily by the <code>HarnessPlugin</code> though since it doesn't take an <code>sdf::ElementPtr</code> as in input. So, I added a new <code>Model::CreateJoint(sdf::ElementPtr)</code> function in <a href=\"#!/osrf/gazebo/commits/784ecce\" rel=\"nofollow\" class=\"ap-connect-link\">784ecce</a> and use it in the <code>HarnessPlugin</code> in <a href=\"#!/osrf/gazebo/commits/48a49d5\" rel=\"nofollow\" class=\"ap-connect-link\">48a49d5</a>.</p>\n</li>\n<li>\n<p>Using the new <code>CreateJoint</code> function temporarily broke harness detachment, so I had to add <code>JointController::RemoveJoint</code> (<a href=\"#!/osrf/gazebo/commits/da0f4f4\" rel=\"nofollow\" class=\"ap-connect-link\">da0f4f4</a>) and add a <code>Joint::Fini</code> call in <code>Model::RemoveJoint</code> (<a href=\"#!/osrf/gazebo/commits/deb6ef3\" rel=\"nofollow\" class=\"ap-connect-link\">deb6ef3</a>). That was able to fix the harness detachment.</p>\n</li>\n<li>\n<p>The new test verifies both the velocity and detach topics. To address the race condition, the <code>DetachUnpaused</code> test unthrottles the real-time update rate so that failures are more common. To see these failures, build <a href=\"#!/osrf/gazebo/commits/ef4cc51\" rel=\"nofollow\" class=\"ap-connect-link\">ef4cc51</a> and run the test several times.</p>\n</li>\n<li>\n<p>I fixed the race condition in <a href=\"#!/osrf/gazebo/issues/2034/flaky-seg-fault-when-detaching\" rel=\"nofollow\" title=\"Flaky seg-fault when detaching HarnessPlugin\" class=\"ap-connect-link\"><s>#2034</s></a> by setting <code>winchIndex</code> to <code>-1</code> in <code>OnDetach</code> then calling the <code>Detach</code> function from the <code>Update</code> function if the <code>winchIndex</code> is less than zero. This ensures the joint will be deleted in the main World::Runloop thread.</p>\n</li>\n<li>\n<p>Though not reported in an issue, I noticed that gazebo would crash if sent additional velocity or detachment messages after the joint had already been detached, so I fixed that in <a href=\"#!/osrf/gazebo/commits/9092468\" rel=\"nofollow\" class=\"ap-connect-link\">9092468</a>.</p>\n</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "1c041032db9a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1c041032db9a.json"}, "html": {"href": "#!/osrf/gazebo/commits/1c041032db9a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "branch": {"name": "harness_test"}}, "comment_count": 16, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-10-08T21:52:45.852948+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-10-10T14:23:05.560146+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2016-10-10T18:14:06.978868+00:00", "type": "participant", "approved": true, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}], "reason": "", "updated_on": "2016-10-10T18:26:47.443820+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "8fde1b9cabf5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8fde1b9cabf5.json"}, "html": {"href": "#!/osrf/gazebo/commits/8fde1b9cabf5"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}