{"next": "data/repositories/osrf/gazebo/issues_page=18.json", "values": [{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1601/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1601.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1601/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1601/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1601/support-a-cross-platform-getenv"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1601/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Support a cross platform `getEnv`", "component": {"name": "os::windows", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132650.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "See this [comment](#!/osrf/gazebo/pull-request/1659/windows-util-updates/diff#comment-6707199)", "markup": "markdown", "html": "<p>See this <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1659/windows-util-updates/diff#comment-6707199\" rel=\"nofollow\">comment</a></p>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-07T03:24:40.541556+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:23.605487+00:00", "type": "issue", "id": 1601}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1602/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1602.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1602/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1602/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1602/removing-x11-dependency-for-official"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1602/vote"}}, "reporter": {"display_name": "ruffsl", "uuid": "{6a46a82e-2fa2-4c3e-8eda-7e358eba7346}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6a46a82e-2fa2-4c3e-8eda-7e358eba7346%7D"}, "html": {"href": "https://bitbucket.org/%7B6a46a82e-2fa2-4c3e-8eda-7e358eba7346%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c73ca2cc01d25876148125d25cd9a0ced=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-1.png"}}, "nickname": "Ruffin White", "type": "user", "account_id": "557058:e92d3e8a-4ef2-40b6-9964-4df6057af861"}, "title": "Removing x11 dependency for Official DockerHub repo", "component": null, "votes": 1, "watches": 4, "content": {"raw": "I'm in the process of creating Official [DockerHub](https://hub.docker.com/account/signup/) repo for Gazebo.\r\n \r\nOne of the review critera for submitting an [Official Repo](https://docs.docker.com/docker-hub/official_repos/) requests is that there are no X11 dependencies, as it's unlikly that the Official Repos team would accept something which depends on mounting the X11 socket due to the security implications. Removing this dependancy from gzserver would make it clear that this is not an issue, as well as help keep the docker image size small.\r\n\r\nThis brings up a second point, that we would need to provide a metapackage for gzserver, excluding gzclient, as to permit what was stated above (i.e. a gzserver only install). I'm not sure if a separate issue should be made for this task.", "markup": "markdown", "html": "<p>I'm in the process of creating Official <a data-is-external-link=\"true\" href=\"https://hub.docker.com/account/signup/\" rel=\"nofollow\">DockerHub</a> repo for Gazebo.</p>\n<p>One of the review critera for submitting an <a data-is-external-link=\"true\" href=\"https://docs.docker.com/docker-hub/official_repos/\" rel=\"nofollow\">Official Repo</a> requests is that there are no X11 dependencies, as it's unlikly that the Official Repos team would accept something which depends on mounting the X11 socket due to the security implications. Removing this dependancy from gzserver would make it clear that this is not an issue, as well as help keep the docker image size small.</p>\n<p>This brings up a second point, that we would need to provide a metapackage for gzserver, excluding gzclient, as to permit what was stated above (i.e. a gzserver only install). I'm not sure if a separate issue should be made for this task.</p>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-12T00:19:31.114452+00:00", "milestone": null, "updated_on": "2017-01-18T23:56:53.110105+00:00", "type": "issue", "id": 1602}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1603/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1603.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1603/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1603/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1603/improve-layer"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1603/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Improve layer", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "See pull request #1674 for background.\r\n\r\nSuggest more improvement in this issue. Here are a few:\r\n\r\n1. Add/remove layers via the GUI.\r\n1. Assign visuals to layers via the GUI\r\n1. Give layers names.\r\n1. Save layer information after it's been modified.\r\n", "markup": "markdown", "html": "<p>See <a href=\"#!/osrf/gazebo/pull-requests/1674/use-meta-information-in-sdf-visuals-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1674</a> for background.</p>\n<p>Suggest more improvement in this issue. Here are a few:</p>\n<ol>\n<li>Add/remove layers via the GUI.</li>\n<li>Assign visuals to layers via the GUI</li>\n<li>Give layers names.</li>\n<li>Save layer information after it's been modified.</li>\n</ol>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-12T00:37:16.781481+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:48.350276+00:00", "type": "issue", "id": 1603}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1604/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1604.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1604/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1604/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1604/how-to-get-and-set-velocity-of-a-joint-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1604/vote"}}, "reporter": {"display_name": "akshay 5059", "uuid": "{913ae40b-3e9f-4da4-bb7a-9c2083415b23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B913ae40b-3e9f-4da4-bb7a-9c2083415b23%7D"}, "html": {"href": "https://bitbucket.org/%7B913ae40b-3e9f-4da4-bb7a-9c2083415b23%7D/"}, "avatar": {"href": "https://bitbucket.org/account/akshay5059/avatar/"}}, "nickname": "akshay5059", "type": "user", "account_id": null}, "title": "How to get and set velocity of a joint in Gazebo ?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi everyone !\r\n\r\n1) I have made a small robot model with 4 wheels. I simulate it in Gazebo and and provide some force to the wheel joints so that the robot starts moving. Now, I want to know the speed of the model or any particular joint by writing an API code. Can anyone please tell me how to do that ?? Also , I don't want to use ROS and Plugin methods. I just want to write a C or C++ code for that.  \r\n\r\n2) After receiving the speed, I now want to set the speed of that joint according to me by the same method as mentioned above i.e. by writing C or C++ API code, without using ROS and Plugin methods.\r\n\r\nI would be really grateful to you if you help me out with this .", "markup": "markdown", "html": "<p>Hi everyone !</p>\n<p>1) I have made a small robot model with 4 wheels. I simulate it in Gazebo and and provide some force to the wheel joints so that the robot starts moving. Now, I want to know the speed of the model or any particular joint by writing an API code. Can anyone please tell me how to do that ?? Also , I don't want to use ROS and Plugin methods. I just want to write a C or C++ code for that.  </p>\n<p>2) After receiving the speed, I now want to set the speed of that joint according to me by the same method as mentioned above i.e. by writing C or C++ API code, without using ROS and Plugin methods.</p>\n<p>I would be really grateful to you if you help me out with this .</p>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "invalid", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-13T09:32:14.938353+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:45.577548+00:00", "type": "issue", "id": 1604}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1605/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1605.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1605/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1605/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1605/how-to-get-and-set-velocity-of-a-joint-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1605/vote"}}, "reporter": {"display_name": "akshay 5059", "uuid": "{913ae40b-3e9f-4da4-bb7a-9c2083415b23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B913ae40b-3e9f-4da4-bb7a-9c2083415b23%7D"}, "html": {"href": "https://bitbucket.org/%7B913ae40b-3e9f-4da4-bb7a-9c2083415b23%7D/"}, "avatar": {"href": "https://bitbucket.org/account/akshay5059/avatar/"}}, "nickname": "akshay5059", "type": "user", "account_id": null}, "title": "How to get and set velocity of a joint in Gazebo ?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi everyone !\r\n\r\n1) I have made a small robot model with 4 wheels. I simulate it in Gazebo and and provide some force to the wheel joints so that the robot starts moving. Now, I want to know the speed of the model or any particular joint by writing an API code. Can anyone please tell me how to do that ?? Also , I don't want to use ROS and Plugin methods. I just want to write a C or C++ code for that.  \r\n\r\n2) After receiving the speed, I now want to set the speed of that joint according to me by the same method as mentioned above i.e. by writing C or C++ API code, without using ROS and Plugin methods.\r\n\r\nI would be really grateful to you if you help me out with this .", "markup": "markdown", "html": "<p>Hi everyone !</p>\n<p>1) I have made a small robot model with 4 wheels. I simulate it in Gazebo and and provide some force to the wheel joints so that the robot starts moving. Now, I want to know the speed of the model or any particular joint by writing an API code. Can anyone please tell me how to do that ?? Also , I don't want to use ROS and Plugin methods. I just want to write a C or C++ code for that.  </p>\n<p>2) After receiving the speed, I now want to set the speed of that joint according to me by the same method as mentioned above i.e. by writing C or C++ API code, without using ROS and Plugin methods.</p>\n<p>I would be really grateful to you if you help me out with this .</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-13T09:32:54.092839+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:45.163871+00:00", "type": "issue", "id": 1605}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1606/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1606.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1606/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1606/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1606/find-libgazebo_client-independently-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1606/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Find libgazebo_client independently of libgazebo", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Based on discussion in #1516, we should provide distinct pkg-config and cmake config files for `libgazebo_client`, since one should not link to both `libgazebo` and `libgazebo_client` at the same time.\r\n\r\nWe could also consider splitting the debian packages to reduce the number of dependencies for things that only use `libgazebo_client`.", "markup": "markdown", "html": "<p>Based on discussion in <a href=\"#!/osrf/gazebo/issues/1516/physics-classes-call-sensors-functions\" rel=\"nofollow\" title=\"physics classes call sensors functions\" class=\"ap-connect-link\"><s>#1516</s></a>, we should provide distinct pkg-config and cmake config files for <code>libgazebo_client</code>, since one should not link to both <code>libgazebo</code> and <code>libgazebo_client</code> at the same time.</p>\n<p>We could also consider splitting the debian packages to reduce the number of dependencies for things that only use <code>libgazebo_client</code>.</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-13T18:08:32.232143+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:10.519284+00:00", "type": "issue", "id": 1606}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1607/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1607.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1607/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1607/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1607/gazebo-does-not-start-if-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1607/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "Gazebo does not start if the GAZEBO_RESOURCE_PATH enviromental variable is set", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I am using Gazebo from default branch. If you try to start it with:\r\n~~~\r\nGAZEBO_RESOURCE_PATH=\"\" gazebo\r\n~~~\r\nit loads correctly. \r\n\r\nHowever if you try to set `GAZEBO_RESOURCE_PATH` to a meaningful variable, for example to load some world file in a given directory, it fails:\r\n\r\n\r\n~~~bash\r\npegua@pareto:/usr/local/share/gazebo$ GAZEBO_RESOURCE_PATH=\"${GAZEBO_RESOURCE_PATH}:/home/pegua\" gazebo --verbose\r\nGazebo multi-robot simulator, version 6.0.0\r\nCopyright (C) 2012-2015 Open Source Robotics Foundation.\r\nReleased under the Apache 2 License.\r\nhttp://gazebosim.org\r\n\r\n[Msg] Waiting for master.\r\nGazebo multi-robot simulator, version 6.0.0\r\nCopyright (C) 2012-2015 Open Source Robotics Foundation.\r\nReleased under the Apache 2 License.\r\nhttp://gazebosim.org\r\n\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 10.255.36.56\r\n[Err] [RTShaderSystem.cc:440] Unable to find shader lib. Shader generating will fail.[Err] [Server.cc:318] Could not open file[worlds/empty.world]\r\n~~~\r\n\r\n\r\n\r\nSourcing `/usr/local/share/gazebo/setup.sh` before launching `GAZEBO_RESOURCE_PATH=\"${GAZEBO_RESOURCE_PATH}:/home/pegua\" gazebo --verbose` (i.e. setting `GAZEBO_RESOURCE_PATH` to the default path) solves the issue, but it is an undocumented procedure.", "markup": "markdown", "html": "<p>I am using Gazebo from default branch. If you try to start it with:</p>\n<div class=\"codehilite\"><pre><span></span>GAZEBO_RESOURCE_PATH=&quot;&quot; gazebo\n</pre></div>\n\n\n<p>it loads correctly. </p>\n<p>However if you try to set <code>GAZEBO_RESOURCE_PATH</code> to a meaningful variable, for example to load some world file in a given directory, it fails:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>pegua@pareto:/usr/local/share/gazebo$ <span class=\"nv\">GAZEBO_RESOURCE_PATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"si\">${</span><span class=\"nv\">GAZEBO_RESOURCE_PATH</span><span class=\"si\">}</span><span class=\"s2\">:/home/pegua&quot;</span> gazebo --verbose\nGazebo multi-robot simulator, version <span class=\"m\">6</span>.0.0\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2012</span>-2015 Open Source Robotics Foundation.\nReleased under the Apache <span class=\"m\">2</span> License.\nhttp://gazebosim.org\n\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\nGazebo multi-robot simulator, version <span class=\"m\">6</span>.0.0\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2012</span>-2015 Open Source Robotics Foundation.\nReleased under the Apache <span class=\"m\">2</span> License.\nhttp://gazebosim.org\n\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">10</span>.255.36.56\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>RTShaderSystem.cc:440<span class=\"o\">]</span> Unable to find shader lib. Shader generating will fail.<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>Server.cc:318<span class=\"o\">]</span> Could not open file<span class=\"o\">[</span>worlds/empty.world<span class=\"o\">]</span>\n</pre></div>\n\n\n<p>Sourcing <code>/usr/local/share/gazebo/setup.sh</code> before launching <code>GAZEBO_RESOURCE_PATH=\"${GAZEBO_RESOURCE_PATH}:/home/pegua\" gazebo --verbose</code> (i.e. setting <code>GAZEBO_RESOURCE_PATH</code> to the default path) solves the issue, but it is an undocumented procedure.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-14T12:06:03.225979+00:00", "milestone": null, "updated_on": "2017-03-23T09:47:11.584631+00:00", "type": "issue", "id": 1607}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1608/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1608.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1608/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1608/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1608/laservisual-broken-on-os-x"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1608/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "LaserVisual broken on OS X", "component": {"name": "os::osx", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/126618.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "The LaserVisual was modified by pull request #1607 and currently causes gzclient to seg-fault on OS X.", "markup": "markdown", "html": "<p>The LaserVisual was modified by <a href=\"#!/osrf/gazebo/pull-requests/1607/fix-laser-visualization-issue-1576\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1607</a> and currently causes gzclient to seg-fault on OS X.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-14T21:06:31.555292+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:09.666119+00:00", "type": "issue", "id": 1608}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1609/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1609.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1609/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1609/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1609/add-user-preferences-customization"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1609/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Add \"User Preferences\" customization", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I've heard users asking for a way to change things like the role of mouse buttons and hotkeys. See [this question](http://answers.gazebosim.org/question/8694/mouse-control-buttons/), for example.\r\n\r\nI think it would be valuable to eventually add a \"User preferences\" window where users can choose things like hotkeys, color scheme and so on. These preferences would be saved and reloaded every time the user opens Gazebo.\r\n\r\n[Here](http://archive.blender.org/development/release-logs/blender-256-beta/custom-keyboard-shortcuts/index.html) is an example from Blender.", "markup": "markdown", "html": "<p>I've heard users asking for a way to change things like the role of mouse buttons and hotkeys. See <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/8694/mouse-control-buttons/\" rel=\"nofollow\">this question</a>, for example.</p>\n<p>I think it would be valuable to eventually add a \"User preferences\" window where users can choose things like hotkeys, color scheme and so on. These preferences would be saved and reloaded every time the user opens Gazebo.</p>\n<p><a data-is-external-link=\"true\" href=\"http://archive.blender.org/development/release-logs/blender-256-beta/custom-keyboard-shortcuts/index.html\" rel=\"nofollow\">Here</a> is an example from Blender.</p>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-15T19:31:47.504223+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:47.331369+00:00", "type": "issue", "id": 1609}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1610/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1610.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1610/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1610/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1610/propagate-reset-world-action-to-gui"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1610/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Propagate Reset World action to GUI plugins", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The `Reset World` action causes [WorldPlugins to be reset](#!/osrf/gazebo/src/75a962d1adf1808f7ca53c63b3d2118d474bc056/gazebo/physics/World.cc#cl-1031), as well as [ModelPlugins](#!/osrf/gazebo/src/75a962d1adf1808f7ca53c63b3d2118d474bc056/gazebo/physics/Model.cc#cl-394), but GUI plugins never are never notified of this action.", "markup": "markdown", "html": "<p>The <code>Reset World</code> action causes <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/75a962d1adf1808f7ca53c63b3d2118d474bc056/gazebo/physics/World.cc#cl-1031\" rel=\"nofollow\">WorldPlugins to be reset</a>, as well as <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/75a962d1adf1808f7ca53c63b3d2118d474bc056/gazebo/physics/Model.cc#cl-394\" rel=\"nofollow\">ModelPlugins</a>, but GUI plugins never are never notified of this action.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-15T23:14:34.084508+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:58.239160+00:00", "type": "issue", "id": 1610}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1611/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1611.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1611/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1611/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1611/freeimage-linking-error-when-building"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1611/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Freeimage linking error when building Windows in Release mode", "component": {"name": "os::windows", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132650.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "I was following the [Windows installation tutorial](http://gazebosim.org/tutorials?tut=install_on_windows&cat=install), which builds in Release mode by default. First I saw a failure when trying to compile gazebo_main.cc, and I have proposed disabling that file for Windows in pull request #1695, since it does not compile.\r\n\r\nNow, I am getting linking errors with FreeImage:\r\n~~~\r\ngazebo_common.lib(Image.cc.obj) : error LNK2019: unresolved external symbol \r\n__imp_FreeImage_Initialise referenced in function\r\n\"public: __cdecl gazebo::common::Image::Image(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)\"\r\n(??0Image@common@gazebo@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)\r\n~~~\r\n[More console output](https://gist.github.com/scpeters/6de2e7cfab805d239382)", "markup": "markdown", "html": "<p>I was following the <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=install_on_windows&amp;cat=install\" rel=\"nofollow\">Windows installation tutorial</a>, which builds in Release mode by default. First I saw a failure when trying to compile gazebo_main.cc, and I have proposed disabling that file for Windows in <a href=\"#!/osrf/gazebo/pull-requests/1695/dont-build-gazebo-executable-on-windows\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1695</a>, since it does not compile.</p>\n<p>Now, I am getting linking errors with FreeImage:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">gazebo_common</span><span class=\"p\">.</span><span class=\"n\">lib</span><span class=\"p\">(</span><span class=\"n\">Image</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"p\">.</span><span class=\"n\">obj</span><span class=\"p\">)</span> <span class=\"o\">:</span> <span class=\"n\">error</span> <span class=\"nl\">LNK2019</span><span class=\"p\">:</span> <span class=\"n\">unresolved</span> <span class=\"n\">external</span> <span class=\"n\">symbol</span> \n<span class=\"n\">__imp_FreeImage_Initialise</span> <span class=\"n\">referenced</span> <span class=\"k\">in</span> <span class=\"n\">function</span>\n<span class=\"s\">&quot;public: __cdecl gazebo::common::Image::Image(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)&quot;</span>\n<span class=\"p\">(</span><span class=\"o\">??</span><span class=\"mi\">0</span><span class=\"n\">Image</span><span class=\"p\">@</span><span class=\"n\">common</span><span class=\"p\">@</span><span class=\"n\">gazebo</span><span class=\"p\">@@</span><span class=\"n\">QEAA</span><span class=\"p\">@</span><span class=\"n\">AEBV</span><span class=\"o\">?</span><span class=\"err\">$</span><span class=\"n\">basic_string</span><span class=\"p\">@</span><span class=\"n\">DU</span><span class=\"o\">?</span><span class=\"err\">$</span><span class=\"n\">char_traits</span><span class=\"p\">@</span><span class=\"n\">D</span><span class=\"p\">@</span><span class=\"n\">std</span><span class=\"p\">@@</span><span class=\"n\">V</span><span class=\"o\">?</span><span class=\"err\">$</span><span class=\"n\">allocator</span><span class=\"p\">@</span><span class=\"n\">D</span><span class=\"mi\">@2</span><span class=\"p\">@@</span><span class=\"n\">std</span><span class=\"p\">@@@</span><span class=\"n\">Z</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p><a data-is-external-link=\"true\" href=\"https://gist.github.com/scpeters/6de2e7cfab805d239382\" rel=\"nofollow\">More console output</a></p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-16T00:16:18.779342+00:00", "milestone": null, "updated_on": "2019-03-27T18:18:50.136687+00:00", "type": "issue", "id": 1611}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1612/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1612.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1612/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1612/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1612/check-that-all-examples-are-compiled-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1612/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Check that all examples are compiled in test", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "See discussion in pull request #1643.\r\n\r\n* [comment](#!/osrf/gazebo/pull-request/1643/refactor-example-building-test-fix/activity#comment-6846085)\r\n\r\nThis could be done by using the gtest [ValuesIn construct](https://code.google.com/p/googletest/wiki/V1_6_AdvancedGuide#How_to_Write_Value-Parameterized_Tests) with a container and iterating through the container to compare the values against the contents of the example folders.", "markup": "markdown", "html": "<p>See discussion in <a href=\"#!/osrf/gazebo/pull-requests/1643/refactor-example-building-test-fix\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1643</a>.</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1643/refactor-example-building-test-fix/activity#comment-6846085\" rel=\"nofollow\">comment</a></li>\n</ul>\n<p>This could be done by using the gtest <a data-is-external-link=\"true\" href=\"https://code.google.com/p/googletest/wiki/V1_6_AdvancedGuide#How_to_Write_Value-Parameterized_Tests\" rel=\"nofollow\">ValuesIn construct</a> with a container and iterating through the container to compare the values against the contents of the example folders.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-16T00:47:28.820999+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:47.941757+00:00", "type": "issue", "id": 1612}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1613/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1613.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1613/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1613/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1613/physicslinktestaddforce-0-race-condition"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1613/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "PhysicsLinkTest.AddForce/0 race condition, uninitialized variable", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "The `PhysicsLinkTest.AddForce/0` test in `INTEGRATION_physics_link` has been failing about 40% of the time on Ubuntu since May 12. I couldn't identify any gazebo pull requests from that day that would seem capable of breaking things. The biggest change I could see was that the sdformat 3.0.4 prerelease was made on that day, but I'm not sure what effect that would have had.\r\n\r\nA summary of the problem: occasionally most of the expectations fail in the test. valgrind supplied some extra clues that some uninitialized variables are involved in the failure.\r\n\r\n~~~\r\n279: [ RUN      ] PhysicsEngines/PhysicsLinkTest.AddForce/0\r\n279: [Msg] Waiting for master.\r\n279: [Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n279: [Msg] Publicized address: 172.23.2.90\r\n279: [Dbg] [ServerFixture.cc:154] ServerFixture load in 1 seconds, timeout after 600 seconds\r\n279: [Dbg] [physics_link.cc:190] World == link == inertial frames, no offset\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: torqueWorld\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 0 0 -0.01\r\n279: Expected: oneStepAngularAccel\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 0 0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 0 0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: [Dbg] [physics_link.cc:195] World != link == inertial frames, no offset\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: torqueWorld\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 0 0 -0.01\r\n279: Expected: oneStepAngularAccel\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 0 0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 0 0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: [Dbg] [physics_link.cc:202] World == link == inertial frames, with offset\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 3 6 -13.0017\r\n279: Expected: torqueWorld\r\n279: Which is: 3 6 -13\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 18 35.9999 -78.0098\r\n279: Expected: oneStepAngularAccel\r\n279: Which is: 18 35.9999 -77.9998\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -0 0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: -0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 0 -0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: [Dbg] [physics_link.cc:209] World == link != inertial frames, no offset\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 11 -7 2.99833\r\n279: Expected: torqueWorld\r\n279: Which is: 11 -7 3\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: 65.9999 -41.9999 17.99\r\n279: Expected: oneStepAngularAccel\r\n279: Which is: 65.9999 -41.9999 18\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -0 -0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: -0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -0 0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: [Dbg] [physics_link.cc:218] World != link != inertial frames, with offset\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: -4.72724 -10.8122 -23.5017\r\n279: Expected: torqueWorld\r\n279: Which is: -4.72724 -10.8122 -23.5\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -28.3634 -64.8729 -141.01\r\n279: Expected: oneStepAngularAccel\r\n279: Which is: -28.3634 -64.8729 -141\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: -0 0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -0 -0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: -0 -0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -0 -0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: [Dbg] [physics_link.cc:227] World != link != inertial frames, with offset and initial vel\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: -106.505 53.6695 29.8003\r\n279: Expected: torqueWorld\r\n279: Which is: -106.505 53.6695 29.8019\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -639.03 322.016 178.801\r\n279: Expected: oneStepAngularAccel\r\n279: Which is: -639.03 322.016 178.811\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: -0 -0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -0 -0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\r\n279: Value of: _link->GetWorldTorque()\r\n279:   Actual: 0 -0 -0.001667\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\r\n279: Value of: _link->GetWorldAngularAccel()\r\n279:   Actual: -0 -0 -0.01\r\n279: Expected: math::Vector3::Zero\r\n279: Which is: 0 0 0\r\n279: [Dbg] [ServerFixture.cc:103] ServerFixture::Unload\r\n279: [  FAILED  ] PhysicsEngines/PhysicsLinkTest.AddForce/0, where GetParam() = \"ode\" (1372 ms)\r\n~~~\r\n\r\nAlso, I think the test has been failing on OS X for quite a while, but I didn't notice because so many other tests are failing there.\r\n\r\nThis will take some detective work. Does anyone have ideas about how to investigate usage of uninitialized variables?", "markup": "markdown", "html": "<p>The <code>PhysicsLinkTest.AddForce/0</code> test in <code>INTEGRATION_physics_link</code> has been failing about 40% of the time on Ubuntu since May 12. I couldn't identify any gazebo pull requests from that day that would seem capable of breaking things. The biggest change I could see was that the sdformat 3.0.4 prerelease was made on that day, but I'm not sure what effect that would have had.</p>\n<p>A summary of the problem: occasionally most of the expectations fail in the test. valgrind supplied some extra clues that some uninitialized variables are involved in the failure.</p>\n<div class=\"codehilite\"><pre><span></span>279: [ RUN      ] PhysicsEngines/PhysicsLinkTest.AddForce/0\n279: [Msg] Waiting for master.\n279: [Msg] Connected to gazebo master @ http://127.0.0.1:11345\n279: [Msg] Publicized address: 172.23.2.90\n279: [Dbg] [ServerFixture.cc:154] ServerFixture load in 1 seconds, timeout after 600 seconds\n279: [Dbg] [physics_link.cc:190] World == link == inertial frames, no offset\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: torqueWorld\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 0 0 -0.01\n279: Expected: oneStepAngularAccel\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 0 0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 0 0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: [Dbg] [physics_link.cc:195] World != link == inertial frames, no offset\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: torqueWorld\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 0 0 -0.01\n279: Expected: oneStepAngularAccel\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 0 0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 0 0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: [Dbg] [physics_link.cc:202] World == link == inertial frames, with offset\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 3 6 -13.0017\n279: Expected: torqueWorld\n279: Which is: 3 6 -13\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 18 35.9999 -78.0098\n279: Expected: oneStepAngularAccel\n279: Which is: 18 35.9999 -77.9998\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -0 0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: -0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 0 -0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: [Dbg] [physics_link.cc:209] World == link != inertial frames, no offset\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 11 -7 2.99833\n279: Expected: torqueWorld\n279: Which is: 11 -7 3\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: 65.9999 -41.9999 17.99\n279: Expected: oneStepAngularAccel\n279: Which is: 65.9999 -41.9999 18\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -0 -0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: -0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -0 0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: [Dbg] [physics_link.cc:218] World != link != inertial frames, with offset\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: -4.72724 -10.8122 -23.5017\n279: Expected: torqueWorld\n279: Which is: -4.72724 -10.8122 -23.5\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -28.3634 -64.8729 -141.01\n279: Expected: oneStepAngularAccel\n279: Which is: -28.3634 -64.8729 -141\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: -0 0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -0 -0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: -0 -0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -0 -0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: [Dbg] [physics_link.cc:227] World != link != inertial frames, with offset and initial vel\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:96: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: -106.505 53.6695 29.8003\n279: Expected: torqueWorld\n279: Which is: -106.505 53.6695 29.8019\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:109: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -639.03 322.016 178.801\n279: Expected: oneStepAngularAccel\n279: Which is: -639.03 322.016 178.811\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:123: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: -0 -0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:127: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -0 -0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:142: Failure\n279: Value of: _link-&gt;GetWorldTorque()\n279:   Actual: 0 -0 -0.001667\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: /tmp/gazebo_build/source/test/integration/physics_link.cc:146: Failure\n279: Value of: _link-&gt;GetWorldAngularAccel()\n279:   Actual: -0 -0 -0.01\n279: Expected: math::Vector3::Zero\n279: Which is: 0 0 0\n279: [Dbg] [ServerFixture.cc:103] ServerFixture::Unload\n279: [  FAILED  ] PhysicsEngines/PhysicsLinkTest.AddForce/0, where GetParam() = &quot;ode&quot; (1372 ms)\n</pre></div>\n\n\n<p>Also, I think the test has been failing on OS X for quite a while, but I didn't notice because so many other tests are failing there.</p>\n<p>This will take some detective work. Does anyone have ideas about how to investigate usage of uninitialized variables?</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-18T18:46:44.151390+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:27.463493+00:00", "type": "issue", "id": 1613}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1614/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1614.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1614/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1614/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1614/compile-errors-on-arm"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1614/vote"}}, "reporter": {"display_name": "Orion Poplawski", "uuid": "{cefd82b7-4299-4781-bd5b-f23bf8fb2d78}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcefd82b7-4299-4781-bd5b-f23bf8fb2d78%7D"}, "html": {"href": "https://bitbucket.org/%7Bcefd82b7-4299-4781-bd5b-f23bf8fb2d78%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/08b43f6823f1a63c7d0ae03a16b4aa6bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOP-1.png"}}, "nickname": "opoplawski", "type": "user", "account_id": "557058:073e1d41-1026-4909-b3f9-f2e8e9999d4e"}, "title": "Compile errors on ARM", "component": null, "votes": 0, "watches": 3, "content": {"raw": "We're back to compile errors on ARM due to fPIC in 4.0.2 on Fedora 23 with gcc 5:\r\n\r\n/usr/bin/ld: CMakeFiles/gazebomsgs_out.dir/generator/GazeboGenerator.cc.o: relocation R_ARM_MOVW_ABS_NC against `a local symbol' can not be used when making a shared object; recompile with -fPIC\r\n\r\nBuild log: https://kojipkgs.fedoraproject.org//work/tasks/5953/9595953/build.log\r\n\r\nAt this point, I think everything needs to be compiled with -fPIC.", "markup": "markdown", "html": "<p>We're back to compile errors on ARM due to fPIC in 4.0.2 on Fedora 23 with gcc 5:</p>\n<p>/usr/bin/ld: CMakeFiles/gazebomsgs_out.dir/generator/GazeboGenerator.cc.o: relocation R_ARM_MOVW_ABS_NC against `a local symbol' can not be used when making a shared object; recompile with -fPIC</p>\n<p>Build log: <a href=\"https://kojipkgs.fedoraproject.org//work/tasks/5953/9595953/build.log\" rel=\"nofollow\" class=\"ap-connect-link\">https://kojipkgs.fedoraproject.org//work/tasks/5953/9595953/build.log</a></p>\n<p>At this point, I think everything needs to be compiled with -fPIC.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-21T02:20:47.638278+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:16.539942+00:00", "type": "issue", "id": 1614}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1615/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1615.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1615/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1615/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1615/physics-profiles-are-set-after"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1615/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Physics profiles are set after PhysicsEngine initialization", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Currently the physics `PresetManager` is created after `PhysicsEngine::Init` has been called (see [World.cc:356-360](#!/osrf/gazebo/src/ff956ccfa2d5c326d9d0c4bb32b1c6a96747f9ef/gazebo/physics/World.cc#cl-356)).\r\nSome physics parameters can only be set before physics engine initialization and can't be changed dynamically, such as the ODE solver type. While it is one of our goals to make the ODE solver type dynamically changeable, I think it should also be doable to make the PresetManager load the physics parameters before initializing the physics engine.", "markup": "markdown", "html": "<p>Currently the physics <code>PresetManager</code> is created after <code>PhysicsEngine::Init</code> has been called (see <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/ff956ccfa2d5c326d9d0c4bb32b1c6a96747f9ef/gazebo/physics/World.cc#cl-356\" rel=\"nofollow\">World.cc:356-360</a>).\nSome physics parameters can only be set before physics engine initialization and can't be changed dynamically, such as the ODE solver type. While it is one of our goals to make the ODE solver type dynamically changeable, I think it should also be doable to make the PresetManager load the physics parameters before initializing the physics engine.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-22T21:19:31.405182+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:51.164763+00:00", "type": "issue", "id": 1615}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1616/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1616.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1616/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1616/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1616/securing-setup-keys-step"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1616/vote"}}, "reporter": {"display_name": "ruffsl", "uuid": "{6a46a82e-2fa2-4c3e-8eda-7e358eba7346}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6a46a82e-2fa2-4c3e-8eda-7e358eba7346%7D"}, "html": {"href": "https://bitbucket.org/%7B6a46a82e-2fa2-4c3e-8eda-7e358eba7346%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c73ca2cc01d25876148125d25cd9a0ced=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-1.png"}}, "nickname": "Ruffin White", "type": "user", "account_id": "557058:e92d3e8a-4ef2-40b6-9964-4df6057af861"}, "title": "Securing Setup keys Step", "component": null, "votes": 1, "watches": 3, "content": {"raw": "As I was reading through some new proposed [security guidelines](https://github.com/infosiftr/stackbrew/blob/docs/README.md#security) for official docker hub images, I realized our [Step-by-step Install](http://www.gazebosim.org/tutorials?tut=install_ubuntu&cat=install) is still instructing people to use `http` for retrieving the singed keys for the Gazebo repository.\r\n\r\nThis is of course quite insecure and I would suggest we migrate to a better method. ROS has adjusted it [wiki install instructions](http://wiki.ros.org/indigo/Installation/Ubuntu) to use `https` by hosting the keys on in [rosdistro](https://github.com/ros/rosdistro) and piggybacking off GitHub's `https` certification. I would guess something quite similar ineffective could be done here with Bitbucket.\r\n\r\nThis would also aid in my effort in getting Gazebo an official DockerHub image.  \r\nThanks!", "markup": "markdown", "html": "<p>As I was reading through some new proposed <a data-is-external-link=\"true\" href=\"https://github.com/infosiftr/stackbrew/blob/docs/README.md#security\" rel=\"nofollow\">security guidelines</a> for official docker hub images, I realized our <a data-is-external-link=\"true\" href=\"http://www.gazebosim.org/tutorials?tut=install_ubuntu&amp;cat=install\" rel=\"nofollow\">Step-by-step Install</a> is still instructing people to use <code>http</code> for retrieving the singed keys for the Gazebo repository.</p>\n<p>This is of course quite insecure and I would suggest we migrate to a better method. ROS has adjusted it <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/indigo/Installation/Ubuntu\" rel=\"nofollow\">wiki install instructions</a> to use <code>https</code> by hosting the keys on in <a data-is-external-link=\"true\" href=\"https://github.com/ros/rosdistro\" rel=\"nofollow\">rosdistro</a> and piggybacking off GitHub's <code>https</code> certification. I would guess something quite similar ineffective could be done here with Bitbucket.</p>\n<p>This would also aid in my effort in getting Gazebo an official DockerHub image.<br />\nThanks!</p>", "type": "rendered"}, "assignee": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-23T00:12:56.145173+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:25.032140+00:00", "type": "issue", "id": 1616}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1617/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1617.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1617/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1617/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1617/multiselect-doesnt-work-properly-on-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1617/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Multiselect doesn't work properly on the model list", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Holding `Ctrl` to multiselect in the scene works:\r\n\r\n1. Insert 2 models in the scene\r\n\r\n1. Click on one of them, then click on the other holding `Ctrl`\r\n\r\n1. Both visuals are highlighted in the scene and in the left panel\r\n\r\nBut multiselect on the left panel doesn't work well:\r\n\r\n1. Insert 2 models in the scene\r\n\r\n1. Click on the name of one of them in the scene - it gets highlighted in the scene and on the panel\r\n\r\n1. Holding `Ctrl`, click on the name of the second one: it gets highlighted in the scene but not on the panel", "markup": "markdown", "html": "<p>Holding <code>Ctrl</code> to multiselect in the scene works:</p>\n<ol>\n<li>\n<p>Insert 2 models in the scene</p>\n</li>\n<li>\n<p>Click on one of them, then click on the other holding <code>Ctrl</code></p>\n</li>\n<li>\n<p>Both visuals are highlighted in the scene and in the left panel</p>\n</li>\n</ol>\n<p>But multiselect on the left panel doesn't work well:</p>\n<ol>\n<li>\n<p>Insert 2 models in the scene</p>\n</li>\n<li>\n<p>Click on the name of one of them in the scene - it gets highlighted in the scene and on the panel</p>\n</li>\n<li>\n<p>Holding <code>Ctrl</code>, click on the name of the second one: it gets highlighted in the scene but not on the panel</p>\n</li>\n</ol>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-23T01:40:58.305035+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:20.957802+00:00", "type": "issue", "id": 1617}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1618/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1618.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1618/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1618/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1618/opende-with-solver-type-world-gazebo"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1618/vote"}}, "reporter": {"display_name": "Peshala Jayasekara", "uuid": "{a434c50c-1503-4e6e-b301-2fdcfd4e8f27}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba434c50c-1503-4e6e-b301-2fdcfd4e8f27%7D"}, "html": {"href": "https://bitbucket.org/%7Ba434c50c-1503-4e6e-b301-2fdcfd4e8f27%7D/"}, "avatar": {"href": "https://bitbucket.org/account/peshala/avatar/"}}, "nickname": "peshala", "type": "user", "account_id": null}, "title": "opende - with solver type \"world\", Gazebo crashes when a simple box is inserted", "component": {"name": "physics::ODEPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122883.json"}}}, "votes": 1, "watches": 3, "content": {"raw": "```\r\n#!xml\r\n\r\n    <physics type=\"ode\">\r\n      <ode>\r\n        <solver>\r\n          <type>world</type>\r\n        </solver>\r\n      </ode>\r\n    </physics>\r\n```\r\n\r\ndoes not crash. But, when you try to insert for e.g. a simple box from gazebo, it core dumps. This does not happen when <type>quick</type> I am using version 2.2.3 by the way.", "markup": "markdown", "html": "<div class=\"codehilite language-xml\"><pre><span></span>    <span class=\"nt\">&lt;physics</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;ode&gt;</span>\n        <span class=\"nt\">&lt;solver&gt;</span>\n          <span class=\"nt\">&lt;type&gt;</span>world<span class=\"nt\">&lt;/type&gt;</span>\n        <span class=\"nt\">&lt;/solver&gt;</span>\n      <span class=\"nt\">&lt;/ode&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n</pre></div>\n\n\n<p>does not crash. But, when you try to insert for e.g. a simple box from gazebo, it core dumps. This does not happen when &lt;type&gt;quick&lt;/type&gt; I am using version 2.2.3 by the way.</p>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "wontfix", "version": {"name": "2.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/51082.json"}}}, "edited_on": null, "created_on": "2015-05-26T01:34:37.640615+00:00", "milestone": null, "updated_on": "2017-01-26T22:14:04.510775+00:00", "type": "issue", "id": 1618}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1619/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1619.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1619/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1619/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1619/fix-speed_thread_pr2-integration-test"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1619/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Fix `speed_thread_pr2` integration test", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "This test was created in pull request #1561. It currently has no expectations because performance improvements are not seen across machines.", "markup": "markdown", "html": "<p>This test was created in <a href=\"#!/osrf/gazebo/pull-requests/1561/parallelize-position-projection-error\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1561</a>. It currently has no expectations because performance improvements are not seen across machines.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-29T00:39:09.276166+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:03.240116+00:00", "type": "issue", "id": 1619}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1620/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1620.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1620/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1620/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1620/model-insertion-deletion-not-properly"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1620/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Model insertion/deletion not properly logged/played back", "component": {"name": "util::Logging-Playback", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/283119.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I'm not sure if the problem is during logging or playback.\r\n\r\n# Insertion\r\n\r\nWhile recording a log, insert some models. During playback, you'll get messages like:\r\n\r\n~~~\r\n...\r\n[Err] [World.cc:1743] Unable to find model[unit_box_1]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_10]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_11]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_12]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_13]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_2]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_3]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_4]\r\n[Err] [World.cc:1743] Unable to find model[unit_box_5]\r\n...\r\n~~~\r\n\r\n# Deletion\r\n\r\nWhile logging, delete a model which has been in the scene since before starting to log. During playback the model doesn't disappear.", "markup": "markdown", "html": "<p>I'm not sure if the problem is during logging or playback.</p>\n<h1 id=\"markdown-header-insertion\">Insertion</h1>\n<p>While recording a log, insert some models. During playback, you'll get messages like:</p>\n<div class=\"codehilite\"><pre><span></span>...\n[Err] [World.cc:1743] Unable to find model[unit_box_1]\n[Err] [World.cc:1743] Unable to find model[unit_box_10]\n[Err] [World.cc:1743] Unable to find model[unit_box_11]\n[Err] [World.cc:1743] Unable to find model[unit_box_12]\n[Err] [World.cc:1743] Unable to find model[unit_box_13]\n[Err] [World.cc:1743] Unable to find model[unit_box_2]\n[Err] [World.cc:1743] Unable to find model[unit_box_3]\n[Err] [World.cc:1743] Unable to find model[unit_box_4]\n[Err] [World.cc:1743] Unable to find model[unit_box_5]\n...\n</pre></div>\n\n\n<h1 id=\"markdown-header-deletion\">Deletion</h1>\n<p>While logging, delete a model which has been in the scene since before starting to log. During playback the model doesn't disappear.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-05-29T01:33:30.112701+00:00", "milestone": null, "updated_on": "2018-02-07T23:42:11.958428+00:00", "type": "issue", "id": 1620}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1621/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1621.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1621/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1621/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1621/serverfixture-starts-rendering-engine-in-a"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1621/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "ServerFixture starts rendering engine in a separate thread which may cause rendering tests to fail.", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "- any test that requires OGRE to use the GL hardware buffer could fail\r\n\r\n- some rendering tests segfault on OSX\r\n\r\n- tests could pass but still produce the following msg:\r\n\r\n~~~\r\n[Err] [Visual.cc:2185] Unable to insert mesh[Cannot create GL vertex buffer]\r\n~~~\r\n\r\n", "markup": "markdown", "html": "<ul>\n<li>\n<p>any test that requires OGRE to use the GL hardware buffer could fail</p>\n</li>\n<li>\n<p>some rendering tests segfault on OSX</p>\n</li>\n<li>\n<p>tests could pass but still produce the following msg:</p>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>[Err] [Visual.cc:2185] Unable to insert mesh[Cannot create GL vertex buffer]\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-01T18:31:24.562827+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:46.019201+00:00", "type": "issue", "id": 1621}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1622/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1622.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1622/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1622/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1622/test-case-of-multiple-gzclients"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1622/vote"}}, "reporter": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "title": "Test case of multiple gzclients", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Find a way of testing the case of multiple gzclients subscribed to one gzserver.\r\n\r\nPreliminary brainstorm for different paths to this:\r\n\r\n1. Create integration test that launches a server and then forks a process that spins up GLWidget, MainWindow, etc. and runs through some known cases that might be buggy. Or, on an extremely coarse-grained level, test running gzserver and forking gzclient.\r\n\r\n2. Write a build script to run existing client-side tests in a one server, two client scheme.\r\n\r\n3. similar to the above, but requires code changes: create a flag that can be passed to QTestFixture via the command line that spins up multiple gzclients for the test.\r\n\r\n@\\_jrivero\\_, any thoughts?", "markup": "markdown", "html": "<p>Find a way of testing the case of multiple gzclients subscribed to one gzserver.</p>\n<p>Preliminary brainstorm for different paths to this:</p>\n<ol>\n<li>\n<p>Create integration test that launches a server and then forks a process that spins up GLWidget, MainWindow, etc. and runs through some known cases that might be buggy. Or, on an extremely coarse-grained level, test running gzserver and forking gzclient.</p>\n</li>\n<li>\n<p>Write a build script to run existing client-side tests in a one server, two client scheme.</p>\n</li>\n<li>\n<p>similar to the above, but requires code changes: create a flag that can be passed to QTestFixture via the command line that spins up multiple gzclients for the test.</p>\n</li>\n</ol>\n<p>@_jrivero_, any thoughts?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-02T00:38:19.626766+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:57.077523+00:00", "type": "issue", "id": 1622}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1623/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1623.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1623/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1623/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1623/better-documentation-for"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1623/vote"}}, "reporter": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "title": "better documentation for REGRESSION_940_force_torque_sensor_frame", "component": {"name": "documentation", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/141921.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Right now line 88 of `test/regression/940_force_torque_sensor_frame.cc` refers to `force_torque_frame_test.world` for more details on how the expected answers of the test. However, it's still not obvious to me how the forces and torques for the test are derived.", "markup": "markdown", "html": "<p>Right now line 88 of <code>test/regression/940_force_torque_sensor_frame.cc</code> refers to <code>force_torque_frame_test.world</code> for more details on how the expected answers of the test. However, it's still not obvious to me how the forces and torques for the test are derived.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-02T15:48:43.569149+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:55.215800+00:00", "type": "issue", "id": 1623}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1624/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1624.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1624/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1624/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1624/imusensorplugin-onupdate-is-not-called"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1624/vote"}}, "reporter": {"display_name": "Patrick de Kok", "uuid": "{1fc4366d-272e-4191-9c4e-826760fecec3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1fc4366d-272e-4191-9c4e-826760fecec3%7D"}, "html": {"href": "https://bitbucket.org/%7B1fc4366d-272e-4191-9c4e-826760fecec3%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b5ace55ce8292adfd415bc947e89eb85d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-1.png"}}, "nickname": "pkok", "type": "user", "account_id": "557058:814f49e0-f342-43d7-adc9-2d4fb5f34ff4"}, "title": "`ImuSensorPlugin::OnUpdate()` is not called", "component": null, "votes": 0, "watches": 2, "content": {"raw": "When writing an ImuSensorPlugin subclass, the `OnUpdate` method is not (never?) called. The plugins in [this test repo](https://bitbucket.org/pkok/example_gazebo_plugins) illustrate the issue:\r\n\r\nWhen `gazebo --verbose test.world` is run, you would expect to see output from both modules (nearly alternating lines of `IMU report #...` and `Camera report #...`). However, I never encounter these. From a [previous pull request](#!/osrf/gazebo/pull-request/1698/export-methods-and-constructors-of-these) it was clear that `ImuSensorPlugin` and some other related plugins have not been thoroughly tested yet, which makes it likely to be a bug. Does anyone know a solution to this?\r\n\r\nThe used version of Gazebo is from the head of this repository.", "markup": "markdown", "html": "<p>When writing an ImuSensorPlugin subclass, the <code>OnUpdate</code> method is not (never?) called. The plugins in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pkok/example_gazebo_plugins\" rel=\"nofollow\">this test repo</a> illustrate the issue:</p>\n<p>When <code>gazebo --verbose test.world</code> is run, you would expect to see output from both modules (nearly alternating lines of <code>IMU report #...</code> and <code>Camera report #...</code>). However, I never encounter these. From a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/pull-request/1698/export-methods-and-constructors-of-these\" rel=\"nofollow\">previous pull request</a> it was clear that <code>ImuSensorPlugin</code> and some other related plugins have not been thoroughly tested yet, which makes it likely to be a bug. Does anyone know a solution to this?</p>\n<p>The used version of Gazebo is from the head of this repository.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-02T16:35:30.925722+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:55.683537+00:00", "type": "issue", "id": 1624}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1625/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1625.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1625/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1625/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1625/command-line-arguments-for-logging"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1625/vote"}}, "reporter": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "title": "Command line arguments for logging/playback", "component": {"name": "util::Logging-Playback", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/283119.json"}}}, "votes": 1, "watches": 3, "content": {"raw": "It would be nice to be able to start and stop logging while Gazebo is running. Currently you can start Gazebo with flags --play, --record, etc. but we should add functionality to log and play dynamically.\r\n\r\nProposal for a simple interface:\r\n\r\n```\r\ngz logging <--play/--stop/--filename/--record>\r\n```", "markup": "markdown", "html": "<p>It would be nice to be able to start and stop logging while Gazebo is running. Currently you can start Gazebo with flags --play, --record, etc. but we should add functionality to log and play dynamically.</p>\n<p>Proposal for a simple interface:</p>\n<div class=\"codehilite\"><pre><span></span>gz logging &lt;--play/--stop/--filename/--record&gt;\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-02T16:41:30.372080+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:55.813639+00:00", "type": "issue", "id": 1625}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1626/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1626.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1626/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1626/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1626/unit_timer_test-fails-on-os-x"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1626/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "UNIT_Timer_TEST fails on OS X", "component": {"name": "os::osx", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/126618.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "The `UNIT_Timer_TEST` from pull request #1690 fails on OS X with tolerances that are fine on Ubuntu. Here's an example of the failed expectations:\r\n\r\n~~~\r\n79: [ RUN      ] TimerTest.Timer\r\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:41: Failure\r\n79: The difference between elapsed.nsec and 2e8 is 10075000, which exceeds 1e5, where\r\n79: elapsed.nsec evaluates to 210075000,\r\n79: 2e8 evaluates to 200000000, and\r\n79: 1e5 evaluates to 100000.\r\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:48: Failure\r\n79: The difference between elapsed.nsec and timer.GetElapsed().nsec is 276000, which exceeds 1e5, where\r\n79: elapsed.nsec evaluates to 210075000,\r\n79: timer.GetElapsed().nsec evaluates to 210351000, and\r\n79: 1e5 evaluates to 100000.\r\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:55: Failure\r\n79: The difference between timer.GetElapsed().nsec and 3e8 is 20427000, which exceeds 1e6, where\r\n79: timer.GetElapsed().nsec evaluates to 320427000,\r\n79: 3e8 evaluates to 300000000, and\r\n79: 1e6 evaluates to 1000000.\r\n79: [  FAILED  ] TimerTest.Timer (422 ms)\r\n79: [ RUN      ] TimerTest.CountdownTimer\r\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:78: Failure\r\n79: The difference between elapsed.nsec and 8e8 is 2854000, which exceeds 1e5, where\r\n79: elapsed.nsec evaluates to 797146000,\r\n79: 8e8 evaluates to 800000000, and\r\n79: 1e5 evaluates to 100000.\r\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:85: Failure\r\n79: The difference between elapsed.nsec and timer.GetElapsed().nsec is 206000, which exceeds 1e5, where\r\n79: elapsed.nsec evaluates to 797146000,\r\n79: timer.GetElapsed().nsec evaluates to 796940000, and\r\n79: 1e5 evaluates to 100000.\r\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:92: Failure\r\n79: The difference between timer.GetElapsed().nsec and 7e8 is 4907000, which exceeds 1e6, where\r\n79: timer.GetElapsed().nsec evaluates to 695093000,\r\n79: 7e8 evaluates to 700000000, and\r\n79: 1e6 evaluates to 1000000.\r\n79: [  FAILED  ] TimerTest.CountdownTimer (408 ms)\r\n~~~\r\n\r\nIt could be a bug in our `Time::MSleep` functions. The test is currently disabled for OSX.", "markup": "markdown", "html": "<p>The <code>UNIT_Timer_TEST</code> from <a href=\"#!/osrf/gazebo/pull-requests/1690/add-countdown-feature-to-common-timer\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1690</a> fails on OS X with tolerances that are fine on Ubuntu. Here's an example of the failed expectations:</p>\n<div class=\"codehilite\"><pre><span></span>79: [ RUN      ] TimerTest.Timer\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:41: Failure\n79: The difference between elapsed.nsec and 2e8 is 10075000, which exceeds 1e5, where\n79: elapsed.nsec evaluates to 210075000,\n79: 2e8 evaluates to 200000000, and\n79: 1e5 evaluates to 100000.\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:48: Failure\n79: The difference between elapsed.nsec and timer.GetElapsed().nsec is 276000, which exceeds 1e5, where\n79: elapsed.nsec evaluates to 210075000,\n79: timer.GetElapsed().nsec evaluates to 210351000, and\n79: 1e5 evaluates to 100000.\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:55: Failure\n79: The difference between timer.GetElapsed().nsec and 3e8 is 20427000, which exceeds 1e6, where\n79: timer.GetElapsed().nsec evaluates to 320427000,\n79: 3e8 evaluates to 300000000, and\n79: 1e6 evaluates to 1000000.\n79: [  FAILED  ] TimerTest.Timer (422 ms)\n79: [ RUN      ] TimerTest.CountdownTimer\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:78: Failure\n79: The difference between elapsed.nsec and 8e8 is 2854000, which exceeds 1e5, where\n79: elapsed.nsec evaluates to 797146000,\n79: 8e8 evaluates to 800000000, and\n79: 1e5 evaluates to 100000.\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:85: Failure\n79: The difference between elapsed.nsec and timer.GetElapsed().nsec is 206000, which exceeds 1e5, where\n79: elapsed.nsec evaluates to 797146000,\n79: timer.GetElapsed().nsec evaluates to 796940000, and\n79: 1e5 evaluates to 100000.\n79: /Users/jenkins/workspace/gazebo-any-devel-homebrew-amd64/gazebo6/gazebo/common/Timer_TEST.cc:92: Failure\n79: The difference between timer.GetElapsed().nsec and 7e8 is 4907000, which exceeds 1e6, where\n79: timer.GetElapsed().nsec evaluates to 695093000,\n79: 7e8 evaluates to 700000000, and\n79: 1e6 evaluates to 1000000.\n79: [  FAILED  ] TimerTest.CountdownTimer (408 ms)\n</pre></div>\n\n\n<p>It could be a bug in our <code>Time::MSleep</code> functions. The test is currently disabled for OSX.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-03T00:41:22.463715+00:00", "milestone": null, "updated_on": "2016-10-19T15:22:17.266953+00:00", "type": "issue", "id": 1626}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1627/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1627.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1627/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1627/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1627/test_configh-and-libgazebo_test_fixturea"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1627/vote"}}, "reporter": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "title": "test_config.h and libgazebo_test_fixture.a are being installed/released with compilation PATHs", "component": {"name": "testing", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/128164.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "test_config.h is being generated at compile time to host the compilation PATHs used later during the testing. Currently is being include by ServerFixture.hh but it is really only used in ServerFixture.cc. I've created [a branch to move the include](#!/osrf/gazebo/branches/compare/no_test_config%0Ddefault#diff) and also do not install that file in the system, it makes no sense to install/release compilation paths. \r\n\r\nSince from ServerFixture.cc we are generating the libgazebo_test_fixture.a static library, we are using these hardcoded compilation PATHs in there. We need to figure out how to fix this problem and allow users to specify/get their proper testing paths.", "markup": "markdown", "html": "<p>test_config.h is being generated at compile time to host the compilation PATHs used later during the testing. Currently is being include by ServerFixture.hh but it is really only used in ServerFixture.cc. I've created <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/no_test_config%0Ddefault#diff\" rel=\"nofollow\">a branch to move the include</a> and also do not install that file in the system, it makes no sense to install/release compilation paths. </p>\n<p>Since from ServerFixture.cc we are generating the libgazebo_test_fixture.a static library, we are using these hardcoded compilation PATHs in there. We need to figure out how to fix this problem and allow users to specify/get their proper testing paths.</p>", "type": "rendered"}, "assignee": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-03T22:53:06.946223+00:00", "milestone": null, "updated_on": "2018-03-19T21:23:12.580525+00:00", "type": "issue", "id": 1627}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1628/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1628.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1628/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1628/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1628/gazebo-crashing-with-intel-graphics-card"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1628/vote"}}, "reporter": {"display_name": "Ajay Tanwani", "uuid": "{69a8a293-140f-4ab9-963a-bfa1a520b9db}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B69a8a293-140f-4ab9-963a-bfa1a520b9db%7D"}, "html": {"href": "https://bitbucket.org/%7B69a8a293-140f-4ab9-963a-bfa1a520b9db%7D/"}, "avatar": {"href": "https://bitbucket.org/account/aktanwani/avatar/"}}, "nickname": "aktanwani", "type": "user", "account_id": null}, "title": "gazebo crashing with Intel graphics card while running baxter simulator", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Hello,\r\n\r\nI am experiencing problems in launching baxter simulator with gazebo. I get different behaviour most of the time when I launch the simulator. Two common errors are (apart from segmentation faults):\r\n\r\n1. This one is most frequent. In this case, the simulator does not launch and the error reports:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nX Error of failed request:  BadDrawable (invalid Pixmap or Window parameter)\r\n  Major opcode of failed request:  154 (DRI2)\r\n  Minor opcode of failed request:  3 (DRI2CreateDrawable)\r\n  Resource id in failed request:  0x5200002\r\n  Serial number of failed request:  37\r\n  Current serial number in output stream:  39\r\n```\r\n\r\n\r\n\r\n2. Sometimes, the simulator launches with the robot fine but I am not able to move the robot.\r\n\r\n```\r\n#!c++\r\n\r\n\r\n[ERROR] [1433495983.497998746, 81.685000000]: Could not stop controller 'right_joint_velocity_controller' since it is not running\r\n[ERROR] [1433495983.498204438, 81.685000000]: Failed to switch controllers\r\n```\r\n\r\n\r\n**Specifications:\r\n**\r\n\r\nLaptop: Thinkpad T450s\r\n\r\nGraphic card: Intel Corporation Broadwell-U Integrated Graphics\r\n\r\nVersion: 09\r\n\r\nglxinfo output: attached (glxgears runs fine at 60 FPS)\r\n\r\nogre.log: attached \r\n\r\nlinux: ubuntu 14.04.02\r\n\r\ninstallation steps: installed from source (http://www.gazebosim.org/tutorials?tut=install&ver=2.2&cat=install)\r\n\r\nGazebo version: 2.2.1\r\n\r\nROS version: ROS indigo\r\n\r\ndesktop environment: unity\r\n\r\nAny pointers would be appreciated.\r\n\r\nBest,\r\n-Ajay", "markup": "markdown", "html": "<p>Hello,</p>\n<p>I am experiencing problems in launching baxter simulator with gazebo. I get different behaviour most of the time when I launch the simulator. Two common errors are (apart from segmentation faults):</p>\n<ol>\n<li>This one is most frequent. In this case, the simulator does not launch and the error reports:</li>\n</ol>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">X</span> <span class=\"n\">Error</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"nl\">request</span><span class=\"p\">:</span>  <span class=\"n\">BadDrawable</span> <span class=\"p\">(</span><span class=\"n\">invalid</span> <span class=\"n\">Pixmap</span> <span class=\"n\">or</span> <span class=\"n\">Window</span> <span class=\"n\">parameter</span><span class=\"p\">)</span>\n  <span class=\"n\">Major</span> <span class=\"n\">opcode</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"nl\">request</span><span class=\"p\">:</span>  <span class=\"mi\">154</span> <span class=\"p\">(</span><span class=\"n\">DRI2</span><span class=\"p\">)</span>\n  <span class=\"n\">Minor</span> <span class=\"n\">opcode</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"nl\">request</span><span class=\"p\">:</span>  <span class=\"mi\">3</span> <span class=\"p\">(</span><span class=\"n\">DRI2CreateDrawable</span><span class=\"p\">)</span>\n  <span class=\"n\">Resource</span> <span class=\"n\">id</span> <span class=\"n\">in</span> <span class=\"n\">failed</span> <span class=\"nl\">request</span><span class=\"p\">:</span>  <span class=\"mh\">0x5200002</span>\n  <span class=\"n\">Serial</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">failed</span> <span class=\"nl\">request</span><span class=\"p\">:</span>  <span class=\"mi\">37</span>\n  <span class=\"n\">Current</span> <span class=\"n\">serial</span> <span class=\"n\">number</span> <span class=\"n\">in</span> <span class=\"n\">output</span> <span class=\"nl\">stream</span><span class=\"p\">:</span>  <span class=\"mi\">39</span>\n</pre></div>\n\n\n<ol>\n<li>Sometimes, the simulator launches with the robot fine but I am not able to move the robot.</li>\n</ol>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">ERROR</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"mf\">1433495983.497998746</span><span class=\"p\">,</span> <span class=\"mf\">81.685000000</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">stop</span> <span class=\"n\">controller</span> <span class=\"err\">&#39;</span><span class=\"n\">right_joint_velocity_controller</span><span class=\"err\">&#39;</span> <span class=\"n\">since</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">running</span>\n<span class=\"p\">[</span><span class=\"n\">ERROR</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"mf\">1433495983.498204438</span><span class=\"p\">,</span> <span class=\"mf\">81.685000000</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"k\">switch</span> <span class=\"n\">controllers</span>\n</pre></div>\n\n\n<p><strong>Specifications:\n</strong></p>\n<p>Laptop: Thinkpad T450s</p>\n<p>Graphic card: Intel Corporation Broadwell-U Integrated Graphics</p>\n<p>Version: 09</p>\n<p>glxinfo output: attached (glxgears runs fine at 60 FPS)</p>\n<p>ogre.log: attached </p>\n<p>linux: ubuntu 14.04.02</p>\n<p>installation steps: installed from source (<a href=\"http://www.gazebosim.org/tutorials?tut=install&amp;ver=2.2&amp;cat=install\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.gazebosim.org/tutorials?tut=install&amp;ver=2.2&amp;cat=install</a>)</p>\n<p>Gazebo version: 2.2.1</p>\n<p>ROS version: ROS indigo</p>\n<p>desktop environment: unity</p>\n<p>Any pointers would be appreciated.</p>\n<p>Best,\n-Ajay</p>", "type": "rendered"}, "assignee": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-05T10:04:21.605398+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:08.151523+00:00", "type": "issue", "id": 1628}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1629/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1629.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1629/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1629/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1629/removing-model-from-plugin-crashes-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1629/vote"}}, "reporter": {"display_name": "Elte Hupkes", "uuid": "{f23aa1a9-ae57-493f-8169-fbb59b3eae43}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D"}, "html": {"href": "https://bitbucket.org/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8560ee94d50ba277c411499a45b3d732d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEH-5.png"}}, "nickname": "ElteHupkes", "type": "user", "account_id": "557058:b758f523-bdaa-4718-964c-03b825bdea8d"}, "title": "Removing model from plugin crashes with null pointer", "component": null, "votes": 1, "watches": 2, "content": {"raw": "I'm writing a plugin which inserts a model into a world, checks for contacts and then removes it again. This works fine until the `RemoveModel` step, which crashes the plugin with a NULL boost smart pointer. I've tried doing it several ways already (through a topic, through `world_->Clear()` which would also be fine in my case), but every approach sooner or later crashes with either a threading error, a boost null pointer dereferencing or a segmentation fault. Probably I'm clearing the models at an unexpected moment, but I honestly have no idea how to work around it. It also seems that which approach crashes when depends on the complexity of the model.\r\n\r\nThe simplest case, using `RemoveModel`, crashes *always* as long as the model has more than one link. I've managed to isolate it into a plugin that causes it:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n#include <gazebo/gazebo.hh>\r\n#include <gazebo/physics/physics.hh>\r\n#include <boost/thread/mutex.hpp>\r\n#include <boost/lexical_cast.hpp>\r\n#include <iostream>\r\n#include <queue>\r\n\r\nnamespace gazebo\r\n{\r\nclass BreakPlugin : public WorldPlugin {\r\npublic:\r\n\tBreakPlugin() : WorldPlugin() {}\r\n\r\n\tvoid Load(physics::WorldPtr _world, sdf::ElementPtr _sdf) {\r\n\t\tstd::cout << \"Plugin loaded.\" << std::endl;\r\n\r\n\t\tcounter_ = 0;\r\n\r\n\t\tworld_ = _world;\r\n\r\n\t\t// Pause the world\r\n\t\tworld_->SetPaused(true);\r\n\r\n\t\t// Create a new transport node for advertising / subscribing\r\n\t\tnode_.reset(new transport::Node());\r\n\t\tnode_->Init();\r\n\r\n\t\t// Subscribe to model insertion\r\n\t\tmodelSub_ = node_->Subscribe(\"~/model/info\", &BreakPlugin::OnModel, this);\r\n\r\n\t\t// Subscribe to contacts\r\n\t\tcontactsSub_ = node_->Subscribe(\"~/physics/contacts\", &BreakPlugin::OnContacts, this);\r\n\r\n\t\tthis->AddNew();\r\n\t}\r\n\r\n\tvoid AddNew() {\r\n\t\t// The sphere model from the world plugin example - remove works\r\n\t\t// fine with one link, crashes with two.\r\n\t\tsdf::SDF sphereSDF;\r\n\t\tsphereSDF.SetFromString(\r\n\t\t\t\t\"<sdf version ='1.5'>\\\r\n\t\t\t\t\t  <model name ='sphere'>\\\r\n\t\t\t\t\t\t<pose>1 0 0 0 0 0</pose>\\\r\n\t\t\t\t\t\t<link name ='link'>\\\r\n\t\t\t\t\t\t  <pose>0 0 .5 0 0 0</pose>\\\r\n\t\t\t\t\t\t  <collision name ='collision'>\\\r\n\t\t\t\t\t\t\t<geometry>\\\r\n\t\t\t\t\t\t\t  <sphere><radius>0.5</radius></sphere>\\\r\n\t\t\t\t\t\t\t</geometry>\\\r\n\t\t\t\t\t\t  </collision>\\\r\n\t\t\t\t\t\t  <visual name ='visual'>\\\r\n\t\t\t\t\t\t\t<geometry>\\\r\n\t\t\t\t\t\t\t  <sphere><radius>0.5</radius></sphere>\\\r\n\t\t\t\t\t\t\t</geometry>\\\r\n\t\t\t\t\t\t  </visual>\\\r\n\t\t\t\t\t\t</link>\\\r\n\t\t\t\t\t\t<link name ='link2'>\\\r\n\t\t\t\t\t\t  <pose>0 0 1.5 0 0 0</pose>\\\r\n\t\t\t\t\t\t  <collision name ='collision'>\\\r\n\t\t\t\t\t\t\t<geometry>\\\r\n\t\t\t\t\t\t\t  <sphere><radius>0.5</radius></sphere>\\\r\n\t\t\t\t\t\t\t</geometry>\\\r\n\t\t\t\t\t\t  </collision>\\\r\n\t\t\t\t\t\t  <visual name ='visual'>\\\r\n\t\t\t\t\t\t\t<geometry>\\\r\n\t\t\t\t\t\t\t  <sphere><radius>0.5</radius></sphere>\\\r\n\t\t\t\t\t\t\t</geometry>\\\r\n\t\t\t\t\t\t  </visual>\\\r\n\t\t\t\t\t\t</link>\\\r\n\t\t\t\t\t  </model>\\\r\n\t\t\t\t\t</sdf>\");\r\n\r\n\t\tsdf::ElementPtr model = sphereSDF.root->GetElement(\"model\");\r\n\t\tstd::string name = \"unique_sphere_\"+boost::lexical_cast<std::string>(counter_);\r\n\t\tmodel->GetAttribute(\"name\")->SetFromString(name);\r\n\t\tworld_->InsertModelSDF(sphereSDF);\r\n\t\tstd::cout << \"Added model #\" << counter_ << std::endl;\r\n\t}\r\n\r\n\tvoid OnModel(ConstModelPtr & msg) {\r\n\t\t// Unpause the world for a step of processing\r\n\t\tworld_->SetPaused(false);\r\n\t\tstd::cout << \"Models in world: \" << world_->GetModelCount() << std::endl;\r\n\t}\r\n\r\n\tvoid OnContacts(ConstContactsPtr &msg) {\r\n\t\t// Handle contacts\r\n\t\tworld_->SetPaused(true);\r\n\t\tstd::string name = \"unique_sphere_\"+boost::lexical_cast<std::string>(counter_);\r\n\r\n\t\t// Crash will occur shortly after this - not removing the model works fine.\r\n\t\tworld_->RemoveModel(name);\r\n\r\n\t\t// This output is still shown, so I'm assuming the crash occurs on another thread\r\n\t\tstd::cout << \"Model removed.\" << std::endl;\r\n\t}\r\n\r\nprivate:\r\n\t// Store a pointer to the world\r\n\tphysics::WorldPtr world_;\r\n\r\n\t// Request counter\r\n\tint counter_;\r\n\r\n\t// Transport node\r\n\ttransport::NodePtr node_;\r\n\r\n\t// Subscribers / publishers\r\n\ttransport::SubscriberPtr modelSub_;\r\n\ttransport::SubscriberPtr contactsSub_;\r\n};\r\n\r\nGZ_REGISTER_WORLD_PLUGIN(BreakPlugin)\r\n\r\n}\r\n```\r\n\r\nJust attach this plugin to any world, run it, and it will crash with:\r\n\r\n```\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:653: typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = gazebo::transport::Node; typename boost::detail::sp_member_access<T>::type = gazebo::transport::Node*]: Assertion `px != 0' failed.\r\n```\r\n\r\nI've been testing it with this empty zero gravity world:\r\n```\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.5\">\r\n  <world name=\"default\">\r\n    <physics type=\"ode\">\r\n      <gravity>0 0 0</gravity>\r\n    </physics>\r\n\r\n  <plugin name=\"breakplugin\" filename=\"libbreakplugin.so\" />\r\n  </world>\r\n</sdf>\r\n```\r\n\r\nUnfortunately I haven't yet been able to figure out *why* this happens. Is there anything about the way I'm deleting the model that is unsafe? If I do it with `world_->Clear()` at the same point it works fine for this example, but crashes with a segfault with another (the conditions of which I can't yet pinpoint, but I think it has something to do with a sensor updating after the model is deleted).\r\n\r\nIf possible, could someone perhaps suggest a workaround, i.e. a way of deleting a model safely?", "markup": "markdown", "html": "<p>I'm writing a plugin which inserts a model into a world, checks for contacts and then removes it again. This works fine until the <code>RemoveModel</code> step, which crashes the plugin with a NULL boost smart pointer. I've tried doing it several ways already (through a topic, through <code>world_-&gt;Clear()</code> which would also be fine in my case), but every approach sooner or later crashes with either a threading error, a boost null pointer dereferencing or a segmentation fault. Probably I'm clearing the models at an unexpected moment, but I honestly have no idea how to work around it. It also seems that which approach crashes when depends on the complexity of the model.</p>\n<p>The simplest case, using <code>RemoveModel</code>, crashes <em>always</em> as long as the model has more than one link. I've managed to isolate it into a plugin that causes it:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gazebo/gazebo.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gazebo/physics/physics.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;boost/thread/mutex.hpp&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;boost/lexical_cast.hpp&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;queue&gt;</span><span class=\"cp\"></span>\n\n<span class=\"k\">namespace</span> <span class=\"n\">gazebo</span>\n<span class=\"p\">{</span>\n<span class=\"k\">class</span> <span class=\"nc\">BreakPlugin</span> <span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">WorldPlugin</span> <span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n    <span class=\"n\">BreakPlugin</span><span class=\"p\">()</span> <span class=\"o\">:</span> <span class=\"n\">WorldPlugin</span><span class=\"p\">()</span> <span class=\"p\">{}</span>\n\n    <span class=\"kt\">void</span> <span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">WorldPtr</span> <span class=\"n\">_world</span><span class=\"p\">,</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">_sdf</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Plugin loaded.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n\n        <span class=\"n\">counter_</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n        <span class=\"n\">world_</span> <span class=\"o\">=</span> <span class=\"n\">_world</span><span class=\"p\">;</span>\n\n        <span class=\"c1\">// Pause the world</span>\n        <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">SetPaused</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n\n        <span class=\"c1\">// Create a new transport node for advertising / subscribing</span>\n        <span class=\"n\">node_</span><span class=\"p\">.</span><span class=\"n\">reset</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span><span class=\"p\">());</span>\n        <span class=\"n\">node_</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">();</span>\n\n        <span class=\"c1\">// Subscribe to model insertion</span>\n        <span class=\"n\">modelSub_</span> <span class=\"o\">=</span> <span class=\"n\">node_</span><span class=\"o\">-&gt;</span><span class=\"n\">Subscribe</span><span class=\"p\">(</span><span class=\"s\">&quot;~/model/info&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">BreakPlugin</span><span class=\"o\">::</span><span class=\"n\">OnModel</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">);</span>\n\n        <span class=\"c1\">// Subscribe to contacts</span>\n        <span class=\"n\">contactsSub_</span> <span class=\"o\">=</span> <span class=\"n\">node_</span><span class=\"o\">-&gt;</span><span class=\"n\">Subscribe</span><span class=\"p\">(</span><span class=\"s\">&quot;~/physics/contacts&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">BreakPlugin</span><span class=\"o\">::</span><span class=\"n\">OnContacts</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">);</span>\n\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">AddNew</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kt\">void</span> <span class=\"n\">AddNew</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// The sphere model from the world plugin example - remove works</span>\n        <span class=\"c1\">// fine with one link, crashes with two.</span>\n        <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDF</span> <span class=\"n\">sphereSDF</span><span class=\"p\">;</span>\n        <span class=\"n\">sphereSDF</span><span class=\"p\">.</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span>\n                <span class=\"s\">&quot;&lt;sdf version =&#39;1.5&#39;&gt;\\</span>\n<span class=\"s\">                      &lt;model name =&#39;sphere&#39;&gt;\\</span>\n<span class=\"s\">                        &lt;pose&gt;1 0 0 0 0 0&lt;/pose&gt;\\</span>\n<span class=\"s\">                        &lt;link name =&#39;link&#39;&gt;\\</span>\n<span class=\"s\">                          &lt;pose&gt;0 0 .5 0 0 0&lt;/pose&gt;\\</span>\n<span class=\"s\">                          &lt;collision name =&#39;collision&#39;&gt;\\</span>\n<span class=\"s\">                            &lt;geometry&gt;\\</span>\n<span class=\"s\">                              &lt;sphere&gt;&lt;radius&gt;0.5&lt;/radius&gt;&lt;/sphere&gt;\\</span>\n<span class=\"s\">                            &lt;/geometry&gt;\\</span>\n<span class=\"s\">                          &lt;/collision&gt;\\</span>\n<span class=\"s\">                          &lt;visual name =&#39;visual&#39;&gt;\\</span>\n<span class=\"s\">                            &lt;geometry&gt;\\</span>\n<span class=\"s\">                              &lt;sphere&gt;&lt;radius&gt;0.5&lt;/radius&gt;&lt;/sphere&gt;\\</span>\n<span class=\"s\">                            &lt;/geometry&gt;\\</span>\n<span class=\"s\">                          &lt;/visual&gt;\\</span>\n<span class=\"s\">                        &lt;/link&gt;\\</span>\n<span class=\"s\">                        &lt;link name =&#39;link2&#39;&gt;\\</span>\n<span class=\"s\">                          &lt;pose&gt;0 0 1.5 0 0 0&lt;/pose&gt;\\</span>\n<span class=\"s\">                          &lt;collision name =&#39;collision&#39;&gt;\\</span>\n<span class=\"s\">                            &lt;geometry&gt;\\</span>\n<span class=\"s\">                              &lt;sphere&gt;&lt;radius&gt;0.5&lt;/radius&gt;&lt;/sphere&gt;\\</span>\n<span class=\"s\">                            &lt;/geometry&gt;\\</span>\n<span class=\"s\">                          &lt;/collision&gt;\\</span>\n<span class=\"s\">                          &lt;visual name =&#39;visual&#39;&gt;\\</span>\n<span class=\"s\">                            &lt;geometry&gt;\\</span>\n<span class=\"s\">                              &lt;sphere&gt;&lt;radius&gt;0.5&lt;/radius&gt;&lt;/sphere&gt;\\</span>\n<span class=\"s\">                            &lt;/geometry&gt;\\</span>\n<span class=\"s\">                          &lt;/visual&gt;\\</span>\n<span class=\"s\">                        &lt;/link&gt;\\</span>\n<span class=\"s\">                      &lt;/model&gt;\\</span>\n<span class=\"s\">                    &lt;/sdf&gt;&quot;</span><span class=\"p\">);</span>\n\n        <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">sphereSDF</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;model&quot;</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&quot;unique_sphere_&quot;</span><span class=\"o\">+</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">counter_</span><span class=\"p\">);</span>\n        <span class=\"n\">model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetAttribute</span><span class=\"p\">(</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">);</span>\n        <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">InsertModelSDF</span><span class=\"p\">(</span><span class=\"n\">sphereSDF</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Added model #&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">counter_</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kt\">void</span> <span class=\"n\">OnModel</span><span class=\"p\">(</span><span class=\"n\">ConstModelPtr</span> <span class=\"o\">&amp;</span> <span class=\"n\">msg</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// Unpause the world for a step of processing</span>\n        <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">SetPaused</span><span class=\"p\">(</span><span class=\"nb\">false</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Models in world: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetModelCount</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kt\">void</span> <span class=\"n\">OnContacts</span><span class=\"p\">(</span><span class=\"n\">ConstContactsPtr</span> <span class=\"o\">&amp;</span><span class=\"n\">msg</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// Handle contacts</span>\n        <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">SetPaused</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&quot;unique_sphere_&quot;</span><span class=\"o\">+</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">counter_</span><span class=\"p\">);</span>\n\n        <span class=\"c1\">// Crash will occur shortly after this - not removing the model works fine.</span>\n        <span class=\"n\">world_</span><span class=\"o\">-&gt;</span><span class=\"n\">RemoveModel</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">);</span>\n\n        <span class=\"c1\">// This output is still shown, so I&#39;m assuming the crash occurs on another thread</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Model removed.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n<span class=\"k\">private</span><span class=\"o\">:</span>\n    <span class=\"c1\">// Store a pointer to the world</span>\n    <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">WorldPtr</span> <span class=\"n\">world_</span><span class=\"p\">;</span>\n\n    <span class=\"c1\">// Request counter</span>\n    <span class=\"kt\">int</span> <span class=\"n\">counter_</span><span class=\"p\">;</span>\n\n    <span class=\"c1\">// Transport node</span>\n    <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">NodePtr</span> <span class=\"n\">node_</span><span class=\"p\">;</span>\n\n    <span class=\"c1\">// Subscribers / publishers</span>\n    <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">SubscriberPtr</span> <span class=\"n\">modelSub_</span><span class=\"p\">;</span>\n    <span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">SubscriberPtr</span> <span class=\"n\">contactsSub_</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">GZ_REGISTER_WORLD_PLUGIN</span><span class=\"p\">(</span><span class=\"n\">BreakPlugin</span><span class=\"p\">)</span>\n\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Just attach this plugin to any world, run it, and it will crash with:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">/</span><span class=\"nt\">usr</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">boost</span><span class=\"o\">/</span><span class=\"nt\">smart_ptr</span><span class=\"o\">/</span><span class=\"nt\">shared_ptr</span><span class=\"p\">.</span><span class=\"nc\">hpp</span><span class=\"p\">:</span><span class=\"nd\">653</span><span class=\"o\">:</span> <span class=\"nt\">typename</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">detail</span><span class=\"p\">::</span><span class=\"nd\">sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">type</span> <span class=\"nt\">boost</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">T</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">&gt;()</span> <span class=\"nt\">const</span> <span class=\"cp\">[</span><span class=\"k\">with</span> <span class=\"n\">T</span><span class=\"o\"> =</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::transport::Node</span><span class=\"p\">;</span> <span class=\"nx\">typename</span> <span class=\"nx\">boost</span><span class=\"nl\">::detail::sp_member_access</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"nl\">::type</span> <span class=\"o\">=</span> <span class=\"nx\">gazebo</span><span class=\"nl\">::transport::Node</span><span class=\"o\">*</span><span class=\"cp\">]</span><span class=\"o\">:</span> <span class=\"nt\">Assertion</span> <span class=\"err\">`</span><span class=\"nt\">px</span> <span class=\"o\">!=</span> <span class=\"nt\">0</span><span class=\"err\">&#39;</span> <span class=\"nt\">failed</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>I've been testing it with this empty zero gravity world:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.5&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;gravity&gt;</span>0 0 0<span class=\"nt\">&lt;/gravity&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n\n  <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;breakplugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libbreakplugin.so&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Unfortunately I haven't yet been able to figure out <em>why</em> this happens. Is there anything about the way I'm deleting the model that is unsafe? If I do it with <code>world_-&gt;Clear()</code> at the same point it works fine for this example, but crashes with a segfault with another (the conditions of which I can't yet pinpoint, but I think it has something to do with a sensor updating after the model is deleted).</p>\n<p>If possible, could someone perhaps suggest a workaround, i.e. a way of deleting a model safely?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-09T09:10:07.239729+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:59.502841+00:00", "type": "issue", "id": 1629}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1630/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1630.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1630/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1630/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1630/better-svg-extraction"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1630/vote"}}, "reporter": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "title": "Better SVG extraction", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Overlapping lines can result in bad extrusion.\r\n\r\nSee attachment.", "markup": "markdown", "html": "<p>Overlapping lines can result in bad extrusion.</p>\n<p>See attachment.</p>", "type": "rendered"}, "assignee": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-09T20:54:48.120409+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:23.459497+00:00", "type": "issue", "id": 1630}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1631/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1631.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1631/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1631/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1631/errors-with-sdformat-prerelease-305"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1631/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Errors with sdformat prerelease 3.0.5", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "I haven't seen any test failures (in [gazebo-default-sdformat-default](http://build.osrfoundation.org/job/gazebo-default-sdformat-default-devel-trusty-amd64/23/) for example), but the new sdformat prerelease 3.0.5 causes some error messages in gazebo when trying to load parameters of type `Vector3`:\r\n\r\n~~~\r\n[Err] [PhysicsEngine.cc:265] Caught bad any_cast in PhysicsEngine::SetParam: boost::bad_any_cast: failed conversion using boost::any_cast\r\n[Wrn] [PresetManager.cc:80] Couldn't set parameter [gravity] in physics engine\r\n[Err] [PhysicsEngine.cc:265] Caught bad any_cast in PhysicsEngine::SetParam: boost::bad_any_cast: failed conversion using boost::any_cast\r\n[Wrn] [PresetManager.cc:80] Couldn't set parameter [magnetic_field] in physics engine\r\n~~~\r\n\r\nThis didn't cause any test failures because each physics engine is apparently already reading gravity directly from sdf and not depending on the PresetManager.\r\n\r\nI added a print statement inside the `if (_value.type() == typeid(sdf::Vector3))` block in [PhysicsEngine::SetParam](#!/osrf/gazebo/src/357d75bf987b8cc53fdc4624495dc699d35a2247/gazebo/physics/PhysicsEngine.cc#cl-225), and found that it didn't enter that block. Maybe it is an `ignition::math::Vector3d` instead?", "markup": "markdown", "html": "<p>I haven't seen any test failures (in <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-default-sdformat-default-devel-trusty-amd64/23/\" rel=\"nofollow\">gazebo-default-sdformat-default</a> for example), but the new sdformat prerelease 3.0.5 causes some error messages in gazebo when trying to load parameters of type <code>Vector3</code>:</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [PhysicsEngine.cc:265] Caught bad any_cast in PhysicsEngine::SetParam: boost::bad_any_cast: failed conversion using boost::any_cast\n[Wrn] [PresetManager.cc:80] Couldn&#39;t set parameter [gravity] in physics engine\n[Err] [PhysicsEngine.cc:265] Caught bad any_cast in PhysicsEngine::SetParam: boost::bad_any_cast: failed conversion using boost::any_cast\n[Wrn] [PresetManager.cc:80] Couldn&#39;t set parameter [magnetic_field] in physics engine\n</pre></div>\n\n\n<p>This didn't cause any test failures because each physics engine is apparently already reading gravity directly from sdf and not depending on the PresetManager.</p>\n<p>I added a print statement inside the <code>if (_value.type() == typeid(sdf::Vector3))</code> block in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/357d75bf987b8cc53fdc4624495dc699d35a2247/gazebo/physics/PhysicsEngine.cc#cl-225\" rel=\"nofollow\">PhysicsEngine::SetParam</a>, and found that it didn't enter that block. Maybe it is an <code>ignition::math::Vector3d</code> instead?</p>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-09T21:34:39.410221+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:20.606587+00:00", "type": "issue", "id": 1631}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1632/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1632.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1632/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1632/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1632/refactor-state-classes"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1632/vote"}}, "reporter": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "title": "Refactor state classes", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Currently, all state classes (ModelState, JointState, LinkState, WorldState) inherits from State but all the timing and iteration information is only relevant for WorldState. We should probably get rid of the code not needed in ModelState, JointState and LinkState.", "markup": "markdown", "html": "<p>Currently, all state classes (ModelState, JointState, LinkState, WorldState) inherits from State but all the timing and iteration information is only relevant for WorldState. We should probably get rid of the code not needed in ModelState, JointState and LinkState.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-09T22:49:53.418201+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:03.413898+00:00", "type": "issue", "id": 1632}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1633/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1633.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1633/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1633/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1633/seg-fault-in-teardown-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1633/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "seg-fault in teardown of UNIT_RenderWidget_TEST", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "I'm seeing a seg-fault in `UNIT_RenderWidget_TEST` when I run it on my desktop. The seg-fault emits from the destructor of `OriginVisual` added in pull request #1700. Note that the tests pass, it's just that it seg-faults during teardown.\r\n\r\n~~~\r\nPASS   : RenderWidget_TEST::InsertWidget()\r\nPASS   : RenderWidget_TEST::cleanupTestCase()\r\nTotals: 3 passed, 0 failed, 0 skipped\r\n********* Finished testing of RenderWidget_TEST *********\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff1142a49 in Ogre::VertexData::~VertexData() ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1\r\n~~~\r\n~~~\r\n(gdb) bt\r\n#0  0x00007ffff1142a49 in Ogre::VertexData::~VertexData() ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1\r\n#1  0x00007ffff52e4c83 in gazebo::rendering::DynamicRenderable::~DynamicRenderable (\r\n    this=0x7fff7ffde1e0, __in_chrg=<optimized out>)\r\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/DynamicRenderable.cc:33\r\n#2  0x00007ffff52e39c9 in gazebo::rendering::DynamicLines::~DynamicLines (this=0x7fff7ffde1e0, \r\n    __in_chrg=<optimized out>)\r\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/DynamicLines.cc:47\r\n#3  0x00007ffff535d62c in gazebo::rendering::Visual::DeleteDynamicLine (this=<optimized out>, \r\n    _line=<optimized out>) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/Visual.cc:1808\r\n#4  0x00007ffff5312137 in gazebo::rendering::OriginVisual::~OriginVisual (this=0x7fff8ca54e40, \r\n    __in_chrg=<optimized out>)\r\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/OriginVisual.cc:39\r\n~~~\r\n~~~\r\n#5  0x00007ffff5312179 in gazebo::rendering::OriginVisual::~OriginVisual (this=0x7fff8ca54e40, \r\n    __in_chrg=<optimized out>)\r\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/OriginVisual.cc:42\r\n#6  0x00007ffff52b47be in boost::detail::sp_counted_base::release (this=0x7fff8e7318a0)\r\n    at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\r\n#7  0x00007ffff534a7b8 in ~shared_count (this=0x7fff8c99f910, __in_chrg=<optimized out>)\r\n    at /usr/include/boost/smart_ptr/detail/shared_count.hpp:371\r\n#8  ~shared_ptr (this=0x7fff8c99f908, __in_chrg=<optimized out>)\r\n    at /usr/include/boost/smart_ptr/shared_ptr.hpp:328\r\n~~~\r\n~~~\r\n#9  gazebo::rendering::ScenePrivate::~ScenePrivate (this=0x7fff8c99f620, __in_chrg=<optimized out>)\r\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/ScenePrivate.hh:116\r\n#10 0x00007ffff53314b1 in gazebo::rendering::Scene::~Scene (this=0x7fff8caf3f70, \r\n    __in_chrg=<optimized out>) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/Scene.cc:266\r\n#11 0x00007ffff5331529 in gazebo::rendering::Scene::~Scene (this=0x7fff8caf3f70, \r\n    __in_chrg=<optimized out>) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/Scene.cc:268\r\n#12 0x00007ffff6eb8b7e in boost::detail::sp_counted_base::release (this=0x7fff8cb077d0)\r\n    at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\r\n~~~\r\n~~~\r\n#13 0x00007ffff6f211fc in ~shared_count (this=<optimized out>, __in_chrg=<optimized out>)\r\n    at /usr/include/boost/smart_ptr/detail/shared_count.hpp:371\r\n#14 ~shared_ptr (this=<optimized out>, __in_chrg=<optimized out>)\r\n    at /usr/include/boost/smart_ptr/shared_ptr.hpp:328\r\n#15 reset (this=<optimized out>) at /usr/include/boost/smart_ptr/shared_ptr.hpp:619\r\n#16 gazebo::gui::ModelManipulator::Clear (\r\n    this=this@entry=0x7ffff7548070 <SingletonT<gazebo::gui::ModelManipulator>::GetInstance()::t>)\r\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelManipulator.cc:69\r\n~~~\r\n~~~\r\n#17 0x00007ffff6f22c60 in gazebo::gui::ModelManipulator::~ModelManipulator (\r\n    this=0x7ffff7548070 <SingletonT<gazebo::gui::ModelManipulator>::GetInstance()::t>, \r\n    __in_chrg=<optimized out>)\r\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelManipulator.cc:57\r\n#18 0x00007ffff42c5259 in __run_exit_handlers (status=0, listp=0x7ffff46476c8 <__exit_funcs>, \r\n    run_list_atexit=run_list_atexit@entry=true) at exit.c:82\r\n#19 0x00007ffff42c52a5 in __GI_exit (status=<optimized out>) at exit.c:104\r\n#20 0x00007ffff42aaecc in __libc_start_main (main=0x407370 <main(int, char**)>, argc=1, \r\n    argv=0x7fffffffdc68, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, \r\n    stack_end=0x7fffffffdc58) at libc-start.c:321\r\n#21 0x0000000000407d6f in _start ()\r\n(gdb)\r\n~~~", "markup": "markdown", "html": "<p>I'm seeing a seg-fault in <code>UNIT_RenderWidget_TEST</code> when I run it on my desktop. The seg-fault emits from the destructor of <code>OriginVisual</code> added in <a href=\"#!/osrf/gazebo/pull-requests/1700/add-world-origin-indicator\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1700</a>. Note that the tests pass, it's just that it seg-faults during teardown.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">PASS</span>   <span class=\"o\">:</span> <span class=\"n\">RenderWidget_TEST</span><span class=\"o\">::</span><span class=\"n\">InsertWidget</span><span class=\"o\">()</span>\n<span class=\"n\">PASS</span>   <span class=\"o\">:</span> <span class=\"n\">RenderWidget_TEST</span><span class=\"o\">::</span><span class=\"n\">cleanupTestCase</span><span class=\"o\">()</span>\n<span class=\"n\">Totals</span><span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"n\">passed</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"n\">skipped</span>\n<span class=\"o\">*********</span> <span class=\"n\">Finished</span> <span class=\"n\">testing</span> <span class=\"n\">of</span> <span class=\"n\">RenderWidget_TEST</span> <span class=\"o\">*********</span>\n\n<span class=\"n\">Program</span> <span class=\"n\">received</span> <span class=\"n\">signal</span> <span class=\"n\">SIGSEGV</span><span class=\"o\">,</span> <span class=\"n\">Segmentation</span> <span class=\"n\">fault</span><span class=\"o\">.</span>\n<span class=\"mh\">0x00007ffff1142a49</span> <span class=\"k\">in</span> <span class=\"n\">Ogre</span><span class=\"o\">::</span><span class=\"n\">VertexData</span><span class=\"o\">::~</span><span class=\"n\">VertexData</span><span class=\"o\">()</span> <span class=\"o\">()</span>\n   <span class=\"n\">from</span> <span class=\"sr\">/usr/lib/x86_64-linux-gnu/</span><span class=\"n\">libOgreMain</span><span class=\"o\">.</span><span class=\"na\">so</span><span class=\"o\">.</span><span class=\"mf\">1.8</span><span class=\"o\">.</span><span class=\"mi\">1</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>(gdb) bt\n#0  0x00007ffff1142a49 in Ogre::VertexData::~VertexData() ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.8.1\n#1  0x00007ffff52e4c83 in gazebo::rendering::DynamicRenderable::~DynamicRenderable (\n    this=0x7fff7ffde1e0, __in_chrg=&lt;optimized out&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/DynamicRenderable.cc:33\n#2  0x00007ffff52e39c9 in gazebo::rendering::DynamicLines::~DynamicLines (this=0x7fff7ffde1e0, \n    __in_chrg=&lt;optimized out&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/DynamicLines.cc:47\n#3  0x00007ffff535d62c in gazebo::rendering::Visual::DeleteDynamicLine (this=&lt;optimized out&gt;, \n    _line=&lt;optimized out&gt;) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/Visual.cc:1808\n#4  0x00007ffff5312137 in gazebo::rendering::OriginVisual::~OriginVisual (this=0x7fff8ca54e40, \n    __in_chrg=&lt;optimized out&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/OriginVisual.cc:39\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>#5  0x00007ffff5312179 in gazebo::rendering::OriginVisual::~OriginVisual (this=0x7fff8ca54e40, \n    __in_chrg=&lt;optimized out&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/OriginVisual.cc:42\n#6  0x00007ffff52b47be in boost::detail::sp_counted_base::release (this=0x7fff8e7318a0)\n    at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\n#7  0x00007ffff534a7b8 in ~shared_count (this=0x7fff8c99f910, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/boost/smart_ptr/detail/shared_count.hpp:371\n#8  ~shared_ptr (this=0x7fff8c99f908, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/boost/smart_ptr/shared_ptr.hpp:328\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>#9  gazebo::rendering::ScenePrivate::~ScenePrivate (this=0x7fff8c99f620, __in_chrg=&lt;optimized out&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/ScenePrivate.hh:116\n#10 0x00007ffff53314b1 in gazebo::rendering::Scene::~Scene (this=0x7fff8caf3f70, \n    __in_chrg=&lt;optimized out&gt;) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/Scene.cc:266\n#11 0x00007ffff5331529 in gazebo::rendering::Scene::~Scene (this=0x7fff8caf3f70, \n    __in_chrg=&lt;optimized out&gt;) at /home/scpeters/ws/gazebo/src/gazebo/gazebo/rendering/Scene.cc:268\n#12 0x00007ffff6eb8b7e in boost::detail::sp_counted_base::release (this=0x7fff8cb077d0)\n    at /usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>#13 0x00007ffff6f211fc in ~shared_count (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/boost/smart_ptr/detail/shared_count.hpp:371\n#14 ~shared_ptr (this=&lt;optimized out&gt;, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/boost/smart_ptr/shared_ptr.hpp:328\n#15 reset (this=&lt;optimized out&gt;) at /usr/include/boost/smart_ptr/shared_ptr.hpp:619\n#16 gazebo::gui::ModelManipulator::Clear (\n    this=this@entry=0x7ffff7548070 &lt;SingletonT&lt;gazebo::gui::ModelManipulator&gt;::GetInstance()::t&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelManipulator.cc:69\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>#17 0x00007ffff6f22c60 in gazebo::gui::ModelManipulator::~ModelManipulator (\n    this=0x7ffff7548070 &lt;SingletonT&lt;gazebo::gui::ModelManipulator&gt;::GetInstance()::t&gt;, \n    __in_chrg=&lt;optimized out&gt;)\n    at /home/scpeters/ws/gazebo/src/gazebo/gazebo/gui/ModelManipulator.cc:57\n#18 0x00007ffff42c5259 in __run_exit_handlers (status=0, listp=0x7ffff46476c8 &lt;__exit_funcs&gt;, \n    run_list_atexit=run_list_atexit@entry=true) at exit.c:82\n#19 0x00007ffff42c52a5 in __GI_exit (status=&lt;optimized out&gt;) at exit.c:104\n#20 0x00007ffff42aaecc in __libc_start_main (main=0x407370 &lt;main(int, char**)&gt;, argc=1, \n    argv=0x7fffffffdc68, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, rtld_fini=&lt;optimized out&gt;, \n    stack_end=0x7fffffffdc58) at libc-start.c:321\n#21 0x0000000000407d6f in _start ()\n(gdb)\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-10T23:05:20.369406+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:14.425641+00:00", "type": "issue", "id": 1633}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1634/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1634.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1634/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1634/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1634/edit-existing-building"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1634/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Edit existing building", "component": {"name": "gui::BuildingEditor", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122887.json"}}}, "votes": 3, "watches": 2, "content": {"raw": "After saving a building with the building editor, it is not possible to re-enter the editor and edit it again.\r\n\r\nTo load a building back into the editor, we would probably need to add meta data to the generated SDF indicating what is a wall, a door and so on.", "markup": "markdown", "html": "<p>After saving a building with the building editor, it is not possible to re-enter the editor and edit it again.</p>\n<p>To load a building back into the editor, we would probably need to add meta data to the generated SDF indicating what is a wall, a door and so on.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-11T17:36:01.060109+00:00", "milestone": null, "updated_on": "2017-05-04T16:49:10.856276+00:00", "type": "issue", "id": 1634}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1635/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1635.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1635/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1635/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1635/gzclient-crashes-after-30-seconds-on-osx"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1635/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "gzclient crashes after 30 seconds on osx", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "gzclient is now crashing on my mac after 30 seconds. Looking at the backtrace, I believe this is related to pull request #1614.\r\n\r\n", "markup": "markdown", "html": "<p>gzclient is now crashing on my mac after 30 seconds. Looking at the backtrace, I believe this is related to <a href=\"#!/osrf/gazebo/pull-requests/1614/clean-up-visuals-on-removal-and-add-visual\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1614</a>.</p>", "type": "rendered"}, "assignee": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-16T20:22:54.990239+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:34.387762+00:00", "type": "issue", "id": 1635}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1636/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1636.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1636/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1636/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1636/ode-threaded-islands-sometimes-slower-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1636/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "ODE threaded islands sometimes slower on Ubuntu", "component": {"name": "physics::ODEPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122883.json"}}}, "votes": 2, "watches": 2, "content": {"raw": "I've recently been studying ODE threaded islands for parallelizing physics in the [thread_islands_ode](#!/osrf/gazebo/branches/compare/thread_islands_ode%0Ddefault). This allows systems with multiple non-interacting models to be simulated more quickly on multi-core systems.\r\n\r\nIt generally works well with 2 or more island threads, though I've observed some strange behavior on Ubuntu: sometimes using multiple island threads with a headless gzserver is slower than the unthreaded case, but connecting a gzclient causes it to speed up. Closing the gzclient would cause it to revert to the slower speed.\r\n\r\nI've never observed this weird behavior on my mac, which always shows an improvement from island threading.\r\n\r\nI was able to confirm the weirdness on Jenkins, though the results have since been deleted.\r\n\r\nI wonder if it could be a transport locking problem?", "markup": "markdown", "html": "<p>I've recently been studying ODE threaded islands for parallelizing physics in the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/branches/compare/thread_islands_ode%0Ddefault\" rel=\"nofollow\">thread_islands_ode</a>. This allows systems with multiple non-interacting models to be simulated more quickly on multi-core systems.</p>\n<p>It generally works well with 2 or more island threads, though I've observed some strange behavior on Ubuntu: sometimes using multiple island threads with a headless gzserver is slower than the unthreaded case, but connecting a gzclient causes it to speed up. Closing the gzclient would cause it to revert to the slower speed.</p>\n<p>I've never observed this weird behavior on my mac, which always shows an improvement from island threading.</p>\n<p>I was able to confirm the weirdness on Jenkins, though the results have since been deleted.</p>\n<p>I wonder if it could be a transport locking problem?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-17T18:19:31.445810+00:00", "milestone": null, "updated_on": "2017-09-18T22:58:09.367546+00:00", "type": "issue", "id": 1636}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1637/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1637.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1637/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1637/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1637/building-editor-wrong-stairs-scale"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1637/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Building Editor: Wrong stairs scale", "component": {"name": "gui::BuildingEditor", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122887.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The preview stairs while creating a building have bad scaling for all steps except the first one.\r\n\r\nAfter saved all steps look good though.\r\n\r\n![stairs.png](data/bitbucket.org/repo/jgXqbo/images/1009793211-stairs.png)", "markup": "markdown", "html": "<p>The preview stairs while creating a building have bad scaling for all steps except the first one.</p>\n<p>After saved all steps look good though.</p>\n<p><img alt=\"stairs.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1009793211-stairs.png\" /></p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-19T17:45:43.376485+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:24.059282+00:00", "type": "issue", "id": 1637}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1638/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1638.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1638/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1638/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1638/visualize-gazebos-internal-architecture"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1638/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Visualize gazebo's internal architecture", "component": {"name": "documentation", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/141921.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "It would be nice to be able to visualize the internal architecture of gazebo. This should include a list of processes (gazebo forks separate gzserver and gzclient processes), threads within a process (physics update thread, sensor update threads, etc), and also transport interfaces. There should also be timing information (are sensor threads created before or after physics threads?).\r\n\r\nI thought I would try to use `gazebo::util::Diagnostics` to get help get some of this data (see the DIAG_TIMER_* statements in physics/World.cc for an example #!/osrf/gazebo/src/913ef0ae5c507fd1416b1358eeda16c60cb8ed44/gazebo/physics/World.cc#cl-607 ). I've started with the `thread_diagnostics_transport` branch. Some output for a gzserver with a single physics iteration is given for the code as of a4dd14d647468a2f351362 in the following gist:\r\n\r\nhttps://gist.github.com/scpeters/fc6ea07e075d1ff57d9d", "markup": "markdown", "html": "<p>It would be nice to be able to visualize the internal architecture of gazebo. This should include a list of processes (gazebo forks separate gzserver and gzclient processes), threads within a process (physics update thread, sensor update threads, etc), and also transport interfaces. There should also be timing information (are sensor threads created before or after physics threads?).</p>\n<p>I thought I would try to use <code>gazebo::util::Diagnostics</code> to get help get some of this data (see the DIAG_TIMER_* statements in physics/World.cc for an example <a href=\"#!/osrf/gazebo/src/913ef0ae5c507fd1416b1358eeda16c60cb8ed44/gazebo/physics/World.cc#cl-607\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/913ef0ae5c507fd1416b1358eeda16c60cb8ed44/gazebo/physics/World.cc#cl-607</a> ). I've started with the <code>thread_diagnostics_transport</code> branch. Some output for a gzserver with a single physics iteration is given for the code as of <a href=\"#!/osrf/gazebo/commits/a4dd14d647468a2f351362\" rel=\"nofollow\" class=\"ap-connect-link\">a4dd14d647468a2f351362</a> in the following gist:</p>\n<p><a href=\"https://gist.github.com/scpeters/fc6ea07e075d1ff57d9d\" rel=\"nofollow\" class=\"ap-connect-link\">https://gist.github.com/scpeters/fc6ea07e075d1ff57d9d</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-20T09:23:17.960330+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:01.197737+00:00", "type": "issue", "id": 1638}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1639/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1639.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1639/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1639/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1639/getforcetorque-is-broken-for-prismatic"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1639/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "GetForceTorque is broken for prismatic joints in Simbody", "component": {"name": "physics::SimbodyPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122885.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The `joint_get_force_torque` test, developed for issue #1278, exposed some problems in the `SimbodyJoint::GetForceTorque` method for joints of type `prismatic`. ", "markup": "markdown", "html": "<p>The <code>joint_get_force_torque</code> test, developed for issue <a href=\"#!/osrf/gazebo/issues/1278/support-fixed-joint-types-in-gazebo\" rel=\"nofollow\" title=\"support fixed joint types in Gazebo\" class=\"ap-connect-link\"><s>#1278</s></a>, exposed some problems in the <code>SimbodyJoint::GetForceTorque</code> method for joints of type <code>prismatic</code>. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-20T10:30:28.460120+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:04.804997+00:00", "type": "issue", "id": 1639}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1640/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1640.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1640/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1640/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1640/getforcetorque-is-broken-for-prismatic"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1640/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "GetForceTorque is broken for prismatic joints in Bullet", "component": {"name": "physics::BulletPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122884.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The `joint_get_force_torque` test, developed for issue #1278, exposed some problems in the `BulletJoint::GetForceTorque` method for joints of type `prismatic`. ", "markup": "markdown", "html": "<p>The <code>joint_get_force_torque</code> test, developed for issue <a href=\"#!/osrf/gazebo/issues/1278/support-fixed-joint-types-in-gazebo\" rel=\"nofollow\" title=\"support fixed joint types in Gazebo\" class=\"ap-connect-link\"><s>#1278</s></a>, exposed some problems in the <code>BulletJoint::GetForceTorque</code> method for joints of type <code>prismatic</code>. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-20T10:32:36.467507+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:04.993689+00:00", "type": "issue", "id": 1640}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1641/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1641.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1641/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1641/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1641/export-ignition-math-flags-for-pkgconfig"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1641/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "export ignition math flags for pkgconfig", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Since pull request #1534, gazebo depends on ign-math. If an external library depends on gazebo and includes `gazebo/math/Vector3.hh`, and it uses pkgconfig, it will fail to compile with following error:\r\n\r\n~~~\r\nIn file included from /home/hsu/projects/gazebo_asme_2014/install_release/include/gazebo-6.0/gazebo/math/Pose.hh:27:0,\r\n                 from /home/hsu/projects/gazebo_asme_2014/install_release/include/gazebo-6.0/gazebo/common/BVHLoader.hh:24,\r\n                 from /home/hsu/projects/gazebo_asme_2014/install_release/include/gazebo-6.0/gazebo/common/common.hh:9,\r\n                 from /home/hsu/projects/gazebo_asme_2014/install_release/include/gazebo-6.0/gazebo/gazebo_core.hh:19,\r\n                 from /home/hsu/projects/gazebo_asme_2014/install_release/include/gazebo-6.0/gazebo/gazebo.hh:20,\r\n                 from /home/hsu/projects/gwu_positronics/reveal/Reveal/../Reveal/sim/gazebo/helpers.h:10,\r\n                 from /home/hsu/projects/gwu_positronics/reveal/Reveal/sim/gazebo/helpers.cpp:1:\r\n/home/hsu/projects/gazebo_asme_2014/install_release/include/gazebo-6.0/gazebo/math/Vector3.hh:23:36: fatal error: ignition/math/Vector3.hh: No such file or directory\r\n #include <ignition/math/Vector3.hh>\r\n                                    ^\r\ncompilation terminated.\r\nmake[2]: *** [Reveal/sim/gazebo/CMakeFiles/reveal_sim_gazebo.dir/helpers.cpp.o] Error 1\r\nmake[2]: Leaving directory `/home/hsu/projects/gwu_positronics/reveal/build'\r\nmake[1]: *** [Reveal/sim/gazebo/CMakeFiles/reveal_sim_gazebo.dir/all] Error 2\r\nmake[1]: Leaving directory `/home/hsu/projects/gwu_positronics/reveal/build'\r\nmake: *** [all] Error 2\r\n~~~\r\n\r\nunless we make downstream package depend on [ignition-math2](#!/osrf/gazebo/src/1e2ecb7125ddfc85f12cf327b9fa6d1929603b1d/cmake/pkgconfig/gazebo.in?at=default#cl-8) as well.\r\n\r\nOn the contrary, the ignition-math2 flags are [added directly to gazebo-config.cmake](#!/osrf/gazebo/src/1e2ecb7125ddfc85f12cf327b9fa6d1929603b1d/cmake/gazebo-config.cmake.in?at=default#cl-72).\r\n\r\nThis seems a bit inconsistent on how pkgconfig and cmake config files are generated?", "markup": "markdown", "html": "<p>Since <a href=\"#!/osrf/gazebo/pull-requests/1534/first-step-in-transition-to-ign-math\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1534</a>, gazebo depends on ign-math. If an external library depends on gazebo and includes <code>gazebo/math/Vector3.hh</code>, and it uses pkgconfig, it will fail to compile with following error:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"n\">file</span> <span class=\"n\">included</span> <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_asme_2014</span><span class=\"o\">/</span><span class=\"n\">install_release</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"mf\">6.0</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">math</span><span class=\"o\">/</span><span class=\"n\">Pose</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">27</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_asme_2014</span><span class=\"o\">/</span><span class=\"n\">install_release</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"mf\">6.0</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"n\">BVHLoader</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_asme_2014</span><span class=\"o\">/</span><span class=\"n\">install_release</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"mf\">6.0</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">9</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_asme_2014</span><span class=\"o\">/</span><span class=\"n\">install_release</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"mf\">6.0</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">gazebo_core</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_asme_2014</span><span class=\"o\">/</span><span class=\"n\">install_release</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"mf\">6.0</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gwu_positronics</span><span class=\"o\">/</span><span class=\"n\">reveal</span><span class=\"o\">/</span><span class=\"n\">Reveal</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">Reveal</span><span class=\"o\">/</span><span class=\"n\">sim</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">helpers</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gwu_positronics</span><span class=\"o\">/</span><span class=\"n\">reveal</span><span class=\"o\">/</span><span class=\"n\">Reveal</span><span class=\"o\">/</span><span class=\"n\">sim</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">helpers</span><span class=\"p\">.</span><span class=\"nl\">cpp</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gazebo_asme_2014</span><span class=\"o\">/</span><span class=\"n\">install_release</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"mf\">6.0</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">math</span><span class=\"o\">/</span><span class=\"n\">Vector3</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">23</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span> <span class=\"n\">fatal</span> <span class=\"nl\">error</span><span class=\"p\">:</span> <span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">math</span><span class=\"o\">/</span><span class=\"n\">Vector3</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n <span class=\"cp\">#include</span> <span class=\"cpf\">&lt;ignition/math/Vector3.hh&gt;</span><span class=\"cp\"></span>\n                                    <span class=\"o\">^</span>\n<span class=\"n\">compilation</span> <span class=\"n\">terminated</span><span class=\"p\">.</span>\n<span class=\"n\">make</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"p\">[</span><span class=\"n\">Reveal</span><span class=\"o\">/</span><span class=\"n\">sim</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">reveal_sim_gazebo</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">helpers</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">]</span> <span class=\"n\">Error</span> <span class=\"mi\">1</span>\n<span class=\"n\">make</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"n\">Leaving</span> <span class=\"n\">directory</span> <span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gwu_positronics</span><span class=\"o\">/</span><span class=\"n\">reveal</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"err\">&#39;</span>\n<span class=\"n\">make</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"p\">[</span><span class=\"n\">Reveal</span><span class=\"o\">/</span><span class=\"n\">sim</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">reveal_sim_gazebo</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">all</span><span class=\"p\">]</span> <span class=\"n\">Error</span> <span class=\"mi\">2</span>\n<span class=\"n\">make</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"n\">Leaving</span> <span class=\"n\">directory</span> <span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">hsu</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">gwu_positronics</span><span class=\"o\">/</span><span class=\"n\">reveal</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"err\">&#39;</span>\n<span class=\"nl\">make</span><span class=\"p\">:</span> <span class=\"o\">***</span> <span class=\"p\">[</span><span class=\"n\">all</span><span class=\"p\">]</span> <span class=\"n\">Error</span> <span class=\"mi\">2</span>\n</pre></div>\n\n\n<p>unless we make downstream package depend on <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/1e2ecb7125ddfc85f12cf327b9fa6d1929603b1d/cmake/pkgconfig/gazebo.in?at=default#cl-8\" rel=\"nofollow\">ignition-math2</a> as well.</p>\n<p>On the contrary, the ignition-math2 flags are <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/1e2ecb7125ddfc85f12cf327b9fa6d1929603b1d/cmake/gazebo-config.cmake.in?at=default#cl-72\" rel=\"nofollow\">added directly to gazebo-config.cmake</a>.</p>\n<p>This seems a bit inconsistent on how pkgconfig and cmake config files are generated?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-22T19:07:13.516344+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:09.634231+00:00", "type": "issue", "id": 1641}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1642/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1642.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1642/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1642/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1642/keep-track-of-jenkins-builds"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1642/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Keep track of jenkins builds", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The job history has a fixed length and then gets deleted. We should keep track of the jenkins build history for pull requests.", "markup": "markdown", "html": "<p>The job history has a fixed length and then gets deleted. We should keep track of the jenkins build history for pull requests.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-22T19:26:34.644391+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:39.681095+00:00", "type": "issue", "id": 1642}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1643/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1643.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1643/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1643/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1643/better-support-for-geographic-coordinate"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1643/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Better support for geographic coordinate transforms", "component": {"name": "common", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/138866.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "Supply a `SphericalCoordinates::GlobalToLocal` function and consider depending on 3rd party libraries, which are pretty mature:\r\n\r\n* http://geographiclib.sourceforge.net/\r\n* https://trac.osgeo.org/proj/\r\n\r\n@asymingt \r\n\r\nI believe GDAL would also provide some of this functionality. @\\_jrivero_ what is stopping us from requiring GDAL?", "markup": "markdown", "html": "<p>Supply a <code>SphericalCoordinates::GlobalToLocal</code> function and consider depending on 3rd party libraries, which are pretty mature:</p>\n<ul>\n<li><a href=\"http://geographiclib.sourceforge.net/\" rel=\"nofollow\" class=\"ap-connect-link\">http://geographiclib.sourceforge.net/</a></li>\n<li><a href=\"https://trac.osgeo.org/proj/\" rel=\"nofollow\" class=\"ap-connect-link\">https://trac.osgeo.org/proj/</a></li>\n</ul>\n<p>@asymingt </p>\n<p>I believe GDAL would also provide some of this functionality. @_jrivero_ what is stopping us from requiring GDAL?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-25T00:37:25.053375+00:00", "milestone": null, "updated_on": "2016-09-14T19:20:18.756692+00:00", "type": "issue", "id": 1643}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1644/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1644.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1644/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1644/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1644/rgb-channel-swapping-in-ros-visualization"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1644/vote"}}, "reporter": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "title": "RGB channel swapping in ROS visualization tools", "component": {"name": "rendering", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122881.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "When visualizing pointcloud data from Gazebo robots in Rviz, the point cloud renders with the RGB color channels swapped (BGR).\r\n\r\n![rgb_turtlebot.png](data/bitbucket.org/repo/jgXqbo/images/289594623-rgb_turtlebot.png)\r\n\r\nPicture courtesy of @codebot:\r\n\r\n![bgr_rgb.png](data/bitbucket.org/repo/jgXqbo/images/266393176-bgr_rgb.png)\r\n\r\nPictures are both from gazebo5 debians and ros indigo.", "markup": "markdown", "html": "<p>When visualizing pointcloud data from Gazebo robots in Rviz, the point cloud renders with the RGB color channels swapped (BGR).</p>\n<p><img alt=\"rgb_turtlebot.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/289594623-rgb_turtlebot.png\" /></p>\n<p>Picture courtesy of @codebot:</p>\n<p><img alt=\"bgr_rgb.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/266393176-bgr_rgb.png\" /></p>\n<p>Pictures are both from gazebo5 debians and ros indigo.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-25T00:54:27.642788+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:31.752326+00:00", "type": "issue", "id": 1644}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1645/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1645.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1645/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1645/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1645/dart-crashes-on-fixedjointtype"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1645/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Dart crashes on FixedJointType implemenation", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Steps to reproduce:\r\n\r\n1. Create a model\r\n2. Add a joint to the model with a child linking it the world frame\r\n3. Watch Dart have an assertion error and crash.\r\n\r\nI know there is a ticket for fixed joint types, but a feature in one physics engine should not cause another to crash.", "markup": "markdown", "html": "<p>Steps to reproduce:</p>\n<ol>\n<li>Create a model</li>\n<li>Add a joint to the model with a child linking it the world frame</li>\n<li>Watch Dart have an assertion error and crash.</li>\n</ol>\n<p>I know there is a ticket for fixed joint types, but a feature in one physics engine should not cause another to crash.</p>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-06-26T17:34:04.454268+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:46.257725+00:00", "type": "issue", "id": 1645}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1646/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1646.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1646/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1646/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1646/gazebo-does-not-like-tiny-robots"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1646/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Gazebo does not like tiny robots", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 1, "watches": 1, "content": {"raw": "So I am planning on using Gazebo in a microrobotics lab. Unfortunately, each link appears only to support a minimum mass of 0.01kg. Any lower and the GUI displays 0 and I did not detect any movement from gravity on ODE.\r\n\r\nThis limitation in Gazebo makes it extremely difficult to work on small scales or use it in the budding field of microrobotics. Additionally, there also appears to be an issue with the collision detection algorithm of DART and Simbody at these scales, but I will reach out to their respective developers to see if the feature can be improved. ODE, however, works well. Is there any workaround I can do to allow for smaller masses in Gazebo? \r\n\r\nSome of these robots only weigh a few grams, but alas the smallest you can make the mass in Gazebo is ten grams. I have tried setting it lower in the SDF, but it appears to just round to 0.00g, which means the robot is unaffected by gravity. \r\n\r\nAny help/suggestions would be appreciated.", "markup": "markdown", "html": "<p>So I am planning on using Gazebo in a microrobotics lab. Unfortunately, each link appears only to support a minimum mass of 0.01kg. Any lower and the GUI displays 0 and I did not detect any movement from gravity on ODE.</p>\n<p>This limitation in Gazebo makes it extremely difficult to work on small scales or use it in the budding field of microrobotics. Additionally, there also appears to be an issue with the collision detection algorithm of DART and Simbody at these scales, but I will reach out to their respective developers to see if the feature can be improved. ODE, however, works well. Is there any workaround I can do to allow for smaller masses in Gazebo? </p>\n<p>Some of these robots only weigh a few grams, but alas the smallest you can make the mass in Gazebo is ten grams. I have tried setting it lower in the SDF, but it appears to just round to 0.00g, which means the robot is unaffected by gravity. </p>\n<p>Any help/suggestions would be appreciated.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.4", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/46357.json"}}}, "edited_on": null, "created_on": "2015-07-02T17:13:36.675695+00:00", "milestone": null, "updated_on": "2015-07-02T19:32:54.080354+00:00", "type": "issue", "id": 1646}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1647/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1647.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1647/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1647/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1647/increase-decimals-displayed-on-model"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1647/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Increase decimals displayed on model property list", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 1, "watches": 2, "content": {"raw": "It was pointed out on issue #1646 that values are displayed with only 2 decimal numbers on the model list widget.\r\n\r\nAs reference, the inspectors on the model editor display [6](#!/osrf/gazebo/src/82b3f2539fe8027b36dc6b32b12ed586da2dd8c1/gazebo/gui/ConfigWidget.cc#cl-1204) decimals.", "markup": "markdown", "html": "<p>It was pointed out on issue <a href=\"#!/osrf/gazebo/issues/1646/gazebo-does-not-like-tiny-robots\" rel=\"nofollow\" title=\"Gazebo does not like tiny robots\" class=\"ap-connect-link\">#1646</a> that values are displayed with only 2 decimal numbers on the model list widget.</p>\n<p>As reference, the inspectors on the model editor display <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/82b3f2539fe8027b36dc6b32b12ed586da2dd8c1/gazebo/gui/ConfigWidget.cc#cl-1204\" rel=\"nofollow\">6</a> decimals.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-02T19:29:16.410893+00:00", "milestone": null, "updated_on": "2018-03-11T14:52:03.354557+00:00", "type": "issue", "id": 1647}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1648/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1648.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1648/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1648/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1648/simbody-ignores-negative-z-values-for"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1648/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Simbody ignores negative Z values for model poses", "component": {"name": "physics::SimbodyPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122885.json"}}}, "votes": 1, "watches": 2, "content": {"raw": "It appears as thought Simbody does not parse negative z values for pose values correctly. I simply placed a static box underneath the \"floor\" grid at 0 0  and it refuses to be placed at the correct value with simbody is selected with the -e command line argument. Note that the same world file works correctly when either ODE or Dart is selected as the engine.", "markup": "markdown", "html": "<p>It appears as thought Simbody does not parse negative z values for pose values correctly. I simply placed a static box underneath the \"floor\" grid at 0 0  and it refuses to be placed at the correct value with simbody is selected with the -e command line argument. Note that the same world file works correctly when either ODE or Dart is selected as the engine.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-06T15:02:36.597988+00:00", "milestone": null, "updated_on": "2017-02-08T17:18:58.407731+00:00", "type": "issue", "id": 1648}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1649/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1649.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1649/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1649/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1649/feature-request-stiffness-in-dart"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1649/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Feature Request: Stiffness in DART", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 1, "watches": 0, "content": {"raw": "I would love to be able to specify the stiffness of a joint in DART as well as Simbody. Currently, one can specify stiffness only through Simbody and not DART.", "markup": "markdown", "html": "<p>I would love to be able to specify the stiffness of a joint in DART as well as Simbody. Currently, one can specify stiffness only through Simbody and not DART.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-06T16:06:48.781436+00:00", "milestone": null, "updated_on": "2015-07-24T16:49:37.394615+00:00", "type": "issue", "id": 1649}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1650/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1650.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1650/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1650/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1650/scaling-a-mesh-in-use-the-parameter-in-sdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1650/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Scaling a mesh in use the <scale> parameter in SDF causes Simbody to crash.", "component": {"name": "physics::SimbodyPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122885.json"}}}, "votes": 1, "watches": 0, "content": {"raw": "Steps to reproduce:\r\n\r\n1. Create a planar mesh\r\n1. Scale the Z using the SDF <scale> parameter under the <mesh> tag axis by a large factor, in my case around 10^6\r\n1. Load the SDF using Simbody\r\n1. Watch Gazebo throw this error: \r\n\r\n~~~\r\nwhat(): SimTK Exception thrown at MassProperties.h:538:\r\nError detected by Simbody method Inertia::operator-=(): Diagonals of an Inertia matrix must be nonnegative; got 6.73672e-08,-3.50725e-08,-3.94697e-08.\r\n(Required condition 'd >= -SignificantReal' was not met.)\r\n~~~\r\n\r\nMore details:\r\n\r\n - The mass was specified to a value around 10^-6.\r\n - The pose of the inertial frame was specified, but the inertia tensors were not specified for debugging purposes.\r\n - Deleting the above two values allowed the SDF to load correctly.", "markup": "markdown", "html": "<p>Steps to reproduce:</p>\n<ol>\n<li>Create a planar mesh</li>\n<li>Scale the Z using the SDF &lt;scale&gt; parameter under the &lt;mesh&gt; tag axis by a large factor, in my case around 10^6</li>\n<li>Load the SDF using Simbody</li>\n<li>Watch Gazebo throw this error: </li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">what</span><span class=\"o\">():</span> <span class=\"nt\">SimTK</span> <span class=\"nt\">Exception</span> <span class=\"nt\">thrown</span> <span class=\"nt\">at</span> <span class=\"nt\">MassProperties</span><span class=\"p\">.</span><span class=\"nc\">h</span><span class=\"p\">:</span><span class=\"nd\">538</span><span class=\"o\">:</span>\n<span class=\"nt\">Error</span> <span class=\"nt\">detected</span> <span class=\"nt\">by</span> <span class=\"nt\">Simbody</span> <span class=\"nt\">method</span> <span class=\"nt\">Inertia</span><span class=\"p\">::</span><span class=\"nd\">operator-</span><span class=\"o\">=():</span> <span class=\"nt\">Diagonals</span> <span class=\"nt\">of</span> <span class=\"nt\">an</span> <span class=\"nt\">Inertia</span> <span class=\"nt\">matrix</span> <span class=\"nt\">must</span> <span class=\"nt\">be</span> <span class=\"nt\">nonnegative</span><span class=\"o\">;</span> <span class=\"nt\">got</span> <span class=\"nt\">6</span><span class=\"p\">.</span><span class=\"nc\">73672e-08</span><span class=\"o\">,</span><span class=\"nt\">-3</span><span class=\"p\">.</span><span class=\"nc\">50725e-08</span><span class=\"o\">,</span><span class=\"nt\">-3</span><span class=\"p\">.</span><span class=\"nc\">94697e-08</span><span class=\"o\">.</span>\n<span class=\"o\">(</span><span class=\"nt\">Required</span> <span class=\"nt\">condition</span> <span class=\"s1\">&#39;d &gt;= -SignificantReal&#39;</span> <span class=\"nt\">was</span> <span class=\"nt\">not</span> <span class=\"nt\">met</span><span class=\"o\">.)</span>\n</pre></div>\n\n\n<p>More details:</p>\n<ul>\n<li>The mass was specified to a value around 10^-6.</li>\n<li>The pose of the inertial frame was specified, but the inertia tensors were not specified for debugging purposes.</li>\n<li>Deleting the above two values allowed the SDF to load correctly.</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-06T18:19:31.899129+00:00", "milestone": null, "updated_on": "2015-07-24T16:49:14.650940+00:00", "type": "issue", "id": 1650}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1651/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1651.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1651/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1651/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1651/answersgazebosimorg-login-using-social"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1651/vote"}}, "reporter": {"display_name": "Isaac Saito", "uuid": "{7ebec088-7c5d-41ea-83c4-ea79199d7afd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ebec088-7c5d-41ea-83c4-ea79199d7afd%7D"}, "html": {"href": "https://bitbucket.org/%7B7ebec088-7c5d-41ea-83c4-ea79199d7afd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bba6946e152d9901aae85811078822bfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-1.png"}}, "nickname": "130s", "type": "user", "account_id": "557058:aa02a07f-577d-4331-9a3b-aa7da6d8edd3"}, "title": "answers.gazebosim.org login using social account is not working", "component": {"name": "common", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/138866.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "UPDATE: I rephrased the title to address the real issue to some users like me.\r\n\r\n----\r\n\r\n(I'm sorry for the loss on the web site...Glad most of the stuff is recovered!)\r\n\r\nI still used Google's account to login, which seems to not work any more but with a tweak like in the answer (see below) it's still possible. Today I found myself logged out so asked for a recovery email but after minutes I don't receive one yet. Is email feature functioning?\r\n\r\n(And where's the right location to report this?)\r\n\r\n```\r\n---------- Forwarded message ----------\r\nFrom:  <answers@gazebosim.org>\r\nDate: Mon, Jun 8, 2015 at 11:29 PM\r\nSubject: answers.gazebosim.org \"OpenID2.0 Google log in issue?\"\r\n\r\nZheng yo chen posted an answer.\r\n\r\ngazebo answers signin\r\n\r\nand click on \"recover your account via email\"\r\n\r\nIn reply to yah130s question of 03:47 PM, 02 Jun 2015\r\nOpenID2.0 Google log in issue?\r\n\r\nI use Google account and recently started seeing OpenID 2.0 issue when I try logging on. Is there a plan to reactivate Google account (Google+ should work)?\r\n\r\nanswers.gazebosim\r\n\r\n======= Full thread summary =======\r\n\r\nPosted by yah130s on 03:47 PM, 02 Jun 2015\r\n\r\nOpenID2.0 Google log in issue?\r\n\r\nI use Google account and recently started seeing OpenID 2.0 issue when I try logging on. Is there a plan to reactivate Google account (Google+ should work)?\r\n\r\nanswers.gazebosim\r\n\r\nPlease note - you can easily change how often you receive these notifications or unsubscribe. Thank you for your interest in our forum!\r\n\r\nSincerely,\r\nForum Administrator\r\n```", "markup": "markdown", "html": "<p>UPDATE: I rephrased the title to address the real issue to some users like me.</p>\n<hr />\n<p>(I'm sorry for the loss on the web site...Glad most of the stuff is recovered!)</p>\n<p>I still used Google's account to login, which seems to not work any more but with a tweak like in the answer (see below) it's still possible. Today I found myself logged out so asked for a recovery email but after minutes I don't receive one yet. Is email feature functioning?</p>\n<p>(And where's the right location to report this?)</p>\n<div class=\"codehilite\"><pre><span></span>---------- Forwarded message ----------\nFrom:  &lt;answers@gazebosim.org&gt;\nDate: Mon, Jun 8, 2015 at 11:29 PM\nSubject: answers.gazebosim.org &quot;OpenID2.0 Google log in issue?&quot;\n\nZheng yo chen posted an answer.\n\ngazebo answers signin\n\nand click on &quot;recover your account via email&quot;\n\nIn reply to yah130s question of 03:47 PM, 02 Jun 2015\nOpenID2.0 Google log in issue?\n\nI use Google account and recently started seeing OpenID 2.0 issue when I try logging on. Is there a plan to reactivate Google account (Google+ should work)?\n\nanswers.gazebosim\n\n======= Full thread summary =======\n\nPosted by yah130s on 03:47 PM, 02 Jun 2015\n\nOpenID2.0 Google log in issue?\n\nI use Google account and recently started seeing OpenID 2.0 issue when I try logging on. Is there a plan to reactivate Google account (Google+ should work)?\n\nanswers.gazebosim\n\nPlease note - you can easily change how often you receive these notifications or unsubscribe. Thank you for your interest in our forum!\n\nSincerely,\nForum Administrator\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-07T00:32:34.467136+00:00", "milestone": null, "updated_on": "2016-09-14T19:45:17.231572+00:00", "type": "issue", "id": 1651}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1652/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1652.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1652/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1652/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1652/feature-request-allow-you-to-set-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1652/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Feature Request: Allow you to set the friction coefficient in DART", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I would love it if you could set the friction coefficient for DART from Gazebo or the SDF file format. This would be a very useful and interesting feature so I don't have to recompile and change the default value in DART every time I want to change the value.", "markup": "markdown", "html": "<p>I would love it if you could set the friction coefficient for DART from Gazebo or the SDF file format. This would be a very useful and interesting feature so I don't have to recompile and change the default value in DART every time I want to change the value.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-07T23:00:58.727449+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:00.952957+00:00", "type": "issue", "id": 1652}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1653/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1653.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1653/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1653/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1653/large-heightmaps-causes-gazebo-to-crash"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1653/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Large heightmaps causes Gazebo to crash", "component": {"name": "common", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/138866.json"}}}, "votes": 2, "watches": 3, "content": {"raw": "so I procedurally generated an image that was 500 by 500 image as referenced in the corresponding [question](http://answers.gazebosim.org/question/8691/heightmap-sdf-keeps-crashing-gazebo/). Please fix it or atleast make it fail loudly it took my the better part of the hour to figure out that it was simply the size of the file that was causing the problem.\r\n\r\nHere is the image that caused it all:![crasher.png](data/bitbucket.org/repo/jgXqbo/images/3763457933-crasher.png)", "markup": "markdown", "html": "<p>so I procedurally generated an image that was 500 by 500 image as referenced in the corresponding <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/8691/heightmap-sdf-keeps-crashing-gazebo/\" rel=\"nofollow\">question</a>. Please fix it or atleast make it fail loudly it took my the better part of the hour to figure out that it was simply the size of the file that was causing the problem.</p>\n<p>Here is the image that caused it all:<img alt=\"crasher.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3763457933-crasher.png\" /></p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-09T18:49:18.458075+00:00", "milestone": null, "updated_on": "2017-02-16T19:35:51.464708+00:00", "type": "issue", "id": 1653}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1654/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1654.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1654/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1654/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1654/setting-position-of-model-via-commandline"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1654/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Setting position of model via commandline causes Gazebo to crash when using Dart.", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "I have this one world file that crashes whenever I try to call\r\n\r\n\r\n```\r\ngz joint -m \"default_body\" -j hingejoint0 --pos-t 1.5\r\n\r\n```\r\n\r\nand complains about ODE Solver which is weird because I am using Dart. Here is the stack trace \r\n\r\n```\r\nODE Message 3: LCP internal error, s <= 0 (s=-1.4094e-14)\r\n\r\nODE INTERNAL ERROR 1: assertion \"d[i] != dReal(0.0)\" failed in _dLDLTRemove() [/build/buildd/dart-4.3.4/dart/lcpsolver/matrix.cpp:404]\r\n\r\n```\r\n\r\nand last but not least I have attached the SDF file.\r\n", "markup": "markdown", "html": "<p>I have this one world file that crashes whenever I try to call</p>\n<div class=\"codehilite\"><pre><span></span>gz joint -m &quot;default_body&quot; -j hingejoint0 --pos-t 1.5\n</pre></div>\n\n\n<p>and complains about ODE Solver which is weird because I am using Dart. Here is the stack trace </p>\n<div class=\"codehilite\"><pre><span></span>ODE Message 3: LCP internal error, s &lt;= 0 (s=-1.4094e-14)\n\nODE INTERNAL ERROR 1: assertion &quot;d[i] != dReal(0.0)&quot; failed in _dLDLTRemove() [/build/buildd/dart-4.3.4/dart/lcpsolver/matrix.cpp:404]\n</pre></div>\n\n\n<p>and last but not least I have attached the SDF file.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "3.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/100247.json"}}}, "edited_on": null, "created_on": "2015-07-09T19:46:20.815759+00:00", "milestone": null, "updated_on": "2015-07-23T20:53:00.646844+00:00", "type": "issue", "id": 1654}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1655/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1655.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1655/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1655/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1655/sim-events-plugin-not-documented"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1655/vote"}}, "reporter": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "title": "Sim events plugin not documented", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The plugin should have a demo world file, and a tutorial.", "markup": "markdown", "html": "<p>The plugin should have a demo world file, and a tutorial.</p>", "type": "rendered"}, "assignee": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-09T21:28:27.002021+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:48.162173+00:00", "type": "issue", "id": 1655}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1656/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1656.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1656/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1656/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1656/add-heightmap-support-to-dart-by"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1656/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Add heightmap support to DART by converting heightmaps to meshes.", "component": {"name": "physics::DARTPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/139387.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "DART by default does not support heightmaps, but if one just simply treats a heightmap as a mesh and exports it as such (similar to what is done with polylines), we can still use them with the physics engine. ", "markup": "markdown", "html": "<p>DART by default does not support heightmaps, but if one just simply treats a heightmap as a mesh and exports it as such (similar to what is done with polylines), we can still use them with the physics engine. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-10T15:15:24.969692+00:00", "milestone": null, "updated_on": "2015-07-23T20:18:51.178033+00:00", "type": "issue", "id": 1656}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1657/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1657.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1657/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1657/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1657/arc-commands-not-implemented-properly"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1657/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Arc commands not implemented properly", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Some arcs include lines to the center (like a pie slice). These are not parsed well by Gazebo.\r\n\r\nSee attached.", "markup": "markdown", "html": "<p>Some arcs include lines to the center (like a pie slice). These are not parsed well by Gazebo.</p>\n<p>See attached.</p>", "type": "rendered"}, "assignee": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-10T18:44:45.677138+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:39.012950+00:00", "type": "issue", "id": 1657}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1658/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1658.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1658/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1658/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1658/math-angle-class-operator-can-produce"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1658/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "math::Angle class operator can produce inconsistent results", "component": {"name": "math", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122879.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "In my code, I have an `if` statement that looks like below:\r\n\r\n~~~\r\n    math::Angle a = 1e-16;\r\n    math::Angle b = 1.1e-16;\r\n    ASSERT_TRUE(a - b >= 0);  // this passes\r\n    ASSERT_TRUE((a - b).Radian() >= 0);  // this fails\r\n~~~\r\n\r\nthis is because underneath `math::Angle::operator>=()` uses `math::equal` as part of its comparison [here](#!/osrf/gazebo/src/5bae2bdbd0d32b055764e9f11fd2c179008c0d31/gazebo/math/Angle.cc?at=default#cl-176):\r\n\r\n~~~\r\n  return this->value > angle.value || math::equal(this->value, angle.value);\r\n~~~\r\n\r\nwhich effectively does [this check against an epsilon of 1e-6 by default](#!/osrf/gazebo/src/5bae2bdbd0d32b055764e9f11fd2c179008c0d31/gazebo/math/Helpers.hh?at=default#cl-170):\r\n\r\n~~~\r\n      return std::fabs(_a - _b) <= _epsilon;\r\n~~~\r\n\r\nThis kind of inconsistency could cause subtle and **small** problems (around 1e-6) in calculations, which is not insignificant when one tries to drive convergence of a numerical algorithm down towards machine zero.\r\n\r\nOne way to avoid inconsistency for now is to convert all `math::Angle` objects to `Radian()` (or double) first before using comparison and arithmetic operators on them.", "markup": "markdown", "html": "<p>In my code, I have an <code>if</code> statement that looks like below:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Angle</span> <span class=\"nt\">a</span> <span class=\"o\">=</span> <span class=\"nt\">1e-16</span><span class=\"o\">;</span>\n    <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Angle</span> <span class=\"nt\">b</span> <span class=\"o\">=</span> <span class=\"nt\">1</span><span class=\"p\">.</span><span class=\"nc\">1e-16</span><span class=\"o\">;</span>\n    <span class=\"nt\">ASSERT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">a</span> <span class=\"nt\">-</span> <span class=\"nt\">b</span> <span class=\"o\">&gt;=</span> <span class=\"nt\">0</span><span class=\"o\">);</span>  <span class=\"o\">//</span> <span class=\"nt\">this</span> <span class=\"nt\">passes</span>\n    <span class=\"nt\">ASSERT_TRUE</span><span class=\"o\">((</span><span class=\"nt\">a</span> <span class=\"nt\">-</span> <span class=\"nt\">b</span><span class=\"o\">)</span><span class=\"p\">.</span><span class=\"nc\">Radian</span><span class=\"o\">()</span> <span class=\"o\">&gt;=</span> <span class=\"nt\">0</span><span class=\"o\">);</span>  <span class=\"o\">//</span> <span class=\"nt\">this</span> <span class=\"nt\">fails</span>\n</pre></div>\n\n\n<p>this is because underneath <code>math::Angle::operator&gt;=()</code> uses <code>math::equal</code> as part of its comparison <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/5bae2bdbd0d32b055764e9f11fd2c179008c0d31/gazebo/math/Angle.cc?at=default#cl-176\" rel=\"nofollow\">here</a>:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nt\">return</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">value</span> <span class=\"o\">&gt;</span> <span class=\"nt\">angle</span><span class=\"p\">.</span><span class=\"nc\">value</span> <span class=\"o\">||</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">value</span><span class=\"o\">,</span> <span class=\"nt\">angle</span><span class=\"p\">.</span><span class=\"nc\">value</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>which effectively does <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/5bae2bdbd0d32b055764e9f11fd2c179008c0d31/gazebo/math/Helpers.hh?at=default#cl-170\" rel=\"nofollow\">this check against an epsilon of 1e-6 by default</a>:</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"nt\">return</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">fabs</span><span class=\"o\">(</span><span class=\"nt\">_a</span> <span class=\"nt\">-</span> <span class=\"nt\">_b</span><span class=\"o\">)</span> <span class=\"o\">&lt;=</span> <span class=\"nt\">_epsilon</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>This kind of inconsistency could cause subtle and <strong>small</strong> problems (around 1e-6) in calculations, which is not insignificant when one tries to drive convergence of a numerical algorithm down towards machine zero.</p>\n<p>One way to avoid inconsistency for now is to convert all <code>math::Angle</code> objects to <code>Radian()</code> (or double) first before using comparison and arithmetic operators on them.</p>", "type": "rendered"}, "assignee": null, "state": "wontfix", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-10T18:45:21.731926+00:00", "milestone": null, "updated_on": "2017-02-02T17:15:11.592587+00:00", "type": "issue", "id": 1658}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1659/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1659.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1659/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1659/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1659/create-separate-plugin-for-propellors"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1659/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Create separate plugin for propellors", "component": null, "votes": 1, "watches": 2, "content": {"raw": "During a discussion of the [Rotors simulator](https://github.com/ethz-asl/rotors_simulator) (which uses gazebo), they mentioned that when using the `LiftDragPlugin` on each propellor lifting surface caused simulation instability for large time steps. Specifically, their simulated propellor was spinning at about 6000 revolutions / minute (ie. 100 Hz), and using 10 ms as the time step didn't work, while 1 ms was fine. This sounds like an aliasing problem.\r\n\r\nAlso, I think lots of propellors have a twisted geometry, so modeling each blade as a box doesn't really capture the shape well.\r\n\r\nI think this could be mitigated by making a separate plugin for propellors. For example, the plugin could be connected to a revolute joint and measure the world angular velocity of the child link (propellor) along the joint axis. The translational velocity relative to the flow field along the joint axis could be computed as well. These velocity measures could be used as inputs to a lookup table to compute thrusting force and drag torque on the propellor. I didn't set up the [cessna model](#!/osrf/gazebo/src/f491436008ccd5e7172abb695c7e2a1e5ce6bf50/worlds/cessna_demo.world?at=default#cl-105), but I think that the lookup tables might be easier to use.", "markup": "markdown", "html": "<p>During a discussion of the <a data-is-external-link=\"true\" href=\"https://github.com/ethz-asl/rotors_simulator\" rel=\"nofollow\">Rotors simulator</a> (which uses gazebo), they mentioned that when using the <code>LiftDragPlugin</code> on each propellor lifting surface caused simulation instability for large time steps. Specifically, their simulated propellor was spinning at about 6000 revolutions / minute (ie. 100 Hz), and using 10 ms as the time step didn't work, while 1 ms was fine. This sounds like an aliasing problem.</p>\n<p>Also, I think lots of propellors have a twisted geometry, so modeling each blade as a box doesn't really capture the shape well.</p>\n<p>I think this could be mitigated by making a separate plugin for propellors. For example, the plugin could be connected to a revolute joint and measure the world angular velocity of the child link (propellor) along the joint axis. The translational velocity relative to the flow field along the joint axis could be computed as well. These velocity measures could be used as inputs to a lookup table to compute thrusting force and drag torque on the propellor. I didn't set up the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/f491436008ccd5e7172abb695c7e2a1e5ce6bf50/worlds/cessna_demo.world?at=default#cl-105\" rel=\"nofollow\">cessna model</a>, but I think that the lookup tables might be easier to use.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-10T23:52:55.112993+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:48.981283+00:00", "type": "issue", "id": 1659}, {"priority": "trivial", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1660/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1660.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1660/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1660/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1660/schematic-view-mouse-controls"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1660/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Schematic view mouse controls", "component": {"name": "gui::ModelEditor", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/222472.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I often try to pan the schematic view by dragging the mouse and that doesn't work. Not sure if that would be the best solution though, maybe we want to add box-select or some other dragging interaction in the future... \r\n\r\nSo the more general problem is that right now we're limited to the scroll bars, which can be far to reach...\r\n\r\nAn alternative would be to use Inkscape-like controls:\r\n\r\n* Mouse wheel scrolls up-down\r\n\r\n* Mouse wheel + Shift scrolls left-right\r\n\r\n* Mouse wheel + Ctrl zooms", "markup": "markdown", "html": "<p>I often try to pan the schematic view by dragging the mouse and that doesn't work. Not sure if that would be the best solution though, maybe we want to add box-select or some other dragging interaction in the future... </p>\n<p>So the more general problem is that right now we're limited to the scroll bars, which can be far to reach...</p>\n<p>An alternative would be to use Inkscape-like controls:</p>\n<ul>\n<li>\n<p>Mouse wheel scrolls up-down</p>\n</li>\n<li>\n<p>Mouse wheel + Shift scrolls left-right</p>\n</li>\n<li>\n<p>Mouse wheel + Ctrl zooms</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-11T00:21:24.868708+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:06.822912+00:00", "type": "issue", "id": 1660}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1661/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1661.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1661/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1661/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1661/gazebo-simulation-freezes-on-right-click"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1661/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Gazebo simulation freezes on right click with this world file.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When I run Gazebo, this simulation crashes very rapidly when using polylines as oppose to pre-exported meshes. I would prefer to use polylines so I do not need to include dozens of mesh files with the world file, but alas it seems that using polylines makes the simulation super likely to crash. I have attached the corresponding world file. I am using Dart to run the simulation.\r\n\r\nTo initiate the crash, right click on the model.", "markup": "markdown", "html": "<p>When I run Gazebo, this simulation crashes very rapidly when using polylines as oppose to pre-exported meshes. I would prefer to use polylines so I do not need to include dozens of mesh files with the world file, but alas it seems that using polylines makes the simulation super likely to crash. I have attached the corresponding world file. I am using Dart to run the simulation.</p>\n<p>To initiate the crash, right click on the model.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-13T17:35:54.622448+00:00", "milestone": null, "updated_on": "2015-07-24T16:48:15.345261+00:00", "type": "issue", "id": 1661}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1662/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1662.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1662/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1662/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1662/default-log-naming-with-multiple-gzservers"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1662/vote"}}, "reporter": {"display_name": "ruffsl", "uuid": "{6a46a82e-2fa2-4c3e-8eda-7e358eba7346}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6a46a82e-2fa2-4c3e-8eda-7e358eba7346%7D"}, "html": {"href": "https://bitbucket.org/%7B6a46a82e-2fa2-4c3e-8eda-7e358eba7346%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c73ca2cc01d25876148125d25cd9a0ced=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-1.png"}}, "nickname": "Ruffin White", "type": "user", "account_id": "557058:e92d3e8a-4ef2-40b6-9964-4df6057af861"}, "title": "Default log naming with multiple gzservers", "component": {"name": "util::Logging-Playback", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/283119.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "So traditionally you'd only run one instance of gzserver at a time, but if you happened to be running more than one, then they'd have to be on different ports as to not collide with messages or port reservations. So appending the port number onto the gzserver log filename in the `~/.gazebo/` directory was a reasonable method of keeping multiple loggings from colliding on the same file.\r\n\r\nHowever, with running multiple gzserver in there own linux containers, I'd like to make the `~/.gazebo/` a shared volume among the containers to reuse model files and a common location to archive logs. So if multiple gzservers with default port setting are launched, they will attempt to record to the same exact log file.\r\n\r\nWould there be a better standard to go about this? Keeping the naming convention static helps keep the clutter in the directory down with old miscellaneous log files, but it doesn't scale very easily.\r\n\r\nping @caguero ", "markup": "markdown", "html": "<p>So traditionally you'd only run one instance of gzserver at a time, but if you happened to be running more than one, then they'd have to be on different ports as to not collide with messages or port reservations. So appending the port number onto the gzserver log filename in the <code>~/.gazebo/</code> directory was a reasonable method of keeping multiple loggings from colliding on the same file.</p>\n<p>However, with running multiple gzserver in there own linux containers, I'd like to make the <code>~/.gazebo/</code> a shared volume among the containers to reuse model files and a common location to archive logs. So if multiple gzservers with default port setting are launched, they will attempt to record to the same exact log file.</p>\n<p>Would there be a better standard to go about this? Keeping the naming convention static helps keep the clutter in the directory down with old miscellaneous log files, but it doesn't scale very easily.</p>\n<p>ping @caguero </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-13T22:35:31.405064+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:09.250748+00:00", "type": "issue", "id": 1662}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1663/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1663.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1663/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1663/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1663/sensor-camera-elements-from-sdf-not-being"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1663/vote"}}, "reporter": {"display_name": "Sandro Weber", "uuid": "{fba7082a-c8f0-4aab-880a-78a28c63f993}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D"}, "html": {"href": "https://bitbucket.org/%7Bfba7082a-c8f0-4aab-880a-78a28c63f993%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5e65d01baeee5792745dd223077a8300d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSW-1.png"}}, "nickname": "DreamingSandman", "type": "user", "account_id": "5b180419d9936c6102205eab"}, "title": "sensor->camera elements from .sdf not being published on scene_info request", "component": {"name": "msgs", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122880.json"}}}, "votes": 5, "watches": 2, "content": {"raw": "Dear Gazebo Team,\r\n\r\nwe have a camera sensor in our scene. When requesting scene_info the camera elements defined in the .sdf appear to be missing / are incomplete, namely:\r\n\r\n* image->width/height exist but are set to 0\r\n* all other elements are missing\r\n\r\nOur servers are currently running version 4.0.0. Is the issue known / fixed in a later version?\r\n\r\nBest regards,\r\nSandro Weber", "markup": "markdown", "html": "<p>Dear Gazebo Team,</p>\n<p>we have a camera sensor in our scene. When requesting scene_info the camera elements defined in the .sdf appear to be missing / are incomplete, namely:</p>\n<ul>\n<li>image-&gt;width/height exist but are set to 0</li>\n<li>all other elements are missing</li>\n</ul>\n<p>Our servers are currently running version 4.0.0. Is the issue known / fixed in a later version?</p>\n<p>Best regards,\nSandro Weber</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-14T08:52:58.381415+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:01.537682+00:00", "type": "issue", "id": 1663}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1664/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1664.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1664/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1664/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1664/gazebo-velocity-topic"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1664/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Gazebo Velocity Topic", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 0, "content": {"raw": "Gazebo should really provide the Angular and Linear of velocity of linkages as topics without me having to manually specify via plugin. If this is a default topic, let me know because I would really like to avoid having to write an entire plugin to do this.", "markup": "markdown", "html": "<p>Gazebo should really provide the Angular and Linear of velocity of linkages as topics without me having to manually specify via plugin. If this is a default topic, let me know because I would really like to avoid having to write an entire plugin to do this.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-17T19:29:52.915738+00:00", "milestone": null, "updated_on": "2015-07-23T20:18:02.686743+00:00", "type": "issue", "id": 1664}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1665/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1665.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1665/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1665/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1665/control-s-should-behave-as-save-as-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1665/vote"}}, "reporter": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "title": "Control + S should behave as \"Save As\" when there is no name set", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 1, "watches": 3, "content": {"raw": "Per @spaepcke suggestion:\r\n\r\nThe default Gazebo behavior when there is no name set for a world file and an user press Ctrl + s should be that the Save As dialog appears.", "markup": "markdown", "html": "<p>Per @spaepcke suggestion:</p>\n<p>The default Gazebo behavior when there is no name set for a world file and an user press Ctrl + s should be that the Save As dialog appears.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-17T19:39:10.182821+00:00", "milestone": null, "updated_on": "2018-03-05T19:39:59.498201+00:00", "type": "issue", "id": 1665}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1666/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1666.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1666/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1666/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1666/console-message-in-unit-test-parsed-as"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1666/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Console message in unit test parsed as compiler warning by jenkins", "component": {"name": "os::osx", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/126618.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "The `UNIT_SaveDialog_TEST` has a console warning on jenkins that I can't reproduce on my laptop. For some reason it gets parsed as a [compiler warning by jenkins](http://build.osrfoundation.org/job/gazebo-default-devel-homebrew-amd64-2/73/warnings7Result/).\r\n\r\n~~~\r\n111: 2015-07-17 22:05:01.572 UNIT_SaveDialog_TEST[13551:21541475] Communications error: <OS_xpc_error: <error: 0x7fff7c2b1c60> { count = 1, contents =\r\n111:    \"XPCErrorDescription\" => <string: 0x7fff7c2b1f70> { length = 18, contents = \"Connection invalid\" }\r\n111: }>\r\n~~~", "markup": "markdown", "html": "<p>The <code>UNIT_SaveDialog_TEST</code> has a console warning on jenkins that I can't reproduce on my laptop. For some reason it gets parsed as a <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/job/gazebo-default-devel-homebrew-amd64-2/73/warnings7Result/\" rel=\"nofollow\">compiler warning by jenkins</a>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">111</span><span class=\"o\">:</span> <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">07</span><span class=\"o\">-</span><span class=\"mi\">17</span> <span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">05</span><span class=\"o\">:</span><span class=\"mf\">01.572</span> <span class=\"n\">UNIT_SaveDialog_TEST</span><span class=\"o\">[</span><span class=\"mi\">13551</span><span class=\"o\">:</span><span class=\"mi\">21541475</span><span class=\"o\">]</span> <span class=\"n\">Communications</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">OS_xpc_error</span><span class=\"o\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"mh\">0x7fff7c2b1c60</span><span class=\"o\">&gt;</span> <span class=\"o\">{</span> <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">contents</span> <span class=\"o\">=</span>\n<span class=\"mi\">111</span><span class=\"o\">:</span>    <span class=\"s2\">&quot;XPCErrorDescription&quot;</span> <span class=\"o\">=&gt;</span> <span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"o\">:</span> <span class=\"mh\">0x7fff7c2b1f70</span><span class=\"o\">&gt;</span> <span class=\"o\">{</span> <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"mi\">18</span><span class=\"o\">,</span> <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Connection invalid&quot;</span> <span class=\"o\">}</span>\n<span class=\"mi\">111</span><span class=\"o\">:</span> <span class=\"o\">}&gt;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-18T09:30:09.753434+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:07.675794+00:00", "type": "issue", "id": 1666}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1667/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1667.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1667/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1667/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1667/should-altimetersensor-output-depend-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1667/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Should AltimeterSensor output depend on the gravity vector?", "component": {"name": "sensors", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122877.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "Originally posted as a [comment on gazebo_design pull request](#!/osrf/gazebo_design/pull-request/19/improve-sensor-noise-models/activity#comment-8222031):\r\n\r\nThe AltimeterSensor (merged in pull request #1792) measures altitude along the Z axis. Technically, an altimeter works by measuring barometric pressure. In an atmosphere with a constant gravity field, the pressure varies in proportion to changes in position in a direction parallel to the gravity vector. which varies in proper. I'm going to pose a series of questions and answer them with my opinion separately in a comment:\r\n\r\n1. Instead of always using the Z axis, should the AltimeterSensor define a vertical direction based on the gravity vector?\r\n\r\n2. If the gravity magnitude is zero, should the AltimeterSensor output anything?\r\n\r\n3. Should the noise properties in the AltimeterSensor depend on the gravity magnitude? (since the signal available to the sensor will be weaker with a smaller gravity magnitude, but the noise would presumably be the same magnitude)", "markup": "markdown", "html": "<p>Originally posted as a <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/pull-request/19/improve-sensor-noise-models/activity#comment-8222031\" rel=\"nofollow\">comment on gazebo_design pull request</a>:</p>\n<p>The AltimeterSensor (merged in <a href=\"#!/osrf/gazebo/pull-requests/1792/altimeter-sensor-redo-of-pull-request-1751\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1792</a>) measures altitude along the Z axis. Technically, an altimeter works by measuring barometric pressure. In an atmosphere with a constant gravity field, the pressure varies in proportion to changes in position in a direction parallel to the gravity vector. which varies in proper. I'm going to pose a series of questions and answer them with my opinion separately in a comment:</p>\n<ol>\n<li>\n<p>Instead of always using the Z axis, should the AltimeterSensor define a vertical direction based on the gravity vector?</p>\n</li>\n<li>\n<p>If the gravity magnitude is zero, should the AltimeterSensor output anything?</p>\n</li>\n<li>\n<p>Should the noise properties in the AltimeterSensor depend on the gravity magnitude? (since the signal available to the sensor will be weaker with a smaller gravity magnitude, but the noise would presumably be the same magnitude)</p>\n</li>\n</ol>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-18T16:46:06.290651+00:00", "milestone": null, "updated_on": "2017-04-03T06:00:22.099499+00:00", "type": "issue", "id": 1667}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1668/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1668.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1668/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1668/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1668/allow-option-for-command-line-arguements"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1668/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Allow option for command line arguements to disable plugins", "component": null, "votes": 0, "watches": 2, "content": {"raw": "For either security concerns or for the sake of testing worlds, it would be nice if there was a command line argument to stop Gazebo from loading plugins including model plugins. It would be a welcome feature for debugging. ", "markup": "markdown", "html": "<p>For either security concerns or for the sake of testing worlds, it would be nice if there was a command line argument to stop Gazebo from loading plugins including model plugins. It would be a welcome feature for debugging. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-20T18:03:48.536281+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:06.629348+00:00", "type": "issue", "id": 1668}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1669/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1669.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1669/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1669/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1669/compiler-warning-in-moonmanagercpp"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1669/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Compiler warning in MoonManager.cpp", "component": {"name": "rendering", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122881.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "Originally posted on ogre forums:\r\n\r\n* http://www.ogre3d.org/addonforums/viewtopic.php?f=20&t=30406\r\n\r\nWhen compiling skyx with clang on Mac OS X, I get a compiler warning about MoonManager.cpp line 225: \"explicitly assigning a variable of type 'Ogre::Real' (aka 'float') to itself\"\r\n\r\nhttp://build.osrfoundation.org/view/gazebo/job/gazebo-default-devel-homebrew-amd64-2/76/warnings7Result/package.869114785/\r\n\r\nHere's a link to the code:\r\n\r\n#!/osrf/gazebo/src/gazebo5_5.0.1/gazebo/rendering/skyx/src/MoonManager.cpp#MoonManager.cpp-225\r\n\r\nThe offending line says:\r\n\r\n~~~\r\ncenter = center;\r\n~~~\r\n\r\nIs that a mistake? Lots of other lines in that functions say:\r\n\r\n~~~\r\ncenter = -center;\r\n~~~", "markup": "markdown", "html": "<p>Originally posted on ogre forums:</p>\n<ul>\n<li><a href=\"http://www.ogre3d.org/addonforums/viewtopic.php?f=20&amp;t=30406\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.ogre3d.org/addonforums/viewtopic.php?f=20&amp;t=30406</a></li>\n</ul>\n<p>When compiling skyx with clang on Mac OS X, I get a compiler warning about MoonManager.cpp line 225: \"explicitly assigning a variable of type 'Ogre::Real' (aka 'float') to itself\"</p>\n<p><a href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-default-devel-homebrew-amd64-2/76/warnings7Result/package.869114785/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/view/gazebo/job/gazebo-default-devel-homebrew-amd64-2/76/warnings7Result/package.869114785/</a></p>\n<p>Here's a link to the code:</p>\n<p><a href=\"#!/osrf/gazebo/src/gazebo5_5.0.1/gazebo/rendering/skyx/src/MoonManager.cpp#MoonManager.cpp-225\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo/src/gazebo5_5.0.1/gazebo/rendering/skyx/src/MoonManager.cpp#MoonManager.cpp-225</a></p>\n<p>The offending line says:</p>\n<div class=\"codehilite\"><pre><span></span>center = center;\n</pre></div>\n\n\n<p>Is that a mistake? Lots of other lines in that functions say:</p>\n<div class=\"codehilite\"><pre><span></span>center = -center;\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-21T16:44:43.093366+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:04.493082+00:00", "type": "issue", "id": 1669}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1670/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1670.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1670/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1670/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1670/segmentation-fault-on-camararender-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1670/vote"}}, "reporter": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "title": "Segmentation fault on CamaraRender with ogre-1.9", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Coming from pull request 1790.\r\n\r\nWhen compiling gazebo6 branch with ogre-1.9 and run `gzserver worlds/pr2.world`, gzserver segfaults on Camera render:\r\n\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff0821cc7 in Ogre::SceneManager::firePreRenderQueues() ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n(gdb) bt\r\n#0  0x00007ffff0821cc7 in Ogre::SceneManager::firePreRenderQueues() ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#1  0x00007ffff08230b5 in Ogre::SceneManager::renderVisibleObjectsDefaultSequence() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#2  0x00007ffff0835088 in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#3  0x00007ffff08b3e6b in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#4  0x00007ffff08046ee in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#5  0x00007ffff08046ab in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool)\r\n    () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#6  0x00007ffff080425e in Ogre::RenderTarget::updateImpl() ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#7  0x00007ffff0804854 in Ogre::RenderTarget::update(bool) ()\r\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\r\n#8  0x00007ffff0cd28ac in gazebo::rendering::Camera::Render (this=0xac40c70, \r\n    _force=_force@entry=false)\r\n    at /home/jrivero/code/gazebo/gazebo/rendering/Camera.cc:400\r\n#9  0x00007ffff62f8047 in gazebo::sensors::CameraSensor::Render (\r\n    this=0x68ec490)\r\n    at /home/jrivero/code/gazebo/gazebo/sensors/CameraSensor.cc:184\r\n```\r\nSame command run just fine when gazebo is compiled with ogre-1.8", "markup": "markdown", "html": "<p>Coming from pull request 1790.</p>\n<p>When compiling gazebo6 branch with ogre-1.9 and run <code>gzserver worlds/pr2.world</code>, gzserver segfaults on Camera render:</p>\n<div class=\"codehilite\"><pre><span></span>Program received signal SIGSEGV, Segmentation fault.\n0x00007ffff0821cc7 in Ogre::SceneManager::firePreRenderQueues() ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n(gdb) bt\n#0  0x00007ffff0821cc7 in Ogre::SceneManager::firePreRenderQueues() ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#1  0x00007ffff08230b5 in Ogre::SceneManager::renderVisibleObjectsDefaultSequence() () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#2  0x00007ffff0835088 in Ogre::SceneManager::_renderScene(Ogre::Camera*, Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#3  0x00007ffff08b3e6b in Ogre::Camera::_renderScene(Ogre::Viewport*, bool) ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#4  0x00007ffff08046ee in Ogre::RenderTarget::_updateViewport(Ogre::Viewport*, bool) () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#5  0x00007ffff08046ab in Ogre::RenderTarget::_updateAutoUpdatedViewports(bool)\n    () from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#6  0x00007ffff080425e in Ogre::RenderTarget::updateImpl() ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#7  0x00007ffff0804854 in Ogre::RenderTarget::update(bool) ()\n   from /usr/lib/x86_64-linux-gnu/libOgreMain.so.1.9.0\n#8  0x00007ffff0cd28ac in gazebo::rendering::Camera::Render (this=0xac40c70, \n    _force=_force@entry=false)\n    at /home/jrivero/code/gazebo/gazebo/rendering/Camera.cc:400\n#9  0x00007ffff62f8047 in gazebo::sensors::CameraSensor::Render (\n    this=0x68ec490)\n    at /home/jrivero/code/gazebo/gazebo/sensors/CameraSensor.cc:184\n</pre></div>\n\n\n<p>Same command run just fine when gazebo is compiled with ogre-1.8</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-21T18:03:14.700250+00:00", "milestone": null, "updated_on": "2016-09-14T19:45:37.301743+00:00", "type": "issue", "id": 1670}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1671/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1671.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1671/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1671/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1671/gz-topic-visualizer-cannot-view-custom"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1671/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "GZ Topic visualizer cannot view custom messages even when the definition is linked via plugin.", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Let's say I have a plugin that sends a custom message. There is no reason that gz topic visualizer should not be able to use the same static libraries to view the image as well. I am finding it very difficult to test out my custom subscriber because of this.", "markup": "markdown", "html": "<p>Let's say I have a plugin that sends a custom message. There is no reason that gz topic visualizer should not be able to use the same static libraries to view the image as well. I am finding it very difficult to test out my custom subscriber because of this.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-21T18:15:30.155090+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:23.465149+00:00", "type": "issue", "id": 1671}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1672/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1672.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1672/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1672/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1672/integration_world_reset-test-failure-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1672/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "INTEGRATION_world_reset test failure in gazebo6 branch", "component": {"name": "physics::SimbodyPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122885.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "After merging pull request #1790 (`event_fix` branch), the `INTEGRATION_world_reset` test was broken. The test fails during `PhysicsEngines/WorldResetTest.WorldName/10` or `PhysicsEngines/WorldResetTest.WorldName/11` (both simbody test instances).\r\n\r\n~~~\r\n$ test/integration/INTEGRATION_world_reset --gtest_filter=\"*/10\"\r\nNote: Google Test filter = */10\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from PhysicsEngines/WorldResetTest\r\n[ RUN      ] PhysicsEngines/WorldResetTest.WorldName/10\r\n[Dbg] [world_reset.cc:82] Physics engine [simbody] world name [worlds/pr2.world] reset count [1]\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 172.23.2.90\r\n...\r\n[Err] [SimbodyLink.cc:221] SetWorldPose (OnPoseChange) for child links need testing.\r\nINTEGRATION_world_reset: /tmp/buildd/simbody-3.5.1/Simbody/src/MobilizedBody.cpp:333: SimTK::Real& SimTK::MobilizedBody::updOneFromUPartition(const SimTK::State&, int, SimTK::Vector&) const: Assertion `0 <= which && which < nu' failed.\r\nAborted (core dumped)\r\n~~~\r\n\r\nThe [backtrace](https://gist.github.com/scpeters/62c2fa80d4eaa72d00a5) implicates `SimbodyScrewJoint::SetVelocity`, which is called by `Joint::Reset`.", "markup": "markdown", "html": "<p>After merging <a href=\"#!/osrf/gazebo/pull-requests/1790/fix-event-segfault\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1790</a> (<code>event_fix</code> branch), the <code>INTEGRATION_world_reset</code> test was broken. The test fails during <code>PhysicsEngines/WorldResetTest.WorldName/10</code> or <code>PhysicsEngines/WorldResetTest.WorldName/11</code> (both simbody test instances).</p>\n<div class=\"codehilite\"><pre><span></span>$ test/integration/INTEGRATION_world_reset --gtest_filter<span class=\"o\">=</span><span class=\"s2\">&quot;*/10&quot;</span>\nNote: Google Test <span class=\"nv\">filter</span> <span class=\"o\">=</span> */10\n<span class=\"o\">[==========]</span> Running <span class=\"m\">1</span> <span class=\"nb\">test</span> from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">1</span> <span class=\"nb\">test</span> from PhysicsEngines/WorldResetTest\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> PhysicsEngines/WorldResetTest.WorldName/10\n<span class=\"o\">[</span>Dbg<span class=\"o\">]</span> <span class=\"o\">[</span>world_reset.cc:82<span class=\"o\">]</span> Physics engine <span class=\"o\">[</span>simbody<span class=\"o\">]</span> world name <span class=\"o\">[</span>worlds/pr2.world<span class=\"o\">]</span> reset count <span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span>\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Waiting <span class=\"k\">for</span> master.\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Connected to gazebo master @ http://127.0.0.1:11345\n<span class=\"o\">[</span>Msg<span class=\"o\">]</span> Publicized address: <span class=\"m\">172</span>.23.2.90\n...\n<span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>SimbodyLink.cc:221<span class=\"o\">]</span> SetWorldPose <span class=\"o\">(</span>OnPoseChange<span class=\"o\">)</span> <span class=\"k\">for</span> child links need testing.\nINTEGRATION_world_reset: /tmp/buildd/simbody-3.5.1/Simbody/src/MobilizedBody.cpp:333: SimTK::Real<span class=\"p\">&amp;</span> SimTK::MobilizedBody::updOneFromUPartition<span class=\"o\">(</span>const SimTK::State<span class=\"p\">&amp;</span>, int, SimTK::Vector<span class=\"p\">&amp;</span><span class=\"o\">)</span> const: Assertion <span class=\"sb\">`</span><span class=\"m\">0</span> &lt;<span class=\"o\">=</span> which <span class=\"o\">&amp;&amp;</span> which &lt; nu<span class=\"err\">&#39;</span> failed.\nAborted <span class=\"o\">(</span>core dumped<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>The <a data-is-external-link=\"true\" href=\"https://gist.github.com/scpeters/62c2fa80d4eaa72d00a5\" rel=\"nofollow\">backtrace</a> implicates <code>SimbodyScrewJoint::SetVelocity</code>, which is called by <code>Joint::Reset</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-21T22:34:16.959651+00:00", "milestone": null, "updated_on": "2015-07-23T00:03:47.418765+00:00", "type": "issue", "id": 1672}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1673/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1673.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1673/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1673/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1673/add-flags-to-link-against-test-fixture"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1673/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Add flags to link against test fixture", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "Should we modify gazebo's cmake config to include the test fixture? See pull request #1818.", "markup": "markdown", "html": "<p>Should we modify gazebo's cmake config to include the test fixture? See <a href=\"#!/osrf/gazebo/pull-requests/1818/add-extra-gazebo-libraries-to-configcmake\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1818</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-23T05:26:00.121008+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:06.973262+00:00", "type": "issue", "id": 1673}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1674/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1674.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1674/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1674/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1674/schematicviewwidget_test-failing-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1674/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "SchematicViewWidget_TEST failing in jenkins", "component": {"name": "gui::ModelEditor", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/222472.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "The `SchematicViewWidget_TEST` is [failing in jenkins](http://build.osrfoundation.org/view/gazebo/job/gazebo-default-devel-trusty-amd64-gpu-nvidia/147/testReport/junit/(root)/SchematicViewWidget_TEST/Selection/).\r\n\r\n~~~\r\nError Message\r\n\r\ngazebo/gui/model/SchematicViewWidget_TEST.cc:113 :: 'itemA->isSelected()' returned FALSE. ()\r\n~~~\r\n\r\n~~~\r\n125: Test command: /var/lib/jenkins/workspace/gazebo-default-devel-trusty-amd64-gpu-nvidia/build/gazebo/gui/model/UNIT_SchematicViewWidget_TEST \"-xml\" \"-o\" \"/var/lib/jenkins/workspace/gazebo-default-devel-trusty-amd64-gpu-nvidia/build/test_results/UNIT_SchematicViewWidget_TEST.xml\"\r\n125: Test timeout computed to be: 240\r\n125: SharePercentChange[0.441643] ShareMaxPercentChange[1]\r\n125: ResPercentChange[0.335825]ResMaxPercentChange[3]\r\n125: SharePercentChange[0.0076639] ShareMaxPercentChange[1]\r\n125: ResPercentChange[0.0725928]ResMaxPercentChange[3]\r\n125: Error: agdelete on wrong graphError: agdelete on wrong graph\r\n125/192 Test #125: UNIT_SchematicViewWidget_TEST ..........***Failed    0.31 sec\r\n~~~", "markup": "markdown", "html": "<p>The <code>SchematicViewWidget_TEST</code> is <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/gazebo/job/gazebo-default-devel-trusty-amd64-gpu-nvidia/147/testReport/junit/(root)/SchematicViewWidget_TEST/Selection/\" rel=\"nofollow\">failing in jenkins</a>.</p>\n<div class=\"codehilite\"><pre><span></span>Error Message\n\ngazebo/gui/model/SchematicViewWidget_TEST.cc:113 :: &#39;itemA-&gt;isSelected()&#39; returned FALSE. ()\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">Test</span> <span class=\"n\">command</span><span class=\"o\">:</span> <span class=\"sr\">/var/lib/jenkins/workspace/gazebo-default-devel-trusty-amd64-gpu-nvidia/build/gazebo/gui/model/UNIT_SchematicViewWidget_TEST &quot;-xml&quot; &quot;-o&quot; &quot;/var/lib/jenkins/workspace/gazebo-default-devel-trusty-amd64-gpu-nvidia/build/test_results/</span><span class=\"n\">UNIT_SchematicViewWidget_TEST</span><span class=\"o\">.</span><span class=\"na\">xml</span><span class=\"err\">&quot;</span>\n<span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">Test</span> <span class=\"n\">timeout</span> <span class=\"n\">computed</span> <span class=\"n\">to</span> <span class=\"n\">be</span><span class=\"o\">:</span> <span class=\"mi\">240</span>\n<span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">SharePercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.441643</span><span class=\"o\">]</span> <span class=\"n\">ShareMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">ResPercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.335825</span><span class=\"o\">]</span><span class=\"n\">ResMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">SharePercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.0076639</span><span class=\"o\">]</span> <span class=\"n\">ShareMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">ResPercentChange</span><span class=\"o\">[</span><span class=\"mf\">0.0725928</span><span class=\"o\">]</span><span class=\"n\">ResMaxPercentChange</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">agdelete</span> <span class=\"n\">on</span> <span class=\"n\">wrong</span> <span class=\"n\">graphError</span><span class=\"o\">:</span> <span class=\"n\">agdelete</span> <span class=\"n\">on</span> <span class=\"n\">wrong</span> <span class=\"n\">graph</span>\n<span class=\"mi\">125</span><span class=\"o\">/</span><span class=\"mi\">192</span> <span class=\"n\">Test</span> <span class=\"err\">#</span><span class=\"mi\">125</span><span class=\"o\">:</span> <span class=\"n\">UNIT_SchematicViewWidget_TEST</span> <span class=\"o\">..........***</span><span class=\"n\">Failed</span>    <span class=\"mf\">0.31</span> <span class=\"n\">sec</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-23T06:34:10.855788+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:13.751660+00:00", "type": "issue", "id": 1674}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1675/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1675.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1675/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1675/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1675/add-support-for-polylines-to-all-physics"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1675/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Add support for polylines to all physics engine by converting polyline to mesh", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "A relatively simple workaround for physics engines that do not support polyline collisions.", "markup": "markdown", "html": "<p>A relatively simple workaround for physics engines that do not support polyline collisions.</p>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-23T16:40:46.352847+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:01.521879+00:00", "type": "issue", "id": 1675}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1676/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1676.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1676/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1676/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1676/gzclient-shutdown-boost-exception"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1676/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Gzclient shutdown boost exception", "component": null, "votes": 1, "watches": 1, "content": {"raw": "I see this error occasionally when closing Gazebo:\r\n\r\n```\r\n#!c++\r\n\r\nterminate called after throwing an instance of 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >'\r\n  what():  boost thread: trying joining itself: Resource deadlock avoided\r\n\r\n```\r\n\r\nI believe it's somewhere in the client.", "markup": "markdown", "html": "<p>I see this error occasionally when closing Gazebo:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">terminate</span> <span class=\"n\">called</span> <span class=\"n\">after</span> <span class=\"n\">throwing</span> <span class=\"n\">an</span> <span class=\"n\">instance</span> <span class=\"n\">of</span> <span class=\"err\">&#39;</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">exception_detail</span><span class=\"o\">::</span><span class=\"n\">clone_impl</span><span class=\"o\">&lt;</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">exception_detail</span><span class=\"o\">::</span><span class=\"n\">error_info_injector</span><span class=\"o\">&lt;</span><span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">thread_resource_error</span><span class=\"o\">&gt;</span> <span class=\"o\">&gt;</span><span class=\"err\">&#39;</span>\n  <span class=\"n\">what</span><span class=\"p\">()</span><span class=\"o\">:</span>  <span class=\"n\">boost</span> <span class=\"kr\">thread</span><span class=\"o\">:</span> <span class=\"n\">trying</span> <span class=\"n\">joining</span> <span class=\"nl\">itself</span><span class=\"p\">:</span> <span class=\"n\">Resource</span> <span class=\"n\">deadlock</span> <span class=\"n\">avoided</span>\n</pre></div>\n\n\n<p>I believe it's somewhere in the client.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-24T16:15:46.636156+00:00", "milestone": null, "updated_on": "2016-12-16T14:41:51.588837+00:00", "type": "issue", "id": 1676}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1677/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1677.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1677/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1677/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1677/large-sdf-files-cause-gazebo-to-crash"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1677/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Large SDF files cause Gazebo to crash.", "component": {"name": "common", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/138866.json"}}}, "votes": 0, "watches": 0, "content": {"raw": "So I am trying to add a work around for the lack of mesh collision support in Simbody. Alas, when I tried adding lots of smaller collision files, the Gazebo crashed like so:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n[Msg] Waiting for master.\r\nGazebo multi-robot simulator, version 4.1.0\r\nCopyright (C) 2012-2014 Open Source Robotics Foundation.\r\nReleased under the Apache 2 License.\r\nhttp://gazebosim.org\r\n\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 10.251.221.133\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 10.251.221.133\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Wrn] [gazebo.cc:186] Waited 1seconds for namespaces.\r\n[Err] [gazebo.cc:191] Waited 11 seconds for namespaces. Giving up.\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n[Err] [Node.cc:98] No namespace found\r\n```\r\n", "markup": "markdown", "html": "<p>So I am trying to add a work around for the lack of mesh collision support in Simbody. Alas, when I tried adding lots of smaller collision files, the Gazebo crashed like so:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"n\">master</span><span class=\"p\">.</span>\n<span class=\"n\">Gazebo</span> <span class=\"n\">multi</span><span class=\"o\">-</span><span class=\"n\">robot</span> <span class=\"n\">simulator</span><span class=\"p\">,</span> <span class=\"n\">version</span> <span class=\"mf\">4.1.0</span>\n<span class=\"n\">Copyright</span> <span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"mi\">2012</span><span class=\"o\">-</span><span class=\"mi\">2014</span> <span class=\"n\">Open</span> <span class=\"n\">Source</span> <span class=\"n\">Robotics</span> <span class=\"n\">Foundation</span><span class=\"p\">.</span>\n<span class=\"n\">Released</span> <span class=\"n\">under</span> <span class=\"n\">the</span> <span class=\"n\">Apache</span> <span class=\"mi\">2</span> <span class=\"n\">License</span><span class=\"p\">.</span>\n<span class=\"nl\">http</span><span class=\"p\">:</span><span class=\"c1\">//gazebosim.org</span>\n\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Connected</span> <span class=\"n\">to</span> <span class=\"n\">gazebo</span> <span class=\"n\">master</span> <span class=\"err\">@</span> <span class=\"nl\">http</span><span class=\"p\">:</span><span class=\"c1\">//127.0.0.1:11345</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Publicized</span> <span class=\"nl\">address</span><span class=\"p\">:</span> <span class=\"mf\">10.251.221.133</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"n\">master</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Connected</span> <span class=\"n\">to</span> <span class=\"n\">gazebo</span> <span class=\"n\">master</span> <span class=\"err\">@</span> <span class=\"nl\">http</span><span class=\"p\">:</span><span class=\"c1\">//127.0.0.1:11345</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Publicized</span> <span class=\"nl\">address</span><span class=\"p\">:</span> <span class=\"mf\">10.251.221.133</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Wrn</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">186</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">1</span><span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">gazebo</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">191</span><span class=\"p\">]</span> <span class=\"n\">Waited</span> <span class=\"mi\">11</span> <span class=\"n\">seconds</span> <span class=\"k\">for</span> <span class=\"n\">namespaces</span><span class=\"p\">.</span> <span class=\"n\">Giving</span> <span class=\"n\">up</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n<span class=\"p\">[</span><span class=\"n\">Err</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">98</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"k\">namespace</span> <span class=\"n\">found</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-24T16:42:42.672796+00:00", "milestone": null, "updated_on": "2015-07-24T16:42:42.672796+00:00", "type": "issue", "id": 1677}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1678/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1678.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1678/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1678/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1678/using-self-collision-can-cause-simbody-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1678/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Using self collision can cause Simbody to crash.", "component": {"name": "physics::SimbodyPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122885.json"}}}, "votes": 0, "watches": 0, "content": {"raw": "So I am trying to work around the lack of mesh support using hitboxes. Unfortunately, I cannot use the self collision tag without causing Gazebo to crash due to Simbody itself crashing (or getting stuck in a loop or something). I have attached the necessary world required to reproduce the results below.\r\n\r\nAlso: I get a lot of warnings from Simbody about not being able to set axis and other things, which is weird because I only use the SDF:\r\n\r\n[Dbg] [SimbodyHingeJoint.cc:55] SetAxis: setting axis is not yet implemented.  The axis are set  during joint construction in SimbodyPhysics.cc for now.\r\n[Err] [SimbodyJoint.cc:384] SimbodyJoint::SetAnchor:  Not implement in Simbody. Anchor is set during joint construction in SimbodyPhysics.cc\r\n\r\nHowever, this does not cause the crash as setting self_collide to false allows the simulation to proceed just fine while still generating those error messages.", "markup": "markdown", "html": "<p>So I am trying to work around the lack of mesh support using hitboxes. Unfortunately, I cannot use the self collision tag without causing Gazebo to crash due to Simbody itself crashing (or getting stuck in a loop or something). I have attached the necessary world required to reproduce the results below.</p>\n<p>Also: I get a lot of warnings from Simbody about not being able to set axis and other things, which is weird because I only use the SDF:</p>\n<p>[Dbg] [SimbodyHingeJoint.cc:55] SetAxis: setting axis is not yet implemented.  The axis are set  during joint construction in SimbodyPhysics.cc for now.\n[Err] [SimbodyJoint.cc:384] SimbodyJoint::SetAnchor:  Not implement in Simbody. Anchor is set during joint construction in SimbodyPhysics.cc</p>\n<p>However, this does not cause the crash as setting self_collide to false allows the simulation to proceed just fine while still generating those error messages.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-24T18:22:46.666693+00:00", "milestone": null, "updated_on": "2015-07-24T18:22:46.666693+00:00", "type": "issue", "id": 1678}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1679/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1679.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1679/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1679/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1679/gearbox-joint-visualization"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1679/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Gearbox joint visualization", "component": {"name": "rendering", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122881.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "current `JointVisual` doesn't provide a clear visualization of the gearbox joint axes \r\n\r\nVisualization should clearly show:\r\n\r\n- `axis1`: child link's axis of rotation\r\n\r\n- `axis2`: parent's link's axis of rotation\r\n\r\n-  `gearbox_reference_body` that affects the two axes vectors", "markup": "markdown", "html": "<p>current <code>JointVisual</code> doesn't provide a clear visualization of the gearbox joint axes </p>\n<p>Visualization should clearly show:</p>\n<ul>\n<li>\n<p><code>axis1</code>: child link's axis of rotation</p>\n</li>\n<li>\n<p><code>axis2</code>: parent's link's axis of rotation</p>\n</li>\n<li>\n<p><code>gearbox_reference_body</code> that affects the two axes vectors</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-25T07:23:46.459182+00:00", "milestone": null, "updated_on": "2016-09-14T19:22:51.290846+00:00", "type": "issue", "id": 1679}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1680/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1680.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1680/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1680/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1680/segmentation-fault-in-gzclient-with-camera"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1680/vote"}}, "reporter": {"display_name": "Sean Kugele", "uuid": "{8469283d-267e-429f-adaf-8a2900005867}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8469283d-267e-429f-adaf-8a2900005867%7D"}, "html": {"href": "https://bitbucket.org/%7B8469283d-267e-429f-adaf-8a2900005867%7D/"}, "avatar": {"href": "https://bitbucket.org/account/sean_kugele/avatar/"}}, "nickname": "sean_kugele", "type": "user", "account_id": null}, "title": "Segmentation fault in gzclient with camera visualization enabled", "component": {"name": "rendering", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122881.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I'm encountering a segmentation fault whenever I add a camera (or model that contains a camera) with **<visualize>1</visualize>** in the sdf.  \r\n\r\nI first encountered this adding the PR2 robot model to a default world.  More recently I was able to reproduce with a camera sensor added to a YouBot.  After playing with it a little I was able to determine that the segmentation fault did not occur if visualize=0.\r\n\r\nThe segmentation fault is generated when the gzclient is closed.\r\n\r\nMay be related to [Issue #1470](#!/osrf/gazebo/issues/1470/gzclient-segmentation-fault-on-exit-when-a).\r\n\r\n**Version:** Gazebo multi-robot simulator, version 5.1.0\r\n\r\n**OS:** Ubuntu 14.04\r\n\r\n        Program received signal SIGSEGV, Segmentation fault.\r\n        0x0000000000000000 in ?? ()\r\n        (gdb) bt\r\n        #0  0x0000000000000000 in ?? ()\r\n        #1  0x00007f0fa23a67f0 in gazebo::rendering::Camera::~Camera() ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\r\n        #2  0x00007f0fa23a6ae9 in gazebo::rendering::Camera::~Camera() ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\r\n        #3  0x00007f0fa239e1ee in ?? ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\r\n        #4  0x00007f0fa23bd686 in gazebo::rendering::CameraVisual::~CameraVisual() ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\r\n        #5  0x00007f0fa23bd6b9 in gazebo::rendering::CameraVisual::~CameraVisual() ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\r\n        #6  0x00007f0fa239e1ee in ?? ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\r\n        #7  0x00007f0fa24532ae in ?? ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\r\n        #8  0x00007f0fa377169f in gazebo::event::EventT<void ()>::~EventT() ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_gui.so.5\r\n        #9  0x00007f0fa2c1f5ea in __cxa_finalize (d=0x7f0fa2be1bc0)\r\n            at cxa_finalize.c:56\r\n        #10 0x00007f0fa296c163 in ?? ()\r\n           from /usr/lib/x86_64-linux-gnu/libgazebo_common.so.5\r\n        #11 0x00007ffd3981f2c0 in ?? ()\r\n        #12 0x00007f0fa3dc173a in _dl_fini () at dl-fini.c:252\r\n\r\n\r\n\r\n", "markup": "markdown", "html": "<p>I'm encountering a segmentation fault whenever I add a camera (or model that contains a camera) with <strong>&lt;visualize&gt;1&lt;/visualize&gt;</strong> in the sdf.  </p>\n<p>I first encountered this adding the PR2 robot model to a default world.  More recently I was able to reproduce with a camera sensor added to a YouBot.  After playing with it a little I was able to determine that the segmentation fault did not occur if visualize=0.</p>\n<p>The segmentation fault is generated when the gzclient is closed.</p>\n<p>May be related to <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/issues/1470/gzclient-segmentation-fault-on-exit-when-a\" rel=\"nofollow\">Issue #1470</a>.</p>\n<p><strong>Version:</strong> Gazebo multi-robot simulator, version 5.1.0</p>\n<p><strong>OS:</strong> Ubuntu 14.04</p>\n<div class=\"codehilite\"><pre><span></span>    Program received signal SIGSEGV, Segmentation fault.\n    0x0000000000000000 in ?? ()\n    (gdb) bt\n    #0  0x0000000000000000 in ?? ()\n    #1  0x00007f0fa23a67f0 in gazebo::rendering::Camera::~Camera() ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n    #2  0x00007f0fa23a6ae9 in gazebo::rendering::Camera::~Camera() ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n    #3  0x00007f0fa239e1ee in ?? ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n    #4  0x00007f0fa23bd686 in gazebo::rendering::CameraVisual::~CameraVisual() ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n    #5  0x00007f0fa23bd6b9 in gazebo::rendering::CameraVisual::~CameraVisual() ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n    #6  0x00007f0fa239e1ee in ?? ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n    #7  0x00007f0fa24532ae in ?? ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_rendering.so.5\n    #8  0x00007f0fa377169f in gazebo::event::EventT&lt;void ()&gt;::~EventT() ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_gui.so.5\n    #9  0x00007f0fa2c1f5ea in __cxa_finalize (d=0x7f0fa2be1bc0)\n        at cxa_finalize.c:56\n    #10 0x00007f0fa296c163 in ?? ()\n       from /usr/lib/x86_64-linux-gnu/libgazebo_common.so.5\n    #11 0x00007ffd3981f2c0 in ?? ()\n    #12 0x00007f0fa3dc173a in _dl_fini () at dl-fini.c:252\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-27T02:29:53.904619+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:47.279451+00:00", "type": "issue", "id": 1680}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1681/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1681.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1681/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1681/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1681/torsional-friction-for-bullet"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1681/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Torsional friction for Bullet", "component": {"name": "physics::BulletPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122884.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Implement torsional friction for Bullet", "markup": "markdown", "html": "<p>Implement torsional friction for Bullet</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-27T19:41:50.700355+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:42.258075+00:00", "type": "issue", "id": 1681}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1682/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1682.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1682/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1682/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1682/torsional-friction-for-dart"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1682/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Torsional friction for DART", "component": {"name": "physics::DARTPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/139387.json"}}}, "votes": 1, "watches": 3, "content": {"raw": "Implement torsional friction for DART", "markup": "markdown", "html": "<p>Implement torsional friction for DART</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-27T19:42:10.141820+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:58.996375+00:00", "type": "issue", "id": 1682}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1683/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1683.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1683/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1683/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1683/torsional-friction-for-simbody"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1683/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Torsional friction for Simbody", "component": {"name": "physics::SimbodyPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122885.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Implement torsional friction for Simbody", "markup": "markdown", "html": "<p>Implement torsional friction for Simbody</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-27T19:42:34.498385+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:42.109741+00:00", "type": "issue", "id": 1683}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1684/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1684.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1684/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1684/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1684/implement-fixed-joint-setparam-function-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1684/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Implement fixed joint `SetParam` function in maximal coordinate engines (ODE and Bullet)", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Fixed joint type was added in pull request #1747. The `SetParam` function needs to be implemented to support setting params like cfm and erp\r\n\r\nThis issue was brought up in pull request #1794", "markup": "markdown", "html": "<p>Fixed joint type was added in <a href=\"#!/osrf/gazebo/pull-requests/1747/support-for-fixed-joints\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1747</a>. The <code>SetParam</code> function needs to be implemented to support setting params like cfm and erp</p>\n<p>This issue was brought up in <a href=\"#!/osrf/gazebo/pull-requests/1794/support-more-joint-types-in-model-editor\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1794</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-27T19:59:39.852426+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:16.294325+00:00", "type": "issue", "id": 1684}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1685/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1685.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1685/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1685/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1685/model-editor-visual-and-collision"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1685/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Model Editor: Visual and collision properties don't get loaded into inspectors", "component": {"name": "gui::ModelEditor", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/222472.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Only a few selected properties are being loaded from the SDF.", "markup": "markdown", "html": "<p>Only a few selected properties are being loaded from the SDF.</p>", "type": "rendered"}, "assignee": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-28T04:20:58.784710+00:00", "milestone": null, "updated_on": "2016-09-14T19:43:43.901443+00:00", "type": "issue", "id": 1685}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1686/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1686.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1686/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1686/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1686/screwjoint-getthreadpitch-isnt-const"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1686/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "ScrewJoint::GetThreadPitch isn't const", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 1, "watches": 2, "content": {"raw": "The `ScrewJoint::GetThreadPitch` function isn't `const` in gazebo6 and earlier, which prevents it from being used in other `const` functions. This came up during pull request #1827. We should change it to be const, but only in the default branch, so we don't break API/ABI for released branches.", "markup": "markdown", "html": "<p>The <code>ScrewJoint::GetThreadPitch</code> function isn't <code>const</code> in gazebo6 and earlier, which prevents it from being used in other <code>const</code> functions. This came up during <a href=\"#!/osrf/gazebo/pull-requests/1827/gazebo-5-dart-43-fix-different-definitions\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1827</a>. We should change it to be const, but only in the default branch, so we don't break API/ABI for released branches.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-29T16:53:17.460062+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:17.191344+00:00", "type": "issue", "id": 1686}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1687/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1687.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1687/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1687/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1687/not-all-joint-parameters-show-up-on-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1687/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Not all joint parameters show up on the left panel", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "You can compare the fields on [joint.proto](#!/osrf/gazebo/src/38cd2490494bd0092ee7f5df522ba6b6f4ecea5f/gazebo/msgs/joint.proto?fileviewer=file-view-default) with what is displayed on the `ModelListWidget`. \r\n\r\nAlso compare to the model editor's joint inspector, which has most message fields.", "markup": "markdown", "html": "<p>You can compare the fields on <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/38cd2490494bd0092ee7f5df522ba6b6f4ecea5f/gazebo/msgs/joint.proto?fileviewer=file-view-default\" rel=\"nofollow\">joint.proto</a> with what is displayed on the <code>ModelListWidget</code>. </p>\n<p>Also compare to the model editor's joint inspector, which has most message fields.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-07-29T22:40:41.950279+00:00", "milestone": null, "updated_on": "2016-09-20T23:28:52.284357+00:00", "type": "issue", "id": 1687}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1688/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1688.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1688/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1688/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1688/crash-on-topic-visualization-osx"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1688/vote"}}, "reporter": {"display_name": "Denys Kotelovych", "uuid": "{d5d4aed9-44fc-4a54-9c61-5b97c922b704}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd5d4aed9-44fc-4a54-9c61-5b97c922b704%7D"}, "html": {"href": "https://bitbucket.org/%7Bd5d4aed9-44fc-4a54-9c61-5b97c922b704%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/68635560755ca7c3bc83f04c7fb6cf5bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDK-3.png"}}, "nickname": "ilidar", "type": "user", "account_id": "557058:5b894372-fdd6-4476-ba24-d32157fe5572"}, "title": "Crash on Topic Visualization (osx)", "component": {"name": "os::osx", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/126618.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "**Steps to reproduce:**\r\n\r\n1. Load model;\r\n\r\n2. Open Topic Visualization;\r\n\r\n3. Select /gazebo/default/sensors_car/hokuyo/laser/scan;\r\n", "markup": "markdown", "html": "<p><strong>Steps to reproduce:</strong></p>\n<ol>\n<li>\n<p>Load model;</p>\n</li>\n<li>\n<p>Open Topic Visualization;</p>\n</li>\n<li>\n<p>Select /gazebo/default/sensors_car/hokuyo/laser/scan;</p>\n</li>\n</ol>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-30T09:49:02.443233+00:00", "milestone": null, "updated_on": "2016-09-14T19:45:39.459283+00:00", "type": "issue", "id": 1688}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1689/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1689.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1689/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1689/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1689/simbody-crashes-when-attempting-to-use-pid"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1689/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Simbody crashes when attempting to use PID", "component": {"name": "physics::SimbodyPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122885.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "So I have a simulation of a robot, I am trying to get it to walk, but alas if I try to Joint_CMDs with position values to get it to move the simulation instantly crashes. Furthermore, the simulation is prone to crash after a while when I get the robot walking use forces. It will walk a decent distance and the simulation will just suddenly crash. Both of these crashes provide the exact same error\r\n\r\n\r\n```\r\n#!\r\nterminate called after throwing an instance of 'SimTK::Exception::StageTooLow'\r\n  what():  SimTK Exception thrown at StateImpl.h:1667:\r\n  Expected stage to be at least Time in StateImpl::getCacheEntry() but current stage was Instance\r\n\r\n\r\n```\r\n\r\nSteps to reproduce:\r\nAttempt to set the joint position, say at 1.5 radians and watch it crash.", "markup": "markdown", "html": "<p>So I have a simulation of a robot, I am trying to get it to walk, but alas if I try to Joint_CMDs with position values to get it to move the simulation instantly crashes. Furthermore, the simulation is prone to crash after a while when I get the robot walking use forces. It will walk a decent distance and the simulation will just suddenly crash. Both of these crashes provide the exact same error</p>\n<div class=\"codehilite\"><pre><span></span>terminate called after throwing an instance of &#39;SimTK::Exception::StageTooLow&#39;\n  what():  SimTK Exception thrown at StateImpl.h:1667:\n  Expected stage to be at least Time in StateImpl::getCacheEntry() but current stage was Instance\n</pre></div>\n\n\n<p>Steps to reproduce:\nAttempt to set the joint position, say at 1.5 radians and watch it crash.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-07-30T17:41:39.257146+00:00", "milestone": null, "updated_on": "2015-08-06T18:29:04.391494+00:00", "type": "issue", "id": 1689}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1690/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1690.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1690/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1690/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1690/hydraplugin-fails-to-work-occasionally"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1690/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "HydraPlugin fails to work occasionally", "component": {"name": "tools", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132355.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Sometimes my hydra razer device is recognized, sometimes not, pending which device number it shows up as. If the device `/dev/hidrawXX` where XX < 6, then my device is [recognized](#!/osrf/gazebo/src/8c5ba03fc9bf29de8d472a5dc99e3ba645b4dfda/plugins/HydraPlugin.cc?at=default#HydraPlugin.cc-114). We should consider relaxing the magic number 6.", "markup": "markdown", "html": "<p>Sometimes my hydra razer device is recognized, sometimes not, pending which device number it shows up as. If the device <code>/dev/hidrawXX</code> where XX &lt; 6, then my device is <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/8c5ba03fc9bf29de8d472a5dc99e3ba645b4dfda/plugins/HydraPlugin.cc?at=default#HydraPlugin.cc-114\" rel=\"nofollow\">recognized</a>. We should consider relaxing the magic number 6.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-08-01T00:23:23.524842+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:18.922228+00:00", "type": "issue", "id": 1690}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1691/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1691.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1691/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1691/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1691/intl-linking-error-in-os-x-yosemite-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1691/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "intl linking error in OS X Yosemite when manually building", "component": {"name": "os::osx", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/126618.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "I have an issue when building gazebo6 \"manually\" from source. \r\nI have installed gazebo dependencies using brew with : \r\n```\r\nbrew install `brew deps --skip-optional --1 gazebo6 | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n/ /g'`\r\n```\r\n\r\nThen I try to build the gazebo6 branch, but I get a linking error:\r\n```\r\nSilvios-iMac:build traversaro$ make \r\n[  0%] Built target gazebo_opende_ou\r\n[  1%] Built target gazebo_gimpact\r\n[  5%] Built target gazebo_opcode\r\n[ 13%] Built target gazebo_ode\r\n[ 14%] Built target gazebo_math\r\n[ 18%] Built target gazebo_common\r\n[ 18%] Built target gazebomsgs_out\r\n[ 18%] Linking CXX shared library libgazebo_msgs.dylib\r\nld: library not found for -lintl\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [gazebo/msgs/libgazebo_msgs.6.1.0.dylib] Error 1\r\nmake[1]: *** [gazebo/msgs/CMakeFiles/gazebo_msgs.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n\r\nThe packages installed by brew are:\r\n\r\n```\r\nSilvios-iMac:~ traversaro$ brew list\r\nace\t\tboost\t\tdoxygen\t\tfreetype\tgiflib\t\tignition-math\tjpeg\t\tlibgeotiff\tlibtiff\t\tlzlib\t\togre\t\tprotobuf-c\tsdl\t\ttbb\t\tveclibfort\r\nasl\t\tbrew-cask\teigen\t\tfreexl\t\tglib\t\tignition-math2\tjson-c\t\tliblwgeom\tlibtool\t\tmercurial\topen-mpi\tqt\t\tsdl_gfx\t\ttinyxml\t\twebp\r\nassimp\t\tbullet\t\tfcl\t\tgcc\t\tgmp\t\tipopt\t\tlame\t\tlibmpc\t\tlibvo-aacenc\tmpfr\t\topenssl\t\tqt5\t\tsdl_image\ttinyxml2\tx264\r\nautoconf\tcmake\t\tffmpeg\t\tgdal\t\tgsl\t\tisl\t\tlibccd\t\tlibpng\t\tlibxml2\t\tmumps\t\tpkg-config\treadline\tsimbody\t\turdfdom\t\txvid\r\nautomake\tconsole_bridge\tflann\t\tgeos\t\tgts\t\tiwyu\t\tlibevent\tlibspatialite\tlibzzip\t\tnetpbm\t\tproj\t\tscalapack\tsqlite\t\turdfdom_headers\r\nbash-completion\tdartsim4\tfreeimage\tgettext\t\thdf5\t\tjasper\t\tlibffi\t\tlibtar\t\tlua\t\tode\t\tprotobuf\tsdformat3\tszip\t\tvalgrind\r\n```\r\n\r\nIf I try to compile gazebo6 with brew, everything works fine. ", "markup": "markdown", "html": "<p>I have an issue when building gazebo6 \"manually\" from source. \nI have installed gazebo dependencies using brew with : </p>\n<div class=\"codehilite\"><pre><span></span>brew install `brew deps --skip-optional --1 gazebo6 | sed -e &#39;:a&#39; -e &#39;N&#39; -e &#39;$!ba&#39; -e &#39;s/\\n/ /g&#39;`\n</pre></div>\n\n\n<p>Then I try to build the gazebo6 branch, but I get a linking error:</p>\n<div class=\"codehilite\"><pre><span></span>Silvios-iMac:build traversaro$ make \n[  0%] Built target gazebo_opende_ou\n[  1%] Built target gazebo_gimpact\n[  5%] Built target gazebo_opcode\n[ 13%] Built target gazebo_ode\n[ 14%] Built target gazebo_math\n[ 18%] Built target gazebo_common\n[ 18%] Built target gazebomsgs_out\n[ 18%] Linking CXX shared library libgazebo_msgs.dylib\nld: library not found for -lintl\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [gazebo/msgs/libgazebo_msgs.6.1.0.dylib] Error 1\nmake[1]: *** [gazebo/msgs/CMakeFiles/gazebo_msgs.dir/all] Error 2\nmake: *** [all] Error 2\n</pre></div>\n\n\n<p>The packages installed by brew are:</p>\n<div class=\"codehilite\"><pre><span></span>Silvios-iMac:~ traversaro$ brew list\nace     boost       doxygen     freetype    giflib      ignition-math   jpeg        libgeotiff  libtiff     lzlib       ogre        protobuf-c  sdl     tbb     veclibfort\nasl     brew-cask   eigen       freexl      glib        ignition-math2  json-c      liblwgeom   libtool     mercurial   open-mpi    qt      sdl_gfx     tinyxml     webp\nassimp      bullet      fcl     gcc     gmp     ipopt       lame        libmpc      libvo-aacenc    mpfr        openssl     qt5     sdl_image   tinyxml2    x264\nautoconf    cmake       ffmpeg      gdal        gsl     isl     libccd      libpng      libxml2     mumps       pkg-config  readline    simbody     urdfdom     xvid\nautomake    console_bridge  flann       geos        gts     iwyu        libevent    libspatialite   libzzip     netpbm      proj        scalapack   sqlite      urdfdom_headers\nbash-completion dartsim4    freeimage   gettext     hdf5        jasper      libffi      libtar      lua     ode     protobuf    sdformat3   szip        valgrind\n</pre></div>\n\n\n<p>If I try to compile gazebo6 with brew, everything works fine. </p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-08-04T08:34:42.971895+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:03.483056+00:00", "type": "issue", "id": 1691}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1692/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1692.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1692/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1692/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1692/find_package-gazebo-deletes-results-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1692/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "find_package(gazebo) deletes results of find_package(Boost)?", "component": {"name": "build", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/132954.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "When building [ihmc_ros](https://bitbucket.org/ihmcrobotics/ihmc_ros) against gazebo5, @hsu and I experienced a Boost linking error, even though [find_package(Boost) is called](https://bitbucket.org/ihmcrobotics/ihmc_ros/src/a782bfec4d67e2189592e5f00610f22aeb41f59b/ihmc_gazebo/CMakeLists.txt?at=develop#CMakeLists.txt-16). With some debugging, I found that the `Boost_LIBRARIES` variable was populated immediately after calling `find_package(Boost)` but empty after [find_package(gazebo)](https://bitbucket.org/ihmcrobotics/ihmc_ros/src/a782bfec4d67e2189592e5f00610f22aeb41f59b/ihmc_gazebo/CMakeLists.txt?at=develop#CMakeLists.txt-19) was called. [Moving the find_package(Boost) call](https://bitbucket.org/ihmcrobotics/ihmc_ros/pull-requests/5/missing-boost-flags/diff#comment-8799515) after `find_package(gazebo)` fixed the problem for me.", "markup": "markdown", "html": "<p>When building <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ihmcrobotics/ihmc_ros\" rel=\"nofollow\">ihmc_ros</a> against gazebo5, @hsu and I experienced a Boost linking error, even though <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ihmcrobotics/ihmc_ros/src/a782bfec4d67e2189592e5f00610f22aeb41f59b/ihmc_gazebo/CMakeLists.txt?at=develop#CMakeLists.txt-16\" rel=\"nofollow\">find_package(Boost) is called</a>. With some debugging, I found that the <code>Boost_LIBRARIES</code> variable was populated immediately after calling <code>find_package(Boost)</code> but empty after <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ihmcrobotics/ihmc_ros/src/a782bfec4d67e2189592e5f00610f22aeb41f59b/ihmc_gazebo/CMakeLists.txt?at=develop#CMakeLists.txt-19\" rel=\"nofollow\">find_package(gazebo)</a> was called. <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ihmcrobotics/ihmc_ros/pull-requests/5/missing-boost-flags/diff#comment-8799515\" rel=\"nofollow\">Moving the find_package(Boost) call</a> after <code>find_package(gazebo)</code> fixed the problem for me.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-08-05T00:35:37.020492+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:02.544508+00:00", "type": "issue", "id": 1692}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1693/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1693.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1693/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1693/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1693/missing-hot-key-for-global-coordinates"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1693/vote"}}, "reporter": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "title": "Missing hot key for global coordinates", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While translating, you can press shift to go from local to global coordinates. This is not in the hot key table.\r\n\r\n", "markup": "markdown", "html": "<p>While translating, you can press shift to go from local to global coordinates. This is not in the hot key table.</p>", "type": "rendered"}, "assignee": {"display_name": "Steffi Paepcke", "uuid": "{88ec2edf-5653-4e93-b139-6f2418d9fde5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B88ec2edf-5653-4e93-b139-6f2418d9fde5%7D"}, "html": {"href": "https://bitbucket.org/%7B88ec2edf-5653-4e93-b139-6f2418d9fde5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/spaepcke/avatar/"}}, "nickname": "spaepcke", "type": "user", "account_id": null}, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-08-05T22:09:22.031226+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:32.264767+00:00", "type": "issue", "id": 1693}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1694/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1694.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1694/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1694/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1694/with-world-solver-type"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1694/vote"}}, "reporter": {"display_name": "Olivier Crave", "uuid": "{c2c9ac10-3ca6-45ef-a19b-d3a76d065296}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D"}, "html": {"href": "https://bitbucket.org/%7Bc2c9ac10-3ca6-45ef-a19b-d3a76d065296%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a4e0f2b75ca0affe5c82b9650a623d0dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsOC-4.png"}}, "nickname": "ocrave", "type": "user", "account_id": "557058:24cd6b3d-30bb-4c42-9e4b-f5836c392874"}, "title": "With world solver type, GetRelativeLinearAccel and GetWorldLinearAccel always return gravity", "component": {"name": "physics::ODEPhysics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122883.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "When ODE is configured to use the **world** physics constraint solver, `GetRelativeLinearAccel` and `GetWorldLinearAccel` always return the gravity even when a link is standing still on a surface. This issue does not appear with the quickstep solver.", "markup": "markdown", "html": "<p>When ODE is configured to use the <strong>world</strong> physics constraint solver, <code>GetRelativeLinearAccel</code> and <code>GetWorldLinearAccel</code> always return the gravity even when a link is standing still on a surface. This issue does not appear with the quickstep solver.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-08-06T07:50:42.022187+00:00", "milestone": null, "updated_on": "2017-05-17T17:34:17.642242+00:00", "type": "issue", "id": 1694}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1695/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1695.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1695/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1695/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1695/add-the-move-to-command-to-the-gz-camera"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1695/vote"}}, "reporter": {"display_name": "Aaron Gokaslan", "uuid": "{c8f96c4f-5232-4920-9e55-b1b22db765b7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D"}, "html": {"href": "https://bitbucket.org/%7Bc8f96c4f-5232-4920-9e55-b1b22db765b7%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Skylion007/avatar/"}}, "nickname": "Skylion007", "type": "user", "account_id": null}, "title": "Add the \"move to\" command to the gz camera utility and messaging", "component": {"name": "transport", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122882.json"}}}, "votes": 0, "watches": 0, "content": {"raw": "This seems like a pretty useful feature to have for both messaging and console commands. It's a very useful feature in the GUI and it's shame I can't programmatically call it without writing my own custom plugin.", "markup": "markdown", "html": "<p>This seems like a pretty useful feature to have for both messaging and console commands. It's a very useful feature in the GUI and it's shame I can't programmatically call it without writing my own custom plugin.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-08-06T15:24:25.340745+00:00", "milestone": null, "updated_on": "2015-08-06T15:24:25.340745+00:00", "type": "issue", "id": 1695}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1696/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1696.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1696/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1696/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1696/expose-joint-motor-functionality"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1696/vote"}}, "reporter": {"display_name": "Elte Hupkes", "uuid": "{f23aa1a9-ae57-493f-8169-fbb59b3eae43}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D"}, "html": {"href": "https://bitbucket.org/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8560ee94d50ba277c411499a45b3d732d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEH-5.png"}}, "nickname": "ElteHupkes", "type": "user", "account_id": "557058:b758f523-bdaa-4718-964c-03b825bdea8d"}, "title": "Expose joint motor functionality", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 1, "watches": 1, "content": {"raw": "I'm writing this issue request as a follow-up on [this question on Gazebo Answers](http://answers.gazebosim.org/question/9071/joint-target-velocity-with-maximum-force/), which as I expected did not get any useful reactions as of yet (because I am all but certain it isn't possible).\r\n\r\nModeling a servo motor in Gazebo seems like a common task that should be made both possible and straightforward. A real-life servo typically specifies two properties:\r\n\r\n- A maximum torque\r\n- A maximum angular velocity\r\n\r\nHaving the ability to specify these two constraints in a stable manner therefore seems like a desirable property to me. Currently the only way to approach the behavior is by using PID controller, the performance of which depending on the type of servo and the load attached to it may range from good to very unstable. In my personal project, I've had a PID controller that would spin a joint at 1000% of its maximum angular velocity rating in a single (1/1000s) timestep applying only a fraction of the maximum torque. The same controller would not get the joint to move at all if something was leaning on it - even if the maximum torque would allow it to do so. The problem is that there is no way to enforce both constraints in the same timestep, meaning adaptations cannot be made until it is too late, or we end up specifying a way too small force initially to prevent it. Now I'm not saying that it is impossible to create a PID controller that would handle both these scenarios well, but it is very hard, and more importantly unnecessary when it is quite easy to achieve the functionality in separate physics engines.\r\n\r\nODE exposes a joint motor functionality through the combination of setting `dParamFMax` and `dParamVel` on a joint. Bullet Physics supports the same thing with `btHingeConstraint::enableAngularMotor()`. AFAIK Dart has no direct mechanism for it, but it does allow you to [write a stable controller](http://dart.readthedocs.org/en/tutorials/tutorials/dominoes/#lesson-2c-write-a-stable-pd-controller-for-the-manipulator) by integrating one timestep ahead. I'm not sure about SimBody.\r\n\r\nCurrently, the joint motor functionality of ODE and Bullet is cleverly used to implement Coulomb joint friction (issue #381, pull request #1221). When modeling a servo motor, this functionality is irrelevant: the friction will already be factored into the speed and torque ratings. I therefore propose exposing the joint motor functionality for at least Bullet and ODE, in which it is trivial to do so. It is currently possible to do this for ODE specifically by calling \"Joint->SetParam(\"fmax\", ...)\" in conjunction with `Joint::SetParam(\"vel\", ...)`, but as of aforementioned pull request it throws a warning, and it is obviously very engine specific and a very hacky way of doing things. For Bullet, there is no way to reach the functionality through the Gazebo API. I would very much like to see this exposed, even if it is only for the Bullet and ODE users.", "markup": "markdown", "html": "<p>I'm writing this issue request as a follow-up on <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/9071/joint-target-velocity-with-maximum-force/\" rel=\"nofollow\">this question on Gazebo Answers</a>, which as I expected did not get any useful reactions as of yet (because I am all but certain it isn't possible).</p>\n<p>Modeling a servo motor in Gazebo seems like a common task that should be made both possible and straightforward. A real-life servo typically specifies two properties:</p>\n<ul>\n<li>A maximum torque</li>\n<li>A maximum angular velocity</li>\n</ul>\n<p>Having the ability to specify these two constraints in a stable manner therefore seems like a desirable property to me. Currently the only way to approach the behavior is by using PID controller, the performance of which depending on the type of servo and the load attached to it may range from good to very unstable. In my personal project, I've had a PID controller that would spin a joint at 1000% of its maximum angular velocity rating in a single (1/1000s) timestep applying only a fraction of the maximum torque. The same controller would not get the joint to move at all if something was leaning on it - even if the maximum torque would allow it to do so. The problem is that there is no way to enforce both constraints in the same timestep, meaning adaptations cannot be made until it is too late, or we end up specifying a way too small force initially to prevent it. Now I'm not saying that it is impossible to create a PID controller that would handle both these scenarios well, but it is very hard, and more importantly unnecessary when it is quite easy to achieve the functionality in separate physics engines.</p>\n<p>ODE exposes a joint motor functionality through the combination of setting <code>dParamFMax</code> and <code>dParamVel</code> on a joint. Bullet Physics supports the same thing with <code>btHingeConstraint::enableAngularMotor()</code>. AFAIK Dart has no direct mechanism for it, but it does allow you to <a data-is-external-link=\"true\" href=\"http://dart.readthedocs.org/en/tutorials/tutorials/dominoes/#lesson-2c-write-a-stable-pd-controller-for-the-manipulator\" rel=\"nofollow\">write a stable controller</a> by integrating one timestep ahead. I'm not sure about SimBody.</p>\n<p>Currently, the joint motor functionality of ODE and Bullet is cleverly used to implement Coulomb joint friction (issue <a href=\"#!/osrf/gazebo/issues/381/ode-joints-dont-support-friction-parameter\" rel=\"nofollow\" title=\"ODE Joints don&#39;t support friction parameter\" class=\"ap-connect-link\"><s>#381</s></a>, <a href=\"#!/osrf/gazebo/pull-requests/1221/implement-coulomb-joint-friction-for-ode\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #1221</a>). When modeling a servo motor, this functionality is irrelevant: the friction will already be factored into the speed and torque ratings. I therefore propose exposing the joint motor functionality for at least Bullet and ODE, in which it is trivial to do so. It is currently possible to do this for ODE specifically by calling \"Joint-&gt;SetParam(\"fmax\", ...)\" in conjunction with <code>Joint::SetParam(\"vel\", ...)</code>, but as of aforementioned pull request it throws a warning, and it is obviously very engine specific and a very hacky way of doing things. For Bullet, there is no way to reach the functionality through the Gazebo API. I would very much like to see this exposed, even if it is only for the Bullet and ODE users.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-08-07T12:00:39.177194+00:00", "milestone": null, "updated_on": "2015-08-07T12:00:39.177194+00:00", "type": "issue", "id": 1696}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1697/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1697.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1697/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1697/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1697/textures-with-double-passes-not-loading"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1697/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Textures with double passes not loading properly", "component": {"name": "rendering", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122881.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "This is how the [RoboCup 3DSim](#!/osrf/gazebo_models/src/ad654246d842afd953a558f74425c6f3a9892132/robocup_3Dsim_field/) Field is loading now (it used to load properly):\r\n\r\n![texture.png](data/bitbucket.org/repo/jgXqbo/images/3808667559-texture.png)\r\n\r\nThis is the defective material [script](#!/osrf/gazebo_models/src/ad654246d842afd953a558f74425c6f3a9892132/robocup_3Dsim_field/materials/scripts/robocup_3Dsim_field.material?at=default):\r\n\r\n~~~\r\nmaterial RoboCup/Grass\r\n{\r\n  technique\r\n  {\r\n    pass\r\n    {\r\n      ambient 1.0 1.0 1.0 1.0\r\n      diffuse 1.0 1.0 1.0 1.0\r\n      specular 0.2 0.2 0.2 1.0 12.5\r\n\r\n      texture_unit\r\n      {\r\n        scale 1 1\r\n        texture field.png\r\n        filtering trilinear\r\n      }\r\n    }\r\n\r\n    pass\r\n    {\r\n      ambient 1.0 1.0 1.0 1.0\r\n      diffuse 1.0 1.0 1.0 1.0\r\n      specular 0.2 0.2 0.2 1.0 12.5\r\n\r\n      scene_blend alpha_blend\r\n      depth_write off\r\n      lighting off\r\n\r\n      texture_unit\r\n      {\r\n        texture lines.png\r\n        filtering trilinear\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n~~~\r\n\r\nIf I remove the second pass, the first pass loads fine. Probably something has been changed recently which makes the passes interfere with each other.\r\n\r\n![texture2.png](data/bitbucket.org/repo/jgXqbo/images/2491953679-texture2.png)", "markup": "markdown", "html": "<p>This is how the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/src/ad654246d842afd953a558f74425c6f3a9892132/robocup_3Dsim_field/\" rel=\"nofollow\">RoboCup 3DSim</a> Field is loading now (it used to load properly):</p>\n<p><img alt=\"texture.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/3808667559-texture.png\" /></p>\n<p>This is the defective material <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_models/src/ad654246d842afd953a558f74425c6f3a9892132/robocup_3Dsim_field/materials/scripts/robocup_3Dsim_field.material?at=default\" rel=\"nofollow\">script</a>:</p>\n<div class=\"codehilite\"><pre><span></span>material RoboCup/Grass\n{\n  technique\n  {\n    pass\n    {\n      ambient 1.0 1.0 1.0 1.0\n      diffuse 1.0 1.0 1.0 1.0\n      specular 0.2 0.2 0.2 1.0 12.5\n\n      texture_unit\n      {\n        scale 1 1\n        texture field.png\n        filtering trilinear\n      }\n    }\n\n    pass\n    {\n      ambient 1.0 1.0 1.0 1.0\n      diffuse 1.0 1.0 1.0 1.0\n      specular 0.2 0.2 0.2 1.0 12.5\n\n      scene_blend alpha_blend\n      depth_write off\n      lighting off\n\n      texture_unit\n      {\n        texture lines.png\n        filtering trilinear\n      }\n    }\n\n  }\n}\n</pre></div>\n\n\n<p>If I remove the second pass, the first pass loads fine. Probably something has been changed recently which makes the passes interfere with each other.</p>\n<p><img alt=\"texture2.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/2491953679-texture2.png\" /></p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-08-07T17:53:24.936700+00:00", "milestone": null, "updated_on": "2016-09-14T19:44:05.661847+00:00", "type": "issue", "id": 1697}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1698/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1698.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1698/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1698/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1698/separate-links-and-joints-on-left-panel"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1698/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Separate links and joints on left panel model list widget", "component": {"name": "gui", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122878.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Right now links and joints are all listed under the model name and you must click them to find out if it's a link or a joint. \r\n\r\nI think currently all inks come listed before all joints, but it would be much clearer if they were under separate lists. ", "markup": "markdown", "html": "<p>Right now links and joints are all listed under the model name and you must click them to find out if it's a link or a joint. </p>\n<p>I think currently all inks come listed before all joints, but it would be much clearer if they were under separate lists. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-08-10T17:56:06.887963+00:00", "milestone": null, "updated_on": "2016-09-14T19:24:21.808451+00:00", "type": "issue", "id": 1698}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1699/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1699.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1699/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1699/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1699/create-a-standardized-way-for-plugins-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1699/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Create a standardized way for plugins to expose their required parameters", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Plugins can take parameters, but currently there's no standard way for them to expose which parameters they take.\r\n\r\nTake the [InitialVelocityPlugin](#!/osrf/gazebo/src/8e2e8aa73d30c560a298d94f721af62bf2f0a523/plugins/InitialVelocityPlugin.cc) for example, which is used in [this](#!/osrf/gazebo/src/8e2e8aa73d30c560a298d94f721af62bf2f0a523/worlds/initial_velocity.world) demo world. It can take `<linear>` and `<angular>` parameters and both are optional. But without looking into the source code, there's no way to know what parameters it can take.\r\n\r\nThe motivation for requesting this feature is to integrate plugins into the model editor in convenient ways. It would be nice to offer users a list of pre-existing plugins such as the initial velocity plugin and let users fill a form with parameters. But to offer the interface, the editor needs to know which parameters the plugin accepts.\r\n\r\nOne way I can think of doing this is having virtual set/get functions and those plugins which implement these get to be used in the editor. Something like: \r\n\r\n~~~\r\n/// \\brief Returns a map with this plugin's parameters key/value pairs.\r\npublic: virtual std::map<std::string, std::string> ModelPlugin::Params() const {}\r\n\r\n/// \\brief Set the value for parameter with the given key\r\n/// \\return True if successful\r\npublic: virtual bool ModelPlugin::SetParam(std::string _key, std::string _value) const {}\r\n~~~\r\n\r\nThis doesn't say if parameters are optional, required or repeated though, so probably some other structure makes more sense.\r\n", "markup": "markdown", "html": "<p>Plugins can take parameters, but currently there's no standard way for them to expose which parameters they take.</p>\n<p>Take the <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/8e2e8aa73d30c560a298d94f721af62bf2f0a523/plugins/InitialVelocityPlugin.cc\" rel=\"nofollow\">InitialVelocityPlugin</a> for example, which is used in <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo/src/8e2e8aa73d30c560a298d94f721af62bf2f0a523/worlds/initial_velocity.world\" rel=\"nofollow\">this</a> demo world. It can take <code>&lt;linear&gt;</code> and <code>&lt;angular&gt;</code> parameters and both are optional. But without looking into the source code, there's no way to know what parameters it can take.</p>\n<p>The motivation for requesting this feature is to integrate plugins into the model editor in convenient ways. It would be nice to offer users a list of pre-existing plugins such as the initial velocity plugin and let users fill a form with parameters. But to offer the interface, the editor needs to know which parameters the plugin accepts.</p>\n<p>One way I can think of doing this is having virtual set/get functions and those plugins which implement these get to be used in the editor. Something like: </p>\n<div class=\"codehilite\"><pre><span></span>/// \\brief Returns a map with this plugin&#39;s parameters key/value pairs.\npublic: virtual std::map&lt;std::string, std::string&gt; ModelPlugin::Params() const {}\n\n/// \\brief Set the value for parameter with the given key\n/// \\return True if successful\npublic: virtual bool ModelPlugin::SetParam(std::string _key, std::string _value) const {}\n</pre></div>\n\n\n<p>This doesn't say if parameters are optional, required or repeated though, so probably some other structure makes more sense.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "all", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/225575.json"}}}, "edited_on": null, "created_on": "2015-08-10T21:13:52.271372+00:00", "milestone": null, "updated_on": "2016-09-14T19:23:22.812840+00:00", "type": "issue", "id": 1699}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo/issues/1700/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo/issues/1700.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1700/watch"}, "comments": {"href": "data/repositories/osrf/gazebo/issues/1700/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo/issues/1700/copy-pasting-dae-models-is-broken"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/issues/1700/vote"}}, "reporter": {"display_name": "jasonzliang NA", "uuid": "{663c75f1-dde2-425c-aa25-68ad2f4eb5ec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D"}, "html": {"href": "https://bitbucket.org/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c/5b9c099e-6241-49a1-ba1d-fabcca24c6c3/128"}}, "nickname": "jasonzliang", "type": "user", "account_id": "557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c"}, "title": "Copy pasting DAE models is broken", "component": {"name": "physics", "links": {"self": {"href": "data/repositories/osrf/gazebo/components/122876.json"}}}, "votes": 0, "watches": 0, "content": {"raw": "When you select and copy/paste a model with DAE mesh, the copy is much larger than the original. The ball on the right below is the original model, the ball on the left is the copy.\r\n\r\n![lol.png](data/bitbucket.org/repo/jgXqbo/images/1502553317-lol.png)", "markup": "markdown", "html": "<p>When you select and copy/paste a model with DAE mesh, the copy is much larger than the original. The ball on the right below is the original model, the ball on the left is the copy.</p>\n<p><img alt=\"lol.png\" src=\"data/bitbucket.org/repo/jgXqbo/images/1502553317-lol.png\" /></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "6.0", "links": {"self": {"href": "data/repositories/osrf/gazebo/versions/170782.json"}}}, "edited_on": null, "created_on": "2015-08-10T21:42:25.396851+00:00", "milestone": null, "updated_on": "2015-08-10T21:44:39.454188+00:00", "type": "issue", "id": 1700}], "pagelen": 100, "size": 2710, "page": 17, "previous": "data/repositories/osrf/gazebo/issues_page=16.json"}