{"rendered": {"message": {"raw": "Several changes in the same package:\n\n- A top level Simulator class. Managues the Gui, the world, error system, etc.\n- Start of the SaveXML feature. It is not complete, in fact it is not working right now.\nI want to hear comments on this implementation. I will work on this feature the few days. When complete I'll add proper documentation to functions.\nOnly controller and one controller has been changed, it makes sense to add this functionality to controllers?\nWhat about Joints?\n- String class, allow us to have a simple SetValue () method instead of values for every variable type\nThe types are converted automagically thanks to the constructors\n- A OgreCreator class.\nI felt that OgreAdaptor was a miscellaneous class and creating entities was one of its tasks that could be isolated in a specific class for that. I am not sure is a great idea but at least some more rendering dependent code (CreatePlane, CreatBasicShapes) when to the rendering/ directory\n- Start of the end of Global as it is now. The Gui is done for Gazebo on purpose, so we dont need to isolate it. Just to show the concept the Gui now call Simulator for exiting. In the near future Pausing time, counting time, etc. Will be moved to calls to Simulator. Other functionalities to the corresponding objects.", "markup": "markdown", "html": "<p>Several changes in the same package:</p>\n<ul>\n<li>A top level Simulator class. Managues the Gui, the world, error system, etc.</li>\n<li>Start of the SaveXML feature. It is not complete, in fact it is not working right now.<br />\nI want to hear comments on this implementation. I will work on this feature the few days. When complete I'll add proper documentation to functions.<br />\nOnly controller and one controller has been changed, it makes sense to add this functionality to controllers?<br />\nWhat about Joints?</li>\n<li>String class, allow us to have a simple SetValue () method instead of values for every variable type<br />\nThe types are converted automagically thanks to the constructors</li>\n<li>A OgreCreator class.<br />\nI felt that OgreAdaptor was a miscellaneous class and creating entities was one of its tasks that could be isolated in a specific class for that. I am not sure is a great idea but at least some more rendering dependent code (CreatePlane, CreatBasicShapes) when to the rendering/ directory</li>\n<li>Start of the end of Global as it is now. The Gui is done for Gazebo on purpose, so we dont need to isolate it. Just to show the concept the Gui now call Simulator for exiting. In the near future Pausing time, counting time, etc. Will be moved to calls to Simulator. Other functionalities to the corresponding objects.</li>\n</ul>", "type": "rendered"}}, "hash": "1a09120883ea5da16d9957167645b381c6d06fc6", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/1a09120883ea5da16d9957167645b381c6d06fc6.json"}, "comments": {"href": "data/repositories/osrf/gazebo/commit/1a09120883ea5da16d9957167645b381c6d06fc6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/patch/1a09120883ea5da16d9957167645b381c6d06fc6"}, "html": {"href": "#!/osrf/gazebo/commits/1a09120883ea5da16d9957167645b381c6d06fc6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/1a09120883ea5da16d9957167645b381c6d06fc6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/commit/1a09120883ea5da16d9957167645b381c6d06fc6/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/commit/1a09120883ea5da16d9957167645b381c6d06fc6/statuses_page=1.json"}}, "author": {"raw": "robotos", "type": "author"}, "summary": {"raw": "Several changes in the same package:\n\n- A top level Simulator class. Managues the Gui, the world, error system, etc.\n- Start of the SaveXML feature. It is not complete, in fact it is not working right now.\nI want to hear comments on this implementation. I will work on this feature the few days. When complete I'll add proper documentation to functions.\nOnly controller and one controller has been changed, it makes sense to add this functionality to controllers?\nWhat about Joints?\n- String class, allow us to have a simple SetValue () method instead of values for every variable type\nThe types are converted automagically thanks to the constructors\n- A OgreCreator class.\nI felt that OgreAdaptor was a miscellaneous class and creating entities was one of its tasks that could be isolated in a specific class for that. I am not sure is a great idea but at least some more rendering dependent code (CreatePlane, CreatBasicShapes) when to the rendering/ directory\n- Start of the end of Global as it is now. The Gui is done for Gazebo on purpose, so we dont need to isolate it. Just to show the concept the Gui now call Simulator for exiting. In the near future Pausing time, counting time, etc. Will be moved to calls to Simulator. Other functionalities to the corresponding objects.", "markup": "markdown", "html": "<p>Several changes in the same package:</p>\n<ul>\n<li>A top level Simulator class. Managues the Gui, the world, error system, etc.</li>\n<li>Start of the SaveXML feature. It is not complete, in fact it is not working right now.<br />\nI want to hear comments on this implementation. I will work on this feature the few days. When complete I'll add proper documentation to functions.<br />\nOnly controller and one controller has been changed, it makes sense to add this functionality to controllers?<br />\nWhat about Joints?</li>\n<li>String class, allow us to have a simple SetValue () method instead of values for every variable type<br />\nThe types are converted automagically thanks to the constructors</li>\n<li>A OgreCreator class.<br />\nI felt that OgreAdaptor was a miscellaneous class and creating entities was one of its tasks that could be isolated in a specific class for that. I am not sure is a great idea but at least some more rendering dependent code (CreatePlane, CreatBasicShapes) when to the rendering/ directory</li>\n<li>Start of the end of Global as it is now. The Gui is done for Gazebo on purpose, so we dont need to isolate it. Just to show the concept the Gui now call Simulator for exiting. In the near future Pausing time, counting time, etc. Will be moved to calls to Simulator. Other functionalities to the corresponding objects.</li>\n</ul>", "type": "rendered"}, "participants": [], "parents": [{"hash": "bdce36c19fd23e1d84021829f2dc954933a61e0d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/bdce36c19fd23e1d84021829f2dc954933a61e0d.json"}, "html": {"href": "#!/osrf/gazebo/commits/bdce36c19fd23e1d84021829f2dc954933a61e0d"}}}], "date": "2008-01-04T14:00:01+00:00", "message": "Several changes in the same package:\n\n- A top level Simulator class. Managues the Gui, the world, error system, etc.\n- Start of the SaveXML feature. It is not complete, in fact it is not working right now.\nI want to hear comments on this implementation. I will work on this feature the few days. When complete I'll add proper documentation to functions.\nOnly controller and one controller has been changed, it makes sense to add this functionality to controllers?\nWhat about Joints?\n- String class, allow us to have a simple SetValue () method instead of values for every variable type\nThe types are converted automagically thanks to the constructors\n- A OgreCreator class.\nI felt that OgreAdaptor was a miscellaneous class and creating entities was one of its tasks that could be isolated in a specific class for that. I am not sure is a great idea but at least some more rendering dependent code (CreatePlane, CreatBasicShapes) when to the rendering/ directory\n- Start of the end of Global as it is now. The Gui is done for Gazebo on purpose, so we dont need to isolate it. Just to show the concept the Gui now call Simulator for exiting. In the near future Pausing time, counting time, etc. Will be moved to calls to Simulator. Other functionalities to the corresponding objects.", "type": "commit", "git_hash": "229254d0e6f2361738145b7d5b81158e0be4e5b8", "tags": null, "branches": "gazebo"}