{"rendered": {"message": {"raw": "remove calls in Model::Load()\nthis->SetFrictionMode( **this->enableFrictionP );\nthis->SetCollideMode( **this->collideP );\nthis->SetLaserFiducialId( **this->laserFiducialP);\nthis->SetLaserRetro( **this->laserRetroP);\nthese are redundant as same defaults are set by children objects and overwrite any children settings.\n\nI observed occasional segfault on amd64 during add an assert of graphicsHandler in Model::Load(), see personalrobots ticket 1797.  After adding assert(graphicsHandler) in Model::Load(), this problem went away. hm...", "markup": "markdown", "html": "<p>remove calls in Model::Load()<br />\nthis-&gt;SetFrictionMode( <strong>this-&gt;enableFrictionP );<br />\nthis-&gt;SetCollideMode( </strong>this-&gt;collideP );<br />\nthis-&gt;SetLaserFiducialId( <strong>this-&gt;laserFiducialP);<br />\nthis-&gt;SetLaserRetro( </strong>this-&gt;laserRetroP);<br />\nthese are redundant as same defaults are set by children objects and overwrite any children settings.</p>\n<p>I observed occasional segfault on amd64 during add an assert of graphicsHandler in Model::Load(), see personalrobots ticket 1797.  After adding assert(graphicsHandler) in Model::Load(), this problem went away. hm...</p>", "type": "rendered"}}, "hash": "c163249fa017497a94cd1607aafe7044688ea6e3", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/c163249fa017497a94cd1607aafe7044688ea6e3.json"}, "comments": {"href": "data/repositories/osrf/gazebo/commit/c163249fa017497a94cd1607aafe7044688ea6e3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/patch/c163249fa017497a94cd1607aafe7044688ea6e3"}, "html": {"href": "#!/osrf/gazebo/commits/c163249fa017497a94cd1607aafe7044688ea6e3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/c163249fa017497a94cd1607aafe7044688ea6e3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/commit/c163249fa017497a94cd1607aafe7044688ea6e3/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/commit/c163249fa017497a94cd1607aafe7044688ea6e3/statuses_page=1.json"}}, "author": {"raw": "hsujohnhsu", "type": "author"}, "summary": {"raw": "remove calls in Model::Load()\nthis->SetFrictionMode( **this->enableFrictionP );\nthis->SetCollideMode( **this->collideP );\nthis->SetLaserFiducialId( **this->laserFiducialP);\nthis->SetLaserRetro( **this->laserRetroP);\nthese are redundant as same defaults are set by children objects and overwrite any children settings.\n\nI observed occasional segfault on amd64 during add an assert of graphicsHandler in Model::Load(), see personalrobots ticket 1797.  After adding assert(graphicsHandler) in Model::Load(), this problem went away. hm...", "markup": "markdown", "html": "<p>remove calls in Model::Load()<br />\nthis-&gt;SetFrictionMode( <strong>this-&gt;enableFrictionP );<br />\nthis-&gt;SetCollideMode( </strong>this-&gt;collideP );<br />\nthis-&gt;SetLaserFiducialId( <strong>this-&gt;laserFiducialP);<br />\nthis-&gt;SetLaserRetro( </strong>this-&gt;laserRetroP);<br />\nthese are redundant as same defaults are set by children objects and overwrite any children settings.</p>\n<p>I observed occasional segfault on amd64 during add an assert of graphicsHandler in Model::Load(), see personalrobots ticket 1797.  After adding assert(graphicsHandler) in Model::Load(), this problem went away. hm...</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "ef119c1ec1bbf3f6c1cb46905c0882c370efd922", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/ef119c1ec1bbf3f6c1cb46905c0882c370efd922.json"}, "html": {"href": "#!/osrf/gazebo/commits/ef119c1ec1bbf3f6c1cb46905c0882c370efd922"}}}], "date": "2009-07-11T22:32:13+00:00", "message": "remove calls in Model::Load()\nthis->SetFrictionMode( **this->enableFrictionP );\nthis->SetCollideMode( **this->collideP );\nthis->SetLaserFiducialId( **this->laserFiducialP);\nthis->SetLaserRetro( **this->laserRetroP);\nthese are redundant as same defaults are set by children objects and overwrite any children settings.\n\nI observed occasional segfault on amd64 during add an assert of graphicsHandler in Model::Load(), see personalrobots ticket 1797.  After adding assert(graphicsHandler) in Model::Load(), this problem went away. hm...", "type": "commit", "git_hash": "6495a2f0e3b61376366b2d123e5460147cf04512", "tags": null, "branches": "default"}