{"rendered": {"message": {"raw": "fix sensor initializaiton race condition.\n\na model plugin looking for a sensor in its Load() function by calling\n  sensors::SensorManager::Instance()->GetSensor( name );\n\ncould fail based on how fast SensorManger::Update is called in a separate thread.\n\nThe solution here is to add a check to make sure all sensors in SensorManager have been initialized before calling Model::LoadPlugins().", "markup": "markdown", "html": "<p>fix sensor initializaiton race condition.</p>\n<p>a model plugin looking for a sensor in its Load() function by calling<br />\n  sensors::SensorManager::Instance()-&gt;GetSensor( name );</p>\n<p>could fail based on how fast SensorManger::Update is called in a separate thread.</p>\n<p>The solution here is to add a check to make sure all sensors in SensorManager have been initialized before calling Model::LoadPlugins().</p>", "type": "rendered"}}, "hash": "8fdf1cf887ee0d07a1b4ab20b205a02b56451f25", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo.json"}, "html": {"href": "#!/osrf/gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}ts=1694483"}}, "type": "repository", "name": "gazebo", "full_name": "osrf/gazebo", "uuid": "{51a0cd5d-8697-4eb1-8b08-e919ee881e1c}"}, "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/8fdf1cf887ee0d07a1b4ab20b205a02b56451f25.json"}, "comments": {"href": "data/repositories/osrf/gazebo/commit/8fdf1cf887ee0d07a1b4ab20b205a02b56451f25/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/patch/8fdf1cf887ee0d07a1b4ab20b205a02b56451f25"}, "html": {"href": "#!/osrf/gazebo/commits/8fdf1cf887ee0d07a1b4ab20b205a02b56451f25"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/diff/8fdf1cf887ee0d07a1b4ab20b205a02b56451f25"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo/commit/8fdf1cf887ee0d07a1b4ab20b205a02b56451f25/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo/commit/8fdf1cf887ee0d07a1b4ab20b205a02b56451f25/statuses_page=1.json"}}, "author": {"raw": "John Hsu <johnhsu@willowgarage.com>", "type": "author", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}, "summary": {"raw": "fix sensor initializaiton race condition.\n\na model plugin looking for a sensor in its Load() function by calling\n  sensors::SensorManager::Instance()->GetSensor( name );\n\ncould fail based on how fast SensorManger::Update is called in a separate thread.\n\nThe solution here is to add a check to make sure all sensors in SensorManager have been initialized before calling Model::LoadPlugins().", "markup": "markdown", "html": "<p>fix sensor initializaiton race condition.</p>\n<p>a model plugin looking for a sensor in its Load() function by calling<br />\n  sensors::SensorManager::Instance()-&gt;GetSensor( name );</p>\n<p>could fail based on how fast SensorManger::Update is called in a separate thread.</p>\n<p>The solution here is to add a check to make sure all sensors in SensorManager have been initialized before calling Model::LoadPlugins().</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "faa4e71620f1d06f6a5c4687808d05bc91c842ef", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo/commit/faa4e71620f1d06f6a5c4687808d05bc91c842ef.json"}, "html": {"href": "#!/osrf/gazebo/commits/faa4e71620f1d06f6a5c4687808d05bc91c842ef"}}}], "date": "2012-10-16T17:02:17+00:00", "message": "fix sensor initializaiton race condition.\n\na model plugin looking for a sensor in its Load() function by calling\n  sensors::SensorManager::Instance()->GetSensor( name );\n\ncould fail based on how fast SensorManger::Update is called in a separate thread.\n\nThe solution here is to add a check to make sure all sensors in SensorManager have been initialized before calling Model::LoadPlugins().", "type": "commit", "git_hash": "3958443e740d36067ddb57bd43e85b889cdef9c4", "tags": null, "branches": "sensor_init_patch"}